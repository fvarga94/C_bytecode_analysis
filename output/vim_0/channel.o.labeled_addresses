ch_raw_common	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,5:IF,2:SWITCH,0	76
0x40079de	              0x55	                                push rbp	      3984	channel.c	FUNCTION_90
0x40079df	          0x4889e5	                            mov rbp, rsp	      3984	channel.c	FUNCTION_90
0x40079e2	    0x4881ec100400	                          sub rsp, 0x410	      3984	channel.c	FUNCTION_90
0x40079e9	    0x4889bd08fcff	            mov qword [rbp - 0x3f8], rdi	      3984	channel.c	FUNCTION_90
0x40079f0	    0x4889b500fcff	            mov qword [rbp - 0x400], rsi	      3984	channel.c	FUNCTION_90
0x40079f7	    0x8995fcfbffff	            mov dword [rbp - 0x404], edx	      3984	channel.c	FUNCTION_90
0x40079fd	    0x64488b042528	                mov rax, qword fs:[0x28]	      3984	channel.c	FUNCTION_90
0x4007a06	        0x488945f8	                mov qword [rbp - 8], rax	      3984	channel.c	FUNCTION_90
0x4007a0a	            0x31c0	                            xor eax, eax	      3984	channel.c	FUNCTION_90
0x4007a0c	    0x488b8500fcff	            mov rax, qword [rbp - 0x400]	      3993	channel.c	FUNCTION_90
0x4007a13	    0xc70002000000	                      mov dword [rax], 2	      3993	channel.c	FUNCTION_90
0x4007a19	    0x488b8500fcff	            mov rax, qword [rbp - 0x400]	      3994	channel.c	FUNCTION_90
0x4007a20	    0x48c740080000	                  mov qword [rax + 8], 0	      3994	channel.c	FUNCTION_90
0x4007a28	    0x488b8508fcff	            mov rax, qword [rbp - 0x3f8]	      3996	channel.c	FUNCTION_90	CALL_1
0x4007a2f	        0x488d5010	                   lea rdx, [rax + 0x10]	      3996	channel.c	FUNCTION_90	CALL_1
0x4007a33	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3996	channel.c	FUNCTION_90	CALL_1
0x4007a37	          0x4889c6	                            mov rsi, rax	      3996	channel.c	FUNCTION_90	CALL_1
0x4007a3a	          0x4889d7	                            mov rdi, rdx	      3996	channel.c	FUNCTION_90	CALL_1
0x4007a3d	      0xe800000000	                          call 0x4007a42	      3996	channel.c	FUNCTION_90	CALL_1
0x4007a42	    0x48898520fcff	            mov qword [rbp - 0x3e0], rax	      3996	channel.c	FUNCTION_90	CALL_1
0x4007a49	    0x83bdfcfbffff	              cmp dword [rbp - 0x404], 0	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a50	            0x7408	                            je 0x4007a5a	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a52	    0x41b800000000	                              mov r8d, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a58	            0xeb06	                           jmp 0x4007a60	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a5a	    0x41b800000000	                              mov r8d, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a60	    0x488dbd30fcff	                  lea rdi, [rbp - 0x3d0]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a67	    0x8b95fcfbffff	            mov edx, dword [rbp - 0x404]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a6d	    0x488bb520fcff	            mov rsi, qword [rbp - 0x3e0]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a74	    0x488b8508fcff	            mov rax, qword [rbp - 0x3f8]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a7b	        0x4883ec08	                              sub rsp, 8	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a7f	    0x488d8d18fcff	                  lea rcx, [rbp - 0x3e8]	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a86	              0x51	                                push rcx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a87	          0x4d89c1	                              mov r9, r8	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a8a	          0x4989f8	                             mov r8, rdi	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a8d	            0x89d1	                            mov ecx, edx	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a8f	      0xba00000000	                              mov edx, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a94	          0x4889c7	                            mov rdi, rax	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a97	      0xe826fbffff	                    call sym.send_common	      3997	channel.c	FUNCTION_90	CALL_2
0x4007a9c	        0x4883c410	                           add rsp, 0x10	      3997	channel.c	FUNCTION_90	CALL_2
0x4007aa0	    0x48898528fcff	            mov qword [rbp - 0x3d8], rax	      3997	channel.c	FUNCTION_90	CALL_2
0x4007aa7	    0x4883bd28fcff	              cmp qword [rbp - 0x3d8], 0	      3999	channel.c	FUNCTION_90	IF_1
0x4007aaf	            0x7471	                            je 0x4007b22	      3999	channel.c	FUNCTION_90	IF_1
0x4007ab1	    0x83bdfcfbffff	              cmp dword [rbp - 0x404], 0	      3999	channel.c	FUNCTION_90	IF_1
0x4007ab8	            0x7468	                            je 0x4007b22	      3999	channel.c	FUNCTION_90	IF_1
0x4007aba	    0x8b8530fcffff	            mov eax, dword [rbp - 0x3d0]	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x4007ac0	      0x2500020000	                          and eax, 0x200	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x4007ac5	            0x85c0	                           test eax, eax	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x4007ac7	            0x740e	                            je 0x4007ad7	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x4007ac9	    0x8b8528feffff	            mov eax, dword [rbp - 0x1d8]	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007acf	    0x89851cfcffff	            mov dword [rbp - 0x3e4], eax	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007ad5	            0xeb1d	                           jmp 0x4007af4	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x4007ad7	    0x8b9518fcffff	            mov edx, dword [rbp - 0x3e8]	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007add	    0x488b8528fcff	            mov rax, qword [rbp - 0x3d8]	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007ae4	            0x89d6	                            mov esi, edx	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007ae6	          0x4889c7	                            mov rdi, rax	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007ae9	      0xe800000000	                          call 0x4007aee	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007aee	    0x89851cfcffff	            mov dword [rbp - 0x3e4], eax	      4004	channel.c	FUNCTION_90	IF_1	CALL_3
0x4007af4	    0x8bb518fcffff	            mov esi, dword [rbp - 0x3e8]	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007afa	    0x8b951cfcffff	            mov edx, dword [rbp - 0x3e4]	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b00	    0x488b8528fcff	            mov rax, qword [rbp - 0x3d8]	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b07	      0xb901000000	                              mov ecx, 1	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b0c	          0x4889c7	                            mov rdi, rax	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b0f	      0xe88fecffff	             call sym.channel_read_block	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b14	          0x4889c2	                            mov rdx, rax	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b17	    0x488b8500fcff	            mov rax, qword [rbp - 0x400]	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b1e	        0x48895008	                mov qword [rax + 8], rdx	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x4007b22	    0x488d8530fcff	                  lea rax, [rbp - 0x3d0]	      4008	channel.c	FUNCTION_90	CALL_5
0x4007b29	          0x4889c7	                            mov rdi, rax	      4008	channel.c	FUNCTION_90	CALL_5
0x4007b2c	      0xe800000000	                          call 0x4007b31	      4008	channel.c	FUNCTION_90	CALL_5
0x4007b31	              0x90	                                     nop	      4009	channel.c	FUNCTION_90
0x4007b32	        0x488b45f8	                mov rax, qword [rbp - 8]	      4009	channel.c	FUNCTION_90
0x4007b36	    0x644833042528	                xor rax, qword fs:[0x28]	      4009	channel.c	FUNCTION_90
0x4007b3f	            0x7405	                            je 0x4007b46	      4009	channel.c	FUNCTION_90
0x4007b41	      0xe800000000	                          call 0x4007b46	      4009	channel.c	FUNCTION_90
0x4007b46	              0xc9	                                   leave	      4009	channel.c	FUNCTION_90
0x4007b47	              0xc3	                                     ret	      4009	channel.c	FUNCTION_90
has_any_channel	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	8
0x4000553	              0x55	                                push rbp	       298	channel.c	FUNCTION_8
0x4000554	          0x4889e5	                            mov rbp, rsp	       298	channel.c	FUNCTION_8
0x4000557	    0x488b05000000	            mov rax, qword [0x0400055e] 	       299	channel.c	FUNCTION_8
0x400055e	          0x4885c0	                           test rax, rax	       299	channel.c	FUNCTION_8
0x4000561	           0xf95c0	                                setne al	       299	channel.c	FUNCTION_8
0x4000564	           0xfb6c0	                           movzx eax, al	       299	channel.c	FUNCTION_8
0x4000567	              0x5d	                                 pop rbp	       300	channel.c	FUNCTION_8
0x4000568	              0xc3	                                     ret	       300	channel.c	FUNCTION_8
invoke_callback	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,4:IF,1:SWITCH,0	52
0x4002dba	              0x55	                                push rbp	      1590	channel.c	FUNCTION_43
0x4002dbb	          0x4889e5	                            mov rbp, rsp	      1590	channel.c	FUNCTION_43
0x4002dbe	        0x4883ec50	                           sub rsp, 0x50	      1590	channel.c	FUNCTION_43
0x4002dc2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1590	channel.c	FUNCTION_43
0x4002dc6	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1590	channel.c	FUNCTION_43
0x4002dca	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1590	channel.c	FUNCTION_43
0x4002dce	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1590	channel.c	FUNCTION_43
0x4002dd2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1590	channel.c	FUNCTION_43
0x4002ddb	        0x488945f8	                mov qword [rbp - 8], rax	      1590	channel.c	FUNCTION_43
0x4002ddf	            0x31c0	                            xor eax, eax	      1590	channel.c	FUNCTION_43
0x4002de1	    0x8b0500000000	            mov eax, dword [0x04002de7] 	      1594	channel.c	FUNCTION_43	IF_1
0x4002de7	            0x85c0	                           test eax, eax	      1594	channel.c	FUNCTION_43	IF_1
0x4002de9	            0x750a	                           jne 0x4002df5	      1594	channel.c	FUNCTION_43	IF_1
0x4002deb	      0xbf00000000	                              mov edi, 0	      1595	channel.c	FUNCTION_43	CALL_1
0x4002df0	      0xe800000000	                          call 0x4002df5	      1595	channel.c	FUNCTION_43	CALL_1
0x4002df5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1597	channel.c	FUNCTION_43
0x4002df9	    0xc7000a000000	                    mov dword [rax], 0xa	      1597	channel.c	FUNCTION_43
0x4002dff	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1598	channel.c	FUNCTION_43
0x4002e03	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1598	channel.c	FUNCTION_43
0x4002e07	        0x48895008	                mov qword [rax + 8], rdx	      1598	channel.c	FUNCTION_43
0x4002e0b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e0f	          0x4889c7	                            mov rdi, rax	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e12	      0xe800000000	                          call 0x4002e17	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e17	            0x89c7	                            mov edi, eax	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e19	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e1d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e21	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e25	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e27	          0xff75b8	                 push qword [rbp - 0x48]	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e2a	            0x6a01	                                  push 1	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e2c	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e30	              0x51	                                push rcx	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e31	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e33	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e35	    0x41b900000000	                              mov r9d, 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e3b	          0x4989f0	                             mov r8, rsi	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e3e	      0xb902000000	                              mov ecx, 2	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e43	            0x89fe	                            mov esi, edi	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e45	          0x4889c7	                            mov rdi, rax	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e48	      0xe800000000	                          call 0x4002e4d	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e4d	        0x4883c430	                           add rsp, 0x30	      1600	channel.c	FUNCTION_43	CALL_3
0x4002e51	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1602	channel.c	FUNCTION_43	CALL_4
0x4002e55	          0x4889c7	                            mov rdi, rax	      1602	channel.c	FUNCTION_43	CALL_4
0x4002e58	      0xe800000000	                          call 0x4002e5d	      1602	channel.c	FUNCTION_43	CALL_4
0x4002e5d	    0xc70500000000	               mov dword [0x04002e67], 1	      1603	channel.c	FUNCTION_43
0x4002e67	              0x90	                                     nop	      1604	channel.c	FUNCTION_43
0x4002e68	        0x488b45f8	                mov rax, qword [rbp - 8]	      1604	channel.c	FUNCTION_43
0x4002e6c	    0x644833042528	                xor rax, qword fs:[0x28]	      1604	channel.c	FUNCTION_43
0x4002e75	            0x7405	                            je 0x4002e7c	      1604	channel.c	FUNCTION_43
0x4002e77	      0xe800000000	                          call 0x4002e7c	      1604	channel.c	FUNCTION_43
0x4002e7c	              0xc9	                                   leave	      1604	channel.c	FUNCTION_43
0x4002e7d	              0xc3	                                     ret	      1604	channel.c	FUNCTION_43
job_any_running	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	21
0x400a6fa	              0x55	                                push rbp	      5142	channel.c	FUNCTION_117
0x400a6fb	          0x4889e5	                            mov rbp, rsp	      5142	channel.c	FUNCTION_117
0x400a6fe	        0x4883ec10	                           sub rsp, 0x10	      5142	channel.c	FUNCTION_117
0x400a702	    0x488b05000000	            mov rax, qword [0x0400a709] 	      5145	channel.c	FUNCTION_117	FOR_1
0x400a709	        0x488945f8	                mov qword [rbp - 8], rax	      5145	channel.c	FUNCTION_117	FOR_1
0x400a70d	            0xeb22	                           jmp 0x400a731	      5145	channel.c	FUNCTION_117	FOR_1
0x400a70f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x400a713	          0x4889c7	                            mov rdi, rax	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x400a716	      0xe8a5ffffff	               call sym.job_still_useful	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x400a71b	            0x85c0	                           test eax, eax	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x400a71d	            0x7407	                            je 0x400a726	      5146	channel.c	FUNCTION_117	FOR_1	IF_1	CALL_1
0x400a71f	      0xb801000000	                              mov eax, 1	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x400a724	            0xeb17	                           jmp 0x400a73d	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x400a726	        0x488b45f8	                mov rax, qword [rbp - 8]	      5145	channel.c	FUNCTION_117	FOR_1
0x400a72a	          0x488b00	                    mov rax, qword [rax]	      5145	channel.c	FUNCTION_117	FOR_1
0x400a72d	        0x488945f8	                mov qword [rbp - 8], rax	      5145	channel.c	FUNCTION_117	FOR_1
0x400a731	      0x48837df800	                  cmp qword [rbp - 8], 0	      5145	channel.c	FUNCTION_117	FOR_1
0x400a736	            0x75d7	                           jne 0x400a70f	      5145	channel.c	FUNCTION_117	FOR_1
0x400a738	      0xb800000000	                              mov eax, 0	      5148	channel.c	FUNCTION_117
0x400a73d	              0xc9	                                   leave	      5149	channel.c	FUNCTION_117
0x400a73e	              0xc3	                                     ret	      5149	channel.c	FUNCTION_117
channel_part_info	ELSE,3:WHILE,0:FOR,0:DO,0:functions,0:CALL,12:IF,3:SWITCH,2	156
0x400572b	              0x55	                                push rbp	      2794	channel.c	FUNCTION_66
0x400572c	          0x4889e5	                            mov rbp, rsp	      2794	channel.c	FUNCTION_66
0x400572f	        0x4883ec60	                           sub rsp, 0x60	      2794	channel.c	FUNCTION_66
0x4005733	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2794	channel.c	FUNCTION_66
0x4005737	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2794	channel.c	FUNCTION_66
0x400573b	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2794	channel.c	FUNCTION_66
0x400573f	          0x894da4	             mov dword [rbp - 0x5c], ecx	      2794	channel.c	FUNCTION_66
0x4005742	    0x64488b042528	                mov rax, qword fs:[0x28]	      2794	channel.c	FUNCTION_66
0x400574b	        0x488945f8	                mov qword [rbp - 8], rax	      2794	channel.c	FUNCTION_66
0x400574f	            0x31c0	                            xor eax, eax	      2794	channel.c	FUNCTION_66
0x4005751	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2795	channel.c	FUNCTION_66
0x4005754	        0x48c1e004	                              shl rax, 4	      2795	channel.c	FUNCTION_66
0x4005758	          0x4889c2	                            mov rdx, rax	      2795	channel.c	FUNCTION_66
0x400575b	        0x48c1e204	                              shl rdx, 4	      2795	channel.c	FUNCTION_66
0x400575f	          0x4801d0	                            add rax, rdx	      2795	channel.c	FUNCTION_66
0x4005762	        0x488d5010	                   lea rdx, [rax + 0x10]	      2795	channel.c	FUNCTION_66
0x4005766	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2795	channel.c	FUNCTION_66
0x400576a	          0x4801d0	                            add rax, rdx	      2795	channel.c	FUNCTION_66
0x400576d	        0x4883c008	                              add rax, 8	      2795	channel.c	FUNCTION_66
0x4005771	        0x488945d0	             mov qword [rbp - 0x30], rax	      2795	channel.c	FUNCTION_66
0x4005775	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2799	channel.c	FUNCTION_66
0x400577d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2801	channel.c	FUNCTION_66	CALL_1
0x4005781	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2801	channel.c	FUNCTION_66	CALL_1
0x4005785	      0xba04000000	                              mov edx, 4	      2801	channel.c	FUNCTION_66	CALL_1
0x400578a	          0x4889ce	                            mov rsi, rcx	      2801	channel.c	FUNCTION_66	CALL_1
0x400578d	          0x4889c7	                            mov rdi, rax	      2801	channel.c	FUNCTION_66	CALL_1
0x4005790	      0xe800000000	                          call 0x4005795	      2801	channel.c	FUNCTION_66	CALL_1
0x4005795	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2802	channel.c	FUNCTION_66	CALL_2
0x4005799	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2802	channel.c	FUNCTION_66	CALL_2
0x40057a0	          0x4889c2	                            mov rdx, rax	      2802	channel.c	FUNCTION_66	CALL_2
0x40057a3	      0xb800000000	                              mov eax, 0	      2802	channel.c	FUNCTION_66	CALL_2
0x40057a8	          0x4889d7	                            mov rdi, rdx	      2802	channel.c	FUNCTION_66	CALL_2
0x40057ab	            0xf2ae	              repne scasb al, byte [rdi]	      2802	channel.c	FUNCTION_66	CALL_2
0x40057ad	          0x4889c8	                            mov rax, rcx	      2802	channel.c	FUNCTION_66	CALL_2
0x40057b0	          0x48f7d0	                                 not rax	      2802	channel.c	FUNCTION_66	CALL_2
0x40057b3	        0x488d50ff	                      lea rdx, [rax - 1]	      2802	channel.c	FUNCTION_66	CALL_2
0x40057b7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2802	channel.c	FUNCTION_66	CALL_2
0x40057bb	          0x4801d0	                            add rax, rdx	      2802	channel.c	FUNCTION_66	CALL_2
0x40057be	      0x66c7005f00	                    mov word [rax], 0x5f	      2802	channel.c	FUNCTION_66	CALL_2
0x40057c3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2803	channel.c	FUNCTION_66	CALL_3
0x40057c7	          0x4889c7	                            mov rdi, rax	      2803	channel.c	FUNCTION_66	CALL_3
0x40057ca	      0xe800000000	                          call 0x40057cf	      2803	channel.c	FUNCTION_66	CALL_3
0x40057cf	        0x488945d8	             mov qword [rbp - 0x28], rax	      2803	channel.c	FUNCTION_66	CALL_3
0x40057d3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2805	channel.c	FUNCTION_66	CALL_4
0x40057d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2805	channel.c	FUNCTION_66	CALL_4
0x40057db	          0x4801d0	                            add rax, rdx	      2805	channel.c	FUNCTION_66	CALL_4
0x40057de	    0xc70073746174	            mov dword [rax], 0x74617473 	      2805	channel.c	FUNCTION_66	CALL_4
0x40057e4	    0x66c740047573	              mov word [rax + 4], 0x7375	      2805	channel.c	FUNCTION_66	CALL_4
0x40057ea	        0xc6400600	                   mov byte [rax + 6], 0	      2805	channel.c	FUNCTION_66	CALL_4
0x40057ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2806	channel.c	FUNCTION_66	IF_1
0x40057f2	            0x8b00	                    mov eax, dword [rax]	      2806	channel.c	FUNCTION_66	IF_1
0x40057f4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2806	channel.c	FUNCTION_66	IF_1
0x40057f7	            0x740a	                            je 0x4005803	      2806	channel.c	FUNCTION_66	IF_1
0x40057f9	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2807	channel.c	FUNCTION_66	IF_1
0x4005801	            0xeb27	                           jmp 0x400582a	      2807	channel.c	FUNCTION_66	IF_1
0x4005803	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x4005806	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x400580a	            0x89d6	                            mov esi, edx	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x400580c	          0x4889c7	                            mov rdi, rax	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x400580f	      0xe800000000	                          call 0x4005814	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x4005814	            0x85c0	                           test eax, eax	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x4005816	            0x740a	                            je 0x4005822	      2808	channel.c	FUNCTION_66	ELSE_1	IF_2	CALL_5
0x4005818	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2809	channel.c	FUNCTION_66	ELSE_1	IF_2
0x4005820	            0xeb08	                           jmp 0x400582a	      2809	channel.c	FUNCTION_66	ELSE_1	IF_2
0x4005822	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2811	channel.c	FUNCTION_66	ELSE_2
0x400582a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2812	channel.c	FUNCTION_66	CALL_6
0x400582e	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2812	channel.c	FUNCTION_66	CALL_6
0x4005832	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2812	channel.c	FUNCTION_66	CALL_6
0x4005836	          0x4889d1	                            mov rcx, rdx	      2812	channel.c	FUNCTION_66	CALL_6
0x4005839	      0xba00000000	                              mov edx, 0	      2812	channel.c	FUNCTION_66	CALL_6
0x400583e	          0x4889c7	                            mov rdi, rax	      2812	channel.c	FUNCTION_66	CALL_6
0x4005841	      0xe800000000	                          call 0x4005846	      2812	channel.c	FUNCTION_66	CALL_6
0x4005846	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2814	channel.c	FUNCTION_66	CALL_7
0x400584a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2814	channel.c	FUNCTION_66	CALL_7
0x400584e	          0x4801d0	                            add rax, rdx	      2814	channel.c	FUNCTION_66	CALL_7
0x4005851	    0xc7006d6f6465	            mov dword [rax], 0x65646f6d 	      2814	channel.c	FUNCTION_66	CALL_7
0x4005857	        0xc6400400	                   mov byte [rax + 4], 0	      2814	channel.c	FUNCTION_66	CALL_7
0x400585b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400585f	          0x8b4008	                mov eax, dword [rax + 8]	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4005862	          0x83f801	                              cmp eax, 1	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4005865	            0x741b	                            je 0x4005882	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4005867	          0x83f801	                              cmp eax, 1	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400586a	            0x720c	                            jb 0x4005878	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400586c	          0x83f802	                              cmp eax, 2	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400586f	            0x741b	                            je 0x400588c	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4005871	          0x83f803	                              cmp eax, 3	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4005874	            0x7420	                            je 0x4005896	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4005876	            0xeb27	                           jmp 0x400589f	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4005878	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2817	channel.c	FUNCTION_66	SWITCH_1
0x4005880	            0xeb1d	                           jmp 0x400589f	      2817	channel.c	FUNCTION_66	SWITCH_1
0x4005882	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2818	channel.c	FUNCTION_66	SWITCH_1
0x400588a	            0xeb13	                           jmp 0x400589f	      2818	channel.c	FUNCTION_66	SWITCH_1
0x400588c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2819	channel.c	FUNCTION_66	SWITCH_1
0x4005894	            0xeb09	                           jmp 0x400589f	      2819	channel.c	FUNCTION_66	SWITCH_1
0x4005896	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2820	channel.c	FUNCTION_66	SWITCH_1
0x400589e	              0x90	                                     nop	      2820	channel.c	FUNCTION_66	SWITCH_1
0x400589f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2822	channel.c	FUNCTION_66	CALL_8
0x40058a3	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2822	channel.c	FUNCTION_66	CALL_8
0x40058a7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2822	channel.c	FUNCTION_66	CALL_8
0x40058ab	          0x4889d1	                            mov rcx, rdx	      2822	channel.c	FUNCTION_66	CALL_8
0x40058ae	      0xba00000000	                              mov edx, 0	      2822	channel.c	FUNCTION_66	CALL_8
0x40058b3	          0x4889c7	                            mov rdi, rax	      2822	channel.c	FUNCTION_66	CALL_8
0x40058b6	      0xe800000000	                          call 0x40058bb	      2822	channel.c	FUNCTION_66	CALL_8
0x40058bb	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2824	channel.c	FUNCTION_66	CALL_9
0x40058bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2824	channel.c	FUNCTION_66	CALL_9
0x40058c3	          0x4801d0	                            add rax, rdx	      2824	channel.c	FUNCTION_66	CALL_9
0x40058c6	      0x66c700696f	                  mov word [rax], 0x6f69	      2824	channel.c	FUNCTION_66	CALL_9
0x40058cb	        0xc6400200	                   mov byte [rax + 2], 0	      2824	channel.c	FUNCTION_66	CALL_9
0x40058cf	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2825	channel.c	FUNCTION_66	IF_3
0x40058d3	            0x750a	                           jne 0x40058df	      2825	channel.c	FUNCTION_66	IF_3
0x40058d5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2826	channel.c	FUNCTION_66	IF_3
0x40058dd	            0xeb49	                           jmp 0x4005928	      2826	channel.c	FUNCTION_66	IF_3
0x40058df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058e3	          0x8b400c	              mov eax, dword [rax + 0xc]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058e6	          0x83f804	                              cmp eax, 4	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058e9	            0x773d	                            ja 0x4005928	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058eb	            0x89c0	                            mov eax, eax	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058ed	    0x488b04c50000	                  mov rax, qword [rax*8]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058f5	            0xffe0	                                 jmp rax	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058f7	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40058ff	            0xeb27	                           jmp 0x4005928	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4005901	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4005909	            0xeb1d	                           jmp 0x4005928	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400590b	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4005913	            0xeb13	                           jmp 0x4005928	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4005915	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400591d	            0xeb09	                           jmp 0x4005928	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400591f	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4005927	              0x90	                                     nop	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4005928	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2835	channel.c	FUNCTION_66	CALL_10
0x400592c	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2835	channel.c	FUNCTION_66	CALL_10
0x4005930	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2835	channel.c	FUNCTION_66	CALL_10
0x4005934	          0x4889d1	                            mov rcx, rdx	      2835	channel.c	FUNCTION_66	CALL_10
0x4005937	      0xba00000000	                              mov edx, 0	      2835	channel.c	FUNCTION_66	CALL_10
0x400593c	          0x4889c7	                            mov rdi, rax	      2835	channel.c	FUNCTION_66	CALL_10
0x400593f	      0xe800000000	                          call 0x4005944	      2835	channel.c	FUNCTION_66	CALL_10
0x4005944	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2837	channel.c	FUNCTION_66	CALL_11
0x4005948	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2837	channel.c	FUNCTION_66	CALL_11
0x400594c	          0x4801d0	                            add rax, rdx	      2837	channel.c	FUNCTION_66	CALL_11
0x400594f	    0x48bf74696d65	            movabs rdi, 0x74756f656d6974	      2837	channel.c	FUNCTION_66	CALL_11
0x4005959	          0x488938	                    mov qword [rax], rdi	      2837	channel.c	FUNCTION_66	CALL_11
0x400595c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2838	channel.c	FUNCTION_66	CALL_12
0x4005960	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2838	channel.c	FUNCTION_66	CALL_12
0x4005963	          0x4863d0	                         movsxd rdx, eax	      2838	channel.c	FUNCTION_66	CALL_12
0x4005966	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2838	channel.c	FUNCTION_66	CALL_12
0x400596a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2838	channel.c	FUNCTION_66	CALL_12
0x400596e	      0xb900000000	                              mov ecx, 0	      2838	channel.c	FUNCTION_66	CALL_12
0x4005973	          0x4889c7	                            mov rdi, rax	      2838	channel.c	FUNCTION_66	CALL_12
0x4005976	      0xe800000000	                          call 0x400597b	      2838	channel.c	FUNCTION_66	CALL_12
0x400597b	              0x90	                                     nop	      2839	channel.c	FUNCTION_66
0x400597c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2839	channel.c	FUNCTION_66
0x4005980	    0x644833042528	                xor rax, qword fs:[0x28]	      2839	channel.c	FUNCTION_66
0x4005989	            0x7405	                            je 0x4005990	      2839	channel.c	FUNCTION_66
0x400598b	      0xe800000000	                          call 0x4005990	      2839	channel.c	FUNCTION_66
0x4005990	              0xc9	                                   leave	      2839	channel.c	FUNCTION_66
0x4005991	              0xc3	                                     ret	      2839	channel.c	FUNCTION_66
channel_select_setup	ELSE,1:WHILE,0:FOR,2:DO,0:functions,0:CALL,2:IF,4:SWITCH,0	101
0x4007b48	              0x55	                                push rbp	      4118	channel.c	FUNCTION_93
0x4007b49	          0x4889e5	                            mov rbp, rsp	      4118	channel.c	FUNCTION_93
0x4007b4c	        0x4883ec58	                           sub rsp, 0x58	      4118	channel.c	FUNCTION_93
0x4007b50	          0x897dcc	             mov dword [rbp - 0x34], edi	      4118	channel.c	FUNCTION_93
0x4007b53	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4118	channel.c	FUNCTION_93
0x4007b57	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4118	channel.c	FUNCTION_93
0x4007b5b	        0x48894db0	             mov qword [rbp - 0x50], rcx	      4118	channel.c	FUNCTION_93
0x4007b5f	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      4118	channel.c	FUNCTION_93
0x4007b63	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4119	channel.c	FUNCTION_93
0x4007b66	          0x8945dc	             mov dword [rbp - 0x24], eax	      4119	channel.c	FUNCTION_93
0x4007b69	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4121	channel.c	FUNCTION_93
0x4007b6d	        0x488945f0	             mov qword [rbp - 0x10], rax	      4121	channel.c	FUNCTION_93
0x4007b71	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4122	channel.c	FUNCTION_93
0x4007b75	        0x488945f8	                mov qword [rbp - 8], rax	      4122	channel.c	FUNCTION_93
0x4007b79	    0x488b05000000	            mov rax, qword [0x04007b80] 	      4125	channel.c	FUNCTION_93	FOR_1
0x4007b80	        0x488945e8	             mov qword [rbp - 0x18], rax	      4125	channel.c	FUNCTION_93	FOR_1
0x4007b84	      0xe9ff000000	                           jmp 0x4007c88	      4125	channel.c	FUNCTION_93	FOR_1
0x4007b89	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007b90	      0xe9de000000	                           jmp 0x4007c73	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007b95	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007b99	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007b9c	        0x48c1e004	                              shl rax, 4	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007ba0	          0x4889c1	                            mov rcx, rax	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007ba3	        0x48c1e104	                              shl rcx, 4	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007ba7	          0x4801c8	                            add rax, rcx	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007baa	          0x4801d0	                            add rax, rdx	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007bad	        0x4883c018	                           add rax, 0x18	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007bb1	            0x8b00	                    mov eax, dword [rax]	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007bb3	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007bb6	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4007bba	     0xf84af000000	                            je 0x4007c6f	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4007bc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4007bc4	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4007bca	            0x85c0	                           test eax, eax	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4007bcc	            0x744c	                            je 0x4007c1a	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4007bce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bd2	          0x488b00	                    mov rax, qword [rax]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bd5	          0x4885c0	                           test rax, rax	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bd8	            0x741c	                            je 0x4007bf6	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bda	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bde	          0x488b00	                    mov rax, qword [rax]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007be1	          0x4885c0	                           test rax, rax	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007be4	            0x7f10	                            jg 0x4007bf6	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007be6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bea	        0x488b4008	                mov rax, qword [rax + 8]	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bee	    0x483d204e0000	                         cmp rax, 0x4e20	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bf4	            0x7e79	                           jle 0x4007c6f	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bf6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bfa	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007bfe	          0x488910	                    mov qword [rax], rdx	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007c01	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4142	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007c05	    0x48c700000000	                      mov qword [rax], 0	      4142	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007c0c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007c10	    0x48c74008204e	            mov qword [rax + 8], 0x4e20 	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007c18	            0xeb55	                           jmp 0x4007c6f	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4007c1a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c1d	          0x8d503f	                   lea edx, [rax + 0x3f]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c20	            0x85c0	                           test eax, eax	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c22	           0xf48c2	                          cmovs eax, edx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c25	          0xc1f806	                              sar eax, 6	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c28	            0x89c6	                            mov esi, eax	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c2e	          0x4863d6	                         movsxd rdx, esi	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c31	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c35	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c38	              0x99	                                     cdq	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c39	          0xc1ea1a	                           shr edx, 0x1a	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c3c	             0x1d0	                            add eax, edx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c3e	          0x83e03f	                           and eax, 0x3f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c41	            0x29d0	                            sub eax, edx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c43	      0xba01000000	                              mov edx, 1	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c48	            0x89c1	                            mov ecx, eax	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c4a	          0x48d3e2	                             shl rdx, cl	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c4d	          0x4889d0	                            mov rax, rdx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c50	          0x4809c7	                             or rdi, rax	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c53	          0x4889f9	                            mov rcx, rdi	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c56	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c5a	          0x4863d6	                         movsxd rdx, esi	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c5d	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4007c61	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4149	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x4007c64	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4149	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x4007c67	            0x7d06	                           jge 0x4007c6f	      4149	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x4007c69	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4150	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x4007c6c	          0x8945dc	             mov dword [rbp - 0x24], eax	      4150	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x4007c6f	        0x8345e001	               add dword [rbp - 0x20], 1	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007c73	        0x837de002	               cmp dword [rbp - 0x20], 2	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007c77	     0xf8618ffffff	                           jbe 0x4007b95	      4127	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4007c7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4125	channel.c	FUNCTION_93	FOR_1
0x4007c81	          0x488b00	                    mov rax, qword [rax]	      4125	channel.c	FUNCTION_93	FOR_1
0x4007c84	        0x488945e8	             mov qword [rbp - 0x18], rax	      4125	channel.c	FUNCTION_93	FOR_1
0x4007c88	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4125	channel.c	FUNCTION_93	FOR_1
0x4007c8d	     0xf85f6feffff	                           jne 0x4007b89	      4125	channel.c	FUNCTION_93	FOR_1
0x4007c93	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4156	channel.c	FUNCTION_93	CALL_2
0x4007c97	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4156	channel.c	FUNCTION_93	CALL_2
0x4007c9a	          0x4889d6	                            mov rsi, rdx	      4156	channel.c	FUNCTION_93	CALL_2
0x4007c9d	            0x89c7	                            mov edi, eax	      4156	channel.c	FUNCTION_93	CALL_2
0x4007c9f	      0xe84fe4ffff	              call sym.channel_fill_wfds	      4156	channel.c	FUNCTION_93	CALL_2
0x4007ca4	          0x8945dc	             mov dword [rbp - 0x24], eax	      4156	channel.c	FUNCTION_93	CALL_2
0x4007ca7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4158	channel.c	FUNCTION_93
0x4007caa	              0xc9	                                   leave	      4159	channel.c	FUNCTION_93
0x4007cab	              0xc3	                                     ret	      4159	channel.c	FUNCTION_93
append_to_buffer	ELSE,2:WHILE,0:FOR,1:DO,0:functions,1:CALL,10:IF,8:SWITCH,0	227
0x40047df	              0x55	                                push rbp	      2346	channel.c	FUNCTION_59
0x40047e0	          0x4889e5	                            mov rbp, rsp	      2346	channel.c	FUNCTION_59
0x40047e3	    0x4881ec900000	                           sub rsp, 0x90	      2346	channel.c	FUNCTION_59
0x40047ea	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2346	channel.c	FUNCTION_59
0x40047ee	        0x48897580	             mov qword [rbp - 0x80], rsi	      2346	channel.c	FUNCTION_59
0x40047f2	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2346	channel.c	FUNCTION_59
0x40047f9	    0x898d74ffffff	             mov dword [rbp - 0x8c], ecx	      2346	channel.c	FUNCTION_59
0x40047ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      2346	channel.c	FUNCTION_59
0x4004808	        0x488945f8	                mov qword [rbp - 8], rax	      2346	channel.c	FUNCTION_59
0x400480c	            0x31c0	                            xor eax, eax	      2346	channel.c	FUNCTION_59
0x400480e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2347	channel.c	FUNCTION_59
0x4004816	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2347	channel.c	FUNCTION_59
0x400481d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2347	channel.c	FUNCTION_59
0x4004824	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      2348	channel.c	FUNCTION_59
0x400482c	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2349	channel.c	FUNCTION_59
0x4004834	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2350	channel.c	FUNCTION_59
0x4004838	          0x488b00	                    mov rax, qword [rax]	      2350	channel.c	FUNCTION_59
0x400483b	        0x488945b8	             mov qword [rbp - 0x48], rax	      2350	channel.c	FUNCTION_59
0x400483f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2351	channel.c	FUNCTION_59
0x4004843	    0x8b80341c0000	          mov eax, dword [rax + 0x1c34] 	      2351	channel.c	FUNCTION_59
0x4004849	          0x89459c	             mov dword [rbp - 0x64], eax	      2351	channel.c	FUNCTION_59
0x400484c	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2352	channel.c	FUNCTION_59
0x4004852	        0x48c1e004	                              shl rax, 4	      2352	channel.c	FUNCTION_59
0x4004856	          0x4889c2	                            mov rdx, rax	      2352	channel.c	FUNCTION_59
0x4004859	        0x48c1e204	                              shl rdx, 4	      2352	channel.c	FUNCTION_59
0x400485d	          0x4801d0	                            add rax, rdx	      2352	channel.c	FUNCTION_59
0x4004860	        0x488d5010	                   lea rdx, [rax + 0x10]	      2352	channel.c	FUNCTION_59
0x4004864	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2352	channel.c	FUNCTION_59
0x400486b	          0x4801d0	                            add rax, rdx	      2352	channel.c	FUNCTION_59
0x400486e	        0x4883c008	                              add rax, 8	      2352	channel.c	FUNCTION_59
0x4004872	        0x488945d0	             mov qword [rbp - 0x30], rax	      2352	channel.c	FUNCTION_59
0x4004876	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2353	channel.c	FUNCTION_59
0x400487a	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2353	channel.c	FUNCTION_59
0x4004880	          0x8945a0	             mov dword [rbp - 0x60], eax	      2353	channel.c	FUNCTION_59
0x4004883	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2354	channel.c	FUNCTION_59
0x4004887	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2354	channel.c	FUNCTION_59
0x400488a	          0x83e001	                              and eax, 1	      2354	channel.c	FUNCTION_59
0x400488d	            0x85c0	                           test eax, eax	      2354	channel.c	FUNCTION_59
0x400488f	           0xf95c0	                                setne al	      2354	channel.c	FUNCTION_59
0x4004892	           0xfb6c0	                           movzx eax, al	      2354	channel.c	FUNCTION_59
0x4004895	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2354	channel.c	FUNCTION_59
0x4004898	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2356	channel.c	FUNCTION_59	IF_1
0x400489c	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2356	channel.c	FUNCTION_59	IF_1
0x40048a2	            0x85c0	                           test eax, eax	      2356	channel.c	FUNCTION_59	IF_1
0x40048a4	            0x754c	                           jne 0x40048f2	      2356	channel.c	FUNCTION_59	IF_1
0x40048a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2356	channel.c	FUNCTION_59	IF_1
0x40048aa	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      2356	channel.c	FUNCTION_59	IF_1
0x40048b0	            0x85c0	                           test eax, eax	      2356	channel.c	FUNCTION_59	IF_1
0x40048b2	            0x753e	                           jne 0x40048f2	      2356	channel.c	FUNCTION_59	IF_1
0x40048b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x40048b8	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x40048be	            0x85c0	                           test eax, eax	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x40048c0	     0xf85d2020000	                           jne 0x4004b98	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x40048c6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x40048cd	      0xbe00000000	                              mov esi, 0	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x40048d2	          0x4889c7	                            mov rdi, rax	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x40048d5	      0xb800000000	                              mov eax, 0	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x40048da	      0xe83dbaffff	                       call sym.ch_error	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x40048df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x40048e3	    0xc780f4000000	               mov dword [rax + 0xf4], 1	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x40048ed	      0xe9a7020000	                           jmp 0x4004b99	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x40048f2	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2368	channel.c	FUNCTION_59	IF_3
0x40048f6	            0x7413	                            je 0x400490b	      2368	channel.c	FUNCTION_59	IF_3
0x40048f8	      0x48836db801	               sub qword [rbp - 0x48], 1	      2370	channel.c	FUNCTION_59	IF_3
0x40048fd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2371	channel.c	FUNCTION_59	IF_3
0x4004901	    0xc780341c0000	            mov dword [rax + 0x1c34], 0 	      2371	channel.c	FUNCTION_59	IF_3
0x400490b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2375	channel.c	FUNCTION_59	CALL_2
0x400490f	          0x83c001	                              add eax, 1	      2375	channel.c	FUNCTION_59	CALL_2
0x4004912	          0x2b45a4	             sub eax, dword [rbp - 0x5c]	      2375	channel.c	FUNCTION_59	CALL_2
0x4004915	            0x89c2	                            mov edx, eax	      2375	channel.c	FUNCTION_59	CALL_2
0x4004917	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2375	channel.c	FUNCTION_59	CALL_2
0x400491e	      0xbe00000000	                              mov esi, 0	      2375	channel.c	FUNCTION_59	CALL_2
0x4004923	          0x4889c7	                            mov rdi, rax	      2375	channel.c	FUNCTION_59	CALL_2
0x4004926	      0xb800000000	                              mov eax, 0	      2375	channel.c	FUNCTION_59	CALL_2
0x400492b	      0xe800000000	                          call 0x4004930	      2375	channel.c	FUNCTION_59	CALL_2
0x4004930	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2377	channel.c	FUNCTION_59
0x4004934	    0xc78040150000	            mov dword [rax + 0x1540], 1 	      2377	channel.c	FUNCTION_59
0x400493e	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2380	channel.c	FUNCTION_59	CALL_3
0x4004942	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2380	channel.c	FUNCTION_59	CALL_3
0x4004946	        0x488d75a8	                   lea rsi, [rbp - 0x58]	      2380	channel.c	FUNCTION_59	CALL_3
0x400494a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2380	channel.c	FUNCTION_59	CALL_3
0x400494e	          0x4889c7	                            mov rdi, rax	      2380	channel.c	FUNCTION_59	CALL_3
0x4004951	      0xe800000000	                          call 0x4004956	      2380	channel.c	FUNCTION_59	CALL_3
0x4004956	      0xbf01000000	                              mov edi, 1	      2382	channel.c	FUNCTION_59	CALL_4
0x400495b	      0xe800000000	                          call 0x4004960	      2382	channel.c	FUNCTION_59	CALL_4
0x4004960	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2384	channel.c	FUNCTION_59	CALL_5
0x4004964	        0x488d5001	                      lea rdx, [rax + 1]	      2384	channel.c	FUNCTION_59	CALL_5
0x4004968	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2384	channel.c	FUNCTION_59	CALL_5
0x400496b	            0x4898	                                    cdqe	      2384	channel.c	FUNCTION_59	CALL_5
0x400496d	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2384	channel.c	FUNCTION_59	CALL_5
0x4004971	          0x4829c1	                            sub rcx, rax	      2384	channel.c	FUNCTION_59	CALL_5
0x4004974	          0x4889c8	                            mov rax, rcx	      2384	channel.c	FUNCTION_59	CALL_5
0x4004977	          0x4889d6	                            mov rsi, rdx	      2384	channel.c	FUNCTION_59	CALL_5
0x400497a	          0x4889c7	                            mov rdi, rax	      2384	channel.c	FUNCTION_59	CALL_5
0x400497d	      0xe800000000	                          call 0x4004982	      2384	channel.c	FUNCTION_59	CALL_5
0x4004982	    0x890500000000	            mov dword [0x04004988], eax 	      2384	channel.c	FUNCTION_59	CALL_5
0x4004988	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2386	channel.c	FUNCTION_59	IF_4
0x400498c	            0x7422	                            je 0x40049b0	      2386	channel.c	FUNCTION_59	IF_4
0x400498e	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x4004992	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x4004996	      0xba01000000	                              mov edx, 1	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x400499b	          0x4889ce	                            mov rsi, rcx	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x400499e	          0x4889c7	                            mov rdi, rax	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40049a1	      0xe800000000	                          call 0x40049a6	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40049a6	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2390	channel.c	FUNCTION_59	IF_4
0x40049ae	            0xeb1a	                           jmp 0x40049ca	      2390	channel.c	FUNCTION_59	IF_4
0x40049b0	        0x488b7580	             mov rsi, qword [rbp - 0x80]	      2393	channel.c	FUNCTION_59	CALL_7
0x40049b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2393	channel.c	FUNCTION_59	CALL_7
0x40049b8	      0xb900000000	                              mov ecx, 0	      2393	channel.c	FUNCTION_59	CALL_7
0x40049bd	      0xba00000000	                              mov edx, 0	      2393	channel.c	FUNCTION_59	CALL_7
0x40049c2	          0x4889c7	                            mov rdi, rax	      2393	channel.c	FUNCTION_59	CALL_7
0x40049c5	      0xe800000000	                          call 0x40049ca	      2393	channel.c	FUNCTION_59	CALL_7
0x40049ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2394	channel.c	FUNCTION_59	CALL_8
0x40049ce	      0xbe01000000	                              mov esi, 1	      2394	channel.c	FUNCTION_59	CALL_8
0x40049d3	          0x4889c7	                            mov rdi, rax	      2394	channel.c	FUNCTION_59	CALL_8
0x40049d6	      0xe800000000	                          call 0x40049db	      2394	channel.c	FUNCTION_59	CALL_8
0x40049db	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2397	channel.c	FUNCTION_59	CALL_9
0x40049df	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2397	channel.c	FUNCTION_59	CALL_9
0x40049e3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2397	channel.c	FUNCTION_59	CALL_9
0x40049e7	          0x4889ce	                            mov rsi, rcx	      2397	channel.c	FUNCTION_59	CALL_9
0x40049ea	          0x4889c7	                            mov rdi, rax	      2397	channel.c	FUNCTION_59	CALL_9
0x40049ed	      0xe800000000	                          call 0x40049f2	      2397	channel.c	FUNCTION_59	CALL_9
0x40049f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2399	channel.c	FUNCTION_59	IF_5
0x40049f6	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      2399	channel.c	FUNCTION_59	IF_5
0x40049fc	            0x85c0	                           test eax, eax	      2399	channel.c	FUNCTION_59	IF_5
0x40049fe	            0x7410	                            je 0x4004a10	      2399	channel.c	FUNCTION_59	IF_5
0x4004a00	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2400	channel.c	FUNCTION_59	IF_5
0x4004a04	    0xc78040150000	            mov dword [rax + 0x1540], 0 	      2400	channel.c	FUNCTION_59	IF_5
0x4004a0e	            0xeb0d	                           jmp 0x4004a1d	      2400	channel.c	FUNCTION_59	IF_5
0x4004a10	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2402	channel.c	FUNCTION_59	ELSE_2
0x4004a14	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2402	channel.c	FUNCTION_59	ELSE_2
0x4004a17	    0x899040150000	          mov dword [rax + 0x1540], edx 	      2402	channel.c	FUNCTION_59	ELSE_2
0x4004a1d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004a21	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004a24	            0x85c0	                           test eax, eax	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004a26	     0xf8e06010000	                           jle 0x4004b32	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004a2c	    0x488b05000000	            mov rax, qword [0x04004a33] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004a33	        0x488945c0	             mov qword [rbp - 0x40], rax	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004a37	      0xe9d0000000	                           jmp 0x4004b0c	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004a3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a40	        0x488b4008	                mov rax, qword [rax + 8]	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a44	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a48	     0xf85b2000000	                           jne 0x4004b00	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a4e	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a52	            0x7418	                            je 0x4004a6c	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a54	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2412	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a58	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2412	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a5c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2412	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a60	        0x4883c201	                              add rdx, 1	      2412	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a64	          0x4839d0	                            cmp rax, rdx	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a67	           0xf94c0	                                 sete al	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a6a	            0xeb28	                           jmp 0x4004a94	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a6c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2413	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a70	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2413	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a74	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a78	            0x7512	                           jne 0x4004a8c	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a7a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a7e	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a81	            0x85c0	                           test eax, eax	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a83	            0x7507	                           jne 0x4004a8c	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a85	      0xb801000000	                              mov eax, 1	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a8a	            0xeb05	                           jmp 0x4004a91	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a8c	      0xb800000000	                              mov eax, 0	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a91	          0x83e001	                              and eax, 1	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a94	            0x84c0	                             test al, al	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a96	            0x7468	                            je 0x4004b00	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a98	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004a9c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004aa0	        0x488d5001	                      lea rdx, [rax + 1]	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004aa4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004aa8	        0x48895038	             mov qword [rax + 0x38], rdx	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004aac	    0x488b05000000	            mov rax, qword [0x04004ab3] 	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004ab3	        0x488945a8	             mov qword [rbp - 0x58], rax	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004ab7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2418	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004abb	    0x488905000000	            mov qword [0x04004ac2], rax 	      2418	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004ac2	    0x488b05000000	            mov rax, qword [0x04004ac9] 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004ac9	        0x488b4008	                mov rax, qword [rax + 8]	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004acd	    0x488905000000	            mov qword [0x04004ad4], rax 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004ad4	      0xbe00000000	                              mov esi, 0	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4004ad9	      0xbf00000000	                              mov edi, 0	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4004ade	      0xe800000000	                          call 0x4004ae3	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4004ae3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004ae7	    0x488905000000	            mov qword [0x04004aee], rax 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004aee	    0x488b05000000	            mov rax, qword [0x04004af5] 	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004af5	        0x488b4008	                mov rax, qword [rax + 8]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004af9	    0x488905000000	            mov qword [0x04004b00], rax 	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4004b00	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004b04	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004b08	        0x488945c0	             mov qword [rbp - 0x40], rax	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004b0c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004b11	     0xf8525ffffff	                           jne 0x4004a3c	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004b17	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4004b1b	      0xbe0a000000	                            mov esi, 0xa	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4004b20	          0x4889c7	                            mov rdi, rax	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4004b23	      0xe800000000	                          call 0x4004b28	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4004b28	    0xc70500000000	               mov dword [0x04004b32], 1	      2426	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4004b32	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2429	channel.c	FUNCTION_59	IF_7
0x4004b36	            0x7461	                            je 0x4004b99	      2429	channel.c	FUNCTION_59	IF_7
0x4004b38	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2435	channel.c	FUNCTION_59	IF_7
0x4004b3c	    0xc780341c0000	            mov dword [rax + 0x1c34], 1 	      2435	channel.c	FUNCTION_59	IF_7
0x4004b46	    0x488b05000000	            mov rax, qword [0x04004b4d] 	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b4d	        0x488945c8	             mov qword [rbp - 0x38], rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b51	            0xeb3c	                           jmp 0x4004b8f	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b53	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2438	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b57	    0x480548030000	                          add rax, 0x348	      2438	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b5d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2438	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b65	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b6c	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b70	            0x7512	                           jne 0x4004b84	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b72	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b76	          0x488b10	                    mov rdx, qword [rax]	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b7d	    0x488990080100	            mov qword [rax + 0x108], rdx	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x4004b84	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b88	          0x488b00	                    mov rax, qword [rax]	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b8b	        0x488945c8	             mov qword [rbp - 0x38], rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b8f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b94	            0x75bd	                           jne 0x4004b53	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b96	            0xeb01	                           jmp 0x4004b99	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4004b98	              0x90	                                     nop	      2363	channel.c	FUNCTION_59	IF_1
0x4004b99	        0x488b45f8	                mov rax, qword [rbp - 8]	      2444	channel.c	FUNCTION_59
0x4004b9d	    0x644833042528	                xor rax, qword fs:[0x28]	      2444	channel.c	FUNCTION_59
0x4004ba6	            0x7405	                            je 0x4004bad	      2444	channel.c	FUNCTION_59
0x4004ba8	      0xe800000000	                          call 0x4004bad	      2444	channel.c	FUNCTION_59
0x4004bad	              0xc9	                                   leave	      2444	channel.c	FUNCTION_59
0x4004bae	              0xc3	                                     ret	      2444	channel.c	FUNCTION_59
common_channel_read	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,10:IF,8:SWITCH,0	127
0x4006c5a	              0x55	                                push rbp	      3531	channel.c	FUNCTION_82
0x4006c5b	          0x4889e5	                            mov rbp, rsp	      3531	channel.c	FUNCTION_82
0x4006c5e	    0x4881ecc00300	                          sub rsp, 0x3c0	      3531	channel.c	FUNCTION_82
0x4006c65	    0x4889bd58fcff	            mov qword [rbp - 0x3a8], rdi	      3531	channel.c	FUNCTION_82
0x4006c6c	    0x4889b550fcff	            mov qword [rbp - 0x3b0], rsi	      3531	channel.c	FUNCTION_82
0x4006c73	    0x89954cfcffff	            mov dword [rbp - 0x3b4], edx	      3531	channel.c	FUNCTION_82
0x4006c79	    0x64488b042528	                mov rax, qword fs:[0x28]	      3531	channel.c	FUNCTION_82
0x4006c82	        0x488945f8	                mov qword [rbp - 8], rax	      3531	channel.c	FUNCTION_82
0x4006c86	            0x31c0	                            xor eax, eax	      3531	channel.c	FUNCTION_82
0x4006c88	    0xc78560fcffff	              mov dword [rbp - 0x3a0], 4	      3533	channel.c	FUNCTION_82
0x4006c92	    0xc78568fcffff	    mov dword [rbp - 0x398], 0xffffffff 	      3537	channel.c	FUNCTION_82
0x4006c9c	    0x48c78570fcff	              mov qword [rbp - 0x390], 0	      3538	channel.c	FUNCTION_82
0x4006ca7	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3541	channel.c	FUNCTION_82
0x4006cae	    0xc70002000000	                      mov dword [rax], 2	      3541	channel.c	FUNCTION_82
0x4006cb4	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3542	channel.c	FUNCTION_82
0x4006cbb	    0x48c740080000	                  mov qword [rax + 8], 0	      3542	channel.c	FUNCTION_82
0x4006cc3	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3544	channel.c	FUNCTION_82	CALL_1
0x4006cca	          0x4889c7	                            mov rdi, rax	      3544	channel.c	FUNCTION_82	CALL_1
0x4006ccd	      0xe800000000	                          call 0x4006cd2	      3544	channel.c	FUNCTION_82	CALL_1
0x4006cd2	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006cd9	        0x488d7810	                   lea rdi, [rax + 0x10]	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006cdd	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006ce4	      0xb900000000	                              mov ecx, 0	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006ce9	      0xba00320000	                         mov edx, 0x3200	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006cee	          0x4889c6	                            mov rsi, rax	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006cf1	      0xe800000000	                          call 0x4006cf6	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006cf6	            0x85c0	                           test eax, eax	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006cf8	     0xf84b0010000	                            je 0x4006eae	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x4006cfe	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3549	channel.c	FUNCTION_82	IF_2
0x4006d04	      0x2500100000	                         and eax, 0x1000	      3549	channel.c	FUNCTION_82	IF_2
0x4006d09	            0x85c0	                           test eax, eax	      3549	channel.c	FUNCTION_82	IF_2
0x4006d0b	            0x740c	                            je 0x4006d19	      3549	channel.c	FUNCTION_82	IF_2
0x4006d0d	    0x8b8588feffff	            mov eax, dword [rbp - 0x178]	      3550	channel.c	FUNCTION_82	IF_2
0x4006d13	    0x898560fcffff	            mov dword [rbp - 0x3a0], eax	      3550	channel.c	FUNCTION_82	IF_2
0x4006d19	    0x8b9560fcffff	            mov edx, dword [rbp - 0x3a0]	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d1f	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d26	            0x89d1	                            mov ecx, edx	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d28	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d2d	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d32	          0x4889c7	                            mov rdi, rax	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d35	      0xe800000000	                          call 0x4006d3a	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d3a	    0x48898578fcff	            mov qword [rbp - 0x388], rax	      3551	channel.c	FUNCTION_82	CALL_3
0x4006d41	    0x4883bd78fcff	              cmp qword [rbp - 0x388], 0	      3552	channel.c	FUNCTION_82	IF_3
0x4006d49	     0xf8460010000	                            je 0x4006eaf	      3552	channel.c	FUNCTION_82	IF_3
0x4006d4f	    0x83bd60fcffff	              cmp dword [rbp - 0x3a0], 4	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x4006d56	            0x7515	                           jne 0x4006d6d	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x4006d58	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3555	channel.c	FUNCTION_82	IF_3	CALL_4
0x4006d5f	          0x4889c7	                            mov rdi, rax	      3555	channel.c	FUNCTION_82	IF_3	CALL_4
0x4006d62	      0xe800000000	                          call 0x4006d67	      3555	channel.c	FUNCTION_82	IF_3	CALL_4
0x4006d67	    0x898560fcffff	            mov dword [rbp - 0x3a0], eax	      3555	channel.c	FUNCTION_82	IF_3	CALL_4
0x4006d6d	    0x8b9560fcffff	            mov edx, dword [rbp - 0x3a0]	      3556	channel.c	FUNCTION_82	IF_3	CALL_5
0x4006d73	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3556	channel.c	FUNCTION_82	IF_3	CALL_5
0x4006d7a	            0x89d6	                            mov esi, edx	      3556	channel.c	FUNCTION_82	IF_3	CALL_5
0x4006d7c	          0x4889c7	                            mov rdi, rax	      3556	channel.c	FUNCTION_82	IF_3	CALL_5
0x4006d7f	      0xe800000000	                          call 0x4006d84	      3556	channel.c	FUNCTION_82	IF_3	CALL_5
0x4006d84	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3556	channel.c	FUNCTION_82	IF_3	CALL_5
0x4006d8a	    0x8b9560fcffff	            mov edx, dword [rbp - 0x3a0]	      3557	channel.c	FUNCTION_82	IF_3	CALL_6
0x4006d90	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3557	channel.c	FUNCTION_82	IF_3	CALL_6
0x4006d97	            0x89d6	                            mov esi, edx	      3557	channel.c	FUNCTION_82	IF_3	CALL_6
0x4006d99	          0x4889c7	                            mov rdi, rax	      3557	channel.c	FUNCTION_82	IF_3	CALL_6
0x4006d9c	      0xe800000000	                          call 0x4006da1	      3557	channel.c	FUNCTION_82	IF_3	CALL_6
0x4006da1	    0x898564fcffff	            mov dword [rbp - 0x39c], eax	      3557	channel.c	FUNCTION_82	IF_3	CALL_6
0x4006da7	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x4006dad	      0x2500020000	                          and eax, 0x200	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x4006db2	            0x85c0	                           test eax, eax	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x4006db4	            0x740c	                            je 0x4006dc2	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x4006db6	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	      3559	channel.c	FUNCTION_82	IF_3	IF_5
0x4006dbc	    0x898564fcffff	            mov dword [rbp - 0x39c], eax	      3559	channel.c	FUNCTION_82	IF_3	IF_5
0x4006dc2	    0x83bd4cfcffff	              cmp dword [rbp - 0x3b4], 0	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4006dc9	            0x7512	                           jne 0x4006ddd	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4006dcb	    0x83bd6cfcffff	              cmp dword [rbp - 0x394], 1	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4006dd2	            0x7409	                            je 0x4006ddd	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4006dd4	    0x83bd6cfcffff	              cmp dword [rbp - 0x394], 0	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4006ddb	            0x7534	                           jne 0x4006e11	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x4006ddd	    0x8b8d4cfcffff	            mov ecx, dword [rbp - 0x3b4]	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006de3	    0x8b9564fcffff	            mov edx, dword [rbp - 0x39c]	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006de9	    0x8bb560fcffff	            mov esi, dword [rbp - 0x3a0]	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006def	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006df6	          0x4889c7	                            mov rdi, rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006df9	      0xe8a5f9ffff	             call sym.channel_read_block	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006dfe	          0x4889c2	                            mov rdx, rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006e01	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006e08	        0x48895008	                mov qword [rax + 8], rdx	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006e0c	      0xe99e000000	                           jmp 0x4006eaf	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x4006e11	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3566	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4006e17	      0x2500200000	                         and eax, 0x2000	      3566	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4006e1c	            0x85c0	                           test eax, eax	      3566	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4006e1e	            0x740c	                            je 0x4006e2c	      3566	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4006e20	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4006e26	    0x898568fcffff	            mov dword [rbp - 0x398], eax	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x4006e2c	    0x488dbd70fcff	                  lea rdi, [rbp - 0x390]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e33	    0x8b8d68fcffff	            mov ecx, dword [rbp - 0x398]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e39	    0x8b9564fcffff	            mov edx, dword [rbp - 0x39c]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e3f	    0x8bb560fcffff	            mov esi, dword [rbp - 0x3a0]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e45	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e4c	          0x4989f8	                             mov r8, rdi	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e4f	          0x4889c7	                            mov rdi, rax	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e52	      0xe8fafbffff	        call sym.channel_read_json_block	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x4006e57	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e5e	          0x4885c0	                           test rax, rax	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e61	            0x742d	                            je 0x4006e90	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e63	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e6a	    0x488b8d50fcff	            mov rcx, qword [rbp - 0x3b0]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e71	        0x488b5008	                mov rdx, qword [rax + 8]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e75	          0x488b00	                    mov rax, qword [rax]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e78	          0x488901	                    mov qword [rcx], rax	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e7b	        0x48895108	                mov qword [rcx + 8], rdx	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x4006e7f	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x4006e86	          0x4889c7	                            mov rdi, rax	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x4006e89	      0xe800000000	                          call 0x4006e8e	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x4006e8e	            0xeb1f	                           jmp 0x4006eaf	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x4006e90	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3576	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4006e97	    0xc70008000000	                      mov dword [rax], 8	      3576	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4006e9d	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4006ea4	    0x48c740080200	                  mov qword [rax + 8], 2	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4006eac	            0xeb01	                           jmp 0x4006eaf	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x4006eae	              0x90	                                     nop	      3547	channel.c	FUNCTION_82	IF_1
0x4006eaf	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3583	channel.c	FUNCTION_82	CALL_10
0x4006eb6	          0x4889c7	                            mov rdi, rax	      3583	channel.c	FUNCTION_82	CALL_10
0x4006eb9	      0xe800000000	                          call 0x4006ebe	      3583	channel.c	FUNCTION_82	CALL_10
0x4006ebe	              0x90	                                     nop	      3584	channel.c	FUNCTION_82
0x4006ebf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3584	channel.c	FUNCTION_82
0x4006ec3	    0x644833042528	                xor rax, qword fs:[0x28]	      3584	channel.c	FUNCTION_82
0x4006ecc	            0x7405	                            je 0x4006ed3	      3584	channel.c	FUNCTION_82
0x4006ece	      0xe800000000	                          call 0x4006ed3	      3584	channel.c	FUNCTION_82
0x4006ed3	              0xc9	                                   leave	      3584	channel.c	FUNCTION_82
0x4006ed4	              0xc3	                                     ret	      3584	channel.c	FUNCTION_82
channel_can_write_to	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	18
0x4005507	              0x55	                                push rbp	      2713	channel.c	FUNCTION_62
0x4005508	          0x4889e5	                            mov rbp, rsp	      2713	channel.c	FUNCTION_62
0x400550b	        0x48897df8	                mov qword [rbp - 8], rdi	      2713	channel.c	FUNCTION_62
0x400550f	      0x48837df800	                  cmp qword [rbp - 8], 0	      2714	channel.c	FUNCTION_62
0x4005514	            0x7422	                            je 0x4005538	      2714	channel.c	FUNCTION_62
0x4005516	        0x488b45f8	                mov rax, qword [rbp - 8]	      2714	channel.c	FUNCTION_62
0x400551a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2714	channel.c	FUNCTION_62
0x400551d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2714	channel.c	FUNCTION_62
0x4005520	            0x750f	                           jne 0x4005531	      2714	channel.c	FUNCTION_62
0x4005522	        0x488b45f8	                mov rax, qword [rbp - 8]	      2715	channel.c	FUNCTION_62
0x4005526	    0x8b8048030000	           mov eax, dword [rax + 0x348] 	      2715	channel.c	FUNCTION_62
0x400552c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2715	channel.c	FUNCTION_62
0x400552f	            0x7407	                            je 0x4005538	      2715	channel.c	FUNCTION_62
0x4005531	      0xb801000000	                              mov eax, 1	      2714	channel.c	FUNCTION_62
0x4005536	            0xeb05	                           jmp 0x400553d	      2714	channel.c	FUNCTION_62
0x4005538	      0xb800000000	                              mov eax, 0	      2714	channel.c	FUNCTION_62
0x400553d	              0x5d	                                 pop rbp	      2716	channel.c	FUNCTION_62
0x400553e	              0xc3	                                     ret	      2716	channel.c	FUNCTION_62
channel_select_check	ELSE,1:WHILE,0:FOR,2:DO,0:functions,0:CALL,7:IF,3:SWITCH,0	173
0x4007cac	              0x55	                                push rbp	      4166	channel.c	FUNCTION_94
0x4007cad	          0x4889e5	                            mov rbp, rsp	      4166	channel.c	FUNCTION_94
0x4007cb0	        0x4883ec50	                           sub rsp, 0x50	      4166	channel.c	FUNCTION_94
0x4007cb4	          0x897dcc	             mov dword [rbp - 0x34], edi	      4166	channel.c	FUNCTION_94
0x4007cb7	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4166	channel.c	FUNCTION_94
0x4007cbb	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4166	channel.c	FUNCTION_94
0x4007cbf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4167	channel.c	FUNCTION_94
0x4007cc2	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4167	channel.c	FUNCTION_94
0x4007cc5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4169	channel.c	FUNCTION_94
0x4007cc9	        0x488945e8	             mov qword [rbp - 0x18], rax	      4169	channel.c	FUNCTION_94
0x4007ccd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4170	channel.c	FUNCTION_94
0x4007cd1	        0x488945f0	             mov qword [rbp - 0x10], rax	      4170	channel.c	FUNCTION_94
0x4007cd5	    0x488b05000000	            mov rax, qword [0x04007cdc] 	      4174	channel.c	FUNCTION_94	FOR_1
0x4007cdc	        0x488945e0	             mov qword [rbp - 0x20], rax	      4174	channel.c	FUNCTION_94	FOR_1
0x4007ce0	      0xe9f3010000	                           jmp 0x4007ed8	      4174	channel.c	FUNCTION_94	FOR_1
0x4007ce5	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007cec	      0xe907010000	                           jmp 0x4007df8	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007cf1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007cf5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007cf8	        0x48c1e004	                              shl rax, 4	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007cfc	          0x4889c1	                            mov rcx, rax	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007cff	        0x48c1e104	                              shl rcx, 4	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007d03	          0x4801c8	                            add rax, rcx	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007d06	          0x4801d0	                            add rax, rdx	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007d09	        0x4883c018	                           add rax, 0x18	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007d0d	            0x8b00	                    mov eax, dword [rax]	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007d0f	          0x8945dc	             mov dword [rbp - 0x24], eax	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007d12	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d16	     0xf8eae000000	                           jle 0x4007dca	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d1c	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d20	     0xf84a4000000	                            je 0x4007dca	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d26	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d29	          0x8d503f	                   lea edx, [rax + 0x3f]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d2c	            0x85c0	                           test eax, eax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d2e	           0xf48c2	                          cmovs eax, edx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d31	          0xc1f806	                              sar eax, 6	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d34	            0x89c2	                            mov edx, eax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d3a	          0x4863d2	                         movsxd rdx, edx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d3d	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d41	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d44	              0x99	                                     cdq	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d45	          0xc1ea1a	                           shr edx, 0x1a	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d48	             0x1d0	                            add eax, edx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d4a	          0x83e03f	                           and eax, 0x3f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d4d	            0x29d0	                            sub eax, edx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d4f	      0xba01000000	                              mov edx, 1	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d54	            0x89c1	                            mov ecx, eax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d56	          0x48d3e2	                             shl rdx, cl	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d59	          0x4889d0	                            mov rax, rdx	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d5c	          0x4821f0	                            and rax, rsi	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d5f	          0x4885c0	                           test rax, rax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d62	            0x7466	                            je 0x4007dca	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4007d64	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4007d67	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4007d6b	      0xba00000000	                              mov edx, 0	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4007d70	            0x89ce	                            mov esi, ecx	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4007d72	          0x4889c7	                            mov rdi, rax	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4007d75	      0xe87be8ffff	                   call sym.channel_read	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4007d7a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d7d	          0x8d503f	                   lea edx, [rax + 0x3f]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d80	            0x85c0	                           test eax, eax	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d82	           0xf48c2	                          cmovs eax, edx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d85	          0xc1f806	                              sar eax, 6	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d88	            0x89c6	                            mov esi, eax	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d8e	          0x4863d6	                         movsxd rdx, esi	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d91	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d95	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d98	              0x99	                                     cdq	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d99	          0xc1ea1a	                           shr edx, 0x1a	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d9c	             0x1d0	                            add eax, edx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007d9e	          0x83e03f	                           and eax, 0x3f	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007da1	            0x29d0	                            sub eax, edx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007da3	      0xba01000000	                              mov edx, 1	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007da8	            0x89c1	                            mov ecx, eax	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007daa	          0x48d3e2	                             shl rdx, cl	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007dad	          0x4889d0	                            mov rax, rdx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007db0	          0x48f7d0	                                 not rax	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007db3	          0x4821c7	                            and rdi, rax	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007db6	          0x4889f9	                            mov rcx, rdi	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007db9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007dbd	          0x4863d6	                         movsxd rdx, esi	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007dc0	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4007dc4	        0x836dd401	               sub dword [rbp - 0x2c], 1	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x4007dc8	            0xeb2a	                           jmp 0x4007df4	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x4007dca	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4007dce	            0x7424	                            je 0x4007df4	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4007dd0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4007dd4	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4007dda	            0x85c0	                           test eax, eax	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4007ddc	            0x7416	                            je 0x4007df4	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4007dde	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4007de1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4007de5	      0xba00000000	                              mov edx, 0	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4007dea	            0x89ce	                            mov esi, ecx	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4007dec	          0x4889c7	                            mov rdi, rax	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4007def	      0xe801e8ffff	                   call sym.channel_read	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4007df4	        0x8345d801	               add dword [rbp - 0x28], 1	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007df8	        0x837dd802	               cmp dword [rbp - 0x28], 2	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007dfc	     0xf86effeffff	                           jbe 0x4007cf1	      4176	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4007e02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4193	channel.c	FUNCTION_94	FOR_1
0x4007e06	    0x480548030000	                          add rax, 0x348	      4193	channel.c	FUNCTION_94	FOR_1
0x4007e0c	        0x488945f8	                mov qword [rbp - 8], rax	      4193	channel.c	FUNCTION_94	FOR_1
0x4007e10	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4007e14	     0xf8eb3000000	                           jle 0x4007ecd	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4007e1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4007e1e	            0x8b00	                    mov eax, dword [rax]	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4007e20	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4007e23	     0xf84a4000000	                            je 0x4007ecd	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4007e29	        0x488b45f8	                mov rax, qword [rbp - 8]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e2d	            0x8b00	                    mov eax, dword [rax]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e2f	          0x8d503f	                   lea edx, [rax + 0x3f]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e32	            0x85c0	                           test eax, eax	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e34	           0xf48c2	                          cmovs eax, edx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e37	          0xc1f806	                              sar eax, 6	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e3a	            0x89c2	                            mov edx, eax	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e40	          0x4863d2	                         movsxd rdx, edx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e43	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e47	        0x488b45f8	                mov rax, qword [rbp - 8]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e4b	            0x8b00	                    mov eax, dword [rax]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e4d	              0x99	                                     cdq	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e4e	          0xc1ea1a	                           shr edx, 0x1a	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e51	             0x1d0	                            add eax, edx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e53	          0x83e03f	                           and eax, 0x3f	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e56	            0x29d0	                            sub eax, edx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e58	      0xba01000000	                              mov edx, 1	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e5d	            0x89c1	                            mov ecx, eax	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e5f	          0x48d3e2	                             shl rdx, cl	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e62	          0x4889d0	                            mov rax, rdx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e65	          0x4821f0	                            and rax, rsi	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e68	          0x4885c0	                           test rax, rax	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e6b	            0x7460	                            je 0x4007ecd	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4007e6d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e71	            0x8b00	                    mov eax, dword [rax]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e73	          0x8d503f	                   lea edx, [rax + 0x3f]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e76	            0x85c0	                           test eax, eax	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e78	           0xf48c2	                          cmovs eax, edx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e7b	          0xc1f806	                              sar eax, 6	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e7e	            0x89c6	                            mov esi, eax	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e84	          0x4863d6	                         movsxd rdx, esi	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e87	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e8b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e8f	            0x8b00	                    mov eax, dword [rax]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e91	              0x99	                                     cdq	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e92	          0xc1ea1a	                           shr edx, 0x1a	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e95	             0x1d0	                            add eax, edx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e97	          0x83e03f	                           and eax, 0x3f	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e9a	            0x29d0	                            sub eax, edx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007e9c	      0xba01000000	                              mov edx, 1	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007ea1	            0x89c1	                            mov ecx, eax	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007ea3	          0x48d3e2	                             shl rdx, cl	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007ea6	          0x4889d0	                            mov rax, rdx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007ea9	          0x48f7d0	                                 not rax	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007eac	          0x4821c7	                            and rdi, rax	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007eaf	          0x4889f9	                            mov rcx, rdi	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007eb2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007eb6	          0x4863d6	                         movsxd rdx, esi	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007eb9	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4007ebd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4199	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_7
0x4007ec1	          0x4889c7	                            mov rdi, rax	      4199	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_7
0x4007ec4	      0xe8b2acffff	            call sym.channel_write_input	      4199	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_7
0x4007ec9	        0x836dd401	               sub dword [rbp - 0x2c], 1	      4200	channel.c	FUNCTION_94	FOR_1	IF_3
0x4007ecd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4174	channel.c	FUNCTION_94	FOR_1
0x4007ed1	          0x488b00	                    mov rax, qword [rax]	      4174	channel.c	FUNCTION_94	FOR_1
0x4007ed4	        0x488945e0	             mov qword [rbp - 0x20], rax	      4174	channel.c	FUNCTION_94	FOR_1
0x4007ed8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4174	channel.c	FUNCTION_94	FOR_1
0x4007edd	     0xf8502feffff	                           jne 0x4007ce5	      4174	channel.c	FUNCTION_94	FOR_1
0x4007ee3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4204	channel.c	FUNCTION_94
0x4007ee6	              0xc9	                                   leave	      4205	channel.c	FUNCTION_94
0x4007ee7	              0xc3	                                     ret	      4205	channel.c	FUNCTION_94
set_ref_in_channel	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	45
0x400818d	              0x55	                                push rbp	      4334	channel.c	FUNCTION_97
0x400818e	          0x4889e5	                            mov rbp, rsp	      4334	channel.c	FUNCTION_97
0x4008191	        0x4883ec40	                           sub rsp, 0x40	      4334	channel.c	FUNCTION_97
0x4008195	          0x897dcc	             mov dword [rbp - 0x34], edi	      4334	channel.c	FUNCTION_97
0x4008198	    0x64488b042528	                mov rax, qword fs:[0x28]	      4334	channel.c	FUNCTION_97
0x40081a1	        0x488945f8	                mov qword [rbp - 8], rax	      4334	channel.c	FUNCTION_97
0x40081a5	            0x31c0	                            xor eax, eax	      4334	channel.c	FUNCTION_97
0x40081a7	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      4335	channel.c	FUNCTION_97
0x40081ae	    0x488b05000000	            mov rax, qword [0x040081b5] 	      4339	channel.c	FUNCTION_97	FOR_1
0x40081b5	        0x488945d8	             mov qword [rbp - 0x28], rax	      4339	channel.c	FUNCTION_97	FOR_1
0x40081b9	            0xeb5c	                           jmp 0x4008217	      4339	channel.c	FUNCTION_97	FOR_1
0x40081bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x40081bf	          0x4889c7	                            mov rdi, rax	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x40081c2	      0xe8a283ffff	           call sym.channel_still_useful	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x40081c7	            0x85c0	                           test eax, eax	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x40081c9	            0x7441	                            je 0x400820c	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x40081cb	    0xc745e00a0000	             mov dword [rbp - 0x20], 0xa	      4342	channel.c	FUNCTION_97	FOR_1	IF_1
0x40081d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4343	channel.c	FUNCTION_97	FOR_1	IF_1
0x40081d6	        0x488945e8	             mov qword [rbp - 0x18], rax	      4343	channel.c	FUNCTION_97	FOR_1	IF_1
0x40081da	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081de	            0x751d	                           jne 0x40081fd	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081e0	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081e7	      0xb900000000	                              mov ecx, 0	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081ec	      0xba00000000	                              mov edx, 0	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081f1	          0x4889c7	                            mov rdi, rax	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081f4	      0xe800000000	                          call 0x40081f9	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081f9	            0x85c0	                           test eax, eax	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081fb	            0x7407	                            je 0x4008204	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x40081fd	      0xb801000000	                              mov eax, 1	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4008202	            0xeb05	                           jmp 0x4008209	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4008204	      0xb800000000	                              mov eax, 0	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x4008209	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400820c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4339	channel.c	FUNCTION_97	FOR_1
0x4008210	          0x488b00	                    mov rax, qword [rax]	      4339	channel.c	FUNCTION_97	FOR_1
0x4008213	        0x488945d8	             mov qword [rbp - 0x28], rax	      4339	channel.c	FUNCTION_97	FOR_1
0x4008217	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4339	channel.c	FUNCTION_97	FOR_1
0x400821c	            0x759d	                           jne 0x40081bb	      4339	channel.c	FUNCTION_97	FOR_1
0x400821e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4346	channel.c	FUNCTION_97
0x4008221	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4347	channel.c	FUNCTION_97
0x4008225	    0x644833142528	                xor rdx, qword fs:[0x28]	      4347	channel.c	FUNCTION_97
0x400822e	            0x7405	                            je 0x4008235	      4347	channel.c	FUNCTION_97
0x4008230	      0xe800000000	                          call 0x4008235	      4347	channel.c	FUNCTION_97
0x4008235	              0xc9	                                   leave	      4347	channel.c	FUNCTION_97
0x4008236	              0xc3	                                     ret	      4347	channel.c	FUNCTION_97
channel_set_pipes	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,8:IF,4:SWITCH,0	76
0x4001a32	              0x55	                                push rbp	      1016	channel.c	FUNCTION_30
0x4001a33	          0x4889e5	                            mov rbp, rsp	      1016	channel.c	FUNCTION_30
0x4001a36	        0x4883ec20	                           sub rsp, 0x20	      1016	channel.c	FUNCTION_30
0x4001a3a	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	channel.c	FUNCTION_30
0x4001a3e	          0x8975f4	              mov dword [rbp - 0xc], esi	      1016	channel.c	FUNCTION_30
0x4001a41	          0x8955f0	             mov dword [rbp - 0x10], edx	      1016	channel.c	FUNCTION_30
0x4001a44	          0x894dec	             mov dword [rbp - 0x14], ecx	      1016	channel.c	FUNCTION_30
0x4001a47	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	      1017	channel.c	FUNCTION_30	IF_1
0x4001a4b	            0x7445	                            je 0x4001a92	      1017	channel.c	FUNCTION_30	IF_1
0x4001a4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x4001a51	      0xbe03000000	                              mov esi, 3	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x4001a56	          0x4889c7	                            mov rdi, rax	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x4001a59	      0xe8ebfeffff	                  call sym.ch_close_part	      1019	channel.c	FUNCTION_30	IF_1	CALL_1
0x4001a5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1020	channel.c	FUNCTION_30	IF_1
0x4001a62	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1020	channel.c	FUNCTION_30	IF_1
0x4001a65	    0x899048030000	            mov dword [rax + 0x348], edx	      1020	channel.c	FUNCTION_30	IF_1
0x4001a6b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001a6e	            0x89c7	                            mov edi, eax	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001a70	      0xe800000000	                          call 0x4001a75	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001a75	            0x85c0	                           test eax, eax	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001a77	            0x7419	                            je 0x4001a92	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4001a79	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001a7d	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001a83	          0x83c808	                               or eax, 8	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001a86	            0x89c2	                            mov edx, eax	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001a88	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001a8c	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4001a92	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	      1028	channel.c	FUNCTION_30	IF_3
0x4001a96	            0x7459	                            je 0x4001af1	      1028	channel.c	FUNCTION_30	IF_3
0x4001a98	        0x488b45f8	                mov rax, qword [rbp - 8]	      1031	channel.c	FUNCTION_30	IF_3	CALL_3
0x4001a9c	      0xbe01000000	                              mov esi, 1	      1031	channel.c	FUNCTION_30	IF_3	CALL_3
0x4001aa1	          0x4889c7	                            mov rdi, rax	      1031	channel.c	FUNCTION_30	IF_3	CALL_3
0x4001aa4	      0xe87af1ffff	     call sym.channel_gui_unregister_one	      1031	channel.c	FUNCTION_30	IF_3	CALL_3
0x4001aa9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x4001aad	      0xbe01000000	                              mov esi, 1	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x4001ab2	          0x4889c7	                            mov rdi, rax	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x4001ab5	      0xe88ffeffff	                  call sym.ch_close_part	      1033	channel.c	FUNCTION_30	IF_3	CALL_4
0x4001aba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1034	channel.c	FUNCTION_30	IF_3
0x4001abe	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1034	channel.c	FUNCTION_30	IF_3
0x4001ac1	    0x899028010000	            mov dword [rax + 0x128], edx	      1034	channel.c	FUNCTION_30	IF_3
0x4001ac7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1035	channel.c	FUNCTION_30	IF_3
0x4001acb	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1035	channel.c	FUNCTION_30	IF_3
0x4001ad1	          0x83c802	                               or eax, 2	      1035	channel.c	FUNCTION_30	IF_3
0x4001ad4	            0x89c2	                            mov edx, eax	      1035	channel.c	FUNCTION_30	IF_3
0x4001ad6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1035	channel.c	FUNCTION_30	IF_3
0x4001ada	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1035	channel.c	FUNCTION_30	IF_3
0x4001ae0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x4001ae4	      0xbe01000000	                              mov esi, 1	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x4001ae9	          0x4889c7	                            mov rdi, rax	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x4001aec	      0xe833efffff	       call sym.channel_gui_register_one	      1037	channel.c	FUNCTION_30	IF_3	CALL_5
0x4001af1	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	      1040	channel.c	FUNCTION_30	IF_4
0x4001af5	            0x7459	                            je 0x4001b50	      1040	channel.c	FUNCTION_30	IF_4
0x4001af7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1043	channel.c	FUNCTION_30	IF_4	CALL_6
0x4001afb	      0xbe02000000	                              mov esi, 2	      1043	channel.c	FUNCTION_30	IF_4	CALL_6
0x4001b00	          0x4889c7	                            mov rdi, rax	      1043	channel.c	FUNCTION_30	IF_4	CALL_6
0x4001b03	      0xe81bf1ffff	     call sym.channel_gui_unregister_one	      1043	channel.c	FUNCTION_30	IF_4	CALL_6
0x4001b08	        0x488b45f8	                mov rax, qword [rbp - 8]	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x4001b0c	      0xbe02000000	                              mov esi, 2	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x4001b11	          0x4889c7	                            mov rdi, rax	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x4001b14	      0xe830feffff	                  call sym.ch_close_part	      1045	channel.c	FUNCTION_30	IF_4	CALL_7
0x4001b19	        0x488b45f8	                mov rax, qword [rbp - 8]	      1046	channel.c	FUNCTION_30	IF_4
0x4001b1d	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1046	channel.c	FUNCTION_30	IF_4
0x4001b20	    0x899038020000	            mov dword [rax + 0x238], edx	      1046	channel.c	FUNCTION_30	IF_4
0x4001b26	        0x488b45f8	                mov rax, qword [rbp - 8]	      1047	channel.c	FUNCTION_30	IF_4
0x4001b2a	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1047	channel.c	FUNCTION_30	IF_4
0x4001b30	          0x83c804	                               or eax, 4	      1047	channel.c	FUNCTION_30	IF_4
0x4001b33	            0x89c2	                            mov edx, eax	      1047	channel.c	FUNCTION_30	IF_4
0x4001b35	        0x488b45f8	                mov rax, qword [rbp - 8]	      1047	channel.c	FUNCTION_30	IF_4
0x4001b39	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1047	channel.c	FUNCTION_30	IF_4
0x4001b3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x4001b43	      0xbe02000000	                              mov esi, 2	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x4001b48	          0x4889c7	                            mov rdi, rax	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x4001b4b	      0xe8d4eeffff	       call sym.channel_gui_register_one	      1049	channel.c	FUNCTION_30	IF_4	CALL_8
0x4001b50	              0x90	                                     nop	      1052	channel.c	FUNCTION_30
0x4001b51	              0xc9	                                   leave	      1052	channel.c	FUNCTION_30
0x4001b52	              0xc3	                                     ret	      1052	channel.c	FUNCTION_30
ch_log_active	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	8
0x400010e	              0x55	                                push rbp	       136	channel.c	FUNCTION_2
0x400010f	          0x4889e5	                            mov rbp, rsp	       136	channel.c	FUNCTION_2
0x4000112	    0x488b05000000	            mov rax, qword [0x04000119] 	       137	channel.c	FUNCTION_2
0x4000119	          0x4885c0	                           test rax, rax	       137	channel.c	FUNCTION_2
0x400011c	           0xf95c0	                                setne al	       137	channel.c	FUNCTION_2
0x400011f	           0xfb6c0	                           movzx eax, al	       137	channel.c	FUNCTION_2
0x4000122	              0x5d	                                 pop rbp	       138	channel.c	FUNCTION_2
0x4000123	              0xc3	                                     ret	       138	channel.c	FUNCTION_2
channel_buffer_free	ELSE,0:WHILE,0:FOR,2:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	43
0x4002ace	              0x55	                                push rbp	      1488	channel.c	FUNCTION_39
0x4002acf	          0x4889e5	                            mov rbp, rsp	      1488	channel.c	FUNCTION_39
0x4002ad2	        0x4883ec30	                           sub rsp, 0x30	      1488	channel.c	FUNCTION_39
0x4002ad6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1488	channel.c	FUNCTION_39
0x4002ada	    0x488b05000000	            mov rax, qword [0x04002ae1] 	      1492	channel.c	FUNCTION_39	FOR_1
0x4002ae1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1492	channel.c	FUNCTION_39	FOR_1
0x4002ae5	      0xe983000000	                           jmp 0x4002b6d	      1492	channel.c	FUNCTION_39	FOR_1
0x4002aea	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002af1	            0xeb69	                           jmp 0x4002b5c	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002af3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002af6	        0x48c1e004	                              shl rax, 4	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002afa	          0x4889c2	                            mov rdx, rax	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002afd	        0x48c1e204	                              shl rdx, 4	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b01	          0x4801d0	                            add rax, rdx	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b04	        0x488d5010	                   lea rdx, [rax + 0x10]	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b0c	          0x4801d0	                            add rax, rdx	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b0f	        0x4883c008	                              add rax, 8	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b13	        0x488945f8	                mov qword [rbp - 8], rax	      1495	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b17	        0x488b45f8	                mov rax, qword [rbp - 8]	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002b1b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002b22	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002b26	            0x7530	                           jne 0x4002b58	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002b28	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4002b2b	    0x488b14c50000	                  mov rdx, qword [rax*8]	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4002b33	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4002b37	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4002b3c	          0x4889c7	                            mov rdi, rax	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4002b3f	      0xb800000000	                              mov eax, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4002b44	      0xe800000000	                          call 0x4002b49	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4002b49	        0x488b45f8	                mov rax, qword [rbp - 8]	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002b4d	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002b58	        0x8345ec01	               add dword [rbp - 0x14], 1	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b5c	        0x837dec03	               cmp dword [rbp - 0x14], 3	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b60	            0x7691	                           jbe 0x4002af3	      1493	channel.c	FUNCTION_39	FOR_1	FOR_2
0x4002b62	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1492	channel.c	FUNCTION_39	FOR_1
0x4002b66	          0x488b00	                    mov rax, qword [rax]	      1492	channel.c	FUNCTION_39	FOR_1
0x4002b69	        0x488945f0	             mov qword [rbp - 0x10], rax	      1492	channel.c	FUNCTION_39	FOR_1
0x4002b6d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1492	channel.c	FUNCTION_39	FOR_1
0x4002b72	     0xf8572ffffff	                           jne 0x4002aea	      1492	channel.c	FUNCTION_39	FOR_1
0x4002b78	              0x90	                                     nop	      1504	channel.c	FUNCTION_39
0x4002b79	              0xc9	                                   leave	      1504	channel.c	FUNCTION_39
0x4002b7a	              0xc3	                                     ret	      1504	channel.c	FUNCTION_39
channel_get_timeout	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	15
0x40082b4	              0x55	                                push rbp	      4388	channel.c	FUNCTION_101
0x40082b5	          0x4889e5	                            mov rbp, rsp	      4388	channel.c	FUNCTION_101
0x40082b8	        0x48897df8	                mov qword [rbp - 8], rdi	      4388	channel.c	FUNCTION_101
0x40082bc	          0x8975f4	              mov dword [rbp - 0xc], esi	      4388	channel.c	FUNCTION_101
0x40082bf	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4389	channel.c	FUNCTION_101
0x40082c3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4389	channel.c	FUNCTION_101
0x40082c6	        0x48c1e004	                              shl rax, 4	      4389	channel.c	FUNCTION_101
0x40082ca	          0x4889c1	                            mov rcx, rax	      4389	channel.c	FUNCTION_101
0x40082cd	        0x48c1e104	                              shl rcx, 4	      4389	channel.c	FUNCTION_101
0x40082d1	          0x4801c8	                            add rax, rcx	      4389	channel.c	FUNCTION_101
0x40082d4	          0x4801d0	                            add rax, rdx	      4389	channel.c	FUNCTION_101
0x40082d7	        0x4883c028	                           add rax, 0x28	      4389	channel.c	FUNCTION_101
0x40082db	            0x8b00	                    mov eax, dword [rax]	      4389	channel.c	FUNCTION_101
0x40082dd	              0x5d	                                 pop rbp	      4390	channel.c	FUNCTION_101
0x40082de	              0xc3	                                     ret	      4390	channel.c	FUNCTION_101
channel_open_func	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,16:IF,6:SWITCH,0	131
0x40016e5	              0x55	                                push rbp	       927	channel.c	FUNCTION_28
0x40016e6	          0x4889e5	                            mov rbp, rsp	       927	channel.c	FUNCTION_28
0x40016e9	    0x4881ecc00300	                          sub rsp, 0x3c0	       927	channel.c	FUNCTION_28
0x40016f0	    0x4889bd48fcff	            mov qword [rbp - 0x3b8], rdi	       927	channel.c	FUNCTION_28
0x40016f7	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	channel.c	FUNCTION_28
0x4001700	        0x488945f8	                mov qword [rbp - 8], rax	       927	channel.c	FUNCTION_28
0x4001704	            0x31c0	                            xor eax, eax	       927	channel.c	FUNCTION_28
0x4001706	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	       933	channel.c	FUNCTION_28
0x4001711	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       935	channel.c	FUNCTION_28	CALL_1
0x4001718	          0x4889c7	                            mov rdi, rax	       935	channel.c	FUNCTION_28	CALL_1
0x400171b	      0xe800000000	                          call 0x4001720	       935	channel.c	FUNCTION_28	CALL_1
0x4001720	    0x48898570fcff	            mov qword [rbp - 0x390], rax	       935	channel.c	FUNCTION_28	CALL_1
0x4001727	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       936	channel.c	FUNCTION_28	IF_1
0x400172e	        0x4883c010	                           add rax, 0x10	       936	channel.c	FUNCTION_28	IF_1
0x4001732	            0x8b00	                    mov eax, dword [rax]	       936	channel.c	FUNCTION_28	IF_1
0x4001734	            0x85c0	                           test eax, eax	       936	channel.c	FUNCTION_28	IF_1
0x4001736	            0x7442	                            je 0x400177a	       936	channel.c	FUNCTION_28	IF_1
0x4001738	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       937	channel.c	FUNCTION_28	IF_1
0x400173f	        0x4883c010	                           add rax, 0x10	       937	channel.c	FUNCTION_28	IF_1
0x4001743	            0x8b00	                    mov eax, dword [rax]	       937	channel.c	FUNCTION_28	IF_1
0x4001745	          0x83f806	                              cmp eax, 6	       937	channel.c	FUNCTION_28	IF_1
0x4001748	            0x7514	                           jne 0x400175e	       937	channel.c	FUNCTION_28	IF_1
0x400174a	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       937	channel.c	FUNCTION_28	IF_1
0x4001751	        0x4883c010	                           add rax, 0x10	       937	channel.c	FUNCTION_28	IF_1
0x4001755	        0x488b4008	                mov rax, qword [rax + 8]	       937	channel.c	FUNCTION_28	IF_1
0x4001759	          0x4885c0	                           test rax, rax	       937	channel.c	FUNCTION_28	IF_1
0x400175c	            0x751c	                           jne 0x400177a	       937	channel.c	FUNCTION_28	IF_1
0x400175e	      0xbf00000000	                              mov edi, 0	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4001763	      0xe800000000	                          call 0x4001768	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4001768	          0x4889c7	                            mov rdi, rax	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x400176b	      0xe800000000	                          call 0x4001770	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x4001770	      0xb800000000	                              mov eax, 0	       940	channel.c	FUNCTION_28	IF_1
0x4001775	      0xe9b9010000	                           jmp 0x4001933	       940	channel.c	FUNCTION_28	IF_1
0x400177a	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       944	channel.c	FUNCTION_28	CALL_4
0x4001781	      0xbe3a000000	                           mov esi, 0x3a	       944	channel.c	FUNCTION_28	CALL_4
0x4001786	          0x4889c7	                            mov rdi, rax	       944	channel.c	FUNCTION_28	CALL_4
0x4001789	      0xe800000000	                          call 0x400178e	       944	channel.c	FUNCTION_28	CALL_4
0x400178e	    0x48898578fcff	            mov qword [rbp - 0x388], rax	       944	channel.c	FUNCTION_28	CALL_4
0x4001795	    0x4883bd78fcff	              cmp qword [rbp - 0x388], 0	       945	channel.c	FUNCTION_28	IF_2
0x400179d	            0x7529	                           jne 0x40017c8	       945	channel.c	FUNCTION_28	IF_2
0x400179f	      0xbf00000000	                              mov edi, 0	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x40017a4	      0xe800000000	                          call 0x40017a9	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x40017a9	          0x4889c2	                            mov rdx, rax	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x40017ac	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x40017b3	          0x4889c6	                            mov rsi, rax	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x40017b6	          0x4889d7	                            mov rdi, rdx	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x40017b9	      0xe800000000	                          call 0x40017be	       947	channel.c	FUNCTION_28	IF_2	CALL_6
0x40017be	      0xb800000000	                              mov eax, 0	       948	channel.c	FUNCTION_28	IF_2
0x40017c3	      0xe96b010000	                           jmp 0x4001933	       948	channel.c	FUNCTION_28	IF_2
0x40017c8	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       950	channel.c	FUNCTION_28
0x40017cf	        0x488d5001	                      lea rdx, [rax + 1]	       950	channel.c	FUNCTION_28
0x40017d3	    0x48899578fcff	            mov qword [rbp - 0x388], rdx	       950	channel.c	FUNCTION_28
0x40017da	          0xc60000	                       mov byte [rax], 0	       950	channel.c	FUNCTION_28
0x40017dd	    0x488d8d60fcff	                  lea rcx, [rbp - 0x3a0]	       951	channel.c	FUNCTION_28	CALL_7
0x40017e4	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       951	channel.c	FUNCTION_28	CALL_7
0x40017eb	      0xba0a000000	                            mov edx, 0xa	       951	channel.c	FUNCTION_28	CALL_7
0x40017f0	          0x4889ce	                            mov rsi, rcx	       951	channel.c	FUNCTION_28	CALL_7
0x40017f3	          0x4889c7	                            mov rdi, rax	       951	channel.c	FUNCTION_28	CALL_7
0x40017f6	      0xe800000000	                          call 0x40017fb	       951	channel.c	FUNCTION_28	CALL_7
0x40017fb	    0x89855cfcffff	            mov dword [rbp - 0x3a4], eax	       951	channel.c	FUNCTION_28	CALL_7
0x4001801	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       952	channel.c	FUNCTION_28	IF_3
0x4001808	           0xfb600	                   movzx eax, byte [rax]	       952	channel.c	FUNCTION_28	IF_3
0x400180b	            0x84c0	                             test al, al	       952	channel.c	FUNCTION_28	IF_3
0x400180d	            0x7417	                            je 0x4001826	       952	channel.c	FUNCTION_28	IF_3
0x400180f	    0x83bd5cfcffff	              cmp dword [rbp - 0x3a4], 0	       952	channel.c	FUNCTION_28	IF_3
0x4001816	            0x7e0e	                           jle 0x4001826	       952	channel.c	FUNCTION_28	IF_3
0x4001818	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	       952	channel.c	FUNCTION_28	IF_3
0x400181f	           0xfb600	                   movzx eax, byte [rax]	       952	channel.c	FUNCTION_28	IF_3
0x4001822	            0x84c0	                             test al, al	       952	channel.c	FUNCTION_28	IF_3
0x4001824	            0x7437	                            je 0x400185d	       952	channel.c	FUNCTION_28	IF_3
0x4001826	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       954	channel.c	FUNCTION_28	IF_3
0x400182d	        0x4883e801	                              sub rax, 1	       954	channel.c	FUNCTION_28	IF_3
0x4001831	          0xc6003a	                    mov byte [rax], 0x3a	       954	channel.c	FUNCTION_28	IF_3
0x4001834	      0xbf00000000	                              mov edi, 0	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4001839	      0xe800000000	                          call 0x400183e	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400183e	          0x4889c2	                            mov rdx, rax	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4001841	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4001848	          0x4889c6	                            mov rsi, rax	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400184b	          0x4889d7	                            mov rdi, rdx	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400184e	      0xe800000000	                          call 0x4001853	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x4001853	      0xb800000000	                              mov eax, 0	       956	channel.c	FUNCTION_28	IF_3
0x4001858	      0xe9d6000000	                           jmp 0x4001933	       956	channel.c	FUNCTION_28	IF_3
0x400185d	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       960	channel.c	FUNCTION_28	CALL_10
0x4001864	          0x4889c7	                            mov rdi, rax	       960	channel.c	FUNCTION_28	CALL_10
0x4001867	      0xe800000000	                          call 0x400186c	       960	channel.c	FUNCTION_28	CALL_10
0x400186c	    0xc78588fcffff	              mov dword [rbp - 0x378], 2	       961	channel.c	FUNCTION_28
0x4001876	    0xc78578feffff	         mov dword [rbp - 0x188], 0x7d0 	       962	channel.c	FUNCTION_28
0x4001880	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4001887	        0x488d7810	                   lea rdi, [rax + 0x10]	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x400188b	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4001892	      0xb900000000	                              mov ecx, 0	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x4001897	      0xbaff0f0000	                          mov edx, 0xfff	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x400189c	          0x4889c6	                            mov rsi, rax	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x400189f	      0xe800000000	                          call 0x40018a4	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x40018a4	            0x85c0	                           test eax, eax	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x40018a6	            0x7474	                            je 0x400191c	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x40018a8	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	       966	channel.c	FUNCTION_28	IF_5
0x40018ae	            0x85c0	                           test eax, eax	       966	channel.c	FUNCTION_28	IF_5
0x40018b0	            0x7914	                           jns 0x40018c6	       966	channel.c	FUNCTION_28	IF_5
0x40018b2	      0xbf00000000	                              mov edi, 0	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40018b7	      0xe800000000	                          call 0x40018bc	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40018bc	          0x4889c7	                            mov rdi, rax	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40018bf	      0xe800000000	                          call 0x40018c4	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x40018c4	            0xeb57	                           jmp 0x400191d	       969	channel.c	FUNCTION_28	IF_5
0x40018c6	    0x8b9574feffff	            mov edx, dword [rbp - 0x18c]	       972	channel.c	FUNCTION_28	CALL_14
0x40018cc	    0x8bb55cfcffff	            mov esi, dword [rbp - 0x3a4]	       972	channel.c	FUNCTION_28	CALL_14
0x40018d2	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       972	channel.c	FUNCTION_28	CALL_14
0x40018d9	      0xb900000000	                              mov ecx, 0	       972	channel.c	FUNCTION_28	CALL_14
0x40018de	          0x4889c7	                            mov rdi, rax	       972	channel.c	FUNCTION_28	CALL_14
0x40018e1	      0xe800000000	                          call 0x40018e6	       972	channel.c	FUNCTION_28	CALL_14
0x40018e6	    0x48898568fcff	            mov qword [rbp - 0x398], rax	       972	channel.c	FUNCTION_28	CALL_14
0x40018ed	    0x4883bd68fcff	              cmp qword [rbp - 0x398], 0	       973	channel.c	FUNCTION_28	IF_6
0x40018f5	            0x7426	                            je 0x400191d	       973	channel.c	FUNCTION_28	IF_6
0x40018f7	    0xc78580fcffff	     mov dword [rbp - 0x380], 0x7fffffff	       975	channel.c	FUNCTION_28	IF_6
0x4001901	    0x488d9580fcff	                  lea rdx, [rbp - 0x380]	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4001908	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400190f	          0x4889d6	                            mov rsi, rdx	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4001912	          0x4889c7	                            mov rdi, rax	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x4001915	      0xe800000000	                          call 0x400191a	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400191a	            0xeb01	                           jmp 0x400191d	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400191c	              0x90	                                     nop	       965	channel.c	FUNCTION_28	IF_4
0x400191d	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       979	channel.c	FUNCTION_28	CALL_16
0x4001924	          0x4889c7	                            mov rdi, rax	       979	channel.c	FUNCTION_28	CALL_16
0x4001927	      0xe800000000	                          call 0x400192c	       979	channel.c	FUNCTION_28	CALL_16
0x400192c	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	       980	channel.c	FUNCTION_28
0x4001933	        0x488b4df8	                mov rcx, qword [rbp - 8]	       981	channel.c	FUNCTION_28
0x4001937	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       981	channel.c	FUNCTION_28
0x4001940	            0x7405	                            je 0x4001947	       981	channel.c	FUNCTION_28
0x4001942	      0xe800000000	                          call 0x4001947	       981	channel.c	FUNCTION_28
0x4001947	              0xc9	                                   leave	       981	channel.c	FUNCTION_28
0x4001948	              0xc3	                                     ret	       981	channel.c	FUNCTION_28
may_invoke_callback	ELSE,11:WHILE,2:FOR,4:DO,0:functions,0:CALL,31:IF,34:SWITCH,0	489
0x4004c05	              0x55	                                push rbp	      2465	channel.c	FUNCTION_61
0x4004c06	          0x4889e5	                            mov rbp, rsp	      2465	channel.c	FUNCTION_61
0x4004c09	    0x4881ece00000	                           sub rsp, 0xe0	      2465	channel.c	FUNCTION_61
0x4004c10	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      2465	channel.c	FUNCTION_61
0x4004c17	    0x89b524ffffff	             mov dword [rbp - 0xdc], esi	      2465	channel.c	FUNCTION_61
0x4004c1d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2465	channel.c	FUNCTION_61
0x4004c26	        0x488945f8	                mov qword [rbp - 8], rax	      2465	channel.c	FUNCTION_61
0x4004c2a	            0x31c0	                            xor eax, eax	      2465	channel.c	FUNCTION_61
0x4004c2c	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      2466	channel.c	FUNCTION_61
0x4004c37	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2467	channel.c	FUNCTION_61
0x4004c42	    0xc78530ffffff	     mov dword [rbp - 0xd0], 0xffffffff 	      2469	channel.c	FUNCTION_61
0x4004c4c	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2470	channel.c	FUNCTION_61
0x4004c52	        0x48c1e004	                              shl rax, 4	      2470	channel.c	FUNCTION_61
0x4004c56	          0x4889c2	                            mov rdx, rax	      2470	channel.c	FUNCTION_61
0x4004c59	        0x48c1e204	                              shl rdx, 4	      2470	channel.c	FUNCTION_61
0x4004c5d	          0x4801d0	                            add rax, rdx	      2470	channel.c	FUNCTION_61
0x4004c60	        0x488d5010	                   lea rdx, [rax + 0x10]	      2470	channel.c	FUNCTION_61
0x4004c64	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2470	channel.c	FUNCTION_61
0x4004c6b	          0x4801d0	                            add rax, rdx	      2470	channel.c	FUNCTION_61
0x4004c6e	        0x4883c008	                              add rax, 8	      2470	channel.c	FUNCTION_61
0x4004c72	        0x48894590	             mov qword [rbp - 0x70], rax	      2470	channel.c	FUNCTION_61
0x4004c76	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2471	channel.c	FUNCTION_61
0x4004c7a	          0x8b4008	                mov eax, dword [rax + 8]	      2471	channel.c	FUNCTION_61
0x4004c7d	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      2471	channel.c	FUNCTION_61
0x4004c83	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2472	channel.c	FUNCTION_61
0x4004c87	    0x4805a8000000	                           add rax, 0xa8	      2472	channel.c	FUNCTION_61
0x4004c8d	        0x48894598	             mov qword [rbp - 0x68], rax	      2472	channel.c	FUNCTION_61
0x4004c91	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      2474	channel.c	FUNCTION_61
0x4004c9c	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      2475	channel.c	FUNCTION_61
0x4004ca7	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2476	channel.c	FUNCTION_61
0x4004cb2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2479	channel.c	FUNCTION_61	IF_1
0x4004cb9	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      2479	channel.c	FUNCTION_61	IF_1
0x4004cc0	          0x4885c0	                           test rax, rax	      2479	channel.c	FUNCTION_61	IF_1
0x4004cc3	            0x740a	                            je 0x4004ccf	      2479	channel.c	FUNCTION_61	IF_1
0x4004cc5	      0xb800000000	                              mov eax, 0	      2481	channel.c	FUNCTION_61	IF_1
0x4004cca	      0xe922080000	                           jmp 0x40054f1	      2481	channel.c	FUNCTION_61	IF_1
0x4004ccf	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2484	channel.c	FUNCTION_61	FOR_1
0x4004cd3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2484	channel.c	FUNCTION_61	FOR_1
0x4004cd7	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2484	channel.c	FUNCTION_61	FOR_1
0x4004cde	            0xeb20	                           jmp 0x4004d00	      2484	channel.c	FUNCTION_61	FOR_1
0x4004ce0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4004ce7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4004cea	            0x85c0	                           test eax, eax	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4004cec	            0x741e	                            je 0x4004d0c	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4004cee	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2484	channel.c	FUNCTION_61	FOR_1
0x4004cf5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2484	channel.c	FUNCTION_61	FOR_1
0x4004cf9	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2484	channel.c	FUNCTION_61	FOR_1
0x4004d00	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2484	channel.c	FUNCTION_61	FOR_1
0x4004d08	            0x75d6	                           jne 0x4004ce0	      2484	channel.c	FUNCTION_61	FOR_1
0x4004d0a	            0xeb01	                           jmp 0x4004d0d	      2484	channel.c	FUNCTION_61	FOR_1
0x4004d0c	              0x90	                                     nop	      2486	channel.c	FUNCTION_61	FOR_1	IF_2
0x4004d0d	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2487	channel.c	FUNCTION_61	IF_3
0x4004d15	            0x7425	                            je 0x4004d3c	      2487	channel.c	FUNCTION_61	IF_3
0x4004d17	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2489	channel.c	FUNCTION_61	IF_3
0x4004d1e	          0x488b00	                    mov rax, qword [rax]	      2489	channel.c	FUNCTION_61	IF_3
0x4004d21	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2489	channel.c	FUNCTION_61	IF_3
0x4004d28	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2490	channel.c	FUNCTION_61	IF_3
0x4004d2f	        0x488b4008	                mov rax, qword [rax + 8]	      2490	channel.c	FUNCTION_61	IF_3
0x4004d33	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2490	channel.c	FUNCTION_61	IF_3
0x4004d3a	            0xeb60	                           jmp 0x4004d9c	      2490	channel.c	FUNCTION_61	IF_3
0x4004d3c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d40	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d47	          0x4885c0	                           test rax, rax	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d4a	            0x7426	                            je 0x4004d72	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d4c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2494	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d50	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2494	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d57	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2494	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d5e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d62	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d69	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d70	            0xeb2a	                           jmp 0x4004d9c	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4004d72	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2499	channel.c	FUNCTION_61	ELSE_2
0x4004d79	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      2499	channel.c	FUNCTION_61	ELSE_2
0x4004d80	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2499	channel.c	FUNCTION_61	ELSE_2
0x4004d87	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2500	channel.c	FUNCTION_61	ELSE_2
0x4004d8e	    0x488b80880400	           mov rax, qword [rax + 0x488] 	      2500	channel.c	FUNCTION_61	ELSE_2
0x4004d95	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2500	channel.c	FUNCTION_61	ELSE_2
0x4004d9c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2503	channel.c	FUNCTION_61
0x4004da0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2503	channel.c	FUNCTION_61
0x4004da7	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2503	channel.c	FUNCTION_61
0x4004dae	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004db6	            0x7467	                            je 0x4004e1f	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004db8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004dbc	    0x4805e0000000	                           add rax, 0xe0	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004dc2	          0x4889c7	                            mov rdi, rax	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004dc5	      0xe800000000	                          call 0x4004dca	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004dca	            0x85c0	                           test eax, eax	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004dcc	            0x7410	                            je 0x4004dde	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4004dce	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2505	channel.c	FUNCTION_61	IF_5
0x4004dd5	        0x488b4008	                mov rax, qword [rax + 8]	      2505	channel.c	FUNCTION_61	IF_5
0x4004dd9	          0x4885c0	                           test rax, rax	      2505	channel.c	FUNCTION_61	IF_5
0x4004ddc	            0x7541	                           jne 0x4004e1f	      2505	channel.c	FUNCTION_61	IF_5
0x4004dde	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4004de4	    0x488b14c50000	                  mov rdx, qword [rax*8]	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4004dec	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4004df3	      0xbe00000000	                              mov esi, 0	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4004df8	          0x4889c7	                            mov rdi, rax	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4004dfb	      0xb800000000	                              mov eax, 0	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4004e00	      0xe800000000	                          call 0x4004e05	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4004e05	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2509	channel.c	FUNCTION_61	IF_5
0x4004e09	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      2509	channel.c	FUNCTION_61	IF_5
0x4004e14	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2510	channel.c	FUNCTION_61	IF_5
0x4004e1f	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 2	      2513	channel.c	FUNCTION_61	IF_6
0x4004e26	            0x740d	                            je 0x4004e35	      2513	channel.c	FUNCTION_61	IF_6
0x4004e28	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 3	      2513	channel.c	FUNCTION_61	IF_6
0x4004e2f	     0xf85a4010000	                           jne 0x4004fd9	      2513	channel.c	FUNCTION_61	IF_6
0x4004e35	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      2516	channel.c	FUNCTION_61	IF_6
0x4004e3f	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e46	    0x8bb524ffffff	             mov esi, dword [rbp - 0xdc]	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e4c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e53	          0x4989d0	                             mov r8, rdx	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e56	      0xb900000000	                              mov ecx, 0	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e5b	      0xbaffffffff	                     mov edx, 0xffffffff	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e60	          0x4889c7	                            mov rdi, rax	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e63	      0xe82fefffff	               call sym.channel_get_json	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e68	            0x85c0	                           test eax, eax	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e6a	            0x754e	                           jne 0x4004eba	      2519	channel.c	FUNCTION_61	IF_6	IF_7	CALL_3
0x4004e6c	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4004e72	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4004e79	            0x89d6	                            mov esi, edx	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4004e7b	          0x4889c7	                            mov rdi, rax	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4004e7e	      0xe858e9ffff	             call sym.channel_parse_json	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4004e83	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004e8a	    0x8bb524ffffff	             mov esi, dword [rbp - 0xdc]	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004e90	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004e97	          0x4989d0	                             mov r8, rdx	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004e9a	      0xb900000000	                              mov ecx, 0	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004e9f	      0xbaffffffff	                     mov edx, 0xffffffff	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004ea4	          0x4889c7	                            mov rdi, rax	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004ea7	      0xe8ebeeffff	               call sym.channel_get_json	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004eac	            0x85c0	                           test eax, eax	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004eae	            0x750a	                           jne 0x4004eba	      2523	channel.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x4004eb0	      0xb800000000	                              mov eax, 0	      2524	channel.c	FUNCTION_61	IF_6	IF_7	IF_8
0x4004eb5	      0xe937060000	                           jmp 0x40054f1	      2524	channel.c	FUNCTION_61	IF_6	IF_7	IF_8
0x4004eba	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ec1	        0x488b4008	                mov rax, qword [rax + 8]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ec5	          0x488b00	                    mov rax, qword [rax]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ec8	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ecf	            0xeb43	                           jmp 0x4004f14	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ed1	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ed7	          0x8d5001	                      lea edx, [rax + 1]	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004eda	    0x899534ffffff	             mov dword [rbp - 0xcc], edx	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ee0	            0x4898	                                    cdqe	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ee2	        0x48c1e004	                              shl rax, 4	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ee6	          0x4801e8	                            add rax, rbp	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ee9	        0x488d48b0	                   lea rcx, [rax - 0x50]	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004eed	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ef4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004ef8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004efc	          0x488901	                    mov qword [rcx], rax	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004eff	        0x48895108	                mov qword [rcx + 8], rdx	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f03	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f0a	          0x488b00	                    mov rax, qword [rax]	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f0d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f14	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f1c	            0x742d	                            je 0x4004f4b	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f1e	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 3	      2528	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f25	            0x7eaa	                           jle 0x4004ed1	      2528	channel.c	FUNCTION_61	IF_6	FOR_2
0x4004f27	            0xeb22	                           jmp 0x4004f4b	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f29	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f2f	          0x8d5001	                      lea edx, [rax + 1]	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f32	    0x899534ffffff	             mov dword [rbp - 0xcc], edx	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f38	            0x4898	                                    cdqe	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f3a	        0x48c1e004	                              shl rax, 4	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f3e	          0x4801e8	                            add rax, rbp	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f41	        0x4883e850	                           sub rax, 0x50	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f45	    0xc70000000000	                      mov dword [rax], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f4b	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 3	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f52	            0x7ed5	                           jle 0x4004f29	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4004f54	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x4004f57	          0x83f802	                              cmp eax, 2	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x4004f5a	            0x7534	                           jne 0x4004f90	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x4004f5c	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2537	channel.c	FUNCTION_61	IF_6	IF_9	CALL_6
0x4004f60	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2537	channel.c	FUNCTION_61	IF_6	IF_9	CALL_6
0x4004f66	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2537	channel.c	FUNCTION_61	IF_6	IF_9	CALL_6
0x4004f6d	            0x89ce	                            mov esi, ecx	      2537	channel.c	FUNCTION_61	IF_6	IF_9	CALL_6
0x4004f6f	          0x4889c7	                            mov rdi, rax	      2537	channel.c	FUNCTION_61	IF_6	IF_9	CALL_6
0x4004f72	      0xe83df1ffff	                call sym.channel_exe_cmd	      2537	channel.c	FUNCTION_61	IF_6	IF_9	CALL_6
0x4004f77	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x4004f7e	          0x4889c7	                            mov rdi, rax	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x4004f81	      0xe800000000	                          call 0x4004f86	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x4004f86	      0xb801000000	                              mov eax, 1	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x4004f8b	      0xe961050000	                           jmp 0x40054f1	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x4004f90	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x4004f93	          0x83f801	                              cmp eax, 1	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x4004f96	            0x7432	                            je 0x4004fca	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x4004f98	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004f9f	      0xbe00000000	                              mov esi, 0	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004fa4	          0x4889c7	                            mov rdi, rax	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004fa7	      0xb800000000	                              mov eax, 0	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004fac	      0xe86bb3ffff	                       call sym.ch_error	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4004fb1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4004fb8	          0x4889c7	                            mov rdi, rax	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4004fbb	      0xe800000000	                          call 0x4004fc0	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4004fc0	      0xb800000000	                              mov eax, 0	      2547	channel.c	FUNCTION_61	IF_6	IF_10
0x4004fc5	      0xe927050000	                           jmp 0x40054f1	      2547	channel.c	FUNCTION_61	IF_6	IF_10
0x4004fca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2549	channel.c	FUNCTION_61	IF_6
0x4004fce	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      2549	channel.c	FUNCTION_61	IF_6
0x4004fd4	      0xe9af020000	                           jmp 0x4005288	      2514	channel.c	FUNCTION_61	IF_6
0x4004fd9	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4004fdf	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4004fe6	            0x89d6	                            mov esi, edx	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4004fe8	          0x4889c7	                            mov rdi, rax	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4004feb	      0xe800000000	                          call 0x4004ff0	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4004ff0	          0x4885c0	                           test rax, rax	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4004ff3	            0x750a	                           jne 0x4004fff	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x4004ff5	      0xb800000000	                              mov eax, 0	      2554	channel.c	FUNCTION_61	ELSE_3	IF_11
0x4004ffa	      0xe9f2040000	                           jmp 0x40054f1	      2554	channel.c	FUNCTION_61	ELSE_3	IF_11
0x4004fff	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4005007	            0x754f	                           jne 0x4005058	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4005009	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4005011	            0x7545	                           jne 0x4005058	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4005013	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x400501a	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4005021	          0x4885c0	                           test rax, rax	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4005024	            0x7528	                           jne 0x400504e	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4005026	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x400502d	    0x8b80a0040000	           mov eax, dword [rax + 0x4a0] 	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4005033	            0x85c0	                           test eax, eax	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4005035	            0x7517	                           jne 0x400504e	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x4005037	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x400503d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4005044	            0x89d6	                            mov esi, edx	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4005046	          0x4889c7	                            mov rdi, rax	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x4005049	      0xe861fbffff	                  call sym.drop_messages	      2564	channel.c	FUNCTION_61	ELSE_4	IF_12	CALL_11
0x400504e	      0xb800000000	                              mov eax, 0	      2565	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4005053	      0xe999040000	                           jmp 0x40054f1	      2565	channel.c	FUNCTION_61	ELSE_4	IF_12
0x4005058	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x400505f	     0xf85df010000	                           jne 0x4005244	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4005065	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2570	channel.c	FUNCTION_61	ELSE_4	IF_14
0x400506d	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2578	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_12
0x4005073	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2578	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_12
0x400507a	            0x89d6	                            mov esi, edx	      2578	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_12
0x400507c	          0x4889c7	                            mov rdi, rax	      2578	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_12
0x400507f	      0xe800000000	                          call 0x4005084	      2578	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_12
0x4005084	        0x488945a0	             mov qword [rbp - 0x60], rax	      2578	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_12
0x4005088	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2579	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_13
0x400508c	          0x4889c7	                            mov rdi, rax	      2579	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_13
0x400508f	      0xe800000000	                          call 0x4005094	      2579	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_13
0x4005094	        0x48894580	             mov qword [rbp - 0x80], rax	      2579	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	CALL_13
0x4005098	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2580	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_15
0x400509d	            0x7542	                           jne 0x40050e1	      2580	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_15
0x400509f	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050a5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050ac	      0xba01000000	                              mov edx, 1	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050b1	            0x89ce	                            mov esi, ecx	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050b3	          0x4889c7	                            mov rdi, rax	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050b6	      0xe800000000	                          call 0x40050bb	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050bb	            0x85c0	                           test eax, eax	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050bd	            0x75ae	                           jne 0x400506d	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40050bf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050c3	            0x8b00	                    mov eax, dword [rax]	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050c5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050c8	            0x750d	                           jne 0x40050d7	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050ca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050ce	        0x488b4008	                mov rax, qword [rax + 8]	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050d2	          0x4885c0	                           test rax, rax	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050d5	            0x750d	                           jne 0x40050e4	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050d7	      0xb800000000	                              mov eax, 0	      2586	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16
0x40050dc	      0xe910040000	                           jmp 0x40054f1	      2586	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16
0x40050e1	              0x90	                                     nop	      2581	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_15
0x40050e2	            0xeb01	                           jmp 0x40050e5	      2581	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_15
0x40050e4	              0x90	                                     nop	      2585	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x40050e5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x40050e9	          0x488b00	                    mov rax, qword [rax]	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x40050ec	        0x48894588	             mov qword [rbp - 0x78], rax	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x40050f0	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2591	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x40050f5	            0x7569	                           jne 0x4005160	      2591	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x40050f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x40050fb	        0x488b4008	                mov rax, qword [rax + 8]	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x40050ff	        0x488d5001	                      lea rdx, [rax + 1]	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4005103	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4005107	          0x4889d6	                            mov rsi, rdx	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x400510a	          0x4889c7	                            mov rdi, rax	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x400510d	      0xe800000000	                          call 0x4005112	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4005112	        0x488945a8	             mov qword [rbp - 0x58], rax	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4005116	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x400511b	            0x750a	                           jne 0x4005127	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x400511d	      0xb800000000	                              mov eax, 0	      2600	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x4005122	      0xe9ca030000	                           jmp 0x40054f1	      2600	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x4005127	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2601	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400512b	        0x48894588	             mov qword [rbp - 0x78], rax	      2601	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400512f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2602	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005133	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2602	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005137	          0x488910	                    mov qword [rax], rdx	      2602	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400513a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400513e	        0x488b4008	                mov rax, qword [rax + 8]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005142	        0x488d4801	                      lea rcx, [rax + 1]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005146	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400514a	        0x48894a08	                mov qword [rdx + 8], rcx	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400514e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005152	          0x4801d0	                            add rax, rdx	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005155	        0x48894580	             mov qword [rbp - 0x80], rax	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005159	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400515d	          0xc60000	                       mov byte [rax], 0	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4005160	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4005164	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x400516b	            0xeb20	                           jmp 0x400518d	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x400516d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4005174	           0xfb600	                   movzx eax, byte [rax]	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4005177	            0x84c0	                             test al, al	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4005179	            0x750a	                           jne 0x4005185	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x400517b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4005182	          0xc6000a	                     mov byte [rax], 0xa	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x4005185	    0x48838570ffff	               add qword [rbp - 0x90], 1	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x400518d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4005194	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x4005198	            0x7318	                           jae 0x40051b2	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x400519a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x400519e	        0x488b5008	                mov rdx, qword [rax + 8]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40051a2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40051a6	          0x4801d0	                            add rax, rdx	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40051a9	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40051b0	            0x77bb	                            ja 0x400516d	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40051b2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051b6	        0x488d4801	                      lea rcx, [rax + 1]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051ba	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051be	        0x488b5008	                mov rdx, qword [rax + 8]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051c2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051c6	          0x4801d0	                            add rax, rdx	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051c9	          0x4839c1	                            cmp rcx, rax	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051cc	            0x7527	                           jne 0x40051f5	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051ce	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40051d4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40051db	            0x89d6	                            mov esi, edx	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40051dd	          0x4889c7	                            mov rdi, rax	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40051e0	      0xe800000000	                          call 0x40051e5	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40051e5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2615	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21	CALL_16
0x40051ec	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051f0	          0xc60000	                       mov byte [rax], 0	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051f3	            0xeb6d	                           jmp 0x4005262	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40051f5	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x40051f9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x40051fd	          0x4829c2	                            sub rdx, rax	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4005200	          0x4889d0	                            mov rax, rdx	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4005203	            0x89c2	                            mov edx, eax	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4005205	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4005209	            0x89d6	                            mov esi, edx	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x400520b	          0x4889c7	                            mov rdi, rax	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x400520e	      0xe800000000	                          call 0x4005213	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x4005213	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x400521a	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x400521e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4005222	          0x4829c2	                            sub rdx, rax	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4005225	          0x4889d0	                            mov rax, rdx	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4005228	          0x8d5001	                      lea edx, [rax + 1]	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x400522b	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4005231	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4005238	            0x89ce	                            mov esi, ecx	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x400523a	          0x4889c7	                            mov rdi, rax	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x400523d	      0xe800000000	                          call 0x4005242	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4005242	            0xeb1e	                           jmp 0x4005262	      2623	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_18
0x4005244	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x400524a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4005251	            0x89d6	                            mov esi, edx	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4005253	          0x4889c7	                            mov rdi, rax	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4005256	      0xe857ddffff	                call sym.channel_get_all	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x400525b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4005262	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x400526a	            0x750a	                           jne 0x4005276	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x400526c	      0xb800000000	                              mov eax, 0	      2635	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4005271	      0xe97b020000	                           jmp 0x40054f1	      2635	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4005276	    0xc745c0020000	               mov dword [rbp - 0x40], 2	      2637	channel.c	FUNCTION_61	ELSE_4
0x400527d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2638	channel.c	FUNCTION_61	ELSE_4
0x4005284	        0x488945c8	             mov qword [rbp - 0x38], rax	      2638	channel.c	FUNCTION_61	ELSE_4
0x4005288	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      2641	channel.c	FUNCTION_61	IF_23
0x400528f	     0xf8ee3000000	                           jle 0x4005378	      2641	channel.c	FUNCTION_61	IF_23
0x4005295	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      2643	channel.c	FUNCTION_61	IF_23
0x400529f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40052a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40052a7	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40052ae	            0xeb4e	                           jmp 0x40052fe	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40052b0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x40052b7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x40052ba	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x40052c0	            0x752a	                           jne 0x40052ec	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x40052c2	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x40052c6	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x40052cd	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x40052d1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x40052d8	          0x4889c7	                            mov rdi, rax	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x40052db	      0xe86ff4ffff	       call sym.invoke_one_time_callback	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x40052e0	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	      2650	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x40052ea	            0xeb1c	                           jmp 0x4005308	      2651	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x40052ec	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40052f3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40052f7	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x40052fe	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4005306	            0x75a8	                           jne 0x40052b0	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4005308	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      2653	channel.c	FUNCTION_61	IF_23	IF_25
0x400530f	     0xf85ad010000	                           jne 0x40054c2	      2653	channel.c	FUNCTION_61	IF_23	IF_25
0x4005315	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x400531c	    0x8b80a0040000	           mov eax, dword [rax + 0x4a0] 	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4005322	            0x85c0	                           test eax, eax	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4005324	            0x742e	                            je 0x4005354	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4005326	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2658	channel.c	FUNCTION_61	IF_23	IF_25	IF_26	CALL_21
0x400532d	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2658	channel.c	FUNCTION_61	IF_23	IF_25	IF_26	CALL_21
0x4005333	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2658	channel.c	FUNCTION_61	IF_23	IF_25	IF_26	CALL_21
0x400533a	            0x89ce	                            mov esi, ecx	      2658	channel.c	FUNCTION_61	IF_23	IF_25	IF_26	CALL_21
0x400533c	          0x4889c7	                            mov rdi, rax	      2658	channel.c	FUNCTION_61	IF_23	IF_25	IF_26	CALL_21
0x400533f	      0xe8b5ebffff	              call sym.channel_push_json	      2658	channel.c	FUNCTION_61	IF_23	IF_25	IF_26	CALL_21
0x4005344	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2659	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x400534f	      0xe96e010000	                           jmp 0x40054c2	      2659	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4005354	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x400535a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4005361	      0xbe00000000	                              mov esi, 0	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4005366	          0x4889c7	                            mov rdi, rax	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4005369	      0xb800000000	                              mov eax, 0	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x400536e	      0xe800000000	                          call 0x4005373	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4005373	      0xe94a010000	                           jmp 0x40054c2	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4005378	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4005380	            0x750e	                           jne 0x4005390	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4005382	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x400538a	     0xf8413010000	                            je 0x40054a3	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4005390	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x4005398	     0xf848a000000	                            je 0x4005428	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x400539e	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x40053a6	            0x751e	                           jne 0x40053c6	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x40053a8	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40053ae	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40053b5	            0x89d6	                            mov esi, edx	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40053b7	          0x4889c7	                            mov rdi, rax	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40053ba	      0xe800000000	                          call 0x40053bf	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40053bf	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40053c6	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x40053ce	            0x7458	                            je 0x4005428	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x40053d0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x40053d7	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x40053de	          0x4885c0	                           test rax, rax	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x40053e1	            0x7422	                            je 0x4005405	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x40053e3	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x40053ea	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x40053f1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x40053f8	          0x4889ce	                            mov rsi, rcx	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x40053fb	          0x4889c7	                            mov rdi, rax	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x40053fe	      0xe800000000	                          call 0x4005403	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4005403	            0xeb23	                           jmp 0x4005428	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4005405	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2680	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x400540b	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2680	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x4005412	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2680	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x4005419	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2680	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x4005420	          0x4889c7	                            mov rdi, rax	      2680	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x4005423	      0xe8b7f3ffff	               call sym.append_to_buffer	      2680	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x4005428	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x4005430	     0xf848c000000	                            je 0x40054c2	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x4005436	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x400543e	            0x7420	                            je 0x4005460	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x4005440	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4005444	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x400544b	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x400544f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4005456	          0x4889c7	                            mov rdi, rax	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x4005459	      0xe8f1f2ffff	       call sym.invoke_one_time_callback	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x400545e	            0xeb62	                           jmp 0x40054c2	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x4005460	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4005467	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x400546e	      0xbe00000000	                              mov esi, 0	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4005473	          0x4889c7	                            mov rdi, rax	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4005476	      0xb800000000	                              mov eax, 0	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x400547b	      0xe800000000	                          call 0x4005480	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4005480	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x4005484	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x400548b	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x4005492	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x4005499	          0x4889c7	                            mov rdi, rax	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x400549c	      0xe819d9ffff	                call sym.invoke_callback	      2693	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x40054a1	            0xeb1f	                           jmp 0x40054c2	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x40054a3	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2698	channel.c	FUNCTION_61	CALL_29
0x40054a9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2698	channel.c	FUNCTION_61	CALL_29
0x40054b0	      0xbe00000000	                              mov esi, 0	      2698	channel.c	FUNCTION_61	CALL_29
0x40054b5	          0x4889c7	                            mov rdi, rax	      2698	channel.c	FUNCTION_61	CALL_29
0x40054b8	      0xb800000000	                              mov eax, 0	      2698	channel.c	FUNCTION_61	CALL_29
0x40054bd	      0xe800000000	                          call 0x40054c2	      2698	channel.c	FUNCTION_61	CALL_29
0x40054c2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2700	channel.c	FUNCTION_61	IF_34
0x40054c9	          0x4885c0	                           test rax, rax	      2700	channel.c	FUNCTION_61	IF_34
0x40054cc	            0x740f	                            je 0x40054dd	      2700	channel.c	FUNCTION_61	IF_34
0x40054ce	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2701	channel.c	FUNCTION_61	CALL_30
0x40054d5	          0x4889c7	                            mov rdi, rax	      2701	channel.c	FUNCTION_61	CALL_30
0x40054d8	      0xe800000000	                          call 0x40054dd	      2701	channel.c	FUNCTION_61	CALL_30
0x40054dd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2702	channel.c	FUNCTION_61	CALL_31
0x40054e4	          0x4889c7	                            mov rdi, rax	      2702	channel.c	FUNCTION_61	CALL_31
0x40054e7	      0xe800000000	                          call 0x40054ec	      2702	channel.c	FUNCTION_61	CALL_31
0x40054ec	      0xb801000000	                              mov eax, 1	      2704	channel.c	FUNCTION_61
0x40054f1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2705	channel.c	FUNCTION_61
0x40054f5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2705	channel.c	FUNCTION_61
0x40054fe	            0x7405	                            je 0x4005505	      2705	channel.c	FUNCTION_61
0x4005500	      0xe800000000	                          call 0x4005505	      2705	channel.c	FUNCTION_61
0x4005505	              0xc9	                                   leave	      2705	channel.c	FUNCTION_61
0x4005506	              0xc3	                                     ret	      2705	channel.c	FUNCTION_61
channel_clear	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,8:IF,0:SWITCH,0	60
0x4005fda	              0x55	                                push rbp	      3014	channel.c	FUNCTION_72
0x4005fdb	          0x4889e5	                            mov rbp, rsp	      3014	channel.c	FUNCTION_72
0x4005fde	        0x4883ec10	                           sub rsp, 0x10	      3014	channel.c	FUNCTION_72
0x4005fe2	        0x48897df8	                mov qword [rbp - 8], rdi	      3014	channel.c	FUNCTION_72
0x4005fe6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3015	channel.c	FUNCTION_72	CALL_1
0x4005fea	      0xbe00000000	                              mov esi, 0	      3015	channel.c	FUNCTION_72	CALL_1
0x4005fef	          0x4889c7	                            mov rdi, rax	      3015	channel.c	FUNCTION_72	CALL_1
0x4005ff2	      0xb800000000	                              mov eax, 0	      3015	channel.c	FUNCTION_72	CALL_1
0x4005ff7	      0xe800000000	                          call 0x4005ffc	      3015	channel.c	FUNCTION_72	CALL_1
0x4005ffc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3016	channel.c	FUNCTION_72	CALL_2
0x4006000	    0x488b80600400	           mov rax, qword [rax + 0x460] 	      3016	channel.c	FUNCTION_72	CALL_2
0x4006007	          0x4885c0	                           test rax, rax	      3016	channel.c	FUNCTION_72	CALL_2
0x400600a	            0x7422	                            je 0x400602e	      3016	channel.c	FUNCTION_72	CALL_2
0x400600c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3016	channel.c	FUNCTION_72	CALL_2
0x4006010	    0x488b80600400	           mov rax, qword [rax + 0x460] 	      3016	channel.c	FUNCTION_72	CALL_2
0x4006017	          0x4889c7	                            mov rdi, rax	      3016	channel.c	FUNCTION_72	CALL_2
0x400601a	      0xe800000000	                          call 0x400601f	      3016	channel.c	FUNCTION_72	CALL_2
0x400601f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3016	channel.c	FUNCTION_72	CALL_2
0x4006023	    0x48c780600400	              mov qword [rax + 0x460], 0	      3016	channel.c	FUNCTION_72	CALL_2
0x400602e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3017	channel.c	FUNCTION_72	CALL_3
0x4006032	      0xbe00000000	                              mov esi, 0	      3017	channel.c	FUNCTION_72	CALL_3
0x4006037	          0x4889c7	                            mov rdi, rax	      3017	channel.c	FUNCTION_72	CALL_3
0x400603a	      0xe81efeffff	              call sym.channel_clear_one	      3017	channel.c	FUNCTION_72	CALL_3
0x400603f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3018	channel.c	FUNCTION_72	CALL_4
0x4006043	      0xbe01000000	                              mov esi, 1	      3018	channel.c	FUNCTION_72	CALL_4
0x4006048	          0x4889c7	                            mov rdi, rax	      3018	channel.c	FUNCTION_72	CALL_4
0x400604b	      0xe80dfeffff	              call sym.channel_clear_one	      3018	channel.c	FUNCTION_72	CALL_4
0x4006050	        0x488b45f8	                mov rax, qword [rbp - 8]	      3019	channel.c	FUNCTION_72	CALL_5
0x4006054	      0xbe02000000	                              mov esi, 2	      3019	channel.c	FUNCTION_72	CALL_5
0x4006059	          0x4889c7	                            mov rdi, rax	      3019	channel.c	FUNCTION_72	CALL_5
0x400605c	      0xe8fcfdffff	              call sym.channel_clear_one	      3019	channel.c	FUNCTION_72	CALL_5
0x4006061	        0x488b45f8	                mov rax, qword [rbp - 8]	      3020	channel.c	FUNCTION_72	CALL_6
0x4006065	      0xbe03000000	                              mov esi, 3	      3020	channel.c	FUNCTION_72	CALL_6
0x400606a	          0x4889c7	                            mov rdi, rax	      3020	channel.c	FUNCTION_72	CALL_6
0x400606d	      0xe8ebfdffff	              call sym.channel_clear_one	      3020	channel.c	FUNCTION_72	CALL_6
0x4006072	        0x488b45f8	                mov rax, qword [rbp - 8]	      3021	channel.c	FUNCTION_72	CALL_7
0x4006076	    0x488b90880400	           mov rdx, qword [rax + 0x488] 	      3021	channel.c	FUNCTION_72	CALL_7
0x400607d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3021	channel.c	FUNCTION_72	CALL_7
0x4006081	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      3021	channel.c	FUNCTION_72	CALL_7
0x4006088	          0x4889d6	                            mov rsi, rdx	      3021	channel.c	FUNCTION_72	CALL_7
0x400608b	          0x4889c7	                            mov rdi, rax	      3021	channel.c	FUNCTION_72	CALL_7
0x400608e	      0xe800000000	                          call 0x4006093	      3021	channel.c	FUNCTION_72	CALL_7
0x4006093	        0x488b45f8	                mov rax, qword [rbp - 8]	      3022	channel.c	FUNCTION_72
0x4006097	    0x48c780800400	              mov qword [rax + 0x480], 0	      3022	channel.c	FUNCTION_72
0x40060a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3023	channel.c	FUNCTION_72
0x40060a6	    0x48c780880400	              mov qword [rax + 0x488], 0	      3023	channel.c	FUNCTION_72
0x40060b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3024	channel.c	FUNCTION_72	CALL_8
0x40060b5	    0x488b90980400	           mov rdx, qword [rax + 0x498] 	      3024	channel.c	FUNCTION_72	CALL_8
0x40060bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3024	channel.c	FUNCTION_72	CALL_8
0x40060c0	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      3024	channel.c	FUNCTION_72	CALL_8
0x40060c7	          0x4889d6	                            mov rsi, rdx	      3024	channel.c	FUNCTION_72	CALL_8
0x40060ca	          0x4889c7	                            mov rdi, rax	      3024	channel.c	FUNCTION_72	CALL_8
0x40060cd	      0xe800000000	                          call 0x40060d2	      3024	channel.c	FUNCTION_72	CALL_8
0x40060d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3025	channel.c	FUNCTION_72
0x40060d6	    0x48c780900400	              mov qword [rax + 0x490], 0	      3025	channel.c	FUNCTION_72
0x40060e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3026	channel.c	FUNCTION_72
0x40060e5	    0x48c780980400	              mov qword [rax + 0x498], 0	      3026	channel.c	FUNCTION_72
0x40060f0	              0x90	                                     nop	      3027	channel.c	FUNCTION_72
0x40060f1	              0xc9	                                   leave	      3027	channel.c	FUNCTION_72
0x40060f2	              0xc3	                                     ret	      3027	channel.c	FUNCTION_72
channel_fd2channel	ELSE,0:WHILE,0:FOR,2:DO,0:functions,0:CALL,0:IF,2:SWITCH,0	38
0x4006ed5	              0x55	                                push rbp	      3594	channel.c	FUNCTION_83
0x4006ed6	          0x4889e5	                            mov rbp, rsp	      3594	channel.c	FUNCTION_83
0x4006ed9	          0x897dec	             mov dword [rbp - 0x14], edi	      3594	channel.c	FUNCTION_83
0x4006edc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3594	channel.c	FUNCTION_83
0x4006ee0	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	      3598	channel.c	FUNCTION_83	IF_1
0x4006ee4	            0x7464	                            je 0x4006f4a	      3598	channel.c	FUNCTION_83	IF_1
0x4006ee6	    0x488b05000000	            mov rax, qword [0x04006eed] 	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006eed	        0x488945f8	                mov qword [rbp - 8], rax	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006ef1	            0xeb50	                           jmp 0x4006f43	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006ef3	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x4006efa	            0xeb36	                           jmp 0x4006f32	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x4006efc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f00	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f03	        0x48c1e004	                              shl rax, 4	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f07	          0x4889c1	                            mov rcx, rax	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f0a	        0x48c1e104	                              shl rcx, 4	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f0e	          0x4801c8	                            add rax, rcx	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f11	          0x4801d0	                            add rax, rdx	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f14	        0x4883c018	                           add rax, 0x18	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f18	            0x8b00	                    mov eax, dword [rax]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f1a	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f1d	            0x750f	                           jne 0x4006f2e	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3605	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f23	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3605	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f26	            0x8910	                    mov dword [rax], edx	      3605	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f28	        0x488b45f8	                mov rax, qword [rbp - 8]	      3606	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f2c	            0xeb21	                           jmp 0x4006f4f	      3606	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4006f2e	        0x8345f401	                add dword [rbp - 0xc], 1	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x4006f32	        0x837df402	                cmp dword [rbp - 0xc], 2	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x4006f36	            0x76c4	                           jbe 0x4006efc	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x4006f38	        0x488b45f8	                mov rax, qword [rbp - 8]	      3600	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006f3c	          0x488b00	                    mov rax, qword [rax]	      3600	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006f3f	        0x488945f8	                mov qword [rbp - 8], rax	      3600	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006f43	      0x48837df800	                  cmp qword [rbp - 8], 0	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006f48	            0x75a9	                           jne 0x4006ef3	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4006f4a	      0xb800000000	                              mov eax, 0	      3609	channel.c	FUNCTION_83
0x4006f4f	              0x5d	                                 pop rbp	      3610	channel.c	FUNCTION_83
0x4006f50	              0xc3	                                     ret	      3610	channel.c	FUNCTION_83
channel_read_json_block	ELSE,2:WHILE,0:FOR,1:DO,0:functions,0:CALL,9:IF,10:SWITCH,0	143
0x4006a51	              0x55	                                push rbp	      3451	channel.c	FUNCTION_81
0x4006a52	          0x4889e5	                            mov rbp, rsp	      3451	channel.c	FUNCTION_81
0x4006a55	        0x4883ec60	                           sub rsp, 0x60	      3451	channel.c	FUNCTION_81
0x4006a59	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3451	channel.c	FUNCTION_81
0x4006a5d	          0x8975b4	             mov dword [rbp - 0x4c], esi	      3451	channel.c	FUNCTION_81
0x4006a60	          0x8955b0	             mov dword [rbp - 0x50], edx	      3451	channel.c	FUNCTION_81
0x4006a63	          0x894dac	             mov dword [rbp - 0x54], ecx	      3451	channel.c	FUNCTION_81
0x4006a66	        0x4c8945a0	              mov qword [rbp - 0x60], r8	      3451	channel.c	FUNCTION_81
0x4006a6a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3451	channel.c	FUNCTION_81
0x4006a73	        0x488945f8	                mov qword [rbp - 8], rax	      3451	channel.c	FUNCTION_81
0x4006a77	            0x31c0	                            xor eax, eax	      3451	channel.c	FUNCTION_81
0x4006a79	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3455	channel.c	FUNCTION_81
0x4006a7c	        0x48c1e004	                              shl rax, 4	      3455	channel.c	FUNCTION_81
0x4006a80	          0x4889c2	                            mov rdx, rax	      3455	channel.c	FUNCTION_81
0x4006a83	        0x48c1e204	                              shl rdx, 4	      3455	channel.c	FUNCTION_81
0x4006a87	          0x4801d0	                            add rax, rdx	      3455	channel.c	FUNCTION_81
0x4006a8a	        0x488d5010	                   lea rdx, [rax + 0x10]	      3455	channel.c	FUNCTION_81
0x4006a8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3455	channel.c	FUNCTION_81
0x4006a92	          0x4801d0	                            add rax, rdx	      3455	channel.c	FUNCTION_81
0x4006a95	        0x4883c008	                              add rax, 8	      3455	channel.c	FUNCTION_81
0x4006a99	        0x488945d8	             mov qword [rbp - 0x28], rax	      3455	channel.c	FUNCTION_81
0x4006a9d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3457	channel.c	FUNCTION_81	CALL_1
0x4006aa1	      0xbe00000000	                              mov esi, 0	      3457	channel.c	FUNCTION_81	CALL_1
0x4006aa6	          0x4889c7	                            mov rdi, rax	      3457	channel.c	FUNCTION_81	CALL_1
0x4006aa9	      0xb800000000	                              mov eax, 0	      3457	channel.c	FUNCTION_81	CALL_1
0x4006aae	      0xe800000000	                          call 0x4006ab3	      3457	channel.c	FUNCTION_81	CALL_1
0x4006ab3	        0x837dacff	cmp dword [rbp - 0x54], 0xffffffffffffffff	      3458	channel.c	FUNCTION_81	IF_1
0x4006ab7	            0x740a	                            je 0x4006ac3	      3458	channel.c	FUNCTION_81	IF_1
0x4006ab9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3459	channel.c	FUNCTION_81	IF_1
0x4006abd	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3459	channel.c	FUNCTION_81	IF_1
0x4006ac0	          0x895058	             mov dword [rax + 0x58], edx	      3459	channel.c	FUNCTION_81	IF_1
0x4006ac3	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4006ac6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4006aca	            0x89d6	                            mov esi, edx	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4006acc	          0x4889c7	                            mov rdi, rax	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4006acf	      0xe807cdffff	             call sym.channel_parse_json	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4006ad4	          0x8945d0	             mov dword [rbp - 0x30], eax	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x4006ad7	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006adb	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006ade	          0x8b75b4	             mov esi, dword [rbp - 0x4c]	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006ae1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006ae5	          0x4989c8	                             mov r8, rcx	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006ae8	      0xb901000000	                              mov ecx, 1	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006aed	          0x4889c7	                            mov rdi, rax	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006af0	      0xe8a2d2ffff	               call sym.channel_get_json	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006af5	          0x83f801	                              cmp eax, 1	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006af8	            0x7515	                           jne 0x4006b0f	      3465	channel.c	FUNCTION_81	FOR_1	IF_2	CALL_3
0x4006afa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4006afe	    0xc74058000000	               mov dword [rax + 0x58], 0	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x4006b05	      0xb801000000	                              mov eax, 1	      3468	channel.c	FUNCTION_81	FOR_1	IF_2
0x4006b0a	      0xe935010000	                           jmp 0x4006c44	      3468	channel.c	FUNCTION_81	FOR_1	IF_2
0x4006b0f	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x4006b13	            0x75ae	                           jne 0x4006ac3	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x4006b15	      0xe800000000	                          call 0x4006b1a	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x4006b1a	            0x85c0	                           test eax, eax	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x4006b1c	     0xf850b010000	                           jne 0x4006c2d	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x4006b22	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3480	channel.c	FUNCTION_81	FOR_1	IF_3
0x4006b25	          0x8945cc	             mov dword [rbp - 0x34], eax	      3480	channel.c	FUNCTION_81	FOR_1	IF_3
0x4006b28	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b2c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b30	          0x4885c0	                           test rax, rax	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b33	     0xf848c000000	                            je 0x4006bc5	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b39	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4006b3d	      0xbe00000000	                              mov esi, 0	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4006b42	          0x4889c7	                            mov rdi, rax	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4006b45	      0xe800000000	                          call 0x4006b4a	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x4006b4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b4e	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b52	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3491	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b56	          0x4829c2	                            sub rdx, rax	      3491	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b59	          0x4889d0	                            mov rax, rdx	      3491	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b5c	    0x69f0e8030000	                    imul esi, eax, 0x3e8	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3492	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b66	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      3492	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b6e	          0x4889d1	                            mov rcx, rdx	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b71	          0x4829c1	                            sub rcx, rax	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b74	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b7e	          0x4889c8	                            mov rax, rcx	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b81	          0x48f7ea	                                imul rdx	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b84	        0x48c1fa07	                              sar rdx, 7	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b88	          0x4889c8	                            mov rax, rcx	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b8b	        0x48c1f83f	                           sar rax, 0x3f	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b8f	          0x4829c2	                            sub rdx, rax	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b92	          0x4889d0	                            mov rax, rdx	      3493	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b95	             0x1f0	                            add eax, esi	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b97	          0x83c001	                              add eax, 1	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b9a	          0x8945cc	             mov dword [rbp - 0x34], eax	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x4006b9d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4006ba1	            0x7914	                           jns 0x4006bb7	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4006ba3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4006ba7	    0x48c740600000	               mov qword [rax + 0x60], 0	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4006baf	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4006bb2	          0x8945cc	             mov dword [rbp - 0x34], eax	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4006bb5	            0xeb0e	                           jmp 0x4006bc5	      3502	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x4006bb7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3504	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x4006bba	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3504	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x4006bbd	            0x7e06	                           jle 0x4006bc5	      3504	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x4006bbf	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3505	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x4006bc2	          0x8945cc	             mov dword [rbp - 0x34], eax	      3505	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x4006bc5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x4006bc9	            0x8b00	                    mov eax, dword [rax]	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x4006bcb	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x4006bce	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x4006bd2	            0x7418	                            je 0x4006bec	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x4006bd4	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006bd7	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006bda	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006bde	            0x89ce	                            mov esi, ecx	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006be0	          0x4889c7	                            mov rdi, rax	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006be3	      0xe8e8f5ffff	                   call sym.channel_wait	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006be8	            0x85c0	                           test eax, eax	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006bea	            0x7426	                            je 0x4006c12	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x4006bec	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4006bef	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4006bf2	            0x753a	                           jne 0x4006c2e	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4006bf4	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x4006bf8	            0x7439	                            je 0x4006c33	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x4006bfa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4006bfe	      0xbe00000000	                              mov esi, 0	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4006c03	          0x4889c7	                            mov rdi, rax	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4006c06	      0xb800000000	                              mov eax, 0	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4006c0b	      0xe800000000	                          call 0x4006c10	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x4006c10	            0xeb21	                           jmp 0x4006c33	      3515	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4006c12	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4006c15	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4006c19	      0xba00000000	                              mov edx, 0	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4006c1e	            0x89ce	                            mov esi, ecx	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4006c20	          0x4889c7	                            mov rdi, rax	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4006c23	      0xe8cdf9ffff	                   call sym.channel_read	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4006c28	      0xe996feffff	                           jmp 0x4006ac3	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x4006c2d	              0x90	                                     nop	      3476	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4
0x4006c2e	      0xe990feffff	                           jmp 0x4006ac3	      3521	channel.c	FUNCTION_81	FOR_1
0x4006c33	              0x90	                                     nop	      3515	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x4006c34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3522	channel.c	FUNCTION_81
0x4006c38	    0xc74058000000	               mov dword [rax + 0x58], 0	      3522	channel.c	FUNCTION_81
0x4006c3f	      0xb800000000	                              mov eax, 0	      3523	channel.c	FUNCTION_81
0x4006c44	        0x488b7df8	                mov rdi, qword [rbp - 8]	      3524	channel.c	FUNCTION_81
0x4006c48	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3524	channel.c	FUNCTION_81
0x4006c51	            0x7405	                            je 0x4006c58	      3524	channel.c	FUNCTION_81
0x4006c53	      0xe800000000	                          call 0x4006c58	      3524	channel.c	FUNCTION_81
0x4006c58	              0xc9	                                   leave	      3524	channel.c	FUNCTION_81
0x4006c59	              0xc3	                                     ret	      3524	channel.c	FUNCTION_81
channel_close_now	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	23
0x40065a2	              0x55	                                push rbp	      3277	channel.c	FUNCTION_78
0x40065a3	          0x4889e5	                            mov rbp, rsp	      3277	channel.c	FUNCTION_78
0x40065a6	        0x4883ec10	                           sub rsp, 0x10	      3277	channel.c	FUNCTION_78
0x40065aa	        0x48897df8	                mov qword [rbp - 8], rdi	      3277	channel.c	FUNCTION_78
0x40065ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      3278	channel.c	FUNCTION_78	CALL_1
0x40065b2	      0xbe00000000	                              mov esi, 0	      3278	channel.c	FUNCTION_78	CALL_1
0x40065b7	          0x4889c7	                            mov rdi, rax	      3278	channel.c	FUNCTION_78	CALL_1
0x40065ba	      0xb800000000	                              mov eax, 0	      3278	channel.c	FUNCTION_78	CALL_1
0x40065bf	      0xe800000000	                          call 0x40065c4	      3278	channel.c	FUNCTION_78	CALL_1
0x40065c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3279	channel.c	FUNCTION_78	IF_1
0x40065c8	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      3279	channel.c	FUNCTION_78	IF_1
0x40065cf	          0x4885c0	                           test rax, rax	      3279	channel.c	FUNCTION_78	IF_1
0x40065d2	            0x740d	                            je 0x40065e1	      3279	channel.c	FUNCTION_78	IF_1
0x40065d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3280	channel.c	FUNCTION_78	IF_1
0x40065d8	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      3280	channel.c	FUNCTION_78	IF_1
0x40065df	            0xffd0	                                call rax	      3280	channel.c	FUNCTION_78	IF_1
0x40065e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3281	channel.c	FUNCTION_78	CALL_2
0x40065e5	      0xbe01000000	                              mov esi, 1	      3281	channel.c	FUNCTION_78	CALL_2
0x40065ea	          0x4889c7	                            mov rdi, rax	      3281	channel.c	FUNCTION_78	CALL_2
0x40065ed	      0xe800000000	                          call 0x40065f2	      3281	channel.c	FUNCTION_78	CALL_2
0x40065f2	              0x90	                                     nop	      3282	channel.c	FUNCTION_78
0x40065f3	              0xc9	                                   leave	      3282	channel.c	FUNCTION_78
0x40065f4	              0xc3	                                     ret	      3282	channel.c	FUNCTION_78
channel_gui_register_all	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	17
0x4000bed	              0x55	                                push rbp	       595	channel.c	FUNCTION_24
0x4000bee	          0x4889e5	                            mov rbp, rsp	       595	channel.c	FUNCTION_24
0x4000bf1	        0x4883ec10	                           sub rsp, 0x10	       595	channel.c	FUNCTION_24
0x4000bf5	    0x488b05000000	            mov rax, qword [0x04000bfc] 	       598	channel.c	FUNCTION_24	FOR_1
0x4000bfc	        0x488945f8	                mov qword [rbp - 8], rax	       598	channel.c	FUNCTION_24	FOR_1
0x4000c00	            0xeb17	                           jmp 0x4000c19	       598	channel.c	FUNCTION_24	FOR_1
0x4000c02	        0x488b45f8	                mov rax, qword [rbp - 8]	       599	channel.c	FUNCTION_24	CALL_1
0x4000c06	          0x4889c7	                            mov rdi, rax	       599	channel.c	FUNCTION_24	CALL_1
0x4000c09	      0xe831ffffff	           call sym.channel_gui_register	       599	channel.c	FUNCTION_24	CALL_1
0x4000c0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       598	channel.c	FUNCTION_24	FOR_1
0x4000c12	          0x488b00	                    mov rax, qword [rax]	       598	channel.c	FUNCTION_24	FOR_1
0x4000c15	        0x488945f8	                mov qword [rbp - 8], rax	       598	channel.c	FUNCTION_24	FOR_1
0x4000c19	      0x48837df800	                  cmp qword [rbp - 8], 0	       598	channel.c	FUNCTION_24	FOR_1
0x4000c1e	            0x75e2	                           jne 0x4000c02	       598	channel.c	FUNCTION_24	FOR_1
0x4000c20	              0x90	                                     nop	       600	channel.c	FUNCTION_24
0x4000c21	              0xc9	                                   leave	       600	channel.c	FUNCTION_24
0x4000c22	              0xc3	                                     ret	       600	channel.c	FUNCTION_24
channel_gui_unregister	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	17
0x4000cbf	              0x55	                                push rbp	       630	channel.c	FUNCTION_26
0x4000cc0	          0x4889e5	                            mov rbp, rsp	       630	channel.c	FUNCTION_26
0x4000cc3	        0x4883ec20	                           sub rsp, 0x20	       630	channel.c	FUNCTION_26
0x4000cc7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       630	channel.c	FUNCTION_26
0x4000ccb	    0xc745fc000000	                  mov dword [rbp - 4], 0	       633	channel.c	FUNCTION_26	FOR_1
0x4000cd2	            0xeb15	                           jmp 0x4000ce9	       633	channel.c	FUNCTION_26	FOR_1
0x4000cd4	          0x8b55fc	                mov edx, dword [rbp - 4]	       634	channel.c	FUNCTION_26	CALL_1
0x4000cd7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       634	channel.c	FUNCTION_26	CALL_1
0x4000cdb	            0x89d6	                            mov esi, edx	       634	channel.c	FUNCTION_26	CALL_1
0x4000cdd	          0x4889c7	                            mov rdi, rax	       634	channel.c	FUNCTION_26	CALL_1
0x4000ce0	      0xe83effffff	     call sym.channel_gui_unregister_one	       634	channel.c	FUNCTION_26	CALL_1
0x4000ce5	        0x8345fc01	                  add dword [rbp - 4], 1	       633	channel.c	FUNCTION_26	FOR_1
0x4000ce9	        0x837dfc02	                  cmp dword [rbp - 4], 2	       633	channel.c	FUNCTION_26	FOR_1
0x4000ced	            0x76e5	                           jbe 0x4000cd4	       633	channel.c	FUNCTION_26	FOR_1
0x4000cef	              0x90	                                     nop	       635	channel.c	FUNCTION_26
0x4000cf0	              0xc9	                                   leave	       635	channel.c	FUNCTION_26
0x4000cf1	              0xc3	                                     ret	       635	channel.c	FUNCTION_26
invoke_one_time_callback	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,5:IF,0:SWITCH,0	40
0x400474f	              0x55	                                push rbp	      2333	channel.c	FUNCTION_58
0x4004750	          0x4889e5	                            mov rbp, rsp	      2333	channel.c	FUNCTION_58
0x4004753	        0x4883ec20	                           sub rsp, 0x20	      2333	channel.c	FUNCTION_58
0x4004757	        0x48897df8	                mov qword [rbp - 8], rdi	      2333	channel.c	FUNCTION_58
0x400475b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2333	channel.c	FUNCTION_58
0x400475f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2333	channel.c	FUNCTION_58
0x4004763	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2333	channel.c	FUNCTION_58
0x4004767	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2335	channel.c	FUNCTION_58
0x400476b	          0x488b10	                    mov rdx, qword [rax]	      2335	channel.c	FUNCTION_58
0x400476e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2334	channel.c	FUNCTION_58	CALL_1
0x4004772	      0xbe00000000	                              mov esi, 0	      2334	channel.c	FUNCTION_58	CALL_1
0x4004777	          0x4889c7	                            mov rdi, rax	      2334	channel.c	FUNCTION_58	CALL_1
0x400477a	      0xb800000000	                              mov eax, 0	      2334	channel.c	FUNCTION_58	CALL_1
0x400477f	      0xe800000000	                          call 0x4004784	      2334	channel.c	FUNCTION_58	CALL_1
0x4004784	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2338	channel.c	FUNCTION_58	CALL_2
0x4004788	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2338	channel.c	FUNCTION_58	CALL_2
0x400478c	          0x4889d6	                            mov rsi, rdx	      2338	channel.c	FUNCTION_58	CALL_2
0x400478f	          0x4889c7	                            mov rdi, rax	      2338	channel.c	FUNCTION_58	CALL_2
0x4004792	      0xe806f5ffff	                 call sym.remove_cb_node	      2338	channel.c	FUNCTION_58	CALL_2
0x4004797	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2339	channel.c	FUNCTION_58	CALL_3
0x400479b	        0x488b5008	                mov rdx, qword [rax + 8]	      2339	channel.c	FUNCTION_58	CALL_3
0x400479f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2339	channel.c	FUNCTION_58	CALL_3
0x40047a3	          0x488b30	                    mov rsi, qword [rax]	      2339	channel.c	FUNCTION_58	CALL_3
0x40047a6	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2339	channel.c	FUNCTION_58	CALL_3
0x40047aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      2339	channel.c	FUNCTION_58	CALL_3
0x40047ae	          0x4889c7	                            mov rdi, rax	      2339	channel.c	FUNCTION_58	CALL_3
0x40047b1	      0xe804e6ffff	                call sym.invoke_callback	      2339	channel.c	FUNCTION_58	CALL_3
0x40047b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2340	channel.c	FUNCTION_58	CALL_4
0x40047ba	        0x488b5008	                mov rdx, qword [rax + 8]	      2340	channel.c	FUNCTION_58	CALL_4
0x40047be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2340	channel.c	FUNCTION_58	CALL_4
0x40047c2	          0x488b00	                    mov rax, qword [rax]	      2340	channel.c	FUNCTION_58	CALL_4
0x40047c5	          0x4889d6	                            mov rsi, rdx	      2340	channel.c	FUNCTION_58	CALL_4
0x40047c8	          0x4889c7	                            mov rdi, rax	      2340	channel.c	FUNCTION_58	CALL_4
0x40047cb	      0xe800000000	                          call 0x40047d0	      2340	channel.c	FUNCTION_58	CALL_4
0x40047d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2341	channel.c	FUNCTION_58	CALL_5
0x40047d4	          0x4889c7	                            mov rdi, rax	      2341	channel.c	FUNCTION_58	CALL_5
0x40047d7	      0xe800000000	                          call 0x40047dc	      2341	channel.c	FUNCTION_58	CALL_5
0x40047dc	              0x90	                                     nop	      2342	channel.c	FUNCTION_58
0x40047dd	              0xc9	                                   leave	      2342	channel.c	FUNCTION_58
0x40047de	              0xc3	                                     ret	      2342	channel.c	FUNCTION_58
job_free_job	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,2:SWITCH,0	32
0x400a574	              0x55	                                push rbp	      5068	channel.c	FUNCTION_110
0x400a575	          0x4889e5	                            mov rbp, rsp	      5068	channel.c	FUNCTION_110
0x400a578	        0x4883ec10	                           sub rsp, 0x10	      5068	channel.c	FUNCTION_110
0x400a57c	        0x48897df8	                mov qword [rbp - 8], rdi	      5068	channel.c	FUNCTION_110
0x400a580	        0x488b45f8	                mov rax, qword [rbp - 8]	      5069	channel.c	FUNCTION_110	IF_1
0x400a584	          0x488b00	                    mov rax, qword [rax]	      5069	channel.c	FUNCTION_110	IF_1
0x400a587	          0x4885c0	                           test rax, rax	      5069	channel.c	FUNCTION_110	IF_1
0x400a58a	            0x7413	                            je 0x400a59f	      5069	channel.c	FUNCTION_110	IF_1
0x400a58c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5070	channel.c	FUNCTION_110	IF_1
0x400a590	          0x488b00	                    mov rax, qword [rax]	      5070	channel.c	FUNCTION_110	IF_1
0x400a593	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5070	channel.c	FUNCTION_110	IF_1
0x400a597	        0x488b5208	                mov rdx, qword [rdx + 8]	      5070	channel.c	FUNCTION_110	IF_1
0x400a59b	        0x48895008	                mov qword [rax + 8], rdx	      5070	channel.c	FUNCTION_110	IF_1
0x400a59f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5071	channel.c	FUNCTION_110	IF_2
0x400a5a3	        0x488b4008	                mov rax, qword [rax + 8]	      5071	channel.c	FUNCTION_110	IF_2
0x400a5a7	          0x4885c0	                           test rax, rax	      5071	channel.c	FUNCTION_110	IF_2
0x400a5aa	            0x7510	                           jne 0x400a5bc	      5071	channel.c	FUNCTION_110	IF_2
0x400a5ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      5072	channel.c	FUNCTION_110	IF_2
0x400a5b0	          0x488b00	                    mov rax, qword [rax]	      5072	channel.c	FUNCTION_110	IF_2
0x400a5b3	    0x488905000000	            mov qword [0x0400a5ba], rax 	      5072	channel.c	FUNCTION_110	IF_2
0x400a5ba	            0xeb12	                           jmp 0x400a5ce	      5072	channel.c	FUNCTION_110	IF_2
0x400a5bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5074	channel.c	FUNCTION_110	ELSE_1
0x400a5c0	        0x488b4008	                mov rax, qword [rax + 8]	      5074	channel.c	FUNCTION_110	ELSE_1
0x400a5c4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5074	channel.c	FUNCTION_110	ELSE_1
0x400a5c8	          0x488b12	                    mov rdx, qword [rdx]	      5074	channel.c	FUNCTION_110	ELSE_1
0x400a5cb	          0x488910	                    mov qword [rax], rdx	      5074	channel.c	FUNCTION_110	ELSE_1
0x400a5ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      5075	channel.c	FUNCTION_110	CALL_1
0x400a5d2	          0x4889c7	                            mov rdi, rax	      5075	channel.c	FUNCTION_110	CALL_1
0x400a5d5	      0xe800000000	                          call 0x400a5da	      5075	channel.c	FUNCTION_110	CALL_1
0x400a5da	              0x90	                                     nop	      5076	channel.c	FUNCTION_110
0x400a5db	              0xc9	                                   leave	      5076	channel.c	FUNCTION_110
0x400a5dc	              0xc3	                                     ret	      5076	channel.c	FUNCTION_110
channel_get_all	ELSE,0:WHILE,1:FOR,2:DO,1:functions,0:CALL,5:IF,3:SWITCH,0	108
0x4002fb2	              0x55	                                push rbp	      1666	channel.c	FUNCTION_47
0x4002fb3	          0x4889e5	                            mov rbp, rsp	      1666	channel.c	FUNCTION_47
0x4002fb6	        0x4883ec40	                           sub rsp, 0x40	      1666	channel.c	FUNCTION_47
0x4002fba	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1666	channel.c	FUNCTION_47
0x4002fbe	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1666	channel.c	FUNCTION_47
0x4002fc1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1667	channel.c	FUNCTION_47
0x4002fc4	        0x48c1e004	                              shl rax, 4	      1667	channel.c	FUNCTION_47
0x4002fc8	          0x4889c2	                            mov rdx, rax	      1667	channel.c	FUNCTION_47
0x4002fcb	        0x48c1e204	                              shl rdx, 4	      1667	channel.c	FUNCTION_47
0x4002fcf	          0x4801d0	                            add rax, rdx	      1667	channel.c	FUNCTION_47
0x4002fd2	        0x488d5020	                   lea rdx, [rax + 0x20]	      1667	channel.c	FUNCTION_47
0x4002fd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1667	channel.c	FUNCTION_47
0x4002fda	          0x4801d0	                            add rax, rdx	      1667	channel.c	FUNCTION_47
0x4002fdd	        0x4883c010	                           add rax, 0x10	      1667	channel.c	FUNCTION_47
0x4002fe1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1667	channel.c	FUNCTION_47
0x4002fe5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1668	channel.c	FUNCTION_47
0x4002fe9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1668	channel.c	FUNCTION_47
0x4002fed	        0x488945d8	             mov qword [rbp - 0x28], rax	      1668	channel.c	FUNCTION_47
0x4002ff1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1669	channel.c	FUNCTION_47
0x4002ff9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1674	channel.c	FUNCTION_47	IF_1
0x4002ffd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1674	channel.c	FUNCTION_47	IF_1
0x4003001	          0x4885c0	                           test rax, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4003004	            0x7411	                            je 0x4003017	      1674	channel.c	FUNCTION_47	IF_1
0x4003006	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1674	channel.c	FUNCTION_47	IF_1
0x400300a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1674	channel.c	FUNCTION_47	IF_1
0x400300e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1674	channel.c	FUNCTION_47	IF_1
0x4003012	          0x4885c0	                           test rax, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4003015	            0x7516	                           jne 0x400302d	      1674	channel.c	FUNCTION_47	IF_1
0x4003017	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1675	channel.c	FUNCTION_47	CALL_1
0x400301a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1675	channel.c	FUNCTION_47	CALL_1
0x400301e	            0x89d6	                            mov esi, edx	      1675	channel.c	FUNCTION_47	CALL_1
0x4003020	          0x4889c7	                            mov rdi, rax	      1675	channel.c	FUNCTION_47	CALL_1
0x4003023	      0xe800000000	                          call 0x4003028	      1675	channel.c	FUNCTION_47	CALL_1
0x4003028	      0xe90b010000	                           jmp 0x4003138	      1675	channel.c	FUNCTION_47	CALL_1
0x400302d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1678	channel.c	FUNCTION_47	FOR_1
0x4003031	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1678	channel.c	FUNCTION_47	FOR_1
0x4003035	        0x488945d8	             mov qword [rbp - 0x28], rax	      1678	channel.c	FUNCTION_47	FOR_1
0x4003039	            0xeb18	                           jmp 0x4003053	      1678	channel.c	FUNCTION_47	FOR_1
0x400303b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1679	channel.c	FUNCTION_47	FOR_1
0x400303f	        0x488b4008	                mov rax, qword [rax + 8]	      1679	channel.c	FUNCTION_47	FOR_1
0x4003043	        0x480145e0	            add qword [rbp - 0x20], rax 	      1679	channel.c	FUNCTION_47	FOR_1
0x4003047	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1678	channel.c	FUNCTION_47	FOR_1
0x400304b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1678	channel.c	FUNCTION_47	FOR_1
0x400304f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1678	channel.c	FUNCTION_47	FOR_1
0x4003053	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1678	channel.c	FUNCTION_47	FOR_1
0x4003058	            0x75e1	                           jne 0x400303b	      1678	channel.c	FUNCTION_47	FOR_1
0x400305a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1680	channel.c	FUNCTION_47	CALL_2
0x400305e	        0x4883c001	                              add rax, 1	      1680	channel.c	FUNCTION_47	CALL_2
0x4003062	      0xbe01000000	                              mov esi, 1	      1680	channel.c	FUNCTION_47	CALL_2
0x4003067	          0x4889c7	                            mov rdi, rax	      1680	channel.c	FUNCTION_47	CALL_2
0x400306a	      0xe800000000	                          call 0x400306f	      1680	channel.c	FUNCTION_47	CALL_2
0x400306f	        0x488945f8	                mov qword [rbp - 8], rax	      1680	channel.c	FUNCTION_47	CALL_2
0x4003073	      0x48837df800	                  cmp qword [rbp - 8], 0	      1681	channel.c	FUNCTION_47	IF_2
0x4003078	            0x750a	                           jne 0x4003084	      1681	channel.c	FUNCTION_47	IF_2
0x400307a	      0xb800000000	                              mov eax, 0	      1682	channel.c	FUNCTION_47	IF_2
0x400307f	      0xe9b4000000	                           jmp 0x4003138	      1682	channel.c	FUNCTION_47	IF_2
0x4003084	        0x488b45f8	                mov rax, qword [rbp - 8]	      1683	channel.c	FUNCTION_47
0x4003088	        0x488945e8	             mov qword [rbp - 0x18], rax	      1683	channel.c	FUNCTION_47
0x400308c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1684	channel.c	FUNCTION_47	FOR_2
0x4003090	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1684	channel.c	FUNCTION_47	FOR_2
0x4003094	        0x488945d8	             mov qword [rbp - 0x28], rax	      1684	channel.c	FUNCTION_47	FOR_2
0x4003098	            0xeb36	                           jmp 0x40030d0	      1684	channel.c	FUNCTION_47	FOR_2
0x400309a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x400309e	        0x488b5008	                mov rdx, qword [rax + 8]	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x40030a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x40030a6	          0x488b08	                    mov rcx, qword [rax]	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x40030a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x40030ad	          0x4889ce	                            mov rsi, rcx	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x40030b0	          0x4889c7	                            mov rdi, rax	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x40030b3	      0xe800000000	                          call 0x40030b8	      1686	channel.c	FUNCTION_47	FOR_2	CALL_3
0x40030b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1687	channel.c	FUNCTION_47	FOR_2
0x40030bc	        0x488b4008	                mov rax, qword [rax + 8]	      1687	channel.c	FUNCTION_47	FOR_2
0x40030c0	        0x480145e8	            add qword [rbp - 0x18], rax 	      1687	channel.c	FUNCTION_47	FOR_2
0x40030c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1684	channel.c	FUNCTION_47	FOR_2
0x40030c8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1684	channel.c	FUNCTION_47	FOR_2
0x40030cc	        0x488945d8	             mov qword [rbp - 0x28], rax	      1684	channel.c	FUNCTION_47	FOR_2
0x40030d0	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1684	channel.c	FUNCTION_47	FOR_2
0x40030d5	            0x75c3	                           jne 0x400309a	      1684	channel.c	FUNCTION_47	FOR_2
0x40030d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1689	channel.c	FUNCTION_47
0x40030db	          0xc60000	                       mov byte [rax], 0	      1689	channel.c	FUNCTION_47
0x40030de	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40030e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40030e5	            0x89d6	                            mov esi, edx	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40030e7	          0x4889c7	                            mov rdi, rax	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40030ea	      0xe800000000	                          call 0x40030ef	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40030ef	        0x488945e8	             mov qword [rbp - 0x18], rax	      1694	channel.c	FUNCTION_47	DO_1	CALL_4
0x40030f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x40030f7	          0x4889c7	                            mov rdi, rax	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x40030fa	      0xe800000000	                          call 0x40030ff	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x40030ff	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1696	channel.c	FUNCTION_47	DO_1
0x4003104	            0x75d8	                           jne 0x40030de	      1696	channel.c	FUNCTION_47	DO_1
0x4003106	            0xeb25	                           jmp 0x400312d	      1699	channel.c	FUNCTION_47	WHILE_1
0x4003108	      0x48836de001	               sub qword [rbp - 0x20], 1	      1701	channel.c	FUNCTION_47	WHILE_1
0x400310d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4003111	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4003115	          0x4801d0	                            add rax, rdx	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4003118	           0xfb600	                   movzx eax, byte [rax]	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x400311b	            0x84c0	                             test al, al	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x400311d	            0x750e	                           jne 0x400312d	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x400311f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4003123	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4003127	          0x4801d0	                            add rax, rdx	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x400312a	          0xc6000a	                     mov byte [rax], 0xa	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x400312d	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1699	channel.c	FUNCTION_47	WHILE_1
0x4003132	            0x75d4	                           jne 0x4003108	      1699	channel.c	FUNCTION_47	WHILE_1
0x4003134	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	channel.c	FUNCTION_47
0x4003138	              0xc9	                                   leave	      1707	channel.c	FUNCTION_47
0x4003139	              0xc3	                                     ret	      1707	channel.c	FUNCTION_47
job_channel_still_useful	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	19
0x400a64a	              0x55	                                push rbp	      5112	channel.c	FUNCTION_114
0x400a64b	          0x4889e5	                            mov rbp, rsp	      5112	channel.c	FUNCTION_114
0x400a64e	        0x4883ec08	                              sub rsp, 8	      5112	channel.c	FUNCTION_114
0x400a652	        0x48897df8	                mov qword [rbp - 8], rdi	      5112	channel.c	FUNCTION_114
0x400a656	        0x488b45f8	                mov rax, qword [rbp - 8]	      5113	channel.c	FUNCTION_114	CALL_1
0x400a65a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5113	channel.c	FUNCTION_114	CALL_1
0x400a65e	          0x4885c0	                           test rax, rax	      5113	channel.c	FUNCTION_114	CALL_1
0x400a661	            0x741b	                            je 0x400a67e	      5113	channel.c	FUNCTION_114	CALL_1
0x400a663	        0x488b45f8	                mov rax, qword [rbp - 8]	      5113	channel.c	FUNCTION_114	CALL_1
0x400a667	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5113	channel.c	FUNCTION_114	CALL_1
0x400a66b	          0x4889c7	                            mov rdi, rax	      5113	channel.c	FUNCTION_114	CALL_1
0x400a66e	      0xe8f65effff	           call sym.channel_still_useful	      5113	channel.c	FUNCTION_114	CALL_1
0x400a673	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x400a675	            0x7407	                            je 0x400a67e	      5113	channel.c	FUNCTION_114	CALL_1
0x400a677	      0xb801000000	                              mov eax, 1	      5113	channel.c	FUNCTION_114	CALL_1
0x400a67c	            0xeb05	                           jmp 0x400a683	      5113	channel.c	FUNCTION_114	CALL_1
0x400a67e	      0xb800000000	                              mov eax, 0	      5113	channel.c	FUNCTION_114	CALL_1
0x400a683	              0xc9	                                   leave	      5114	channel.c	FUNCTION_114
0x400a684	              0xc3	                                     ret	      5114	channel.c	FUNCTION_114
handle_mode	ELSE,4:WHILE,0:FOR,0:DO,0:functions,0:CALL,7:IF,4:SWITCH,0	65
0x40082df	              0x55	                                push rbp	      4394	channel.c	FUNCTION_102
0x40082e0	          0x4889e5	                            mov rbp, rsp	      4394	channel.c	FUNCTION_102
0x40082e3	        0x4883ec30	                           sub rsp, 0x30	      4394	channel.c	FUNCTION_102
0x40082e7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4394	channel.c	FUNCTION_102
0x40082eb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4394	channel.c	FUNCTION_102
0x40082ef	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4394	channel.c	FUNCTION_102
0x40082f3	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      4394	channel.c	FUNCTION_102
0x40082f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4395	channel.c	FUNCTION_102	CALL_1
0x40082fa	          0x4889c7	                            mov rdi, rax	      4395	channel.c	FUNCTION_102	CALL_1
0x40082fd	      0xe800000000	                          call 0x4008302	      4395	channel.c	FUNCTION_102	CALL_1
0x4008302	        0x488945f8	                mov qword [rbp - 8], rax	      4395	channel.c	FUNCTION_102	CALL_1
0x4008306	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4397	channel.c	FUNCTION_102
0x400830a	            0x8b00	                    mov eax, dword [rax]	      4397	channel.c	FUNCTION_102
0x400830c	           0xb45d4	              or eax, dword [rbp - 0x2c]	      4397	channel.c	FUNCTION_102
0x400830f	            0x89c2	                            mov edx, eax	      4397	channel.c	FUNCTION_102
0x4008311	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4397	channel.c	FUNCTION_102
0x4008315	            0x8910	                    mov dword [rax], edx	      4397	channel.c	FUNCTION_102
0x4008317	        0x488b45f8	                mov rax, qword [rbp - 8]	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x400831b	      0xbe00000000	                              mov esi, 0	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x4008320	          0x4889c7	                            mov rdi, rax	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x4008323	      0xe800000000	                          call 0x4008328	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x4008328	            0x85c0	                           test eax, eax	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x400832a	            0x750f	                           jne 0x400833b	      4398	channel.c	FUNCTION_102	IF_1	CALL_2
0x400832c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4399	channel.c	FUNCTION_102	IF_1
0x4008330	    0xc70000000000	                      mov dword [rax], 0	      4399	channel.c	FUNCTION_102	IF_1
0x4008336	      0xe986000000	                           jmp 0x40083c1	      4399	channel.c	FUNCTION_102	IF_1
0x400833b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x400833f	      0xbe00000000	                              mov esi, 0	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x4008344	          0x4889c7	                            mov rdi, rax	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x4008347	      0xe800000000	                          call 0x400834c	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x400834c	            0x85c0	                           test eax, eax	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x400834e	            0x750c	                           jne 0x400835c	      4400	channel.c	FUNCTION_102	ELSE_1	IF_2	CALL_3
0x4008350	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4401	channel.c	FUNCTION_102	ELSE_1	IF_2
0x4008354	    0xc70001000000	                      mov dword [rax], 1	      4401	channel.c	FUNCTION_102	ELSE_1	IF_2
0x400835a	            0xeb65	                           jmp 0x40083c1	      4401	channel.c	FUNCTION_102	ELSE_1	IF_2
0x400835c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x4008360	      0xbe00000000	                              mov esi, 0	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x4008365	          0x4889c7	                            mov rdi, rax	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x4008368	      0xe800000000	                          call 0x400836d	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x400836d	            0x85c0	                           test eax, eax	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x400836f	            0x750c	                           jne 0x400837d	      4402	channel.c	FUNCTION_102	ELSE_2	IF_3	CALL_4
0x4008371	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4403	channel.c	FUNCTION_102	ELSE_2	IF_3
0x4008375	    0xc70003000000	                      mov dword [rax], 3	      4403	channel.c	FUNCTION_102	ELSE_2	IF_3
0x400837b	            0xeb44	                           jmp 0x40083c1	      4403	channel.c	FUNCTION_102	ELSE_2	IF_3
0x400837d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4008381	      0xbe00000000	                              mov esi, 0	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4008386	          0x4889c7	                            mov rdi, rax	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4008389	      0xe800000000	                          call 0x400838e	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x400838e	            0x85c0	                           test eax, eax	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4008390	            0x750c	                           jne 0x400839e	      4404	channel.c	FUNCTION_102	ELSE_3	IF_4	CALL_5
0x4008392	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4405	channel.c	FUNCTION_102	ELSE_3	IF_4
0x4008396	    0xc70002000000	                      mov dword [rax], 2	      4405	channel.c	FUNCTION_102	ELSE_3	IF_4
0x400839c	            0xeb23	                           jmp 0x40083c1	      4405	channel.c	FUNCTION_102	ELSE_3	IF_4
0x400839e	      0xbf00000000	                              mov edi, 0	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x40083a3	      0xe800000000	                          call 0x40083a8	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x40083a8	          0x4889c2	                            mov rdx, rax	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x40083ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x40083af	          0x4889c6	                            mov rsi, rax	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x40083b2	          0x4889d7	                            mov rdi, rdx	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x40083b5	      0xe800000000	                          call 0x40083ba	      4408	channel.c	FUNCTION_102	ELSE_4	CALL_7
0x40083ba	      0xb800000000	                              mov eax, 0	      4409	channel.c	FUNCTION_102	ELSE_4
0x40083bf	            0xeb05	                           jmp 0x40083c6	      4409	channel.c	FUNCTION_102	ELSE_4
0x40083c1	      0xb801000000	                              mov eax, 1	      4411	channel.c	FUNCTION_102
0x40083c6	              0xc9	                                   leave	      4412	channel.c	FUNCTION_102
0x40083c7	              0xc3	                                     ret	      4412	channel.c	FUNCTION_102
channel_info	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,9:IF,1:SWITCH,0	72
0x4005992	              0x55	                                push rbp	      2843	channel.c	FUNCTION_67
0x4005993	          0x4889e5	                            mov rbp, rsp	      2843	channel.c	FUNCTION_67
0x4005996	        0x4883ec10	                           sub rsp, 0x10	      2843	channel.c	FUNCTION_67
0x400599a	        0x48897df8	                mov qword [rbp - 8], rdi	      2843	channel.c	FUNCTION_67
0x400599e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2843	channel.c	FUNCTION_67
0x40059a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2844	channel.c	FUNCTION_67	CALL_1
0x40059a6	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2844	channel.c	FUNCTION_67	CALL_1
0x40059a9	          0x4863d0	                         movsxd rdx, eax	      2844	channel.c	FUNCTION_67	CALL_1
0x40059ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2844	channel.c	FUNCTION_67	CALL_1
0x40059b0	      0xb900000000	                              mov ecx, 0	      2844	channel.c	FUNCTION_67	CALL_1
0x40059b5	      0xbe00000000	                              mov esi, 0	      2844	channel.c	FUNCTION_67	CALL_1
0x40059ba	          0x4889c7	                            mov rdi, rax	      2844	channel.c	FUNCTION_67	CALL_1
0x40059bd	      0xe800000000	                          call 0x40059c2	      2844	channel.c	FUNCTION_67	CALL_1
0x40059c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2845	channel.c	FUNCTION_67	CALL_3
0x40059c6	      0xbeffffffff	                     mov esi, 0xffffffff	      2845	channel.c	FUNCTION_67	CALL_3
0x40059cb	          0x4889c7	                            mov rdi, rax	      2845	channel.c	FUNCTION_67	CALL_3
0x40059ce	      0xe800000000	                          call 0x40059d3	      2845	channel.c	FUNCTION_67	CALL_3
0x40059d3	          0x4889c2	                            mov rdx, rax	      2845	channel.c	FUNCTION_67	CALL_3
0x40059d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2845	channel.c	FUNCTION_67	CALL_3
0x40059da	          0x4889d1	                            mov rcx, rdx	      2845	channel.c	FUNCTION_67	CALL_3
0x40059dd	      0xba00000000	                              mov edx, 0	      2845	channel.c	FUNCTION_67	CALL_3
0x40059e2	      0xbe00000000	                              mov esi, 0	      2845	channel.c	FUNCTION_67	CALL_3
0x40059e7	          0x4889c7	                            mov rdi, rax	      2845	channel.c	FUNCTION_67	CALL_3
0x40059ea	      0xe800000000	                          call 0x40059ef	      2845	channel.c	FUNCTION_67	CALL_3
0x40059ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      2847	channel.c	FUNCTION_67	IF_1
0x40059f3	    0x488b80600400	           mov rax, qword [rax + 0x460] 	      2847	channel.c	FUNCTION_67	IF_1
0x40059fa	          0x4885c0	                           test rax, rax	      2847	channel.c	FUNCTION_67	IF_1
0x40059fd	            0x7463	                            je 0x4005a62	      2847	channel.c	FUNCTION_67	IF_1
0x40059ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a03	    0x488b90600400	           mov rdx, qword [rax + 0x460] 	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a0a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a0e	          0x4889d1	                            mov rcx, rdx	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a11	      0xba00000000	                              mov edx, 0	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a16	      0xbe00000000	                              mov esi, 0	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a1b	          0x4889c7	                            mov rdi, rax	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a1e	      0xe800000000	                          call 0x4005a23	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4005a23	        0x488b45f8	                mov rax, qword [rbp - 8]	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a27	    0x8b8068040000	           mov eax, dword [rax + 0x468] 	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a2d	          0x4863d0	                         movsxd rdx, eax	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a34	      0xb900000000	                              mov ecx, 0	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a39	      0xbe00000000	                              mov esi, 0	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a3e	          0x4889c7	                            mov rdi, rax	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a41	      0xe800000000	                          call 0x4005a46	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4005a46	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4005a4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4005a4e	      0xb900000000	                              mov ecx, 0	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4005a53	      0xba00000000	                              mov edx, 0	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4005a58	          0x4889c7	                            mov rdi, rax	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4005a5b	      0xe8cbfcffff	              call sym.channel_part_info	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4005a60	            0xeb4e	                           jmp 0x4005ab0	      2859	channel.c	FUNCTION_67
0x4005a62	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4005a66	        0x488b45f8	                mov rax, qword [rbp - 8]	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4005a6a	      0xb901000000	                              mov ecx, 1	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4005a6f	      0xba00000000	                              mov edx, 0	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4005a74	          0x4889c7	                            mov rdi, rax	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4005a77	      0xe8affcffff	              call sym.channel_part_info	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4005a7c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4005a80	        0x488b45f8	                mov rax, qword [rbp - 8]	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4005a84	      0xb902000000	                              mov ecx, 2	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4005a89	      0xba00000000	                              mov edx, 0	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4005a8e	          0x4889c7	                            mov rdi, rax	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4005a91	      0xe895fcffff	              call sym.channel_part_info	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4005a96	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4005a9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4005a9e	      0xb903000000	                              mov ecx, 3	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4005aa3	      0xba00000000	                              mov edx, 0	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4005aa8	          0x4889c7	                            mov rdi, rax	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4005aab	      0xe87bfcffff	              call sym.channel_part_info	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4005ab0	              0x90	                                     nop	      2859	channel.c	FUNCTION_67
0x4005ab1	              0xc9	                                   leave	      2859	channel.c	FUNCTION_67
0x4005ab2	              0xc3	                                     ret	      2859	channel.c	FUNCTION_67
channel_free	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,2:SWITCH,0	22
0x40007c2	              0x55	                                push rbp	       381	channel.c	FUNCTION_13
0x40007c3	          0x4889e5	                            mov rbp, rsp	       381	channel.c	FUNCTION_13
0x40007c6	        0x4883ec10	                           sub rsp, 0x10	       381	channel.c	FUNCTION_13
0x40007ca	        0x48897df8	                mov qword [rbp - 8], rdi	       381	channel.c	FUNCTION_13
0x40007ce	    0x8b0500000000	            mov eax, dword [0x040007d4] 	       382	channel.c	FUNCTION_13	IF_1
0x40007d4	            0x85c0	                           test eax, eax	       382	channel.c	FUNCTION_13	IF_1
0x40007d6	            0x7532	                           jne 0x400080a	       382	channel.c	FUNCTION_13	IF_1
0x40007d8	    0x8b0500000000	            mov eax, dword [0x040007de] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40007de	            0x85c0	                           test eax, eax	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40007e0	            0x7510	                           jne 0x40007f2	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40007e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40007e6	    0xc78070040000	              mov dword [rax + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40007f0	            0xeb18	                           jmp 0x400080a	       392	channel.c	FUNCTION_13
0x40007f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_1
0x40007f6	          0x4889c7	                            mov rdi, rax	       388	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_1
0x40007f9	      0xe819ffffff	          call sym.channel_free_contents	       388	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_1
0x40007fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       389	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_2
0x4000802	          0x4889c7	                            mov rdi, rax	       389	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_2
0x4000805	      0xe84fffffff	           call sym.channel_free_channel	       389	channel.c	FUNCTION_13	IF_1	ELSE_1	CALL_2
0x400080a	              0x90	                                     nop	       392	channel.c	FUNCTION_13
0x400080b	              0xc9	                                   leave	       392	channel.c	FUNCTION_13
0x400080c	              0xc3	                                     ret	       392	channel.c	FUNCTION_13
job_still_useful	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,0:SWITCH,0	19
0x400a6c0	              0x55	                                push rbp	      5132	channel.c	FUNCTION_116
0x400a6c1	          0x4889e5	                            mov rbp, rsp	      5132	channel.c	FUNCTION_116
0x400a6c4	        0x4883ec08	                              sub rsp, 8	      5132	channel.c	FUNCTION_116
0x400a6c8	        0x48897df8	                mov qword [rbp - 8], rdi	      5132	channel.c	FUNCTION_116
0x400a6cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6d0	          0x4889c7	                            mov rdi, rax	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6d3	      0xe836ffffff	             call sym.job_need_end_check	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6d8	            0x85c0	                           test eax, eax	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6da	            0x7510	                           jne 0x400a6ec	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6e0	          0x4889c7	                            mov rdi, rax	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6e3	      0xe862ffffff	       call sym.job_channel_still_useful	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6e8	            0x85c0	                           test eax, eax	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6ea	            0x7407	                            je 0x400a6f3	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6ec	      0xb801000000	                              mov eax, 1	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6f1	            0xeb05	                           jmp 0x400a6f8	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6f3	      0xb800000000	                              mov eax, 0	      5133	channel.c	FUNCTION_116	CALL_2
0x400a6f8	              0xc9	                                   leave	      5134	channel.c	FUNCTION_116
0x400a6f9	              0xc3	                                     ret	      5134	channel.c	FUNCTION_116
ch_error	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,6:IF,1:SWITCH,0	56
0x400031c	              0x55	                                push rbp	       189	channel.c	FUNCTION_5
0x400031d	          0x4889e5	                            mov rbp, rsp	       189	channel.c	FUNCTION_5
0x4000320	    0x4881ece00000	                           sub rsp, 0xe0	       189	channel.c	FUNCTION_5
0x4000327	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       189	channel.c	FUNCTION_5
0x400032e	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       189	channel.c	FUNCTION_5
0x4000335	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       189	channel.c	FUNCTION_5
0x400033c	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       189	channel.c	FUNCTION_5
0x4000343	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       189	channel.c	FUNCTION_5
0x400034a	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       189	channel.c	FUNCTION_5
0x4000351	            0x84c0	                             test al, al	       189	channel.c	FUNCTION_5
0x4000353	            0x7420	                            je 0x4000375	       189	channel.c	FUNCTION_5
0x4000355	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       189	channel.c	FUNCTION_5
0x4000359	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       189	channel.c	FUNCTION_5
0x400035d	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       189	channel.c	FUNCTION_5
0x4000361	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       189	channel.c	FUNCTION_5
0x4000365	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       189	channel.c	FUNCTION_5
0x4000369	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       189	channel.c	FUNCTION_5
0x400036d	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       189	channel.c	FUNCTION_5
0x4000371	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       189	channel.c	FUNCTION_5
0x4000375	    0x64488b042528	                mov rax, qword fs:[0x28]	       189	channel.c	FUNCTION_5
0x400037e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       189	channel.c	FUNCTION_5
0x4000385	            0x31c0	                            xor eax, eax	       189	channel.c	FUNCTION_5
0x4000387	    0x488b05000000	            mov rax, qword [0x0400038e] 	       190	channel.c	FUNCTION_5	IF_1
0x400038e	          0x4885c0	                           test rax, rax	       190	channel.c	FUNCTION_5	IF_1
0x4000391	     0xf848e000000	                            je 0x4000425	       190	channel.c	FUNCTION_5	IF_1
0x4000397	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x400039e	          0x4889c6	                            mov rsi, rax	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x40003a1	      0xbf00000000	                              mov edi, 0	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x40003a6	      0xe879fdffff	                    call sym.ch_log_lead	       194	channel.c	FUNCTION_5	IF_1	CALL_1
0x40003ab	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40003b5	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40003bf	        0x488d4510	                   lea rax, [rbp + 0x10]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40003c3	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40003ca	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40003d1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40003d8	    0x488b05000000	            mov rax, qword [0x040003df] 	       196	channel.c	FUNCTION_5	IF_1	CALL_3
0x40003df	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       196	channel.c	FUNCTION_5	IF_1	CALL_3
0x40003e6	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       196	channel.c	FUNCTION_5	IF_1	CALL_3
0x40003ed	          0x4889ce	                            mov rsi, rcx	       196	channel.c	FUNCTION_5	IF_1	CALL_3
0x40003f0	          0x4889c7	                            mov rdi, rax	       196	channel.c	FUNCTION_5	IF_1	CALL_3
0x40003f3	      0xe800000000	                          call 0x40003f8	       196	channel.c	FUNCTION_5	IF_1	CALL_3
0x40003f8	    0x488b05000000	            mov rax, qword [0x040003ff] 	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x40003ff	          0x4889c6	                            mov rsi, rax	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x4000402	      0xbf0a000000	                            mov edi, 0xa	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x4000407	      0xe800000000	                          call 0x400040c	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x400040c	    0x488b05000000	            mov rax, qword [0x04000413] 	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x4000413	          0x4889c7	                            mov rdi, rax	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x4000416	      0xe800000000	                          call 0x400041b	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x400041b	    0xc70500000000	               mov dword [0x04000425], 1	       200	channel.c	FUNCTION_5	IF_1
0x4000425	              0x90	                                     nop	       202	channel.c	FUNCTION_5
0x4000426	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       202	channel.c	FUNCTION_5
0x400042d	    0x644833042528	                xor rax, qword fs:[0x28]	       202	channel.c	FUNCTION_5
0x4000436	            0x7405	                            je 0x400043d	       202	channel.c	FUNCTION_5
0x4000438	      0xe800000000	                          call 0x400043d	       202	channel.c	FUNCTION_5
0x400043d	              0xc9	                                   leave	       202	channel.c	FUNCTION_5
0x400043e	              0xc3	                                     ret	       202	channel.c	FUNCTION_5
channel_is_open	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	26
0x400553f	              0x55	                                push rbp	      2724	channel.c	FUNCTION_63
0x4005540	          0x4889e5	                            mov rbp, rsp	      2724	channel.c	FUNCTION_63
0x4005543	        0x48897df8	                mov qword [rbp - 8], rdi	      2724	channel.c	FUNCTION_63
0x4005547	      0x48837df800	                  cmp qword [rbp - 8], 0	      2725	channel.c	FUNCTION_63
0x400554c	            0x7440	                            je 0x400558e	      2725	channel.c	FUNCTION_63
0x400554e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2725	channel.c	FUNCTION_63
0x4005552	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2725	channel.c	FUNCTION_63
0x4005555	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x4005558	            0x752d	                           jne 0x4005587	      2725	channel.c	FUNCTION_63
0x400555a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2726	channel.c	FUNCTION_63
0x400555e	    0x8b8048030000	           mov eax, dword [rax + 0x348] 	      2726	channel.c	FUNCTION_63
0x4005564	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x4005567	            0x751e	                           jne 0x4005587	      2726	channel.c	FUNCTION_63
0x4005569	        0x488b45f8	                mov rax, qword [rbp - 8]	      2727	channel.c	FUNCTION_63
0x400556d	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      2727	channel.c	FUNCTION_63
0x4005573	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x4005576	            0x750f	                           jne 0x4005587	      2727	channel.c	FUNCTION_63
0x4005578	        0x488b45f8	                mov rax, qword [rbp - 8]	      2728	channel.c	FUNCTION_63
0x400557c	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      2728	channel.c	FUNCTION_63
0x4005582	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2728	channel.c	FUNCTION_63
0x4005585	            0x7407	                            je 0x400558e	      2728	channel.c	FUNCTION_63
0x4005587	      0xb801000000	                              mov eax, 1	      2725	channel.c	FUNCTION_63
0x400558c	            0xeb05	                           jmp 0x4005593	      2725	channel.c	FUNCTION_63
0x400558e	      0xb800000000	                              mov eax, 0	      2725	channel.c	FUNCTION_63
0x4005593	              0x5d	                                 pop rbp	      2729	channel.c	FUNCTION_63
0x4005594	              0xc3	                                     ret	      2729	channel.c	FUNCTION_63
channel_fill	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,8:IF,3:SWITCH,0	82
0x40036b9	              0x55	                                push rbp	      1866	channel.c	FUNCTION_51
0x40036ba	          0x4889e5	                            mov rbp, rsp	      1866	channel.c	FUNCTION_51
0x40036bd	        0x4883ec40	                           sub rsp, 0x40	      1866	channel.c	FUNCTION_51
0x40036c1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1866	channel.c	FUNCTION_51
0x40036c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1867	channel.c	FUNCTION_51
0x40036c9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1867	channel.c	FUNCTION_51
0x40036cd	        0x488945f0	             mov qword [rbp - 0x10], rax	      1867	channel.c	FUNCTION_51
0x40036d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1868	channel.c	FUNCTION_51
0x40036d5	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1868	channel.c	FUNCTION_51
0x40036d8	          0x8945dc	             mov dword [rbp - 0x24], eax	      1868	channel.c	FUNCTION_51
0x40036db	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1869	channel.c	FUNCTION_51	CALL_1
0x40036de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1869	channel.c	FUNCTION_51	CALL_1
0x40036e2	            0x89d6	                            mov esi, edx	      1869	channel.c	FUNCTION_51	CALL_1
0x40036e4	          0x4889c7	                            mov rdi, rax	      1869	channel.c	FUNCTION_51	CALL_1
0x40036e7	      0xe800000000	                          call 0x40036ec	      1869	channel.c	FUNCTION_51	CALL_1
0x40036ec	        0x488945e8	             mov qword [rbp - 0x18], rax	      1869	channel.c	FUNCTION_51	CALL_1
0x40036f0	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1874	channel.c	FUNCTION_51	IF_1
0x40036f5	            0x750a	                           jne 0x4003701	      1874	channel.c	FUNCTION_51	IF_1
0x40036f7	      0xb800000000	                              mov eax, 0	      1875	channel.c	FUNCTION_51	IF_1
0x40036fc	      0xe9d8000000	                           jmp 0x40037d9	      1875	channel.c	FUNCTION_51	IF_1
0x4003701	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1877	channel.c	FUNCTION_51
0x4003705	        0x488b4008	                mov rax, qword [rax + 8]	      1877	channel.c	FUNCTION_51
0x4003709	          0x4889c2	                            mov rdx, rax	      1877	channel.c	FUNCTION_51
0x400370c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1877	channel.c	FUNCTION_51
0x4003710	          0x488b00	                    mov rax, qword [rax]	      1877	channel.c	FUNCTION_51
0x4003713	          0x4829c2	                            sub rdx, rax	      1877	channel.c	FUNCTION_51
0x4003716	          0x4889d0	                            mov rax, rdx	      1877	channel.c	FUNCTION_51
0x4003719	          0x8945e0	             mov dword [rbp - 0x20], eax	      1877	channel.c	FUNCTION_51
0x400371c	        0x837de000	               cmp dword [rbp - 0x20], 0	      1878	channel.c	FUNCTION_51	IF_2
0x4003720	     0xf8e94000000	                           jle 0x40037ba	      1878	channel.c	FUNCTION_51	IF_2
0x4003726	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x400372a	          0x4889c7	                            mov rdi, rax	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x400372d	      0xe800000000	                          call 0x4003732	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4003732	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4003735	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4003738	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x400373b	             0x1d0	                            add eax, edx	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x400373d	          0x83c001	                              add eax, 1	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4003740	            0x89c7	                            mov edi, eax	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4003742	      0xe800000000	                          call 0x4003747	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4003747	        0x488945f8	                mov qword [rbp - 8], rax	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x400374b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x4003750	            0x7513	                           jne 0x4003765	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x4003752	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4003756	          0x4889c7	                            mov rdi, rax	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4003759	      0xe800000000	                          call 0x400375e	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x400375e	      0xb800000000	                              mov eax, 0	      1886	channel.c	FUNCTION_51	IF_2	IF_3
0x4003763	            0xeb74	                           jmp 0x40037d9	      1886	channel.c	FUNCTION_51	IF_2	IF_3
0x4003765	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4003768	          0x4863d0	                         movsxd rdx, eax	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x400376b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x400376f	          0x488b08	                    mov rcx, qword [rax]	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4003772	        0x488b45f8	                mov rax, qword [rbp - 8]	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4003776	          0x4889ce	                            mov rsi, rcx	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4003779	          0x4889c7	                            mov rdi, rax	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x400377c	      0xe800000000	                          call 0x4003781	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4003781	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x4003784	          0x83c001	                              add eax, 1	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x4003787	          0x4863d0	                         movsxd rdx, eax	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x400378a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x400378d	          0x4863c8	                         movsxd rcx, eax	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x4003790	        0x488b45f8	                mov rax, qword [rbp - 8]	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x4003794	          0x4801c1	                            add rcx, rax	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x4003797	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x400379b	          0x4889c6	                            mov rsi, rax	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x400379e	          0x4889cf	                            mov rdi, rcx	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x40037a1	      0xe800000000	                          call 0x40037a6	      1889	channel.c	FUNCTION_51	IF_2	CALL_6
0x40037a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x40037aa	          0x4889c7	                            mov rdi, rax	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x40037ad	      0xe800000000	                          call 0x40037b2	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x40037b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1891	channel.c	FUNCTION_51	IF_2
0x40037b6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1891	channel.c	FUNCTION_51	IF_2
0x40037ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1894	channel.c	FUNCTION_51	CALL_8
0x40037be	          0x488b00	                    mov rax, qword [rax]	      1894	channel.c	FUNCTION_51	CALL_8
0x40037c1	          0x4889c7	                            mov rdi, rax	      1894	channel.c	FUNCTION_51	CALL_8
0x40037c4	      0xe800000000	                          call 0x40037c9	      1894	channel.c	FUNCTION_51	CALL_8
0x40037c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1895	channel.c	FUNCTION_51
0x40037cd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1895	channel.c	FUNCTION_51
0x40037d1	          0x488910	                    mov qword [rax], rdx	      1895	channel.c	FUNCTION_51
0x40037d4	      0xb801000000	                              mov eax, 1	      1896	channel.c	FUNCTION_51
0x40037d9	              0xc9	                                   leave	      1897	channel.c	FUNCTION_51
0x40037da	              0xc3	                                     ret	      1897	channel.c	FUNCTION_51
channel_close_in	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	11
0x4005dd7	              0x55	                                push rbp	      2956	channel.c	FUNCTION_69
0x4005dd8	          0x4889e5	                            mov rbp, rsp	      2956	channel.c	FUNCTION_69
0x4005ddb	        0x4883ec10	                           sub rsp, 0x10	      2956	channel.c	FUNCTION_69
0x4005ddf	        0x48897df8	                mov qword [rbp - 8], rdi	      2956	channel.c	FUNCTION_69
0x4005de3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2957	channel.c	FUNCTION_69	CALL_1
0x4005de7	      0xbe03000000	                              mov esi, 3	      2957	channel.c	FUNCTION_69	CALL_1
0x4005dec	          0x4889c7	                            mov rdi, rax	      2957	channel.c	FUNCTION_69	CALL_1
0x4005def	      0xe855bbffff	                  call sym.ch_close_part	      2957	channel.c	FUNCTION_69	CALL_1
0x4005df4	              0x90	                                     nop	      2958	channel.c	FUNCTION_69
0x4005df5	              0xc9	                                   leave	      2958	channel.c	FUNCTION_69
0x4005df6	              0xc3	                                     ret	      2958	channel.c	FUNCTION_69
channel_part_read	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,1:SWITCH,0	12
0x4008259	              0x55	                                push rbp	      4365	channel.c	FUNCTION_99
0x400825a	          0x4889e5	                            mov rbp, rsp	      4365	channel.c	FUNCTION_99
0x400825d	        0x48897df8	                mov qword [rbp - 8], rdi	      4365	channel.c	FUNCTION_99
0x4008261	        0x488b45f8	                mov rax, qword [rbp - 8]	      4366	channel.c	FUNCTION_99	IF_1
0x4008265	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4366	channel.c	FUNCTION_99	IF_1
0x4008268	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4366	channel.c	FUNCTION_99	IF_1
0x400826b	            0x7507	                           jne 0x4008274	      4366	channel.c	FUNCTION_99	IF_1
0x400826d	      0xb801000000	                              mov eax, 1	      4367	channel.c	FUNCTION_99	IF_1
0x4008272	            0xeb05	                           jmp 0x4008279	      4367	channel.c	FUNCTION_99	IF_1
0x4008274	      0xb800000000	                              mov eax, 0	      4368	channel.c	FUNCTION_99
0x4008279	              0x5d	                                 pop rbp	      4369	channel.c	FUNCTION_99
0x400827a	              0xc3	                                     ret	      4369	channel.c	FUNCTION_99
channel_set_job	ELSE,3:WHILE,0:FOR,0:DO,0:functions,0:CALL,3:IF,4:SWITCH,0	87
0x4001b53	              0x55	                                push rbp	      1060	channel.c	FUNCTION_31
0x4001b54	          0x4889e5	                            mov rbp, rsp	      1060	channel.c	FUNCTION_31
0x4001b57	        0x4883ec30	                           sub rsp, 0x30	      1060	channel.c	FUNCTION_31
0x4001b5b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1060	channel.c	FUNCTION_31
0x4001b5f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1060	channel.c	FUNCTION_31
0x4001b63	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1060	channel.c	FUNCTION_31
0x4001b67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1061	channel.c	FUNCTION_31
0x4001b6b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1061	channel.c	FUNCTION_31
0x4001b6f	    0x488990a80400	            mov qword [rax + 0x4a8], rdx	      1061	channel.c	FUNCTION_31
0x4001b76	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1063	channel.c	FUNCTION_31	CALL_1
0x4001b7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1063	channel.c	FUNCTION_31	CALL_1
0x4001b7e	          0x4889d6	                            mov rsi, rdx	      1063	channel.c	FUNCTION_31	CALL_1
0x4001b81	          0x4889c7	                            mov rdi, rax	      1063	channel.c	FUNCTION_31	CALL_1
0x4001b84	      0xe800000000	                          call 0x4001b89	      1063	channel.c	FUNCTION_31	CALL_1
0x4001b89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1065	channel.c	FUNCTION_31	IF_1
0x4001b8d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1065	channel.c	FUNCTION_31	IF_1
0x4001b91	          0x4885c0	                           test rax, rax	      1065	channel.c	FUNCTION_31	IF_1
0x4001b94	     0xf842b010000	                            je 0x4001cc5	      1065	channel.c	FUNCTION_31	IF_1
0x4001b9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1067	channel.c	FUNCTION_31	IF_1
0x4001b9e	    0x480548030000	                          add rax, 0x348	      1067	channel.c	FUNCTION_31	IF_1
0x4001ba4	        0x488945f8	                mov qword [rbp - 8], rax	      1067	channel.c	FUNCTION_31	IF_1
0x4001ba8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bac	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bb0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bb4	    0x4881c2e00000	                           add rdx, 0xe0	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bbb	          0x4889c6	                            mov rsi, rax	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bbe	          0x4889d7	                            mov rdi, rdx	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bc1	      0xe800000000	                          call 0x4001bc6	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4001bc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1071	channel.c	FUNCTION_31	IF_1
0x4001bca	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1071	channel.c	FUNCTION_31	IF_1
0x4001bd1	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1071	channel.c	FUNCTION_31	IF_1
0x4001bd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001bdc	      0xbe00000000	                              mov esi, 0	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001be1	          0x4889c7	                            mov rdi, rax	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001be4	      0xb800000000	                              mov eax, 0	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001be9	      0xe800000000	                          call 0x4001bee	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4001bee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bf2	            0x8b00	                    mov eax, dword [rax]	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bf4	      0x2500004000	                       and eax, 0x400000	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bf9	            0x85c0	                           test eax, eax	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bfb	            0x7479	                            je 0x4001c76	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4001bfd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c01	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c08	          0x4885c0	                           test rax, rax	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c0b	            0x7551	                           jne 0x4001c5e	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c11	            0x8b00	                    mov eax, dword [rax]	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c13	      0x2500008000	                       and eax, 0x800000	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c18	            0x85c0	                           test eax, eax	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c1a	            0x7542	                           jne 0x4001c5e	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c20	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c27	    0xc780341c0000	            mov dword [rax + 0x1c34], 1 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c31	        0x488b45f8	                mov rax, qword [rbp - 8]	      1079	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c35	    0xc780f8000000	               mov dword [rax + 0xf8], 1	      1079	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c43	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1081	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c4a	          0x488b00	                    mov rax, qword [rax]	      1081	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c4d	        0x488d5001	                      lea rdx, [rax + 1]	      1081	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c51	        0x488b45f8	                mov rax, qword [rbp - 8]	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c55	    0x488990000100	            mov qword [rax + 0x100], rdx	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c5c	            0xeb27	                           jmp 0x4001c85	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4001c5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x4001c62	    0x488b90900100	           mov rdx, qword [rax + 0x190] 	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x4001c69	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x4001c6d	    0x488990000100	            mov qword [rax + 0x100], rdx	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x4001c74	            0xeb0f	                           jmp 0x4001c85	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x4001c76	        0x488b45f8	                mov rax, qword [rbp - 8]	      1087	channel.c	FUNCTION_31	IF_1	ELSE_2
0x4001c7a	    0x48c780000100	              mov qword [rax + 0x100], 1	      1087	channel.c	FUNCTION_31	IF_1	ELSE_2
0x4001c85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c89	            0x8b00	                    mov eax, dword [rax]	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c8b	      0x2500008000	                       and eax, 0x800000	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c90	            0x85c0	                           test eax, eax	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c92	            0x7418	                            je 0x4001cac	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c98	    0x488b90980100	           mov rdx, qword [rax + 0x198] 	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001c9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001ca3	    0x488990080100	            mov qword [rax + 0x108], rdx	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4001caa	            0xeb19	                           jmp 0x4001cc5	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001cac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001cb0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001cb7	          0x488b10	                    mov rdx, qword [rax]	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001cba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001cbe	    0x488990080100	            mov qword [rax + 0x108], rdx	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4001cc5	              0x90	                                     nop	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001cc6	              0xc9	                                   leave	      1093	channel.c	FUNCTION_31	ELSE_3
0x4001cc7	              0xc3	                                     ret	      1093	channel.c	FUNCTION_31	ELSE_3
channel_free_channel	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,2:SWITCH,0	32
0x4000759	              0x55	                                push rbp	       369	channel.c	FUNCTION_12
0x400075a	          0x4889e5	                            mov rbp, rsp	       369	channel.c	FUNCTION_12
0x400075d	        0x4883ec10	                           sub rsp, 0x10	       369	channel.c	FUNCTION_12
0x4000761	        0x48897df8	                mov qword [rbp - 8], rdi	       369	channel.c	FUNCTION_12
0x4000765	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	channel.c	FUNCTION_12	IF_1
0x4000769	          0x488b00	                    mov rax, qword [rax]	       370	channel.c	FUNCTION_12	IF_1
0x400076c	          0x4885c0	                           test rax, rax	       370	channel.c	FUNCTION_12	IF_1
0x400076f	            0x7413	                            je 0x4000784	       370	channel.c	FUNCTION_12	IF_1
0x4000771	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	channel.c	FUNCTION_12	IF_1
0x4000775	          0x488b00	                    mov rax, qword [rax]	       371	channel.c	FUNCTION_12	IF_1
0x4000778	        0x488b55f8	                mov rdx, qword [rbp - 8]	       371	channel.c	FUNCTION_12	IF_1
0x400077c	        0x488b5208	                mov rdx, qword [rdx + 8]	       371	channel.c	FUNCTION_12	IF_1
0x4000780	        0x48895008	                mov qword [rax + 8], rdx	       371	channel.c	FUNCTION_12	IF_1
0x4000784	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	channel.c	FUNCTION_12	IF_2
0x4000788	        0x488b4008	                mov rax, qword [rax + 8]	       372	channel.c	FUNCTION_12	IF_2
0x400078c	          0x4885c0	                           test rax, rax	       372	channel.c	FUNCTION_12	IF_2
0x400078f	            0x7510	                           jne 0x40007a1	       372	channel.c	FUNCTION_12	IF_2
0x4000791	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	channel.c	FUNCTION_12	IF_2
0x4000795	          0x488b00	                    mov rax, qword [rax]	       373	channel.c	FUNCTION_12	IF_2
0x4000798	    0x488905000000	            mov qword [0x0400079f], rax 	       373	channel.c	FUNCTION_12	IF_2
0x400079f	            0xeb12	                           jmp 0x40007b3	       373	channel.c	FUNCTION_12	IF_2
0x40007a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	channel.c	FUNCTION_12	ELSE_1
0x40007a5	        0x488b4008	                mov rax, qword [rax + 8]	       375	channel.c	FUNCTION_12	ELSE_1
0x40007a9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       375	channel.c	FUNCTION_12	ELSE_1
0x40007ad	          0x488b12	                    mov rdx, qword [rdx]	       375	channel.c	FUNCTION_12	ELSE_1
0x40007b0	          0x488910	                    mov qword [rax], rdx	       375	channel.c	FUNCTION_12	ELSE_1
0x40007b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	channel.c	FUNCTION_12	CALL_1
0x40007b7	          0x4889c7	                            mov rdi, rax	       376	channel.c	FUNCTION_12	CALL_1
0x40007ba	      0xe800000000	                          call 0x40007bf	       376	channel.c	FUNCTION_12	CALL_1
0x40007bf	              0x90	                                     nop	       377	channel.c	FUNCTION_12
0x40007c0	              0xc9	                                   leave	       377	channel.c	FUNCTION_12
0x40007c1	              0xc3	                                     ret	       377	channel.c	FUNCTION_12
free_unused_channels	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	32
0x400091e	              0x55	                                push rbp	       450	channel.c	FUNCTION_17
0x400091f	          0x4889e5	                            mov rbp, rsp	       450	channel.c	FUNCTION_17
0x4000922	        0x4883ec20	                           sub rsp, 0x20	       450	channel.c	FUNCTION_17
0x4000926	          0x897dec	             mov dword [rbp - 0x14], edi	       450	channel.c	FUNCTION_17
0x4000929	          0x8975e8	             mov dword [rbp - 0x18], esi	       450	channel.c	FUNCTION_17
0x400092c	    0x488b05000000	            mov rax, qword [0x04000933] 	       454	channel.c	FUNCTION_17	FOR_1
0x4000933	        0x488945f0	             mov qword [rbp - 0x10], rax	       454	channel.c	FUNCTION_17	FOR_1
0x4000937	            0xeb43	                           jmp 0x400097c	       454	channel.c	FUNCTION_17	FOR_1
0x4000939	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       456	channel.c	FUNCTION_17	FOR_1
0x400093d	          0x488b00	                    mov rax, qword [rax]	       456	channel.c	FUNCTION_17	FOR_1
0x4000940	        0x488945f8	                mov qword [rbp - 8], rax	       456	channel.c	FUNCTION_17	FOR_1
0x4000944	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4000948	          0x4889c7	                            mov rdi, rax	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x400094b	      0xe819fcffff	           call sym.channel_still_useful	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4000950	            0x85c0	                           test eax, eax	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4000952	            0x7520	                           jne 0x4000974	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4000954	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4000958	    0x8b80b8040000	           mov eax, dword [rax + 0x4b8] 	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x400095e	          0x3345ec	             xor eax, dword [rbp - 0x14]	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4000961	          0x2345e8	             and eax, dword [rbp - 0x18]	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4000964	            0x85c0	                           test eax, eax	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4000966	            0x740c	                            je 0x4000974	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4000968	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x400096c	          0x4889c7	                            mov rdi, rax	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x400096f	      0xe8e5fdffff	           call sym.channel_free_channel	       461	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_2
0x4000974	        0x488b45f8	                mov rax, qword [rbp - 8]	       454	channel.c	FUNCTION_17	FOR_1
0x4000978	        0x488945f0	             mov qword [rbp - 0x10], rax	       454	channel.c	FUNCTION_17	FOR_1
0x400097c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       454	channel.c	FUNCTION_17	FOR_1
0x4000981	            0x75b6	                           jne 0x4000939	       454	channel.c	FUNCTION_17	FOR_1
0x4000983	              0x90	                                     nop	       464	channel.c	FUNCTION_17
0x4000984	              0xc9	                                   leave	       464	channel.c	FUNCTION_17
0x4000985	              0xc3	                                     ret	       464	channel.c	FUNCTION_17
channel_gui_unregister_one	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,5:IF,2:SWITCH,0	46
0x4000c23	              0x55	                                push rbp	       604	channel.c	FUNCTION_25
0x4000c24	          0x4889e5	                            mov rbp, rsp	       604	channel.c	FUNCTION_25
0x4000c27	        0x4883ec10	                           sub rsp, 0x10	       604	channel.c	FUNCTION_25
0x4000c2b	        0x48897df8	                mov qword [rbp - 8], rdi	       604	channel.c	FUNCTION_25
0x4000c2f	          0x8975f4	              mov dword [rbp - 0xc], esi	       604	channel.c	FUNCTION_25
0x4000c32	        0x488b55f8	                mov rdx, qword [rbp - 8]	       614	channel.c	FUNCTION_25	IF_2
0x4000c36	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       614	channel.c	FUNCTION_25	IF_2
0x4000c39	        0x48c1e004	                              shl rax, 4	       614	channel.c	FUNCTION_25	IF_2
0x4000c3d	          0x4889c1	                            mov rcx, rax	       614	channel.c	FUNCTION_25	IF_2
0x4000c40	        0x48c1e104	                              shl rcx, 4	       614	channel.c	FUNCTION_25	IF_2
0x4000c44	          0x4801c8	                            add rax, rcx	       614	channel.c	FUNCTION_25	IF_2
0x4000c47	          0x4801d0	                            add rax, rdx	       614	channel.c	FUNCTION_25	IF_2
0x4000c4a	        0x4883c01c	                           add rax, 0x1c	       614	channel.c	FUNCTION_25	IF_2
0x4000c4e	            0x8b00	                    mov eax, dword [rax]	       614	channel.c	FUNCTION_25	IF_2
0x4000c50	            0x85c0	                           test eax, eax	       614	channel.c	FUNCTION_25	IF_2
0x4000c52	            0x7468	                            je 0x4000cbc	       614	channel.c	FUNCTION_25	IF_2
0x4000c54	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000c57	    0x488b14c50000	                  mov rdx, qword [rax*8]	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000c5f	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000c63	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000c68	          0x4889c7	                            mov rdi, rax	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000c6b	      0xb800000000	                              mov eax, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000c70	      0xe800000000	                          call 0x4000c75	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4000c75	        0x488b55f8	                mov rdx, qword [rbp - 8]	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c79	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c7c	        0x48c1e004	                              shl rax, 4	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c80	          0x4889c1	                            mov rcx, rax	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c83	        0x48c1e104	                              shl rcx, 4	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c87	          0x4801c8	                            add rax, rcx	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c8a	          0x4801d0	                            add rax, rdx	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c8d	        0x4883c01c	                           add rax, 0x1c	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c91	            0x8b00	                    mov eax, dword [rax]	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c93	            0x89c7	                            mov edi, eax	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c95	      0xe800000000	                          call 0x4000c9a	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4000c9a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       622	channel.c	FUNCTION_25	IF_2
0x4000c9e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       622	channel.c	FUNCTION_25	IF_2
0x4000ca1	        0x48c1e004	                              shl rax, 4	       622	channel.c	FUNCTION_25	IF_2
0x4000ca5	          0x4889c1	                            mov rcx, rax	       622	channel.c	FUNCTION_25	IF_2
0x4000ca8	        0x48c1e104	                              shl rcx, 4	       622	channel.c	FUNCTION_25	IF_2
0x4000cac	          0x4801c8	                            add rax, rcx	       622	channel.c	FUNCTION_25	IF_2
0x4000caf	          0x4801d0	                            add rax, rdx	       622	channel.c	FUNCTION_25	IF_2
0x4000cb2	        0x4883c01c	                           add rax, 0x1c	       622	channel.c	FUNCTION_25	IF_2
0x4000cb6	    0xc70000000000	                      mov dword [rax], 0	       622	channel.c	FUNCTION_25	IF_2
0x4000cbc	              0x90	                                     nop	       626	channel.c	FUNCTION_25
0x4000cbd	              0xc9	                                   leave	       626	channel.c	FUNCTION_25
0x4000cbe	              0xc3	                                     ret	       626	channel.c	FUNCTION_25
channel_gui_register	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,3:IF,3:SWITCH,0	49
0x4000b3f	              0x55	                                push rbp	       577	channel.c	FUNCTION_23
0x4000b40	          0x4889e5	                            mov rbp, rsp	       577	channel.c	FUNCTION_23
0x4000b43	        0x4883ec10	                           sub rsp, 0x10	       577	channel.c	FUNCTION_23
0x4000b47	        0x48897df8	                mov qword [rbp - 8], rdi	       577	channel.c	FUNCTION_23
0x4000b4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	channel.c	FUNCTION_23	IF_1
0x4000b4f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       578	channel.c	FUNCTION_23	IF_1
0x4000b52	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       578	channel.c	FUNCTION_23	IF_1
0x4000b55	            0x7411	                            je 0x4000b68	       578	channel.c	FUNCTION_23	IF_1
0x4000b57	        0x488b45f8	                mov rax, qword [rbp - 8]	       579	channel.c	FUNCTION_23	CALL_1
0x4000b5b	      0xbe00000000	                              mov esi, 0	       579	channel.c	FUNCTION_23	CALL_1
0x4000b60	          0x4889c7	                            mov rdi, rax	       579	channel.c	FUNCTION_23	CALL_1
0x4000b63	      0xe8bcfeffff	       call sym.channel_gui_register_one	       579	channel.c	FUNCTION_23	CALL_1
0x4000b68	        0x488b45f8	                mov rax, qword [rbp - 8]	       580	channel.c	FUNCTION_23	IF_2
0x4000b6c	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       580	channel.c	FUNCTION_23	IF_2
0x4000b72	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       580	channel.c	FUNCTION_23	IF_2
0x4000b75	            0x7426	                            je 0x4000b9d	       580	channel.c	FUNCTION_23	IF_2
0x4000b77	        0x488b45f8	                mov rax, qword [rbp - 8]	       581	channel.c	FUNCTION_23	IF_2
0x4000b7b	    0x8b9028010000	           mov edx, dword [rax + 0x128] 	       581	channel.c	FUNCTION_23	IF_2
0x4000b81	        0x488b45f8	                mov rax, qword [rbp - 8]	       581	channel.c	FUNCTION_23	IF_2
0x4000b85	          0x8b4018	            mov eax, dword [rax + 0x18] 	       581	channel.c	FUNCTION_23	IF_2
0x4000b88	            0x39c2	                            cmp edx, eax	       581	channel.c	FUNCTION_23	IF_2
0x4000b8a	            0x7411	                            je 0x4000b9d	       581	channel.c	FUNCTION_23	IF_2
0x4000b8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       582	channel.c	FUNCTION_23	CALL_2
0x4000b90	      0xbe01000000	                              mov esi, 1	       582	channel.c	FUNCTION_23	CALL_2
0x4000b95	          0x4889c7	                            mov rdi, rax	       582	channel.c	FUNCTION_23	CALL_2
0x4000b98	      0xe887feffff	       call sym.channel_gui_register_one	       582	channel.c	FUNCTION_23	CALL_2
0x4000b9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       583	channel.c	FUNCTION_23	IF_3
0x4000ba1	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       583	channel.c	FUNCTION_23	IF_3
0x4000ba7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       583	channel.c	FUNCTION_23	IF_3
0x4000baa	            0x743e	                            je 0x4000bea	       583	channel.c	FUNCTION_23	IF_3
0x4000bac	        0x488b45f8	                mov rax, qword [rbp - 8]	       584	channel.c	FUNCTION_23	IF_3
0x4000bb0	    0x8b9038020000	           mov edx, dword [rax + 0x238] 	       584	channel.c	FUNCTION_23	IF_3
0x4000bb6	        0x488b45f8	                mov rax, qword [rbp - 8]	       584	channel.c	FUNCTION_23	IF_3
0x4000bba	          0x8b4018	            mov eax, dword [rax + 0x18] 	       584	channel.c	FUNCTION_23	IF_3
0x4000bbd	            0x39c2	                            cmp edx, eax	       584	channel.c	FUNCTION_23	IF_3
0x4000bbf	            0x7429	                            je 0x4000bea	       584	channel.c	FUNCTION_23	IF_3
0x4000bc1	        0x488b45f8	                mov rax, qword [rbp - 8]	       585	channel.c	FUNCTION_23	IF_3
0x4000bc5	    0x8b9038020000	           mov edx, dword [rax + 0x238] 	       585	channel.c	FUNCTION_23	IF_3
0x4000bcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       585	channel.c	FUNCTION_23	IF_3
0x4000bcf	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       585	channel.c	FUNCTION_23	IF_3
0x4000bd5	            0x39c2	                            cmp edx, eax	       585	channel.c	FUNCTION_23	IF_3
0x4000bd7	            0x7411	                            je 0x4000bea	       585	channel.c	FUNCTION_23	IF_3
0x4000bd9	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	channel.c	FUNCTION_23	CALL_3
0x4000bdd	      0xbe02000000	                              mov esi, 2	       586	channel.c	FUNCTION_23	CALL_3
0x4000be2	          0x4889c7	                            mov rdi, rax	       586	channel.c	FUNCTION_23	CALL_3
0x4000be5	      0xe83afeffff	       call sym.channel_gui_register_one	       586	channel.c	FUNCTION_23	CALL_3
0x4000bea	              0x90	                                     nop	       587	channel.c	FUNCTION_23
0x4000beb	              0xc9	                                   leave	       587	channel.c	FUNCTION_23
0x4000bec	              0xc3	                                     ret	       587	channel.c	FUNCTION_23
ch_logfile	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,6:IF,4:SWITCH,0	53
0x4000040	              0x55	                                push rbp	       108	channel.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       108	channel.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       108	channel.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	channel.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       108	channel.c	FUNCTION_1
0x4000050	    0x48c745f80000	                  mov qword [rbp - 8], 0	       109	channel.c	FUNCTION_1
0x4000058	    0x488b05000000	            mov rax, qword [0x0400005f] 	       111	channel.c	FUNCTION_1	IF_1
0x400005f	          0x4885c0	                           test rax, rax	       111	channel.c	FUNCTION_1	IF_1
0x4000062	            0x740f	                            je 0x4000073	       111	channel.c	FUNCTION_1	IF_1
0x4000064	    0x488b05000000	            mov rax, qword [0x0400006b] 	       112	channel.c	FUNCTION_1	CALL_1
0x400006b	          0x4889c7	                            mov rdi, rax	       112	channel.c	FUNCTION_1	CALL_1
0x400006e	      0xe800000000	                          call 0x4000073	       112	channel.c	FUNCTION_1	CALL_1
0x4000073	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	channel.c	FUNCTION_1	IF_2
0x4000077	           0xfb600	                   movzx eax, byte [rax]	       114	channel.c	FUNCTION_1	IF_2
0x400007a	            0x84c0	                             test al, al	       114	channel.c	FUNCTION_1	IF_2
0x400007c	            0x744f	                            je 0x40000cd	       114	channel.c	FUNCTION_1	IF_2
0x400007e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000082	           0xfb600	                   movzx eax, byte [rax]	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000085	            0x3c77	                            cmp al, 0x77	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000087	            0x7507	                           jne 0x4000090	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000089	      0xba00000000	                              mov edx, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x400008e	            0xeb05	                           jmp 0x4000095	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000090	      0xba00000000	                              mov edx, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000095	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4000099	          0x4889d6	                            mov rsi, rdx	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x400009c	          0x4889c7	                            mov rdi, rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x400009f	      0xe800000000	                          call 0x40000a4	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x40000a4	        0x488945f8	                mov qword [rbp - 8], rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x40000a8	      0x48837df800	                  cmp qword [rbp - 8], 0	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x40000ad	            0x751e	                           jne 0x40000cd	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x40000af	      0xbf00000000	                              mov edi, 0	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000b4	      0xe800000000	                          call 0x40000b9	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000b9	          0x4889c2	                            mov rdx, rax	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000c0	          0x4889c6	                            mov rsi, rax	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000c3	          0x4889d7	                            mov rdi, rdx	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000c6	      0xe800000000	                          call 0x40000cb	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000cb	            0xeb3f	                           jmp 0x400010c	       120	channel.c	FUNCTION_1	IF_2	IF_3
0x40000cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	channel.c	FUNCTION_1
0x40000d1	    0x488905000000	            mov qword [0x040000d8], rax 	       123	channel.c	FUNCTION_1
0x40000d8	    0x488b05000000	            mov rax, qword [0x040000df] 	       125	channel.c	FUNCTION_1	IF_4
0x40000df	          0x4885c0	                           test rax, rax	       125	channel.c	FUNCTION_1	IF_4
0x40000e2	            0x7428	                            je 0x400010c	       125	channel.c	FUNCTION_1	IF_4
0x40000e4	    0x488b05000000	            mov rax, qword [0x040000eb] 	       127	channel.c	FUNCTION_1	IF_4	CALL_5
0x40000eb	          0x4889c1	                            mov rcx, rax	       127	channel.c	FUNCTION_1	IF_4	CALL_5
0x40000ee	      0xba1c000000	                           mov edx, 0x1c	       127	channel.c	FUNCTION_1	IF_4	CALL_5
0x40000f3	      0xbe01000000	                              mov esi, 1	       127	channel.c	FUNCTION_1	IF_4	CALL_5
0x40000f8	      0xbf00000000	                              mov edi, 0	       127	channel.c	FUNCTION_1	IF_4	CALL_5
0x40000fd	      0xe800000000	                          call 0x4000102	       127	channel.c	FUNCTION_1	IF_4	CALL_5
0x4000102	      0xbf00000000	                              mov edi, 0	       129	channel.c	FUNCTION_1	IF_4	CALL_6
0x4000107	      0xe800000000	                          call 0x400010c	       129	channel.c	FUNCTION_1	IF_4	CALL_6
0x400010c	              0xc9	                                   leave	       132	channel.c	FUNCTION_1
0x400010d	              0xc3	                                     ret	       132	channel.c	FUNCTION_1
job_stop_on_exit	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	28
0x400b004	              0x55	                                push rbp	      5459	channel.c	FUNCTION_127
0x400b005	          0x4889e5	                            mov rbp, rsp	      5459	channel.c	FUNCTION_127
0x400b008	        0x4883ec10	                           sub rsp, 0x10	      5459	channel.c	FUNCTION_127
0x400b00c	    0x488b05000000	            mov rax, qword [0x0400b013] 	      5462	channel.c	FUNCTION_127	FOR_1
0x400b013	        0x488945f8	                mov qword [rbp - 8], rax	      5462	channel.c	FUNCTION_127	FOR_1
0x400b017	            0xeb3b	                           jmp 0x400b054	      5462	channel.c	FUNCTION_127	FOR_1
0x400b019	        0x488b45f8	                mov rax, qword [rbp - 8]	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b01d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b020	          0x83f801	                              cmp eax, 1	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b023	            0x7524	                           jne 0x400b049	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b025	        0x488b45f8	                mov rax, qword [rbp - 8]	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b029	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b02d	          0x4885c0	                           test rax, rax	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b030	            0x7417	                            je 0x400b049	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b032	        0x488b45f8	                mov rax, qword [rbp - 8]	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b036	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b03a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b03e	          0x4889d6	                            mov rsi, rdx	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b041	          0x4889c7	                            mov rdi, rax	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b044	      0xe800000000	                          call 0x400b049	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400b049	        0x488b45f8	                mov rax, qword [rbp - 8]	      5462	channel.c	FUNCTION_127	FOR_1
0x400b04d	          0x488b00	                    mov rax, qword [rax]	      5462	channel.c	FUNCTION_127	FOR_1
0x400b050	        0x488945f8	                mov qword [rbp - 8], rax	      5462	channel.c	FUNCTION_127	FOR_1
0x400b054	      0x48837df800	                  cmp qword [rbp - 8], 0	      5462	channel.c	FUNCTION_127	FOR_1
0x400b059	            0x75be	                           jne 0x400b019	      5462	channel.c	FUNCTION_127	FOR_1
0x400b05b	              0x90	                                     nop	      5465	channel.c	FUNCTION_127
0x400b05c	              0xc9	                                   leave	      5465	channel.c	FUNCTION_127
0x400b05d	              0xc3	                                     ret	      5465	channel.c	FUNCTION_127
clear_job_options	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	12
0x4008512	              0x55	                                push rbp	      4443	channel.c	FUNCTION_104
0x4008513	          0x4889e5	                            mov rbp, rsp	      4443	channel.c	FUNCTION_104
0x4008516	        0x4883ec10	                           sub rsp, 0x10	      4443	channel.c	FUNCTION_104
0x400851a	        0x48897df8	                mov qword [rbp - 8], rdi	      4443	channel.c	FUNCTION_104
0x400851e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4444	channel.c	FUNCTION_104	CALL_1
0x4008522	      0xba78030000	                          mov edx, 0x378	      4444	channel.c	FUNCTION_104	CALL_1
0x4008527	      0xbe00000000	                              mov esi, 0	      4444	channel.c	FUNCTION_104	CALL_1
0x400852c	          0x4889c7	                            mov rdi, rax	      4444	channel.c	FUNCTION_104	CALL_1
0x400852f	      0xe800000000	                          call 0x4008534	      4444	channel.c	FUNCTION_104	CALL_1
0x4008534	              0x90	                                     nop	      4445	channel.c	FUNCTION_104
0x4008535	              0xc9	                                   leave	      4445	channel.c	FUNCTION_104
0x4008536	              0xc3	                                     ret	      4445	channel.c	FUNCTION_104
channel_get_mode	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,1:SWITCH,0	19
0x400827b	              0x55	                                push rbp	      4377	channel.c	FUNCTION_100
0x400827c	          0x4889e5	                            mov rbp, rsp	      4377	channel.c	FUNCTION_100
0x400827f	        0x48897df8	                mov qword [rbp - 8], rdi	      4377	channel.c	FUNCTION_100
0x4008283	          0x8975f4	              mov dword [rbp - 0xc], esi	      4377	channel.c	FUNCTION_100
0x4008286	      0x48837df800	                  cmp qword [rbp - 8], 0	      4378	channel.c	FUNCTION_100	IF_1
0x400828b	            0x7507	                           jne 0x4008294	      4378	channel.c	FUNCTION_100	IF_1
0x400828d	      0xb802000000	                              mov eax, 2	      4379	channel.c	FUNCTION_100	IF_1
0x4008292	            0xeb1e	                           jmp 0x40082b2	      4379	channel.c	FUNCTION_100	IF_1
0x4008294	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4380	channel.c	FUNCTION_100
0x4008298	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4380	channel.c	FUNCTION_100
0x400829b	        0x48c1e004	                              shl rax, 4	      4380	channel.c	FUNCTION_100
0x400829f	          0x4889c1	                            mov rcx, rax	      4380	channel.c	FUNCTION_100
0x40082a2	        0x48c1e104	                              shl rcx, 4	      4380	channel.c	FUNCTION_100
0x40082a6	          0x4801c8	                            add rax, rcx	      4380	channel.c	FUNCTION_100
0x40082a9	          0x4801d0	                            add rax, rdx	      4380	channel.c	FUNCTION_100
0x40082ac	        0x4883c020	                           add rax, 0x20	      4380	channel.c	FUNCTION_100
0x40082b0	            0x8b00	                    mov eax, dword [rax]	      4380	channel.c	FUNCTION_100
0x40082b2	              0x5d	                                 pop rbp	      4381	channel.c	FUNCTION_100
0x40082b3	              0xc3	                                     ret	      4381	channel.c	FUNCTION_100
channel_clear_one	ELSE,0:WHILE,4:FOR,0:DO,0:functions,0:CALL,10:IF,0:SWITCH,0	101
0x4005e5d	              0x55	                                push rbp	      2977	channel.c	FUNCTION_71
0x4005e5e	          0x4889e5	                            mov rbp, rsp	      2977	channel.c	FUNCTION_71
0x4005e61	        0x4883ec30	                           sub rsp, 0x30	      2977	channel.c	FUNCTION_71
0x4005e65	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2977	channel.c	FUNCTION_71
0x4005e69	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2977	channel.c	FUNCTION_71
0x4005e6c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2978	channel.c	FUNCTION_71
0x4005e6f	        0x48c1e004	                              shl rax, 4	      2978	channel.c	FUNCTION_71
0x4005e73	          0x4889c2	                            mov rdx, rax	      2978	channel.c	FUNCTION_71
0x4005e76	        0x48c1e204	                              shl rdx, 4	      2978	channel.c	FUNCTION_71
0x4005e7a	          0x4801d0	                            add rax, rdx	      2978	channel.c	FUNCTION_71
0x4005e7d	        0x488d5010	                   lea rdx, [rax + 0x10]	      2978	channel.c	FUNCTION_71
0x4005e81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2978	channel.c	FUNCTION_71
0x4005e85	          0x4801d0	                            add rax, rdx	      2978	channel.c	FUNCTION_71
0x4005e88	        0x4883c008	                              add rax, 8	      2978	channel.c	FUNCTION_71
0x4005e8c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2978	channel.c	FUNCTION_71
0x4005e90	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2979	channel.c	FUNCTION_71
0x4005e94	        0x4883c038	                           add rax, 0x38	      2979	channel.c	FUNCTION_71
0x4005e98	        0x488945e8	             mov qword [rbp - 0x18], rax	      2979	channel.c	FUNCTION_71
0x4005e9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2980	channel.c	FUNCTION_71
0x4005ea0	    0x4805a8000000	                           add rax, 0xa8	      2980	channel.c	FUNCTION_71
0x4005ea6	        0x488945f0	             mov qword [rbp - 0x10], rax	      2980	channel.c	FUNCTION_71
0x4005eaa	            0xeb19	                           jmp 0x4005ec5	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005eac	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2983	channel.c	FUNCTION_71	CALL_3
0x4005eaf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2983	channel.c	FUNCTION_71	CALL_3
0x4005eb3	            0x89d6	                            mov esi, edx	      2983	channel.c	FUNCTION_71	CALL_3
0x4005eb5	          0x4889c7	                            mov rdi, rax	      2983	channel.c	FUNCTION_71	CALL_3
0x4005eb8	      0xe800000000	                          call 0x4005ebd	      2983	channel.c	FUNCTION_71	CALL_3
0x4005ebd	          0x4889c7	                            mov rdi, rax	      2983	channel.c	FUNCTION_71	CALL_3
0x4005ec0	      0xe800000000	                          call 0x4005ec5	      2983	channel.c	FUNCTION_71	CALL_3
0x4005ec5	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005ec8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005ecc	            0x89d6	                            mov esi, edx	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005ece	          0x4889c7	                            mov rdi, rax	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005ed1	      0xe800000000	                          call 0x4005ed6	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005ed6	          0x4885c0	                           test rax, rax	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005ed9	            0x75d1	                           jne 0x4005eac	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4005edb	            0xeb45	                           jmp 0x4005f22	      2985	channel.c	FUNCTION_71	WHILE_2
0x4005edd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2987	channel.c	FUNCTION_71	WHILE_2
0x4005ee1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2987	channel.c	FUNCTION_71	WHILE_2
0x4005ee5	        0x488945f8	                mov qword [rbp - 8], rax	      2987	channel.c	FUNCTION_71	WHILE_2
0x4005ee9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2989	channel.c	FUNCTION_71	WHILE_2	CALL_4
0x4005eed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2989	channel.c	FUNCTION_71	WHILE_2	CALL_4
0x4005ef1	          0x4889d6	                            mov rsi, rdx	      2989	channel.c	FUNCTION_71	WHILE_2	CALL_4
0x4005ef4	          0x4889c7	                            mov rdi, rax	      2989	channel.c	FUNCTION_71	WHILE_2	CALL_4
0x4005ef7	      0xe8a1ddffff	                 call sym.remove_cb_node	      2989	channel.c	FUNCTION_71	WHILE_2	CALL_4
0x4005efc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4005f00	        0x488b5008	                mov rdx, qword [rax + 8]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4005f04	        0x488b45f8	                mov rax, qword [rbp - 8]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4005f08	          0x488b00	                    mov rax, qword [rax]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4005f0b	          0x4889d6	                            mov rsi, rdx	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4005f0e	          0x4889c7	                            mov rdi, rax	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4005f11	      0xe800000000	                          call 0x4005f16	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4005f16	        0x488b45f8	                mov rax, qword [rbp - 8]	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x4005f1a	          0x4889c7	                            mov rdi, rax	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x4005f1d	      0xe800000000	                          call 0x4005f22	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x4005f22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2985	channel.c	FUNCTION_71	WHILE_2
0x4005f26	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x4005f2a	          0x4885c0	                           test rax, rax	      2985	channel.c	FUNCTION_71	WHILE_2
0x4005f2d	            0x75ae	                           jne 0x4005edd	      2985	channel.c	FUNCTION_71	WHILE_2
0x4005f2f	            0xeb2a	                           jmp 0x4005f5b	      2994	channel.c	FUNCTION_71	WHILE_3
0x4005f31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4005f35	        0x488b4008	                mov rax, qword [rax + 8]	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4005f39	          0x488b00	                    mov rax, qword [rax]	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4005f3c	          0x4889c7	                            mov rdi, rax	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4005f3f	      0xe800000000	                          call 0x4005f44	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4005f44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4005f48	        0x488b5008	                mov rdx, qword [rax + 8]	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4005f4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4005f50	          0x4889d6	                            mov rsi, rdx	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4005f53	          0x4889c7	                            mov rdi, rax	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4005f56	      0xe8b7ddffff	               call sym.remove_json_node	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4005f5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2994	channel.c	FUNCTION_71	WHILE_3
0x4005f5f	        0x488b4008	                mov rax, qword [rax + 8]	      2994	channel.c	FUNCTION_71	WHILE_3
0x4005f63	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4005f66	            0x75c9	                           jne 0x4005f31	      2994	channel.c	FUNCTION_71	WHILE_3
0x4005f68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3000	channel.c	FUNCTION_71	CALL_9
0x4005f6c	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	      3000	channel.c	FUNCTION_71	CALL_9
0x4005f73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3000	channel.c	FUNCTION_71	CALL_9
0x4005f77	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3000	channel.c	FUNCTION_71	CALL_9
0x4005f7e	          0x4889d6	                            mov rsi, rdx	      3000	channel.c	FUNCTION_71	CALL_9
0x4005f81	          0x4889c7	                            mov rdi, rax	      3000	channel.c	FUNCTION_71	CALL_9
0x4005f84	      0xe800000000	                          call 0x4005f89	      3000	channel.c	FUNCTION_71	CALL_9
0x4005f89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3001	channel.c	FUNCTION_71
0x4005f8d	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      3001	channel.c	FUNCTION_71
0x4005f98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3002	channel.c	FUNCTION_71
0x4005f9c	    0x48c780d80000	               mov qword [rax + 0xd8], 0	      3002	channel.c	FUNCTION_71
0x4005fa7	            0xeb1e	                           jmp 0x4005fc7	      3004	channel.c	FUNCTION_71	WHILE_4
0x4005fa9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3005	channel.c	FUNCTION_71	WHILE_4	CALL_10
0x4005fad	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3005	channel.c	FUNCTION_71	WHILE_4	CALL_10
0x4005fb4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3005	channel.c	FUNCTION_71	WHILE_4	CALL_10
0x4005fb8	        0x4883ea80	             sub rdx, 0xffffffffffffff80	      3005	channel.c	FUNCTION_71	WHILE_4	CALL_10
0x4005fbc	          0x4889c6	                            mov rsi, rax	      3005	channel.c	FUNCTION_71	WHILE_4	CALL_10
0x4005fbf	          0x4889d7	                            mov rdi, rdx	      3005	channel.c	FUNCTION_71	WHILE_4	CALL_10
0x4005fc2	      0xe830feffff	           call sym.remove_from_writeque	      3005	channel.c	FUNCTION_71	WHILE_4	CALL_10
0x4005fc7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3004	channel.c	FUNCTION_71	WHILE_4
0x4005fcb	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3004	channel.c	FUNCTION_71	WHILE_4
0x4005fd2	          0x4885c0	                           test rax, rax	      3004	channel.c	FUNCTION_71	WHILE_4
0x4005fd5	            0x75d2	                           jne 0x4005fa9	      3004	channel.c	FUNCTION_71	WHILE_4
0x4005fd7	              0x90	                                     nop	      3007	channel.c	FUNCTION_71
0x4005fd8	              0xc9	                                   leave	      3007	channel.c	FUNCTION_71
0x4005fd9	              0xc3	                                     ret	      3007	channel.c	FUNCTION_71
free_job_options	ELSE,5:WHILE,0:FOR,0:DO,0:functions,0:CALL,11:IF,11:SWITCH,0	100
0x4008537	              0x55	                                push rbp	      4452	channel.c	FUNCTION_105
0x4008538	          0x4889e5	                            mov rbp, rsp	      4452	channel.c	FUNCTION_105
0x400853b	        0x4883ec10	                           sub rsp, 0x10	      4452	channel.c	FUNCTION_105
0x400853f	        0x48897df8	                mov qword [rbp - 8], rdi	      4452	channel.c	FUNCTION_105
0x4008543	        0x488b45f8	                mov rax, qword [rbp - 8]	      4453	channel.c	FUNCTION_105	IF_1
0x4008547	    0x488b80a80100	           mov rax, qword [rax + 0x1a8] 	      4453	channel.c	FUNCTION_105	IF_1
0x400854e	          0x4885c0	                           test rax, rax	      4453	channel.c	FUNCTION_105	IF_1
0x4008551	            0x7415	                            je 0x4008568	      4453	channel.c	FUNCTION_105	IF_1
0x4008553	        0x488b45f8	                mov rax, qword [rbp - 8]	      4454	channel.c	FUNCTION_105	CALL_1
0x4008557	    0x488b80a80100	           mov rax, qword [rax + 0x1a8] 	      4454	channel.c	FUNCTION_105	CALL_1
0x400855e	          0x4889c7	                            mov rdi, rax	      4454	channel.c	FUNCTION_105	CALL_1
0x4008561	      0xe800000000	                          call 0x4008566	      4454	channel.c	FUNCTION_105	CALL_1
0x4008566	            0xeb23	                           jmp 0x400858b	      4454	channel.c	FUNCTION_105	CALL_1
0x4008568	        0x488b45f8	                mov rax, qword [rbp - 8]	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400856c	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4008573	          0x4885c0	                           test rax, rax	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4008576	            0x7413	                            je 0x400858b	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4008578	        0x488b45f8	                mov rax, qword [rbp - 8]	      4456	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400857c	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      4456	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4008583	          0x4889c7	                            mov rdi, rax	      4456	channel.c	FUNCTION_105	ELSE_1	IF_2
0x4008586	      0xe800000000	                          call 0x400858b	      4456	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400858b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4457	channel.c	FUNCTION_105	IF_3
0x400858f	    0x488b80b80100	           mov rax, qword [rax + 0x1b8] 	      4457	channel.c	FUNCTION_105	IF_3
0x4008596	          0x4885c0	                           test rax, rax	      4457	channel.c	FUNCTION_105	IF_3
0x4008599	            0x7415	                            je 0x40085b0	      4457	channel.c	FUNCTION_105	IF_3
0x400859b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4458	channel.c	FUNCTION_105	CALL_3
0x400859f	    0x488b80b80100	           mov rax, qword [rax + 0x1b8] 	      4458	channel.c	FUNCTION_105	CALL_3
0x40085a6	          0x4889c7	                            mov rdi, rax	      4458	channel.c	FUNCTION_105	CALL_3
0x40085a9	      0xe800000000	                          call 0x40085ae	      4458	channel.c	FUNCTION_105	CALL_3
0x40085ae	            0xeb23	                           jmp 0x40085d3	      4458	channel.c	FUNCTION_105	CALL_3
0x40085b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085b4	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085bb	          0x4885c0	                           test rax, rax	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085be	            0x7413	                            je 0x40085d3	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4460	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085c4	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      4460	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085cb	          0x4889c7	                            mov rdi, rax	      4460	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085ce	      0xe800000000	                          call 0x40085d3	      4460	channel.c	FUNCTION_105	ELSE_2	IF_4
0x40085d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4461	channel.c	FUNCTION_105	IF_5
0x40085d7	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      4461	channel.c	FUNCTION_105	IF_5
0x40085de	          0x4885c0	                           test rax, rax	      4461	channel.c	FUNCTION_105	IF_5
0x40085e1	            0x7415	                            je 0x40085f8	      4461	channel.c	FUNCTION_105	IF_5
0x40085e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4462	channel.c	FUNCTION_105	CALL_5
0x40085e7	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      4462	channel.c	FUNCTION_105	CALL_5
0x40085ee	          0x4889c7	                            mov rdi, rax	      4462	channel.c	FUNCTION_105	CALL_5
0x40085f1	      0xe800000000	                          call 0x40085f6	      4462	channel.c	FUNCTION_105	CALL_5
0x40085f6	            0xeb23	                           jmp 0x400861b	      4462	channel.c	FUNCTION_105	CALL_5
0x40085f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x40085fc	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4008603	          0x4885c0	                           test rax, rax	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4008606	            0x7413	                            je 0x400861b	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4008608	        0x488b45f8	                mov rax, qword [rbp - 8]	      4464	channel.c	FUNCTION_105	ELSE_3	IF_6
0x400860c	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      4464	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4008613	          0x4889c7	                            mov rdi, rax	      4464	channel.c	FUNCTION_105	ELSE_3	IF_6
0x4008616	      0xe800000000	                          call 0x400861b	      4464	channel.c	FUNCTION_105	ELSE_3	IF_6
0x400861b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4465	channel.c	FUNCTION_105	IF_7
0x400861f	    0x488b80d80100	           mov rax, qword [rax + 0x1d8] 	      4465	channel.c	FUNCTION_105	IF_7
0x4008626	          0x4885c0	                           test rax, rax	      4465	channel.c	FUNCTION_105	IF_7
0x4008629	            0x7415	                            je 0x4008640	      4465	channel.c	FUNCTION_105	IF_7
0x400862b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4466	channel.c	FUNCTION_105	CALL_7
0x400862f	    0x488b80d80100	           mov rax, qword [rax + 0x1d8] 	      4466	channel.c	FUNCTION_105	CALL_7
0x4008636	          0x4889c7	                            mov rdi, rax	      4466	channel.c	FUNCTION_105	CALL_7
0x4008639	      0xe800000000	                          call 0x400863e	      4466	channel.c	FUNCTION_105	CALL_7
0x400863e	            0xeb23	                           jmp 0x4008663	      4466	channel.c	FUNCTION_105	CALL_7
0x4008640	        0x488b45f8	                mov rax, qword [rbp - 8]	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x4008644	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400864b	          0x4885c0	                           test rax, rax	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400864e	            0x7413	                            je 0x4008663	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x4008650	        0x488b45f8	                mov rax, qword [rbp - 8]	      4468	channel.c	FUNCTION_105	ELSE_4	IF_8
0x4008654	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      4468	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400865b	          0x4889c7	                            mov rdi, rax	      4468	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400865e	      0xe800000000	                          call 0x4008663	      4468	channel.c	FUNCTION_105	ELSE_4	IF_8
0x4008663	        0x488b45f8	                mov rax, qword [rbp - 8]	      4469	channel.c	FUNCTION_105	IF_9
0x4008667	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4469	channel.c	FUNCTION_105	IF_9
0x400866e	          0x4885c0	                           test rax, rax	      4469	channel.c	FUNCTION_105	IF_9
0x4008671	            0x7415	                            je 0x4008688	      4469	channel.c	FUNCTION_105	IF_9
0x4008673	        0x488b45f8	                mov rax, qword [rbp - 8]	      4470	channel.c	FUNCTION_105	CALL_9
0x4008677	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4470	channel.c	FUNCTION_105	CALL_9
0x400867e	          0x4889c7	                            mov rdi, rax	      4470	channel.c	FUNCTION_105	CALL_9
0x4008681	      0xe800000000	                          call 0x4008686	      4470	channel.c	FUNCTION_105	CALL_9
0x4008686	            0xeb23	                           jmp 0x40086ab	      4470	channel.c	FUNCTION_105	CALL_9
0x4008688	        0x488b45f8	                mov rax, qword [rbp - 8]	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400868c	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x4008693	          0x4885c0	                           test rax, rax	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x4008696	            0x7413	                            je 0x40086ab	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x4008698	        0x488b45f8	                mov rax, qword [rbp - 8]	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400869c	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40086a3	          0x4889c7	                            mov rdi, rax	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40086a6	      0xe800000000	                          call 0x40086ab	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x40086ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      4473	channel.c	FUNCTION_105	IF_11
0x40086af	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4473	channel.c	FUNCTION_105	IF_11
0x40086b6	          0x4885c0	                           test rax, rax	      4473	channel.c	FUNCTION_105	IF_11
0x40086b9	            0x7413	                            je 0x40086ce	      4473	channel.c	FUNCTION_105	IF_11
0x40086bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4474	channel.c	FUNCTION_105	CALL_11
0x40086bf	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4474	channel.c	FUNCTION_105	CALL_11
0x40086c6	          0x4889c7	                            mov rdi, rax	      4474	channel.c	FUNCTION_105	CALL_11
0x40086c9	      0xe800000000	                          call 0x40086ce	      4474	channel.c	FUNCTION_105	CALL_11
0x40086ce	              0x90	                                     nop	      4475	channel.c	FUNCTION_105
0x40086cf	              0xc9	                                   leave	      4475	channel.c	FUNCTION_105
0x40086d0	              0xc3	                                     ret	      4475	channel.c	FUNCTION_105
channel_may_free	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	17
0x400080d	              0x55	                                push rbp	       402	channel.c	FUNCTION_14
0x400080e	          0x4889e5	                            mov rbp, rsp	       402	channel.c	FUNCTION_14
0x4000811	        0x4883ec10	                           sub rsp, 0x10	       402	channel.c	FUNCTION_14
0x4000815	        0x48897df8	                mov qword [rbp - 8], rdi	       402	channel.c	FUNCTION_14
0x4000819	        0x488b45f8	                mov rax, qword [rbp - 8]	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400081d	          0x4889c7	                            mov rdi, rax	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4000820	      0xe844fdffff	           call sym.channel_still_useful	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4000825	            0x85c0	                           test eax, eax	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4000827	            0x7513	                           jne 0x400083c	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4000829	        0x488b45f8	                mov rax, qword [rbp - 8]	       405	channel.c	FUNCTION_14	IF_1	CALL_2
0x400082d	          0x4889c7	                            mov rdi, rax	       405	channel.c	FUNCTION_14	IF_1	CALL_2
0x4000830	      0xe88dffffff	                   call sym.channel_free	       405	channel.c	FUNCTION_14	IF_1	CALL_2
0x4000835	      0xb801000000	                              mov eax, 1	       406	channel.c	FUNCTION_14	IF_1
0x400083a	            0xeb05	                           jmp 0x4000841	       406	channel.c	FUNCTION_14	IF_1
0x400083c	      0xb800000000	                              mov eax, 0	       408	channel.c	FUNCTION_14
0x4000841	              0xc9	                                   leave	       409	channel.c	FUNCTION_14
0x4000842	              0xc3	                                     ret	       409	channel.c	FUNCTION_14
set_callback	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,4:IF,3:SWITCH,0	55
0x4001e31	              0x55	                                push rbp	      1141	channel.c	FUNCTION_33
0x4001e32	          0x4889e5	                            mov rbp, rsp	      1141	channel.c	FUNCTION_33
0x4001e35	        0x4883ec20	                           sub rsp, 0x20	      1141	channel.c	FUNCTION_33
0x4001e39	        0x48897df8	                mov qword [rbp - 8], rdi	      1141	channel.c	FUNCTION_33
0x4001e3d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1141	channel.c	FUNCTION_33
0x4001e41	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1141	channel.c	FUNCTION_33
0x4001e45	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1141	channel.c	FUNCTION_33
0x4001e49	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1142	channel.c	FUNCTION_33	CALL_1
0x4001e4d	          0x488b10	                    mov rdx, qword [rax]	      1142	channel.c	FUNCTION_33	CALL_1
0x4001e50	        0x488b45f8	                mov rax, qword [rbp - 8]	      1142	channel.c	FUNCTION_33	CALL_1
0x4001e54	          0x488b00	                    mov rax, qword [rax]	      1142	channel.c	FUNCTION_33	CALL_1
0x4001e57	          0x4889d6	                            mov rsi, rdx	      1142	channel.c	FUNCTION_33	CALL_1
0x4001e5a	          0x4889c7	                            mov rdi, rax	      1142	channel.c	FUNCTION_33	CALL_1
0x4001e5d	      0xe800000000	                          call 0x4001e62	      1142	channel.c	FUNCTION_33	CALL_1
0x4001e62	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1143	channel.c	FUNCTION_33	IF_1
0x4001e67	            0x7451	                            je 0x4001eba	      1143	channel.c	FUNCTION_33	IF_1
0x4001e69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1143	channel.c	FUNCTION_33	IF_1
0x4001e6d	           0xfb600	                   movzx eax, byte [rax]	      1143	channel.c	FUNCTION_33	IF_1
0x4001e70	            0x84c0	                             test al, al	      1143	channel.c	FUNCTION_33	IF_1
0x4001e72	            0x7446	                            je 0x4001eba	      1143	channel.c	FUNCTION_33	IF_1
0x4001e74	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x4001e79	            0x7418	                            je 0x4001e93	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x4001e7b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4001e7f	          0x4889c7	                            mov rdi, rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4001e82	      0xe800000000	                          call 0x4001e87	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4001e87	          0x4889c2	                            mov rdx, rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4001e8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4001e8e	          0x488910	                    mov qword [rax], rdx	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4001e91	            0xeb32	                           jmp 0x4001ec5	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x4001e93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4001e97	          0x4889c7	                            mov rdi, rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4001e9a	      0xe800000000	                          call 0x4001e9f	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4001e9f	          0x4889c2	                            mov rdx, rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4001ea2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4001ea6	          0x488910	                    mov qword [rax], rdx	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4001ea9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4001ead	          0x488b00	                    mov rax, qword [rax]	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4001eb0	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4001eb3	      0xe800000000	                          call 0x4001eb8	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4001eb8	            0xeb0b	                           jmp 0x4001ec5	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x4001eba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	channel.c	FUNCTION_33	ELSE_2
0x4001ebe	    0x48c700000000	                      mov qword [rax], 0	      1154	channel.c	FUNCTION_33	ELSE_2
0x4001ec5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1155	channel.c	FUNCTION_33
0x4001ec9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1155	channel.c	FUNCTION_33
0x4001ecd	          0x488910	                    mov qword [rax], rdx	      1155	channel.c	FUNCTION_33
0x4001ed0	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1156	channel.c	FUNCTION_33	IF_3
0x4001ed5	            0x740f	                            je 0x4001ee6	      1156	channel.c	FUNCTION_33	IF_3
0x4001ed7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1157	channel.c	FUNCTION_33	IF_3
0x4001edb	            0x8b00	                    mov eax, dword [rax]	      1157	channel.c	FUNCTION_33	IF_3
0x4001edd	          0x8d5001	                      lea edx, [rax + 1]	      1157	channel.c	FUNCTION_33	IF_3
0x4001ee0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1157	channel.c	FUNCTION_33	IF_3
0x4001ee4	            0x8910	                    mov dword [rax], edx	      1157	channel.c	FUNCTION_33	IF_3
0x4001ee6	              0x90	                                     nop	      1158	channel.c	FUNCTION_33
0x4001ee7	              0xc9	                                   leave	      1158	channel.c	FUNCTION_33
0x4001ee8	              0xc3	                                     ret	      1158	channel.c	FUNCTION_33
job_alloc	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,2:SWITCH,0	29
0x400ae31	              0x55	                                push rbp	      5399	channel.c	FUNCTION_125
0x400ae32	          0x4889e5	                            mov rbp, rsp	      5399	channel.c	FUNCTION_125
0x400ae35	        0x4883ec10	                           sub rsp, 0x10	      5399	channel.c	FUNCTION_125
0x400ae39	      0xbf70000000	                           mov edi, 0x70	      5402	channel.c	FUNCTION_125	CALL_1
0x400ae3e	      0xe800000000	                          call 0x400ae43	      5402	channel.c	FUNCTION_125	CALL_1
0x400ae43	        0x488945f8	                mov qword [rbp - 8], rax	      5402	channel.c	FUNCTION_125	CALL_1
0x400ae47	      0x48837df800	                  cmp qword [rbp - 8], 0	      5403	channel.c	FUNCTION_125	IF_1
0x400ae4c	            0x7454	                            je 0x400aea2	      5403	channel.c	FUNCTION_125	IF_1
0x400ae4e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5405	channel.c	FUNCTION_125	IF_1
0x400ae52	    0xc74058010000	               mov dword [rax + 0x58], 1	      5405	channel.c	FUNCTION_125	IF_1
0x400ae59	      0xbf00000000	                              mov edi, 0	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400ae5e	      0xe800000000	                          call 0x400ae63	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400ae63	          0x4889c2	                            mov rdx, rax	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400ae66	        0x488b45f8	                mov rax, qword [rbp - 8]	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400ae6a	        0x48895030	             mov qword [rax + 0x30], rdx	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400ae6e	    0x488b05000000	            mov rax, qword [0x0400ae75] 	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae75	          0x4885c0	                           test rax, rax	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae78	            0x741d	                            je 0x400ae97	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae7a	    0x488b05000000	            mov rax, qword [0x0400ae81] 	      5410	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae81	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5410	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae85	        0x48895008	                mov qword [rax + 8], rdx	      5410	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae89	    0x488b15000000	            mov rdx, qword [0x0400ae90] 	      5411	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae90	        0x488b45f8	                mov rax, qword [rbp - 8]	      5411	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae94	          0x488910	                    mov qword [rax], rdx	      5411	channel.c	FUNCTION_125	IF_1	IF_2
0x400ae97	        0x488b45f8	                mov rax, qword [rbp - 8]	      5413	channel.c	FUNCTION_125	IF_1
0x400ae9b	    0x488905000000	            mov qword [0x0400aea2], rax 	      5413	channel.c	FUNCTION_125	IF_1
0x400aea2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5415	channel.c	FUNCTION_125
0x400aea6	              0xc9	                                   leave	      5416	channel.c	FUNCTION_125
0x400aea7	              0xc3	                                     ret	      5416	channel.c	FUNCTION_125
can_write_buf_line	ELSE,2:WHILE,0:FOR,1:DO,0:functions,0:CALL,8:IF,8:SWITCH,0	112
0x4002705	              0x55	                                push rbp	      1364	channel.c	FUNCTION_37
0x4002706	          0x4889e5	                            mov rbp, rsp	      1364	channel.c	FUNCTION_37
0x4002709	    0x4881ecd00000	                           sub rsp, 0xd0	      1364	channel.c	FUNCTION_37
0x4002710	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1364	channel.c	FUNCTION_37
0x4002717	    0x64488b042528	                mov rax, qword fs:[0x28]	      1364	channel.c	FUNCTION_37
0x4002720	        0x488945f8	                mov qword [rbp - 8], rax	      1364	channel.c	FUNCTION_37
0x4002724	            0x31c0	                            xor eax, eax	      1364	channel.c	FUNCTION_37
0x4002726	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1365	channel.c	FUNCTION_37
0x400272d	    0x480548030000	                          add rax, 0x348	      1365	channel.c	FUNCTION_37
0x4002733	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1365	channel.c	FUNCTION_37
0x400273a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1367	channel.c	FUNCTION_37	IF_1
0x4002741	            0x8b00	                    mov eax, dword [rax]	      1367	channel.c	FUNCTION_37	IF_1
0x4002743	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1367	channel.c	FUNCTION_37	IF_1
0x4002746	            0x750a	                           jne 0x4002752	      1367	channel.c	FUNCTION_37	IF_1
0x4002748	      0xb800000000	                              mov eax, 0	      1368	channel.c	FUNCTION_37	IF_1
0x400274d	      0xe97b010000	                           jmp 0x40028cd	      1368	channel.c	FUNCTION_37	IF_1
0x4002752	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1371	channel.c	FUNCTION_37	IF_2
0x4002759	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1371	channel.c	FUNCTION_37	IF_2
0x400275c	          0x83f801	                              cmp eax, 1	      1371	channel.c	FUNCTION_37	IF_2
0x400275f	            0x7510	                           jne 0x4002771	      1371	channel.c	FUNCTION_37	IF_2
0x4002761	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1372	channel.c	FUNCTION_37	IF_2
0x4002768	    0xc74078ffffff	     mov dword [rax + 0x78], 0xffffffff 	      1372	channel.c	FUNCTION_37	IF_2
0x400276f	            0xeb1d	                           jmp 0x400278e	      1372	channel.c	FUNCTION_37	IF_2
0x4002771	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4002778	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x400277b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x400277e	            0x750e	                           jne 0x400278e	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4002780	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4002787	    0xc74078010000	               mov dword [rax + 0x78], 1	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x400278e	      0xb800000000	                              mov eax, 0	      1384	channel.c	FUNCTION_37	CALL_1
0x4002793	      0xb910000000	                           mov ecx, 0x10	      1384	channel.c	FUNCTION_37	CALL_1
0x4002798	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1384	channel.c	FUNCTION_37	CALL_1
0x400279f	          0x4889d7	                            mov rdi, rdx	      1384	channel.c	FUNCTION_37	CALL_1
0x40027a2	              0xfc	                                     cld	      1384	channel.c	FUNCTION_37	CALL_1
0x40027a3	          0xf348ab	              rep stosq qword [rdi], rax	      1384	channel.c	FUNCTION_37	CALL_1
0x40027a6	            0x89f8	                            mov eax, edi	      1384	channel.c	FUNCTION_37	CALL_1
0x40027a8	            0x89ca	                            mov edx, ecx	      1384	channel.c	FUNCTION_37	CALL_1
0x40027aa	    0x89954cffffff	             mov dword [rbp - 0xb4], edx	      1384	channel.c	FUNCTION_37	CALL_1
0x40027b0	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      1384	channel.c	FUNCTION_37	CALL_1
0x40027b6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1385	channel.c	FUNCTION_37	CALL_2
0x40027bd	            0x8b00	                    mov eax, dword [rax]	      1385	channel.c	FUNCTION_37	CALL_2
0x40027bf	          0x8d503f	                   lea edx, [rax + 0x3f]	      1385	channel.c	FUNCTION_37	CALL_2
0x40027c2	            0x85c0	                           test eax, eax	      1385	channel.c	FUNCTION_37	CALL_2
0x40027c4	           0xf48c2	                          cmovs eax, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x40027c7	          0xc1f806	                              sar eax, 6	      1385	channel.c	FUNCTION_37	CALL_2
0x40027ca	            0x89c6	                            mov esi, eax	      1385	channel.c	FUNCTION_37	CALL_2
0x40027cc	          0x4863c6	                         movsxd rax, esi	      1385	channel.c	FUNCTION_37	CALL_2
0x40027cf	    0x488bbcc570ff	     mov rdi, qword [rbp + rax*8 - 0x90]	      1385	channel.c	FUNCTION_37	CALL_2
0x40027d7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1385	channel.c	FUNCTION_37	CALL_2
0x40027de	            0x8b00	                    mov eax, dword [rax]	      1385	channel.c	FUNCTION_37	CALL_2
0x40027e0	              0x99	                                     cdq	      1385	channel.c	FUNCTION_37	CALL_2
0x40027e1	          0xc1ea1a	                           shr edx, 0x1a	      1385	channel.c	FUNCTION_37	CALL_2
0x40027e4	             0x1d0	                            add eax, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x40027e6	          0x83e03f	                           and eax, 0x3f	      1385	channel.c	FUNCTION_37	CALL_2
0x40027e9	            0x29d0	                            sub eax, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x40027eb	      0xba01000000	                              mov edx, 1	      1385	channel.c	FUNCTION_37	CALL_2
0x40027f0	            0x89c1	                            mov ecx, eax	      1385	channel.c	FUNCTION_37	CALL_2
0x40027f2	          0x48d3e2	                             shl rdx, cl	      1385	channel.c	FUNCTION_37	CALL_2
0x40027f5	          0x4889d0	                            mov rax, rdx	      1385	channel.c	FUNCTION_37	CALL_2
0x40027f8	          0x4809c7	                             or rdi, rax	      1385	channel.c	FUNCTION_37	CALL_2
0x40027fb	          0x4889fa	                            mov rdx, rdi	      1385	channel.c	FUNCTION_37	CALL_2
0x40027fe	          0x4863c6	                         movsxd rax, esi	      1385	channel.c	FUNCTION_37	CALL_2
0x4002801	    0x488994c570ff	     mov qword [rbp + rax*8 - 0x90], rdx	      1385	channel.c	FUNCTION_37	CALL_2
0x4002809	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      1386	channel.c	FUNCTION_37
0x4002814	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      1387	channel.c	FUNCTION_37
0x400281f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002826	            0x8b00	                    mov eax, dword [rax]	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002828	          0x8d7801	                      lea edi, [rax + 1]	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x400282b	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002832	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002839	          0x4989d0	                             mov r8, rdx	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x400283c	      0xb900000000	                              mov ecx, 0	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002841	          0x4889c2	                            mov rdx, rax	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002844	      0xbe00000000	                              mov esi, 0	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002849	      0xe800000000	                          call 0x400284e	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x400284e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4002854	    0x83bd54ffffff	cmp dword [rbp - 0xac], 0xffffffffffffffff	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x400285b	            0x750e	                           jne 0x400286b	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x400285d	      0xe800000000	                          call 0x4002862	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4002862	            0x8b00	                    mov eax, dword [rax]	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4002864	          0x83f804	                              cmp eax, 4	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4002867	            0x7502	                           jne 0x400286b	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4002869	            0xebb4	                           jmp 0x400281f	      1405	channel.c	FUNCTION_37	FOR_1
0x400286b	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4002872	            0x7e0f	                           jle 0x4002883	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4002874	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x400287b	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x400287e	          0x83f801	                              cmp eax, 1	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4002881	            0x7544	                           jne 0x40028c7	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4002883	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      1398	channel.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x400288a	            0x7e1b	                           jle 0x40028a7	      1398	channel.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x400288c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4002893	      0xbe00000000	                              mov esi, 0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4002898	          0x4889c7	                            mov rdi, rax	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x400289b	      0xb800000000	                              mov eax, 0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x40028a0	      0xe800000000	                          call 0x40028a5	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x40028a5	            0xeb19	                           jmp 0x40028c0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x40028a7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x40028ae	      0xbe00000000	                              mov esi, 0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x40028b3	          0x4889c7	                            mov rdi, rax	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x40028b6	      0xb800000000	                              mov eax, 0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x40028bb	      0xe800000000	                          call 0x40028c0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x40028c0	      0xb800000000	                              mov eax, 0	      1402	channel.c	FUNCTION_37	FOR_1	IF_5
0x40028c5	            0xeb06	                           jmp 0x40028cd	      1402	channel.c	FUNCTION_37	FOR_1	IF_5
0x40028c7	              0x90	                                     nop	      1404	channel.c	FUNCTION_37	FOR_1
0x40028c8	      0xb801000000	                              mov eax, 1	      1424	channel.c	FUNCTION_37
0x40028cd	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1425	channel.c	FUNCTION_37
0x40028d1	    0x644833342528	                xor rsi, qword fs:[0x28]	      1425	channel.c	FUNCTION_37
0x40028da	            0x7405	                            je 0x40028e1	      1425	channel.c	FUNCTION_37
0x40028dc	      0xe800000000	                          call 0x40028e1	      1425	channel.c	FUNCTION_37
0x40028e1	              0xc9	                                   leave	      1425	channel.c	FUNCTION_37
0x40028e2	              0xc3	                                     ret	      1425	channel.c	FUNCTION_37
channel_parse_json	ELSE,10:WHILE,0:FOR,0:DO,0:functions,0:CALL,22:IF,14:SWITCH,0	285
0x40037db	              0x55	                                push rbp	      1906	channel.c	FUNCTION_52
0x40037dc	          0x4889e5	                            mov rbp, rsp	      1906	channel.c	FUNCTION_52
0x40037df	    0x4881eca00000	                           sub rsp, 0xa0	      1906	channel.c	FUNCTION_52
0x40037e6	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1906	channel.c	FUNCTION_52
0x40037ed	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      1906	channel.c	FUNCTION_52
0x40037f3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	channel.c	FUNCTION_52
0x40037fc	        0x488945f8	                mov qword [rbp - 8], rax	      1906	channel.c	FUNCTION_52
0x4003800	            0x31c0	                            xor eax, eax	      1906	channel.c	FUNCTION_52
0x4003802	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1910	channel.c	FUNCTION_52
0x4003808	        0x48c1e004	                              shl rax, 4	      1910	channel.c	FUNCTION_52
0x400380c	          0x4889c2	                            mov rdx, rax	      1910	channel.c	FUNCTION_52
0x400380f	        0x48c1e204	                              shl rdx, 4	      1910	channel.c	FUNCTION_52
0x4003813	          0x4801d0	                            add rax, rdx	      1910	channel.c	FUNCTION_52
0x4003816	        0x488d5010	                   lea rdx, [rax + 0x10]	      1910	channel.c	FUNCTION_52
0x400381a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1910	channel.c	FUNCTION_52
0x4003821	          0x4801d0	                            add rax, rdx	      1910	channel.c	FUNCTION_52
0x4003824	        0x4883c008	                              add rax, 8	      1910	channel.c	FUNCTION_52
0x4003828	        0x48894580	             mov qword [rbp - 0x80], rax	      1910	channel.c	FUNCTION_52
0x400382c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1911	channel.c	FUNCTION_52
0x4003830	        0x4883c038	                           add rax, 0x38	      1911	channel.c	FUNCTION_52
0x4003834	        0x48894588	             mov qword [rbp - 0x78], rax	      1911	channel.c	FUNCTION_52
0x4003838	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x400383e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4003845	            0x89d6	                            mov esi, edx	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4003847	          0x4889c7	                            mov rdi, rax	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x400384a	      0xe800000000	                          call 0x400384f	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x400384f	          0x4885c0	                           test rax, rax	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4003852	            0x750a	                           jne 0x400385e	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4003854	      0xb800000000	                              mov eax, 0	      1916	channel.c	FUNCTION_52	IF_1
0x4003859	      0xe929040000	                           jmp 0x4003c87	      1916	channel.c	FUNCTION_52	IF_1
0x400385e	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1918	channel.c	FUNCTION_52	CALL_2
0x4003864	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1918	channel.c	FUNCTION_52	CALL_2
0x400386b	            0x89d6	                            mov esi, edx	      1918	channel.c	FUNCTION_52	CALL_2
0x400386d	          0x4889c7	                            mov rdi, rax	      1918	channel.c	FUNCTION_52	CALL_2
0x4003870	      0xe800000000	                          call 0x4003875	      1918	channel.c	FUNCTION_52	CALL_2
0x4003875	        0x488945c0	             mov qword [rbp - 0x40], rax	      1918	channel.c	FUNCTION_52	CALL_2
0x4003879	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1919	channel.c	FUNCTION_52
0x4003880	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1920	channel.c	FUNCTION_52
0x4003888	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1921	channel.c	FUNCTION_52
0x400388f	        0x488945e0	             mov qword [rbp - 0x20], rax	      1921	channel.c	FUNCTION_52
0x4003893	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1922	channel.c	FUNCTION_52
0x4003899	          0x8945e8	             mov dword [rbp - 0x18], eax	      1922	channel.c	FUNCTION_52
0x400389c	    0x8b0500000000	            mov eax, dword [0x040038a2] 	      1928	channel.c	FUNCTION_52
0x40038a2	          0x83c001	                              add eax, 1	      1928	channel.c	FUNCTION_52
0x40038a5	    0x890500000000	            mov dword [0x040038ab], eax 	      1928	channel.c	FUNCTION_52
0x40038ab	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1930	channel.c	FUNCTION_52
0x40038af	          0x8b4008	                mov eax, dword [rax + 8]	      1930	channel.c	FUNCTION_52
0x40038b2	          0x83f803	                              cmp eax, 3	      1929	channel.c	FUNCTION_52	CALL_3
0x40038b5	           0xf94c0	                                 sete al	      1929	channel.c	FUNCTION_52	CALL_3
0x40038b8	           0xfb6d0	                           movzx edx, al	      1929	channel.c	FUNCTION_52	CALL_3
0x40038bb	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      1929	channel.c	FUNCTION_52	CALL_3
0x40038bf	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1929	channel.c	FUNCTION_52	CALL_3
0x40038c3	          0x4889ce	                            mov rsi, rcx	      1929	channel.c	FUNCTION_52	CALL_3
0x40038c6	          0x4889c7	                            mov rdi, rax	      1929	channel.c	FUNCTION_52	CALL_3
0x40038c9	      0xe800000000	                          call 0x40038ce	      1929	channel.c	FUNCTION_52	CALL_3
0x40038ce	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1929	channel.c	FUNCTION_52	CALL_3
0x40038d4	    0x8b0500000000	            mov eax, dword [0x040038da] 	      1931	channel.c	FUNCTION_52
0x40038da	          0x83e801	                              sub eax, 1	      1931	channel.c	FUNCTION_52
0x40038dd	    0x890500000000	            mov dword [0x040038e3], eax 	      1931	channel.c	FUNCTION_52
0x40038e3	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 1	      1932	channel.c	FUNCTION_52	IF_2
0x40038ea	     0xf8537010000	                           jne 0x4003a27	      1932	channel.c	FUNCTION_52	IF_2
0x40038f0	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40038f3	          0x83f805	                              cmp eax, 5	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40038f6	            0x750c	                           jne 0x4003904	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40038f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40038fc	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40038ff	          0x83f801	                              cmp eax, 1	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4003902	            0x7f54	                            jg 0x4003958	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4003904	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1938	channel.c	FUNCTION_52	IF_2	IF_3	IF_4
0x4003907	          0x83f805	                              cmp eax, 5	      1938	channel.c	FUNCTION_52	IF_2	IF_3	IF_4
0x400390a	            0x741b	                            je 0x4003927	      1938	channel.c	FUNCTION_52	IF_2	IF_3	IF_4
0x400390c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4003913	      0xbe00000000	                              mov esi, 0	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4003918	          0x4889c7	                            mov rdi, rax	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x400391b	      0xb800000000	                              mov eax, 0	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4003920	      0xe8f7c9ffff	                       call sym.ch_error	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4003925	            0xeb20	                           jmp 0x4003947	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x4003927	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1942	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1
0x400392b	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x400392e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4003935	      0xbe00000000	                              mov esi, 0	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x400393a	          0x4889c7	                            mov rdi, rax	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x400393d	      0xb800000000	                              mov eax, 0	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4003942	      0xe8d5c9ffff	                       call sym.ch_error	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x4003947	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1943	channel.c	FUNCTION_52	IF_2	IF_3	CALL_6
0x400394b	          0x4889c7	                            mov rdi, rax	      1943	channel.c	FUNCTION_52	IF_2	IF_3	CALL_6
0x400394e	      0xe800000000	                          call 0x4003953	      1943	channel.c	FUNCTION_52	IF_2	IF_3	CALL_6
0x4003953	      0xe9cf000000	                           jmp 0x4003a27	      1943	channel.c	FUNCTION_52	IF_2	IF_3	CALL_6
0x4003958	      0xbf20000000	                           mov edi, 0x20	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x400395d	      0xe800000000	                          call 0x4003962	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x4003962	        0x48894590	             mov qword [rbp - 0x70], rax	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x4003966	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x400396b	            0x7511	                           jne 0x400397e	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x400396d	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1949	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_8
0x4003971	          0x4889c7	                            mov rdi, rax	      1949	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_8
0x4003974	      0xe800000000	                          call 0x4003979	      1949	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_8
0x4003979	      0xe9a9000000	                           jmp 0x4003a27	      1949	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_8
0x400397e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1952	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3
0x4003982	    0xc74018000000	               mov dword [rax + 0x18], 0	      1952	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3
0x4003989	      0xe800000000	                          call 0x400398e	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x400398e	          0x4889c2	                            mov rdx, rax	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x4003991	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x4003995	          0x488910	                    mov qword [rax], rdx	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x4003998	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x400399c	          0x488b00	                    mov rax, qword [rax]	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x400399f	          0x4885c0	                           test rax, rax	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x40039a2	            0x751a	                           jne 0x40039be	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x40039a4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40039a8	          0x4889c7	                            mov rdi, rax	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40039ab	      0xe800000000	                          call 0x40039b0	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40039b0	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x40039b4	          0x4889c7	                            mov rdi, rax	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x40039b7	      0xe800000000	                          call 0x40039bc	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x40039bc	            0xeb69	                           jmp 0x4003a27	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x40039be	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039c2	          0x488b08	                    mov rcx, qword [rax]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039c5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039c9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039cd	          0x488901	                    mov qword [rcx], rax	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039d0	        0x48895108	                mov qword [rcx + 8], rdx	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039d4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039d8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039dc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039e0	        0x48895010	             mov qword [rax + 0x10], rdx	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039e4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1963	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039e8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1963	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039ec	        0x48895010	             mov qword [rax + 0x10], rdx	      1963	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039f0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1964	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039f4	    0x48c740080000	                  mov qword [rax + 8], 0	      1964	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40039fc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a00	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a04	          0x4885c0	                           test rax, rax	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a07	            0x750e	                           jne 0x4003a17	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a09	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a0d	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a11	        0x48895008	                mov qword [rax + 8], rdx	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a15	            0xeb10	                           jmp 0x4003a27	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4003a17	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4003a1b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4003a1f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4003a23	        0x48895008	                mov qword [rax + 8], rdx	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4003a27	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 1	      1974	channel.c	FUNCTION_52	IF_8
0x4003a2e	            0x7511	                           jne 0x4003a41	      1974	channel.c	FUNCTION_52	IF_8
0x4003a30	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1975	channel.c	FUNCTION_52	IF_8
0x4003a34	    0x48c740600000	               mov qword [rax + 0x60], 0	      1975	channel.c	FUNCTION_52	IF_8
0x4003a3c	      0xe981010000	                           jmp 0x4003bc2	      1975	channel.c	FUNCTION_52	IF_8
0x4003a41	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 2	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x4003a48	     0xf8574010000	                           jne 0x4003bc2	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x4003a4e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4003a52	          0x4889c7	                            mov rdi, rax	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4003a55	      0xe800000000	                          call 0x4003a5a	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4003a5a	        0x48894598	             mov qword [rbp - 0x68], rax	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x4003a5e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003a62	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003a66	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003a6a	     0xf83a2000000	                           jae 0x4003b12	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003a70	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4003a74	            0x89c2	                            mov edx, eax	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4003a76	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4003a7d	      0xbe00000000	                              mov esi, 0	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4003a82	          0x4889c7	                            mov rdi, rax	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4003a85	      0xb800000000	                              mov eax, 0	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4003a8a	      0xe800000000	                          call 0x4003a8f	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4003a8f	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1987	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003a96	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003a9a	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003a9e	        0x48895060	             mov qword [rax + 0x60], rdx	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003aa2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4003aa6	        0x4883c068	                           add rax, 0x68	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4003aaa	      0xbe00000000	                              mov esi, 0	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4003aaf	          0x4889c7	                            mov rdi, rax	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4003ab2	      0xe800000000	                          call 0x4003ab7	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4003ab7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003abb	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003abf	    0x488d90a08601	                lea rdx, [rax + 0x186a0]	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003ac6	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003aca	        0x48895070	             mov qword [rax + 0x70], rdx	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4003ace	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003ad2	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003ad6	    0x483d40420f00	                        cmp rax, 0xf4240	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003adc	     0xf8ee0000000	                           jle 0x4003bc2	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003ae2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003ae6	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003aea	    0x488d90c0bdf0	                lea rdx, [rax - 0xf4240]	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003af1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003af5	        0x48895070	             mov qword [rax + 0x70], rdx	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003af9	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003afd	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003b01	        0x488d5001	                      lea rdx, [rax + 1]	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003b05	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003b09	        0x48895068	             mov qword [rax + 0x68], rdx	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003b0d	      0xe9b0000000	                           jmp 0x4003bc2	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4003b12	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4003b16	      0xbe00000000	                              mov esi, 0	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4003b1b	          0x4889c7	                            mov rdi, rax	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4003b1e	      0xe800000000	                          call 0x4003b23	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4003b23	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b27	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b2b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b2f	          0x4839c2	                            cmp rdx, rax	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b32	            0x7f22	                            jg 0x4003b56	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b34	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b38	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b3c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b40	          0x4839c2	                            cmp rdx, rax	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b43	            0x7518	                           jne 0x4003b5d	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b45	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b49	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b4d	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b51	          0x4839c2	                            cmp rdx, rax	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b54	            0x7e07	                           jle 0x4003b5d	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b56	      0xb801000000	                              mov eax, 1	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b5b	            0xeb05	                           jmp 0x4003b62	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b5d	      0xb800000000	                              mov eax, 0	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b62	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2011	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4003b68	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      2016	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4003b6f	            0x7431	                            je 0x4003ba2	      2016	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4003b71	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      2018	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4003b7b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4003b7f	    0x48c740600000	               mov qword [rax + 0x60], 0	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4003b87	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4003b8e	      0xbe00000000	                              mov esi, 0	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4003b93	          0x4889c7	                            mov rdi, rax	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4003b96	      0xb800000000	                              mov eax, 0	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4003b9b	      0xe800000000	                          call 0x4003ba0	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4003ba0	            0xeb20	                           jmp 0x4003bc2	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4003ba2	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2024	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8
0x4003ba9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4003bb0	      0xbe00000000	                              mov esi, 0	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4003bb5	          0x4889c7	                            mov rdi, rax	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4003bb8	      0xb800000000	                              mov eax, 0	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4003bbd	      0xe800000000	                          call 0x4003bc2	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4003bc2	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2030	channel.c	FUNCTION_52	IF_13
0x4003bc9	            0x7531	                           jne 0x4003bfc	      2030	channel.c	FUNCTION_52	IF_13
0x4003bcb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4003bd2	      0xbe00000000	                              mov esi, 0	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4003bd7	          0x4889c7	                            mov rdi, rax	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4003bda	      0xb800000000	                              mov eax, 0	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4003bdf	      0xe838c7ffff	                       call sym.ch_error	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4003be4	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2033	channel.c	FUNCTION_52	IF_13
0x4003bee	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2034	channel.c	FUNCTION_52	IF_13
0x4003bf2	    0x48c740600000	               mov qword [rax + 0x60], 0	      2034	channel.c	FUNCTION_52	IF_13
0x4003bfa	            0xeb79	                           jmp 0x4003c75	      2034	channel.c	FUNCTION_52	IF_13
0x4003bfc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c00	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c03	            0x4898	                                    cdqe	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c05	          0x4801d0	                            add rax, rdx	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c08	           0xfb600	                   movzx eax, byte [rax]	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c0b	            0x84c0	                             test al, al	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c0d	            0x745c	                            je 0x4003c6b	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2040	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c13	          0x4889c2	                            mov rdx, rax	      2040	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c16	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2040	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c1a	          0x4829c2	                            sub rdx, rax	      2040	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c1d	          0x4889d0	                            mov rax, rdx	      2040	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c20	            0x89c2	                            mov edx, eax	      2040	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c22	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2040	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c25	            0x89d1	                            mov ecx, edx	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c27	            0x29c1	                            sub ecx, eax	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c29	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c2d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c30	            0x4898	                                    cdqe	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c32	          0x4801c2	                            add rdx, rax	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c35	    0x8bb564ffffff	             mov esi, dword [rbp - 0x9c]	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c3b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c42	    0x41b900000000	                              mov r9d, 0	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c48	    0x41b801000000	                              mov r8d, 1	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c4e	          0x4889c7	                            mov rdi, rax	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c51	      0xe89df7ffff	                   call sym.channel_save	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4003c56	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 2	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c5d	           0xf95c0	                                setne al	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c60	           0xfb6c0	                           movzx eax, al	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c63	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c69	            0xeb0a	                           jmp 0x4003c75	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4003c6b	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2045	channel.c	FUNCTION_52	ELSE_10
0x4003c75	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2047	channel.c	FUNCTION_52	CALL_22
0x4003c79	          0x4889c7	                            mov rdi, rax	      2047	channel.c	FUNCTION_52	CALL_22
0x4003c7c	      0xe800000000	                          call 0x4003c81	      2047	channel.c	FUNCTION_52	CALL_22
0x4003c81	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2048	channel.c	FUNCTION_52
0x4003c87	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2049	channel.c	FUNCTION_52
0x4003c8b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2049	channel.c	FUNCTION_52
0x4003c94	            0x7405	                            je 0x4003c9b	      2049	channel.c	FUNCTION_52
0x4003c96	      0xe800000000	                          call 0x4003c9b	      2049	channel.c	FUNCTION_52
0x4003c9b	              0xc9	                                   leave	      2049	channel.c	FUNCTION_52
0x4003c9c	              0xc3	                                     ret	      2049	channel.c	FUNCTION_52
channel_part_send	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,1:SWITCH,0	12
0x4008237	              0x55	                                push rbp	      4354	channel.c	FUNCTION_98
0x4008238	          0x4889e5	                            mov rbp, rsp	      4354	channel.c	FUNCTION_98
0x400823b	        0x48897df8	                mov qword [rbp - 8], rdi	      4354	channel.c	FUNCTION_98
0x400823f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4355	channel.c	FUNCTION_98	IF_1
0x4008243	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4355	channel.c	FUNCTION_98	IF_1
0x4008246	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4355	channel.c	FUNCTION_98	IF_1
0x4008249	            0x7507	                           jne 0x4008252	      4355	channel.c	FUNCTION_98	IF_1
0x400824b	      0xb803000000	                              mov eax, 3	      4356	channel.c	FUNCTION_98	IF_1
0x4008250	            0xeb05	                           jmp 0x4008257	      4356	channel.c	FUNCTION_98	IF_1
0x4008252	      0xb800000000	                              mov eax, 0	      4357	channel.c	FUNCTION_98
0x4008257	              0x5d	                                 pop rbp	      4358	channel.c	FUNCTION_98
0x4008258	              0xc3	                                     ret	      4358	channel.c	FUNCTION_98
channel_get_json	ELSE,0:WHILE,1:FOR,0:DO,0:functions,0:CALL,2:IF,2:SWITCH,0	102
0x4003d97	              0x55	                                push rbp	      2101	channel.c	FUNCTION_55
0x4003d98	          0x4889e5	                            mov rbp, rsp	      2101	channel.c	FUNCTION_55
0x4003d9b	        0x4883ec40	                           sub rsp, 0x40	      2101	channel.c	FUNCTION_55
0x4003d9f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2101	channel.c	FUNCTION_55
0x4003da3	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2101	channel.c	FUNCTION_55
0x4003da6	          0x8955d0	             mov dword [rbp - 0x30], edx	      2101	channel.c	FUNCTION_55
0x4003da9	          0x894dcc	             mov dword [rbp - 0x34], ecx	      2101	channel.c	FUNCTION_55
0x4003dac	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      2101	channel.c	FUNCTION_55
0x4003db0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2102	channel.c	FUNCTION_55
0x4003db3	        0x48c1e004	                              shl rax, 4	      2102	channel.c	FUNCTION_55
0x4003db7	          0x4889c2	                            mov rdx, rax	      2102	channel.c	FUNCTION_55
0x4003dba	        0x48c1e204	                              shl rdx, 4	      2102	channel.c	FUNCTION_55
0x4003dbe	          0x4801d0	                            add rax, rdx	      2102	channel.c	FUNCTION_55
0x4003dc1	        0x488d5040	                   lea rdx, [rax + 0x40]	      2102	channel.c	FUNCTION_55
0x4003dc5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	channel.c	FUNCTION_55
0x4003dc9	          0x4801d0	                            add rax, rdx	      2102	channel.c	FUNCTION_55
0x4003dcc	        0x4883c010	                           add rax, 0x10	      2102	channel.c	FUNCTION_55
0x4003dd0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2102	channel.c	FUNCTION_55
0x4003dd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2103	channel.c	FUNCTION_55
0x4003dd8	        0x488b4008	                mov rax, qword [rax + 8]	      2103	channel.c	FUNCTION_55
0x4003ddc	        0x488945e0	             mov qword [rbp - 0x20], rax	      2103	channel.c	FUNCTION_55
0x4003de0	      0xe902010000	                           jmp 0x4003ee7	      2105	channel.c	FUNCTION_55	WHILE_1
0x4003de5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2107	channel.c	FUNCTION_55	WHILE_1
0x4003de9	          0x488b00	                    mov rax, qword [rax]	      2107	channel.c	FUNCTION_55	WHILE_1
0x4003dec	        0x488b4008	                mov rax, qword [rax + 8]	      2107	channel.c	FUNCTION_55	WHILE_1
0x4003df0	        0x488945f0	             mov qword [rbp - 0x10], rax	      2107	channel.c	FUNCTION_55	WHILE_1
0x4003df4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4003df8	          0x488b00	                    mov rax, qword [rax]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4003dfb	        0x4883c010	                           add rax, 0x10	      2108	channel.c	FUNCTION_55	WHILE_1
0x4003dff	        0x488945f8	                mov qword [rbp - 8], rax	      2108	channel.c	FUNCTION_55	WHILE_1
0x4003e03	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e07	            0x750f	                           jne 0x4003e18	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e09	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e0d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e10	            0x85c0	                           test eax, eax	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e12	     0xf85c3000000	                           jne 0x4003edb	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e18	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e1c	            0x7e1d	                           jle 0x4003e3b	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e1e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e22	            0x8b00	                    mov eax, dword [rax]	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e24	          0x83f801	                              cmp eax, 1	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e27	            0x7512	                           jne 0x4003e3b	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e29	        0x488b45f8	                mov rax, qword [rbp - 8]	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e2d	        0x488b5008	                mov rdx, qword [rax + 8]	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e31	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e34	            0x4898	                                    cdqe	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e36	          0x4839c2	                            cmp rdx, rax	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e39	            0x744f	                            je 0x4003e8a	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e3b	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e3f	     0xf8f96000000	                            jg 0x4003edb	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e45	        0x488b45f8	                mov rax, qword [rbp - 8]	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e49	            0x8b00	                    mov eax, dword [rax]	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e4b	          0x83f801	                              cmp eax, 1	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e4e	            0x753a	                           jne 0x4003e8a	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e50	        0x488b45f8	                mov rax, qword [rbp - 8]	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e54	        0x488b4008	                mov rax, qword [rax + 8]	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e58	          0x4885c0	                           test rax, rax	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e5b	            0x742d	                            je 0x4003e8a	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e5d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e61	        0x488b5008	                mov rdx, qword [rax + 8]	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e65	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e69	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e6c	        0x48c1e004	                              shl rax, 4	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e70	          0x4889c6	                            mov rsi, rax	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e73	        0x48c1e604	                              shl rsi, 4	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e77	          0x4801f0	                            add rax, rsi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e7a	          0x4801c8	                            add rax, rcx	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e7d	        0x4883c070	                           add rax, 0x70	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e81	            0x8b00	                    mov eax, dword [rax]	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e83	            0x4898	                                    cdqe	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e85	          0x4839c2	                            cmp rdx, rax	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e88	            0x7451	                            je 0x4003edb	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e8a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e8e	          0x488b10	                    mov rdx, qword [rax]	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e91	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e95	          0x488910	                    mov qword [rax], rdx	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003e98	        0x488b45f8	                mov rax, qword [rbp - 8]	      2117	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x4003e9c	            0x8b00	                    mov eax, dword [rax]	      2117	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x4003e9e	          0x83f801	                              cmp eax, 1	      2117	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x4003ea1	            0x751e	                           jne 0x4003ec1	      2117	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x4003ea3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2119	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x4003ea7	        0x488b5008	                mov rdx, qword [rax + 8]	      2119	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2
0x4003eab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4003eaf	      0xbe00000000	                              mov esi, 0	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4003eb4	          0x4889c7	                            mov rdi, rax	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4003eb7	      0xb800000000	                              mov eax, 0	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4003ebc	      0xe800000000	                          call 0x4003ec1	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4003ec1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2120	channel.c	FUNCTION_55	WHILE_1	IF_1	CALL_2
0x4003ec5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2120	channel.c	FUNCTION_55	WHILE_1	IF_1	CALL_2
0x4003ec9	          0x4889d6	                            mov rsi, rdx	      2120	channel.c	FUNCTION_55	WHILE_1	IF_1	CALL_2
0x4003ecc	          0x4889c7	                            mov rdi, rax	      2120	channel.c	FUNCTION_55	WHILE_1	IF_1	CALL_2
0x4003ecf	      0xe83efeffff	               call sym.remove_json_node	      2120	channel.c	FUNCTION_55	WHILE_1	IF_1	CALL_2
0x4003ed4	      0xb801000000	                              mov eax, 1	      2121	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003ed9	            0xeb1c	                           jmp 0x4003ef7	      2121	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4003edb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2123	channel.c	FUNCTION_55	WHILE_1
0x4003edf	        0x488b4008	                mov rax, qword [rax + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x4003ee3	        0x488945e0	             mov qword [rbp - 0x20], rax	      2123	channel.c	FUNCTION_55	WHILE_1
0x4003ee7	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2105	channel.c	FUNCTION_55	WHILE_1
0x4003eec	     0xf85f3feffff	                           jne 0x4003de5	      2105	channel.c	FUNCTION_55	WHILE_1
0x4003ef2	      0xb800000000	                              mov eax, 0	      2125	channel.c	FUNCTION_55
0x4003ef7	              0xc9	                                   leave	      2126	channel.c	FUNCTION_55
0x4003ef8	              0xc3	                                     ret	      2126	channel.c	FUNCTION_55
write_buf_line	ELSE,1:WHILE,0:FOR,1:DO,0:functions,0:CALL,6:IF,3:SWITCH,0	85
0x40025e3	              0x55	                                push rbp	      1332	channel.c	ELSE_2	FUNCTION_36
0x40025e4	          0x4889e5	                            mov rbp, rsp	      1332	channel.c	ELSE_2	FUNCTION_36
0x40025e7	        0x4883ec40	                           sub rsp, 0x40	      1332	channel.c	ELSE_2	FUNCTION_36
0x40025eb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1332	channel.c	ELSE_2	FUNCTION_36
0x40025ef	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1332	channel.c	ELSE_2	FUNCTION_36
0x40025f3	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1332	channel.c	ELSE_2	FUNCTION_36
0x40025f7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x40025fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x40025ff	      0xba00000000	                              mov edx, 0	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002604	          0x4889ce	                            mov rsi, rcx	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002607	          0x4889c7	                            mov rdi, rax	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x400260a	      0xe800000000	                          call 0x400260f	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x400260f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002613	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002617	          0x4889c7	                            mov rdi, rax	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x400261a	      0xe800000000	                          call 0x400261f	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x400261f	          0x8945ec	             mov dword [rbp - 0x14], eax	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002622	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002625	          0x83c002	                              add eax, 2	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002628	            0x89c7	                            mov edi, eax	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x400262a	      0xe800000000	                          call 0x400262f	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x400262f	        0x488945f8	                mov qword [rbp - 8], rax	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002633	      0x48837df800	                  cmp qword [rbp - 8], 0	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002638	     0xf84c4000000	                            je 0x4002702	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x400263e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4002641	          0x4863d0	                         movsxd rdx, eax	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4002644	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4002648	        0x488b45f8	                mov rax, qword [rbp - 8]	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x400264c	          0x4889ce	                            mov rsi, rcx	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x400264f	          0x4889c7	                            mov rdi, rax	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4002652	      0xe800000000	                          call 0x4002657	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4002657	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x400265b	    0x8b8058040000	           mov eax, dword [rax + 0x458] 	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002661	            0x85c0	                           test eax, eax	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002663	            0x7412	                            je 0x4002677	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002665	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002668	          0x4863d0	                         movsxd rdx, eax	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x400266b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x400266f	          0x4801d0	                            add rax, rdx	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002672	          0xc6000d	                     mov byte [rax], 0xd	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002675	            0xeb49	                           jmp 0x40026c0	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002677	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x400267e	            0xeb28	                           jmp 0x40026a8	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4002680	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002683	          0x4863d0	                         movsxd rdx, eax	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002686	        0x488b45f8	                mov rax, qword [rbp - 8]	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x400268a	          0x4801d0	                            add rax, rdx	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x400268d	           0xfb600	                   movzx eax, byte [rax]	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002690	            0x3c0a	                             cmp al, 0xa	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002692	            0x7510	                           jne 0x40026a4	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002694	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4002697	          0x4863d0	                         movsxd rdx, eax	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x400269a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x400269e	          0x4801d0	                            add rax, rdx	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x40026a1	          0xc60000	                       mov byte [rax], 0	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x40026a4	        0x8345e801	               add dword [rbp - 0x18], 1	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40026a8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40026ab	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40026ae	            0x7cd0	                            jl 0x4002680	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x40026b0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40026b3	          0x4863d0	                         movsxd rdx, eax	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40026b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40026ba	          0x4801d0	                            add rax, rdx	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40026bd	          0xc6000a	                     mov byte [rax], 0xa	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x40026c0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1353	channel.c	ELSE_2	FUNCTION_36
0x40026c3	            0x4898	                                    cdqe	      1353	channel.c	ELSE_2	FUNCTION_36
0x40026c5	        0x488d5001	                      lea rdx, [rax + 1]	      1353	channel.c	ELSE_2	FUNCTION_36
0x40026c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1353	channel.c	ELSE_2	FUNCTION_36
0x40026cd	          0x4801d0	                            add rax, rdx	      1353	channel.c	ELSE_2	FUNCTION_36
0x40026d0	          0xc60000	                       mov byte [rax], 0	      1353	channel.c	ELSE_2	FUNCTION_36
0x40026d3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026d6	          0x8d4801	                      lea ecx, [rax + 1]	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026d9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026e1	    0x41b800000000	                              mov r8d, 0	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026e7	      0xbe03000000	                              mov esi, 3	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026ec	          0x4889c7	                            mov rdi, rax	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026ef	      0xe800000000	                          call 0x40026f4	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x40026f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x40026f8	          0x4889c7	                            mov rdi, rax	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x40026fb	      0xe800000000	                          call 0x4002700	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4002700	            0xeb01	                           jmp 0x4002703	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4002702	              0x90	                                     nop	      1340	channel.c	ELSE_2	FUNCTION_36	IF_1
0x4002703	              0xc9	                                   leave	      1356	channel.c	ELSE_2	FUNCTION_36
0x4002704	              0xc3	                                     ret	      1356	channel.c	ELSE_2	FUNCTION_36
channel_set_req_callback	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,3:IF,3:SWITCH,0	74
0x40024d4	              0x55	                                push rbp	      1302	channel.c	FUNCTION_35
0x40024d5	          0x4889e5	                            mov rbp, rsp	      1302	channel.c	FUNCTION_35
0x40024d8	        0x4883ec30	                           sub rsp, 0x30	      1302	channel.c	FUNCTION_35
0x40024dc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1302	channel.c	FUNCTION_35
0x40024e0	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1302	channel.c	FUNCTION_35
0x40024e3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1302	channel.c	FUNCTION_35
0x40024e7	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1302	channel.c	FUNCTION_35
0x40024eb	        0x448945e0	             mov dword [rbp - 0x20], r8d	      1302	channel.c	FUNCTION_35
0x40024ef	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1303	channel.c	FUNCTION_35
0x40024f2	        0x48c1e004	                              shl rax, 4	      1303	channel.c	FUNCTION_35
0x40024f6	          0x4889c2	                            mov rdx, rax	      1303	channel.c	FUNCTION_35
0x40024f9	        0x48c1e204	                              shl rdx, 4	      1303	channel.c	FUNCTION_35
0x40024fd	          0x4801d0	                            add rax, rdx	      1303	channel.c	FUNCTION_35
0x4002500	    0x488d90b00000	                   lea rdx, [rax + 0xb0]	      1303	channel.c	FUNCTION_35
0x4002507	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1303	channel.c	FUNCTION_35
0x400250b	          0x4801d0	                            add rax, rdx	      1303	channel.c	FUNCTION_35
0x400250e	        0x4883c010	                           add rax, 0x10	      1303	channel.c	FUNCTION_35
0x4002512	        0x488945f0	             mov qword [rbp - 0x10], rax	      1303	channel.c	FUNCTION_35
0x4002516	      0xbf28000000	                           mov edi, 0x28	      1304	channel.c	FUNCTION_35	CALL_1
0x400251b	      0xe800000000	                          call 0x4002520	      1304	channel.c	FUNCTION_35	CALL_1
0x4002520	        0x488945f8	                mov qword [rbp - 8], rax	      1304	channel.c	FUNCTION_35	CALL_1
0x4002524	      0x48837df800	                  cmp qword [rbp - 8], 0	      1306	channel.c	FUNCTION_35	IF_1
0x4002529	     0xf84b1000000	                            je 0x40025e0	      1306	channel.c	FUNCTION_35	IF_1
0x400252f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1308	channel.c	FUNCTION_35	IF_1
0x4002533	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1308	channel.c	FUNCTION_35	IF_1
0x4002537	        0x48895008	                mov qword [rax + 8], rdx	      1308	channel.c	FUNCTION_35	IF_1
0x400253b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x4002540	            0x741c	                            je 0x400255e	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x4002542	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x4002546	            0x8b00	                    mov eax, dword [rax]	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x4002548	          0x8d5001	                      lea edx, [rax + 1]	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x400254b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x400254f	            0x8910	                    mov dword [rax], edx	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x4002551	        0x488b45f8	                mov rax, qword [rbp - 8]	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x4002555	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x4002559	          0x488910	                    mov qword [rax], rdx	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x400255c	            0xeb25	                           jmp 0x4002583	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x400255e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4002562	          0x4889c7	                            mov rdi, rax	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4002565	      0xe800000000	                          call 0x400256a	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400256a	          0x4889c2	                            mov rdx, rax	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400256d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4002571	          0x488910	                    mov qword [rax], rdx	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x4002574	        0x488b45f8	                mov rax, qword [rbp - 8]	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x4002578	          0x488b00	                    mov rax, qword [rax]	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400257b	          0x4889c7	                            mov rdi, rax	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400257e	      0xe800000000	                          call 0x4002583	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x4002583	        0x488b45f8	                mov rax, qword [rbp - 8]	      1319	channel.c	FUNCTION_35	IF_1
0x4002587	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1319	channel.c	FUNCTION_35	IF_1
0x400258a	          0x895010	             mov dword [rax + 0x10], edx	      1319	channel.c	FUNCTION_35	IF_1
0x400258d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1320	channel.c	FUNCTION_35	IF_1
0x4002591	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1320	channel.c	FUNCTION_35	IF_1
0x4002595	        0x488b45f8	                mov rax, qword [rbp - 8]	      1320	channel.c	FUNCTION_35	IF_1
0x4002599	        0x48895020	             mov qword [rax + 0x20], rdx	      1320	channel.c	FUNCTION_35	IF_1
0x400259d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1321	channel.c	FUNCTION_35	IF_1
0x40025a1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1321	channel.c	FUNCTION_35	IF_1
0x40025a5	        0x48895020	             mov qword [rax + 0x20], rdx	      1321	channel.c	FUNCTION_35	IF_1
0x40025a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1322	channel.c	FUNCTION_35	IF_1
0x40025ad	    0x48c740180000	               mov qword [rax + 0x18], 0	      1322	channel.c	FUNCTION_35	IF_1
0x40025b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x40025b9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x40025bd	          0x4885c0	                           test rax, rax	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x40025c0	            0x750e	                           jne 0x40025d0	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x40025c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40025c6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40025ca	        0x48895018	             mov qword [rax + 0x18], rdx	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x40025ce	            0xeb10	                           jmp 0x40025e0	      1328	channel.c	FUNCTION_35	ELSE_2
0x40025d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x40025d4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x40025d8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x40025dc	        0x48895018	             mov qword [rax + 0x18], rdx	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x40025e0	              0x90	                                     nop	      1328	channel.c	FUNCTION_35	ELSE_2
0x40025e1	              0xc9	                                   leave	      1328	channel.c	FUNCTION_35	ELSE_2
0x40025e2	              0xc3	                                     ret	      1328	channel.c	FUNCTION_35	ELSE_2
ch_expr_common	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,12:IF,6:SWITCH,0	139
0x4007730	              0x55	                                push rbp	      3922	channel.c	FUNCTION_89
0x4007731	          0x4889e5	                            mov rbp, rsp	      3922	channel.c	FUNCTION_89
0x4007734	    0x4881ece00300	                          sub rsp, 0x3e0	      3922	channel.c	FUNCTION_89
0x400773b	    0x4889bd38fcff	            mov qword [rbp - 0x3c8], rdi	      3922	channel.c	FUNCTION_89
0x4007742	    0x4889b530fcff	            mov qword [rbp - 0x3d0], rsi	      3922	channel.c	FUNCTION_89
0x4007749	    0x89952cfcffff	            mov dword [rbp - 0x3d4], edx	      3922	channel.c	FUNCTION_89
0x400774f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3922	channel.c	FUNCTION_89
0x4007758	        0x488945f8	                mov qword [rbp - 8], rax	      3922	channel.c	FUNCTION_89
0x400775c	            0x31c0	                            xor eax, eax	      3922	channel.c	FUNCTION_89
0x400775e	    0x488b8530fcff	            mov rax, qword [rbp - 0x3d0]	      3934	channel.c	FUNCTION_89
0x4007765	    0xc70002000000	                      mov dword [rax], 2	      3934	channel.c	FUNCTION_89
0x400776b	    0x488b8530fcff	            mov rax, qword [rbp - 0x3d0]	      3935	channel.c	FUNCTION_89
0x4007772	    0x48c740080000	                  mov qword [rax + 8], 0	      3935	channel.c	FUNCTION_89
0x400777a	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      3937	channel.c	FUNCTION_89	CALL_1
0x4007781	      0xb900000000	                              mov ecx, 0	      3937	channel.c	FUNCTION_89	CALL_1
0x4007786	      0xba00000000	                              mov edx, 0	      3937	channel.c	FUNCTION_89	CALL_1
0x400778b	      0xbe01000000	                              mov esi, 1	      3937	channel.c	FUNCTION_89	CALL_1
0x4007790	          0x4889c7	                            mov rdi, rax	      3937	channel.c	FUNCTION_89	CALL_1
0x4007793	      0xe800000000	                          call 0x4007798	      3937	channel.c	FUNCTION_89	CALL_1
0x4007798	    0x48898568fcff	            mov qword [rbp - 0x398], rax	      3937	channel.c	FUNCTION_89	CALL_1
0x400779f	    0x4883bd68fcff	              cmp qword [rbp - 0x398], 0	      3938	channel.c	FUNCTION_89	IF_1
0x40077a7	     0xf8417020000	                            je 0x40079c4	      3938	channel.c	FUNCTION_89	IF_1
0x40077ad	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3940	channel.c	FUNCTION_89	CALL_2
0x40077b4	          0x4889c7	                            mov rdi, rax	      3940	channel.c	FUNCTION_89	CALL_2
0x40077b7	      0xe800000000	                          call 0x40077bc	      3940	channel.c	FUNCTION_89	CALL_2
0x40077bc	    0x898554fcffff	            mov dword [rbp - 0x3ac], eax	      3940	channel.c	FUNCTION_89	CALL_2
0x40077c2	    0x8b9554fcffff	            mov edx, dword [rbp - 0x3ac]	      3942	channel.c	FUNCTION_89	CALL_3
0x40077c8	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3942	channel.c	FUNCTION_89	CALL_3
0x40077cf	            0x89d6	                            mov esi, edx	      3942	channel.c	FUNCTION_89	CALL_3
0x40077d1	          0x4889c7	                            mov rdi, rax	      3942	channel.c	FUNCTION_89	CALL_3
0x40077d4	      0xe800000000	                          call 0x40077d9	      3942	channel.c	FUNCTION_89	CALL_3
0x40077d9	    0x898558fcffff	            mov dword [rbp - 0x3a8], eax	      3942	channel.c	FUNCTION_89	CALL_3
0x40077df	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 1	      3943	channel.c	FUNCTION_89	IF_2
0x40077e6	            0x7409	                            je 0x40077f1	      3943	channel.c	FUNCTION_89	IF_2
0x40077e8	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 0	      3943	channel.c	FUNCTION_89	IF_2
0x40077ef	            0x7517	                           jne 0x4007808	      3943	channel.c	FUNCTION_89	IF_2
0x40077f1	      0xbf00000000	                              mov edi, 0	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x40077f6	      0xe800000000	                          call 0x40077fb	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x40077fb	          0x4889c7	                            mov rdi, rax	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x40077fe	      0xe800000000	                          call 0x4007803	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x4007803	      0xe9c0010000	                           jmp 0x40079c8	      3946	channel.c	FUNCTION_89	IF_2
0x4007808	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3949	channel.c	FUNCTION_89
0x400780f	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3949	channel.c	FUNCTION_89
0x4007812	          0x8d5001	                      lea edx, [rax + 1]	      3949	channel.c	FUNCTION_89
0x4007815	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3949	channel.c	FUNCTION_89
0x400781c	          0x895014	             mov dword [rax + 0x14], edx	      3949	channel.c	FUNCTION_89
0x400781f	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3949	channel.c	FUNCTION_89
0x4007826	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3949	channel.c	FUNCTION_89
0x4007829	    0x89855cfcffff	            mov dword [rbp - 0x3a4], eax	      3949	channel.c	FUNCTION_89
0x400782f	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 3	      3950	channel.c	FUNCTION_89	CALL_6
0x4007836	            0x7507	                           jne 0x400783f	      3950	channel.c	FUNCTION_89	CALL_6
0x4007838	      0xba05000000	                              mov edx, 5	      3950	channel.c	FUNCTION_89	CALL_6
0x400783d	            0xeb05	                           jmp 0x4007844	      3950	channel.c	FUNCTION_89	CALL_6
0x400783f	      0xba04000000	                              mov edx, 4	      3950	channel.c	FUNCTION_89	CALL_6
0x4007844	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      3950	channel.c	FUNCTION_89	CALL_6
0x400784b	        0x488d4810	                   lea rcx, [rax + 0x10]	      3950	channel.c	FUNCTION_89	CALL_6
0x400784f	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      3950	channel.c	FUNCTION_89	CALL_6
0x4007855	          0x4889ce	                            mov rsi, rcx	      3950	channel.c	FUNCTION_89	CALL_6
0x4007858	            0x89c7	                            mov edi, eax	      3950	channel.c	FUNCTION_89	CALL_6
0x400785a	      0xe800000000	                          call 0x400785f	      3950	channel.c	FUNCTION_89	CALL_6
0x400785f	    0x48898570fcff	            mov qword [rbp - 0x390], rax	      3950	channel.c	FUNCTION_89	CALL_6
0x4007866	    0x4883bd70fcff	              cmp qword [rbp - 0x390], 0	      3952	channel.c	FUNCTION_89	IF_3
0x400786e	     0xf8453010000	                            je 0x40079c7	      3952	channel.c	FUNCTION_89	IF_3
0x4007874	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3955	channel.c	FUNCTION_89	CALL_7
0x400787b	            0x7408	                            je 0x4007885	      3955	channel.c	FUNCTION_89	CALL_7
0x400787d	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x4007883	            0xeb06	                           jmp 0x400788b	      3955	channel.c	FUNCTION_89	CALL_7
0x4007885	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x400788b	    0x4c8d8580fcff	                   lea r8, [rbp - 0x380]	      3955	channel.c	FUNCTION_89	CALL_7
0x4007892	    0x8b8d2cfcffff	            mov ecx, dword [rbp - 0x3d4]	      3955	channel.c	FUNCTION_89	CALL_7
0x4007898	    0x8b955cfcffff	            mov edx, dword [rbp - 0x3a4]	      3955	channel.c	FUNCTION_89	CALL_7
0x400789e	    0x488bb570fcff	            mov rsi, qword [rbp - 0x390]	      3955	channel.c	FUNCTION_89	CALL_7
0x40078a5	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      3955	channel.c	FUNCTION_89	CALL_7
0x40078ac	        0x4883ec08	                              sub rsp, 8	      3955	channel.c	FUNCTION_89	CALL_7
0x40078b0	    0x488dbd4cfcff	                  lea rdi, [rbp - 0x3b4]	      3955	channel.c	FUNCTION_89	CALL_7
0x40078b7	              0x57	                                push rdi	      3955	channel.c	FUNCTION_89	CALL_7
0x40078b8	          0x4889c7	                            mov rdi, rax	      3955	channel.c	FUNCTION_89	CALL_7
0x40078bb	      0xe802fdffff	                    call sym.send_common	      3955	channel.c	FUNCTION_89	CALL_7
0x40078c0	        0x4883c410	                           add rsp, 0x10	      3955	channel.c	FUNCTION_89	CALL_7
0x40078c4	    0x48898568fcff	            mov qword [rbp - 0x398], rax	      3955	channel.c	FUNCTION_89	CALL_7
0x40078cb	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3957	channel.c	FUNCTION_89	CALL_8
0x40078d2	          0x4889c7	                            mov rdi, rax	      3957	channel.c	FUNCTION_89	CALL_8
0x40078d5	      0xe800000000	                          call 0x40078da	      3957	channel.c	FUNCTION_89	CALL_8
0x40078da	    0x4883bd68fcff	              cmp qword [rbp - 0x398], 0	      3958	channel.c	FUNCTION_89	IF_4
0x40078e2	     0xf84cb000000	                            je 0x40079b3	      3958	channel.c	FUNCTION_89	IF_4
0x40078e8	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3958	channel.c	FUNCTION_89	IF_4
0x40078ef	     0xf84be000000	                            je 0x40079b3	      3958	channel.c	FUNCTION_89	IF_4
0x40078f5	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x40078fb	      0x2500020000	                          and eax, 0x200	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x4007900	            0x85c0	                           test eax, eax	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x4007902	            0x740e	                            je 0x4007912	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x4007904	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x400790a	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x4007910	            0xeb1d	                           jmp 0x400792f	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x4007912	    0x8b954cfcffff	            mov edx, dword [rbp - 0x3b4]	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x4007918	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x400791f	            0x89d6	                            mov esi, edx	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x4007921	          0x4889c7	                            mov rdi, rax	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x4007924	      0xe800000000	                          call 0x4007929	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x4007929	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      3963	channel.c	FUNCTION_89	IF_4	CALL_9
0x400792f	    0x8bb54cfcffff	            mov esi, dword [rbp - 0x3b4]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007935	    0x488dbd60fcff	                  lea rdi, [rbp - 0x3a0]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400793c	    0x8b8d5cfcffff	            mov ecx, dword [rbp - 0x3a4]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007942	    0x8b9550fcffff	            mov edx, dword [rbp - 0x3b0]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007948	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400794f	          0x4989f8	                             mov r8, rdi	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007952	          0x4889c7	                            mov rdi, rax	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x4007955	      0xe8f7f0ffff	        call sym.channel_read_json_block	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400795a	          0x83f801	                              cmp eax, 1	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400795d	            0x7554	                           jne 0x40079b3	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400795f	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x4007966	        0x488b4008	                mov rax, qword [rax + 8]	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x400796a	    0x48898578fcff	            mov qword [rbp - 0x388], rax	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x4007971	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007978	        0x488b4008	                mov rax, qword [rax + 8]	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400797c	    0x488b8d30fcff	            mov rcx, qword [rbp - 0x3d0]	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007983	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007987	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400798b	          0x488901	                    mov qword [rcx], rax	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400798e	        0x48895108	                mov qword [rcx + 8], rdx	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x4007992	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x4007999	        0x488b4008	                mov rax, qword [rax + 8]	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x400799d	    0xc74010010000	               mov dword [rax + 0x10], 1	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x40079a4	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x40079ab	          0x4889c7	                            mov rdi, rax	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x40079ae	      0xe800000000	                          call 0x40079b3	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x40079b3	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3976	channel.c	FUNCTION_89	CALL_12
0x40079ba	          0x4889c7	                            mov rdi, rax	      3976	channel.c	FUNCTION_89	CALL_12
0x40079bd	      0xe800000000	                          call 0x40079c2	      3976	channel.c	FUNCTION_89	CALL_12
0x40079c2	            0xeb04	                           jmp 0x40079c8	      3976	channel.c	FUNCTION_89	CALL_12
0x40079c4	              0x90	                                     nop	      3939	channel.c	FUNCTION_89	IF_1
0x40079c5	            0xeb01	                           jmp 0x40079c8	      3939	channel.c	FUNCTION_89	IF_1
0x40079c7	              0x90	                                     nop	      3953	channel.c	FUNCTION_89	IF_3
0x40079c8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3977	channel.c	FUNCTION_89
0x40079cc	    0x644833042528	                xor rax, qword fs:[0x28]	      3977	channel.c	FUNCTION_89
0x40079d5	            0x7405	                            je 0x40079dc	      3977	channel.c	FUNCTION_89
0x40079d7	      0xe800000000	                          call 0x40079dc	      3977	channel.c	FUNCTION_89
0x40079dc	              0xc9	                                   leave	      3977	channel.c	FUNCTION_89
0x40079dd	              0xc3	                                     ret	      3977	channel.c	FUNCTION_89
job_free	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	16
0x400a5dd	              0x55	                                push rbp	      5080	channel.c	FUNCTION_111
0x400a5de	          0x4889e5	                            mov rbp, rsp	      5080	channel.c	FUNCTION_111
0x400a5e1	        0x4883ec10	                           sub rsp, 0x10	      5080	channel.c	FUNCTION_111
0x400a5e5	        0x48897df8	                mov qword [rbp - 8], rdi	      5080	channel.c	FUNCTION_111
0x400a5e9	    0x8b0500000000	            mov eax, dword [0x0400a5ef] 	      5081	channel.c	FUNCTION_111	IF_1
0x400a5ef	            0x85c0	                           test eax, eax	      5081	channel.c	FUNCTION_111	IF_1
0x400a5f1	            0x7518	                           jne 0x400a60b	      5081	channel.c	FUNCTION_111	IF_1
0x400a5f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x400a5f7	          0x4889c7	                            mov rdi, rax	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x400a5fa	      0xe85efeffff	              call sym.job_free_contents	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x400a5ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x400a603	          0x4889c7	                            mov rdi, rax	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x400a606	      0xe869ffffff	                   call sym.job_free_job	      5084	channel.c	FUNCTION_111	IF_1	CALL_2
0x400a60b	              0x90	                                     nop	      5086	channel.c	FUNCTION_111
0x400a60c	              0xc9	                                   leave	      5086	channel.c	FUNCTION_111
0x400a60d	              0xc3	                                     ret	      5086	channel.c	FUNCTION_111
win32_escape_arg	ELSE,0:WHILE,0:FOR,4:DO,0:functions,0:CALL,6:IF,7:SWITCH,1	180
0x400a73f	              0x55	                                push rbp	      5159	channel.c	FUNCTION_118
0x400a740	          0x4889e5	                            mov rbp, rsp	      5159	channel.c	FUNCTION_118
0x400a743	        0x4883ec50	                           sub rsp, 0x50	      5159	channel.c	FUNCTION_118
0x400a747	        0x48897db8	             mov qword [rbp - 0x48], rdi	      5159	channel.c	FUNCTION_118
0x400a74b	    0x64488b042528	                mov rax, qword fs:[0x28]	      5159	channel.c	FUNCTION_118
0x400a754	        0x488945f8	                mov qword [rbp - 8], rax	      5159	channel.c	FUNCTION_118
0x400a758	            0x31c0	                            xor eax, eax	      5159	channel.c	FUNCTION_118
0x400a75a	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      5161	channel.c	FUNCTION_118
0x400a761	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      5165	channel.c	FUNCTION_118
0x400a768	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5168	channel.c	FUNCTION_118	CALL_1
0x400a76c	          0x4889c7	                            mov rdi, rax	      5168	channel.c	FUNCTION_118	CALL_1
0x400a76f	      0xe800000000	                          call 0x400a774	      5168	channel.c	FUNCTION_118	CALL_1
0x400a774	          0x8945dc	             mov dword [rbp - 0x24], eax	      5168	channel.c	FUNCTION_118	CALL_1
0x400a777	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5169	channel.c	FUNCTION_118
0x400a77a	          0x8945cc	             mov dword [rbp - 0x34], eax	      5169	channel.c	FUNCTION_118
0x400a77d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a781	        0x488945e0	             mov qword [rbp - 0x20], rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a785	            0xeb65	                           jmp 0x400a7ec	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a787	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a78b	           0xfb600	                   movzx eax, byte [rax]	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a78e	            0x3c22	                            cmp al, 0x22	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a790	            0x740b	                            je 0x400a79d	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a792	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a796	           0xfb600	                   movzx eax, byte [rax]	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a799	            0x3c5c	                            cmp al, 0x5c	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a79b	            0x7504	                           jne 0x400a7a1	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a79d	        0x8345cc01	               add dword [rbp - 0x34], 1	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x400a7a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7a5	           0xfb600	                   movzx eax, byte [rax]	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7a8	            0x3c20	                            cmp al, 0x20	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7aa	            0x740b	                            je 0x400a7b7	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7b0	           0xfb600	                   movzx eax, byte [rax]	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7b3	            0x3c09	                               cmp al, 9	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7b5	            0x7507	                           jne 0x400a7be	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7b7	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x400a7be	    0x8b0500000000	            mov eax, dword [0x0400a7c4] 	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7c4	            0x85c0	                           test eax, eax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7c6	            0x7412	                            je 0x400a7da	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7c8	    0x488b05000000	            mov rax, qword [0x0400a7cf] 	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7cf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7d3	          0x4889d7	                            mov rdi, rdx	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7d6	            0xffd0	                                call rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7d8	            0xeb05	                           jmp 0x400a7df	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7da	      0xb801000000	                              mov eax, 1	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7df	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7e3	            0x4898	                                    cdqe	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7e5	          0x4801d0	                            add rax, rdx	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7e8	        0x488945e0	             mov qword [rbp - 0x20], rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7f0	           0xfb600	                   movzx eax, byte [rax]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7f3	            0x84c0	                             test al, al	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7f5	            0x7590	                           jne 0x400a787	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400a7f7	        0x837dd800	               cmp dword [rbp - 0x28], 0	      5178	channel.c	FUNCTION_118	IF_3
0x400a7fb	            0x7404	                            je 0x400a801	      5178	channel.c	FUNCTION_118	IF_3
0x400a7fd	        0x8345cc02	               add dword [rbp - 0x34], 2	      5179	channel.c	FUNCTION_118	IF_3
0x400a801	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5181	channel.c	FUNCTION_118	IF_4
0x400a804	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      5181	channel.c	FUNCTION_118	IF_4
0x400a807	            0x7511	                           jne 0x400a81a	      5181	channel.c	FUNCTION_118	IF_4
0x400a809	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5182	channel.c	FUNCTION_118	CALL_3
0x400a80d	          0x4889c7	                            mov rdi, rax	      5182	channel.c	FUNCTION_118	CALL_3
0x400a810	      0xe800000000	                          call 0x400a815	      5182	channel.c	FUNCTION_118	CALL_3
0x400a815	      0xe98f010000	                           jmp 0x400a9a9	      5182	channel.c	FUNCTION_118	CALL_3
0x400a81a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5185	channel.c	FUNCTION_118	CALL_4
0x400a81d	          0x83c001	                              add eax, 1	      5185	channel.c	FUNCTION_118	CALL_4
0x400a820	            0x89c7	                            mov edi, eax	      5185	channel.c	FUNCTION_118	CALL_4
0x400a822	      0xe800000000	                          call 0x400a827	      5185	channel.c	FUNCTION_118	CALL_4
0x400a827	        0x488945f0	             mov qword [rbp - 0x10], rax	      5185	channel.c	FUNCTION_118	CALL_4
0x400a82b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5186	channel.c	FUNCTION_118	IF_5
0x400a830	            0x750a	                           jne 0x400a83c	      5186	channel.c	FUNCTION_118	IF_5
0x400a832	      0xb800000000	                              mov eax, 0	      5187	channel.c	FUNCTION_118	IF_5
0x400a837	      0xe96d010000	                           jmp 0x400a9a9	      5187	channel.c	FUNCTION_118	IF_5
0x400a83c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5188	channel.c	FUNCTION_118	CALL_5
0x400a83f	          0x83c001	                              add eax, 1	      5188	channel.c	FUNCTION_118	CALL_5
0x400a842	          0x4863d0	                         movsxd rdx, eax	      5188	channel.c	FUNCTION_118	CALL_5
0x400a845	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5188	channel.c	FUNCTION_118	CALL_5
0x400a849	      0xbe00000000	                              mov esi, 0	      5188	channel.c	FUNCTION_118	CALL_5
0x400a84e	          0x4889c7	                            mov rdi, rax	      5188	channel.c	FUNCTION_118	CALL_5
0x400a851	      0xe800000000	                          call 0x400a856	      5188	channel.c	FUNCTION_118	CALL_5
0x400a856	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5190	channel.c	FUNCTION_118
0x400a85a	        0x488945e8	             mov qword [rbp - 0x18], rax	      5190	channel.c	FUNCTION_118
0x400a85e	        0x837dd800	               cmp dword [rbp - 0x28], 0	      5192	channel.c	FUNCTION_118	IF_6
0x400a862	            0x740f	                            je 0x400a873	      5192	channel.c	FUNCTION_118	IF_6
0x400a864	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5193	channel.c	FUNCTION_118	IF_6
0x400a868	        0x488d5001	                      lea rdx, [rax + 1]	      5193	channel.c	FUNCTION_118	IF_6
0x400a86c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5193	channel.c	FUNCTION_118	IF_6
0x400a870	          0xc60022	                    mov byte [rax], 0x22	      5193	channel.c	FUNCTION_118	IF_6
0x400a873	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5195	channel.c	FUNCTION_118	FOR_2
0x400a877	        0x488945e0	             mov qword [rbp - 0x20], rax	      5195	channel.c	FUNCTION_118	FOR_2
0x400a87b	      0xe9d6000000	                           jmp 0x400a956	      5195	channel.c	FUNCTION_118	FOR_2
0x400a880	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a884	           0xfb600	                   movzx eax, byte [rax]	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a887	           0xfb6c0	                           movzx eax, al	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a88a	          0x83f822	                           cmp eax, 0x22	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a88d	            0x7407	                            je 0x400a896	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a88f	          0x83f85c	                           cmp eax, 0x5c	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a892	            0x745b	                            je 0x400a8ef	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a894	            0xeb7c	                           jmp 0x400a912	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a896	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a89d	            0xeb13	                           jmp 0x400a8b2	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a89f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8a3	        0x488d5001	                      lea rdx, [rax + 1]	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8a7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8ab	          0xc6005c	                    mov byte [rax], 0x5c	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8ae	        0x8345d401	               add dword [rbp - 0x2c], 1	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8b2	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8b5	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8b8	            0x7ce5	                            jl 0x400a89f	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400a8ba	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      5202	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8c5	        0x488d5001	                      lea rdx, [rax + 1]	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8c9	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8cd	          0xc6005c	                    mov byte [rax], 0x5c	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8d4	        0x488d5001	                      lea rdx, [rax + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8d8	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8dc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8e0	        0x488d4a01	                      lea rcx, [rdx + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8e4	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8e8	           0xfb612	                   movzx edx, byte [rdx]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8eb	            0x8810	                      mov byte [rax], dl	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8ed	            0xeb67	                           jmp 0x400a956	      5205	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8ef	        0x8345d001	               add dword [rbp - 0x30], 1	      5207	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8f7	        0x488d5001	                      lea rdx, [rax + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8fb	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a8ff	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a903	        0x488d4a01	                      lea rcx, [rdx + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a907	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a90b	           0xfb612	                   movzx edx, byte [rdx]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a90e	            0x8810	                      mov byte [rax], dl	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a910	            0xeb44	                           jmp 0x400a956	      5209	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a912	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a919	    0x8b0500000000	            mov eax, dword [0x0400a91f] 	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a91f	            0x85c0	                           test eax, eax	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a921	            0x7415	                            je 0x400a938	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a923	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a927	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a92b	          0x4889d6	                            mov rsi, rdx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a92e	          0x4889c7	                            mov rdi, rax	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a931	      0xe800000000	                          call 0x400a936	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a936	            0xeb1d	                           jmp 0x400a955	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a938	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a93c	        0x488d5001	                      lea rdx, [rax + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a940	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a944	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a948	        0x488d4a01	                      lea rcx, [rdx + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a94c	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a950	           0xfb612	                   movzx edx, byte [rdx]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a953	            0x8810	                      mov byte [rax], dl	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400a955	              0x90	                                     nop	      5213	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400a956	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5195	channel.c	FUNCTION_118	FOR_2
0x400a95a	           0xfb600	                   movzx eax, byte [rax]	      5195	channel.c	FUNCTION_118	FOR_2
0x400a95d	            0x84c0	                             test al, al	      5195	channel.c	FUNCTION_118	FOR_2
0x400a95f	     0xf851bffffff	                           jne 0x400a880	      5195	channel.c	FUNCTION_118	FOR_2
0x400a965	        0x837dd800	               cmp dword [rbp - 0x28], 0	      5218	channel.c	FUNCTION_118	IF_7
0x400a969	            0x7433	                            je 0x400a99e	      5218	channel.c	FUNCTION_118	IF_7
0x400a96b	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a972	            0xeb13	                           jmp 0x400a987	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a974	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a978	        0x488d5001	                      lea rdx, [rax + 1]	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a97c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a980	          0xc6005c	                    mov byte [rax], 0x5c	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a983	        0x8345d401	               add dword [rbp - 0x2c], 1	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a987	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a98a	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a98d	            0x7ce5	                            jl 0x400a974	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400a98f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5222	channel.c	FUNCTION_118	IF_7
0x400a993	        0x488d5001	                      lea rdx, [rax + 1]	      5222	channel.c	FUNCTION_118	IF_7
0x400a997	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5222	channel.c	FUNCTION_118	IF_7
0x400a99b	          0xc60022	                    mov byte [rax], 0x22	      5222	channel.c	FUNCTION_118	IF_7
0x400a99e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5224	channel.c	FUNCTION_118
0x400a9a2	          0xc60000	                       mov byte [rax], 0	      5224	channel.c	FUNCTION_118
0x400a9a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5226	channel.c	FUNCTION_118
0x400a9a9	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5227	channel.c	FUNCTION_118
0x400a9ad	    0x644833342528	                xor rsi, qword fs:[0x28]	      5227	channel.c	FUNCTION_118
0x400a9b6	            0x7405	                            je 0x400a9bd	      5227	channel.c	FUNCTION_118
0x400a9b8	      0xe800000000	                          call 0x400a9bd	      5227	channel.c	FUNCTION_118
0x400a9bd	              0xc9	                                   leave	      5227	channel.c	FUNCTION_118
0x400a9be	              0xc3	                                     ret	      5227	channel.c	FUNCTION_118
channel_wait	ELSE,2:WHILE,1:FOR,2:DO,0:functions,0:CALL,19:IF,14:SWITCH,0	145
0x40061d0	              0x55	                                push rbp	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061d1	          0x4889e5	                            mov rbp, rsp	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061d4	    0x4881ec500100	                          sub rsp, 0x150	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061db	    0x4889bdb8feff	            mov qword [rbp - 0x148], rdi	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061e2	    0x89b5b4feffff	            mov dword [rbp - 0x14c], esi	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061e8	    0x8995b0feffff	            mov dword [rbp - 0x150], edx	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061f7	        0x488945f8	                mov qword [rbp - 8], rax	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061fb	            0x31c0	                            xor eax, eax	      3117	channel.c	ELSE_1	FUNCTION_76
0x40061fd	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	      3118	channel.c	ELSE_1	FUNCTION_76	IF_1
0x4006204	            0x7e1f	                           jle 0x4006225	      3118	channel.c	ELSE_1	FUNCTION_76	IF_1
0x4006206	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x400620c	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x4006213	      0xbe00000000	                              mov esi, 0	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x4006218	          0x4889c7	                            mov rdi, rax	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x400621b	      0xb800000000	                              mov eax, 0	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x4006220	      0xe800000000	                          call 0x4006225	      3119	channel.c	ELSE_1	FUNCTION_76	CALL_1
0x4006225	    0x8b8db0feffff	            mov ecx, dword [rbp - 0x150]	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400622b	      0xbad34d6210	                     mov edx, 0x10624dd3	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006230	            0x89c8	                            mov eax, ecx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006232	            0xf7ea	                                imul edx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006234	          0xc1fa06	                              sar edx, 6	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006237	            0x89c8	                            mov eax, ecx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006239	          0xc1f81f	                           sar eax, 0x1f	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400623c	            0x29c2	                            sub edx, eax	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400623e	            0x89d0	                            mov eax, edx	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006240	            0x4898	                                    cdqe	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006242	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      3178	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006249	    0x8b8db0feffff	            mov ecx, dword [rbp - 0x150]	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400624f	      0xbad34d6210	                     mov edx, 0x10624dd3	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006254	            0x89c8	                            mov eax, ecx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006256	            0xf7ea	                                imul edx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006258	          0xc1fa06	                              sar edx, 6	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400625b	            0x89c8	                            mov eax, ecx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400625d	          0xc1f81f	                           sar eax, 0x1f	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006260	            0x29c2	                            sub edx, eax	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006262	            0x89d0	                            mov eax, edx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006264	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400626a	            0x29c1	                            sub ecx, eax	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400626c	            0x89c8	                            mov eax, ecx	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400626e	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006274	            0x4898	                                    cdqe	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x4006276	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      3179	channel.c	FUNCTION_76	ELSE_1	ELSE_2
0x400627d	      0xb800000000	                              mov eax, 0	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4006282	      0xb910000000	                           mov ecx, 0x10	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4006287	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x400628e	          0x4889d7	                            mov rdi, rdx	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4006291	              0xfc	                                     cld	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4006292	          0xf348ab	              rep stosq qword [rdi], rax	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4006295	            0x89f8	                            mov eax, edi	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4006297	            0x89ca	                            mov edx, ecx	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x4006299	    0x8995c8feffff	            mov dword [rbp - 0x138], edx	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x400629f	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      3182	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_10
0x40062a5	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062ab	          0x8d503f	                   lea edx, [rax + 0x3f]	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062ae	            0x85c0	                           test eax, eax	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062b0	           0xf48c2	                          cmovs eax, edx	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062b3	          0xc1f806	                              sar eax, 6	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062b6	            0x89c6	                            mov esi, eax	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062b8	          0x4863c6	                         movsxd rax, esi	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062bb	    0x488bbcc5f0fe	    mov rdi, qword [rbp + rax*8 - 0x110]	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062c3	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062c9	              0x99	                                     cdq	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062ca	          0xc1ea1a	                           shr edx, 0x1a	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062cd	             0x1d0	                            add eax, edx	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062cf	          0x83e03f	                           and eax, 0x3f	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062d2	            0x29d0	                            sub eax, edx	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062d4	      0xba01000000	                              mov edx, 1	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062d9	            0x89c1	                            mov ecx, eax	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062db	          0x48d3e2	                             shl rdx, cl	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062de	          0x4889d0	                            mov rax, rdx	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062e1	          0x4809c7	                             or rdi, rax	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062e4	          0x4889fa	                            mov rdx, rdi	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062e7	          0x4863c6	                         movsxd rax, esi	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062ea	    0x488994c5f0fe	    mov qword [rbp + rax*8 - 0x110], rdx	      3183	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_11
0x40062f2	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3187	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1
0x40062f8	          0x83c001	                              add eax, 1	      3187	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1
0x40062fb	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3187	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1
0x4006301	      0xb800000000	                              mov eax, 0	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4006306	      0xb910000000	                           mov ecx, 0x10	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x400630b	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4006312	          0x4889d7	                            mov rdi, rdx	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4006315	              0xfc	                                     cld	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4006316	          0xf348ab	              rep stosq qword [rdi], rax	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4006319	            0x89f8	                            mov eax, edi	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x400631b	            0x89ca	                            mov edx, ecx	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x400631d	    0x8995d4feffff	            mov dword [rbp - 0x12c], edx	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4006323	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	      3188	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_12
0x4006329	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4006330	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4006336	          0x4889d6	                            mov rsi, rdx	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4006339	            0x89c7	                            mov edi, eax	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x400633b	      0xe8b3fdffff	              call sym.channel_fill_wfds	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4006340	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3189	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_13
0x4006346	    0x488d8de0feff	                  lea rcx, [rbp - 0x120]	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400634d	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4006354	    0x488db5f0feff	                  lea rsi, [rbp - 0x110]	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400635b	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4006361	          0x4989c8	                             mov r8, rcx	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4006364	      0xb900000000	                              mov ecx, 0	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4006369	            0x89c7	                            mov edi, eax	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x400636b	      0xe800000000	                          call 0x4006370	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4006370	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	      3191	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	CALL_14
0x4006376	    0x83bddcfeffff	cmp dword [rbp - 0x124], 0xffffffffffffffff	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x400637d	            0x750c	                           jne 0x400638b	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x400637f	      0xe800000000	                          call 0x4006384	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x4006384	            0x8b00	                    mov eax, dword [rax]	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x4006386	          0x83f804	                              cmp eax, 4	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x4006389	            0x7458	                            je 0x40063e3	      3194	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x400638b	    0x83bddcfeffff	              cmp dword [rbp - 0x124], 0	      3197	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x4006392	            0x7e55	                           jle 0x40063e9	      3197	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x4006394	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x400639a	          0x8d503f	                   lea edx, [rax + 0x3f]	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x400639d	            0x85c0	                           test eax, eax	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x400639f	           0xf48c2	                          cmovs eax, edx	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063a2	          0xc1f806	                              sar eax, 6	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063a5	            0x4898	                                    cdqe	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063a7	    0x488bb4c5f0fe	    mov rsi, qword [rbp + rax*8 - 0x110]	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063af	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063b5	              0x99	                                     cdq	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063b6	          0xc1ea1a	                           shr edx, 0x1a	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063b9	             0x1d0	                            add eax, edx	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063bb	          0x83e03f	                           and eax, 0x3f	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063be	            0x29d0	                            sub eax, edx	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063c0	      0xba01000000	                              mov edx, 1	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063c5	            0x89c1	                            mov ecx, eax	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063c7	          0x48d3e2	                             shl rdx, cl	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063ca	          0x4889d0	                            mov rax, rdx	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063cd	          0x4821f0	                            and rax, rsi	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063d0	          0x4885c0	                           test rax, rax	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063d3	            0x7407	                            je 0x40063dc	      3199	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x40063d5	      0xb800000000	                              mov eax, 0	      3200	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12
0x40063da	            0xeb13	                           jmp 0x40063ef	      3200	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12
0x40063dc	      0xe800000000	                          call 0x40063e1	      3201	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11	CALL_16
0x40063e1	            0xeb01	                           jmp 0x40063e4	      3202	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_11
0x40063e3	              0x90	                                     nop	      3195	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1	IF_10
0x40063e4	      0xe994feffff	                           jmp 0x400627d	      3205	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1
0x40063e9	              0x90	                                     nop	      3204	channel.c	FUNCTION_76	ELSE_1	ELSE_2	FOR_1
0x40063ea	      0xb801000000	                              mov eax, 1	      3226	channel.c	FUNCTION_76	ELSE_1
0x40063ef	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3227	channel.c	FUNCTION_76	ELSE_1
0x40063f3	    0x644833342528	                xor rsi, qword fs:[0x28]	      3227	channel.c	FUNCTION_76	ELSE_1
0x40063fc	            0x7405	                            je 0x4006403	      3227	channel.c	FUNCTION_76	ELSE_1
0x40063fe	      0xe800000000	                          call 0x4006403	      3227	channel.c	FUNCTION_76	ELSE_1
0x4006403	              0xc9	                                   leave	      3227	channel.c	FUNCTION_76	ELSE_1
0x4006404	              0xc3	                                     ret	      3227	channel.c	FUNCTION_76	ELSE_1
messageFromServerGtk2	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	12
0x4000a04	              0x55	                                push rbp	       512	channel.c	FUNCTION_21
0x4000a05	          0x4889e5	                            mov rbp, rsp	       512	channel.c	FUNCTION_21
0x4000a08	        0x4883ec10	                           sub rsp, 0x10	       512	channel.c	FUNCTION_21
0x4000a0c	        0x48897df8	                mov qword [rbp - 8], rdi	       512	channel.c	FUNCTION_21
0x4000a10	          0x8975f4	              mov dword [rbp - 0xc], esi	       512	channel.c	FUNCTION_21
0x4000a13	          0x8955f0	             mov dword [rbp - 0x10], edx	       512	channel.c	FUNCTION_21
0x4000a16	        0x488b45f8	                mov rax, qword [rbp - 8]	       513	channel.c	FUNCTION_21	CALL_1
0x4000a1a	            0x89c7	                            mov edi, eax	       513	channel.c	FUNCTION_21	CALL_1
0x4000a1c	      0xe865ffffff	                call sym.channel_read_fd	       513	channel.c	FUNCTION_21	CALL_1
0x4000a21	              0x90	                                     nop	       514	channel.c	FUNCTION_21
0x4000a22	              0xc9	                                   leave	       514	channel.c	FUNCTION_21
0x4000a23	              0xc3	                                     ret	       514	channel.c	FUNCTION_21
channel_collapse	ELSE,1:WHILE,1:FOR,2:DO,0:functions,0:CALL,8:IF,4:SWITCH,0	150
0x40031ce	              0x55	                                push rbp	      1731	channel.c	FUNCTION_49
0x40031cf	          0x4889e5	                            mov rbp, rsp	      1731	channel.c	FUNCTION_49
0x40031d2	        0x4883ec50	                           sub rsp, 0x50	      1731	channel.c	FUNCTION_49
0x40031d6	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1731	channel.c	FUNCTION_49
0x40031da	          0x8975b4	             mov dword [rbp - 0x4c], esi	      1731	channel.c	FUNCTION_49
0x40031dd	          0x8955b0	             mov dword [rbp - 0x50], edx	      1731	channel.c	FUNCTION_49
0x40031e0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1732	channel.c	FUNCTION_49
0x40031e3	        0x48c1e004	                              shl rax, 4	      1732	channel.c	FUNCTION_49
0x40031e7	          0x4889c2	                            mov rdx, rax	      1732	channel.c	FUNCTION_49
0x40031ea	        0x48c1e204	                              shl rdx, 4	      1732	channel.c	FUNCTION_49
0x40031ee	          0x4801d0	                            add rax, rdx	      1732	channel.c	FUNCTION_49
0x40031f1	        0x488d5020	                   lea rdx, [rax + 0x20]	      1732	channel.c	FUNCTION_49
0x40031f5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1732	channel.c	FUNCTION_49
0x40031f9	          0x4801d0	                            add rax, rdx	      1732	channel.c	FUNCTION_49
0x40031fc	        0x4883c010	                           add rax, 0x10	      1732	channel.c	FUNCTION_49
0x4003200	        0x488945e8	             mov qword [rbp - 0x18], rax	      1732	channel.c	FUNCTION_49
0x4003204	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1733	channel.c	FUNCTION_49
0x4003208	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1733	channel.c	FUNCTION_49
0x400320c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1733	channel.c	FUNCTION_49
0x4003210	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1740	channel.c	FUNCTION_49	IF_1
0x4003215	            0x740d	                            je 0x4003224	      1740	channel.c	FUNCTION_49	IF_1
0x4003217	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1740	channel.c	FUNCTION_49	IF_1
0x400321b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1740	channel.c	FUNCTION_49	IF_1
0x400321f	          0x4885c0	                           test rax, rax	      1740	channel.c	FUNCTION_49	IF_1
0x4003222	            0x750a	                           jne 0x400322e	      1740	channel.c	FUNCTION_49	IF_1
0x4003224	      0xb800000000	                              mov eax, 0	      1741	channel.c	FUNCTION_49	IF_1
0x4003229	      0xe9c3010000	                           jmp 0x40033f1	      1741	channel.c	FUNCTION_49	IF_1
0x400322e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1743	channel.c	FUNCTION_49
0x4003232	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1743	channel.c	FUNCTION_49
0x4003236	        0x488945c8	             mov qword [rbp - 0x38], rax	      1743	channel.c	FUNCTION_49
0x400323a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1744	channel.c	FUNCTION_49
0x400323e	        0x488b5008	                mov rdx, qword [rax + 8]	      1744	channel.c	FUNCTION_49
0x4003242	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1744	channel.c	FUNCTION_49
0x4003246	        0x488b4008	                mov rax, qword [rax + 8]	      1744	channel.c	FUNCTION_49
0x400324a	          0x4801d0	                            add rax, rdx	      1744	channel.c	FUNCTION_49
0x400324d	        0x4883c001	                              add rax, 1	      1744	channel.c	FUNCTION_49
0x4003251	        0x488945e0	             mov qword [rbp - 0x20], rax	      1744	channel.c	FUNCTION_49
0x4003255	        0x837db000	               cmp dword [rbp - 0x50], 0	      1745	channel.c	FUNCTION_49	IF_2
0x4003259	            0x7438	                            je 0x4003293	      1745	channel.c	FUNCTION_49	IF_2
0x400325b	            0xeb18	                           jmp 0x4003275	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x400325d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1749	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003261	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1749	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003265	        0x488945c8	             mov qword [rbp - 0x38], rax	      1749	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003269	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x400326d	        0x488b4008	                mov rax, qword [rax + 8]	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003271	        0x480145e0	            add qword [rbp - 0x20], rax 	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003275	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003279	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x400327d	          0x4885c0	                           test rax, rax	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003280	            0x7411	                            je 0x4003293	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4003282	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x4003286	          0x4889c7	                            mov rdi, rax	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x4003289	      0xe800000000	                          call 0x400328e	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x400328e	          0x4885c0	                           test rax, rax	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x4003291	            0x74ca	                            je 0x400325d	      1747	channel.c	FUNCTION_49	IF_2	WHILE_1	CALL_1
0x4003293	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1753	channel.c	FUNCTION_49	CALL_2
0x4003297	            0x89c7	                            mov edi, eax	      1753	channel.c	FUNCTION_49	CALL_2
0x4003299	      0xe800000000	                          call 0x400329e	      1753	channel.c	FUNCTION_49	CALL_2
0x400329e	        0x488945f8	                mov qword [rbp - 8], rax	      1753	channel.c	FUNCTION_49	CALL_2
0x40032a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1753	channel.c	FUNCTION_49	CALL_2
0x40032a6	        0x488945d8	             mov qword [rbp - 0x28], rax	      1753	channel.c	FUNCTION_49	CALL_2
0x40032aa	      0x48837df800	                  cmp qword [rbp - 8], 0	      1754	channel.c	FUNCTION_49	IF_3
0x40032af	            0x750a	                           jne 0x40032bb	      1754	channel.c	FUNCTION_49	IF_3
0x40032b1	      0xb800000000	                              mov eax, 0	      1755	channel.c	FUNCTION_49	IF_3
0x40032b6	      0xe936010000	                           jmp 0x40033f1	      1755	channel.c	FUNCTION_49	IF_3
0x40032bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1756	channel.c	FUNCTION_49	CALL_3
0x40032bf	        0x488b5008	                mov rdx, qword [rax + 8]	      1756	channel.c	FUNCTION_49	CALL_3
0x40032c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1756	channel.c	FUNCTION_49	CALL_3
0x40032c7	          0x488b08	                    mov rcx, qword [rax]	      1756	channel.c	FUNCTION_49	CALL_3
0x40032ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1756	channel.c	FUNCTION_49	CALL_3
0x40032ce	          0x4889ce	                            mov rsi, rcx	      1756	channel.c	FUNCTION_49	CALL_3
0x40032d1	          0x4889c7	                            mov rdi, rax	      1756	channel.c	FUNCTION_49	CALL_3
0x40032d4	      0xe800000000	                          call 0x40032d9	      1756	channel.c	FUNCTION_49	CALL_3
0x40032d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1757	channel.c	FUNCTION_49
0x40032dd	        0x488b4008	                mov rax, qword [rax + 8]	      1757	channel.c	FUNCTION_49
0x40032e1	        0x480145d8	            add qword [rbp - 0x28], rax 	      1757	channel.c	FUNCTION_49
0x40032e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1758	channel.c	FUNCTION_49	CALL_4
0x40032e9	          0x488b00	                    mov rax, qword [rax]	      1758	channel.c	FUNCTION_49	CALL_4
0x40032ec	          0x4889c7	                            mov rdi, rax	      1758	channel.c	FUNCTION_49	CALL_4
0x40032ef	      0xe800000000	                          call 0x40032f4	      1758	channel.c	FUNCTION_49	CALL_4
0x40032f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1759	channel.c	FUNCTION_49
0x40032f8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1759	channel.c	FUNCTION_49
0x40032fc	          0x488910	                    mov qword [rax], rdx	      1759	channel.c	FUNCTION_49
0x40032ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1760	channel.c	FUNCTION_49	FOR_1
0x4003303	        0x488945d0	             mov qword [rbp - 0x30], rax	      1760	channel.c	FUNCTION_49	FOR_1
0x4003307	            0xeb45	                           jmp 0x400334e	      1760	channel.c	FUNCTION_49	FOR_1
0x4003309	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1762	channel.c	FUNCTION_49	FOR_1
0x400330d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1762	channel.c	FUNCTION_49	FOR_1
0x4003311	        0x488945d0	             mov qword [rbp - 0x30], rax	      1762	channel.c	FUNCTION_49	FOR_1
0x4003315	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x4003319	        0x488b5008	                mov rdx, qword [rax + 8]	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x400331d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x4003321	          0x488b08	                    mov rcx, qword [rax]	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x4003324	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x4003328	          0x4889ce	                            mov rsi, rcx	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x400332b	          0x4889c7	                            mov rdi, rax	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x400332e	      0xe800000000	                          call 0x4003333	      1763	channel.c	FUNCTION_49	FOR_1	CALL_5
0x4003333	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1764	channel.c	FUNCTION_49	FOR_1
0x4003337	        0x488b4008	                mov rax, qword [rax + 8]	      1764	channel.c	FUNCTION_49	FOR_1
0x400333b	        0x480145d8	            add qword [rbp - 0x28], rax 	      1764	channel.c	FUNCTION_49	FOR_1
0x400333f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x4003343	          0x488b00	                    mov rax, qword [rax]	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x4003346	          0x4889c7	                            mov rdi, rax	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x4003349	      0xe800000000	                          call 0x400334e	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x400334e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1760	channel.c	FUNCTION_49	FOR_1
0x4003352	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1760	channel.c	FUNCTION_49	FOR_1
0x4003356	            0x75b1	                           jne 0x4003309	      1760	channel.c	FUNCTION_49	FOR_1
0x4003358	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1767	channel.c	FUNCTION_49
0x400335c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1767	channel.c	FUNCTION_49
0x4003360	          0x4829c2	                            sub rdx, rax	      1767	channel.c	FUNCTION_49
0x4003363	          0x4889d0	                            mov rax, rdx	      1767	channel.c	FUNCTION_49
0x4003366	          0x4889c2	                            mov rdx, rax	      1767	channel.c	FUNCTION_49
0x4003369	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1767	channel.c	FUNCTION_49
0x400336d	        0x48895008	                mov qword [rax + 8], rdx	      1767	channel.c	FUNCTION_49
0x4003371	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1770	channel.c	FUNCTION_49	FOR_2
0x4003375	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1770	channel.c	FUNCTION_49	FOR_2
0x4003379	        0x488945d0	             mov qword [rbp - 0x30], rax	      1770	channel.c	FUNCTION_49	FOR_2
0x400337d	            0xeb1c	                           jmp 0x400339b	      1770	channel.c	FUNCTION_49	FOR_2
0x400337f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1772	channel.c	FUNCTION_49	FOR_2
0x4003383	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1772	channel.c	FUNCTION_49	FOR_2
0x4003387	        0x488945d0	             mov qword [rbp - 0x30], rax	      1772	channel.c	FUNCTION_49	FOR_2
0x400338b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x400338f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x4003393	          0x4889c7	                            mov rdi, rax	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x4003396	      0xe800000000	                          call 0x400339b	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x400339b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1770	channel.c	FUNCTION_49	FOR_2
0x400339f	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1770	channel.c	FUNCTION_49	FOR_2
0x40033a3	            0x75da	                           jne 0x400337f	      1770	channel.c	FUNCTION_49	FOR_2
0x40033a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1775	channel.c	FUNCTION_49
0x40033a9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1775	channel.c	FUNCTION_49
0x40033ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1775	channel.c	FUNCTION_49
0x40033b1	        0x48895010	             mov qword [rax + 0x10], rdx	      1775	channel.c	FUNCTION_49
0x40033b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1776	channel.c	FUNCTION_49	IF_4
0x40033b9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1776	channel.c	FUNCTION_49	IF_4
0x40033bd	          0x4885c0	                           test rax, rax	      1776	channel.c	FUNCTION_49	IF_4
0x40033c0	            0x750e	                           jne 0x40033d0	      1776	channel.c	FUNCTION_49	IF_4
0x40033c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1777	channel.c	FUNCTION_49	IF_4
0x40033c6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1777	channel.c	FUNCTION_49	IF_4
0x40033ca	        0x48895018	             mov qword [rax + 0x18], rdx	      1777	channel.c	FUNCTION_49	IF_4
0x40033ce	            0xeb10	                           jmp 0x40033e0	      1777	channel.c	FUNCTION_49	IF_4
0x40033d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1779	channel.c	FUNCTION_49	ELSE_1
0x40033d4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1779	channel.c	FUNCTION_49	ELSE_1
0x40033d8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1779	channel.c	FUNCTION_49	ELSE_1
0x40033dc	        0x48895018	             mov qword [rax + 0x18], rdx	      1779	channel.c	FUNCTION_49	ELSE_1
0x40033e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1780	channel.c	FUNCTION_49	CALL_8
0x40033e4	          0x4889c7	                            mov rdi, rax	      1780	channel.c	FUNCTION_49	CALL_8
0x40033e7	      0xe800000000	                          call 0x40033ec	      1780	channel.c	FUNCTION_49	CALL_8
0x40033ec	      0xb801000000	                              mov eax, 1	      1781	channel.c	FUNCTION_49
0x40033f1	              0xc9	                                   leave	      1782	channel.c	FUNCTION_49
0x40033f2	              0xc3	                                     ret	      1782	channel.c	FUNCTION_49
ch_close_part	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,4:SWITCH,0	72
0x4001949	              0x55	                                push rbp	       985	channel.c	FUNCTION_29
0x400194a	          0x4889e5	                            mov rbp, rsp	       985	channel.c	FUNCTION_29
0x400194d	        0x4883ec20	                           sub rsp, 0x20	       985	channel.c	FUNCTION_29
0x4001951	        0x48897de8	             mov qword [rbp - 0x18], rdi	       985	channel.c	FUNCTION_29
0x4001955	          0x8975e4	             mov dword [rbp - 0x1c], esi	       985	channel.c	FUNCTION_29
0x4001958	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       986	channel.c	FUNCTION_29
0x400195b	        0x48c1e004	                              shl rax, 4	       986	channel.c	FUNCTION_29
0x400195f	          0x4889c2	                            mov rdx, rax	       986	channel.c	FUNCTION_29
0x4001962	        0x48c1e204	                              shl rdx, 4	       986	channel.c	FUNCTION_29
0x4001966	          0x4801d0	                            add rax, rdx	       986	channel.c	FUNCTION_29
0x4001969	        0x488d5010	                   lea rdx, [rax + 0x10]	       986	channel.c	FUNCTION_29
0x400196d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       986	channel.c	FUNCTION_29
0x4001971	          0x4801d0	                            add rax, rdx	       986	channel.c	FUNCTION_29
0x4001974	        0x4883c008	                              add rax, 8	       986	channel.c	FUNCTION_29
0x4001978	        0x488945f8	                mov qword [rbp - 8], rax	       986	channel.c	FUNCTION_29
0x400197c	        0x488b45f8	                mov rax, qword [rbp - 8]	       988	channel.c	FUNCTION_29	IF_1
0x4001980	            0x8b00	                    mov eax, dword [rax]	       988	channel.c	FUNCTION_29	IF_1
0x4001982	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4001985	     0xf84a4000000	                            je 0x4001a2f	       988	channel.c	FUNCTION_29	IF_1
0x400198b	        0x837de400	               cmp dword [rbp - 0x1c], 0	       990	channel.c	FUNCTION_29	IF_1	IF_2
0x400198f	            0x750f	                           jne 0x40019a0	       990	channel.c	FUNCTION_29	IF_1	IF_2
0x4001991	        0x488b45f8	                mov rax, qword [rbp - 8]	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x4001995	            0x8b00	                    mov eax, dword [rax]	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x4001997	            0x89c7	                            mov edi, eax	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x4001999	      0xe800000000	                          call 0x400199e	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x400199e	            0xeb5b	                           jmp 0x40019fb	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x40019a0	        0x837de403	               cmp dword [rbp - 0x1c], 3	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019a4	            0x7414	                            je 0x40019ba	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019aa	    0x8b9048030000	           mov edx, dword [rax + 0x348] 	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019b4	            0x8b00	                    mov eax, dword [rax]	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019b6	            0x39c2	                            cmp edx, eax	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019b8	            0x7441	                            je 0x40019fb	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019ba	        0x837de401	               cmp dword [rbp - 0x1c], 1	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019be	            0x7414	                            je 0x40019d4	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019c4	    0x8b9028010000	           mov edx, dword [rax + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019ce	            0x8b00	                    mov eax, dword [rax]	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019d0	            0x39c2	                            cmp edx, eax	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019d2	            0x7427	                            je 0x40019fb	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019d4	        0x837de402	               cmp dword [rbp - 0x1c], 2	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019d8	            0x7414	                            je 0x40019ee	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019de	    0x8b9038020000	           mov edx, dword [rax + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019e8	            0x8b00	                    mov eax, dword [rax]	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019ea	            0x39c2	                            cmp edx, eax	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019ec	            0x740d	                            je 0x40019fb	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019f2	            0x8b00	                    mov eax, dword [rax]	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019f4	            0x89c7	                            mov edi, eax	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019f6	      0xe800000000	                          call 0x40019fb	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40019fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	channel.c	FUNCTION_29	IF_1
0x40019ff	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x4001a05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1010	channel.c	FUNCTION_29	IF_1
0x4001a09	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1010	channel.c	FUNCTION_29	IF_1
0x4001a0f	            0x89c2	                            mov edx, eax	      1010	channel.c	FUNCTION_29	IF_1
0x4001a11	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1010	channel.c	FUNCTION_29	IF_1
0x4001a14	      0xbe01000000	                              mov esi, 1	      1010	channel.c	FUNCTION_29	IF_1
0x4001a19	            0x89c1	                            mov ecx, eax	      1010	channel.c	FUNCTION_29	IF_1
0x4001a1b	            0xd3e6	                             shl esi, cl	      1010	channel.c	FUNCTION_29	IF_1
0x4001a1d	            0x89f0	                            mov eax, esi	      1010	channel.c	FUNCTION_29	IF_1
0x4001a1f	            0xf7d0	                                 not eax	      1010	channel.c	FUNCTION_29	IF_1
0x4001a21	            0x21d0	                            and eax, edx	      1010	channel.c	FUNCTION_29	IF_1
0x4001a23	            0x89c2	                            mov edx, eax	      1010	channel.c	FUNCTION_29	IF_1
0x4001a25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1010	channel.c	FUNCTION_29	IF_1
0x4001a29	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1010	channel.c	FUNCTION_29	IF_1
0x4001a2f	              0x90	                                     nop	      1012	channel.c	FUNCTION_29
0x4001a30	              0xc9	                                   leave	      1012	channel.c	FUNCTION_29
0x4001a31	              0xc3	                                     ret	      1012	channel.c	FUNCTION_29
ch_log	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,6:IF,1:SWITCH,0	56
0x40001f9	              0x55	                                push rbp	       164	channel.c	FUNCTION_4
0x40001fa	          0x4889e5	                            mov rbp, rsp	       164	channel.c	FUNCTION_4
0x40001fd	    0x4881ece00000	                           sub rsp, 0xe0	       164	channel.c	FUNCTION_4
0x4000204	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       164	channel.c	FUNCTION_4
0x400020b	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       164	channel.c	FUNCTION_4
0x4000212	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       164	channel.c	FUNCTION_4
0x4000219	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       164	channel.c	FUNCTION_4
0x4000220	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       164	channel.c	FUNCTION_4
0x4000227	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       164	channel.c	FUNCTION_4
0x400022e	            0x84c0	                             test al, al	       164	channel.c	FUNCTION_4
0x4000230	            0x7420	                            je 0x4000252	       164	channel.c	FUNCTION_4
0x4000232	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       164	channel.c	FUNCTION_4
0x4000236	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       164	channel.c	FUNCTION_4
0x400023a	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       164	channel.c	FUNCTION_4
0x400023e	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       164	channel.c	FUNCTION_4
0x4000242	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       164	channel.c	FUNCTION_4
0x4000246	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       164	channel.c	FUNCTION_4
0x400024a	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       164	channel.c	FUNCTION_4
0x400024e	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       164	channel.c	FUNCTION_4
0x4000252	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	channel.c	FUNCTION_4
0x400025b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       164	channel.c	FUNCTION_4
0x4000262	            0x31c0	                            xor eax, eax	       164	channel.c	FUNCTION_4
0x4000264	    0x488b05000000	            mov rax, qword [0x0400026b] 	       165	channel.c	FUNCTION_4	IF_1
0x400026b	          0x4885c0	                           test rax, rax	       165	channel.c	FUNCTION_4	IF_1
0x400026e	     0xf848e000000	                            je 0x4000302	       165	channel.c	FUNCTION_4	IF_1
0x4000274	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x400027b	          0x4889c6	                            mov rsi, rax	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x400027e	      0xbf00000000	                              mov edi, 0	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000283	      0xe89cfeffff	                    call sym.ch_log_lead	       169	channel.c	FUNCTION_4	IF_1	CALL_1
0x4000288	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4000292	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x400029c	        0x488d4510	                   lea rax, [rbp + 0x10]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x40002a0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x40002a7	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x40002ae	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x40002b5	    0x488b05000000	            mov rax, qword [0x040002bc] 	       171	channel.c	FUNCTION_4	IF_1	CALL_3
0x40002bc	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       171	channel.c	FUNCTION_4	IF_1	CALL_3
0x40002c3	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       171	channel.c	FUNCTION_4	IF_1	CALL_3
0x40002ca	          0x4889ce	                            mov rsi, rcx	       171	channel.c	FUNCTION_4	IF_1	CALL_3
0x40002cd	          0x4889c7	                            mov rdi, rax	       171	channel.c	FUNCTION_4	IF_1	CALL_3
0x40002d0	      0xe800000000	                          call 0x40002d5	       171	channel.c	FUNCTION_4	IF_1	CALL_3
0x40002d5	    0x488b05000000	            mov rax, qword [0x040002dc] 	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x40002dc	          0x4889c6	                            mov rsi, rax	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x40002df	      0xbf0a000000	                            mov edi, 0xa	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x40002e4	      0xe800000000	                          call 0x40002e9	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x40002e9	    0x488b05000000	            mov rax, qword [0x040002f0] 	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x40002f0	          0x4889c7	                            mov rdi, rax	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x40002f3	      0xe800000000	                          call 0x40002f8	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x40002f8	    0xc70500000000	               mov dword [0x04000302], 1	       175	channel.c	FUNCTION_4	IF_1
0x4000302	              0x90	                                     nop	       177	channel.c	FUNCTION_4
0x4000303	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       177	channel.c	FUNCTION_4
0x400030a	    0x644833042528	                xor rax, qword fs:[0x28]	       177	channel.c	FUNCTION_4
0x4000313	            0x7405	                            je 0x400031a	       177	channel.c	FUNCTION_4
0x4000315	      0xe800000000	                          call 0x400031a	       177	channel.c	FUNCTION_4
0x400031a	              0xc9	                                   leave	       177	channel.c	FUNCTION_4
0x400031b	              0xc3	                                     ret	       177	channel.c	FUNCTION_4
job_channel_can_close	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	19
0x400a685	              0x55	                                push rbp	      5121	channel.c	FUNCTION_115
0x400a686	          0x4889e5	                            mov rbp, rsp	      5121	channel.c	FUNCTION_115
0x400a689	        0x4883ec08	                              sub rsp, 8	      5121	channel.c	FUNCTION_115
0x400a68d	        0x48897df8	                mov qword [rbp - 8], rdi	      5121	channel.c	FUNCTION_115
0x400a691	        0x488b45f8	                mov rax, qword [rbp - 8]	      5122	channel.c	FUNCTION_115	CALL_1
0x400a695	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5122	channel.c	FUNCTION_115	CALL_1
0x400a699	          0x4885c0	                           test rax, rax	      5122	channel.c	FUNCTION_115	CALL_1
0x400a69c	            0x741b	                            je 0x400a6b9	      5122	channel.c	FUNCTION_115	CALL_1
0x400a69e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6a2	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6a6	          0x4889c7	                            mov rdi, rax	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6a9	      0xe84d60ffff	              call sym.channel_can_close	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6ae	            0x85c0	                           test eax, eax	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6b0	            0x7407	                            je 0x400a6b9	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6b2	      0xb801000000	                              mov eax, 1	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6b7	            0xeb05	                           jmp 0x400a6be	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6b9	      0xb800000000	                              mov eax, 0	      5122	channel.c	FUNCTION_115	CALL_1
0x400a6be	              0xc9	                                   leave	      5123	channel.c	FUNCTION_115
0x400a6bf	              0xc3	                                     ret	      5123	channel.c	FUNCTION_115
drop_messages	ELSE,0:WHILE,1:FOR,0:DO,0:functions,0:CALL,3:IF,0:SWITCH,0	26
0x4004baf	              0x55	                                push rbp	      2448	channel.c	FUNCTION_60
0x4004bb0	          0x4889e5	                            mov rbp, rsp	      2448	channel.c	FUNCTION_60
0x4004bb3	        0x4883ec20	                           sub rsp, 0x20	      2448	channel.c	FUNCTION_60
0x4004bb7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2448	channel.c	FUNCTION_60
0x4004bbb	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2448	channel.c	FUNCTION_60
0x4004bbe	            0xeb26	                           jmp 0x4004be6	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004bc0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4004bc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4004bc8	      0xbe00000000	                              mov esi, 0	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4004bcd	          0x4889c7	                            mov rdi, rax	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4004bd0	      0xb800000000	                              mov eax, 0	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4004bd5	      0xe800000000	                          call 0x4004bda	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4004bda	        0x488b45f8	                mov rax, qword [rbp - 8]	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4004bde	          0x4889c7	                            mov rdi, rax	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4004be1	      0xe800000000	                          call 0x4004be6	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4004be6	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004be9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004bed	            0x89d6	                            mov esi, edx	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004bef	          0x4889c7	                            mov rdi, rax	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004bf2	      0xe800000000	                          call 0x4004bf7	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004bf7	        0x488945f8	                mov qword [rbp - 8], rax	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004bfb	      0x48837df800	                  cmp qword [rbp - 8], 0	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004c00	            0x75be	                           jne 0x4004bc0	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4004c02	              0x90	                                     nop	      2456	channel.c	FUNCTION_60
0x4004c03	              0xc9	                                   leave	      2456	channel.c	FUNCTION_60
0x4004c04	              0xc3	                                     ret	      2456	channel.c	FUNCTION_60
job_cleanup	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,7:IF,4:SWITCH,0	103
0x400aa78	              0x55	                                push rbp	      5264	channel.c	FUNCTION_120
0x400aa79	          0x4889e5	                            mov rbp, rsp	      5264	channel.c	FUNCTION_120
0x400aa7c	              0x53	                                push rbx	      5264	channel.c	FUNCTION_120
0x400aa7d	        0x4883ec78	                           sub rsp, 0x78	      5264	channel.c	FUNCTION_120
0x400aa81	        0x48897d88	             mov qword [rbp - 0x78], rdi	      5264	channel.c	FUNCTION_120
0x400aa85	    0x64488b042528	                mov rax, qword fs:[0x28]	      5264	channel.c	FUNCTION_120
0x400aa8e	        0x488945e8	             mov qword [rbp - 0x18], rax	      5264	channel.c	FUNCTION_120
0x400aa92	            0x31c0	                            xor eax, eax	      5264	channel.c	FUNCTION_120
0x400aa94	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5265	channel.c	FUNCTION_120	IF_1
0x400aa98	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5265	channel.c	FUNCTION_120	IF_1
0x400aa9b	          0x83f802	                              cmp eax, 2	      5265	channel.c	FUNCTION_120	IF_1
0x400aa9e	     0xf8538010000	                           jne 0x400abdc	      5265	channel.c	FUNCTION_120	IF_1
0x400aaa4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5269	channel.c	FUNCTION_120
0x400aaa8	    0xc74028030000	               mov dword [rax + 0x28], 3	      5269	channel.c	FUNCTION_120
0x400aaaf	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5272	channel.c	FUNCTION_120	IF_2
0x400aab3	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5272	channel.c	FUNCTION_120	IF_2
0x400aab7	          0x4885c0	                           test rax, rax	      5272	channel.c	FUNCTION_120	IF_2
0x400aaba	            0x7415	                            je 0x400aad1	      5272	channel.c	FUNCTION_120	IF_2
0x400aabc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5273	channel.c	FUNCTION_120	CALL_1
0x400aac0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5273	channel.c	FUNCTION_120	CALL_1
0x400aac4	      0xbe03000000	                              mov esi, 3	      5273	channel.c	FUNCTION_120	CALL_1
0x400aac9	          0x4889c7	                            mov rdi, rax	      5273	channel.c	FUNCTION_120	CALL_1
0x400aacc	      0xe8786effff	                  call sym.ch_close_part	      5273	channel.c	FUNCTION_120	CALL_1
0x400aad1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5275	channel.c	FUNCTION_120	IF_3
0x400aad5	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5275	channel.c	FUNCTION_120	IF_3
0x400aad9	          0x4885c0	                           test rax, rax	      5275	channel.c	FUNCTION_120	IF_3
0x400aadc	     0xf84d1000000	                            je 0x400abb3	      5275	channel.c	FUNCTION_120	IF_3
0x400aae2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400aae6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400aaea	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400aaee	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400aaf2	      0xbe00000000	                              mov esi, 0	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400aaf7	          0x4889c7	                            mov rdi, rax	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400aafa	      0xb800000000	                              mov eax, 0	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400aaff	      0xe800000000	                          call 0x400ab04	      5282	channel.c	FUNCTION_120	IF_3	CALL_2
0x400ab04	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5283	channel.c	FUNCTION_120	IF_3
0x400ab08	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5283	channel.c	FUNCTION_120	IF_3
0x400ab0b	          0x8d5001	                      lea edx, [rax + 1]	      5283	channel.c	FUNCTION_120	IF_3
0x400ab0e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5283	channel.c	FUNCTION_120	IF_3
0x400ab12	          0x895058	             mov dword [rax + 0x58], edx	      5283	channel.c	FUNCTION_120	IF_3
0x400ab15	    0xc745b0090000	               mov dword [rbp - 0x50], 9	      5284	channel.c	FUNCTION_120	IF_3
0x400ab1c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5285	channel.c	FUNCTION_120	IF_3
0x400ab20	        0x488945b8	             mov qword [rbp - 0x48], rax	      5285	channel.c	FUNCTION_120	IF_3
0x400ab24	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5286	channel.c	FUNCTION_120	IF_3
0x400ab2b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5287	channel.c	FUNCTION_120	IF_3
0x400ab2f	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5287	channel.c	FUNCTION_120	IF_3
0x400ab32	            0x4898	                                    cdqe	      5287	channel.c	FUNCTION_120	IF_3
0x400ab34	        0x488945c8	             mov qword [rbp - 0x38], rax	      5287	channel.c	FUNCTION_120	IF_3
0x400ab38	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab3c	        0x488b5848	            mov rbx, qword [rax + 0x48] 	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab40	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab44	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab48	          0x4889c7	                            mov rdi, rax	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab4b	      0xe800000000	                          call 0x400ab50	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab50	            0x89c7	                            mov edi, eax	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab52	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab56	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab5a	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab5e	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab62	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab64	              0x53	                                push rbx	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab65	            0x6a01	                                  push 1	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab67	        0x488d4d9c	                   lea rcx, [rbp - 0x64]	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab6b	              0x51	                                push rcx	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab6c	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab6e	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab70	    0x41b900000000	                              mov r9d, 0	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab76	          0x4989f0	                             mov r8, rsi	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab79	      0xb902000000	                              mov ecx, 2	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab7e	            0x89fe	                            mov esi, edi	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab80	          0x4889c7	                            mov rdi, rax	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab83	      0xe800000000	                          call 0x400ab88	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab88	        0x4883c430	                           add rsp, 0x30	      5288	channel.c	FUNCTION_120	IF_3	CALL_4
0x400ab8c	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5291	channel.c	FUNCTION_120	IF_3	CALL_5
0x400ab90	          0x4889c7	                            mov rdi, rax	      5291	channel.c	FUNCTION_120	IF_3	CALL_5
0x400ab93	      0xe800000000	                          call 0x400ab98	      5291	channel.c	FUNCTION_120	IF_3	CALL_5
0x400ab98	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5292	channel.c	FUNCTION_120	IF_3
0x400ab9c	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5292	channel.c	FUNCTION_120	IF_3
0x400ab9f	          0x8d50ff	                      lea edx, [rax - 1]	      5292	channel.c	FUNCTION_120	IF_3
0x400aba2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5292	channel.c	FUNCTION_120	IF_3
0x400aba6	          0x895058	             mov dword [rax + 0x58], edx	      5292	channel.c	FUNCTION_120	IF_3
0x400aba9	    0xc70500000000	               mov dword [0x0400abb3], 1	      5293	channel.c	FUNCTION_120	IF_3
0x400abb3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abb7	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abba	            0x85c0	                           test eax, eax	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abbc	            0x751f	                           jne 0x400abdd	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abbe	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abc2	          0x4889c7	                            mov rdi, rax	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abc5	      0xe880faffff	       call sym.job_channel_still_useful	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abca	            0x85c0	                           test eax, eax	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abcc	            0x750f	                           jne 0x400abdd	      5298	channel.c	FUNCTION_120	IF_4	CALL_6
0x400abce	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5303	channel.c	FUNCTION_120	IF_4	CALL_7
0x400abd2	          0x4889c7	                            mov rdi, rax	      5303	channel.c	FUNCTION_120	IF_4	CALL_7
0x400abd5	      0xe803faffff	                       call sym.job_free	      5303	channel.c	FUNCTION_120	IF_4	CALL_7
0x400abda	            0xeb01	                           jmp 0x400abdd	      5303	channel.c	FUNCTION_120	IF_4	CALL_7
0x400abdc	              0x90	                                     nop	      5266	channel.c	FUNCTION_120	IF_1
0x400abdd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5305	channel.c	FUNCTION_120
0x400abe1	    0x644833042528	                xor rax, qword fs:[0x28]	      5305	channel.c	FUNCTION_120
0x400abea	            0x7405	                            je 0x400abf1	      5305	channel.c	FUNCTION_120
0x400abec	      0xe800000000	                          call 0x400abf1	      5305	channel.c	FUNCTION_120
0x400abf1	        0x488b5df8	                mov rbx, qword [rbp - 8]	      5305	channel.c	FUNCTION_120
0x400abf5	              0xc9	                                   leave	      5305	channel.c	FUNCTION_120
0x400abf6	              0xc3	                                     ret	      5305	channel.c	FUNCTION_120
add_channel	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,2:SWITCH,0	68
0x400043f	              0x55	                                push rbp	       263	channel.c	ELSE_1	FUNCTION_7
0x4000440	          0x4889e5	                            mov rbp, rsp	       263	channel.c	ELSE_1	FUNCTION_7
0x4000443	        0x4883ec10	                           sub rsp, 0x10	       263	channel.c	ELSE_1	FUNCTION_7
0x4000447	      0xbfc0040000	                          mov edi, 0x4c0	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x400044c	      0xe800000000	                          call 0x4000451	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x4000451	        0x488945f8	                mov qword [rbp - 8], rax	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x4000455	      0x48837df800	                  cmp qword [rbp - 8], 0	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x400045a	            0x750a	                           jne 0x4000466	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x400045c	      0xb800000000	                              mov eax, 0	       268	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4000461	      0xe9eb000000	                           jmp 0x4000551	       268	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4000466	    0x8b0500000000	            mov eax, dword [0x0400046c] 	       270	channel.c	ELSE_1	FUNCTION_7
0x400046c	          0x8d5001	                      lea edx, [rax + 1]	       270	channel.c	ELSE_1	FUNCTION_7
0x400046f	    0x891500000000	            mov dword [0x04000475], edx 	       270	channel.c	ELSE_1	FUNCTION_7
0x4000475	        0x488b55f8	                mov rdx, qword [rbp - 8]	       270	channel.c	ELSE_1	FUNCTION_7
0x4000479	          0x894210	             mov dword [rdx + 0x10], eax	       270	channel.c	ELSE_1	FUNCTION_7
0x400047c	        0x488b45f8	                mov rax, qword [rbp - 8]	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4000480	      0xbe00000000	                              mov esi, 0	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4000485	          0x4889c7	                            mov rdi, rax	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4000488	      0xb800000000	                              mov eax, 0	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x400048d	      0xe800000000	                          call 0x4000492	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4000492	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4000499	            0xeb6a	                           jmp 0x4000505	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x400049b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x400049f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004a2	        0x48c1e004	                              shl rax, 4	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004a6	          0x4889c1	                            mov rcx, rax	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004a9	        0x48c1e104	                              shl rcx, 4	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004ad	          0x4801c8	                            add rax, rcx	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004b0	          0x4801d0	                            add rax, rdx	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004b3	        0x4883c018	                           add rax, 0x18	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004b7	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004bd	        0x488b55f8	                mov rdx, qword [rbp - 8]	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004c1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004c4	        0x48c1e004	                              shl rax, 4	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004c8	          0x4889c1	                            mov rcx, rax	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004cb	        0x48c1e104	                              shl rcx, 4	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004cf	          0x4801c8	                            add rax, rcx	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004d2	          0x4801d0	                            add rax, rdx	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004d5	        0x4883c01c	                           add rax, 0x1c	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004d9	    0xc70000000000	                      mov dword [rax], 0	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004df	        0x488b55f8	                mov rdx, qword [rbp - 8]	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004e3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004e6	        0x48c1e004	                              shl rax, 4	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004ea	          0x4889c1	                            mov rcx, rax	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004ed	        0x48c1e104	                              shl rcx, 4	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004f1	          0x4801c8	                            add rax, rcx	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004f4	          0x4801d0	                            add rax, rdx	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004f7	        0x4883c028	                           add rax, 0x28	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x40004fb	    0xc700d0070000	                  mov dword [rax], 0x7d0	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4000501	        0x8345f401	                add dword [rbp - 0xc], 1	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4000505	        0x837df403	                cmp dword [rbp - 0xc], 3	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4000509	            0x7690	                           jbe 0x400049b	       273	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x400050b	    0x488b05000000	            mov rax, qword [0x04000512] 	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4000512	          0x4885c0	                           test rax, rax	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4000515	            0x741d	                            je 0x4000534	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4000517	    0x488b05000000	            mov rax, qword [0x0400051e] 	       287	channel.c	ELSE_1	FUNCTION_7	IF_2
0x400051e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       287	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4000522	        0x48895008	                mov qword [rax + 8], rdx	       287	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4000526	    0x488b15000000	            mov rdx, qword [0x0400052d] 	       288	channel.c	ELSE_1	FUNCTION_7	IF_2
0x400052d	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4000531	          0x488910	                    mov qword [rax], rdx	       288	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4000534	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	channel.c	ELSE_1	FUNCTION_7
0x4000538	    0x488905000000	            mov qword [0x0400053f], rax 	       290	channel.c	ELSE_1	FUNCTION_7
0x400053f	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	channel.c	ELSE_1	FUNCTION_7
0x4000543	    0xc780b4040000	              mov dword [rax + 0x4b4], 1	       292	channel.c	ELSE_1	FUNCTION_7
0x400054d	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	channel.c	ELSE_1	FUNCTION_7
0x4000551	              0xc9	                                   leave	       294	channel.c	ELSE_1	FUNCTION_7
0x4000552	              0xc3	                                     ret	       294	channel.c	ELSE_1	FUNCTION_7
job_start	ELSE,7:WHILE,0:FOR,4:DO,0:functions,0:CALL,38:IF,23:SWITCH,0	356
0x400b13e	              0x55	                                push rbp	      5526	channel.c	FUNCTION_130
0x400b13f	          0x4889e5	                            mov rbp, rsp	      5526	channel.c	FUNCTION_130
0x400b142	              0x53	                                push rbx	      5526	channel.c	FUNCTION_130
0x400b143	    0x4881ec580400	                          sub rsp, 0x458	      5526	channel.c	FUNCTION_130
0x400b14a	    0x4889bdb8fbff	            mov qword [rbp - 0x448], rdi	      5526	channel.c	FUNCTION_130
0x400b151	    0x4889b5b0fbff	            mov qword [rbp - 0x450], rsi	      5526	channel.c	FUNCTION_130
0x400b158	    0x488995a8fbff	            mov qword [rbp - 0x458], rdx	      5526	channel.c	FUNCTION_130
0x400b15f	    0x64488b042528	                mov rax, qword fs:[0x28]	      5526	channel.c	FUNCTION_130
0x400b168	        0x488945e8	             mov qword [rbp - 0x18], rax	      5526	channel.c	FUNCTION_130
0x400b16c	            0x31c0	                            xor eax, eax	      5526	channel.c	FUNCTION_130
0x400b16e	    0x48c785e8fbff	              mov qword [rbp - 0x418], 0	      5528	channel.c	FUNCTION_130
0x400b179	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	      5529	channel.c	FUNCTION_130
0x400b184	    0xc785c4fbffff	              mov dword [rbp - 0x43c], 0	      5530	channel.c	FUNCTION_130
0x400b18e	      0xe800000000	                          call 0x400b193	      5540	channel.c	FUNCTION_130	CALL_1
0x400b193	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	      5540	channel.c	FUNCTION_130	CALL_1
0x400b19a	    0x4883bdf0fbff	              cmp qword [rbp - 0x410], 0	      5541	channel.c	FUNCTION_130	IF_1
0x400b1a2	            0x750a	                           jne 0x400b1ae	      5541	channel.c	FUNCTION_130	IF_1
0x400b1a4	      0xb800000000	                              mov eax, 0	      5542	channel.c	FUNCTION_130	IF_1
0x400b1a9	      0xe9ec050000	                           jmp 0x400b79a	      5542	channel.c	FUNCTION_130	IF_1
0x400b1ae	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5544	channel.c	FUNCTION_130
0x400b1b5	    0xc74028000000	               mov dword [rax + 0x28], 0	      5544	channel.c	FUNCTION_130
0x400b1bc	    0x4883bda8fbff	              cmp qword [rbp - 0x458], 0	      5549	channel.c	FUNCTION_130	IF_2
0x400b1c4	            0x7421	                            je 0x400b1e7	      5549	channel.c	FUNCTION_130	IF_2
0x400b1c6	    0x488b95a8fbff	            mov rdx, qword [rbp - 0x458]	      5550	channel.c	FUNCTION_130	IF_2
0x400b1cd	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5550	channel.c	FUNCTION_130	IF_2
0x400b1d4	          0x4889d6	                            mov rsi, rdx	      5550	channel.c	FUNCTION_130	IF_2
0x400b1d7	      0xba6f000000	                           mov edx, 0x6f	      5550	channel.c	FUNCTION_130	IF_2
0x400b1dc	          0x4889c7	                            mov rdi, rax	      5550	channel.c	FUNCTION_130	IF_2
0x400b1df	          0x4889d1	                            mov rcx, rdx	      5550	channel.c	FUNCTION_130	IF_2
0x400b1e2	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5550	channel.c	FUNCTION_130	IF_2
0x400b1e5	            0xeb45	                           jmp 0x400b22c	      5550	channel.c	FUNCTION_130	IF_2
0x400b1e7	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5554	channel.c	FUNCTION_130	ELSE_1	CALL_3
0x400b1ee	          0x4889c7	                            mov rdi, rax	      5554	channel.c	FUNCTION_130	ELSE_1	CALL_3
0x400b1f1	      0xe800000000	                          call 0x400b1f6	      5554	channel.c	FUNCTION_130	ELSE_1	CALL_3
0x400b1f6	    0xc78528fcffff	              mov dword [rbp - 0x3d8], 0	      5555	channel.c	FUNCTION_130	ELSE_1
0x400b200	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b207	        0x488d7810	                   lea rdi, [rax + 0x10]	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b20b	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b212	      0xb930000000	                           mov ecx, 0x30	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b217	      0xbaffce0110	                     mov edx, 0x1001ceff	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b21c	          0x4889c6	                            mov rsi, rax	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b21f	      0xe800000000	                          call 0x400b224	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b224	            0x85c0	                           test eax, eax	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b226	     0xf8428050000	                            je 0x400b754	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400b22c	    0xc785ccfbffff	              mov dword [rbp - 0x434], 1	      5564	channel.c	FUNCTION_130	FOR_1
0x400b236	      0xe98d000000	                           jmp 0x400b2c8	      5564	channel.c	FUNCTION_130	FOR_1
0x400b23b	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b241	    0x8b95ccfbffff	            mov edx, dword [rbp - 0x434]	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b247	          0x83ea01	                              sub edx, 1	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b24a	      0xbe00000100	                        mov esi, 0x10000	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b24f	            0x89d1	                            mov ecx, edx	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b251	            0xd3e6	                             shl esi, cl	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b253	            0x89f2	                            mov edx, esi	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b255	            0x21d0	                            and eax, edx	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b257	            0x85c0	                           test eax, eax	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b259	            0x7466	                            je 0x400b2c1	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b25b	    0x8b85ccfbffff	            mov eax, dword [rbp - 0x434]	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b261	        0x4883c004	                              add rax, 4	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b265	    0x8b848528fcff	    mov eax, dword [rbp + rax*4 - 0x3d8]	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b26c	          0x83f802	                              cmp eax, 2	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b26f	            0x7550	                           jne 0x400b2c1	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b271	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b277	    0x8b95ccfbffff	            mov edx, dword [rbp - 0x434]	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b27d	          0x83ea01	                              sub edx, 1	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b280	      0xbe00000800	                        mov esi, 0x80000	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b285	            0x89d1	                            mov ecx, edx	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b287	            0xd3e6	                             shl esi, cl	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b289	            0x89f2	                            mov edx, esi	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b28b	            0x21d0	                            and eax, edx	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b28d	            0x85c0	                           test eax, eax	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b28f	            0x7419	                            je 0x400b2aa	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b291	    0x8b85ccfbffff	            mov eax, dword [rbp - 0x434]	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b297	        0x4883c026	                           add rax, 0x26	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b29b	    0x488b84c520fc	    mov rax, qword [rbp + rax*8 - 0x3e0]	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b2a3	           0xfb600	                   movzx eax, byte [rax]	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b2a6	            0x84c0	                             test al, al	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b2a8	            0x7517	                           jne 0x400b2c1	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b2aa	      0xbf00000000	                              mov edi, 0	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400b2af	      0xe800000000	                          call 0x400b2b4	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400b2b4	          0x4889c7	                            mov rdi, rax	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400b2b7	      0xe800000000	                          call 0x400b2bc	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400b2bc	      0xe99d040000	                           jmp 0x400b75e	      5571	channel.c	FUNCTION_130	FOR_1	IF_4
0x400b2c1	    0x8385ccfbffff	              add dword [rbp - 0x434], 1	      5564	channel.c	FUNCTION_130	FOR_1
0x400b2c8	    0x83bdccfbffff	              cmp dword [rbp - 0x434], 3	      5564	channel.c	FUNCTION_130	FOR_1
0x400b2cf	     0xf8666ffffff	                           jbe 0x400b23b	      5564	channel.c	FUNCTION_130	FOR_1
0x400b2d5	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5574	channel.c	FUNCTION_130	IF_5
0x400b2db	      0x2500000400	                        and eax, 0x40000	      5574	channel.c	FUNCTION_130	IF_5
0x400b2e0	            0x85c0	                           test eax, eax	      5574	channel.c	FUNCTION_130	IF_5
0x400b2e2	     0xf8440010000	                            je 0x400b428	      5574	channel.c	FUNCTION_130	IF_5
0x400b2e8	    0x8b8544fcffff	            mov eax, dword [rbp - 0x3bc]	      5574	channel.c	FUNCTION_130	IF_5
0x400b2ee	          0x83f803	                              cmp eax, 3	      5574	channel.c	FUNCTION_130	IF_5
0x400b2f1	     0xf8531010000	                           jne 0x400b428	      5574	channel.c	FUNCTION_130	IF_5
0x400b2f7	    0x48c785d8fbff	              mov qword [rbp - 0x428], 0	      5576	channel.c	FUNCTION_130	IF_5
0x400b302	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x400b308	      0x2500000004	         and eax, loc.imp.list_append_tv	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x400b30d	            0x85c0	                           test eax, eax	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x400b30f	            0x743e	                            je 0x400b34f	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x400b311	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x400b317	            0x89c7	                            mov edi, eax	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x400b319	      0xe800000000	                          call 0x400b31e	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x400b31e	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x400b325	    0x4883bdd8fbff	              cmp qword [rbp - 0x428], 0	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x400b32d	            0x755e	                           jne 0x400b38d	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x400b32f	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b335	          0x4863d8	                         movsxd rbx, eax	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b338	      0xbf00000000	                              mov edi, 0	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b33d	      0xe800000000	                          call 0x400b342	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b342	          0x4889de	                            mov rsi, rbx	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b345	          0x4889c7	                            mov rdi, rax	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b348	      0xe800000000	                          call 0x400b34d	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b34d	            0xeb3e	                           jmp 0x400b38d	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400b34f	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x400b355	      0x2500002000	                       and eax, 0x200000	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x400b35a	            0x85c0	                           test eax, eax	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x400b35c	            0x7514	                           jne 0x400b372	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x400b35e	      0xbf00000000	                              mov edi, 0	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400b363	      0xe800000000	                          call 0x400b368	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400b368	          0x4889c7	                            mov rdi, rax	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400b36b	      0xe800000000	                          call 0x400b370	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400b370	            0xeb1b	                           jmp 0x400b38d	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400b372	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400b379	      0xbe00000000	                              mov esi, 0	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400b37e	          0x4889c7	                            mov rdi, rax	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400b381	      0xe800000000	                          call 0x400b386	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400b386	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400b38d	    0x4883bdd8fbff	              cmp qword [rbp - 0x428], 0	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x400b395	     0xf84bc030000	                            je 0x400b757	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x400b39b	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x400b3a2	        0x488b4008	                mov rax, qword [rax + 8]	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x400b3a6	          0x4885c0	                           test rax, rax	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x400b3a9	            0x756b	                           jne 0x400b416	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x400b3ab	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400b3b1	      0x2500000004	         and eax, loc.imp.list_append_tv	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400b3b6	            0x85c0	                           test eax, eax	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400b3b8	            0x7429	                            je 0x400b3e3	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400b3ba	    0x8b957cfdffff	            mov edx, dword [rbp - 0x284]	      5600	channel.c	FUNCTION_130	IF_5	IF_10	IF_11	CALL_13
0x400b3c0	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5600	channel.c	FUNCTION_130	IF_5	IF_10	IF_11	CALL_13
0x400b3c4	      0xbe00000000	                              mov esi, 0	      5600	channel.c	FUNCTION_130	IF_5	IF_10	IF_11	CALL_13
0x400b3c9	          0x4889c7	                            mov rdi, rax	      5600	channel.c	FUNCTION_130	IF_5	IF_10	IF_11	CALL_13
0x400b3cc	      0xb800000000	                              mov eax, 0	      5600	channel.c	FUNCTION_130	IF_5	IF_10	IF_11	CALL_13
0x400b3d1	      0xe800000000	                          call 0x400b3d6	      5600	channel.c	FUNCTION_130	IF_5	IF_10	IF_11	CALL_13
0x400b3d6	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5601	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400b3da	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	      5601	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400b3e1	            0xeb0e	                           jmp 0x400b3f1	      5601	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400b3e3	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      5604	channel.c	FUNCTION_130	IF_5	IF_10	ELSE_4
0x400b3ea	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	      5604	channel.c	FUNCTION_130	IF_5	IF_10	ELSE_4
0x400b3f1	      0xbf00000000	                              mov edi, 0	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_15
0x400b3f6	      0xe800000000	                          call 0x400b3fb	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_15
0x400b3fb	          0x4889c2	                            mov rdx, rax	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_15
0x400b3fe	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_15
0x400b405	          0x4889c6	                            mov rsi, rax	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_15
0x400b408	          0x4889d7	                            mov rdi, rdx	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_15
0x400b40b	      0xe800000000	                          call 0x400b410	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_15
0x400b410	              0x90	                                     nop	      5606	channel.c	FUNCTION_130	IF_5	IF_10
0x400b411	      0xe948030000	                           jmp 0x400b75e	      5606	channel.c	FUNCTION_130	IF_5	IF_10
0x400b416	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5608	channel.c	FUNCTION_130	IF_5
0x400b41d	    0x488b95d8fbff	            mov rdx, qword [rbp - 0x428]	      5608	channel.c	FUNCTION_130	IF_5
0x400b424	        0x48895050	             mov qword [rax + 0x50], rdx	      5608	channel.c	FUNCTION_130	IF_5
0x400b428	    0x488d9520fcff	                  lea rdx, [rbp - 0x3e0]	      5611	channel.c	FUNCTION_130	CALL_16
0x400b42f	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5611	channel.c	FUNCTION_130	CALL_16
0x400b436	          0x4889d6	                            mov rsi, rdx	      5611	channel.c	FUNCTION_130	CALL_16
0x400b439	          0x4889c7	                            mov rdi, rax	      5611	channel.c	FUNCTION_130	CALL_16
0x400b43c	      0xe800000000	                          call 0x400b441	      5611	channel.c	FUNCTION_130	CALL_16
0x400b441	    0x4883bdb0fbff	              cmp qword [rbp - 0x450], 0	      5614	channel.c	FUNCTION_130	IF_12
0x400b449	     0xf84f4000000	                            je 0x400b543	      5614	channel.c	FUNCTION_130	IF_12
0x400b44f	    0xc785c8fbffff	              mov dword [rbp - 0x438], 0	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b459	            0xeb16	                           jmp 0x400b471	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b45b	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5618	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b461	          0x83c001	                              add eax, 1	      5618	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b464	    0x8985c4fbffff	            mov dword [rbp - 0x43c], eax	      5618	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b46a	    0x8385c8fbffff	              add dword [rbp - 0x438], 1	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b471	    0x8b85c8fbffff	            mov eax, dword [rbp - 0x438]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b477	            0x4898	                                    cdqe	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b479	    0x488d14c50000	                        lea rdx, [rax*8]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b481	    0x488b85b0fbff	            mov rax, qword [rbp - 0x450]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b488	          0x4801d0	                            add rax, rdx	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b48b	          0x488b00	                    mov rax, qword [rax]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b48e	          0x4885c0	                           test rax, rax	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b491	            0x75c8	                           jne 0x400b45b	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400b493	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5619	channel.c	FUNCTION_130	IF_12	CALL_17
0x400b499	          0x83c001	                              add eax, 1	      5619	channel.c	FUNCTION_130	IF_12	CALL_17
0x400b49c	            0x4898	                                    cdqe	      5619	channel.c	FUNCTION_130	IF_12	CALL_17
0x400b49e	          0xc1e003	                              shl eax, 3	      5619	channel.c	FUNCTION_130	IF_12	CALL_17
0x400b4a1	            0x89c7	                            mov edi, eax	      5619	channel.c	FUNCTION_130	IF_12	CALL_17
0x400b4a3	      0xe800000000	                          call 0x400b4a8	      5619	channel.c	FUNCTION_130	IF_12	CALL_17
0x400b4a8	    0x488985d0fbff	            mov qword [rbp - 0x430], rax	      5619	channel.c	FUNCTION_130	IF_12	CALL_17
0x400b4af	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x400b4b6	          0x4885c0	                           test rax, rax	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x400b4b9	     0xf849b020000	                            je 0x400b75a	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x400b4bf	    0xc785c8fbffff	              mov dword [rbp - 0x438], 0	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400b4c9	            0xeb47	                           jmp 0x400b512	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400b4cb	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4d2	    0x8b95c8fbffff	            mov edx, dword [rbp - 0x438]	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4d8	          0x4863d2	                         movsxd rdx, edx	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4db	        0x48c1e203	                              shl rdx, 3	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4df	        0x488d1c10	                    lea rbx, [rax + rdx]	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4e3	    0x8b85c8fbffff	            mov eax, dword [rbp - 0x438]	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4e9	            0x4898	                                    cdqe	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4eb	    0x488d14c50000	                        lea rdx, [rax*8]	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4f3	    0x488b85b0fbff	            mov rax, qword [rbp - 0x450]	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4fa	          0x4801d0	                            add rax, rdx	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b4fd	          0x488b00	                    mov rax, qword [rax]	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b500	          0x4889c7	                            mov rdi, rax	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b503	      0xe800000000	                          call 0x400b508	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b508	          0x488903	                    mov qword [rbx], rax	      5623	channel.c	FUNCTION_130	IF_12	CALL_18
0x400b50b	    0x8385c8fbffff	              add dword [rbp - 0x438], 1	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400b512	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400b518	    0x3985c8fbffff	           cmp dword [rbp - 0x438], eax 	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400b51e	            0x7cab	                            jl 0x400b4cb	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400b520	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5624	channel.c	FUNCTION_130	IF_12
0x400b527	    0x8b95c4fbffff	            mov edx, dword [rbp - 0x43c]	      5624	channel.c	FUNCTION_130	IF_12
0x400b52d	          0x4863d2	                         movsxd rdx, edx	      5624	channel.c	FUNCTION_130	IF_12
0x400b530	        0x48c1e203	                              shl rdx, 3	      5624	channel.c	FUNCTION_130	IF_12
0x400b534	          0x4801d0	                            add rax, rdx	      5624	channel.c	FUNCTION_130	IF_12
0x400b537	    0x48c700000000	                      mov qword [rax], 0	      5624	channel.c	FUNCTION_130	IF_12
0x400b53e	      0xe9fd000000	                           jmp 0x400b640	      5624	channel.c	FUNCTION_130	IF_12
0x400b543	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400b54a	            0x8b00	                    mov eax, dword [rax]	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400b54c	          0x83f802	                              cmp eax, 2	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400b54f	            0x756e	                           jne 0x400b5bf	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400b551	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5631	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400b558	        0x488b4008	                mov rax, qword [rax + 8]	      5631	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400b55c	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      5631	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400b563	    0x4883bde8fbff	              cmp qword [rbp - 0x418], 0	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400b56b	            0x740e	                            je 0x400b57b	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400b56d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400b574	           0xfb600	                   movzx eax, byte [rax]	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400b577	            0x84c0	                             test al, al	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400b579	            0x7517	                           jne 0x400b592	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400b57b	      0xbf00000000	                              mov edi, 0	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_20
0x400b580	      0xe800000000	                          call 0x400b585	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_20
0x400b585	          0x4889c7	                            mov rdi, rax	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_20
0x400b588	      0xe800000000	                          call 0x400b58d	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_20
0x400b58d	      0xe9cc010000	                           jmp 0x400b75e	      5635	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400b592	    0x488d95c4fbff	                  lea rdx, [rbp - 0x43c]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b599	    0x488d8dd0fbff	                  lea rcx, [rbp - 0x430]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b5a0	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b5a7	          0x4889ce	                            mov rsi, rcx	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b5aa	          0x4889c7	                            mov rdi, rax	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b5ad	      0xe800000000	                          call 0x400b5b2	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b5b2	            0x85c0	                           test eax, eax	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b5b4	     0xf8586000000	                           jne 0x400b640	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_21
0x400b5ba	      0xe99f010000	                           jmp 0x400b75e	      5639	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16
0x400b5bf	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5c6	            0x8b00	                    mov eax, dword [rax]	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5c8	          0x83f805	                              cmp eax, 5	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5cb	            0x7522	                           jne 0x400b5ef	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5cd	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5d4	        0x488b4008	                mov rax, qword [rax + 8]	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5d8	          0x4885c0	                           test rax, rax	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5db	            0x7412	                            je 0x400b5ef	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5dd	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5e4	        0x488b4008	                mov rax, qword [rax + 8]	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5e8	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5eb	            0x85c0	                           test eax, eax	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5ed	            0x7f17	                            jg 0x400b606	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b5ef	      0xbf00000000	                              mov edi, 0	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_23
0x400b5f4	      0xe800000000	                          call 0x400b5f9	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_23
0x400b5f9	          0x4889c7	                            mov rdi, rax	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_23
0x400b5fc	      0xe800000000	                          call 0x400b601	      5645	channel.c	FUNCTION_130	ELSE_6	IF_17	CALL_23
0x400b601	      0xe958010000	                           jmp 0x400b75e	      5646	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400b606	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5650	channel.c	FUNCTION_130	ELSE_7
0x400b60d	        0x488b4008	                mov rax, qword [rax + 8]	      5650	channel.c	FUNCTION_130	ELSE_7
0x400b611	    0x488985f8fbff	            mov qword [rbp - 0x408], rax	      5650	channel.c	FUNCTION_130	ELSE_7
0x400b618	    0x488d95c4fbff	                  lea rdx, [rbp - 0x43c]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b61f	    0x488d8dd0fbff	                  lea rcx, [rbp - 0x430]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b626	    0x488b85f8fbff	            mov rax, qword [rbp - 0x408]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b62d	          0x4889ce	                            mov rsi, rcx	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b630	          0x4889c7	                            mov rdi, rax	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b633	      0xe800000000	                          call 0x400b638	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b638	            0x85c0	                           test eax, eax	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b63a	     0xf841d010000	                            je 0x400b75d	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_24
0x400b640	    0x488b95d0fbff	            mov rdx, qword [rbp - 0x430]	      5662	channel.c	FUNCTION_130
0x400b647	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5662	channel.c	FUNCTION_130
0x400b64e	        0x48895068	             mov qword [rax + 0x68], rdx	      5662	channel.c	FUNCTION_130
0x400b652	      0xe800000000	                          call 0x400b657	      5665	channel.c	FUNCTION_130	IF_20	CALL_26
0x400b657	            0x85c0	                           test eax, eax	      5665	channel.c	FUNCTION_130	IF_20	CALL_26
0x400b659	     0xf84b0000000	                            je 0x400b70f	      5665	channel.c	FUNCTION_130	IF_20	CALL_26
0x400b65f	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5669	channel.c	FUNCTION_130	IF_20	CALL_27
0x400b666	      0xbac8000000	                           mov edx, 0xc8	      5669	channel.c	FUNCTION_130	IF_20	CALL_27
0x400b66b	      0xbe01000000	                              mov esi, 1	      5669	channel.c	FUNCTION_130	IF_20	CALL_27
0x400b670	          0x4889c7	                            mov rdi, rax	      5669	channel.c	FUNCTION_130	IF_20	CALL_27
0x400b673	      0xe800000000	                          call 0x400b678	      5669	channel.c	FUNCTION_130	IF_20	CALL_27
0x400b678	    0xc785c8fbffff	              mov dword [rbp - 0x438], 0	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400b682	            0xeb50	                           jmp 0x400b6d4	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400b684	    0x83bdc8fbffff	              cmp dword [rbp - 0x438], 0	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x400b68b	            0x7e14	                           jle 0x400b6a1	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x400b68d	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400b694	      0xbe00000000	                              mov esi, 0	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400b699	          0x4889c7	                            mov rdi, rax	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400b69c	      0xe800000000	                          call 0x400b6a1	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400b6a1	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6a8	    0x8b95c8fbffff	            mov edx, dword [rbp - 0x438]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6ae	          0x4863d2	                         movsxd rdx, edx	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6b1	        0x48c1e203	                              shl rdx, 3	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6b5	          0x4801d0	                            add rax, rdx	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6b8	          0x488b10	                    mov rdx, qword [rax]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6bb	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6c2	          0x4889d6	                            mov rsi, rdx	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6c5	          0x4889c7	                            mov rdi, rax	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6c8	      0xe800000000	                          call 0x400b6cd	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_29
0x400b6cd	    0x8385c8fbffff	              add dword [rbp - 0x438], 1	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400b6d4	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400b6da	    0x3985c8fbffff	           cmp dword [rbp - 0x438], eax 	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400b6e0	            0x7ca2	                            jl 0x400b684	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400b6e2	    0x488b8510fcff	            mov rax, qword [rbp - 0x3f0]	      5676	channel.c	FUNCTION_130	IF_20	CALL_30
0x400b6e9	          0x4889c2	                            mov rdx, rax	      5676	channel.c	FUNCTION_130	IF_20	CALL_30
0x400b6ec	      0xbe00000000	                              mov esi, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_30
0x400b6f1	      0xbf00000000	                              mov edi, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_30
0x400b6f6	      0xb800000000	                              mov eax, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_30
0x400b6fb	      0xe800000000	                          call 0x400b700	      5676	channel.c	FUNCTION_130	IF_20	CALL_30
0x400b700	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5677	channel.c	FUNCTION_130	IF_20	CALL_31
0x400b707	          0x4889c7	                            mov rdi, rax	      5677	channel.c	FUNCTION_130	IF_20	CALL_31
0x400b70a	      0xe800000000	                          call 0x400b70f	      5677	channel.c	FUNCTION_130	IF_20	CALL_31
0x400b70f	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5679	channel.c	FUNCTION_130	CALL_32
0x400b716	    0x488d9520fcff	                  lea rdx, [rbp - 0x3e0]	      5679	channel.c	FUNCTION_130	CALL_32
0x400b71d	    0x488b8df0fbff	            mov rcx, qword [rbp - 0x410]	      5679	channel.c	FUNCTION_130	CALL_32
0x400b724	          0x4889ce	                            mov rsi, rcx	      5679	channel.c	FUNCTION_130	CALL_32
0x400b727	          0x4889c7	                            mov rdi, rax	      5679	channel.c	FUNCTION_130	CALL_32
0x400b72a	      0xe800000000	                          call 0x400b72f	      5679	channel.c	FUNCTION_130	CALL_32
0x400b72f	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5686	channel.c	FUNCTION_130	IF_22
0x400b736	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5686	channel.c	FUNCTION_130	IF_22
0x400b73a	          0x4885c0	                           test rax, rax	      5686	channel.c	FUNCTION_130	IF_22
0x400b73d	            0x741f	                            je 0x400b75e	      5686	channel.c	FUNCTION_130	IF_22
0x400b73f	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5687	channel.c	FUNCTION_130	CALL_35
0x400b746	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5687	channel.c	FUNCTION_130	CALL_35
0x400b74a	          0x4889c7	                            mov rdi, rax	      5687	channel.c	FUNCTION_130	CALL_35
0x400b74d	      0xe89171ffff	               call sym.channel_write_in	      5687	channel.c	FUNCTION_130	CALL_35
0x400b752	            0xeb0a	                           jmp 0x400b75e	      5687	channel.c	FUNCTION_130	CALL_35
0x400b754	              0x90	                                     nop	      5560	channel.c	FUNCTION_130	ELSE_1	IF_3
0x400b755	            0xeb07	                           jmp 0x400b75e	      5560	channel.c	FUNCTION_130	ELSE_1	IF_3
0x400b757	              0x90	                                     nop	      5592	channel.c	FUNCTION_130	IF_5	IF_9
0x400b758	            0xeb04	                           jmp 0x400b75e	      5592	channel.c	FUNCTION_130	IF_5	IF_9
0x400b75a	              0x90	                                     nop	      5621	channel.c	FUNCTION_130	IF_12	IF_13
0x400b75b	            0xeb01	                           jmp 0x400b75e	      5621	channel.c	FUNCTION_130	IF_12	IF_13
0x400b75d	              0x90	                                     nop	      5653	channel.c	FUNCTION_130	ELSE_7	IF_18
0x400b75e	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5693	channel.c	FUNCTION_130	IF_23
0x400b765	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      5693	channel.c	FUNCTION_130	IF_23
0x400b769	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5693	channel.c	FUNCTION_130	IF_23
0x400b770	          0x4839c2	                            cmp rdx, rax	      5693	channel.c	FUNCTION_130	IF_23
0x400b773	            0x740f	                            je 0x400b784	      5693	channel.c	FUNCTION_130	IF_23
0x400b775	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5694	channel.c	FUNCTION_130	CALL_37
0x400b77c	          0x4889c7	                            mov rdi, rax	      5694	channel.c	FUNCTION_130	CALL_37
0x400b77f	      0xe800000000	                          call 0x400b784	      5694	channel.c	FUNCTION_130	CALL_37
0x400b784	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5695	channel.c	FUNCTION_130	CALL_38
0x400b78b	          0x4889c7	                            mov rdi, rax	      5695	channel.c	FUNCTION_130	CALL_38
0x400b78e	      0xe800000000	                          call 0x400b793	      5695	channel.c	FUNCTION_130	CALL_38
0x400b793	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5696	channel.c	FUNCTION_130
0x400b79a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      5697	channel.c	FUNCTION_130
0x400b79e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5697	channel.c	FUNCTION_130
0x400b7a7	            0x7405	                            je 0x400b7ae	      5697	channel.c	FUNCTION_130
0x400b7a9	      0xe800000000	                          call 0x400b7ae	      5697	channel.c	FUNCTION_130
0x400b7ae	    0x4881c4580400	                          add rsp, 0x458	      5697	channel.c	FUNCTION_130
0x400b7b5	              0x5b	                                 pop rbx	      5697	channel.c	FUNCTION_130
0x400b7b6	              0x5d	                                 pop rbp	      5697	channel.c	FUNCTION_130
0x400b7b7	              0xc3	                                     ret	      5697	channel.c	FUNCTION_130
find_buffer	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,9:IF,6:SWITCH,0	88
0x4001cc8	              0x55	                                push rbp	      1101	channel.c	ELSE_3	FUNCTION_32
0x4001cc9	          0x4889e5	                            mov rbp, rsp	      1101	channel.c	ELSE_3	FUNCTION_32
0x4001ccc	        0x4883ec20	                           sub rsp, 0x20	      1101	channel.c	ELSE_3	FUNCTION_32
0x4001cd0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1101	channel.c	ELSE_3	FUNCTION_32
0x4001cd4	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1101	channel.c	ELSE_3	FUNCTION_32
0x4001cd7	          0x8955e0	             mov dword [rbp - 0x20], edx	      1101	channel.c	ELSE_3	FUNCTION_32
0x4001cda	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1102	channel.c	ELSE_3	FUNCTION_32
0x4001ce2	    0x488b05000000	            mov rax, qword [0x04001ce9] 	      1103	channel.c	ELSE_3	FUNCTION_32
0x4001ce9	        0x488945f8	                mov qword [rbp - 8], rax	      1103	channel.c	ELSE_3	FUNCTION_32
0x4001ced	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4001cf2	            0x7432	                            je 0x4001d26	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4001cf4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4001cf8	           0xfb600	                   movzx eax, byte [rax]	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4001cfb	            0x84c0	                             test al, al	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4001cfd	            0x7427	                            je 0x4001d26	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4001cff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x4001d03	          0x4889c7	                            mov rdi, rax	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x4001d06	      0xe800000000	                          call 0x4001d0b	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x4001d0b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x4001d0f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x4001d14	            0x7510	                           jne 0x4001d26	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x4001d16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x4001d1a	          0x4889c7	                            mov rdi, rax	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x4001d1d	      0xe800000000	                          call 0x4001d22	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x4001d22	        0x488945f0	             mov qword [rbp - 0x10], rax	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x4001d26	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4001d2b	     0xf85fa000000	                           jne 0x4001e2b	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4001d31	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d36	            0x7411	                            je 0x4001d49	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d3c	           0xfb600	                   movzx eax, byte [rax]	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d3f	            0x84c0	                             test al, al	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d41	            0x7406	                            je 0x4001d49	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d47	            0xeb05	                           jmp 0x4001d4e	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d49	      0xb800000000	                              mov eax, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d4e	      0xb90a000000	                            mov ecx, 0xa	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d53	      0xba00000000	                              mov edx, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d58	      0xbe00000000	                              mov esi, 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d5d	          0x4889c7	                            mov rdi, rax	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d60	      0xe800000000	                          call 0x4001d65	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d65	        0x488945f0	             mov qword [rbp - 0x10], rax	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4001d69	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4001d6e	            0x750a	                           jne 0x4001d7a	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4001d70	      0xb800000000	                              mov eax, 0	      1116	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4001d75	      0xe9b5000000	                           jmp 0x4001e2f	      1116	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4001d7a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4001d7e	      0xbe01000000	                              mov esi, 1	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4001d83	          0x4889c7	                            mov rdi, rax	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4001d86	      0xe800000000	                          call 0x4001d8b	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4001d8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1118	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4001d8f	    0x488905000000	            mov qword [0x04001d96], rax 	      1118	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4001d96	      0xb904000000	                              mov ecx, 4	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4001d9b	      0xba00000000	                              mov edx, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4001da0	      0xbe00000000	                              mov esi, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4001da5	      0xbf00000000	                              mov edi, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4001daa	      0xe800000000	                          call 0x4001daf	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4001daf	      0xb904000000	                              mov ecx, 4	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4001db4	      0xba00000000	                              mov edx, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4001db9	      0xbe00000000	                              mov esi, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4001dbe	      0xbf00000000	                              mov edi, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4001dc3	      0xe800000000	                          call 0x4001dc8	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x4001dc8	    0x488b05000000	            mov rax, qword [0x04001dcf] 	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x4001dcf	        0x488b4008	                mov rax, qword [rax + 8]	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x4001dd3	          0x4885c0	                           test rax, rax	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x4001dd6	            0x750f	                           jne 0x4001de7	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x4001dd8	    0x488b05000000	            mov rax, qword [0x04001ddf] 	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x4001ddf	          0x4889c7	                            mov rdi, rax	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x4001de2	      0xe800000000	                          call 0x4001de7	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x4001de7	        0x837de000	               cmp dword [rbp - 0x20], 0	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x4001deb	            0x7424	                            je 0x4001e11	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x4001ded	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001df1	            0x7407	                            je 0x4001dfa	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001df3	      0xb800000000	                              mov eax, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001df8	            0xeb05	                           jmp 0x4001dff	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001dfa	      0xb800000000	                              mov eax, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001dff	      0xba01000000	                              mov edx, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001e04	          0x4889c6	                            mov rsi, rax	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001e07	      0xbf01000000	                              mov edi, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001e0c	      0xe800000000	                          call 0x4001e11	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x4001e11	      0xbe00000000	                              mov esi, 0	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x4001e16	      0xbf01000000	                              mov edi, 1	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x4001e1b	      0xe800000000	                          call 0x4001e20	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x4001e20	        0x488b45f8	                mov rax, qword [rbp - 8]	      1129	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4001e24	    0x488905000000	            mov qword [0x04001e2b], rax 	      1129	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4001e2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1132	channel.c	ELSE_3	FUNCTION_32
0x4001e2f	              0xc9	                                   leave	      1133	channel.c	ELSE_3	FUNCTION_32
0x4001e30	              0xc3	                                     ret	      1133	channel.c	ELSE_3	FUNCTION_32
free_unused_jobs	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	32
0x400adcc	              0x55	                                push rbp	      5378	channel.c	FUNCTION_124
0x400adcd	          0x4889e5	                            mov rbp, rsp	      5378	channel.c	FUNCTION_124
0x400add0	        0x4883ec20	                           sub rsp, 0x20	      5378	channel.c	FUNCTION_124
0x400add4	          0x897dec	             mov dword [rbp - 0x14], edi	      5378	channel.c	FUNCTION_124
0x400add7	          0x8975e8	             mov dword [rbp - 0x18], esi	      5378	channel.c	FUNCTION_124
0x400adda	    0x488b05000000	            mov rax, qword [0x0400ade1] 	      5382	channel.c	FUNCTION_124	FOR_1
0x400ade1	        0x488945f0	             mov qword [rbp - 0x10], rax	      5382	channel.c	FUNCTION_124	FOR_1
0x400ade5	            0xeb40	                           jmp 0x400ae27	      5382	channel.c	FUNCTION_124	FOR_1
0x400ade7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5384	channel.c	FUNCTION_124	FOR_1
0x400adeb	          0x488b00	                    mov rax, qword [rax]	      5384	channel.c	FUNCTION_124	FOR_1
0x400adee	        0x488945f8	                mov qword [rbp - 8], rax	      5384	channel.c	FUNCTION_124	FOR_1
0x400adf2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400adf6	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400adf9	          0x3345ec	             xor eax, dword [rbp - 0x14]	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400adfc	          0x2345e8	             and eax, dword [rbp - 0x18]	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400adff	            0x85c0	                           test eax, eax	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400ae01	            0x741c	                            je 0x400ae1f	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400ae03	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x400ae07	          0x4889c7	                            mov rdi, rax	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x400ae0a	      0xe8b1f8ffff	               call sym.job_still_useful	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x400ae0f	            0x85c0	                           test eax, eax	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x400ae11	            0x750c	                           jne 0x400ae1f	      5386	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0x400ae13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x400ae17	          0x4889c7	                            mov rdi, rax	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x400ae1a	      0xe855f7ffff	                   call sym.job_free_job	      5389	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0x400ae1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5382	channel.c	FUNCTION_124	FOR_1
0x400ae23	        0x488945f0	             mov qword [rbp - 0x10], rax	      5382	channel.c	FUNCTION_124	FOR_1
0x400ae27	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5382	channel.c	FUNCTION_124	FOR_1
0x400ae2c	            0x75b9	                           jne 0x400ade7	      5382	channel.c	FUNCTION_124	FOR_1
0x400ae2e	              0x90	                                     nop	      5392	channel.c	FUNCTION_124
0x400ae2f	              0xc9	                                   leave	      5392	channel.c	FUNCTION_124
0x400ae30	              0xc3	                                     ret	      5392	channel.c	FUNCTION_124
channel_status	ELSE,2:WHILE,0:FOR,1:DO,0:functions,0:CALL,4:IF,10:SWITCH,0	70
0x400562a	              0x55	                                push rbp	      2755	channel.c	FUNCTION_65
0x400562b	          0x4889e5	                            mov rbp, rsp	      2755	channel.c	FUNCTION_65
0x400562e	        0x4883ec20	                           sub rsp, 0x20	      2755	channel.c	FUNCTION_65
0x4005632	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2755	channel.c	FUNCTION_65
0x4005636	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2755	channel.c	FUNCTION_65
0x4005639	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2757	channel.c	FUNCTION_65
0x4005640	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2759	channel.c	FUNCTION_65	IF_1
0x4005645	            0x750a	                           jne 0x4005651	      2759	channel.c	FUNCTION_65	IF_1
0x4005647	      0xb800000000	                              mov eax, 0	      2760	channel.c	FUNCTION_65	IF_1
0x400564c	      0xe9d8000000	                           jmp 0x4005729	      2760	channel.c	FUNCTION_65	IF_1
0x4005651	        0x837de401	               cmp dword [rbp - 0x1c], 1	      2761	channel.c	FUNCTION_65	IF_2
0x4005655	            0x753e	                           jne 0x4005695	      2761	channel.c	FUNCTION_65	IF_2
0x4005657	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x400565b	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x4005661	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x4005664	            0x740a	                            je 0x4005670	      2763	channel.c	FUNCTION_65	IF_2	IF_3
0x4005666	      0xb800000000	                              mov eax, 0	      2764	channel.c	FUNCTION_65	IF_2	IF_3
0x400566b	      0xe9b9000000	                           jmp 0x4005729	      2764	channel.c	FUNCTION_65	IF_2	IF_3
0x4005670	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2765	channel.c	FUNCTION_65	IF_2	IF_4	CALL_1
0x4005674	      0xbe01000000	                              mov esi, 1	      2765	channel.c	FUNCTION_65	IF_2	IF_4	CALL_1
0x4005679	          0x4889c7	                            mov rdi, rax	      2765	channel.c	FUNCTION_65	IF_2	IF_4	CALL_1
0x400567c	      0xe800000000	                          call 0x4005681	      2765	channel.c	FUNCTION_65	IF_2	IF_4	CALL_1
0x4005681	            0x85c0	                           test eax, eax	      2765	channel.c	FUNCTION_65	IF_2	IF_4	CALL_1
0x4005683	     0xf848e000000	                            je 0x4005717	      2765	channel.c	FUNCTION_65	IF_2	IF_4	CALL_1
0x4005689	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x4005690	      0xe982000000	                           jmp 0x4005717	      2766	channel.c	FUNCTION_65	IF_2	IF_4
0x4005695	        0x837de402	               cmp dword [rbp - 0x1c], 2	      2768	channel.c	FUNCTION_65	ELSE_1	IF_5
0x4005699	            0x7534	                           jne 0x40056cf	      2768	channel.c	FUNCTION_65	ELSE_1	IF_5
0x400569b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x400569f	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x40056a5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x40056a8	            0x7407	                            je 0x40056b1	      2770	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x40056aa	      0xb800000000	                              mov eax, 0	      2771	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x40056af	            0xeb78	                           jmp 0x4005729	      2771	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_6
0x40056b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2772	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7	CALL_2
0x40056b5	      0xbe02000000	                              mov esi, 2	      2772	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7	CALL_2
0x40056ba	          0x4889c7	                            mov rdi, rax	      2772	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7	CALL_2
0x40056bd	      0xe800000000	                          call 0x40056c2	      2772	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7	CALL_2
0x40056c2	            0x85c0	                           test eax, eax	      2772	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7	CALL_2
0x40056c4	            0x7451	                            je 0x4005717	      2772	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7	CALL_2
0x40056c6	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2773	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7
0x40056cd	            0xeb48	                           jmp 0x4005717	      2773	channel.c	FUNCTION_65	ELSE_1	IF_5	IF_7
0x40056cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40056d3	          0x4889c7	                            mov rdi, rax	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40056d6	      0xe800000000	                          call 0x40056db	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40056db	            0x85c0	                           test eax, eax	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40056dd	            0x7407	                            je 0x40056e6	      2777	channel.c	FUNCTION_65	ELSE_2	IF_8	CALL_3
0x40056df	      0xb800000000	                              mov eax, 0	      2778	channel.c	FUNCTION_65	ELSE_2	IF_8
0x40056e4	            0xeb43	                           jmp 0x4005729	      2778	channel.c	FUNCTION_65	ELSE_2	IF_8
0x40056e6	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x40056ed	            0xeb22	                           jmp 0x4005711	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x40056ef	          0x8b55f8	                mov edx, dword [rbp - 8]	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40056f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40056f6	            0x89d6	                            mov esi, edx	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40056f8	          0x4889c7	                            mov rdi, rax	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x40056fb	      0xe800000000	                          call 0x4005700	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4005700	            0x85c0	                           test eax, eax	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4005702	            0x7409	                            je 0x400570d	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4005704	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2782	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9
0x400570b	            0xeb0a	                           jmp 0x4005717	      2783	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9
0x400570d	        0x8345f801	                  add dword [rbp - 8], 1	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x4005711	        0x837df802	                  cmp dword [rbp - 8], 2	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x4005715	            0x76d8	                           jbe 0x40056ef	      2779	channel.c	FUNCTION_65	ELSE_2	FOR_1
0x4005717	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2787	channel.c	FUNCTION_65	IF_10
0x400571b	            0x7407	                            je 0x4005724	      2787	channel.c	FUNCTION_65	IF_10
0x400571d	      0xb800000000	                              mov eax, 0	      2788	channel.c	FUNCTION_65	IF_10
0x4005722	            0xeb05	                           jmp 0x4005729	      2788	channel.c	FUNCTION_65	IF_10
0x4005724	      0xb800000000	                              mov eax, 0	      2789	channel.c	FUNCTION_65
0x4005729	              0xc9	                                   leave	      2790	channel.c	FUNCTION_65
0x400572a	              0xc3	                                     ret	      2790	channel.c	FUNCTION_65
get_channel_arg	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,8:IF,5:SWITCH,0	82
0x400a348	              0x55	                                push rbp	      5003	channel.c	FUNCTION_108
0x400a349	          0x4889e5	                            mov rbp, rsp	      5003	channel.c	FUNCTION_108
0x400a34c	              0x53	                                push rbx	      5003	channel.c	FUNCTION_108
0x400a34d	        0x4883ec38	                           sub rsp, 0x38	      5003	channel.c	FUNCTION_108
0x400a351	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5003	channel.c	FUNCTION_108
0x400a355	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5003	channel.c	FUNCTION_108
0x400a358	          0x8955d0	             mov dword [rbp - 0x30], edx	      5003	channel.c	FUNCTION_108
0x400a35b	          0x894dcc	             mov dword [rbp - 0x34], ecx	      5003	channel.c	FUNCTION_108
0x400a35e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5004	channel.c	FUNCTION_108
0x400a366	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      5005	channel.c	FUNCTION_108
0x400a36d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5007	channel.c	FUNCTION_108	IF_1
0x400a371	            0x8b00	                    mov eax, dword [rax]	      5007	channel.c	FUNCTION_108	IF_1
0x400a373	          0x83f809	                              cmp eax, 9	      5007	channel.c	FUNCTION_108	IF_1
0x400a376	            0x751f	                           jne 0x400a397	      5007	channel.c	FUNCTION_108	IF_1
0x400a378	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400a37c	        0x488b4008	                mov rax, qword [rax + 8]	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400a380	          0x4885c0	                           test rax, rax	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400a383	            0x7456	                            je 0x400a3db	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400a385	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400a389	        0x488b4008	                mov rax, qword [rax + 8]	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400a38d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400a391	        0x488945e8	             mov qword [rbp - 0x18], rax	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400a395	            0xeb44	                           jmp 0x400a3db	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400a397	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a39b	            0x8b00	                    mov eax, dword [rax]	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a39d	          0x83f80a	                            cmp eax, 0xa	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a3a0	            0x750e	                           jne 0x400a3b0	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a3a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a3a6	        0x488b4008	                mov rax, qword [rax + 8]	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a3aa	        0x488945e8	             mov qword [rbp - 0x18], rax	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a3ae	            0xeb2b	                           jmp 0x400a3db	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400a3b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3b4	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3b7	      0xe800000000	                          call 0x400a3bc	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3bc	          0x4889c3	                            mov rbx, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3bf	      0xbf00000000	                              mov edi, 0	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3c4	      0xe800000000	                          call 0x400a3c9	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3c9	          0x4889de	                            mov rsi, rbx	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3cc	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3cf	      0xe800000000	                          call 0x400a3d4	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400a3d4	      0xb800000000	                              mov eax, 0	      5019	channel.c	FUNCTION_108	ELSE_2
0x400a3d9	            0xeb7b	                           jmp 0x400a456	      5019	channel.c	FUNCTION_108	ELSE_2
0x400a3db	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5021	channel.c	FUNCTION_108	IF_4
0x400a3e0	            0x742e	                            je 0x400a410	      5021	channel.c	FUNCTION_108	IF_4
0x400a3e2	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5021	channel.c	FUNCTION_108	IF_4
0x400a3e6	            0x7428	                            je 0x400a410	      5021	channel.c	FUNCTION_108	IF_4
0x400a3e8	        0x837dcc04	               cmp dword [rbp - 0x34], 4	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a3ec	            0x750e	                           jne 0x400a3fc	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a3ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a3f2	          0x4889c7	                            mov rdi, rax	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a3f5	      0xe800000000	                          call 0x400a3fa	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a3fa	            0xeb03	                           jmp 0x400a3ff	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a3fc	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a3ff	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a403	            0x89c6	                            mov esi, eax	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a405	          0x4889d7	                            mov rdi, rdx	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a408	      0xe800000000	                          call 0x400a40d	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a40d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      5022	channel.c	FUNCTION_108	IF_4	CALL_4
0x400a410	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a414	            0x743c	                            je 0x400a452	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a416	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a41b	            0x741c	                            je 0x400a439	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a41d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a421	          0x4889c7	                            mov rdi, rax	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a424	      0xe800000000	                          call 0x400a429	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a429	            0x85c0	                           test eax, eax	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a42b	            0x7525	                           jne 0x400a452	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400a42d	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5026	channel.c	FUNCTION_108	IF_5
0x400a431	            0x7406	                            je 0x400a439	      5026	channel.c	FUNCTION_108	IF_5
0x400a433	        0x837de400	               cmp dword [rbp - 0x1c], 0	      5026	channel.c	FUNCTION_108	IF_5
0x400a437	            0x7519	                           jne 0x400a452	      5026	channel.c	FUNCTION_108	IF_5
0x400a439	      0xbf00000000	                              mov edi, 0	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400a43e	      0xe800000000	                          call 0x400a443	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400a443	          0x4889c7	                            mov rdi, rax	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400a446	      0xe800000000	                          call 0x400a44b	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400a44b	      0xb800000000	                              mov eax, 0	      5029	channel.c	FUNCTION_108	IF_5
0x400a450	            0xeb04	                           jmp 0x400a456	      5029	channel.c	FUNCTION_108	IF_5
0x400a452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5031	channel.c	FUNCTION_108
0x400a456	        0x4883c438	                           add rsp, 0x38	      5032	channel.c	FUNCTION_108
0x400a45a	              0x5b	                                 pop rbx	      5032	channel.c	FUNCTION_108
0x400a45b	              0x5d	                                 pop rbp	      5032	channel.c	FUNCTION_108
0x400a45c	              0xc3	                                     ret	      5032	channel.c	FUNCTION_108
channel_set_options	ELSE,5:WHILE,0:FOR,2:DO,0:functions,0:CALL,20:IF,29:SWITCH,0	392
0x4001ee9	              0x55	                                push rbp	      1165	channel.c	FUNCTION_34
0x4001eea	          0x4889e5	                            mov rbp, rsp	      1165	channel.c	FUNCTION_34
0x4001eed	              0x53	                                push rbx	      1165	channel.c	FUNCTION_34
0x4001eee	        0x4883ec38	                           sub rsp, 0x38	      1165	channel.c	FUNCTION_34
0x4001ef2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1165	channel.c	FUNCTION_34
0x4001ef6	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1165	channel.c	FUNCTION_34
0x4001efa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1168	channel.c	FUNCTION_34	IF_1
0x4001efe	            0x8b00	                    mov eax, dword [rax]	      1168	channel.c	FUNCTION_34	IF_1
0x4001f00	          0x83e001	                              and eax, 1	      1168	channel.c	FUNCTION_34	IF_1
0x4001f03	            0x85c0	                           test eax, eax	      1168	channel.c	FUNCTION_34	IF_1
0x4001f05	            0x7438	                            je 0x4001f3f	      1168	channel.c	FUNCTION_34	IF_1
0x4001f07	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1169	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f0e	            0xeb29	                           jmp 0x4001f39	      1169	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f10	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f14	          0x8b5008	                mov edx, dword [rax + 8]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f17	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f1b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f1e	        0x48c1e004	                              shl rax, 4	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f22	          0x4889c6	                            mov rsi, rax	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f25	        0x48c1e604	                              shl rsi, 4	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f29	          0x4801f0	                            add rax, rsi	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f2c	          0x4801c8	                            add rax, rcx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f2f	        0x4883c020	                           add rax, 0x20	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f33	            0x8910	                    mov dword [rax], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f35	        0x8345d401	               add dword [rbp - 0x2c], 1	      1169	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f39	        0x837dd403	               cmp dword [rbp - 0x2c], 3	      1169	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f3d	            0x76d1	                           jbe 0x4001f10	      1169	channel.c	FUNCTION_34	IF_1	FOR_1
0x4001f3f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1171	channel.c	FUNCTION_34	IF_2
0x4001f43	            0x8b00	                    mov eax, dword [rax]	      1171	channel.c	FUNCTION_34	IF_2
0x4001f45	          0x83e002	                              and eax, 2	      1171	channel.c	FUNCTION_34	IF_2
0x4001f48	            0x85c0	                           test eax, eax	      1171	channel.c	FUNCTION_34	IF_2
0x4001f4a	            0x7411	                            je 0x4001f5d	      1171	channel.c	FUNCTION_34	IF_2
0x4001f4c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1172	channel.c	FUNCTION_34	IF_2
0x4001f50	          0x8b500c	              mov edx, dword [rax + 0xc]	      1172	channel.c	FUNCTION_34	IF_2
0x4001f53	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1172	channel.c	FUNCTION_34	IF_2
0x4001f57	    0x899050030000	            mov dword [rax + 0x350], edx	      1172	channel.c	FUNCTION_34	IF_2
0x4001f5d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1173	channel.c	FUNCTION_34	IF_3
0x4001f61	            0x8b00	                    mov eax, dword [rax]	      1173	channel.c	FUNCTION_34	IF_3
0x4001f63	          0x83e004	                              and eax, 4	      1173	channel.c	FUNCTION_34	IF_3
0x4001f66	            0x85c0	                           test eax, eax	      1173	channel.c	FUNCTION_34	IF_3
0x4001f68	            0x7411	                            je 0x4001f7b	      1173	channel.c	FUNCTION_34	IF_3
0x4001f6a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1174	channel.c	FUNCTION_34	IF_3
0x4001f6e	          0x8b5010	            mov edx, dword [rax + 0x10] 	      1174	channel.c	FUNCTION_34	IF_3
0x4001f71	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1174	channel.c	FUNCTION_34	IF_3
0x4001f75	    0x899030010000	            mov dword [rax + 0x130], edx	      1174	channel.c	FUNCTION_34	IF_3
0x4001f7b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1175	channel.c	FUNCTION_34	IF_4
0x4001f7f	            0x8b00	                    mov eax, dword [rax]	      1175	channel.c	FUNCTION_34	IF_4
0x4001f81	          0x83e008	                              and eax, 8	      1175	channel.c	FUNCTION_34	IF_4
0x4001f84	            0x85c0	                           test eax, eax	      1175	channel.c	FUNCTION_34	IF_4
0x4001f86	            0x7411	                            je 0x4001f99	      1175	channel.c	FUNCTION_34	IF_4
0x4001f88	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1176	channel.c	FUNCTION_34	IF_4
0x4001f8c	          0x8b5014	            mov edx, dword [rax + 0x14] 	      1176	channel.c	FUNCTION_34	IF_4
0x4001f8f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1176	channel.c	FUNCTION_34	IF_4
0x4001f93	    0x899040020000	            mov dword [rax + 0x240], edx	      1176	channel.c	FUNCTION_34	IF_4
0x4001f99	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1178	channel.c	FUNCTION_34	IF_5
0x4001f9d	            0x8b00	                    mov eax, dword [rax]	      1178	channel.c	FUNCTION_34	IF_5
0x4001f9f	      0x2500020000	                          and eax, 0x200	      1178	channel.c	FUNCTION_34	IF_5
0x4001fa4	            0x85c0	                           test eax, eax	      1178	channel.c	FUNCTION_34	IF_5
0x4001fa6	            0x743b	                            je 0x4001fe3	      1178	channel.c	FUNCTION_34	IF_5
0x4001fa8	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1179	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001faf	            0xeb2c	                           jmp 0x4001fdd	      1179	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fb1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fb5	    0x8b90f8010000	           mov edx, dword [rax + 0x1f8] 	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fbb	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fbf	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fc2	        0x48c1e004	                              shl rax, 4	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fc6	          0x4889c6	                            mov rsi, rax	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fc9	        0x48c1e604	                              shl rsi, 4	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fcd	          0x4801f0	                            add rax, rsi	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fd0	          0x4801c8	                            add rax, rcx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fd3	        0x4883c028	                           add rax, 0x28	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fd7	            0x8910	                    mov dword [rax], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fd9	        0x8345d401	               add dword [rbp - 0x2c], 1	      1179	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fdd	        0x837dd403	               cmp dword [rbp - 0x2c], 3	      1179	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fe1	            0x76ce	                           jbe 0x4001fb1	      1179	channel.c	FUNCTION_34	IF_5	FOR_2
0x4001fe3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1181	channel.c	FUNCTION_34	IF_6
0x4001fe7	            0x8b00	                    mov eax, dword [rax]	      1181	channel.c	FUNCTION_34	IF_6
0x4001fe9	      0x2500040000	                          and eax, 0x400	      1181	channel.c	FUNCTION_34	IF_6
0x4001fee	            0x85c0	                           test eax, eax	      1181	channel.c	FUNCTION_34	IF_6
0x4001ff0	            0x7414	                            je 0x4002006	      1181	channel.c	FUNCTION_34	IF_6
0x4001ff2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1182	channel.c	FUNCTION_34	IF_6
0x4001ff6	    0x8b90fc010000	           mov edx, dword [rax + 0x1fc] 	      1182	channel.c	FUNCTION_34	IF_6
0x4001ffc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1182	channel.c	FUNCTION_34	IF_6
0x4002000	    0x899038010000	            mov dword [rax + 0x138], edx	      1182	channel.c	FUNCTION_34	IF_6
0x4002006	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1183	channel.c	FUNCTION_34	IF_7
0x400200a	            0x8b00	                    mov eax, dword [rax]	      1183	channel.c	FUNCTION_34	IF_7
0x400200c	      0x2500080000	                          and eax, 0x800	      1183	channel.c	FUNCTION_34	IF_7
0x4002011	            0x85c0	                           test eax, eax	      1183	channel.c	FUNCTION_34	IF_7
0x4002013	            0x7414	                            je 0x4002029	      1183	channel.c	FUNCTION_34	IF_7
0x4002015	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1184	channel.c	FUNCTION_34	IF_7
0x4002019	    0x8b9000020000	           mov edx, dword [rax + 0x200] 	      1184	channel.c	FUNCTION_34	IF_7
0x400201f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1184	channel.c	FUNCTION_34	IF_7
0x4002023	    0x899048020000	            mov dword [rax + 0x248], edx	      1184	channel.c	FUNCTION_34	IF_7
0x4002029	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1185	channel.c	FUNCTION_34	IF_8
0x400202d	            0x8b00	                    mov eax, dword [rax]	      1185	channel.c	FUNCTION_34	IF_8
0x400202f	      0x2500000010	                     and eax, 0x10000000	      1185	channel.c	FUNCTION_34	IF_8
0x4002034	            0x85c0	                           test eax, eax	      1185	channel.c	FUNCTION_34	IF_8
0x4002036	            0x740e	                            je 0x4002046	      1185	channel.c	FUNCTION_34	IF_8
0x4002038	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1186	channel.c	FUNCTION_34	IF_8
0x400203c	    0xc780c0030000	              mov dword [rax + 0x3c0], 1	      1186	channel.c	FUNCTION_34	IF_8
0x4002046	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1188	channel.c	FUNCTION_34	IF_9
0x400204a	            0x8b00	                    mov eax, dword [rax]	      1188	channel.c	FUNCTION_34	IF_9
0x400204c	          0x83e010	                           and eax, 0x10	      1188	channel.c	FUNCTION_34	IF_9
0x400204f	            0x85c0	                           test eax, eax	      1188	channel.c	FUNCTION_34	IF_9
0x4002051	            0x7437	                            je 0x400208a	      1188	channel.c	FUNCTION_34	IF_9
0x4002053	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4002057	    0x488b90a80100	           mov rdx, qword [rax + 0x1a8] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400205e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4002062	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4002069	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400206d	    0x488db1880400	                  lea rsi, [rcx + 0x488]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4002074	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4002078	    0x488db9800400	                  lea rdi, [rcx + 0x480]	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400207f	          0x4889d1	                            mov rcx, rdx	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4002082	          0x4889c2	                            mov rdx, rax	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x4002085	      0xe8a7fdffff	                   call sym.set_callback	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400208a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1191	channel.c	FUNCTION_34	IF_10
0x400208e	            0x8b00	                    mov eax, dword [rax]	      1191	channel.c	FUNCTION_34	IF_10
0x4002090	          0x83e020	                           and eax, 0x20	      1191	channel.c	FUNCTION_34	IF_10
0x4002093	            0x85c0	                           test eax, eax	      1191	channel.c	FUNCTION_34	IF_10
0x4002095	            0x7437	                            je 0x40020ce	      1191	channel.c	FUNCTION_34	IF_10
0x4002097	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x400209b	    0x488b90b80100	           mov rdx, qword [rax + 0x1b8] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020a6	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020ad	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020b1	    0x488db1000200	                  lea rsi, [rcx + 0x200]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020b8	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020bc	    0x488db9f80100	                  lea rdi, [rcx + 0x1f8]	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020c3	          0x4889d1	                            mov rcx, rdx	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020c6	          0x4889c2	                            mov rdx, rax	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020c9	      0xe863fdffff	                   call sym.set_callback	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x40020ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1195	channel.c	FUNCTION_34	IF_11
0x40020d2	            0x8b00	                    mov eax, dword [rax]	      1195	channel.c	FUNCTION_34	IF_11
0x40020d4	          0x83e040	                           and eax, 0x40	      1195	channel.c	FUNCTION_34	IF_11
0x40020d7	            0x85c0	                           test eax, eax	      1195	channel.c	FUNCTION_34	IF_11
0x40020d9	            0x7437	                            je 0x4002112	      1195	channel.c	FUNCTION_34	IF_11
0x40020db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x40020df	    0x488b90c80100	           mov rdx, qword [rax + 0x1c8] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x40020e6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x40020ea	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x40020f1	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x40020f5	    0x488db1100300	                  lea rsi, [rcx + 0x310]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x40020fc	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4002100	    0x488db9080300	                  lea rdi, [rcx + 0x308]	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4002107	          0x4889d1	                            mov rcx, rdx	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x400210a	          0x4889c2	                            mov rdx, rax	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x400210d	      0xe81ffdffff	                   call sym.set_callback	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4002112	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1199	channel.c	FUNCTION_34	IF_12
0x4002116	            0x8b00	                    mov eax, dword [rax]	      1199	channel.c	FUNCTION_34	IF_12
0x4002118	      0x2580000000	                           and eax, 0x80	      1199	channel.c	FUNCTION_34	IF_12
0x400211d	            0x85c0	                           test eax, eax	      1199	channel.c	FUNCTION_34	IF_12
0x400211f	            0x7437	                            je 0x4002158	      1199	channel.c	FUNCTION_34	IF_12
0x4002121	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002125	    0x488b90d80100	           mov rdx, qword [rax + 0x1d8] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x400212c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002130	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002137	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x400213b	    0x488db1980400	                  lea rsi, [rcx + 0x498]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002142	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002146	    0x488db9900400	                  lea rdi, [rcx + 0x490]	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x400214d	          0x4889d1	                            mov rcx, rdx	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002150	          0x4889c2	                            mov rdx, rax	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002153	      0xe8d9fcffff	                   call sym.set_callback	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4002158	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1202	channel.c	FUNCTION_34
0x400215c	    0x8b90f0010000	           mov edx, dword [rax + 0x1f0] 	      1202	channel.c	FUNCTION_34
0x4002162	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1202	channel.c	FUNCTION_34
0x4002166	    0x8990a0040000	            mov dword [rax + 0x4a0], edx	      1202	channel.c	FUNCTION_34
0x400216c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1204	channel.c	FUNCTION_34	IF_13
0x4002170	            0x8b00	                    mov eax, dword [rax]	      1204	channel.c	FUNCTION_34	IF_13
0x4002172	      0x2500000100	                        and eax, 0x10000	      1204	channel.c	FUNCTION_34	IF_13
0x4002177	            0x85c0	                           test eax, eax	      1204	channel.c	FUNCTION_34	IF_13
0x4002179	     0xf845c010000	                            je 0x40022db	      1204	channel.c	FUNCTION_34	IF_13
0x400217f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1204	channel.c	FUNCTION_34	IF_13
0x4002183	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1204	channel.c	FUNCTION_34	IF_13
0x4002186	          0x83f803	                              cmp eax, 3	      1204	channel.c	FUNCTION_34	IF_13
0x4002189	     0xf854c010000	                           jne 0x40022db	      1204	channel.c	FUNCTION_34	IF_13
0x400218f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x4002193	            0x8b00	                    mov eax, dword [rax]	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x4002195	          0x83e004	                              and eax, 4	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x4002198	            0x85c0	                           test eax, eax	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x400219a	            0x750e	                           jne 0x40021aa	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x400219c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1210	channel.c	FUNCTION_34	IF_13	IF_14
0x40021a0	    0xc78030010000	              mov dword [rax + 0x130], 0	      1210	channel.c	FUNCTION_34	IF_13	IF_14
0x40021aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x40021ae	            0x8b00	                    mov eax, dword [rax]	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x40021b0	      0x2500000001	                      and eax, 0x1000000	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x40021b5	            0x85c0	                           test eax, eax	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x40021b7	            0x7440	                            je 0x40021f9	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x40021b9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40021bd	    0x8b8054010000	           mov eax, dword [rax + 0x154] 	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40021c3	            0x89c7	                            mov edi, eax	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40021c5	      0xe800000000	                          call 0x40021ca	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40021ca	        0x488945e0	             mov qword [rbp - 0x20], rax	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40021ce	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x40021d3	            0x7565	                           jne 0x400223a	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x40021d5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021d9	    0x8b8054010000	           mov eax, dword [rax + 0x154] 	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021df	          0x4863d8	                         movsxd rbx, eax	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021e2	      0xbf00000000	                              mov edi, 0	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021e7	      0xe800000000	                          call 0x40021ec	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021ec	          0x4889de	                            mov rsi, rbx	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021ef	          0x4889c7	                            mov rdi, rax	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021f2	      0xe800000000	                          call 0x40021f7	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021f7	            0xeb41	                           jmp 0x400223a	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40021f9	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1219	channel.c	FUNCTION_34	IF_13	ELSE_1
0x4002200	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4002204	          0x8b4004	                mov eax, dword [rax + 4]	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4002207	          0x83e001	                              and eax, 1	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x400220a	            0x85c0	                           test eax, eax	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x400220c	            0x740d	                            je 0x400221b	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x400220e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4002212	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4002218	          0x8945d8	             mov dword [rbp - 0x28], eax	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x400221b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x400221f	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4002226	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4002229	      0xbe00000000	                              mov esi, 0	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x400222e	          0x4889c7	                            mov rdi, rax	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4002231	      0xe892faffff	                    call sym.find_buffer	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4002236	        0x488945e0	             mov qword [rbp - 0x20], rax	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x400223a	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x400223f	     0xf8496000000	                            je 0x40022db	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x4002245	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002249	            0x8b00	                    mov eax, dword [rax]	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400224b	      0x2500000020	                     and eax, 0x20000000	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002250	            0x85c0	                           test eax, eax	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002252	            0x741c	                            je 0x4002270	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002254	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1229	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002258	    0x8b8068010000	           mov eax, dword [rax + 0x168] 	      1229	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400225e	            0x85c0	                           test eax, eax	      1229	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002260	           0xf94c0	                                 sete al	      1229	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002263	           0xfb6d0	                           movzx edx, al	      1229	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002266	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400226a	    0x899018020000	            mov dword [rax + 0x218], edx	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4002270	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4002274	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400227a	            0x85c0	                           test eax, eax	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400227c	            0x7522	                           jne 0x40022a0	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400227e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4002282	    0x8b8018020000	           mov eax, dword [rax + 0x218] 	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4002288	            0x85c0	                           test eax, eax	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400228a	            0x7514	                           jne 0x40022a0	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400228c	      0xbf00000000	                              mov edi, 0	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4002291	      0xe800000000	                          call 0x4002296	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4002296	          0x4889c7	                            mov rdi, rax	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4002299	      0xe800000000	                          call 0x400229e	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x400229e	            0xeb3b	                           jmp 0x40022db	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x40022a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1238	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2
0x40022a4	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1238	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2
0x40022ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40022af	      0xbe00000000	                              mov esi, 0	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40022b4	          0x4889c7	                            mov rdi, rax	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40022b7	      0xb800000000	                              mov eax, 0	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40022bc	      0xe800000000	                          call 0x40022c1	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x40022c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40022c5	    0x488d90080200	                  lea rdx, [rax + 0x208]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40022cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40022d0	          0x4889c6	                            mov rsi, rax	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40022d3	          0x4889d7	                            mov rdi, rdx	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40022d6	      0xe800000000	                          call 0x40022db	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40022db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1244	channel.c	FUNCTION_34	IF_21
0x40022df	            0x8b00	                    mov eax, dword [rax]	      1244	channel.c	FUNCTION_34	IF_21
0x40022e1	      0x2500000200	                        and eax, 0x20000	      1244	channel.c	FUNCTION_34	IF_21
0x40022e6	            0x85c0	                           test eax, eax	      1244	channel.c	FUNCTION_34	IF_21
0x40022e8	     0xf84ab010000	                            je 0x4002499	      1244	channel.c	FUNCTION_34	IF_21
0x40022ee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1244	channel.c	FUNCTION_34	IF_21
0x40022f2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1244	channel.c	FUNCTION_34	IF_21
0x40022f5	          0x83f803	                              cmp eax, 3	      1244	channel.c	FUNCTION_34	IF_21
0x40022f8	            0x7433	                            je 0x400232d	      1244	channel.c	FUNCTION_34	IF_21
0x40022fa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1245	channel.c	FUNCTION_34	IF_21
0x40022fe	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1245	channel.c	FUNCTION_34	IF_21
0x4002301	          0x83f804	                              cmp eax, 4	      1245	channel.c	FUNCTION_34	IF_21
0x4002304	     0xf858f010000	                           jne 0x4002499	      1245	channel.c	FUNCTION_34	IF_21
0x400230a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1245	channel.c	FUNCTION_34	IF_21
0x400230e	            0x8b00	                    mov eax, dword [rax]	      1245	channel.c	FUNCTION_34	IF_21
0x4002310	      0x2500000100	                        and eax, 0x10000	      1245	channel.c	FUNCTION_34	IF_21
0x4002315	            0x85c0	                           test eax, eax	      1245	channel.c	FUNCTION_34	IF_21
0x4002317	     0xf847c010000	                            je 0x4002499	      1245	channel.c	FUNCTION_34	IF_21
0x400231d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1246	channel.c	FUNCTION_34	IF_21
0x4002321	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1246	channel.c	FUNCTION_34	IF_21
0x4002324	          0x83f803	                              cmp eax, 3	      1246	channel.c	FUNCTION_34	IF_21
0x4002327	     0xf856c010000	                           jne 0x4002499	      1246	channel.c	FUNCTION_34	IF_21
0x400232d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4002331	            0x8b00	                    mov eax, dword [rax]	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4002333	          0x83e008	                              and eax, 8	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4002336	            0x85c0	                           test eax, eax	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4002338	            0x750e	                           jne 0x4002348	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x400233a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1252	channel.c	FUNCTION_34	IF_21	IF_22
0x400233e	    0xc78040020000	              mov dword [rax + 0x240], 0	      1252	channel.c	FUNCTION_34	IF_21	IF_22
0x4002348	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1253	channel.c	FUNCTION_34	IF_21	IF_23
0x400234c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1253	channel.c	FUNCTION_34	IF_21	IF_23
0x400234f	          0x83f804	                              cmp eax, 4	      1253	channel.c	FUNCTION_34	IF_21	IF_23
0x4002352	            0x7514	                           jne 0x4002368	      1253	channel.c	FUNCTION_34	IF_21	IF_23
0x4002354	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4002358	    0x488b80080200	           mov rax, qword [rax + 0x208] 	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x400235f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4002363	      0xe990000000	                           jmp 0x40023f8	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4002368	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x400236c	            0x8b00	                    mov eax, dword [rax]	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x400236e	      0x2500000002	                      and eax, 0x2000000	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4002373	            0x85c0	                           test eax, eax	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4002375	            0x7440	                            je 0x40023b7	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4002377	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x400237b	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4002381	            0x89c7	                            mov edi, eax	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4002383	      0xe800000000	                          call 0x4002388	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4002388	        0x488945e8	             mov qword [rbp - 0x18], rax	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x400238c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x4002391	            0x7565	                           jne 0x40023f8	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x4002393	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4002397	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400239d	          0x4863d8	                         movsxd rbx, eax	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x40023a0	      0xbf00000000	                              mov edi, 0	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x40023a5	      0xe800000000	                          call 0x40023aa	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x40023aa	          0x4889de	                            mov rsi, rbx	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x40023ad	          0x4889c7	                            mov rdi, rax	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x40023b0	      0xe800000000	                          call 0x40023b5	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x40023b5	            0xeb41	                           jmp 0x40023f8	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x40023b7	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1263	channel.c	FUNCTION_34	IF_21	ELSE_4
0x40023be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023c2	          0x8b4004	                mov eax, dword [rax + 4]	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023c5	          0x83e002	                              and eax, 2	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023c8	            0x85c0	                           test eax, eax	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023ca	            0x740d	                            je 0x40023d9	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1266	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023d0	    0x8b807c010000	           mov eax, dword [rax + 0x17c] 	      1266	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023d6	          0x8945dc	             mov dword [rbp - 0x24], eax	      1266	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x40023d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40023dd	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40023e4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40023e7	      0xbe01000000	                              mov esi, 1	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40023ec	          0x4889c7	                            mov rdi, rax	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40023ef	      0xe8d4f8ffff	                    call sym.find_buffer	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40023f4	        0x488945e8	             mov qword [rbp - 0x18], rax	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x40023f8	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x40023fd	     0xf8496000000	                            je 0x4002499	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x4002403	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002407	            0x8b00	                    mov eax, dword [rax]	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002409	      0x2500000040	                     and eax, 0x40000000	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x400240e	            0x85c0	                           test eax, eax	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002410	            0x741c	                            je 0x400242e	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002412	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1273	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002416	    0x8b806c010000	           mov eax, dword [rax + 0x16c] 	      1273	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x400241c	            0x85c0	                           test eax, eax	      1273	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x400241e	           0xf94c0	                                 sete al	      1273	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002421	           0xfb6d0	                           movzx edx, al	      1273	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002424	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4002428	    0x899028030000	            mov dword [rax + 0x328], edx	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x400242e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4002432	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4002438	            0x85c0	                           test eax, eax	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x400243a	            0x7522	                           jne 0x400245e	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x400243c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4002440	    0x8b8028030000	           mov eax, dword [rax + 0x328] 	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4002446	            0x85c0	                           test eax, eax	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4002448	            0x7514	                           jne 0x400245e	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x400244a	      0xbf00000000	                              mov edi, 0	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x400244f	      0xe800000000	                          call 0x4002454	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4002454	          0x4889c7	                            mov rdi, rax	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4002457	      0xe800000000	                          call 0x400245c	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x400245c	            0xeb3b	                           jmp 0x4002499	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x400245e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1281	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5
0x4002462	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1281	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5
0x4002469	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x400246d	      0xbe00000000	                              mov esi, 0	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4002472	          0x4889c7	                            mov rdi, rax	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4002475	      0xb800000000	                              mov eax, 0	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x400247a	      0xe800000000	                          call 0x400247f	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x400247f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4002483	    0x488d90180300	                  lea rdx, [rax + 0x318]	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x400248a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x400248e	          0x4889c6	                            mov rsi, rax	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4002491	          0x4889d7	                            mov rdi, rdx	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4002494	      0xe800000000	                          call 0x4002499	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4002499	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1287	channel.c	FUNCTION_34
0x400249d	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      1287	channel.c	FUNCTION_34
0x40024a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1287	channel.c	FUNCTION_34
0x40024a4	    0x899034010000	            mov dword [rax + 0x134], edx	      1287	channel.c	FUNCTION_34
0x40024aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1288	channel.c	FUNCTION_34
0x40024ae	          0x8b5020	            mov edx, dword [rax + 0x20] 	      1288	channel.c	FUNCTION_34
0x40024b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1288	channel.c	FUNCTION_34
0x40024b5	    0x899044020000	            mov dword [rax + 0x244], edx	      1288	channel.c	FUNCTION_34
0x40024bb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1289	channel.c	FUNCTION_34
0x40024bf	          0x8b5024	            mov edx, dword [rax + 0x24] 	      1289	channel.c	FUNCTION_34
0x40024c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1289	channel.c	FUNCTION_34
0x40024c6	    0x899054030000	            mov dword [rax + 0x354], edx	      1289	channel.c	FUNCTION_34
0x40024cc	              0x90	                                     nop	      1290	channel.c	FUNCTION_34
0x40024cd	        0x4883c438	                           add rsp, 0x38	      1290	channel.c	FUNCTION_34
0x40024d1	              0x5b	                                 pop rbx	      1290	channel.c	FUNCTION_34
0x40024d2	              0x5d	                                 pop rbp	      1290	channel.c	FUNCTION_34
0x40024d3	              0xc3	                                     ret	      1290	channel.c	FUNCTION_34
job_set_options	ELSE,3:WHILE,0:FOR,0:DO,0:functions,0:CALL,5:IF,5:SWITCH,0	91
0x400aea8	              0x55	                                push rbp	      5420	channel.c	FUNCTION_126
0x400aea9	          0x4889e5	                            mov rbp, rsp	      5420	channel.c	FUNCTION_126
0x400aeac	        0x4883ec10	                           sub rsp, 0x10	      5420	channel.c	FUNCTION_126
0x400aeb0	        0x48897df8	                mov qword [rbp - 8], rdi	      5420	channel.c	FUNCTION_126
0x400aeb4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5420	channel.c	FUNCTION_126
0x400aeb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5421	channel.c	FUNCTION_126	IF_1
0x400aebc	            0x8b00	                    mov eax, dword [rax]	      5421	channel.c	FUNCTION_126	IF_1
0x400aebe	      0x2500400000	                         and eax, 0x4000	      5421	channel.c	FUNCTION_126	IF_1
0x400aec3	            0x85c0	                           test eax, eax	      5421	channel.c	FUNCTION_126	IF_1
0x400aec5	            0x745e	                            je 0x400af25	      5421	channel.c	FUNCTION_126	IF_1
0x400aec7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x400aecb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x400aecf	          0x4889c7	                            mov rdi, rax	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x400aed2	      0xe800000000	                          call 0x400aed7	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x400aed7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aedb	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aee2	          0x4885c0	                           test rax, rax	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aee5	            0x7412	                            je 0x400aef9	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aee7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aeeb	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aef2	           0xfb600	                   movzx eax, byte [rax]	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aef5	            0x84c0	                             test al, al	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aef7	            0x750e	                           jne 0x400af07	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400aef9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x400aefd	    0x48c740300000	               mov qword [rax + 0x30], 0	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x400af05	            0xeb1e	                           jmp 0x400af25	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x400af07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400af0b	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400af12	          0x4889c7	                            mov rdi, rax	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400af15	      0xe800000000	                          call 0x400af1a	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400af1a	          0x4889c2	                            mov rdx, rax	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400af1d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400af21	        0x48895030	             mov qword [rax + 0x30], rdx	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400af25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5429	channel.c	FUNCTION_126	IF_3
0x400af29	            0x8b00	                    mov eax, dword [rax]	      5429	channel.c	FUNCTION_126	IF_3
0x400af2b	      0x2500800000	                         and eax, 0x8000	      5429	channel.c	FUNCTION_126	IF_3
0x400af30	            0x85c0	                           test eax, eax	      5429	channel.c	FUNCTION_126	IF_3
0x400af32	     0xf84c9000000	                            je 0x400b001	      5429	channel.c	FUNCTION_126	IF_3
0x400af38	        0x488b45f8	                mov rax, qword [rbp - 8]	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400af3c	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400af40	        0x488b45f8	                mov rax, qword [rbp - 8]	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400af44	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400af48	          0x4889d6	                            mov rsi, rdx	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400af4b	          0x4889c7	                            mov rdi, rax	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400af4e	      0xe800000000	                          call 0x400af53	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400af53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af57	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af5e	          0x4885c0	                           test rax, rax	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af61	            0x7412	                            je 0x400af75	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af67	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af6e	           0xfb600	                   movzx eax, byte [rax]	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af71	            0x84c0	                             test al, al	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af73	            0x751a	                           jne 0x400af8f	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400af75	        0x488b45f8	                mov rax, qword [rbp - 8]	      5434	channel.c	FUNCTION_126	IF_3	IF_4
0x400af79	    0x48c740400000	               mov qword [rax + 0x40], 0	      5434	channel.c	FUNCTION_126	IF_3	IF_4
0x400af81	        0x488b45f8	                mov rax, qword [rbp - 8]	      5435	channel.c	FUNCTION_126	IF_3	IF_4
0x400af85	    0x48c740480000	               mov qword [rax + 0x48], 0	      5435	channel.c	FUNCTION_126	IF_3	IF_4
0x400af8d	            0xeb72	                           jmp 0x400b001	      5452	channel.c	FUNCTION_126
0x400af8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x400af93	    0x488b90e80100	           mov rdx, qword [rax + 0x1e8] 	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x400af9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x400af9e	        0x48895048	             mov qword [rax + 0x48], rdx	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x400afa2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afa6	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afaa	          0x4885c0	                           test rax, rax	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afad	            0x7424	                            je 0x400afd3	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afaf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5442	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afb3	    0x488b90e00100	           mov rdx, qword [rax + 0x1e0] 	      5442	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afba	        0x488b45f8	                mov rax, qword [rbp - 8]	      5442	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afbe	        0x48895040	             mov qword [rax + 0x40], rdx	      5442	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afc6	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afca	            0x8b10	                    mov edx, dword [rax]	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afcc	          0x83c201	                              add edx, 1	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afcf	            0x8910	                    mov dword [rax], edx	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400afd1	            0xeb2e	                           jmp 0x400b001	      5452	channel.c	FUNCTION_126
0x400afd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400afd7	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400afde	          0x4889c7	                            mov rdi, rax	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400afe1	      0xe800000000	                          call 0x400afe6	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400afe6	          0x4889c2	                            mov rdx, rax	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400afe9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400afed	        0x48895040	             mov qword [rax + 0x40], rdx	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400aff1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x400aff5	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x400aff9	          0x4889c7	                            mov rdi, rax	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x400affc	      0xe800000000	                          call 0x400b001	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x400b001	              0x90	                                     nop	      5452	channel.c	FUNCTION_126
0x400b002	              0xc9	                                   leave	      5452	channel.c	FUNCTION_126
0x400b003	              0xc3	                                     ret	      5452	channel.c	FUNCTION_126
job_free_contents	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,9:IF,2:SWITCH,0	75
0x400a45d	              0x55	                                push rbp	      5038	channel.c	FUNCTION_109
0x400a45e	          0x4889e5	                            mov rbp, rsp	      5038	channel.c	FUNCTION_109
0x400a461	        0x4883ec20	                           sub rsp, 0x20	      5038	channel.c	FUNCTION_109
0x400a465	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5038	channel.c	FUNCTION_109
0x400a469	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5041	channel.c	FUNCTION_109	CALL_1
0x400a46d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5041	channel.c	FUNCTION_109	CALL_1
0x400a471	      0xbe00000000	                              mov esi, 0	      5041	channel.c	FUNCTION_109	CALL_1
0x400a476	          0x4889c7	                            mov rdi, rax	      5041	channel.c	FUNCTION_109	CALL_1
0x400a479	      0xb800000000	                              mov eax, 0	      5041	channel.c	FUNCTION_109	CALL_1
0x400a47e	      0xe800000000	                          call 0x400a483	      5041	channel.c	FUNCTION_109	CALL_1
0x400a483	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5042	channel.c	FUNCTION_109	IF_1
0x400a487	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5042	channel.c	FUNCTION_109	IF_1
0x400a48b	          0x4885c0	                           test rax, rax	      5042	channel.c	FUNCTION_109	IF_1
0x400a48e	            0x7423	                            je 0x400a4b3	      5042	channel.c	FUNCTION_109	IF_1
0x400a490	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5049	channel.c	FUNCTION_109	IF_1
0x400a494	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5049	channel.c	FUNCTION_109	IF_1
0x400a498	    0x48c780a80400	              mov qword [rax + 0x4a8], 0	      5049	channel.c	FUNCTION_109	IF_1
0x400a4a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5050	channel.c	FUNCTION_109	IF_1	CALL_2
0x400a4a7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5050	channel.c	FUNCTION_109	IF_1	CALL_2
0x400a4ab	          0x4889c7	                            mov rdi, rax	      5050	channel.c	FUNCTION_109	IF_1	CALL_2
0x400a4ae	      0xe800000000	                          call 0x400a4b3	      5050	channel.c	FUNCTION_109	IF_1	CALL_2
0x400a4b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5052	channel.c	FUNCTION_109	CALL_3
0x400a4b7	          0x4889c7	                            mov rdi, rax	      5052	channel.c	FUNCTION_109	CALL_3
0x400a4ba	      0xe800000000	                          call 0x400a4bf	      5052	channel.c	FUNCTION_109	CALL_3
0x400a4bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5054	channel.c	FUNCTION_109	CALL_4
0x400a4c3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5054	channel.c	FUNCTION_109	CALL_4
0x400a4c7	          0x4889c7	                            mov rdi, rax	      5054	channel.c	FUNCTION_109	CALL_4
0x400a4ca	      0xe800000000	                          call 0x400a4cf	      5054	channel.c	FUNCTION_109	CALL_4
0x400a4cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5055	channel.c	FUNCTION_109	CALL_5
0x400a4d3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5055	channel.c	FUNCTION_109	CALL_5
0x400a4d7	          0x4889c7	                            mov rdi, rax	      5055	channel.c	FUNCTION_109	CALL_5
0x400a4da	      0xe800000000	                          call 0x400a4df	      5055	channel.c	FUNCTION_109	CALL_5
0x400a4df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5056	channel.c	FUNCTION_109	CALL_6
0x400a4e3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5056	channel.c	FUNCTION_109	CALL_6
0x400a4e7	          0x4889c7	                            mov rdi, rax	      5056	channel.c	FUNCTION_109	CALL_6
0x400a4ea	      0xe800000000	                          call 0x400a4ef	      5056	channel.c	FUNCTION_109	CALL_6
0x400a4ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5057	channel.c	FUNCTION_109	CALL_7
0x400a4f3	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5057	channel.c	FUNCTION_109	CALL_7
0x400a4f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5057	channel.c	FUNCTION_109	CALL_7
0x400a4fb	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5057	channel.c	FUNCTION_109	CALL_7
0x400a4ff	          0x4889d6	                            mov rsi, rdx	      5057	channel.c	FUNCTION_109	CALL_7
0x400a502	          0x4889c7	                            mov rdi, rax	      5057	channel.c	FUNCTION_109	CALL_7
0x400a505	      0xe800000000	                          call 0x400a50a	      5057	channel.c	FUNCTION_109	CALL_7
0x400a50a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5058	channel.c	FUNCTION_109	IF_2
0x400a50e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5058	channel.c	FUNCTION_109	IF_2
0x400a512	          0x4885c0	                           test rax, rax	      5058	channel.c	FUNCTION_109	IF_2
0x400a515	            0x745a	                            je 0x400a571	      5058	channel.c	FUNCTION_109	IF_2
0x400a517	    0xc745fc000000	                  mov dword [rbp - 4], 0	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a51e	            0xeb24	                           jmp 0x400a544	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a520	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a524	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a528	          0x8b55fc	                mov edx, dword [rbp - 4]	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a52b	          0x4863d2	                         movsxd rdx, edx	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a52e	        0x48c1e203	                              shl rdx, 3	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a532	          0x4801d0	                            add rax, rdx	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a535	          0x488b00	                    mov rax, qword [rax]	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a538	          0x4889c7	                            mov rdi, rax	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a53b	      0xe800000000	                          call 0x400a540	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x400a540	        0x8345fc01	                  add dword [rbp - 4], 1	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a544	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a548	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a54c	          0x8b55fc	                mov edx, dword [rbp - 4]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a54f	          0x4863d2	                         movsxd rdx, edx	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a552	        0x48c1e203	                              shl rdx, 3	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a556	          0x4801d0	                            add rax, rdx	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a559	          0x488b00	                    mov rax, qword [rax]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a55c	          0x4885c0	                           test rax, rax	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a55f	            0x75bf	                           jne 0x400a520	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400a561	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x400a565	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x400a569	          0x4889c7	                            mov rdi, rax	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x400a56c	      0xe800000000	                          call 0x400a571	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x400a571	              0x90	                                     nop	      5064	channel.c	FUNCTION_109
0x400a572	              0xc9	                                   leave	      5064	channel.c	FUNCTION_109
0x400a573	              0xc3	                                     ret	      5064	channel.c	FUNCTION_109
channel_first_nl	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,0:IF,1:SWITCH,0	26
0x4002eb7	              0x55	                                push rbp	      1625	channel.c	FUNCTION_45
0x4002eb8	          0x4889e5	                            mov rbp, rsp	      1625	channel.c	FUNCTION_45
0x4002ebb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1625	channel.c	FUNCTION_45
0x4002ebf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1626	channel.c	FUNCTION_45
0x4002ec3	          0x488b00	                    mov rax, qword [rax]	      1626	channel.c	FUNCTION_45
0x4002ec6	        0x488945f8	                mov qword [rbp - 8], rax	      1626	channel.c	FUNCTION_45
0x4002eca	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1629	channel.c	FUNCTION_45	FOR_1
0x4002ed2	            0xeb24	                           jmp 0x4002ef8	      1629	channel.c	FUNCTION_45	FOR_1
0x4002ed4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002ed8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002edc	          0x4801d0	                            add rax, rdx	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002edf	           0xfb600	                   movzx eax, byte [rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002ee2	            0x3c0a	                             cmp al, 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002ee4	            0x750d	                           jne 0x4002ef3	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002ee6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1631	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002eea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1631	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002eee	          0x4801d0	                            add rax, rdx	      1631	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002ef1	            0xeb18	                           jmp 0x4002f0b	      1631	channel.c	FUNCTION_45	FOR_1	IF_1
0x4002ef3	      0x488345f001	               add qword [rbp - 0x10], 1	      1629	channel.c	FUNCTION_45	FOR_1
0x4002ef8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1629	channel.c	FUNCTION_45	FOR_1
0x4002efc	        0x488b4008	                mov rax, qword [rax + 8]	      1629	channel.c	FUNCTION_45	FOR_1
0x4002f00	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1629	channel.c	FUNCTION_45	FOR_1
0x4002f04	            0x77ce	                            ja 0x4002ed4	      1629	channel.c	FUNCTION_45	FOR_1
0x4002f06	      0xb800000000	                              mov eax, 0	      1632	channel.c	FUNCTION_45
0x4002f0b	              0x5d	                                 pop rbp	      1633	channel.c	FUNCTION_45
0x4002f0c	              0xc3	                                     ret	      1633	channel.c	FUNCTION_45
channel_write_in	ELSE,2:WHILE,0:FOR,1:DO,0:functions,0:CALL,10:IF,7:SWITCH,0	123
0x40028e3	              0x55	                                push rbp	      1432	channel.c	FUNCTION_38
0x40028e4	          0x4889e5	                            mov rbp, rsp	      1432	channel.c	FUNCTION_38
0x40028e7	        0x4883ec30	                           sub rsp, 0x30	      1432	channel.c	FUNCTION_38
0x40028eb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1432	channel.c	FUNCTION_38
0x40028ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1433	channel.c	FUNCTION_38
0x40028f3	    0x480548030000	                          add rax, 0x348	      1433	channel.c	FUNCTION_38
0x40028f9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1433	channel.c	FUNCTION_38
0x40028fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1435	channel.c	FUNCTION_38
0x4002901	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1435	channel.c	FUNCTION_38
0x4002908	        0x488945f8	                mov qword [rbp - 8], rax	      1435	channel.c	FUNCTION_38
0x400290c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1436	channel.c	FUNCTION_38
0x4002913	      0x48837df800	                  cmp qword [rbp - 8], 0	      1438	channel.c	FUNCTION_38	IF_1
0x4002918	     0xf84ad010000	                            je 0x4002acb	      1438	channel.c	FUNCTION_38	IF_1
0x400291e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1438	channel.c	FUNCTION_38	IF_1
0x4002922	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1438	channel.c	FUNCTION_38	IF_1
0x4002928	            0x85c0	                           test eax, eax	      1438	channel.c	FUNCTION_38	IF_1
0x400292a	     0xf859b010000	                           jne 0x4002acb	      1438	channel.c	FUNCTION_38	IF_1
0x4002930	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002934	    0x4805e0000000	                           add rax, 0xe0	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400293a	          0x4889c7	                            mov rdi, rax	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400293d	      0xe800000000	                          call 0x4002942	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002942	            0x85c0	                           test eax, eax	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002944	            0x740d	                            je 0x4002953	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002946	        0x488b45f8	                mov rax, qword [rbp - 8]	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400294a	        0x488b4008	                mov rax, qword [rax + 8]	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400294e	          0x4885c0	                           test rax, rax	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002951	            0x752a	                           jne 0x400297d	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4002953	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4002957	      0xbe00000000	                              mov esi, 0	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x400295c	          0x4889c7	                            mov rdi, rax	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x400295f	      0xb800000000	                              mov eax, 0	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4002964	      0xe800000000	                          call 0x4002969	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x4002969	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1444	channel.c	FUNCTION_38	IF_2
0x400296d	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1444	channel.c	FUNCTION_38	IF_2
0x4002978	      0xe94f010000	                           jmp 0x4002acc	      1445	channel.c	FUNCTION_38	IF_2
0x400297d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1448	channel.c	FUNCTION_38	FOR_1
0x4002981	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1448	channel.c	FUNCTION_38	FOR_1
0x4002988	        0x488945e8	             mov qword [rbp - 0x18], rax	      1448	channel.c	FUNCTION_38	FOR_1
0x400298c	            0xeb30	                           jmp 0x40029be	      1448	channel.c	FUNCTION_38	FOR_1
0x400298e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x4002992	          0x4889c7	                            mov rdi, rax	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x4002995	      0xe86bfdffff	             call sym.can_write_buf_line	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x400299a	            0x85c0	                           test eax, eax	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x400299c	            0x7440	                            je 0x40029de	      1451	channel.c	FUNCTION_38	FOR_1	IF_3	CALL_3
0x400299e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40029a2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40029a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40029aa	          0x4889ce	                            mov rsi, rcx	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40029ad	          0x4889c7	                            mov rdi, rax	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40029b0	      0xe82efcffff	                 call sym.write_buf_line	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x40029b5	        0x8345e401	               add dword [rbp - 0x1c], 1	      1454	channel.c	FUNCTION_38	FOR_1
0x40029b9	      0x488345e801	               add qword [rbp - 0x18], 1	      1449	channel.c	FUNCTION_38	FOR_1
0x40029be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1448	channel.c	FUNCTION_38	FOR_1
0x40029c2	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1448	channel.c	FUNCTION_38	FOR_1
0x40029c9	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1448	channel.c	FUNCTION_38	FOR_1
0x40029cd	            0x7c10	                            jl 0x40029df	      1448	channel.c	FUNCTION_38	FOR_1
0x40029cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1449	channel.c	FUNCTION_38	FOR_1
0x40029d3	          0x488b00	                    mov rax, qword [rax]	      1449	channel.c	FUNCTION_38	FOR_1
0x40029d6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1449	channel.c	FUNCTION_38	FOR_1
0x40029da	            0x7db2	                           jge 0x400298e	      1449	channel.c	FUNCTION_38	FOR_1
0x40029dc	            0xeb01	                           jmp 0x40029df	      1449	channel.c	FUNCTION_38	FOR_1
0x40029de	              0x90	                                     nop	      1452	channel.c	FUNCTION_38	FOR_1	IF_3
0x40029df	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1457	channel.c	FUNCTION_38	IF_4
0x40029e3	            0x751f	                           jne 0x4002a04	      1457	channel.c	FUNCTION_38	IF_4
0x40029e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1458	channel.c	FUNCTION_38	CALL_5
0x40029e9	          0x8d50ff	                      lea edx, [rax - 1]	      1458	channel.c	FUNCTION_38	CALL_5
0x40029ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1458	channel.c	FUNCTION_38	CALL_5
0x40029f0	      0xbe00000000	                              mov esi, 0	      1458	channel.c	FUNCTION_38	CALL_5
0x40029f5	          0x4889c7	                            mov rdi, rax	      1458	channel.c	FUNCTION_38	CALL_5
0x40029f8	      0xb800000000	                              mov eax, 0	      1458	channel.c	FUNCTION_38	CALL_5
0x40029fd	      0xe800000000	                          call 0x4002a02	      1458	channel.c	FUNCTION_38	CALL_5
0x4002a02	            0xeb1f	                           jmp 0x4002a23	      1458	channel.c	FUNCTION_38	CALL_5
0x4002a04	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1459	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a08	            0x7e19	                           jle 0x4002a23	      1459	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a0a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a11	      0xbe00000000	                              mov esi, 0	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a16	          0x4889c7	                            mov rdi, rax	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a19	      0xb800000000	                              mov eax, 0	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a1e	      0xe800000000	                          call 0x4002a23	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4002a23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1462	channel.c	FUNCTION_38
0x4002a27	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1462	channel.c	FUNCTION_38
0x4002a2b	    0x488990000100	            mov qword [rax + 0x100], rdx	      1462	channel.c	FUNCTION_38
0x4002a32	        0x488b45f8	                mov rax, qword [rbp - 8]	      1463	channel.c	FUNCTION_38	IF_6
0x4002a36	          0x488b00	                    mov rax, qword [rax]	      1463	channel.c	FUNCTION_38	IF_6
0x4002a39	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1463	channel.c	FUNCTION_38	IF_6
0x4002a3d	            0x7c11	                            jl 0x4002a50	      1463	channel.c	FUNCTION_38	IF_6
0x4002a3f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1463	channel.c	FUNCTION_38	IF_6
0x4002a43	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1463	channel.c	FUNCTION_38	IF_6
0x4002a4a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1463	channel.c	FUNCTION_38	IF_6
0x4002a4e	            0x7d54	                           jge 0x4002aa4	      1463	channel.c	FUNCTION_38	IF_6
0x4002a50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x4002a54	    0x488b80a80400	           mov rax, qword [rax + 0x4a8] 	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x4002a5b	          0x4885c0	                           test rax, rax	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x4002a5e	            0x740c	                            je 0x4002a6c	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x4002a60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x4002a64	          0x4889c7	                            mov rdi, rax	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x4002a67	      0xe800000000	                          call 0x4002a6c	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x4002a6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1472	channel.c	FUNCTION_38	IF_6
0x4002a70	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1472	channel.c	FUNCTION_38	IF_6
0x4002a7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002a7f	      0xbe00000000	                              mov esi, 0	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002a84	          0x4889c7	                            mov rdi, rax	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002a87	      0xb800000000	                              mov eax, 0	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002a8c	      0xe800000000	                          call 0x4002a91	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4002a91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002a95	      0xbe03000000	                              mov esi, 3	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002a9a	          0x4889c7	                            mov rdi, rax	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002a9d	      0xe8a7eeffff	                  call sym.ch_close_part	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002aa2	            0xeb28	                           jmp 0x4002acc	      1476	channel.c	FUNCTION_38	IF_6	CALL_9
0x4002aa4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1480	channel.c	FUNCTION_38	ELSE_2
0x4002aa8	          0x488b00	                    mov rax, qword [rax]	      1480	channel.c	FUNCTION_38	ELSE_2
0x4002aab	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      1480	channel.c	FUNCTION_38	ELSE_2
0x4002aaf	        0x488d5001	                      lea rdx, [rax + 1]	      1480	channel.c	FUNCTION_38	ELSE_2
0x4002ab3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002ab7	      0xbe00000000	                              mov esi, 0	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002abc	          0x4889c7	                            mov rdi, rax	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002abf	      0xb800000000	                              mov eax, 0	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002ac4	      0xe800000000	                          call 0x4002ac9	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002ac9	            0xeb01	                           jmp 0x4002acc	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4002acb	              0x90	                                     nop	      1439	channel.c	FUNCTION_38	IF_1
0x4002acc	              0xc9	                                   leave	      1481	channel.c	FUNCTION_38
0x4002acd	              0xc3	                                     ret	      1481	channel.c	FUNCTION_38
channel_write_input	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,3:IF,3:SWITCH,0	38
0x4002b7b	              0x55	                                push rbp	      1511	channel.c	FUNCTION_40
0x4002b7c	          0x4889e5	                            mov rbp, rsp	      1511	channel.c	FUNCTION_40
0x4002b7f	        0x4883ec20	                           sub rsp, 0x20	      1511	channel.c	FUNCTION_40
0x4002b83	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1511	channel.c	FUNCTION_40
0x4002b87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1512	channel.c	FUNCTION_40
0x4002b8b	    0x480548030000	                          add rax, 0x348	      1512	channel.c	FUNCTION_40
0x4002b91	        0x488945f8	                mov qword [rbp - 8], rax	      1512	channel.c	FUNCTION_40
0x4002b95	        0x488b45f8	                mov rax, qword [rbp - 8]	      1514	channel.c	FUNCTION_40	IF_1
0x4002b99	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1514	channel.c	FUNCTION_40	IF_1
0x4002ba0	          0x4885c0	                           test rax, rax	      1514	channel.c	FUNCTION_40	IF_1
0x4002ba3	            0x7423	                            je 0x4002bc8	      1514	channel.c	FUNCTION_40	IF_1
0x4002ba5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1515	channel.c	FUNCTION_40	CALL_1
0x4002ba9	    0x41b800000000	                              mov r8d, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x4002baf	      0xb900000000	                              mov ecx, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x4002bb4	      0xba00000000	                              mov edx, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x4002bb9	      0xbe03000000	                              mov esi, 3	      1515	channel.c	FUNCTION_40	CALL_1
0x4002bbe	          0x4889c7	                            mov rdi, rax	      1515	channel.c	FUNCTION_40	CALL_1
0x4002bc1	      0xe800000000	                          call 0x4002bc6	      1515	channel.c	FUNCTION_40	CALL_1
0x4002bc6	            0xeb3f	                           jmp 0x4002c07	      1523	channel.c	FUNCTION_40
0x4002bc8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x4002bcc	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x4002bd3	          0x4885c0	                           test rax, rax	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x4002bd6	            0x742f	                            je 0x4002c07	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x4002bd8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x4002bdc	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x4002be2	            0x85c0	                           test eax, eax	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x4002be4	            0x7415	                            je 0x4002bfb	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x4002be6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4002bea	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4002bf1	          0x4889c7	                            mov rdi, rax	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4002bf4	      0xe800000000	                          call 0x4002bf9	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4002bf9	            0xeb0c	                           jmp 0x4002c07	      1523	channel.c	FUNCTION_40
0x4002bfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4002bff	          0x4889c7	                            mov rdi, rax	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4002c02	      0xe8dcfcffff	               call sym.channel_write_in	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4002c07	              0x90	                                     nop	      1523	channel.c	FUNCTION_40
0x4002c08	              0xc9	                                   leave	      1523	channel.c	FUNCTION_40
0x4002c09	              0xc3	                                     ret	      1523	channel.c	FUNCTION_40
remove_cb_node	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,2:SWITCH,0	35
0x4003c9d	              0x55	                                push rbp	      2056	channel.c	FUNCTION_53
0x4003c9e	          0x4889e5	                            mov rbp, rsp	      2056	channel.c	FUNCTION_53
0x4003ca1	        0x48897df8	                mov qword [rbp - 8], rdi	      2056	channel.c	FUNCTION_53
0x4003ca5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2056	channel.c	FUNCTION_53
0x4003ca9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2057	channel.c	FUNCTION_53	IF_1
0x4003cad	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2057	channel.c	FUNCTION_53	IF_1
0x4003cb1	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_53	IF_1
0x4003cb4	            0x7512	                           jne 0x4003cc8	      2057	channel.c	FUNCTION_53	IF_1
0x4003cb6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2058	channel.c	FUNCTION_53	IF_1
0x4003cba	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2058	channel.c	FUNCTION_53	IF_1
0x4003cbe	        0x488b45f8	                mov rax, qword [rbp - 8]	      2058	channel.c	FUNCTION_53	IF_1
0x4003cc2	        0x48895018	             mov qword [rax + 0x18], rdx	      2058	channel.c	FUNCTION_53	IF_1
0x4003cc6	            0xeb14	                           jmp 0x4003cdc	      2058	channel.c	FUNCTION_53	IF_1
0x4003cc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2060	channel.c	FUNCTION_53	ELSE_1
0x4003ccc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2060	channel.c	FUNCTION_53	ELSE_1
0x4003cd0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2060	channel.c	FUNCTION_53	ELSE_1
0x4003cd4	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2060	channel.c	FUNCTION_53	ELSE_1
0x4003cd8	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_53	ELSE_1
0x4003cdc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2061	channel.c	FUNCTION_53	IF_2
0x4003ce0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x4003ce4	          0x4885c0	                           test rax, rax	      2061	channel.c	FUNCTION_53	IF_2
0x4003ce7	            0x7512	                           jne 0x4003cfb	      2061	channel.c	FUNCTION_53	IF_2
0x4003ce9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2062	channel.c	FUNCTION_53	IF_2
0x4003ced	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2062	channel.c	FUNCTION_53	IF_2
0x4003cf1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2062	channel.c	FUNCTION_53	IF_2
0x4003cf5	        0x48895020	             mov qword [rax + 0x20], rdx	      2062	channel.c	FUNCTION_53	IF_2
0x4003cf9	            0xeb14	                           jmp 0x4003d0f	      2065	channel.c	FUNCTION_53	ELSE_2
0x4003cfb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2064	channel.c	FUNCTION_53	ELSE_2
0x4003cff	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2064	channel.c	FUNCTION_53	ELSE_2
0x4003d03	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2064	channel.c	FUNCTION_53	ELSE_2
0x4003d07	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2064	channel.c	FUNCTION_53	ELSE_2
0x4003d0b	        0x48895020	             mov qword [rax + 0x20], rdx	      2064	channel.c	FUNCTION_53	ELSE_2
0x4003d0f	              0x90	                                     nop	      2065	channel.c	FUNCTION_53	ELSE_2
0x4003d10	              0x5d	                                 pop rbp	      2065	channel.c	FUNCTION_53	ELSE_2
0x4003d11	              0xc3	                                     ret	      2065	channel.c	FUNCTION_53	ELSE_2
channel_send	ELSE,7:WHILE,0:FOR,1:DO,0:functions,0:CALL,25:IF,22:SWITCH,0	331
0x40070df	              0x55	                                push rbp	      3701	channel.c	FUNCTION_87
0x40070e0	          0x4889e5	                            mov rbp, rsp	      3701	channel.c	FUNCTION_87
0x40070e3	        0x4883ec60	                           sub rsp, 0x60	      3701	channel.c	FUNCTION_87
0x40070e7	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3701	channel.c	FUNCTION_87
0x40070eb	          0x8975b4	             mov dword [rbp - 0x4c], esi	      3701	channel.c	FUNCTION_87
0x40070ee	        0x488955a8	             mov qword [rbp - 0x58], rdx	      3701	channel.c	FUNCTION_87
0x40070f2	          0x894db0	             mov dword [rbp - 0x50], ecx	      3701	channel.c	FUNCTION_87
0x40070f5	        0x4c8945a0	              mov qword [rbp - 0x60], r8	      3701	channel.c	FUNCTION_87
0x40070f9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3704	channel.c	FUNCTION_87
0x40070fc	        0x48c1e004	                              shl rax, 4	      3704	channel.c	FUNCTION_87
0x4007100	          0x4889c2	                            mov rdx, rax	      3704	channel.c	FUNCTION_87
0x4007103	        0x48c1e204	                              shl rdx, 4	      3704	channel.c	FUNCTION_87
0x4007107	          0x4801d0	                            add rax, rdx	      3704	channel.c	FUNCTION_87
0x400710a	        0x488d5010	                   lea rdx, [rax + 0x10]	      3704	channel.c	FUNCTION_87
0x400710e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3704	channel.c	FUNCTION_87
0x4007112	          0x4801d0	                            add rax, rdx	      3704	channel.c	FUNCTION_87
0x4007115	        0x4883c008	                              add rax, 8	      3704	channel.c	FUNCTION_87
0x4007119	        0x488945d8	             mov qword [rbp - 0x28], rax	      3704	channel.c	FUNCTION_87
0x400711d	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3705	channel.c	FUNCTION_87
0x4007124	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3707	channel.c	FUNCTION_87
0x4007128	            0x8b00	                    mov eax, dword [rax]	      3707	channel.c	FUNCTION_87
0x400712a	          0x8945cc	             mov dword [rbp - 0x34], eax	      3707	channel.c	FUNCTION_87
0x400712d	        0x837dccff	cmp dword [rbp - 0x34], 0xffffffffffffffff	      3708	channel.c	FUNCTION_87	IF_1
0x4007131	            0x7563	                           jne 0x4007196	      3708	channel.c	FUNCTION_87	IF_1
0x4007133	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4007137	    0x8b8074040000	           mov eax, dword [rax + 0x474] 	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x400713d	            0x85c0	                           test eax, eax	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x400713f	            0x753d	                           jne 0x400717e	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4007141	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4007146	            0x7436	                            je 0x400717e	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x4007148	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x400714c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4007150	      0xbe00000000	                              mov esi, 0	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4007155	          0x4889c7	                            mov rdi, rax	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4007158	      0xb800000000	                              mov eax, 0	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x400715d	      0xe8ba91ffff	                       call sym.ch_error	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x4007162	      0xbf00000000	                              mov edi, 0	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4007167	      0xe800000000	                          call 0x400716c	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x400716c	          0x4889c2	                            mov rdx, rax	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x400716f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4007173	          0x4889c6	                            mov rsi, rax	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4007176	          0x4889d7	                            mov rdi, rdx	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x4007179	      0xe800000000	                          call 0x400717e	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x400717e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3715	channel.c	FUNCTION_87	IF_1
0x4007182	    0xc78074040000	              mov dword [rax + 0x474], 1	      3715	channel.c	FUNCTION_87	IF_1
0x400718c	      0xb800000000	                              mov eax, 0	      3716	channel.c	FUNCTION_87	IF_1
0x4007191	      0xe92a040000	                           jmp 0x40075c0	      3716	channel.c	FUNCTION_87	IF_1
0x4007196	      0xe800000000	                          call 0x400719b	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x400719b	            0x85c0	                           test eax, eax	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x400719d	     0xf8483000000	                            je 0x4007226	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x40071a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x40071a7	          0x4889c6	                            mov rsi, rax	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x40071aa	      0xbf00000000	                              mov edi, 0	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x40071af	      0xe8708fffff	                    call sym.ch_log_lead	      3721	channel.c	FUNCTION_87	IF_3	CALL_5
0x40071b4	    0x488b05000000	            mov rax, qword [0x040071bb] 	      3722	channel.c	FUNCTION_87	IF_3	CALL_6
0x40071bb	          0x4889c6	                            mov rsi, rax	      3722	channel.c	FUNCTION_87	IF_3	CALL_6
0x40071be	      0xbf27000000	                           mov edi, 0x27	      3722	channel.c	FUNCTION_87	IF_3	CALL_6
0x40071c3	      0xe800000000	                          call 0x40071c8	      3722	channel.c	FUNCTION_87	IF_3	CALL_6
0x40071c8	    0x488b15000000	            mov rdx, qword [0x040071cf] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071cf	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071d2	          0x4863f0	                         movsxd rsi, eax	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071d5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071d9	          0x4889d1	                            mov rcx, rdx	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071dc	      0xba01000000	                              mov edx, 1	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071e1	          0x4889c7	                            mov rdi, rax	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071e4	      0xe800000000	                          call 0x40071e9	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071e9	    0x890500000000	            mov dword [0x040071ef], eax 	      3723	channel.c	FUNCTION_87	IF_3	CALL_7
0x40071ef	    0x488b05000000	            mov rax, qword [0x040071f6] 	      3724	channel.c	FUNCTION_87	IF_3	CALL_8
0x40071f6	          0x4889c1	                            mov rcx, rax	      3724	channel.c	FUNCTION_87	IF_3	CALL_8
0x40071f9	      0xba02000000	                              mov edx, 2	      3724	channel.c	FUNCTION_87	IF_3	CALL_8
0x40071fe	      0xbe01000000	                              mov esi, 1	      3724	channel.c	FUNCTION_87	IF_3	CALL_8
0x4007203	      0xbf00000000	                              mov edi, 0	      3724	channel.c	FUNCTION_87	IF_3	CALL_8
0x4007208	      0xe800000000	                          call 0x400720d	      3724	channel.c	FUNCTION_87	IF_3	CALL_8
0x400720d	    0x488b05000000	            mov rax, qword [0x04007214] 	      3725	channel.c	FUNCTION_87	IF_3	CALL_9
0x4007214	          0x4889c7	                            mov rdi, rax	      3725	channel.c	FUNCTION_87	IF_3	CALL_9
0x4007217	      0xe800000000	                          call 0x400721c	      3725	channel.c	FUNCTION_87	IF_3	CALL_9
0x400721c	    0xc70500000000	               mov dword [0x04007226], 1	      3726	channel.c	FUNCTION_87	IF_3
0x4007226	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3731	channel.c	FUNCTION_87	FOR_1
0x400722a	        0x4883e880	             sub rax, 0xffffffffffffff80	      3731	channel.c	FUNCTION_87	FOR_1
0x400722e	        0x488945e0	             mov qword [rbp - 0x20], rax	      3731	channel.c	FUNCTION_87	FOR_1
0x4007232	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007236	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x400723a	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x400723d	            0x7426	                            je 0x4007265	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x400723f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007243	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007247	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x400724b	        0x488945d0	             mov qword [rbp - 0x30], rax	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x400724f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007253	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007257	            0x8b00	                    mov eax, dword [rax]	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007259	          0x8945c8	             mov dword [rbp - 0x38], eax	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x400725c	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      3740	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007263	            0xeb1e	                           jmp 0x4007283	      3740	channel.c	FUNCTION_87	FOR_1	IF_4
0x4007265	        0x837db000	               cmp dword [rbp - 0x50], 0	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4007269	            0x750a	                           jne 0x4007275	      3744	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x400726b	      0xb801000000	                              mov eax, 1	      3746	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4007270	      0xe94b030000	                           jmp 0x40075c0	      3746	channel.c	FUNCTION_87	FOR_1	ELSE_1	IF_5
0x4007275	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3747	channel.c	FUNCTION_87	FOR_1	ELSE_1
0x4007279	        0x488945d0	             mov qword [rbp - 0x30], rax	      3747	channel.c	FUNCTION_87	FOR_1	ELSE_1
0x400727d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3748	channel.c	FUNCTION_87	FOR_1	ELSE_1
0x4007280	          0x8945c8	             mov dword [rbp - 0x38], eax	      3748	channel.c	FUNCTION_87	FOR_1	ELSE_1
0x4007283	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3751	channel.c	FUNCTION_87	FOR_1	IF_6
0x4007287	            0x751c	                           jne 0x40072a5	      3751	channel.c	FUNCTION_87	FOR_1	IF_6
0x4007289	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x400728c	          0x4863d0	                         movsxd rdx, eax	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x400728f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4007293	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4007296	          0x4889ce	                            mov rsi, rcx	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x4007299	            0x89c7	                            mov edi, eax	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x400729b	      0xe800000000	                          call 0x40072a0	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x40072a0	          0x8945c0	             mov dword [rbp - 0x40], eax	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x40072a3	            0xeb1a	                           jmp 0x40072bf	      3752	channel.c	FUNCTION_87	FOR_1	IF_6
0x40072a5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072a8	          0x4863d0	                         movsxd rdx, eax	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072ab	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072af	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072b2	          0x4889ce	                            mov rsi, rcx	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072b5	            0x89c7	                            mov edi, eax	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072b7	      0xe800000000	                          call 0x40072bc	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072bc	          0x8945c0	             mov dword [rbp - 0x40], eax	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40072bf	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072c3	            0x791f	                           jns 0x40072e4	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072c5	      0xe800000000	                          call 0x40072ca	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072ca	            0x8b00	                    mov eax, dword [rax]	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072cc	          0x83f80b	                            cmp eax, 0xb	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072cf	            0x740c	                            je 0x40072dd	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072d1	      0xe800000000	                          call 0x40072d6	      3767	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072d6	            0x8b00	                    mov eax, dword [rax]	      3767	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072d8	          0x83f80b	                            cmp eax, 0xb	      3767	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072db	            0x7507	                           jne 0x40072e4	      3767	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072dd	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x40072e4	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40072e8	     0xf8856020000	                            js 0x4007544	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40072ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40072f2	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40072f5	            0x85c0	                           test eax, eax	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40072f7	     0xf8447020000	                            je 0x4007544	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40072fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3774	channel.c	FUNCTION_87	FOR_1	IF_9
0x4007301	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3774	channel.c	FUNCTION_87	FOR_1	IF_9
0x4007305	        0x488945e8	             mov qword [rbp - 0x18], rax	      3774	channel.c	FUNCTION_87	FOR_1	IF_9
0x4007309	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x400730d	            0x7419	                            je 0x4007328	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x400730f	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_12
0x4007312	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_12
0x4007316	      0xbe00000000	                              mov esi, 0	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_12
0x400731b	          0x4889c7	                            mov rdi, rax	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_12
0x400731e	      0xb800000000	                              mov eax, 0	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_12
0x4007323	      0xe800000000	                          call 0x4007328	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_12
0x4007328	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x400732b	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x400732e	            0x7544	                           jne 0x4007374	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x4007330	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4007335	            0x7418	                            je 0x400734f	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4007337	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3784	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12	CALL_13
0x400733b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3784	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12	CALL_13
0x400733f	          0x4889d6	                            mov rsi, rdx	      3784	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12	CALL_13
0x4007342	          0x4889c7	                            mov rdi, rax	      3784	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12	CALL_13
0x4007345	      0xe8adeaffff	           call sym.remove_from_writeque	      3784	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12	CALL_13
0x400734a	      0xe9d7feffff	                           jmp 0x4007226	      3865	channel.c	FUNCTION_87	FOR_1
0x400734f	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4007353	     0xf8453020000	                            je 0x40075ac	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4007359	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_14
0x400735d	      0xbe00000000	                              mov esi, 0	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_14
0x4007362	          0x4889c7	                            mov rdi, rax	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_14
0x4007365	      0xb800000000	                              mov eax, 0	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_14
0x400736a	      0xe800000000	                          call 0x400736f	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_14
0x400736f	      0xe938020000	                           jmp 0x40075ac	      3773	channel.c	FUNCTION_87	FOR_1	IF_9
0x4007374	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4007379	            0x7453	                            je 0x40073ce	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x400737b	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x400737f	            0x7e3d	                           jle 0x40073be	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4007381	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x4007384	          0x2b45c0	             sub eax, dword [rbp - 0x40]	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x4007387	          0x4863d0	                         movsxd rdx, eax	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x400738a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x400738e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x4007392	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x4007395	            0x4898	                                    cdqe	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x4007397	          0x4801c1	                            add rcx, rax	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x400739a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x400739e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x40073a2	          0x4889ce	                            mov rsi, rcx	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x40073a5	          0x4889c7	                            mov rdi, rax	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x40073a8	      0xe800000000	                          call 0x40073ad	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_15
0x40073ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x40073b1	            0x8b00	                    mov eax, dword [rax]	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x40073b3	          0x2b45c0	             sub eax, dword [rbp - 0x40]	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x40073b6	            0x89c2	                            mov edx, eax	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x40073b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x40073bc	            0x8910	                    mov dword [rax], edx	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x40073be	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3803	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x40073c2	        0x488945d0	             mov qword [rbp - 0x30], rax	      3803	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x40073c6	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3804	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x40073c9	          0x8945c8	             mov dword [rbp - 0x38], eax	      3804	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x40073cc	            0xeb0f	                           jmp 0x40073dd	      3804	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x40073ce	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x40073d1	            0x4898	                                    cdqe	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x40073d3	        0x480145d0	            add qword [rbp - 0x30], rax 	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x40073d7	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x40073da	          0x2945c8	             sub dword [rbp - 0x38], eax	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x40073dd	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_16
0x40073e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_16
0x40073e4	      0xbe00000000	                              mov esi, 0	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_16
0x40073e9	          0x4889c7	                            mov rdi, rax	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_16
0x40073ec	      0xb800000000	                              mov eax, 0	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_16
0x40073f1	      0xe800000000	                          call 0x40073f6	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_16
0x40073f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x40073fa	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x40073fe	          0x4885c0	                           test rax, rax	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007401	            0x747a	                            je 0x400747d	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007403	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007407	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400740b	            0x8b10	                    mov edx, dword [rax]	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400740d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007410	             0x1d0	                            add eax, edx	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007412	      0x3d9f0f0000	                          cmp eax, 0xf9f	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007417	            0x7f64	                            jg 0x400747d	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007419	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3818	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400741d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3818	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007421	        0x488945f0	             mov qword [rbp - 0x10], rax	      3818	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007425	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_17
0x4007429	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_17
0x400742c	            0x89d6	                            mov esi, edx	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_17
0x400742e	          0x4889c7	                            mov rdi, rax	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_17
0x4007431	      0xe800000000	                          call 0x4007436	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_17
0x4007436	          0x83f801	                              cmp eax, 1	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_17
0x4007439	     0xf8502010000	                           jne 0x4007541	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_17
0x400743f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007442	          0x4863d0	                         movsxd rdx, eax	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007445	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007449	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x400744d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007451	            0x8b00	                    mov eax, dword [rax]	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007453	            0x4898	                                    cdqe	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007455	          0x4801c1	                            add rcx, rax	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007458	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x400745c	          0x4889c6	                            mov rsi, rax	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x400745f	          0x4889cf	                            mov rdi, rcx	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007462	      0xe800000000	                          call 0x4007467	      3823	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_18
0x4007467	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x400746b	            0x8b10	                    mov edx, dword [rax]	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x400746d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4007470	             0x1c2	                            add edx, eax	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4007472	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4007476	            0x8910	                    mov dword [rax], edx	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4007478	      0xe9c4000000	                           jmp 0x4007541	      3817	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400747d	      0xbf28000000	                           mov edi, 0x28	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_19
0x4007482	      0xe800000000	                          call 0x4007487	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_19
0x4007487	        0x488945f8	                mov qword [rbp - 8], rax	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_19
0x400748b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4007490	     0xf8416010000	                            je 0x40075ac	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x4007496	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x400749a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x400749e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40074a2	        0x48895020	             mov qword [rax + 0x20], rdx	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40074a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3836	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40074aa	    0x48c740180000	               mov qword [rax + 0x18], 0	      3836	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40074b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074b6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074ba	          0x4885c0	                           test rax, rax	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074bd	            0x750e	                           jne 0x40074cd	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074c3	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074c7	        0x48895018	             mov qword [rax + 0x18], rdx	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074cb	            0xeb10	                           jmp 0x40074dd	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40074cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3840	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x40074d1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3840	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x40074d5	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3840	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x40074d9	        0x48895018	             mov qword [rax + 0x18], rdx	      3840	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x40074dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40074e1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40074e5	        0x48895020	             mov qword [rax + 0x20], rdx	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40074e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_20
0x40074ed	      0xbae8030000	                          mov edx, 0x3e8	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_20
0x40074f2	      0xbe01000000	                              mov esi, 1	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_20
0x40074f7	          0x4889c7	                            mov rdi, rax	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_20
0x40074fa	      0xe800000000	                          call 0x40074ff	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_20
0x40074ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_21
0x4007503	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_21
0x4007506	            0x89d6	                            mov esi, edx	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_21
0x4007508	          0x4889c7	                            mov rdi, rax	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_21
0x400750b	      0xe800000000	                          call 0x4007510	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_21
0x4007510	          0x83f801	                              cmp eax, 1	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_21
0x4007513	     0xf8593000000	                           jne 0x40075ac	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_21
0x4007519	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x400751c	          0x4863d0	                         movsxd rdx, eax	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x400751f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x4007523	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x4007527	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x400752b	          0x4889ce	                            mov rsi, rcx	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x400752e	          0x4889c7	                            mov rdi, rax	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x4007531	      0xe800000000	                          call 0x4007536	      3845	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_22
0x4007536	        0x488b45f8	                mov rax, qword [rbp - 8]	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x400753a	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x400753d	            0x8910	                    mov dword [rax], edx	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x400753f	            0xeb6b	                           jmp 0x40075ac	      3773	channel.c	FUNCTION_87	FOR_1	IF_9
0x4007541	              0x90	                                     nop	      3817	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4007542	            0xeb68	                           jmp 0x40075ac	      3773	channel.c	FUNCTION_87	FOR_1	IF_9
0x4007544	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4007547	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x400754a	            0x7461	                            je 0x40075ad	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x400754c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4007550	    0x8b8074040000	           mov eax, dword [rax + 0x474] 	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4007556	            0x85c0	                           test eax, eax	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4007558	            0x753d	                           jne 0x4007597	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x400755a	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x400755f	            0x7436	                            je 0x4007597	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4007561	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4007565	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4007569	      0xbe00000000	                              mov esi, 0	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x400756e	          0x4889c7	                            mov rdi, rax	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4007571	      0xb800000000	                              mov eax, 0	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4007576	      0xe8a18dffff	                       call sym.ch_error	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x400757b	      0xbf00000000	                              mov edi, 0	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x4007580	      0xe800000000	                          call 0x4007585	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x4007585	          0x4889c2	                            mov rdx, rax	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x4007588	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x400758c	          0x4889c6	                            mov rsi, rax	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x400758f	          0x4889d7	                            mov rdi, rdx	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x4007592	      0xe800000000	                          call 0x4007597	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x4007597	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3859	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x400759b	    0xc78074040000	              mov dword [rax + 0x474], 1	      3859	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x40075a5	      0xb800000000	                              mov eax, 0	      3860	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x40075aa	            0xeb14	                           jmp 0x40075c0	      3860	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x40075ac	              0x90	                                     nop	      3773	channel.c	FUNCTION_87	FOR_1	IF_9
0x40075ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3863	channel.c	FUNCTION_87	FOR_1
0x40075b1	    0xc78074040000	              mov dword [rax + 0x474], 0	      3863	channel.c	FUNCTION_87	FOR_1
0x40075bb	      0xb801000000	                              mov eax, 1	      3864	channel.c	FUNCTION_87	FOR_1
0x40075c0	              0xc9	                                   leave	      3866	channel.c	FUNCTION_87
0x40075c1	              0xc3	                                     ret	      3866	channel.c	FUNCTION_87
channel_has_readahead	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	46
0x4005595	              0x55	                                push rbp	      2736	channel.c	FUNCTION_64
0x4005596	          0x4889e5	                            mov rbp, rsp	      2736	channel.c	FUNCTION_64
0x4005599	        0x4883ec30	                           sub rsp, 0x30	      2736	channel.c	FUNCTION_64
0x400559d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2736	channel.c	FUNCTION_64
0x40055a1	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2736	channel.c	FUNCTION_64
0x40055a4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2737	channel.c	FUNCTION_64
0x40055a8	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2737	channel.c	FUNCTION_64
0x40055ab	        0x48c1e004	                              shl rax, 4	      2737	channel.c	FUNCTION_64
0x40055af	          0x4889c1	                            mov rcx, rax	      2737	channel.c	FUNCTION_64
0x40055b2	        0x48c1e104	                              shl rcx, 4	      2737	channel.c	FUNCTION_64
0x40055b6	          0x4801c8	                            add rax, rcx	      2737	channel.c	FUNCTION_64
0x40055b9	          0x4801d0	                            add rax, rdx	      2737	channel.c	FUNCTION_64
0x40055bc	        0x4883c020	                           add rax, 0x20	      2737	channel.c	FUNCTION_64
0x40055c0	            0x8b00	                    mov eax, dword [rax]	      2737	channel.c	FUNCTION_64
0x40055c2	          0x8945ec	             mov dword [rbp - 0x14], eax	      2737	channel.c	FUNCTION_64
0x40055c5	        0x837dec02	               cmp dword [rbp - 0x14], 2	      2739	channel.c	FUNCTION_64	IF_1
0x40055c9	            0x7406	                            je 0x40055d1	      2739	channel.c	FUNCTION_64	IF_1
0x40055cb	        0x837dec03	               cmp dword [rbp - 0x14], 3	      2739	channel.c	FUNCTION_64	IF_1
0x40055cf	            0x753d	                           jne 0x400560e	      2739	channel.c	FUNCTION_64	IF_1
0x40055d1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2741	channel.c	FUNCTION_64	IF_1
0x40055d4	        0x48c1e004	                              shl rax, 4	      2741	channel.c	FUNCTION_64	IF_1
0x40055d8	          0x4889c2	                            mov rdx, rax	      2741	channel.c	FUNCTION_64	IF_1
0x40055db	        0x48c1e204	                              shl rdx, 4	      2741	channel.c	FUNCTION_64	IF_1
0x40055df	          0x4801d0	                            add rax, rdx	      2741	channel.c	FUNCTION_64	IF_1
0x40055e2	        0x488d5040	                   lea rdx, [rax + 0x40]	      2741	channel.c	FUNCTION_64	IF_1
0x40055e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2741	channel.c	FUNCTION_64	IF_1
0x40055ea	          0x4801d0	                            add rax, rdx	      2741	channel.c	FUNCTION_64	IF_1
0x40055ed	        0x4883c010	                           add rax, 0x10	      2741	channel.c	FUNCTION_64	IF_1
0x40055f1	        0x488945f0	             mov qword [rbp - 0x10], rax	      2741	channel.c	FUNCTION_64	IF_1
0x40055f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2742	channel.c	FUNCTION_64	IF_1
0x40055f9	        0x488b4008	                mov rax, qword [rax + 8]	      2742	channel.c	FUNCTION_64	IF_1
0x40055fd	        0x488945f8	                mov qword [rbp - 8], rax	      2742	channel.c	FUNCTION_64	IF_1
0x4005601	      0x48837df800	                  cmp qword [rbp - 8], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4005606	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4005609	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x400560c	            0xeb1a	                           jmp 0x4005628	      2744	channel.c	FUNCTION_64	IF_1
0x400560e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2746	channel.c	FUNCTION_64	CALL_1
0x4005611	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2746	channel.c	FUNCTION_64	CALL_1
0x4005615	            0x89d6	                            mov esi, edx	      2746	channel.c	FUNCTION_64	CALL_1
0x4005617	          0x4889c7	                            mov rdi, rax	      2746	channel.c	FUNCTION_64	CALL_1
0x400561a	      0xe800000000	                          call 0x400561f	      2746	channel.c	FUNCTION_64	CALL_1
0x400561f	          0x4885c0	                           test rax, rax	      2746	channel.c	FUNCTION_64	CALL_1
0x4005622	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4005625	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x4005628	              0xc9	                                   leave	      2747	channel.c	FUNCTION_64
0x4005629	              0xc3	                                     ret	      2747	channel.c	FUNCTION_64
win32_build_cmd	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,5:IF,3:SWITCH,0	50
0x400a9bf	              0x55	                                push rbp	      5236	channel.c	FUNCTION_119
0x400a9c0	          0x4889e5	                            mov rbp, rsp	      5236	channel.c	FUNCTION_119
0x400a9c3	        0x4883ec20	                           sub rsp, 0x20	      5236	channel.c	FUNCTION_119
0x400a9c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5236	channel.c	FUNCTION_119
0x400a9cb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5236	channel.c	FUNCTION_119
0x400a9cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5240	channel.c	FUNCTION_119	FOR_1
0x400a9d3	          0x488b00	                    mov rax, qword [rax]	      5240	channel.c	FUNCTION_119	FOR_1
0x400a9d6	        0x488945f0	             mov qword [rbp - 0x10], rax	      5240	channel.c	FUNCTION_119	FOR_1
0x400a9da	      0xe987000000	                           jmp 0x400aa66	      5240	channel.c	FUNCTION_119	FOR_1
0x400a9df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400a9e3	        0x4883c010	                           add rax, 0x10	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400a9e7	          0x4889c7	                            mov rdi, rax	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400a9ea	      0xe800000000	                          call 0x400a9ef	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400a9ef	        0x488945f8	                mov qword [rbp - 8], rax	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400a9f3	      0x48837df800	                  cmp qword [rbp - 8], 0	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x400a9f8	            0x7507	                           jne 0x400aa01	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x400a9fa	      0xb800000000	                              mov eax, 0	      5244	channel.c	FUNCTION_119	FOR_1	IF_1
0x400a9ff	            0xeb75	                           jmp 0x400aa76	      5244	channel.c	FUNCTION_119	FOR_1	IF_1
0x400aa01	        0x488b45f8	                mov rax, qword [rbp - 8]	      5245	channel.c	FUNCTION_119	FOR_1	CALL_2
0x400aa05	          0x4889c7	                            mov rdi, rax	      5245	channel.c	FUNCTION_119	FOR_1	CALL_2
0x400aa08	      0xe832fdffff	               call sym.win32_escape_arg	      5245	channel.c	FUNCTION_119	FOR_1	CALL_2
0x400aa0d	        0x488945f8	                mov qword [rbp - 8], rax	      5245	channel.c	FUNCTION_119	FOR_1	CALL_2
0x400aa11	      0x48837df800	                  cmp qword [rbp - 8], 0	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x400aa16	            0x7507	                           jne 0x400aa1f	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x400aa18	      0xb800000000	                              mov eax, 0	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x400aa1d	            0xeb57	                           jmp 0x400aa76	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x400aa1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400aa23	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400aa27	          0x4889d6	                            mov rsi, rdx	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400aa2a	          0x4889c7	                            mov rdi, rax	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400aa2d	      0xe800000000	                          call 0x400aa32	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400aa32	        0x488b45f8	                mov rax, qword [rbp - 8]	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x400aa36	          0x4889c7	                            mov rdi, rax	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x400aa39	      0xe800000000	                          call 0x400aa3e	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x400aa3e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x400aa42	          0x488b00	                    mov rax, qword [rax]	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x400aa45	          0x4885c0	                           test rax, rax	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x400aa48	            0x7411	                            je 0x400aa5b	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x400aa4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400aa4e	      0xbe20000000	                           mov esi, 0x20	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400aa53	          0x4889c7	                            mov rdi, rax	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400aa56	      0xe800000000	                          call 0x400aa5b	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400aa5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5240	channel.c	FUNCTION_119	FOR_1
0x400aa5f	          0x488b00	                    mov rax, qword [rax]	      5240	channel.c	FUNCTION_119	FOR_1
0x400aa62	        0x488945f0	             mov qword [rbp - 0x10], rax	      5240	channel.c	FUNCTION_119	FOR_1
0x400aa66	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5240	channel.c	FUNCTION_119	FOR_1
0x400aa6b	     0xf856effffff	                           jne 0x400a9df	      5240	channel.c	FUNCTION_119	FOR_1
0x400aa71	      0xb801000000	                              mov eax, 1	      5253	channel.c	FUNCTION_119
0x400aa76	              0xc9	                                   leave	      5254	channel.c	FUNCTION_119
0x400aa77	              0xc3	                                     ret	      5254	channel.c	FUNCTION_119
channel_fill_wfds	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,1:IF,2:SWITCH,0	66
0x40060f3	              0x55	                                push rbp	      3054	channel.c	FUNCTION_74
0x40060f4	          0x4889e5	                            mov rbp, rsp	      3054	channel.c	FUNCTION_74
0x40060f7	          0x897ddc	             mov dword [rbp - 0x24], edi	      3054	channel.c	FUNCTION_74
0x40060fa	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3054	channel.c	FUNCTION_74
0x40060fe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3055	channel.c	FUNCTION_74
0x4006101	          0x8945ec	             mov dword [rbp - 0x14], eax	      3055	channel.c	FUNCTION_74
0x4006104	    0x488b05000000	            mov rax, qword [0x0400610b] 	      3058	channel.c	FUNCTION_74	FOR_1
0x400610b	        0x488945f0	             mov qword [rbp - 0x10], rax	      3058	channel.c	FUNCTION_74	FOR_1
0x400610f	      0xe9ac000000	                           jmp 0x40061c0	      3058	channel.c	FUNCTION_74	FOR_1
0x4006114	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3060	channel.c	FUNCTION_74	FOR_1
0x4006118	    0x480548030000	                          add rax, 0x348	      3060	channel.c	FUNCTION_74	FOR_1
0x400611e	        0x488945f8	                mov qword [rbp - 8], rax	      3060	channel.c	FUNCTION_74	FOR_1
0x4006122	        0x488b45f8	                mov rax, qword [rbp - 8]	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x4006126	            0x8b00	                    mov eax, dword [rax]	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x4006128	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x400612b	     0xf8484000000	                            je 0x40061b5	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x4006131	        0x488b45f8	                mov rax, qword [rbp - 8]	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x4006135	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x400613c	          0x4885c0	                           test rax, rax	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x400613f	            0x7510	                           jne 0x4006151	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x4006141	        0x488b45f8	                mov rax, qword [rbp - 8]	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x4006145	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x400614c	          0x4885c0	                           test rax, rax	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x400614f	            0x7464	                            je 0x40061b5	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x4006151	        0x488b45f8	                mov rax, qword [rbp - 8]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006155	            0x8b00	                    mov eax, dword [rax]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006157	          0x8d503f	                   lea edx, [rax + 0x3f]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400615a	            0x85c0	                           test eax, eax	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400615c	           0xf48c2	                          cmovs eax, edx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400615f	          0xc1f806	                              sar eax, 6	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006162	            0x89c6	                            mov esi, eax	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006164	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006168	          0x4863d6	                         movsxd rdx, esi	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400616b	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400616f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006173	            0x8b00	                    mov eax, dword [rax]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006175	              0x99	                                     cdq	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006176	          0xc1ea1a	                           shr edx, 0x1a	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006179	             0x1d0	                            add eax, edx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400617b	          0x83e03f	                           and eax, 0x3f	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400617e	            0x29d0	                            sub eax, edx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006180	      0xba01000000	                              mov edx, 1	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006185	            0x89c1	                            mov ecx, eax	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006187	          0x48d3e2	                             shl rdx, cl	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400618a	          0x4889d0	                            mov rax, rdx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400618d	          0x4809c7	                             or rdi, rax	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006190	          0x4889f9	                            mov rcx, rdi	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006193	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006197	          0x4863d6	                         movsxd rdx, esi	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400619a	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400619e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3067	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061a2	            0x8b00	                    mov eax, dword [rax]	      3067	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061a4	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3067	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061a7	            0x7c0c	                            jl 0x40061b5	      3067	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061ad	            0x8b00	                    mov eax, dword [rax]	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061af	          0x83c001	                              add eax, 1	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061b2	          0x8945ec	             mov dword [rbp - 0x14], eax	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x40061b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3058	channel.c	FUNCTION_74	FOR_1
0x40061b9	          0x488b00	                    mov rax, qword [rax]	      3058	channel.c	FUNCTION_74	FOR_1
0x40061bc	        0x488945f0	             mov qword [rbp - 0x10], rax	      3058	channel.c	FUNCTION_74	FOR_1
0x40061c0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3058	channel.c	FUNCTION_74	FOR_1
0x40061c5	     0xf8549ffffff	                           jne 0x4006114	      3058	channel.c	FUNCTION_74	FOR_1
0x40061cb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3071	channel.c	FUNCTION_74
0x40061ce	              0x5d	                                 pop rbp	      3072	channel.c	FUNCTION_74
0x40061cf	              0xc3	                                     ret	      3072	channel.c	FUNCTION_74
channel_read	ELSE,2:WHILE,0:FOR,1:DO,0:functions,0:CALL,7:IF,10:SWITCH,0	118
0x40065f5	              0x55	                                push rbp	      3291	channel.c	FUNCTION_79
0x40065f6	          0x4889e5	                            mov rbp, rsp	      3291	channel.c	FUNCTION_79
0x40065f9	        0x4883ec30	                           sub rsp, 0x30	      3291	channel.c	FUNCTION_79
0x40065fd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3291	channel.c	FUNCTION_79
0x4006601	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3291	channel.c	FUNCTION_79
0x4006604	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3291	channel.c	FUNCTION_79
0x4006608	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3293	channel.c	FUNCTION_79
0x400660f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3294	channel.c	FUNCTION_79
0x4006616	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3296	channel.c	FUNCTION_79
0x400661d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3298	channel.c	FUNCTION_79
0x4006621	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3298	channel.c	FUNCTION_79
0x4006624	        0x48c1e004	                              shl rax, 4	      3298	channel.c	FUNCTION_79
0x4006628	          0x4889c1	                            mov rcx, rax	      3298	channel.c	FUNCTION_79
0x400662b	        0x48c1e104	                              shl rcx, 4	      3298	channel.c	FUNCTION_79
0x400662f	          0x4801c8	                            add rax, rcx	      3298	channel.c	FUNCTION_79
0x4006632	          0x4801d0	                            add rax, rdx	      3298	channel.c	FUNCTION_79
0x4006635	        0x4883c018	                           add rax, 0x18	      3298	channel.c	FUNCTION_79
0x4006639	            0x8b00	                    mov eax, dword [rax]	      3298	channel.c	FUNCTION_79
0x400663b	          0x8945fc	                mov dword [rbp - 4], eax	      3298	channel.c	FUNCTION_79
0x400663e	        0x837dfcff	 cmp dword [rbp - 4], 0xffffffffffffffff	      3299	channel.c	FUNCTION_79	IF_1
0x4006642	            0x7526	                           jne 0x400666a	      3299	channel.c	FUNCTION_79	IF_1
0x4006644	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3301	channel.c	FUNCTION_79	IF_1	CALL_1
0x4006647	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3301	channel.c	FUNCTION_79	IF_1	CALL_1
0x400664f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3301	channel.c	FUNCTION_79	IF_1	CALL_1
0x4006653	      0xbe00000000	                              mov esi, 0	      3301	channel.c	FUNCTION_79	IF_1	CALL_1
0x4006658	          0x4889c7	                            mov rdi, rax	      3301	channel.c	FUNCTION_79	IF_1	CALL_1
0x400665b	      0xb800000000	                              mov eax, 0	      3301	channel.c	FUNCTION_79	IF_1	CALL_1
0x4006660	      0xe8b79cffff	                       call sym.ch_error	      3301	channel.c	FUNCTION_79	IF_1	CALL_1
0x4006665	      0xe937010000	                           jmp 0x40067a1	      3303	channel.c	FUNCTION_79	IF_1
0x400666a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3305	channel.c	FUNCTION_79
0x400666e	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3305	channel.c	FUNCTION_79
0x4006671	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3305	channel.c	FUNCTION_79
0x4006674	           0xf94c0	                                 sete al	      3305	channel.c	FUNCTION_79
0x4006677	           0xfb6c0	                           movzx eax, al	      3305	channel.c	FUNCTION_79
0x400667a	          0x8945f8	                mov dword [rbp - 8], eax	      3305	channel.c	FUNCTION_79
0x400667d	    0x488b05000000	            mov rax, qword [0x04006684] 	      3308	channel.c	FUNCTION_79	IF_2
0x4006684	          0x4885c0	                           test rax, rax	      3308	channel.c	FUNCTION_79	IF_2
0x4006687	            0x7521	                           jne 0x40066aa	      3308	channel.c	FUNCTION_79	IF_2
0x4006689	      0xbf00100000	                         mov edi, 0x1000	      3310	channel.c	FUNCTION_79	IF_2	CALL_2
0x400668e	      0xe800000000	                          call 0x4006693	      3310	channel.c	FUNCTION_79	IF_2	CALL_2
0x4006693	    0x488905000000	            mov qword [0x0400669a], rax 	      3310	channel.c	FUNCTION_79	IF_2	CALL_2
0x400669a	    0x488b05000000	            mov rax, qword [0x040066a1] 	      3311	channel.c	FUNCTION_79	IF_2	IF_3
0x40066a1	          0x4885c0	                           test rax, rax	      3311	channel.c	FUNCTION_79	IF_2	IF_3
0x40066a4	     0xf84f6000000	                            je 0x40067a0	      3311	channel.c	FUNCTION_79	IF_2	IF_3
0x40066aa	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066b1	      0xba00000000	                              mov edx, 0	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066b6	            0x89ce	                            mov esi, ecx	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066b8	          0x4889c7	                            mov rdi, rax	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066bb	      0xe810fbffff	                   call sym.channel_wait	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066c0	            0x85c0	                           test eax, eax	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066c2	            0x757f	                           jne 0x4006743	      3320	channel.c	FUNCTION_79	FOR_1	IF_4	CALL_3
0x40066c4	        0x837df800	                  cmp dword [rbp - 8], 0	      3322	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066c8	            0x741e	                            je 0x40066e8	      3322	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066ca	    0x488b0d000000	            mov rcx, qword [0x040066d1] 	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066d1	          0x8b45fc	                mov eax, dword [rbp - 4]	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066d4	      0xba00100000	                         mov edx, 0x1000	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066d9	          0x4889ce	                            mov rsi, rcx	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066dc	            0x89c7	                            mov edi, eax	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066de	      0xe800000000	                          call 0x40066e3	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066e3	          0x8945f0	             mov dword [rbp - 0x10], eax	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066e6	            0xeb1c	                           jmp 0x4006704	      3323	channel.c	FUNCTION_79	FOR_1	IF_5
0x40066e8	    0x488b0d000000	            mov rcx, qword [0x040066ef] 	      3325	channel.c	FUNCTION_79	FOR_1	ELSE_1
0x40066ef	          0x8b45fc	                mov eax, dword [rbp - 4]	      3325	channel.c	FUNCTION_79	FOR_1	ELSE_1
0x40066f2	      0xba00100000	                         mov edx, 0x1000	      3325	channel.c	FUNCTION_79	FOR_1	ELSE_1
0x40066f7	          0x4889ce	                            mov rsi, rcx	      3325	channel.c	FUNCTION_79	FOR_1	ELSE_1
0x40066fa	            0x89c7	                            mov edi, eax	      3325	channel.c	FUNCTION_79	FOR_1	ELSE_1
0x40066fc	      0xe800000000	                          call 0x4006701	      3325	channel.c	FUNCTION_79	FOR_1	ELSE_1
0x4006701	          0x8945f0	             mov dword [rbp - 0x10], eax	      3325	channel.c	FUNCTION_79	FOR_1	ELSE_1
0x4006704	        0x837df000	               cmp dword [rbp - 0x10], 0	      3326	channel.c	FUNCTION_79	FOR_1	IF_6
0x4006708	            0x7e3c	                           jle 0x4006746	      3326	channel.c	FUNCTION_79	FOR_1	IF_6
0x400670a	    0x488b15000000	            mov rdx, qword [0x04006711] 	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x4006711	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x4006714	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x4006717	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x400671b	    0x41b900000000	                              mov r9d, 0	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x4006721	    0x41b800000000	                              mov r8d, 0	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x4006727	          0x4889c7	                            mov rdi, rax	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x400672a	      0xe8c4ccffff	                   call sym.channel_save	      3330	channel.c	FUNCTION_79	FOR_1	CALL_4
0x400672f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3331	channel.c	FUNCTION_79	FOR_1
0x4006732	           0x145f4	              add dword [rbp - 0xc], eax	      3331	channel.c	FUNCTION_79	FOR_1
0x4006735	    0x817df0ff0f00	          cmp dword [rbp - 0x10], 0xfff 	      3332	channel.c	FUNCTION_79	FOR_1	IF_7
0x400673c	            0x7e0b	                           jle 0x4006749	      3332	channel.c	FUNCTION_79	FOR_1	IF_7
0x400673e	      0xe967ffffff	                           jmp 0x40066aa	      3334	channel.c	FUNCTION_79	FOR_1
0x4006743	              0x90	                                     nop	      3321	channel.c	FUNCTION_79	FOR_1	IF_4
0x4006744	            0xeb04	                           jmp 0x400674a	      3321	channel.c	FUNCTION_79	FOR_1	IF_4
0x4006746	              0x90	                                     nop	      3327	channel.c	FUNCTION_79	FOR_1	IF_6
0x4006747	            0xeb01	                           jmp 0x400674a	      3327	channel.c	FUNCTION_79	FOR_1	IF_6
0x4006749	              0x90	                                     nop	      3333	channel.c	FUNCTION_79	FOR_1	IF_7
0x400674a	        0x837df400	                cmp dword [rbp - 0xc], 0	      3337	channel.c	FUNCTION_79	IF_8
0x400674e	            0x7f2c	                            jg 0x400677c	      3337	channel.c	FUNCTION_79	IF_8
0x4006750	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3339	channel.c	FUNCTION_79	IF_8	IF_9
0x4006754	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      3339	channel.c	FUNCTION_79	IF_8	IF_9
0x400675a	            0x85c0	                           test eax, eax	      3339	channel.c	FUNCTION_79	IF_8	IF_9
0x400675c	            0x7543	                           jne 0x40067a1	      3339	channel.c	FUNCTION_79	IF_8	IF_9
0x400675e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x4006761	          0xc1e81f	                           shr eax, 0x1f	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x4006764	           0xfb6d0	                           movzx edx, al	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x4006767	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x400676b	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x400676e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x4006772	          0x4889c7	                            mov rdi, rax	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x4006775	      0xe88bfcffff	         call sym.ch_close_part_on_error	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x400677a	            0xeb25	                           jmp 0x40067a1	      3340	channel.c	FUNCTION_79	IF_8	CALL_5
0x400677c	    0x8b0500000000	            mov eax, dword [0x04006782] 	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x4006782	            0x85c0	                           test eax, eax	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x4006784	            0x750a	                           jne 0x4006790	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x4006786	    0x8b0500000000	            mov eax, dword [0x0400678c] 	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x400678c	            0x85c0	                           test eax, eax	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x400678e	            0x7411	                            je 0x40067a1	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x4006790	      0xe800000000	                          call 0x4006795	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x4006795	            0x85c0	                           test eax, eax	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x4006797	            0x7408	                            je 0x40067a1	      3343	channel.c	FUNCTION_79	ELSE_2	IF_10	CALL_6
0x4006799	      0xe800000000	                          call 0x400679e	      3345	channel.c	FUNCTION_79	ELSE_2	IF_10
0x400679e	            0xeb01	                           jmp 0x40067a1	      3345	channel.c	FUNCTION_79	ELSE_2	IF_10
0x40067a0	              0x90	                                     nop	      3312	channel.c	FUNCTION_79	IF_2	IF_3
0x40067a1	              0xc9	                                   leave	      3347	channel.c	FUNCTION_79
0x40067a2	              0xc3	                                     ret	      3347	channel.c	FUNCTION_79
channel_read_fd	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,3:IF,1:SWITCH,0	35
0x4000986	              0x55	                                push rbp	       471	channel.c	FUNCTION_18
0x4000987	          0x4889e5	                            mov rbp, rsp	       471	channel.c	FUNCTION_18
0x400098a	        0x4883ec30	                           sub rsp, 0x30	       471	channel.c	FUNCTION_18
0x400098e	          0x897ddc	             mov dword [rbp - 0x24], edi	       471	channel.c	FUNCTION_18
0x4000991	    0x64488b042528	                mov rax, qword fs:[0x28]	       471	channel.c	FUNCTION_18
0x400099a	        0x488945f8	                mov qword [rbp - 8], rax	       471	channel.c	FUNCTION_18
0x400099e	            0x31c0	                            xor eax, eax	       471	channel.c	FUNCTION_18
0x40009a0	        0x488d55ec	                   lea rdx, [rbp - 0x14]	       475	channel.c	FUNCTION_18	CALL_1
0x40009a4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       475	channel.c	FUNCTION_18	CALL_1
0x40009a7	          0x4889d6	                            mov rsi, rdx	       475	channel.c	FUNCTION_18	CALL_1
0x40009aa	            0x89c7	                            mov edi, eax	       475	channel.c	FUNCTION_18	CALL_1
0x40009ac	      0xe800000000	                          call 0x40009b1	       475	channel.c	FUNCTION_18	CALL_1
0x40009b1	        0x488945f0	             mov qword [rbp - 0x10], rax	       475	channel.c	FUNCTION_18	CALL_1
0x40009b5	      0x48837df000	               cmp qword [rbp - 0x10], 0	       476	channel.c	FUNCTION_18	IF_1
0x40009ba	            0x751b	                           jne 0x40009d7	       476	channel.c	FUNCTION_18	IF_1
0x40009bc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       477	channel.c	FUNCTION_18	CALL_2
0x40009bf	            0x89c2	                            mov edx, eax	       477	channel.c	FUNCTION_18	CALL_2
0x40009c1	      0xbe00000000	                              mov esi, 0	       477	channel.c	FUNCTION_18	CALL_2
0x40009c6	      0xbf00000000	                              mov edi, 0	       477	channel.c	FUNCTION_18	CALL_2
0x40009cb	      0xb800000000	                              mov eax, 0	       477	channel.c	FUNCTION_18	CALL_2
0x40009d0	      0xe847f9ffff	                       call sym.ch_error	       477	channel.c	FUNCTION_18	CALL_2
0x40009d5	            0xeb16	                           jmp 0x40009ed	       480	channel.c	FUNCTION_18
0x40009d7	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       479	channel.c	FUNCTION_18	CALL_3
0x40009da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       479	channel.c	FUNCTION_18	CALL_3
0x40009de	      0xba00000000	                              mov edx, 0	       479	channel.c	FUNCTION_18	CALL_3
0x40009e3	            0x89ce	                            mov esi, ecx	       479	channel.c	FUNCTION_18	CALL_3
0x40009e5	          0x4889c7	                            mov rdi, rax	       479	channel.c	FUNCTION_18	CALL_3
0x40009e8	      0xe8085c0000	                   call sym.channel_read	       479	channel.c	FUNCTION_18	CALL_3
0x40009ed	              0x90	                                     nop	       480	channel.c	FUNCTION_18
0x40009ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	channel.c	FUNCTION_18
0x40009f2	    0x644833042528	                xor rax, qword fs:[0x28]	       480	channel.c	FUNCTION_18
0x40009fb	            0x7405	                            je 0x4000a02	       480	channel.c	FUNCTION_18
0x40009fd	      0xe800000000	                          call 0x4000a02	       480	channel.c	FUNCTION_18
0x4000a02	              0xc9	                                   leave	       480	channel.c	FUNCTION_18
0x4000a03	              0xc3	                                     ret	       480	channel.c	FUNCTION_18
channel_any_keep_open	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,0:IF,1:SWITCH,0	19
0x4007037	              0x55	                                push rbp	      3656	channel.c	FUNCTION_85
0x4007038	          0x4889e5	                            mov rbp, rsp	      3656	channel.c	FUNCTION_85
0x400703b	    0x488b05000000	            mov rax, qword [0x04007042] 	      3659	channel.c	FUNCTION_85	FOR_1
0x4007042	        0x488945f8	                mov qword [rbp - 8], rax	      3659	channel.c	FUNCTION_85	FOR_1
0x4007046	            0xeb20	                           jmp 0x4007068	      3659	channel.c	FUNCTION_85	FOR_1
0x4007048	        0x488b45f8	                mov rax, qword [rbp - 8]	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x400704c	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4007052	            0x85c0	                           test eax, eax	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4007054	            0x7407	                            je 0x400705d	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4007056	      0xb801000000	                              mov eax, 1	      3661	channel.c	FUNCTION_85	FOR_1	IF_1
0x400705b	            0xeb17	                           jmp 0x4007074	      3661	channel.c	FUNCTION_85	FOR_1	IF_1
0x400705d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3659	channel.c	FUNCTION_85	FOR_1
0x4007061	          0x488b00	                    mov rax, qword [rax]	      3659	channel.c	FUNCTION_85	FOR_1
0x4007064	        0x488945f8	                mov qword [rbp - 8], rax	      3659	channel.c	FUNCTION_85	FOR_1
0x4007068	      0x48837df800	                  cmp qword [rbp - 8], 0	      3659	channel.c	FUNCTION_85	FOR_1
0x400706d	            0x75d9	                           jne 0x4007048	      3659	channel.c	FUNCTION_85	FOR_1
0x400706f	      0xb800000000	                              mov eax, 0	      3662	channel.c	FUNCTION_85
0x4007074	              0x5d	                                 pop rbp	      3663	channel.c	FUNCTION_85
0x4007075	              0xc3	                                     ret	      3663	channel.c	FUNCTION_85
send_common	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,10:IF,5:SWITCH,0	98
0x40075c2	              0x55	                                push rbp	      3883	channel.c	FUNCTION_88
0x40075c3	          0x4889e5	                            mov rbp, rsp	      3883	channel.c	FUNCTION_88
0x40075c6	        0x4883ec40	                           sub rsp, 0x40	      3883	channel.c	FUNCTION_88
0x40075ca	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3883	channel.c	FUNCTION_88
0x40075ce	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3883	channel.c	FUNCTION_88
0x40075d2	          0x8955dc	             mov dword [rbp - 0x24], edx	      3883	channel.c	FUNCTION_88
0x40075d5	          0x894dd8	             mov dword [rbp - 0x28], ecx	      3883	channel.c	FUNCTION_88
0x40075d8	        0x4c8945d0	              mov qword [rbp - 0x30], r8	      3883	channel.c	FUNCTION_88
0x40075dc	        0x4c894dc8	              mov qword [rbp - 0x38], r9	      3883	channel.c	FUNCTION_88
0x40075e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3887	channel.c	FUNCTION_88	CALL_1
0x40075e4	          0x4889c7	                            mov rdi, rax	      3887	channel.c	FUNCTION_88	CALL_1
0x40075e7	      0xe800000000	                          call 0x40075ec	      3887	channel.c	FUNCTION_88	CALL_1
0x40075ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3888	channel.c	FUNCTION_88	CALL_2
0x40075f0	      0xb900000000	                              mov ecx, 0	      3888	channel.c	FUNCTION_88	CALL_2
0x40075f5	      0xba00000000	                              mov edx, 0	      3888	channel.c	FUNCTION_88	CALL_2
0x40075fa	      0xbe01000000	                              mov esi, 1	      3888	channel.c	FUNCTION_88	CALL_2
0x40075ff	          0x4889c7	                            mov rdi, rax	      3888	channel.c	FUNCTION_88	CALL_2
0x4007602	      0xe800000000	                          call 0x4007607	      3888	channel.c	FUNCTION_88	CALL_2
0x4007607	        0x488945f8	                mov qword [rbp - 8], rax	      3888	channel.c	FUNCTION_88	CALL_2
0x400760b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3889	channel.c	FUNCTION_88	IF_1
0x4007610	            0x750a	                           jne 0x400761c	      3889	channel.c	FUNCTION_88	IF_1
0x4007612	      0xb800000000	                              mov eax, 0	      3890	channel.c	FUNCTION_88	IF_1
0x4007617	      0xe912010000	                           jmp 0x400772e	      3890	channel.c	FUNCTION_88	IF_1
0x400761c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3891	channel.c	FUNCTION_88	CALL_3
0x4007620	          0x4889c7	                            mov rdi, rax	      3891	channel.c	FUNCTION_88	CALL_3
0x4007623	      0xe800000000	                          call 0x4007628	      3891	channel.c	FUNCTION_88	CALL_3
0x4007628	          0x8945f4	              mov dword [rbp - 0xc], eax	      3891	channel.c	FUNCTION_88	CALL_3
0x400762b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3892	channel.c	FUNCTION_88	CALL_4
0x400762f	          0x4889c7	                            mov rdi, rax	      3892	channel.c	FUNCTION_88	CALL_4
0x4007632	      0xe800000000	                          call 0x4007637	      3892	channel.c	FUNCTION_88	CALL_4
0x4007637	            0x89c2	                            mov edx, eax	      3892	channel.c	FUNCTION_88	CALL_4
0x4007639	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3892	channel.c	FUNCTION_88	CALL_4
0x400763d	            0x8910	                    mov dword [rax], edx	      3892	channel.c	FUNCTION_88	CALL_4
0x400763f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007643	        0x488d7820	                   lea rdi, [rax + 0x20]	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007647	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400764b	      0xb900000000	                              mov ecx, 0	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007650	      0xba10020000	                          mov edx, 0x210	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007655	          0x4889c6	                            mov rsi, rax	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007658	      0xe800000000	                          call 0x400765d	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400765d	            0x85c0	                           test eax, eax	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400765f	            0x750a	                           jne 0x400766b	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x4007661	      0xb800000000	                              mov eax, 0	      3895	channel.c	FUNCTION_88	IF_2
0x4007666	      0xe9c3000000	                           jmp 0x400772e	      3895	channel.c	FUNCTION_88	IF_2
0x400766b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3900	channel.c	FUNCTION_88	IF_3
0x400766f	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      3900	channel.c	FUNCTION_88	IF_3
0x4007676	          0x4885c0	                           test rax, rax	      3900	channel.c	FUNCTION_88	IF_3
0x4007679	            0x7469	                            je 0x40076e4	      3900	channel.c	FUNCTION_88	IF_3
0x400767b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3900	channel.c	FUNCTION_88	IF_3
0x400767f	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      3900	channel.c	FUNCTION_88	IF_3
0x4007686	           0xfb600	                   movzx eax, byte [rax]	      3900	channel.c	FUNCTION_88	IF_3
0x4007689	            0x84c0	                             test al, al	      3900	channel.c	FUNCTION_88	IF_3
0x400768b	            0x7457	                            je 0x40076e4	      3900	channel.c	FUNCTION_88	IF_3
0x400768d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x4007691	            0x7423	                            je 0x40076b6	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x4007693	      0xbf00000000	                              mov edi, 0	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x4007698	      0xe800000000	                          call 0x400769d	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400769d	          0x4889c2	                            mov rdx, rax	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x40076a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x40076a4	          0x4889c6	                            mov rsi, rax	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x40076a7	          0x4889d7	                            mov rdi, rdx	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x40076aa	      0xe800000000	                          call 0x40076af	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x40076af	      0xb800000000	                              mov eax, 0	      3905	channel.c	FUNCTION_88	IF_3	IF_4
0x40076b4	            0xeb78	                           jmp 0x400772e	      3905	channel.c	FUNCTION_88	IF_3	IF_4
0x40076b6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076ba	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076c5	    0x488b90a00100	           mov rdx, qword [rax + 0x1a0] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076cc	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076d0	            0x8b30	                    mov esi, dword [rax]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076d2	          0x8b7ddc	             mov edi, dword [rbp - 0x24]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076d9	          0x4189f8	                            mov r8d, edi	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076dc	          0x4889c7	                            mov rdi, rax	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076df	      0xe800000000	                          call 0x40076e4	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x40076e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40076e8	          0x4889c7	                            mov rdi, rax	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40076eb	      0xe800000000	                          call 0x40076f0	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40076f0	            0x89c7	                            mov edi, eax	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40076f2	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40076f6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40076fa	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x40076fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007701	          0x4989c8	                             mov r8, rcx	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007704	            0x89f9	                            mov ecx, edi	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007706	          0x4889c7	                            mov rdi, rax	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007709	      0xe800000000	                          call 0x400770e	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400770e	          0x83f801	                              cmp eax, 1	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007711	            0x7516	                           jne 0x4007729	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x4007713	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3912	channel.c	FUNCTION_88	IF_5
0x4007717	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      3912	channel.c	FUNCTION_88	IF_5
0x400771e	          0x4885c0	                           test rax, rax	      3912	channel.c	FUNCTION_88	IF_5
0x4007721	            0x7506	                           jne 0x4007729	      3912	channel.c	FUNCTION_88	IF_5
0x4007723	        0x488b45f8	                mov rax, qword [rbp - 8]	      3913	channel.c	FUNCTION_88	IF_5
0x4007727	            0xeb05	                           jmp 0x400772e	      3913	channel.c	FUNCTION_88	IF_5
0x4007729	      0xb800000000	                              mov eax, 0	      3914	channel.c	FUNCTION_88
0x400772e	              0xc9	                                   leave	      3915	channel.c	FUNCTION_88
0x400772f	              0xc3	                                     ret	      3915	channel.c	FUNCTION_88
job_need_end_check	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	20
0x400a60e	              0x55	                                push rbp	      5102	channel.c	FUNCTION_113
0x400a60f	          0x4889e5	                            mov rbp, rsp	      5102	channel.c	FUNCTION_113
0x400a612	        0x48897df8	                mov qword [rbp - 8], rdi	      5102	channel.c	FUNCTION_113
0x400a616	        0x488b45f8	                mov rax, qword [rbp - 8]	      5103	channel.c	FUNCTION_113
0x400a61a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5103	channel.c	FUNCTION_113
0x400a61d	          0x83f801	                              cmp eax, 1	      5104	channel.c	FUNCTION_113
0x400a620	            0x7521	                           jne 0x400a643	      5104	channel.c	FUNCTION_113
0x400a622	        0x488b45f8	                mov rax, qword [rbp - 8]	      5104	channel.c	FUNCTION_113
0x400a626	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5104	channel.c	FUNCTION_113
0x400a62a	          0x4885c0	                           test rax, rax	      5104	channel.c	FUNCTION_113
0x400a62d	            0x750d	                           jne 0x400a63c	      5104	channel.c	FUNCTION_113
0x400a62f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5104	channel.c	FUNCTION_113
0x400a633	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5104	channel.c	FUNCTION_113
0x400a637	          0x4885c0	                           test rax, rax	      5104	channel.c	FUNCTION_113
0x400a63a	            0x7407	                            je 0x400a643	      5104	channel.c	FUNCTION_113
0x400a63c	      0xb801000000	                              mov eax, 1	      5104	channel.c	FUNCTION_113
0x400a641	            0xeb05	                           jmp 0x400a648	      5104	channel.c	FUNCTION_113
0x400a643	      0xb800000000	                              mov eax, 0	      5104	channel.c	FUNCTION_113
0x400a648	              0x5d	                                 pop rbp	      5105	channel.c	FUNCTION_113
0x400a649	              0xc3	                                     ret	      5105	channel.c	FUNCTION_113
part_from_char	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	14
0x40086d1	              0x55	                                push rbp	      4482	channel.c	FUNCTION_106
0x40086d2	          0x4889e5	                            mov rbp, rsp	      4482	channel.c	FUNCTION_106
0x40086d5	          0x897dfc	                mov dword [rbp - 4], edi	      4482	channel.c	FUNCTION_106
0x40086d8	        0x837dfc69	               cmp dword [rbp - 4], 0x69	      4483	channel.c	FUNCTION_106
0x40086dc	            0x7414	                            je 0x40086f2	      4483	channel.c	FUNCTION_106
0x40086de	        0x837dfc6f	               cmp dword [rbp - 4], 0x6f	      4483	channel.c	FUNCTION_106
0x40086e2	            0x7507	                           jne 0x40086eb	      4483	channel.c	FUNCTION_106
0x40086e4	      0xb801000000	                              mov eax, 1	      4483	channel.c	FUNCTION_106
0x40086e9	            0xeb0c	                           jmp 0x40086f7	      4483	channel.c	FUNCTION_106
0x40086eb	      0xb802000000	                              mov eax, 2	      4483	channel.c	FUNCTION_106
0x40086f0	            0xeb05	                           jmp 0x40086f7	      4483	channel.c	FUNCTION_106
0x40086f2	      0xb803000000	                              mov eax, 3	      4483	channel.c	FUNCTION_106
0x40086f7	              0x5d	                                 pop rbp	      4484	channel.c	FUNCTION_106
0x40086f8	              0xc3	                                     ret	      4484	channel.c	FUNCTION_106
channel_write_any_lines	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	17
0x4002c0a	              0x55	                                push rbp	      1530	channel.c	FUNCTION_41
0x4002c0b	          0x4889e5	                            mov rbp, rsp	      1530	channel.c	FUNCTION_41
0x4002c0e	        0x4883ec10	                           sub rsp, 0x10	      1530	channel.c	FUNCTION_41
0x4002c12	    0x488b05000000	            mov rax, qword [0x04002c19] 	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c19	        0x488945f8	                mov qword [rbp - 8], rax	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c1d	            0xeb17	                           jmp 0x4002c36	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1534	channel.c	FUNCTION_41	CALL_1
0x4002c23	          0x4889c7	                            mov rdi, rax	      1534	channel.c	FUNCTION_41	CALL_1
0x4002c26	      0xe850ffffff	            call sym.channel_write_input	      1534	channel.c	FUNCTION_41	CALL_1
0x4002c2b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c2f	          0x488b00	                    mov rax, qword [rax]	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c32	        0x488945f8	                mov qword [rbp - 8], rax	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c36	      0x48837df800	                  cmp qword [rbp - 8], 0	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c3b	            0x75e2	                           jne 0x4002c1f	      1533	channel.c	FUNCTION_41	FOR_1
0x4002c3d	              0x90	                                     nop	      1535	channel.c	FUNCTION_41
0x4002c3e	              0xc9	                                   leave	      1535	channel.c	FUNCTION_41
0x4002c3f	              0xc3	                                     ret	      1535	channel.c	FUNCTION_41
remove_from_writeque	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	28
0x4005df7	              0x55	                                push rbp	      2962	channel.c	FUNCTION_70
0x4005df8	          0x4889e5	                            mov rbp, rsp	      2962	channel.c	FUNCTION_70
0x4005dfb	        0x4883ec10	                           sub rsp, 0x10	      2962	channel.c	FUNCTION_70
0x4005dff	        0x48897df8	                mov qword [rbp - 8], rdi	      2962	channel.c	FUNCTION_70
0x4005e03	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2962	channel.c	FUNCTION_70
0x4005e07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2963	channel.c	FUNCTION_70	CALL_1
0x4005e0b	          0x4889c7	                            mov rdi, rax	      2963	channel.c	FUNCTION_70	CALL_1
0x4005e0e	      0xe800000000	                          call 0x4005e13	      2963	channel.c	FUNCTION_70	CALL_1
0x4005e13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2964	channel.c	FUNCTION_70
0x4005e17	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2964	channel.c	FUNCTION_70
0x4005e1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2964	channel.c	FUNCTION_70
0x4005e1f	        0x48895018	             mov qword [rax + 0x18], rdx	      2964	channel.c	FUNCTION_70
0x4005e23	        0x488b45f8	                mov rax, qword [rbp - 8]	      2965	channel.c	FUNCTION_70	IF_1
0x4005e27	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2965	channel.c	FUNCTION_70	IF_1
0x4005e2b	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x4005e2e	            0x750e	                           jne 0x4005e3e	      2965	channel.c	FUNCTION_70	IF_1
0x4005e30	        0x488b45f8	                mov rax, qword [rbp - 8]	      2966	channel.c	FUNCTION_70	IF_1
0x4005e34	    0x48c740200000	               mov qword [rax + 0x20], 0	      2966	channel.c	FUNCTION_70	IF_1
0x4005e3c	            0xeb10	                           jmp 0x4005e4e	      2966	channel.c	FUNCTION_70	IF_1
0x4005e3e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2968	channel.c	FUNCTION_70	ELSE_1
0x4005e42	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2968	channel.c	FUNCTION_70	ELSE_1
0x4005e46	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4005e4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2969	channel.c	FUNCTION_70	CALL_2
0x4005e52	          0x4889c7	                            mov rdi, rax	      2969	channel.c	FUNCTION_70	CALL_2
0x4005e55	      0xe800000000	                          call 0x4005e5a	      2969	channel.c	FUNCTION_70	CALL_2
0x4005e5a	              0x90	                                     nop	      2970	channel.c	FUNCTION_70
0x4005e5b	              0xc9	                                   leave	      2970	channel.c	FUNCTION_70
0x4005e5c	              0xc3	                                     ret	      2970	channel.c	FUNCTION_70
handle_io	ELSE,5:WHILE,0:FOR,0:DO,0:functions,0:CALL,8:IF,5:SWITCH,0	90
0x40083c8	              0x55	                                push rbp	      4416	channel.c	FUNCTION_103
0x40083c9	          0x4889e5	                            mov rbp, rsp	      4416	channel.c	FUNCTION_103
0x40083cc	        0x4883ec30	                           sub rsp, 0x30	      4416	channel.c	FUNCTION_103
0x40083d0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4416	channel.c	FUNCTION_103
0x40083d4	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4416	channel.c	FUNCTION_103
0x40083d7	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4416	channel.c	FUNCTION_103
0x40083db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4417	channel.c	FUNCTION_103	CALL_1
0x40083df	          0x4889c7	                            mov rdi, rax	      4417	channel.c	FUNCTION_103	CALL_1
0x40083e2	      0xe800000000	                          call 0x40083e7	      4417	channel.c	FUNCTION_103	CALL_1
0x40083e7	        0x488945f8	                mov qword [rbp - 8], rax	      4417	channel.c	FUNCTION_103	CALL_1
0x40083eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4419	channel.c	FUNCTION_103
0x40083ef	            0x8b00	                    mov eax, dword [rax]	      4419	channel.c	FUNCTION_103
0x40083f1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4419	channel.c	FUNCTION_103
0x40083f4	          0x83ea01	                              sub edx, 1	      4419	channel.c	FUNCTION_103
0x40083f7	      0xbe00000100	                        mov esi, 0x10000	      4419	channel.c	FUNCTION_103
0x40083fc	            0x89d1	                            mov ecx, edx	      4419	channel.c	FUNCTION_103
0x40083fe	            0xd3e6	                             shl esi, cl	      4419	channel.c	FUNCTION_103
0x4008400	            0x89f2	                            mov edx, esi	      4419	channel.c	FUNCTION_103
0x4008402	             0x9c2	                             or edx, eax	      4419	channel.c	FUNCTION_103
0x4008404	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4419	channel.c	FUNCTION_103
0x4008408	            0x8910	                    mov dword [rax], edx	      4419	channel.c	FUNCTION_103
0x400840a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x400840e	      0xbe00000000	                              mov esi, 0	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4008413	          0x4889c7	                            mov rdi, rax	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x4008416	      0xe800000000	                          call 0x400841b	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x400841b	            0x85c0	                           test eax, eax	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x400841d	            0x7518	                           jne 0x4008437	      4420	channel.c	FUNCTION_103	IF_1	CALL_2
0x400841f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4421	channel.c	FUNCTION_103	IF_1
0x4008423	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4421	channel.c	FUNCTION_103	IF_1
0x4008426	        0x4883c204	                              add rdx, 4	      4421	channel.c	FUNCTION_103	IF_1
0x400842a	    0xc74490080100	          mov dword [rax + rdx*4 + 8], 1	      4421	channel.c	FUNCTION_103	IF_1
0x4008432	      0xe9d4000000	                           jmp 0x400850b	      4421	channel.c	FUNCTION_103	IF_1
0x4008437	        0x488b45f8	                mov rax, qword [rbp - 8]	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x400843b	      0xbe00000000	                              mov esi, 0	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4008440	          0x4889c7	                            mov rdi, rax	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4008443	      0xe800000000	                          call 0x4008448	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x4008448	            0x85c0	                           test eax, eax	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x400844a	            0x7518	                           jne 0x4008464	      4422	channel.c	FUNCTION_103	ELSE_1	IF_2	CALL_3
0x400844c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x4008450	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x4008453	        0x4883c204	                              add rdx, 4	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x4008457	    0xc74490080000	          mov dword [rax + rdx*4 + 8], 0	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x400845f	      0xe9a7000000	                           jmp 0x400850b	      4423	channel.c	FUNCTION_103	ELSE_1	IF_2
0x4008464	        0x488b45f8	                mov rax, qword [rbp - 8]	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4008468	      0xbe00000000	                              mov esi, 0	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x400846d	          0x4889c7	                            mov rdi, rax	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4008470	      0xe800000000	                          call 0x4008475	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4008475	            0x85c0	                           test eax, eax	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4008477	            0x7515	                           jne 0x400848e	      4424	channel.c	FUNCTION_103	ELSE_2	IF_3	CALL_4
0x4008479	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x400847d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x4008480	        0x4883c204	                              add rdx, 4	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x4008484	    0xc74490080200	          mov dword [rax + rdx*4 + 8], 2	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x400848c	            0xeb7d	                           jmp 0x400850b	      4425	channel.c	FUNCTION_103	ELSE_2	IF_3
0x400848e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4008492	      0xbe00000000	                              mov esi, 0	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x4008497	          0x4889c7	                            mov rdi, rax	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x400849a	      0xe800000000	                          call 0x400849f	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x400849f	            0x85c0	                           test eax, eax	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x40084a1	            0x7515	                           jne 0x40084b8	      4426	channel.c	FUNCTION_103	ELSE_3	IF_4	CALL_5
0x40084a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x40084a7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x40084aa	        0x4883c204	                              add rdx, 4	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x40084ae	    0xc74490080300	          mov dword [rax + rdx*4 + 8], 3	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x40084b6	            0xeb53	                           jmp 0x400850b	      4427	channel.c	FUNCTION_103	ELSE_3	IF_4
0x40084b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084bc	      0xbe00000000	                              mov esi, 0	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084c1	          0x4889c7	                            mov rdi, rax	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084c4	      0xe800000000	                          call 0x40084c9	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084c9	            0x85c0	                           test eax, eax	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084cb	            0x751b	                           jne 0x40084e8	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084cd	        0x837de402	               cmp dword [rbp - 0x1c], 2	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084d1	            0x7515	                           jne 0x40084e8	      4428	channel.c	FUNCTION_103	ELSE_4	IF_5	CALL_6
0x40084d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x40084d7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x40084da	        0x4883c204	                              add rdx, 4	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x40084de	    0xc74490080400	          mov dword [rax + rdx*4 + 8], 4	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x40084e6	            0xeb23	                           jmp 0x400850b	      4429	channel.c	FUNCTION_103	ELSE_4	IF_5
0x40084e8	      0xbf00000000	                              mov edi, 0	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x40084ed	      0xe800000000	                          call 0x40084f2	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x40084f2	          0x4889c2	                            mov rdx, rax	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x40084f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x40084f9	          0x4889c6	                            mov rsi, rax	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x40084fc	          0x4889d7	                            mov rdi, rdx	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x40084ff	      0xe800000000	                          call 0x4008504	      4432	channel.c	FUNCTION_103	ELSE_5	CALL_8
0x4008504	      0xb800000000	                              mov eax, 0	      4433	channel.c	FUNCTION_103	ELSE_5
0x4008509	            0xeb05	                           jmp 0x4008510	      4433	channel.c	FUNCTION_103	ELSE_5
0x400850b	      0xb801000000	                              mov eax, 1	      4435	channel.c	FUNCTION_103
0x4008510	              0xc9	                                   leave	      4436	channel.c	FUNCTION_103
0x4008511	              0xc3	                                     ret	      4436	channel.c	FUNCTION_103
channel_push_json	ELSE,6:WHILE,1:FOR,0:DO,0:functions,0:CALL,5:IF,6:SWITCH,0	121
0x4003ef9	              0x55	                                push rbp	      2134	channel.c	FUNCTION_56
0x4003efa	          0x4889e5	                            mov rbp, rsp	      2134	channel.c	FUNCTION_56
0x4003efd	        0x4883ec40	                           sub rsp, 0x40	      2134	channel.c	FUNCTION_56
0x4003f01	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2134	channel.c	FUNCTION_56
0x4003f05	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2134	channel.c	FUNCTION_56
0x4003f08	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2134	channel.c	FUNCTION_56
0x4003f0c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2135	channel.c	FUNCTION_56
0x4003f0f	        0x48c1e004	                              shl rax, 4	      2135	channel.c	FUNCTION_56
0x4003f13	          0x4889c2	                            mov rdx, rax	      2135	channel.c	FUNCTION_56
0x4003f16	        0x48c1e204	                              shl rdx, 4	      2135	channel.c	FUNCTION_56
0x4003f1a	          0x4801d0	                            add rax, rdx	      2135	channel.c	FUNCTION_56
0x4003f1d	        0x488d5040	                   lea rdx, [rax + 0x40]	      2135	channel.c	FUNCTION_56
0x4003f21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2135	channel.c	FUNCTION_56
0x4003f25	          0x4801d0	                            add rax, rdx	      2135	channel.c	FUNCTION_56
0x4003f28	        0x4883c010	                           add rax, 0x10	      2135	channel.c	FUNCTION_56
0x4003f2c	        0x488945f0	             mov qword [rbp - 0x10], rax	      2135	channel.c	FUNCTION_56
0x4003f30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2136	channel.c	FUNCTION_56
0x4003f34	        0x488b4008	                mov rax, qword [rax + 8]	      2136	channel.c	FUNCTION_56
0x4003f38	        0x488945e8	             mov qword [rbp - 0x18], rax	      2136	channel.c	FUNCTION_56
0x4003f3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2139	channel.c	FUNCTION_56	IF_1
0x4003f40	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2139	channel.c	FUNCTION_56	IF_1
0x4003f44	          0x4885c0	                           test rax, rax	      2139	channel.c	FUNCTION_56	IF_1
0x4003f47	            0x7425	                            je 0x4003f6e	      2139	channel.c	FUNCTION_56	IF_1
0x4003f49	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2139	channel.c	FUNCTION_56	IF_1
0x4003f4d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2139	channel.c	FUNCTION_56	IF_1
0x4003f51	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2139	channel.c	FUNCTION_56	IF_1
0x4003f54	            0x85c0	                           test eax, eax	      2139	channel.c	FUNCTION_56	IF_1
0x4003f56	            0x7416	                            je 0x4003f6e	      2139	channel.c	FUNCTION_56	IF_1
0x4003f58	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2141	channel.c	FUNCTION_56	IF_1
0x4003f60	            0xeb1e	                           jmp 0x4003f80	      2141	channel.c	FUNCTION_56	IF_1
0x4003f62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2144	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f66	        0x488b4008	                mov rax, qword [rax + 8]	      2144	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f6a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2144	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f6e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f73	            0x740b	                            je 0x4003f80	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f79	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f7c	            0x85c0	                           test eax, eax	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f7e	            0x75e2	                           jne 0x4003f62	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4003f80	      0xbf20000000	                           mov edi, 0x20	      2146	channel.c	FUNCTION_56	CALL_1
0x4003f85	      0xe800000000	                          call 0x4003f8a	      2146	channel.c	FUNCTION_56	CALL_1
0x4003f8a	        0x488945f8	                mov qword [rbp - 8], rax	      2146	channel.c	FUNCTION_56	CALL_1
0x4003f8e	      0x48837df800	                  cmp qword [rbp - 8], 0	      2147	channel.c	FUNCTION_56	IF_2
0x4003f93	            0x7511	                           jne 0x4003fa6	      2147	channel.c	FUNCTION_56	IF_2
0x4003f95	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2148	channel.c	FUNCTION_56	CALL_2
0x4003f99	          0x4889c7	                            mov rdi, rax	      2148	channel.c	FUNCTION_56	CALL_2
0x4003f9c	      0xe800000000	                          call 0x4003fa1	      2148	channel.c	FUNCTION_56	CALL_2
0x4003fa1	      0xe90b010000	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_56	ELSE_6
0x4003fa6	      0xe800000000	                          call 0x4003fab	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x4003fab	          0x4889c2	                            mov rdx, rax	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x4003fae	        0x488b45f8	                mov rax, qword [rbp - 8]	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x4003fb2	          0x488910	                    mov qword [rax], rdx	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x4003fb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4003fb9	          0x488b00	                    mov rax, qword [rax]	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4003fbc	          0x4885c0	                           test rax, rax	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4003fbf	            0x751d	                           jne 0x4003fde	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4003fc1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4003fc5	          0x4889c7	                            mov rdi, rax	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4003fc8	      0xe800000000	                          call 0x4003fcd	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4003fcd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4003fd1	          0x4889c7	                            mov rdi, rax	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4003fd4	      0xe800000000	                          call 0x4003fd9	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4003fd9	      0xe9d3000000	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_56	ELSE_6
0x4003fde	        0x488b45f8	                mov rax, qword [rbp - 8]	      2159	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003fe2	    0xc74018000000	               mov dword [rax + 0x18], 0	      2159	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003fe9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003fed	          0x488b08	                    mov rcx, qword [rax]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003ff0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003ff4	        0x488b5008	                mov rdx, qword [rax + 8]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003ff8	          0x488b00	                    mov rax, qword [rax]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003ffb	          0x488901	                    mov qword [rcx], rax	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4003ffe	        0x48895108	                mov qword [rcx + 8], rdx	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4004002	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004007	            0x7555	                           jne 0x400405e	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004009	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x400400d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004011	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004015	        0x48895010	             mov qword [rax + 0x10], rdx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004019	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2165	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x400401d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2165	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004021	        0x48895010	             mov qword [rax + 0x10], rdx	      2165	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004025	        0x488b45f8	                mov rax, qword [rbp - 8]	      2166	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004029	    0x48c740080000	                  mov qword [rax + 8], 0	      2166	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4004031	        0x488b45f8	                mov rax, qword [rbp - 8]	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004035	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004039	          0x4885c0	                           test rax, rax	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x400403c	            0x750e	                           jne 0x400404c	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x400403e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004042	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4004046	        0x48895008	                mov qword [rax + 8], rdx	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x400404a	            0xeb65	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_56	ELSE_6
0x400404c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4004050	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4004054	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4004058	        0x48895008	                mov qword [rax + 8], rdx	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x400405c	            0xeb53	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_56	ELSE_6
0x400405e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2175	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4004062	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2175	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4004066	        0x48895010	             mov qword [rax + 0x10], rdx	      2175	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x400406a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x400406e	        0x488b5008	                mov rdx, qword [rax + 8]	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4004072	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4004076	        0x48895008	                mov qword [rax + 8], rdx	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x400407a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2177	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x400407e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2177	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4004082	        0x48895008	                mov qword [rax + 8], rdx	      2177	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4004086	        0x488b45f8	                mov rax, qword [rbp - 8]	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400408a	        0x488b4008	                mov rax, qword [rax + 8]	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400408e	          0x4885c0	                           test rax, rax	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004091	            0x750e	                           jne 0x40040a1	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004093	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4004097	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400409b	        0x48895010	             mov qword [rax + 0x10], rdx	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400409f	            0xeb10	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_56	ELSE_6
0x40040a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2181	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x40040a5	        0x488b4008	                mov rax, qword [rax + 8]	      2181	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x40040a9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2181	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x40040ad	        0x48895010	             mov qword [rax + 0x10], rdx	      2181	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x40040b1	              0x90	                                     nop	      2185	channel.c	FUNCTION_56	ELSE_6
0x40040b2	              0xc9	                                   leave	      2185	channel.c	FUNCTION_56	ELSE_6
0x40040b3	              0xc3	                                     ret	      2185	channel.c	FUNCTION_56	ELSE_6
ch_log_lead	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,6:IF,2:SWITCH,0	51
0x4000124	              0x55	                                push rbp	       142	channel.c	FUNCTION_3
0x4000125	          0x4889e5	                            mov rbp, rsp	       142	channel.c	FUNCTION_3
0x4000128	        0x4883ec30	                           sub rsp, 0x30	       142	channel.c	FUNCTION_3
0x400012c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       142	channel.c	FUNCTION_3
0x4000130	        0x488975d0	             mov qword [rbp - 0x30], rsi	       142	channel.c	FUNCTION_3
0x4000134	    0x64488b042528	                mov rax, qword fs:[0x28]	       142	channel.c	FUNCTION_3
0x400013d	        0x488945f8	                mov qword [rbp - 8], rax	       142	channel.c	FUNCTION_3
0x4000141	            0x31c0	                            xor eax, eax	       142	channel.c	FUNCTION_3
0x4000143	    0x488b05000000	            mov rax, qword [0x0400014a] 	       143	channel.c	FUNCTION_3	IF_1
0x400014a	          0x4885c0	                           test rax, rax	       143	channel.c	FUNCTION_3	IF_1
0x400014d	     0xf848f000000	                            je 0x40001e2	       143	channel.c	FUNCTION_3	IF_1
0x4000153	        0x488d45e0	                   lea rax, [rbp - 0x20]	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4000157	          0x4889c7	                            mov rdi, rax	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x400015a	      0xe800000000	                          call 0x400015f	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x400015f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4000163	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4000168	          0x4889c7	                            mov rdi, rax	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x400016b	      0xe800000000	                          call 0x4000170	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4000170	        0x488d45e0	                   lea rax, [rbp - 0x20]	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x4000174	          0x4889c7	                            mov rdi, rax	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x4000177	      0xe800000000	                          call 0x400017c	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x400017c	          0x4889c2	                            mov rdx, rax	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x400017f	    0x488b05000000	            mov rax, qword [0x04000186] 	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x4000186	      0xbe00000000	                              mov esi, 0	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x400018b	          0x4889c7	                            mov rdi, rax	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x400018e	      0xb800000000	                              mov eax, 0	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x4000193	      0xe800000000	                          call 0x4000198	       150	channel.c	FUNCTION_3	IF_1	CALL_4
0x4000198	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x400019d	            0x7426	                            je 0x40001c5	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x400019f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001a3	          0x8b4810	            mov ecx, dword [rax + 0x10] 	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001a6	    0x488b05000000	            mov rax, qword [0x040001ad] 	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001ad	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001b1	      0xbe00000000	                              mov esi, 0	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001b6	          0x4889c7	                            mov rdi, rax	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001b9	      0xb800000000	                              mov eax, 0	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001be	      0xe800000000	                          call 0x40001c3	       153	channel.c	FUNCTION_3	IF_1	CALL_5
0x40001c3	            0xeb1d	                           jmp 0x40001e2	       157	channel.c	FUNCTION_3
0x40001c5	    0x488b05000000	            mov rax, qword [0x040001cc] 	       155	channel.c	FUNCTION_3	IF_1	CALL_6
0x40001cc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       155	channel.c	FUNCTION_3	IF_1	CALL_6
0x40001d0	      0xbe00000000	                              mov esi, 0	       155	channel.c	FUNCTION_3	IF_1	CALL_6
0x40001d5	          0x4889c7	                            mov rdi, rax	       155	channel.c	FUNCTION_3	IF_1	CALL_6
0x40001d8	      0xb800000000	                              mov eax, 0	       155	channel.c	FUNCTION_3	IF_1	CALL_6
0x40001dd	      0xe800000000	                          call 0x40001e2	       155	channel.c	FUNCTION_3	IF_1	CALL_6
0x40001e2	              0x90	                                     nop	       157	channel.c	FUNCTION_3
0x40001e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	channel.c	FUNCTION_3
0x40001e7	    0x644833042528	                xor rax, qword fs:[0x28]	       157	channel.c	FUNCTION_3
0x40001f0	            0x7405	                            je 0x40001f7	       157	channel.c	FUNCTION_3
0x40001f2	      0xe800000000	                          call 0x40001f7	       157	channel.c	FUNCTION_3
0x40001f7	              0xc9	                                   leave	       157	channel.c	FUNCTION_3
0x40001f8	              0xc3	                                     ret	       157	channel.c	FUNCTION_3
channel_handle_events	ELSE,1:WHILE,0:FOR,2:DO,0:functions,0:CALL,3:IF,4:SWITCH,0	64
0x4006f51	              0x55	                                push rbp	      3621	channel.c	FUNCTION_84
0x4006f52	          0x4889e5	                            mov rbp, rsp	      3621	channel.c	FUNCTION_84
0x4006f55	        0x4883ec30	                           sub rsp, 0x30	      3621	channel.c	FUNCTION_84
0x4006f59	          0x897ddc	             mov dword [rbp - 0x24], edi	      3621	channel.c	FUNCTION_84
0x4006f5c	    0x488b05000000	            mov rax, qword [0x04006f63] 	      3626	channel.c	FUNCTION_84	FOR_1
0x4006f63	        0x488945f8	                mov qword [rbp - 8], rax	      3626	channel.c	FUNCTION_84	FOR_1
0x4006f67	      0xe9bd000000	                           jmp 0x4007029	      3626	channel.c	FUNCTION_84	FOR_1
0x4006f6c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006f70	            0x7412	                            je 0x4006f84	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006f72	        0x488b45f8	                mov rax, qword [rbp - 8]	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006f76	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006f7c	            0x85c0	                           test eax, eax	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006f7e	     0xf8499000000	                            je 0x400701d	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006f84	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006f8b	      0xe981000000	                           jmp 0x4007011	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006f90	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006f94	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006f97	        0x48c1e004	                              shl rax, 4	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006f9b	          0x4889c1	                            mov rcx, rax	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006f9e	        0x48c1e104	                              shl rcx, 4	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006fa2	          0x4801c8	                            add rax, rcx	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006fa5	          0x4801d0	                            add rax, rdx	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006fa8	        0x4883c018	                           add rax, 0x18	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006fac	            0x8b00	                    mov eax, dword [rax]	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006fae	          0x8945f0	             mov dword [rbp - 0x10], eax	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006fb1	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4006fb5	            0x7456	                            je 0x400700d	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4006fb7	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006fba	        0x488b45f8	                mov rax, qword [rbp - 8]	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006fbe	      0xba00000000	                              mov edx, 0	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006fc3	            0x89ce	                            mov esi, ecx	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006fc5	          0x4889c7	                            mov rdi, rax	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006fc8	      0xe803f2ffff	                   call sym.channel_wait	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006fcd	          0x8945f4	              mov dword [rbp - 0xc], eax	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006fd0	        0x837df400	                cmp dword [rbp - 0xc], 0	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4006fd4	            0x7518	                           jne 0x4006fee	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4006fd6	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006fd9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006fdd	      0xba00000000	                              mov edx, 0	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006fe2	            0x89ce	                            mov esi, ecx	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006fe4	          0x4889c7	                            mov rdi, rax	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006fe7	      0xe809f6ffff	                   call sym.channel_read	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006fec	            0xeb1f	                           jmp 0x400700d	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006fee	        0x837df402	                cmp dword [rbp - 0xc], 2	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x4006ff2	            0x7519	                           jne 0x400700d	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x4006ff4	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4006ff7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4006ffb	      0xb900000000	                              mov ecx, 0	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4007000	      0xba01000000	                              mov edx, 1	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4007005	          0x4889c7	                            mov rdi, rax	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4007008	      0xe8f8f3ffff	         call sym.ch_close_part_on_error	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x400700d	        0x8345ec01	               add dword [rbp - 0x14], 1	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4007011	        0x837dec02	               cmp dword [rbp - 0x14], 2	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4007015	     0xf8675ffffff	                           jbe 0x4006f90	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x400701b	            0xeb01	                           jmp 0x400701e	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x400701d	              0x90	                                     nop	      3629	channel.c	FUNCTION_84	FOR_1	IF_1
0x400701e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3626	channel.c	FUNCTION_84	FOR_1
0x4007022	          0x488b00	                    mov rax, qword [rax]	      3626	channel.c	FUNCTION_84	FOR_1
0x4007025	        0x488945f8	                mov qword [rbp - 8], rax	      3626	channel.c	FUNCTION_84	FOR_1
0x4007029	      0x48837df800	                  cmp qword [rbp - 8], 0	      3626	channel.c	FUNCTION_84	FOR_1
0x400702e	     0xf8538ffffff	                           jne 0x4006f6c	      3626	channel.c	FUNCTION_84	FOR_1
0x4007034	              0x90	                                     nop	      3647	channel.c	FUNCTION_84
0x4007035	              0xc9	                                   leave	      3647	channel.c	FUNCTION_84
0x4007036	              0xc3	                                     ret	      3647	channel.c	FUNCTION_84
channel_still_useful	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,3:SWITCH,0	109
0x4000569	              0x55	                                push rbp	       309	channel.c	FUNCTION_9
0x400056a	          0x4889e5	                            mov rbp, rsp	       309	channel.c	FUNCTION_9
0x400056d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       309	channel.c	FUNCTION_9
0x4000571	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	channel.c	FUNCTION_9	IF_1
0x4000575	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400057b	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x400057d	            0x741a	                            je 0x4000599	       315	channel.c	FUNCTION_9	IF_1
0x400057f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	channel.c	FUNCTION_9	IF_1
0x4000583	    0x488b80a80400	           mov rax, qword [rax + 0x4a8] 	       315	channel.c	FUNCTION_9	IF_1
0x400058a	          0x4885c0	                           test rax, rax	       315	channel.c	FUNCTION_9	IF_1
0x400058d	            0x750a	                           jne 0x4000599	       315	channel.c	FUNCTION_9	IF_1
0x400058f	      0xb800000000	                              mov eax, 0	       316	channel.c	FUNCTION_9	IF_1
0x4000594	      0xe960010000	                           jmp 0x40006f9	       316	channel.c	FUNCTION_9	IF_1
0x4000599	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       319	channel.c	FUNCTION_9	IF_2
0x400059d	    0x488b80900400	           mov rax, qword [rax + 0x490] 	       319	channel.c	FUNCTION_9	IF_2
0x40005a4	          0x4885c0	                           test rax, rax	       319	channel.c	FUNCTION_9	IF_2
0x40005a7	            0x740a	                            je 0x40005b3	       319	channel.c	FUNCTION_9	IF_2
0x40005a9	      0xb801000000	                              mov eax, 1	       320	channel.c	FUNCTION_9	IF_2
0x40005ae	      0xe946010000	                           jmp 0x40006f9	       320	channel.c	FUNCTION_9	IF_2
0x40005b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       323	channel.c	FUNCTION_9	IF_3
0x40005b7	    0x488b80280400	           mov rax, qword [rax + 0x428] 	       323	channel.c	FUNCTION_9	IF_3
0x40005be	          0x4885c0	                           test rax, rax	       323	channel.c	FUNCTION_9	IF_3
0x40005c1	            0x740a	                            je 0x40005cd	       323	channel.c	FUNCTION_9	IF_3
0x40005c3	      0xb801000000	                              mov eax, 1	       324	channel.c	FUNCTION_9	IF_3
0x40005c8	      0xe92c010000	                           jmp 0x40006f9	       324	channel.c	FUNCTION_9	IF_3
0x40005cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	channel.c	FUNCTION_9
0x40005d1	          0x8b4018	            mov eax, dword [rax + 0x18] 	       328	channel.c	FUNCTION_9
0x40005d4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       330	channel.c	FUNCTION_9
0x40005d7	            0x751a	                           jne 0x40005f3	       330	channel.c	FUNCTION_9
0x40005d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       329	channel.c	FUNCTION_9
0x40005dd	        0x488b4040	            mov rax, qword [rax + 0x40] 	       329	channel.c	FUNCTION_9
0x40005e1	          0x4885c0	                           test rax, rax	       329	channel.c	FUNCTION_9
0x40005e4	            0x750d	                           jne 0x40005f3	       329	channel.c	FUNCTION_9
0x40005e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	channel.c	FUNCTION_9
0x40005ea	        0x488b4058	            mov rax, qword [rax + 0x58] 	       330	channel.c	FUNCTION_9
0x40005ee	          0x4885c0	                           test rax, rax	       330	channel.c	FUNCTION_9
0x40005f1	            0x7407	                            je 0x40005fa	       330	channel.c	FUNCTION_9
0x40005f3	      0xb801000000	                              mov eax, 1	       330	channel.c	FUNCTION_9
0x40005f8	            0xeb05	                           jmp 0x40005ff	       330	channel.c	FUNCTION_9
0x40005fa	      0xb800000000	                              mov eax, 0	       330	channel.c	FUNCTION_9
0x40005ff	          0x8945f4	              mov dword [rbp - 0xc], eax	       328	channel.c	FUNCTION_9
0x4000602	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       331	channel.c	FUNCTION_9
0x4000606	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       331	channel.c	FUNCTION_9
0x400060c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       333	channel.c	FUNCTION_9
0x400060f	            0x7520	                           jne 0x4000631	       333	channel.c	FUNCTION_9
0x4000611	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       332	channel.c	FUNCTION_9
0x4000615	    0x488b80500100	           mov rax, qword [rax + 0x150] 	       332	channel.c	FUNCTION_9
0x400061c	          0x4885c0	                           test rax, rax	       332	channel.c	FUNCTION_9
0x400061f	            0x7510	                           jne 0x4000631	       332	channel.c	FUNCTION_9
0x4000621	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       333	channel.c	FUNCTION_9
0x4000625	    0x488b80680100	           mov rax, qword [rax + 0x168] 	       333	channel.c	FUNCTION_9
0x400062c	          0x4885c0	                           test rax, rax	       333	channel.c	FUNCTION_9
0x400062f	            0x7407	                            je 0x4000638	       333	channel.c	FUNCTION_9
0x4000631	      0xb801000000	                              mov eax, 1	       333	channel.c	FUNCTION_9
0x4000636	            0xeb05	                           jmp 0x400063d	       333	channel.c	FUNCTION_9
0x4000638	      0xb800000000	                              mov eax, 0	       333	channel.c	FUNCTION_9
0x400063d	          0x8945f8	                mov dword [rbp - 8], eax	       331	channel.c	FUNCTION_9
0x4000640	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       334	channel.c	FUNCTION_9
0x4000644	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       334	channel.c	FUNCTION_9
0x400064a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       336	channel.c	FUNCTION_9
0x400064d	            0x7520	                           jne 0x400066f	       336	channel.c	FUNCTION_9
0x400064f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	channel.c	FUNCTION_9
0x4000653	    0x488b80600200	           mov rax, qword [rax + 0x260] 	       335	channel.c	FUNCTION_9
0x400065a	          0x4885c0	                           test rax, rax	       335	channel.c	FUNCTION_9
0x400065d	            0x7510	                           jne 0x400066f	       335	channel.c	FUNCTION_9
0x400065f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	channel.c	FUNCTION_9
0x4000663	    0x488b80780200	           mov rax, qword [rax + 0x278] 	       336	channel.c	FUNCTION_9
0x400066a	          0x4885c0	                           test rax, rax	       336	channel.c	FUNCTION_9
0x400066d	            0x7407	                            je 0x4000676	       336	channel.c	FUNCTION_9
0x400066f	      0xb801000000	                              mov eax, 1	       336	channel.c	FUNCTION_9
0x4000674	            0xeb05	                           jmp 0x400067b	       336	channel.c	FUNCTION_9
0x4000676	      0xb800000000	                              mov eax, 0	       336	channel.c	FUNCTION_9
0x400067b	          0x8945fc	                mov dword [rbp - 4], eax	       334	channel.c	FUNCTION_9
0x400067e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       337	channel.c	FUNCTION_9
0x4000682	    0x488b80800400	           mov rax, qword [rax + 0x480] 	       337	channel.c	FUNCTION_9
0x4000689	          0x4885c0	                           test rax, rax	       342	channel.c	FUNCTION_9
0x400068c	            0x7412	                            je 0x40006a0	       342	channel.c	FUNCTION_9
0x400068e	        0x837df400	                cmp dword [rbp - 0xc], 0	       337	channel.c	FUNCTION_9
0x4000692	            0x7558	                           jne 0x40006ec	       337	channel.c	FUNCTION_9
0x4000694	        0x837df800	                  cmp dword [rbp - 8], 0	       338	channel.c	FUNCTION_9
0x4000698	            0x7552	                           jne 0x40006ec	       338	channel.c	FUNCTION_9
0x400069a	        0x837dfc00	                  cmp dword [rbp - 4], 0	       338	channel.c	FUNCTION_9
0x400069e	            0x754c	                           jne 0x40006ec	       338	channel.c	FUNCTION_9
0x40006a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       339	channel.c	FUNCTION_9
0x40006a4	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	       339	channel.c	FUNCTION_9
0x40006ab	          0x4885c0	                           test rax, rax	       339	channel.c	FUNCTION_9
0x40006ae	            0x7510	                           jne 0x40006c0	       339	channel.c	FUNCTION_9
0x40006b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	channel.c	FUNCTION_9
0x40006b4	    0x488b80080200	           mov rax, qword [rax + 0x208] 	       340	channel.c	FUNCTION_9
0x40006bb	          0x4885c0	                           test rax, rax	       340	channel.c	FUNCTION_9
0x40006be	            0x7406	                            je 0x40006c6	       340	channel.c	FUNCTION_9
0x40006c0	        0x837df800	                  cmp dword [rbp - 8], 0	       341	channel.c	FUNCTION_9
0x40006c4	            0x7526	                           jne 0x40006ec	       341	channel.c	FUNCTION_9
0x40006c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       342	channel.c	FUNCTION_9
0x40006ca	    0x488b80080300	           mov rax, qword [rax + 0x308] 	       342	channel.c	FUNCTION_9
0x40006d1	          0x4885c0	                           test rax, rax	       342	channel.c	FUNCTION_9
0x40006d4	            0x7510	                           jne 0x40006e6	       342	channel.c	FUNCTION_9
0x40006d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       343	channel.c	FUNCTION_9
0x40006da	    0x488b80180300	           mov rax, qword [rax + 0x318] 	       343	channel.c	FUNCTION_9
0x40006e1	          0x4885c0	                           test rax, rax	       343	channel.c	FUNCTION_9
0x40006e4	            0x740d	                            je 0x40006f3	       343	channel.c	FUNCTION_9
0x40006e6	        0x837dfc00	                  cmp dword [rbp - 4], 0	       344	channel.c	FUNCTION_9
0x40006ea	            0x7407	                            je 0x40006f3	       344	channel.c	FUNCTION_9
0x40006ec	      0xb801000000	                              mov eax, 1	       342	channel.c	FUNCTION_9
0x40006f1	            0xeb05	                           jmp 0x40006f8	       337	channel.c	FUNCTION_9
0x40006f3	      0xb800000000	                              mov eax, 0	       342	channel.c	FUNCTION_9
0x40006f8	              0x90	                                     nop	       337	channel.c	FUNCTION_9
0x40006f9	              0x5d	                                 pop rbp	       345	channel.c	FUNCTION_9
0x40006fa	              0xc3	                                     ret	       345	channel.c	FUNCTION_9
set_ref_in_job	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	45
0x400abf7	              0x55	                                push rbp	      5312	channel.c	FUNCTION_121
0x400abf8	          0x4889e5	                            mov rbp, rsp	      5312	channel.c	FUNCTION_121
0x400abfb	        0x4883ec40	                           sub rsp, 0x40	      5312	channel.c	FUNCTION_121
0x400abff	          0x897dcc	             mov dword [rbp - 0x34], edi	      5312	channel.c	FUNCTION_121
0x400ac02	    0x64488b042528	                mov rax, qword fs:[0x28]	      5312	channel.c	FUNCTION_121
0x400ac0b	        0x488945f8	                mov qword [rbp - 8], rax	      5312	channel.c	FUNCTION_121
0x400ac0f	            0x31c0	                            xor eax, eax	      5312	channel.c	FUNCTION_121
0x400ac11	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5313	channel.c	FUNCTION_121
0x400ac18	    0x488b05000000	            mov rax, qword [0x0400ac1f] 	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac1f	        0x488945d8	             mov qword [rbp - 0x28], rax	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac23	            0xeb5c	                           jmp 0x400ac81	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac25	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x400ac29	          0x4889c7	                            mov rdi, rax	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x400ac2c	      0xe88ffaffff	               call sym.job_still_useful	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x400ac31	            0x85c0	                           test eax, eax	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x400ac33	            0x7441	                            je 0x400ac76	      5318	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_1
0x400ac35	    0xc745e0090000	               mov dword [rbp - 0x20], 9	      5320	channel.c	FUNCTION_121	FOR_1	IF_1
0x400ac3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5321	channel.c	FUNCTION_121	FOR_1	IF_1
0x400ac40	        0x488945e8	             mov qword [rbp - 0x18], rax	      5321	channel.c	FUNCTION_121	FOR_1	IF_1
0x400ac44	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac48	            0x751d	                           jne 0x400ac67	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac4a	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac4d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac51	      0xb900000000	                              mov ecx, 0	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac56	      0xba00000000	                              mov edx, 0	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac5b	          0x4889c7	                            mov rdi, rax	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac5e	      0xe800000000	                          call 0x400ac63	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac63	            0x85c0	                           test eax, eax	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac65	            0x7407	                            je 0x400ac6e	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac67	      0xb801000000	                              mov eax, 1	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac6c	            0xeb05	                           jmp 0x400ac73	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac6e	      0xb800000000	                              mov eax, 0	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac73	          0x8945d4	             mov dword [rbp - 0x2c], eax	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400ac76	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac7a	          0x488b00	                    mov rax, qword [rax]	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac7d	        0x488945d8	             mov qword [rbp - 0x28], rax	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac81	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac86	            0x759d	                           jne 0x400ac25	      5317	channel.c	FUNCTION_121	FOR_1
0x400ac88	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5324	channel.c	FUNCTION_121
0x400ac8b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5325	channel.c	FUNCTION_121
0x400ac8f	    0x644833142528	                xor rdx, qword fs:[0x28]	      5325	channel.c	FUNCTION_121
0x400ac98	            0x7405	                            je 0x400ac9f	      5325	channel.c	FUNCTION_121
0x400ac9a	      0xe800000000	                          call 0x400ac9f	      5325	channel.c	FUNCTION_121
0x400ac9f	              0xc9	                                   leave	      5325	channel.c	FUNCTION_121
0x400aca0	              0xc3	                                     ret	      5325	channel.c	FUNCTION_121
channel_read_block	ELSE,3:WHILE,1:FOR,1:DO,0:functions,0:CALL,16:IF,11:SWITCH,0	197
0x40067a3	              0x55	                                push rbp	      3358	channel.c	FUNCTION_80
0x40067a4	          0x4889e5	                            mov rbp, rsp	      3358	channel.c	FUNCTION_80
0x40067a7	        0x4883ec50	                           sub rsp, 0x50	      3358	channel.c	FUNCTION_80
0x40067ab	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3358	channel.c	FUNCTION_80
0x40067af	          0x8975c4	             mov dword [rbp - 0x3c], esi	      3358	channel.c	FUNCTION_80
0x40067b2	          0x8955c0	             mov dword [rbp - 0x40], edx	      3358	channel.c	FUNCTION_80
0x40067b5	          0x894dbc	             mov dword [rbp - 0x44], ecx	      3358	channel.c	FUNCTION_80
0x40067b8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3361	channel.c	FUNCTION_80
0x40067bc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3361	channel.c	FUNCTION_80
0x40067bf	        0x48c1e004	                              shl rax, 4	      3361	channel.c	FUNCTION_80
0x40067c3	          0x4889c1	                            mov rcx, rax	      3361	channel.c	FUNCTION_80
0x40067c6	        0x48c1e104	                              shl rcx, 4	      3361	channel.c	FUNCTION_80
0x40067ca	          0x4801c8	                            add rax, rcx	      3361	channel.c	FUNCTION_80
0x40067cd	          0x4801d0	                            add rax, rdx	      3361	channel.c	FUNCTION_80
0x40067d0	        0x4883c020	                           add rax, 0x20	      3361	channel.c	FUNCTION_80
0x40067d4	            0x8b00	                    mov eax, dword [rax]	      3361	channel.c	FUNCTION_80
0x40067d6	          0x8945d0	             mov dword [rbp - 0x30], eax	      3361	channel.c	FUNCTION_80
0x40067d9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3362	channel.c	FUNCTION_80
0x40067dd	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3362	channel.c	FUNCTION_80
0x40067e0	        0x48c1e004	                              shl rax, 4	      3362	channel.c	FUNCTION_80
0x40067e4	          0x4889c1	                            mov rcx, rax	      3362	channel.c	FUNCTION_80
0x40067e7	        0x48c1e104	                              shl rcx, 4	      3362	channel.c	FUNCTION_80
0x40067eb	          0x4801c8	                            add rax, rcx	      3362	channel.c	FUNCTION_80
0x40067ee	          0x4801d0	                            add rax, rdx	      3362	channel.c	FUNCTION_80
0x40067f1	        0x4883c018	                           add rax, 0x18	      3362	channel.c	FUNCTION_80
0x40067f5	            0x8b00	                    mov eax, dword [rax]	      3362	channel.c	FUNCTION_80
0x40067f7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3362	channel.c	FUNCTION_80
0x40067fa	        0x837dd001	               cmp dword [rbp - 0x30], 1	      3366	channel.c	FUNCTION_80	CALL_1
0x40067fe	            0x7507	                           jne 0x4006807	      3366	channel.c	FUNCTION_80	CALL_1
0x4006800	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x4006805	            0xeb05	                           jmp 0x400680c	      3366	channel.c	FUNCTION_80	CALL_1
0x4006807	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x400680c	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3366	channel.c	FUNCTION_80	CALL_1
0x400680f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3366	channel.c	FUNCTION_80	CALL_1
0x4006813	            0x89d1	                            mov ecx, edx	      3366	channel.c	FUNCTION_80	CALL_1
0x4006815	          0x4889f2	                            mov rdx, rsi	      3366	channel.c	FUNCTION_80	CALL_1
0x4006818	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x400681d	          0x4889c7	                            mov rdi, rax	      3366	channel.c	FUNCTION_80	CALL_1
0x4006820	      0xb800000000	                              mov eax, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x4006825	      0xe800000000	                          call 0x400682a	      3366	channel.c	FUNCTION_80	CALL_1
0x400682a	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3371	channel.c	FUNCTION_80	WHILE_1	CALL_2
0x400682d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3371	channel.c	FUNCTION_80	WHILE_1	CALL_2
0x4006831	            0x89d6	                            mov esi, edx	      3371	channel.c	FUNCTION_80	WHILE_1	CALL_2
0x4006833	          0x4889c7	                            mov rdi, rax	      3371	channel.c	FUNCTION_80	WHILE_1	CALL_2
0x4006836	      0xe800000000	                          call 0x400683b	      3371	channel.c	FUNCTION_80	WHILE_1	CALL_2
0x400683b	        0x488945e8	             mov qword [rbp - 0x18], rax	      3371	channel.c	FUNCTION_80	WHILE_1	CALL_2
0x400683f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x4006844	            0x7451	                            je 0x4006897	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x4006846	        0x837dd001	               cmp dword [rbp - 0x30], 1	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x400684a	     0xf84b0000000	                            je 0x4006900	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4006850	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4006854	            0x7515	                           jne 0x400686b	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4006856	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x400685a	          0x4889c7	                            mov rdi, rax	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x400685d	      0xe800000000	                          call 0x4006862	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x4006862	          0x4885c0	                           test rax, rax	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x4006865	     0xf8595000000	                           jne 0x4006900	      3375	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2	CALL_3
0x400686b	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400686f	           0xf94c0	                                 sete al	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006872	           0xfb6d0	                           movzx edx, al	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006875	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006878	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400687c	            0x89ce	                            mov esi, ecx	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400687e	          0x4889c7	                            mov rdi, rax	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006881	      0xe800000000	                          call 0x4006886	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006886	          0x83f801	                              cmp eax, 1	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006889	            0x746f	                            je 0x40068fa	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400688b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x400688f	            0x756f	                           jne 0x4006900	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4006891	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4006895	            0x7469	                            je 0x4006900	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4006897	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x400689b	            0x750a	                           jne 0x40068a7	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x400689d	      0xb800000000	                              mov eax, 0	      3388	channel.c	FUNCTION_80	WHILE_1	IF_5
0x40068a2	      0xe9a8010000	                           jmp 0x4006a4f	      3388	channel.c	FUNCTION_80	WHILE_1	IF_5
0x40068a7	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068aa	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068b1	            0x89ce	                            mov esi, ecx	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068b3	          0x4889c7	                            mov rdi, rax	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068b6	      0xe815f9ffff	                   call sym.channel_wait	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068bb	            0x85c0	                           test eax, eax	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068bd	            0x7420	                            je 0x40068df	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40068bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x40068c3	      0xbe00000000	                              mov esi, 0	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x40068c8	          0x4889c7	                            mov rdi, rax	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x40068cb	      0xb800000000	                              mov eax, 0	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x40068d0	      0xe800000000	                          call 0x40068d5	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x40068d5	      0xb800000000	                              mov eax, 0	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x40068da	      0xe970010000	                           jmp 0x4006a4f	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x40068df	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40068e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40068e6	      0xba00000000	                              mov edx, 0	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40068eb	            0x89ce	                            mov esi, ecx	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40068ed	          0x4889c7	                            mov rdi, rax	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40068f0	      0xe800fdffff	                   call sym.channel_read	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40068f5	      0xe930ffffff	                           jmp 0x400682a	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40068fa	              0x90	                                     nop	      3379	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3
0x40068fb	      0xe92affffff	                           jmp 0x400682a	      3395	channel.c	FUNCTION_80	WHILE_1
0x4006900	        0x837dd001	               cmp dword [rbp - 0x30], 1	      3398	channel.c	FUNCTION_80	IF_7
0x4006904	            0x751a	                           jne 0x4006920	      3398	channel.c	FUNCTION_80	IF_7
0x4006906	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4006909	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400690d	            0x89d6	                            mov esi, edx	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400690f	          0x4889c7	                            mov rdi, rax	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4006912	      0xe89bc6ffff	                call sym.channel_get_all	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4006917	        0x488945d8	             mov qword [rbp - 0x28], rax	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400691b	      0xe9fe000000	                           jmp 0x4006a1e	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4006920	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3406	channel.c	FUNCTION_80	ELSE_1
0x4006924	          0x488b00	                    mov rax, qword [rax]	      3406	channel.c	FUNCTION_80	ELSE_1
0x4006927	        0x488945f0	             mov qword [rbp - 0x10], rax	      3406	channel.c	FUNCTION_80	ELSE_1
0x400692b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x400692f	          0x4889c7	                            mov rdi, rax	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x4006932	      0xe800000000	                          call 0x4006937	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x4006937	        0x488945f8	                mov qword [rbp - 8], rax	      3407	channel.c	FUNCTION_80	ELSE_1	CALL_9
0x400693b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400693f	        0x488945e0	             mov qword [rbp - 0x20], rax	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006943	            0xeb17	                           jmp 0x400695c	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006945	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006949	           0xfb600	                   movzx eax, byte [rax]	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x400694c	            0x84c0	                             test al, al	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x400694e	            0x7507	                           jne 0x4006957	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006950	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006954	          0xc6000a	                     mov byte [rax], 0xa	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006957	      0x488345e001	               add qword [rbp - 0x20], 1	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400695c	      0x48837df800	                  cmp qword [rbp - 8], 0	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006961	            0x740a	                            je 0x400696d	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006963	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006967	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400696b	            0x7315	                           jae 0x4006982	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400696d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006971	        0x488b5008	                mov rdx, qword [rax + 8]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006975	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006979	          0x4801d0	                            add rax, rdx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400697c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006980	            0x77c3	                            ja 0x4006945	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006982	      0x48837df800	                  cmp qword [rbp - 8], 0	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4006987	            0x7517	                           jne 0x40069a0	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4006989	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x400698c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4006990	            0x89d6	                            mov esi, edx	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4006992	          0x4889c7	                            mov rdi, rax	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x4006995	      0xe800000000	                          call 0x400699a	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x400699a	        0x488945d8	             mov qword [rbp - 0x28], rax	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x400699e	            0xeb7e	                           jmp 0x4006a1e	      3417	channel.c	FUNCTION_80	ELSE_1	IF_9	CALL_10
0x40069a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069a4	        0x488d4801	                      lea rcx, [rax + 1]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069ac	        0x488b5008	                mov rdx, qword [rax + 8]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069b4	          0x4801d0	                            add rax, rdx	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069b7	          0x4839c1	                            cmp rcx, rax	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069ba	            0x751e	                           jne 0x40069da	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069bc	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40069bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40069c3	            0x89d6	                            mov esi, edx	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40069c5	          0x4889c7	                            mov rdi, rax	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40069c8	      0xe800000000	                          call 0x40069cd	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40069cd	        0x488945d8	             mov qword [rbp - 0x28], rax	      3422	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10	CALL_11
0x40069d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069d5	          0xc60000	                       mov byte [rax], 0	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069d8	            0xeb44	                           jmp 0x4006a1e	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40069da	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069e2	          0x4829c2	                            sub rdx, rax	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069e5	          0x4889d0	                            mov rax, rdx	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069e8	            0x89c2	                            mov edx, eax	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069ee	            0x89d6	                            mov esi, edx	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069f0	          0x4889c7	                            mov rdi, rax	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069f3	      0xe800000000	                          call 0x40069f8	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069f8	        0x488945d8	             mov qword [rbp - 0x28], rax	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x40069fc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a04	          0x4829c2	                            sub rdx, rax	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a07	          0x4889d0	                            mov rax, rdx	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a0a	          0x8d5001	                      lea edx, [rax + 1]	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a0d	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a14	            0x89ce	                            mov esi, ecx	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a16	          0x4889c7	                            mov rdi, rax	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a19	      0xe800000000	                          call 0x4006a1e	      3430	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_13
0x4006a1e	      0xe800000000	                          call 0x4006a23	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4006a23	            0x85c0	                           test eax, eax	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4006a25	            0x7424	                            je 0x4006a4b	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x4006a27	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a2b	          0x4889c7	                            mov rdi, rax	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a2e	      0xe800000000	                          call 0x4006a33	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a33	            0x89c2	                            mov edx, eax	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a35	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a39	      0xbe00000000	                              mov esi, 0	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a3e	          0x4889c7	                            mov rdi, rax	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a41	      0xb800000000	                              mov eax, 0	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a46	      0xe800000000	                          call 0x4006a4b	      3434	channel.c	FUNCTION_80	CALL_16
0x4006a4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3435	channel.c	FUNCTION_80
0x4006a4f	              0xc9	                                   leave	      3436	channel.c	FUNCTION_80
0x4006a50	              0xc3	                                     ret	      3436	channel.c	FUNCTION_80
job_check_ended	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,3:IF,3:SWITCH,0	32
0x400b0cb	              0x55	                                push rbp	      5493	channel.c	FUNCTION_129
0x400b0cc	          0x4889e5	                            mov rbp, rsp	      5493	channel.c	FUNCTION_129
0x400b0cf	        0x4883ec10	                           sub rsp, 0x10	      5493	channel.c	FUNCTION_129
0x400b0d3	    0x488b05000000	            mov rax, qword [0x0400b0da] 	      5496	channel.c	FUNCTION_129	IF_1
0x400b0da	          0x4885c0	                           test rax, rax	      5496	channel.c	FUNCTION_129	IF_1
0x400b0dd	            0x745c	                            je 0x400b13b	      5496	channel.c	FUNCTION_129	IF_1
0x400b0df	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5499	channel.c	FUNCTION_129	FOR_1
0x400b0e6	            0xeb2a	                           jmp 0x400b112	      5499	channel.c	FUNCTION_129	FOR_1
0x400b0e8	    0x488b05000000	            mov rax, qword [0x0400b0ef] 	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x400b0ef	          0x4889c7	                            mov rdi, rax	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x400b0f2	      0xe800000000	                          call 0x400b0f7	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x400b0f7	        0x488945f8	                mov qword [rbp - 8], rax	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x400b0fb	      0x48837df800	                  cmp qword [rbp - 8], 0	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x400b100	            0x7418	                            je 0x400b11a	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x400b102	        0x488b45f8	                mov rax, qword [rbp - 8]	      5507	channel.c	FUNCTION_129	FOR_1	CALL_2
0x400b106	          0x4889c7	                            mov rdi, rax	      5507	channel.c	FUNCTION_129	FOR_1	CALL_2
0x400b109	      0xe800000000	                          call 0x400b10e	      5507	channel.c	FUNCTION_129	FOR_1	CALL_2
0x400b10e	        0x8345f401	                add dword [rbp - 0xc], 1	      5499	channel.c	FUNCTION_129	FOR_1
0x400b112	        0x837df407	                cmp dword [rbp - 0xc], 7	      5499	channel.c	FUNCTION_129	FOR_1
0x400b116	            0x7ed0	                           jle 0x400b0e8	      5499	channel.c	FUNCTION_129	FOR_1
0x400b118	            0xeb01	                           jmp 0x400b11b	      5499	channel.c	FUNCTION_129	FOR_1
0x400b11a	              0x90	                                     nop	      5506	channel.c	FUNCTION_129	FOR_1	IF_2
0x400b11b	    0x8b0500000000	            mov eax, dword [0x0400b121] 	      5510	channel.c	FUNCTION_129	IF_3
0x400b121	            0x85c0	                           test eax, eax	      5510	channel.c	FUNCTION_129	IF_3
0x400b123	            0x7417	                            je 0x400b13c	      5510	channel.c	FUNCTION_129	IF_3
0x400b125	    0xc70500000000	               mov dword [0x0400b12f], 0	      5512	channel.c	FUNCTION_129	IF_3
0x400b12f	      0xbf01000000	                              mov edi, 1	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
0x400b134	      0xe800000000	                          call 0x400b139	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
0x400b139	            0xeb01	                           jmp 0x400b13c	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
0x400b13b	              0x90	                                     nop	      5497	channel.c	FUNCTION_129	IF_1
0x400b13c	              0xc9	                                   leave	      5515	channel.c	FUNCTION_129
0x400b13d	              0xc3	                                     ret	      5515	channel.c	FUNCTION_129
free_unused_channels_contents	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	38
0x4000890	              0x55	                                push rbp	       426	channel.c	FUNCTION_16
0x4000891	          0x4889e5	                            mov rbp, rsp	       426	channel.c	FUNCTION_16
0x4000894	        0x4883ec20	                           sub rsp, 0x20	       426	channel.c	FUNCTION_16
0x4000898	          0x897dec	             mov dword [rbp - 0x14], edi	       426	channel.c	FUNCTION_16
0x400089b	          0x8975e8	             mov dword [rbp - 0x18], esi	       426	channel.c	FUNCTION_16
0x400089e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       427	channel.c	FUNCTION_16
0x40008a5	    0x8b0500000000	            mov eax, dword [0x040008ab] 	       432	channel.c	FUNCTION_16
0x40008ab	          0x83c001	                              add eax, 1	       432	channel.c	FUNCTION_16
0x40008ae	    0x890500000000	            mov dword [0x040008b4], eax 	       432	channel.c	FUNCTION_16
0x40008b4	    0x488b05000000	            mov rax, qword [0x040008bb] 	       434	channel.c	FUNCTION_16	FOR_1
0x40008bb	        0x488945f8	                mov qword [rbp - 8], rax	       434	channel.c	FUNCTION_16	FOR_1
0x40008bf	            0xeb42	                           jmp 0x4000903	       434	channel.c	FUNCTION_16	FOR_1
0x40008c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40008c5	          0x4889c7	                            mov rdi, rax	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40008c8	      0xe89cfcffff	           call sym.channel_still_useful	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40008cd	            0x85c0	                           test eax, eax	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40008cf	            0x7527	                           jne 0x40008f8	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40008d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40008d5	    0x8b80b8040000	           mov eax, dword [rax + 0x4b8] 	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40008db	          0x3345ec	             xor eax, dword [rbp - 0x14]	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40008de	          0x2345e8	             and eax, dword [rbp - 0x18]	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40008e1	            0x85c0	                           test eax, eax	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40008e3	            0x7413	                            je 0x40008f8	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x40008e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       440	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x40008e9	          0x4889c7	                            mov rdi, rax	       440	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x40008ec	      0xe826feffff	          call sym.channel_free_contents	       440	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x40008f1	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       441	channel.c	FUNCTION_16	FOR_1	IF_1
0x40008f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       434	channel.c	FUNCTION_16	FOR_1
0x40008fc	          0x488b00	                    mov rax, qword [rax]	       434	channel.c	FUNCTION_16	FOR_1
0x40008ff	        0x488945f8	                mov qword [rbp - 8], rax	       434	channel.c	FUNCTION_16	FOR_1
0x4000903	      0x48837df800	                  cmp qword [rbp - 8], 0	       434	channel.c	FUNCTION_16	FOR_1
0x4000908	            0x75b7	                           jne 0x40008c1	       434	channel.c	FUNCTION_16	FOR_1
0x400090a	    0x8b0500000000	            mov eax, dword [0x04000910] 	       444	channel.c	FUNCTION_16
0x4000910	          0x83e801	                              sub eax, 1	       444	channel.c	FUNCTION_16
0x4000913	    0x890500000000	            mov dword [0x04000919], eax 	       444	channel.c	FUNCTION_16
0x4000919	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       445	channel.c	FUNCTION_16
0x400091c	              0xc9	                                   leave	       446	channel.c	FUNCTION_16
0x400091d	              0xc3	                                     ret	       446	channel.c	FUNCTION_16
channel_free_contents	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,3:IF,0:SWITCH,0	19
0x4000717	              0x55	                                push rbp	       361	channel.c	FUNCTION_11
0x4000718	          0x4889e5	                            mov rbp, rsp	       361	channel.c	FUNCTION_11
0x400071b	        0x4883ec10	                           sub rsp, 0x10	       361	channel.c	FUNCTION_11
0x400071f	        0x48897df8	                mov qword [rbp - 8], rdi	       361	channel.c	FUNCTION_11
0x4000723	        0x488b45f8	                mov rax, qword [rbp - 8]	       362	channel.c	FUNCTION_11	CALL_1
0x4000727	      0xbe01000000	                              mov esi, 1	       362	channel.c	FUNCTION_11	CALL_1
0x400072c	          0x4889c7	                            mov rdi, rax	       362	channel.c	FUNCTION_11	CALL_1
0x400072f	      0xe800000000	                          call 0x4000734	       362	channel.c	FUNCTION_11	CALL_1
0x4000734	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	channel.c	FUNCTION_11	CALL_2
0x4000738	          0x4889c7	                            mov rdi, rax	       363	channel.c	FUNCTION_11	CALL_2
0x400073b	      0xe800000000	                          call 0x4000740	       363	channel.c	FUNCTION_11	CALL_2
0x4000740	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	channel.c	FUNCTION_11	CALL_3
0x4000744	      0xbe00000000	                              mov esi, 0	       364	channel.c	FUNCTION_11	CALL_3
0x4000749	          0x4889c7	                            mov rdi, rax	       364	channel.c	FUNCTION_11	CALL_3
0x400074c	      0xb800000000	                              mov eax, 0	       364	channel.c	FUNCTION_11	CALL_3
0x4000751	      0xe800000000	                          call 0x4000756	       364	channel.c	FUNCTION_11	CALL_3
0x4000756	              0x90	                                     nop	       365	channel.c	FUNCTION_11
0x4000757	              0xc9	                                   leave	       365	channel.c	FUNCTION_11
0x4000758	              0xc3	                                     ret	       365	channel.c	FUNCTION_11
channel_consume	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	45
0x400313a	              0x55	                                push rbp	      1715	channel.c	FUNCTION_48
0x400313b	          0x4889e5	                            mov rbp, rsp	      1715	channel.c	FUNCTION_48
0x400313e	        0x4883ec30	                           sub rsp, 0x30	      1715	channel.c	FUNCTION_48
0x4003142	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1715	channel.c	FUNCTION_48
0x4003146	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1715	channel.c	FUNCTION_48
0x4003149	          0x8955d0	             mov dword [rbp - 0x30], edx	      1715	channel.c	FUNCTION_48
0x400314c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1716	channel.c	FUNCTION_48
0x400314f	        0x48c1e004	                              shl rax, 4	      1716	channel.c	FUNCTION_48
0x4003153	          0x4889c2	                            mov rdx, rax	      1716	channel.c	FUNCTION_48
0x4003156	        0x48c1e204	                              shl rdx, 4	      1716	channel.c	FUNCTION_48
0x400315a	          0x4801d0	                            add rax, rdx	      1716	channel.c	FUNCTION_48
0x400315d	        0x488d5020	                   lea rdx, [rax + 0x20]	      1716	channel.c	FUNCTION_48
0x4003161	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1716	channel.c	FUNCTION_48
0x4003165	          0x4801d0	                            add rax, rdx	      1716	channel.c	FUNCTION_48
0x4003168	        0x4883c010	                           add rax, 0x10	      1716	channel.c	FUNCTION_48
0x400316c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1716	channel.c	FUNCTION_48
0x4003170	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1717	channel.c	FUNCTION_48
0x4003174	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1717	channel.c	FUNCTION_48
0x4003178	        0x488945f0	             mov qword [rbp - 0x10], rax	      1717	channel.c	FUNCTION_48
0x400317c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1718	channel.c	FUNCTION_48
0x4003180	          0x488b00	                    mov rax, qword [rax]	      1718	channel.c	FUNCTION_48
0x4003183	        0x488945f8	                mov qword [rbp - 8], rax	      1718	channel.c	FUNCTION_48
0x4003187	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1720	channel.c	FUNCTION_48	CALL_1
0x400318b	        0x488b5008	                mov rdx, qword [rax + 8]	      1720	channel.c	FUNCTION_48	CALL_1
0x400318f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1720	channel.c	FUNCTION_48	CALL_1
0x4003192	            0x4898	                                    cdqe	      1720	channel.c	FUNCTION_48	CALL_1
0x4003194	          0x4829c2	                            sub rdx, rax	      1720	channel.c	FUNCTION_48	CALL_1
0x4003197	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1720	channel.c	FUNCTION_48	CALL_1
0x400319a	          0x4863c8	                         movsxd rcx, eax	      1720	channel.c	FUNCTION_48	CALL_1
0x400319d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1720	channel.c	FUNCTION_48	CALL_1
0x40031a1	          0x4801c1	                            add rcx, rax	      1720	channel.c	FUNCTION_48	CALL_1
0x40031a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1720	channel.c	FUNCTION_48	CALL_1
0x40031a8	          0x4889ce	                            mov rsi, rcx	      1720	channel.c	FUNCTION_48	CALL_1
0x40031ab	          0x4889c7	                            mov rdi, rax	      1720	channel.c	FUNCTION_48	CALL_1
0x40031ae	      0xe800000000	                          call 0x40031b3	      1720	channel.c	FUNCTION_48	CALL_1
0x40031b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1721	channel.c	FUNCTION_48
0x40031b7	        0x488b5008	                mov rdx, qword [rax + 8]	      1721	channel.c	FUNCTION_48
0x40031bb	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1721	channel.c	FUNCTION_48
0x40031be	            0x4898	                                    cdqe	      1721	channel.c	FUNCTION_48
0x40031c0	          0x4829c2	                            sub rdx, rax	      1721	channel.c	FUNCTION_48
0x40031c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1721	channel.c	FUNCTION_48
0x40031c7	        0x48895008	                mov qword [rax + 8], rdx	      1721	channel.c	FUNCTION_48
0x40031cb	              0x90	                                     nop	      1722	channel.c	FUNCTION_48
0x40031cc	              0xc9	                                   leave	      1722	channel.c	FUNCTION_48
0x40031cd	              0xc3	                                     ret	      1722	channel.c	FUNCTION_48
get_job_options	ELSE,44:WHILE,0:FOR,2:DO,0:functions,0:CALL,153:IF,117:SWITCH,0	1636
0x40086f9	              0x55	                                push rbp	      4494	channel.c	FUNCTION_107
0x40086fa	          0x4889e5	                            mov rbp, rsp	      4494	channel.c	FUNCTION_107
0x40086fd	            0x4154	                                push r12	      4494	channel.c	FUNCTION_107
0x40086ff	              0x53	                                push rbx	      4494	channel.c	FUNCTION_107
0x4008700	    0x4881ec100100	                          sub rsp, 0x110	      4494	channel.c	FUNCTION_107
0x4008707	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	      4494	channel.c	FUNCTION_107
0x400870e	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      4494	channel.c	FUNCTION_107
0x4008715	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	      4494	channel.c	FUNCTION_107
0x400871b	    0x898de8feffff	            mov dword [rbp - 0x118], ecx	      4494	channel.c	FUNCTION_107
0x4008721	    0x64488b042528	                mov rax, qword fs:[0x28]	      4494	channel.c	FUNCTION_107
0x400872a	        0x488945e8	             mov qword [rbp - 0x18], rax	      4494	channel.c	FUNCTION_107
0x400872e	            0x31c0	                            xor eax, eax	      4494	channel.c	FUNCTION_107
0x4008730	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4502	channel.c	FUNCTION_107	IF_1
0x4008737	            0x8b00	                    mov eax, dword [rax]	      4502	channel.c	FUNCTION_107	IF_1
0x4008739	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x400873b	            0x750a	                           jne 0x4008747	      4502	channel.c	FUNCTION_107	IF_1
0x400873d	      0xb801000000	                              mov eax, 1	      4503	channel.c	FUNCTION_107	IF_1
0x4008742	      0xe9e11b0000	                           jmp 0x400a328	      4503	channel.c	FUNCTION_107	IF_1
0x4008747	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4504	channel.c	FUNCTION_107	IF_2
0x400874e	            0x8b00	                    mov eax, dword [rax]	      4504	channel.c	FUNCTION_107	IF_2
0x4008750	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_107	IF_2
0x4008753	            0x741c	                            je 0x4008771	      4504	channel.c	FUNCTION_107	IF_2
0x4008755	      0xbf00000000	                              mov edi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400875a	      0xe800000000	                          call 0x400875f	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400875f	          0x4889c7	                            mov rdi, rax	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4008762	      0xe800000000	                          call 0x4008767	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x4008767	      0xb800000000	                              mov eax, 0	      4507	channel.c	FUNCTION_107	IF_2
0x400876c	      0xe9b71b0000	                           jmp 0x400a328	      4507	channel.c	FUNCTION_107	IF_2
0x4008771	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4509	channel.c	FUNCTION_107
0x4008778	        0x488b4008	                mov rax, qword [rax + 8]	      4509	channel.c	FUNCTION_107
0x400877c	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4509	channel.c	FUNCTION_107
0x4008783	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      4510	channel.c	FUNCTION_107	IF_3
0x400878b	            0x750a	                           jne 0x4008797	      4510	channel.c	FUNCTION_107	IF_3
0x400878d	      0xb801000000	                              mov eax, 1	      4511	channel.c	FUNCTION_107	IF_3
0x4008792	      0xe9911b0000	                           jmp 0x400a328	      4511	channel.c	FUNCTION_107	IF_3
0x4008797	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4513	channel.c	FUNCTION_107
0x400879e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4513	channel.c	FUNCTION_107
0x40087a2	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      4513	channel.c	FUNCTION_107
0x40087a8	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4514	channel.c	FUNCTION_107	FOR_1
0x40087af	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4514	channel.c	FUNCTION_107	FOR_1
0x40087b3	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4514	channel.c	FUNCTION_107	FOR_1
0x40087ba	      0xe9af1a0000	                           jmp 0x400a26e	      4514	channel.c	FUNCTION_107	FOR_1
0x40087bf	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087c6	        0x488b4008	                mov rax, qword [rax + 8]	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087ca	          0x4885c0	                           test rax, rax	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087cd	     0xf84931a0000	                            je 0x400a266	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087d3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087da	        0x488b4008	                mov rax, qword [rax + 8]	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087de	    0x483d00000000	                              cmp rax, 0	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087e4	     0xf847c1a0000	                            je 0x400a266	      4515	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_3
0x40087ea	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x40087f1	          0x4889c7	                            mov rdi, rax	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x40087f4	      0xe800000000	                          call 0x40087f9	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x40087f9	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4517	channel.c	FUNCTION_107	FOR_1	IF_4	CALL_4
0x4008800	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4008807	        0x488b4008	                mov rax, qword [rax + 8]	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x400880b	      0xbe00000000	                              mov esi, 0	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4008810	          0x4889c7	                            mov rdi, rax	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4008813	      0xe800000000	                          call 0x4008818	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x4008818	            0x85c0	                           test eax, eax	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x400881a	            0x7549	                           jne 0x4008865	      4519	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	CALL_5
0x400881c	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4521	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x4008822	          0x83e001	                              and eax, 1	      4521	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x4008825	            0x85c0	                           test eax, eax	      4521	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x4008827	     0xf84501a0000	                            je 0x400a27d	      4521	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x400882d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4008834	        0x488d5008	                      lea rdx, [rax + 8]	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4008838	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x400883f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4008846	      0xb901000000	                              mov ecx, 1	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x400884b	          0x4889c7	                            mov rdi, rax	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x400884e	      0xe88cfaffff	                    call sym.handle_mode	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4008853	            0x85c0	                           test eax, eax	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x4008855	     0xf85041a0000	                           jne 0x400a25f	      4523	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x400885b	      0xb800000000	                              mov eax, 0	      4524	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7
0x4008860	      0xe9c31a0000	                           jmp 0x400a328	      4524	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_7
0x4008865	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x400886c	        0x488b4008	                mov rax, qword [rax + 8]	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4008870	      0xbe00000000	                              mov esi, 0	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4008875	          0x4889c7	                            mov rdi, rax	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4008878	      0xe800000000	                          call 0x400887d	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x400887d	            0x85c0	                           test eax, eax	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x400887f	            0x7549	                           jne 0x40088ca	      4526	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x4008881	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4528	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x4008887	          0x83e002	                              and eax, 2	      4528	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x400888a	            0x85c0	                           test eax, eax	      4528	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x400888c	     0xf84ee190000	                            je 0x400a280	      4528	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x4008892	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x4008899	        0x488d500c	                    lea rdx, [rax + 0xc]	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x400889d	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x40088a4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x40088ab	      0xb902000000	                              mov ecx, 2	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x40088b0	          0x4889c7	                            mov rdi, rax	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x40088b3	      0xe827faffff	                    call sym.handle_mode	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x40088b8	            0x85c0	                           test eax, eax	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x40088ba	     0xf859f190000	                           jne 0x400a25f	      4530	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x40088c0	      0xb800000000	                              mov eax, 0	      4532	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10
0x40088c5	      0xe95e1a0000	                           jmp 0x400a328	      4532	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_10
0x40088ca	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x40088d1	        0x488b4008	                mov rax, qword [rax + 8]	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x40088d5	      0xbe00000000	                              mov esi, 0	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x40088da	          0x4889c7	                            mov rdi, rax	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x40088dd	      0xe800000000	                          call 0x40088e2	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x40088e2	            0x85c0	                           test eax, eax	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x40088e4	            0x7549	                           jne 0x400892f	      4534	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x40088e6	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4536	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x40088ec	          0x83e004	                              and eax, 4	      4536	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x40088ef	            0x85c0	                           test eax, eax	      4536	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x40088f1	     0xf848c190000	                            je 0x400a283	      4536	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x40088f7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x40088fe	        0x488d5010	                   lea rdx, [rax + 0x10]	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4008902	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4008909	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4008910	      0xb904000000	                              mov ecx, 4	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4008915	          0x4889c7	                            mov rdi, rax	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4008918	      0xe8c2f9ffff	                    call sym.handle_mode	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x400891d	            0x85c0	                           test eax, eax	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x400891f	     0xf853a190000	                           jne 0x400a25f	      4538	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x4008925	      0xb800000000	                              mov eax, 0	      4540	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13
0x400892a	      0xe9f9190000	                           jmp 0x400a328	      4540	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_13
0x400892f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4008936	        0x488b4008	                mov rax, qword [rax + 8]	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x400893a	      0xbe00000000	                              mov esi, 0	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x400893f	          0x4889c7	                            mov rdi, rax	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4008942	      0xe800000000	                          call 0x4008947	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4008947	            0x85c0	                           test eax, eax	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x4008949	            0x7549	                           jne 0x4008994	      4542	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x400894b	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4544	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x4008951	          0x83e008	                              and eax, 8	      4544	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x4008954	            0x85c0	                           test eax, eax	      4544	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x4008956	     0xf842a190000	                            je 0x400a286	      4544	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x400895c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4008963	        0x488d5014	                   lea rdx, [rax + 0x14]	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4008967	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x400896e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4008975	      0xb908000000	                              mov ecx, 8	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x400897a	          0x4889c7	                            mov rdi, rax	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x400897d	      0xe85df9ffff	                    call sym.handle_mode	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4008982	            0x85c0	                           test eax, eax	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x4008984	     0xf85d5180000	                           jne 0x400a25f	      4546	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x400898a	      0xb800000000	                              mov eax, 0	      4548	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16
0x400898f	      0xe994190000	                           jmp 0x400a328	      4548	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_16
0x4008994	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x400899b	        0x488b4008	                mov rax, qword [rax + 8]	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x400899f	      0xbe00000000	                              mov esi, 0	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x40089a4	          0x4889c7	                            mov rdi, rax	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x40089a7	      0xe800000000	                          call 0x40089ac	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x40089ac	            0x85c0	                           test eax, eax	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x40089ae	            0x7438	                            je 0x40089e8	      4550	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x40089b0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x40089b7	        0x488b4008	                mov rax, qword [rax + 8]	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x40089bb	      0xbe00000000	                              mov esi, 0	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x40089c0	          0x4889c7	                            mov rdi, rax	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x40089c3	      0xe800000000	                          call 0x40089c8	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x40089c8	            0x85c0	                           test eax, eax	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x40089ca	            0x741c	                            je 0x40089e8	      4551	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x40089cc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x40089d3	        0x488b4008	                mov rax, qword [rax + 8]	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x40089d7	      0xbe00000000	                              mov esi, 0	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x40089dc	          0x4889c7	                            mov rdi, rax	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x40089df	      0xe800000000	                          call 0x40089e4	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x40089e4	            0x85c0	                           test eax, eax	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x40089e6	            0x7557	                           jne 0x4008a3f	      4552	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x40089e8	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x40089ee	      0x2500000100	                        and eax, 0x10000	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x40089f3	            0x85c0	                           test eax, eax	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x40089f5	     0xf848e180000	                            je 0x400a289	      4554	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x40089fb	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a02	        0x488b4008	                mov rax, qword [rax + 8]	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a06	           0xfb600	                   movzx eax, byte [rax]	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a09	           0xfb6c0	                           movzx eax, al	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a0c	            0x89c7	                            mov edi, eax	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a0e	      0xe8befcffff	                 call sym.part_from_char	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a13	            0x89c1	                            mov ecx, eax	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a15	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a1c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a23	            0x89ce	                            mov esi, ecx	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a25	          0x4889c7	                            mov rdi, rax	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a28	      0xe89bf9ffff	                      call sym.handle_io	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a2d	            0x85c0	                           test eax, eax	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a2f	     0xf852a180000	                           jne 0x400a25f	      4556	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x4008a35	      0xb800000000	                              mov eax, 0	      4557	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19
0x4008a3a	      0xe9e9180000	                           jmp 0x400a328	      4557	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_19
0x4008a3f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4008a46	        0x488b4008	                mov rax, qword [rax + 8]	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4008a4a	      0xbe00000000	                              mov esi, 0	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4008a4f	          0x4889c7	                            mov rdi, rax	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4008a52	      0xe800000000	                          call 0x4008a57	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4008a57	            0x85c0	                           test eax, eax	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4008a59	            0x743c	                            je 0x4008a97	      4559	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x4008a5b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4008a62	        0x488b4008	                mov rax, qword [rax + 8]	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4008a66	      0xbe00000000	                              mov esi, 0	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4008a6b	          0x4889c7	                            mov rdi, rax	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4008a6e	      0xe800000000	                          call 0x4008a73	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4008a73	            0x85c0	                           test eax, eax	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4008a75	            0x7420	                            je 0x4008a97	      4560	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x4008a77	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4008a7e	        0x488b4008	                mov rax, qword [rax + 8]	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4008a82	      0xbe00000000	                              mov esi, 0	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4008a87	          0x4889c7	                            mov rdi, rax	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4008a8a	      0xe800000000	                          call 0x4008a8f	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4008a8f	            0x85c0	                           test eax, eax	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4008a91	     0xf85aa000000	                           jne 0x4008b41	      4561	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x4008a97	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4008a9e	        0x488b4008	                mov rax, qword [rax + 8]	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4008aa2	           0xfb600	                   movzx eax, byte [rax]	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4008aa5	           0xfb6c0	                           movzx eax, al	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4008aa8	            0x89c7	                            mov edi, eax	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4008aaa	      0xe822fcffff	                 call sym.part_from_char	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4008aaf	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4563	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x4008ab5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4565	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x4008abb	      0x2500000100	                        and eax, 0x10000	      4565	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x4008ac0	            0x85c0	                           test eax, eax	      4565	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x4008ac2	     0xf84c4170000	                            je 0x400a28c	      4565	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x4008ac8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008acf	            0x8b00	                    mov eax, dword [rax]	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008ad1	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008ad7	          0x83ea01	                              sub edx, 1	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008ada	      0xbe00000800	                        mov esi, 0x80000	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008adf	            0x89d1	                            mov ecx, edx	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008ae1	            0xd3e6	                             shl esi, cl	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008ae3	            0x89f2	                            mov edx, esi	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008ae5	             0x9c2	                             or edx, eax	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008ae7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008aee	            0x8910	                    mov dword [rax], edx	      4567	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008af0	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008af6	          0x4889d0	                            mov rax, rdx	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008af9	        0x48c1e006	                              shl rax, 6	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008afd	          0x4801d0	                            add rax, rdx	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b00	        0x488d5020	                   lea rdx, [rax + 0x20]	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b04	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b0b	          0x4801d0	                            add rax, rdx	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b0e	        0x488d5008	                      lea rdx, [rax + 8]	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b12	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b19	          0x4889d6	                            mov rsi, rdx	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b1c	          0x4889c7	                            mov rdi, rax	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b1f	      0xe800000000	                          call 0x4008b24	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b24	          0x4889c1	                            mov rcx, rax	      4569	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x4008b27	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4568	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008b2e	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4568	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008b34	        0x4883c226	                           add rdx, 0x26	      4568	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008b38	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4568	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008b3c	      0xe91e170000	                           jmp 0x400a25f	      4568	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20
0x4008b41	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4008b48	        0x488b4008	                mov rax, qword [rax + 8]	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4008b4c	      0xbe00000000	                              mov esi, 0	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4008b51	          0x4889c7	                            mov rdi, rax	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4008b54	      0xe800000000	                          call 0x4008b59	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4008b59	            0x85c0	                           test eax, eax	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4008b5b	            0x7534	                           jne 0x4008b91	      4571	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x4008b5d	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4573	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x4008b63	          0x83e001	                              and eax, 1	      4573	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x4008b66	            0x85c0	                           test eax, eax	      4573	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x4008b68	     0xf8421170000	                            je 0x400a28f	      4573	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x4008b6e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4008b75	          0x4889c7	                            mov rdi, rax	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4008b78	      0xe800000000	                          call 0x4008b7d	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4008b7d	            0x89c2	                            mov edx, eax	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4008b7f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4008b86	    0x899060010000	            mov dword [rax + 0x160], edx	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4008b8c	      0xe9ce160000	                           jmp 0x400a25f	      4575	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x4008b91	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4008b98	        0x488b4008	                mov rax, qword [rax + 8]	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4008b9c	      0xbe00000000	                              mov esi, 0	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4008ba1	          0x4889c7	                            mov rdi, rax	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4008ba4	      0xe800000000	                          call 0x4008ba9	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4008ba9	            0x85c0	                           test eax, eax	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4008bab	            0x743c	                            je 0x4008be9	      4577	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x4008bad	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4008bb4	        0x488b4008	                mov rax, qword [rax + 8]	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4008bb8	      0xbe00000000	                              mov esi, 0	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4008bbd	          0x4889c7	                            mov rdi, rax	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4008bc0	      0xe800000000	                          call 0x4008bc5	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4008bc5	            0x85c0	                           test eax, eax	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4008bc7	            0x7420	                            je 0x4008be9	      4578	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x4008bc9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4008bd0	        0x488b4008	                mov rax, qword [rax + 8]	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4008bd4	      0xbe00000000	                              mov esi, 0	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4008bd9	          0x4889c7	                            mov rdi, rax	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4008bdc	      0xe800000000	                          call 0x4008be1	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4008be1	            0x85c0	                           test eax, eax	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4008be3	     0xf852f010000	                           jne 0x4008d18	      4579	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x4008be9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4008bf0	        0x488b4008	                mov rax, qword [rax + 8]	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4008bf4	           0xfb600	                   movzx eax, byte [rax]	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4008bf7	           0xfb6c0	                           movzx eax, al	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4008bfa	            0x89c7	                            mov edi, eax	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4008bfc	      0xe8d0faffff	                 call sym.part_from_char	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4008c01	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4581	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x4008c07	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4583	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x4008c0d	      0x2500000100	                        and eax, 0x10000	      4583	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x4008c12	            0x85c0	                           test eax, eax	      4583	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x4008c14	     0xf8478160000	                            je 0x400a292	      4583	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x4008c1a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c21	            0x8b00	                    mov eax, dword [rax]	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c23	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c29	          0x83ea01	                              sub edx, 1	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c2c	      0xbe00000001	                      mov esi, 0x1000000	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c31	            0x89d1	                            mov ecx, edx	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c33	            0xd3e6	                             shl esi, cl	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c35	            0x89f2	                            mov edx, esi	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c37	             0x9c2	                             or edx, eax	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c39	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c40	            0x8910	                    mov dword [rax], edx	      4585	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24
0x4008c42	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c49	          0x4889c7	                            mov rdi, rax	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c4c	      0xe800000000	                          call 0x4008c51	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c51	            0x89c1	                            mov ecx, eax	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c53	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c5a	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c60	        0x4883c254	                           add rdx, 0x54	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c64	          0x890c90	            mov dword [rax + rdx*4], ecx	      4586	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x4008c67	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008c6e	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008c74	        0x4883c254	                           add rdx, 0x54	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008c78	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008c7b	            0x85c0	                           test eax, eax	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008c7d	            0x7f3f	                            jg 0x4008cbe	      4587	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008c7f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008c86	          0x4889c7	                            mov rdi, rax	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008c89	      0xe800000000	                          call 0x4008c8e	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008c8e	          0x4989c4	                            mov r12, rax	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008c91	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008c98	        0x488b5808	                mov rbx, qword [rax + 8]	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008c9c	      0xbf00000000	                              mov edi, 0	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008ca1	      0xe800000000	                          call 0x4008ca6	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008ca6	          0x4c89e2	                            mov rdx, r12	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008ca9	          0x4889de	                            mov rsi, rbx	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008cac	          0x4889c7	                            mov rdi, rax	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008caf	      0xe800000000	                          call 0x4008cb4	      4589	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x4008cb4	      0xb800000000	                              mov eax, 0	      4590	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008cb9	      0xe96a160000	                           jmp 0x400a328	      4590	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x4008cbe	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008cc5	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008ccb	        0x4883c254	                           add rdx, 0x54	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008ccf	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008cd2	            0x89c7	                            mov edi, eax	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008cd4	      0xe800000000	                          call 0x4008cd9	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008cd9	          0x4885c0	                           test rax, rax	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008cdc	     0xf857d150000	                           jne 0x400a25f	      4592	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x4008ce2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008ce9	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008cef	        0x4883c254	                           add rdx, 0x54	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008cf3	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008cf6	          0x4863d8	                         movsxd rbx, eax	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008cf9	      0xbf00000000	                              mov edi, 0	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008cfe	      0xe800000000	                          call 0x4008d03	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008d03	          0x4889de	                            mov rsi, rbx	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008d06	          0x4889c7	                            mov rdi, rax	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008d09	      0xe800000000	                          call 0x4008d0e	      4594	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x4008d0e	      0xb800000000	                              mov eax, 0	      4595	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27
0x4008d13	      0xe910160000	                           jmp 0x400a328	      4595	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_27
0x4008d18	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4008d1f	        0x488b4008	                mov rax, qword [rax + 8]	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4008d23	      0xbe00000000	                              mov esi, 0	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4008d28	          0x4889c7	                            mov rdi, rax	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4008d2b	      0xe800000000	                          call 0x4008d30	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4008d30	            0x85c0	                           test eax, eax	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4008d32	            0x7420	                            je 0x4008d54	      4598	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x4008d34	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4008d3b	        0x488b4008	                mov rax, qword [rax + 8]	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4008d3f	      0xbe00000000	                              mov esi, 0	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4008d44	          0x4889c7	                            mov rdi, rax	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4008d47	      0xe800000000	                          call 0x4008d4c	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4008d4c	            0x85c0	                           test eax, eax	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4008d4e	     0xf8584000000	                           jne 0x4008dd8	      4599	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x4008d54	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4601	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x4008d5b	        0x488b4008	                mov rax, qword [rax + 8]	      4601	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x4008d5f	           0xfb600	                   movzx eax, byte [rax]	      4601	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x4008d62	           0xfb6c0	                           movzx eax, al	      4601	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x4008d65	            0x89c7	                            mov edi, eax	      4601	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x4008d67	      0xe865f9ffff	                 call sym.part_from_char	      4601	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x4008d6c	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4601	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x4008d72	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4603	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x4008d78	      0x2500000100	                        and eax, 0x10000	      4603	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x4008d7d	            0x85c0	                           test eax, eax	      4603	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x4008d7f	     0xf8410150000	                            je 0x400a295	      4603	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x4008d85	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008d8c	            0x8b00	                    mov eax, dword [rax]	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008d8e	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008d94	          0x83ea01	                              sub edx, 1	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008d97	      0xbe00000020	                     mov esi, 0x20000000	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008d9c	            0x89d1	                            mov ecx, edx	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008d9e	            0xd3e6	                             shl esi, cl	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008da0	            0x89f2	                            mov edx, esi	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008da2	             0x9c2	                             or edx, eax	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008da4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008dab	            0x8910	                    mov dword [rax], edx	      4605	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28
0x4008dad	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008db4	          0x4889c7	                            mov rdi, rax	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008db7	      0xe800000000	                          call 0x4008dbc	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008dbc	            0x89c1	                            mov ecx, eax	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008dbe	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008dc5	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008dcb	        0x4883c258	                           add rdx, 0x58	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008dcf	        0x894c9004	        mov dword [rax + rdx*4 + 4], ecx	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008dd3	      0xe987140000	                           jmp 0x400a25f	      4606	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x4008dd8	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4008ddf	        0x488b4008	                mov rax, qword [rax + 8]	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4008de3	      0xbe00000000	                              mov esi, 0	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4008de8	          0x4889c7	                            mov rdi, rax	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4008deb	      0xe800000000	                          call 0x4008df0	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4008df0	            0x85c0	                           test eax, eax	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4008df2	            0x7420	                            je 0x4008e14	      4608	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x4008df4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4008dfb	        0x488b4008	                mov rax, qword [rax + 8]	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4008dff	      0xbe00000000	                              mov esi, 0	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4008e04	          0x4889c7	                            mov rdi, rax	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4008e07	      0xe800000000	                          call 0x4008e0c	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4008e0c	            0x85c0	                           test eax, eax	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4008e0e	     0xf8586000000	                           jne 0x4008e9a	      4609	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x4008e14	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4611	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x4008e1b	        0x488b4008	                mov rax, qword [rax + 8]	      4611	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x4008e1f	           0xfb600	                   movzx eax, byte [rax]	      4611	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x4008e22	           0xfb6c0	                           movzx eax, al	      4611	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x4008e25	            0x89c7	                            mov edi, eax	      4611	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x4008e27	      0xe8a5f8ffff	                 call sym.part_from_char	      4611	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x4008e2c	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4611	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x4008e32	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4613	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x4008e38	      0x2500000100	                        and eax, 0x10000	      4613	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x4008e3d	            0x85c0	                           test eax, eax	      4613	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x4008e3f	     0xf8453140000	                            je 0x400a298	      4613	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x4008e45	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e4c	          0x8b4004	                mov eax, dword [rax + 4]	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e4f	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e55	          0x83ea01	                              sub edx, 1	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e58	      0xbe01000000	                              mov esi, 1	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e5d	            0x89d1	                            mov ecx, edx	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e5f	            0xd3e6	                             shl esi, cl	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e61	            0x89f2	                            mov edx, esi	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e63	             0x9c2	                             or edx, eax	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e65	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e6c	          0x895004	                mov dword [rax + 4], edx	      4615	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30
0x4008e6f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e76	          0x4889c7	                            mov rdi, rax	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e79	      0xe800000000	                          call 0x4008e7e	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e7e	            0x89c1	                            mov ecx, eax	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e80	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e87	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e8d	        0x4883c25c	                           add rdx, 0x5c	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e91	        0x894c9004	        mov dword [rax + rdx*4 + 4], ecx	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e95	      0xe9c5130000	                           jmp 0x400a25f	      4616	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x4008e9a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x4008ea1	        0x488b4008	                mov rax, qword [rax + 8]	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x4008ea5	      0xbe00000000	                              mov esi, 0	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x4008eaa	          0x4889c7	                            mov rdi, rax	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x4008ead	      0xe800000000	                          call 0x4008eb2	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x4008eb2	            0x85c0	                           test eax, eax	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x4008eb4	            0x7420	                            je 0x4008ed6	      4618	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x4008eb6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x4008ebd	        0x488b4008	                mov rax, qword [rax + 8]	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x4008ec1	      0xbe00000000	                              mov esi, 0	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x4008ec6	          0x4889c7	                            mov rdi, rax	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x4008ec9	      0xe800000000	                          call 0x4008ece	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x4008ece	            0x85c0	                           test eax, eax	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x4008ed0	     0xf85f3000000	                           jne 0x4008fc9	      4619	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x4008ed6	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4623	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x4008edc	      0x2500000100	                        and eax, 0x10000	      4623	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x4008ee1	            0x85c0	                           test eax, eax	      4623	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x4008ee3	     0xf84b2130000	                            je 0x400a29b	      4623	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x4008ee9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008ef0	        0x488b4008	                mov rax, qword [rax + 8]	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008ef4	        0x4883c003	                              add rax, 3	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008ef8	           0xfb600	                   movzx eax, byte [rax]	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008efb	            0x3c74	                            cmp al, 0x74	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008efd	            0x752f	                           jne 0x4008f2e	      4625	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008eff	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4627	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f06	    0x480590010000	                          add rax, 0x190	      4627	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f0c	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4627	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f13	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f1a	            0x8b00	                    mov eax, dword [rax]	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f1c	       0xd00004000	                        or eax, 0x400000	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f21	            0x89c2	                            mov edx, eax	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f23	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f2a	            0x8910	                    mov dword [rax], edx	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f2c	            0xeb2d	                           jmp 0x4008f5b	      4628	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x4008f2e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4632	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f35	    0x480598010000	                          add rax, 0x198	      4632	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f3b	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4632	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f42	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4633	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f49	            0x8b00	                    mov eax, dword [rax]	      4633	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f4b	       0xd00008000	                        or eax, 0x800000	      4633	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f50	            0x89c2	                            mov edx, eax	      4633	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f52	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4633	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f59	            0x8910	                    mov dword [rax], edx	      4633	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x4008f5b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x4008f62	          0x4889c7	                            mov rdi, rax	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x4008f65	      0xe800000000	                          call 0x4008f6a	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x4008f6a	          0x4889c2	                            mov rdx, rax	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x4008f6d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x4008f74	          0x488910	                    mov qword [rax], rdx	      4635	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x4008f77	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4636	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4008f7e	          0x488b00	                    mov rax, qword [rax]	      4636	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4008f81	          0x4885c0	                           test rax, rax	      4636	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4008f84	     0xf89d4120000	                           jns 0x400a25e	      4636	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4008f8a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008f91	          0x4889c7	                            mov rdi, rax	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008f94	      0xe800000000	                          call 0x4008f99	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008f99	          0x4989c4	                            mov r12, rax	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008f9c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fa3	        0x488b5808	                mov rbx, qword [rax + 8]	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fa7	      0xbf00000000	                              mov edi, 0	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fac	      0xe800000000	                          call 0x4008fb1	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fb1	          0x4c89e2	                            mov rdx, r12	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fb4	          0x4889de	                            mov rsi, rbx	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fb7	          0x4889c7	                            mov rdi, rax	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fba	      0xe800000000	                          call 0x4008fbf	      4638	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x4008fbf	      0xb800000000	                              mov eax, 0	      4639	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4008fc4	      0xe95f130000	                           jmp 0x400a328	      4639	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x4008fc9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4008fd0	        0x488b4008	                mov rax, qword [rax + 8]	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4008fd4	      0xbe00000000	                              mov esi, 0	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4008fd9	          0x4889c7	                            mov rdi, rax	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4008fdc	      0xe800000000	                          call 0x4008fe1	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4008fe1	            0x85c0	                           test eax, eax	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4008fe3	            0x7579	                           jne 0x400905e	      4642	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x4008fe5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4644	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x4008feb	      0x2500000100	                        and eax, 0x10000	      4644	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x4008ff0	            0x85c0	                           test eax, eax	      4644	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x4008ff2	     0xf84a6120000	                            je 0x400a29e	      4644	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x4008ff8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4646	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4008fff	            0x8b00	                    mov eax, dword [rax]	      4646	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4009001	       0xd00000008	                    or eax, section_end.	      4646	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4009006	            0x89c2	                            mov edx, eax	      4646	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4009008	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4646	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x400900f	            0x8910	                    mov dword [rax], edx	      4646	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4009011	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4647	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x4009018	            0x8b00	                    mov eax, dword [rax]	      4647	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x400901a	          0x83f80a	                            cmp eax, 0xa	      4647	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x400901d	            0x7421	                            je 0x4009040	      4647	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x400901f	      0xbf00000000	                              mov edi, 0	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4009024	      0xe800000000	                          call 0x4009029	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4009029	      0xbe00000000	                              mov esi, 0	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x400902e	          0x4889c7	                            mov rdi, rax	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4009031	      0xe800000000	                          call 0x4009036	      4649	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x4009036	      0xb800000000	                              mov eax, 0	      4650	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x400903b	      0xe9e8120000	                           jmp 0x400a328	      4650	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x4009040	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4009047	        0x488b5008	                mov rdx, qword [rax + 8]	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x400904b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4009052	    0x488990880100	            mov qword [rax + 0x188], rdx	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x4009059	      0xe901120000	                           jmp 0x400a25f	      4652	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36
0x400905e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x4009065	        0x488b4008	                mov rax, qword [rax + 8]	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x4009069	      0xbe00000000	                              mov esi, 0	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x400906e	          0x4889c7	                            mov rdi, rax	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x4009071	      0xe800000000	                          call 0x4009076	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x4009076	            0x85c0	                           test eax, eax	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x4009078	     0xf8591000000	                           jne 0x400910f	      4654	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x400907e	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4656	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x4009084	          0x83e010	                           and eax, 0x10	      4656	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x4009087	            0x85c0	                           test eax, eax	      4656	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x4009089	     0xf8412120000	                            je 0x400a2a1	      4656	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x400908f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4658	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39
0x4009096	            0x8b00	                    mov eax, dword [rax]	      4658	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39
0x4009098	          0x83c810	                            or eax, 0x10	      4658	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39
0x400909b	            0x89c2	                            mov edx, eax	      4658	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39
0x400909d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4658	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39
0x40090a4	            0x8910	                    mov dword [rax], edx	      4658	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39
0x40090a6	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090ad	    0x488d90a80100	                  lea rdx, [rax + 0x1a8]	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090b4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090bb	          0x4889d6	                            mov rsi, rdx	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090be	          0x4889c7	                            mov rdi, rax	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090c1	      0xe800000000	                          call 0x40090c6	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090c6	          0x4889c2	                            mov rdx, rax	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090c9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090d0	    0x488990a00100	            mov qword [rax + 0x1a0], rdx	      4659	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x40090d7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4660	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x40090de	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      4660	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x40090e5	          0x4885c0	                           test rax, rax	      4660	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x40090e8	     0xf8571110000	                           jne 0x400a25f	      4660	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x40090ee	      0xbf00000000	                              mov edi, 0	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x40090f3	      0xe800000000	                          call 0x40090f8	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x40090f8	      0xbe00000000	                              mov esi, 0	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x40090fd	          0x4889c7	                            mov rdi, rax	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x4009100	      0xe800000000	                          call 0x4009105	      4662	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x4009105	      0xb800000000	                              mov eax, 0	      4663	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x400910a	      0xe919120000	                           jmp 0x400a328	      4663	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x400910f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4009116	        0x488b4008	                mov rax, qword [rax + 8]	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x400911a	      0xbe00000000	                              mov esi, 0	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x400911f	          0x4889c7	                            mov rdi, rax	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4009122	      0xe800000000	                          call 0x4009127	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4009127	            0x85c0	                           test eax, eax	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x4009129	     0xf8591000000	                           jne 0x40091c0	      4666	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x400912f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4668	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x4009135	          0x83e020	                           and eax, 0x20	      4668	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x4009138	            0x85c0	                           test eax, eax	      4668	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x400913a	     0xf8464110000	                            je 0x400a2a4	      4668	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x4009140	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4670	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42
0x4009147	            0x8b00	                    mov eax, dword [rax]	      4670	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42
0x4009149	          0x83c820	                            or eax, 0x20	      4670	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42
0x400914c	            0x89c2	                            mov edx, eax	      4670	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42
0x400914e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4670	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42
0x4009155	            0x8910	                    mov dword [rax], edx	      4670	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42
0x4009157	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x400915e	    0x488d90b80100	                  lea rdx, [rax + 0x1b8]	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4009165	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x400916c	          0x4889d6	                            mov rsi, rdx	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x400916f	          0x4889c7	                            mov rdi, rax	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4009172	      0xe800000000	                          call 0x4009177	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4009177	          0x4889c2	                            mov rdx, rax	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x400917a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4009181	    0x488990b00100	            mov qword [rax + 0x1b0], rdx	      4671	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x4009188	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4672	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x400918f	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      4672	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x4009196	          0x4885c0	                           test rax, rax	      4672	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x4009199	     0xf85c0100000	                           jne 0x400a25f	      4672	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x400919f	      0xbf00000000	                              mov edi, 0	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x40091a4	      0xe800000000	                          call 0x40091a9	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x40091a9	      0xbe00000000	                              mov esi, 0	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x40091ae	          0x4889c7	                            mov rdi, rax	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x40091b1	      0xe800000000	                          call 0x40091b6	      4674	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x40091b6	      0xb800000000	                              mov eax, 0	      4675	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x40091bb	      0xe968110000	                           jmp 0x400a328	      4675	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x40091c0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x40091c7	        0x488b4008	                mov rax, qword [rax + 8]	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x40091cb	      0xbe00000000	                              mov esi, 0	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x40091d0	          0x4889c7	                            mov rdi, rax	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x40091d3	      0xe800000000	                          call 0x40091d8	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x40091d8	            0x85c0	                           test eax, eax	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x40091da	     0xf8591000000	                           jne 0x4009271	      4678	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x40091e0	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4680	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x40091e6	          0x83e040	                           and eax, 0x40	      4680	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x40091e9	            0x85c0	                           test eax, eax	      4680	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x40091eb	     0xf84b6100000	                            je 0x400a2a7	      4680	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x40091f1	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4682	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45
0x40091f8	            0x8b00	                    mov eax, dword [rax]	      4682	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45
0x40091fa	          0x83c840	                            or eax, 0x40	      4682	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45
0x40091fd	            0x89c2	                            mov edx, eax	      4682	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45
0x40091ff	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4682	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45
0x4009206	            0x8910	                    mov dword [rax], edx	      4682	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45
0x4009208	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x400920f	    0x488d90c80100	                  lea rdx, [rax + 0x1c8]	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x4009216	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x400921d	          0x4889d6	                            mov rsi, rdx	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x4009220	          0x4889c7	                            mov rdi, rax	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x4009223	      0xe800000000	                          call 0x4009228	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x4009228	          0x4889c2	                            mov rdx, rax	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x400922b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x4009232	    0x488990c00100	            mov qword [rax + 0x1c0], rdx	      4683	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x4009239	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4684	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x4009240	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      4684	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x4009247	          0x4885c0	                           test rax, rax	      4684	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x400924a	     0xf850f100000	                           jne 0x400a25f	      4684	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x4009250	      0xbf00000000	                              mov edi, 0	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x4009255	      0xe800000000	                          call 0x400925a	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x400925a	      0xbe00000000	                              mov esi, 0	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x400925f	          0x4889c7	                            mov rdi, rax	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x4009262	      0xe800000000	                          call 0x4009267	      4686	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x4009267	      0xb800000000	                              mov eax, 0	      4687	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x400926c	      0xe9b7100000	                           jmp 0x400a328	      4687	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x4009271	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x4009278	        0x488b4008	                mov rax, qword [rax + 8]	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x400927c	      0xbe00000000	                              mov esi, 0	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x4009281	          0x4889c7	                            mov rdi, rax	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x4009284	      0xe800000000	                          call 0x4009289	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x4009289	            0x85c0	                           test eax, eax	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x400928b	     0xf8592000000	                           jne 0x4009323	      4690	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x4009291	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4692	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x4009297	      0x2580000000	                           and eax, 0x80	      4692	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x400929c	            0x85c0	                           test eax, eax	      4692	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x400929e	     0xf8406100000	                            je 0x400a2aa	      4692	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x40092a4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4694	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48
0x40092ab	            0x8b00	                    mov eax, dword [rax]	      4694	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48
0x40092ad	             0xc80	                             or al, 0x80	      4694	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48
0x40092af	            0x89c2	                            mov edx, eax	      4694	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48
0x40092b1	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4694	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48
0x40092b8	            0x8910	                    mov dword [rax], edx	      4694	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48
0x40092ba	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092c1	    0x488d90d80100	                  lea rdx, [rax + 0x1d8]	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092c8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092cf	          0x4889d6	                            mov rsi, rdx	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092d2	          0x4889c7	                            mov rdi, rax	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092d5	      0xe800000000	                          call 0x40092da	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092da	          0x4889c2	                            mov rdx, rax	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092dd	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092e4	    0x488990d00100	            mov qword [rax + 0x1d0], rdx	      4695	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x40092eb	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4696	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x40092f2	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      4696	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x40092f9	          0x4885c0	                           test rax, rax	      4696	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x40092fc	     0xf855d0f0000	                           jne 0x400a25f	      4696	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x4009302	      0xbf00000000	                              mov edi, 0	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4009307	      0xe800000000	                          call 0x400930c	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x400930c	      0xbe00000000	                              mov esi, 0	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4009311	          0x4889c7	                            mov rdi, rax	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4009314	      0xe800000000	                          call 0x4009319	      4698	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x4009319	      0xb800000000	                              mov eax, 0	      4699	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x400931e	      0xe905100000	                           jmp 0x400a328	      4699	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x4009323	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x400932a	        0x488b4008	                mov rax, qword [rax + 8]	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x400932e	      0xbe00000000	                              mov esi, 0	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x4009333	          0x4889c7	                            mov rdi, rax	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x4009336	      0xe800000000	                          call 0x400933b	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x400933b	            0x85c0	                           test eax, eax	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x400933d	     0xf85a2000000	                           jne 0x40093e5	      4702	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x4009343	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      4704	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x400934d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4705	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x4009354	          0x4889c7	                            mov rdi, rax	      4705	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x4009357	      0xe800000000	                          call 0x400935c	      4705	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x400935c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4705	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x4009363	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x400936a	      0xbe00000000	                              mov esi, 0	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x400936f	          0x4889c7	                            mov rdi, rax	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x4009372	      0xe800000000	                          call 0x4009377	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x4009377	            0x85c0	                           test eax, eax	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x4009379	            0x750c	                           jne 0x4009387	      4707	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x400937b	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	      4708	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52
0x4009385	            0xeb46	                           jmp 0x40093cd	      4708	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	IF_52
0x4009387	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x400938e	      0xbe00000000	                              mov esi, 0	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x4009393	          0x4889c7	                            mov rdi, rax	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x4009396	      0xe800000000	                          call 0x400939b	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x400939b	            0x85c0	                           test eax, eax	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x400939d	            0x742e	                            je 0x40093cd	      4709	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x400939f	      0xbf00000000	                              mov edi, 0	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093a4	      0xe800000000	                          call 0x40093a9	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093a9	          0x4889c1	                            mov rcx, rax	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093ac	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093b3	          0x4889c2	                            mov rdx, rax	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093b6	      0xbe00000000	                              mov esi, 0	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093bb	          0x4889cf	                            mov rdi, rcx	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093be	      0xe800000000	                          call 0x40093c3	      4711	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x40093c3	      0xb800000000	                              mov eax, 0	      4712	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53
0x40093c8	      0xe95b0f0000	                           jmp 0x400a328	      4712	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53
0x40093cd	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4714	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x40093d4	    0x8b9504ffffff	             mov edx, dword [rbp - 0xfc]	      4714	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x40093da	    0x8990f0010000	            mov dword [rax + 0x1f0], edx	      4714	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x40093e0	      0xe97a0e0000	                           jmp 0x400a25f	      4714	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_17	IF_51
0x40093e5	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40093ec	        0x488b4008	                mov rax, qword [rax + 8]	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40093f0	      0xbe00000000	                              mov esi, 0	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40093f5	          0x4889c7	                            mov rdi, rax	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40093f8	      0xe800000000	                          call 0x40093fd	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40093fd	            0x85c0	                           test eax, eax	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x40093ff	     0xf8593000000	                           jne 0x4009498	      4716	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x4009405	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4718	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x400940b	      0x2500800000	                         and eax, 0x8000	      4718	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x4009410	            0x85c0	                           test eax, eax	      4718	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x4009412	     0xf84950e0000	                            je 0x400a2ad	      4718	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x4009418	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4720	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54
0x400941f	            0x8b00	                    mov eax, dword [rax]	      4720	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54
0x4009421	          0x80cc80	                             or ah, 0x80	      4720	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54
0x4009424	            0x89c2	                            mov edx, eax	      4720	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54
0x4009426	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4720	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54
0x400942d	            0x8910	                    mov dword [rax], edx	      4720	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54
0x400942f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x4009436	    0x488d90e80100	                  lea rdx, [rax + 0x1e8]	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x400943d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x4009444	          0x4889d6	                            mov rsi, rdx	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x4009447	          0x4889c7	                            mov rdi, rax	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x400944a	      0xe800000000	                          call 0x400944f	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x400944f	          0x4889c2	                            mov rdx, rax	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x4009452	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x4009459	    0x488990e00100	            mov qword [rax + 0x1e0], rdx	      4721	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x4009460	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4722	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x4009467	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      4722	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x400946e	          0x4885c0	                           test rax, rax	      4722	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x4009471	     0xf85e80d0000	                           jne 0x400a25f	      4722	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x4009477	      0xbf00000000	                              mov edi, 0	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x400947c	      0xe800000000	                          call 0x4009481	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x4009481	      0xbe00000000	                              mov esi, 0	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x4009486	          0x4889c7	                            mov rdi, rax	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x4009489	      0xe800000000	                          call 0x400948e	      4724	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x400948e	      0xb800000000	                              mov eax, 0	      4725	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x4009493	      0xe9900e0000	                           jmp 0x400a328	      4725	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x4009498	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x400949f	        0x488b4008	                mov rax, qword [rax + 8]	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x40094a3	      0xbe00000000	                              mov esi, 0	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x40094a8	          0x4889c7	                            mov rdi, rax	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x40094ab	      0xe800000000	                          call 0x40094b0	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x40094b0	            0x85c0	                           test eax, eax	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x40094b2	     0xf8582000000	                           jne 0x400953a	      4729	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x40094b8	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4731	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x40094be	          0x83e004	                              and eax, 4	      4731	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x40094c1	            0x85c0	                           test eax, eax	      4731	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x40094c3	     0xf84e70d0000	                            je 0x400a2b0	      4731	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x40094c9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4733	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57
0x40094d0	          0x8b4004	                mov eax, dword [rax + 4]	      4733	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57
0x40094d3	          0x83c804	                               or eax, 4	      4733	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57
0x40094d6	            0x89c2	                            mov edx, eax	      4733	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57
0x40094d8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4733	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57
0x40094df	          0x895004	                mov dword [rax + 4], edx	      4733	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57
0x40094e2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x40094e9	          0x4889c7	                            mov rdi, rax	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x40094ec	      0xe800000000	                          call 0x40094f1	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x40094f1	          0x4889c2	                            mov rdx, rax	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x40094f4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x40094fb	    0x488990d00200	            mov qword [rax + 0x2d0], rdx	      4734	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x4009502	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4735	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x4009509	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	      4735	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x4009510	          0x4885c0	                           test rax, rax	      4735	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x4009513	     0xf85460d0000	                           jne 0x400a25f	      4735	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x4009519	      0xbf00000000	                              mov edi, 0	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x400951e	      0xe800000000	                          call 0x4009523	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x4009523	      0xbe00000000	                              mov esi, 0	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x4009528	          0x4889c7	                            mov rdi, rax	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x400952b	      0xe800000000	                          call 0x4009530	      4737	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x4009530	      0xb800000000	                              mov eax, 0	      4738	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x4009535	      0xe9ee0d0000	                           jmp 0x400a328	      4738	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x400953a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x4009541	        0x488b4008	                mov rax, qword [rax + 8]	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x4009545	      0xbe00000000	                              mov esi, 0	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x400954a	          0x4889c7	                            mov rdi, rax	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x400954d	      0xe800000000	                          call 0x4009552	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x4009552	            0x85c0	                           test eax, eax	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x4009554	     0xf85bd000000	                           jne 0x4009617	      4741	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x400955a	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4743	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x4009560	          0x83e008	                              and eax, 8	      4743	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x4009563	            0x85c0	                           test eax, eax	      4743	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x4009565	     0xf84480d0000	                            je 0x400a2b3	      4743	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x400956b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4745	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x4009572	          0x4889c7	                            mov rdi, rax	      4745	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x4009575	      0xe800000000	                          call 0x400957a	      4745	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x400957a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4745	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x4009581	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x4009588	      0xbe00000000	                              mov esi, 0	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x400958d	          0x4889c7	                            mov rdi, rax	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x4009590	      0xe800000000	                          call 0x4009595	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x4009595	            0x85c0	                           test eax, eax	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x4009597	            0x7446	                            je 0x40095df	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x4009599	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40095a0	      0xbe00000000	                              mov esi, 0	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40095a5	          0x4889c7	                            mov rdi, rax	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40095a8	      0xe800000000	                          call 0x40095ad	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40095ad	            0x85c0	                           test eax, eax	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40095af	            0x742e	                            je 0x40095df	      4746	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x40095b1	      0xbf00000000	                              mov edi, 0	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095b6	      0xe800000000	                          call 0x40095bb	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095bb	          0x4889c1	                            mov rcx, rax	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095be	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095c5	          0x4889c2	                            mov rdx, rax	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095c8	      0xbe00000000	                              mov esi, 0	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095cd	          0x4889cf	                            mov rdi, rcx	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095d0	      0xe800000000	                          call 0x40095d5	      4748	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x40095d5	      0xb800000000	                              mov eax, 0	      4749	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62
0x40095da	      0xe9490d0000	                           jmp 0x400a328	      4749	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_62
0x40095df	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4751	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x40095e6	          0x8b4004	                mov eax, dword [rax + 4]	      4751	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x40095e9	          0x83c808	                               or eax, 8	      4751	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x40095ec	            0x89c2	                            mov edx, eax	      4751	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x40095ee	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4751	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x40095f5	          0x895004	                mov dword [rax + 4], edx	      4751	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x40095f8	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x40095ff	           0xfb600	                   movzx eax, byte [rax]	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x4009602	           0xfb6d0	                           movzx edx, al	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x4009605	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x400960c	    0x8990e0020000	            mov dword [rax + 0x2e0], edx	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x4009612	      0xe9480c0000	                           jmp 0x400a25f	      4752	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60
0x4009617	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x400961e	        0x488b4008	                mov rax, qword [rax + 8]	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x4009622	      0xbe00000000	                              mov esi, 0	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x4009627	          0x4889c7	                            mov rdi, rax	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x400962a	      0xe800000000	                          call 0x400962f	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x400962f	            0x85c0	                           test eax, eax	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x4009631	     0xf85f9000000	                           jne 0x4009730	      4754	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x4009637	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4758	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x400963d	      0x2500080000	                          and eax, 0x800	      4758	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x4009642	            0x85c0	                           test eax, eax	      4758	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x4009644	     0xf846c0c0000	                            je 0x400a2b6	      4758	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x400964a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4760	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63
0x4009651	          0x8b4004	                mov eax, dword [rax + 4]	      4760	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63
0x4009654	          0x80cc08	                                or ah, 8	      4760	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63
0x4009657	            0x89c2	                            mov edx, eax	      4760	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63
0x4009659	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4760	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63
0x4009660	          0x895004	                mov dword [rax + 4], edx	      4760	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63
0x4009663	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x400966a	          0x4889c7	                            mov rdi, rax	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x400966d	      0xe800000000	                          call 0x4009672	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x4009672	          0x4889c2	                            mov rdx, rax	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x4009675	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x400967c	    0x488990d80200	            mov qword [rax + 0x2d8], rdx	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x4009683	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x400968a	    0x488b80d80200	           mov rax, qword [rax + 0x2d8] 	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x4009691	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4761	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x4009698	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4762	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65
0x40096a0	            0x745f	                            je 0x4009701	      4762	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65
0x40096a2	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x40096a9	      0xbe25000000	                           mov esi, 0x25	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x40096ae	          0x4889c7	                            mov rdi, rax	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x40096b1	      0xe800000000	                          call 0x40096b6	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x40096b6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4765	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x40096bd	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x40096c5	            0x743a	                            je 0x4009701	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x40096c7	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x40096ce	        0x4883c001	                              add rax, 1	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x40096d2	           0xfb600	                   movzx eax, byte [rax]	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x40096d5	            0x3c64	                            cmp al, 0x64	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x40096d7	            0x751d	                           jne 0x40096f6	      4766	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x40096d9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40096e0	        0x4883c002	                              add rax, 2	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40096e4	      0xbe25000000	                           mov esi, 0x25	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40096e9	          0x4889c7	                            mov rdi, rax	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40096ec	      0xe800000000	                          call 0x40096f1	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40096f1	          0x4885c0	                           test rax, rax	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40096f4	            0x740b	                            je 0x4009701	      4767	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x40096f6	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      4768	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x4009701	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4770	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x4009709	     0xf85500b0000	                           jne 0x400a25f	      4770	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x400970f	      0xbf00000000	                              mov edi, 0	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4009714	      0xe800000000	                          call 0x4009719	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4009719	      0xbe00000000	                              mov esi, 0	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x400971e	          0x4889c7	                            mov rdi, rax	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4009721	      0xe800000000	                          call 0x4009726	      4772	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x4009726	      0xb800000000	                              mov eax, 0	      4773	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x400972b	      0xe9f80b0000	                           jmp 0x400a328	      4773	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x4009730	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x4009737	        0x488b4008	                mov rax, qword [rax + 8]	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x400973b	      0xbe00000000	                              mov esi, 0	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x4009740	          0x4889c7	                            mov rdi, rax	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x4009743	      0xe800000000	                          call 0x4009748	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x4009748	            0x85c0	                           test eax, eax	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x400974a	     0xf8590000000	                           jne 0x40097e0	      4776	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x4009750	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4780	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x4009756	      0x2500100000	                         and eax, 0x1000	      4780	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x400975b	            0x85c0	                           test eax, eax	      4780	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x400975d	     0xf84560b0000	                            je 0x400a2b9	      4780	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x4009763	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4782	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68
0x400976a	          0x8b4004	                mov eax, dword [rax + 4]	      4782	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68
0x400976d	          0x80cc10	                             or ah, 0x10	      4782	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68
0x4009770	            0x89c2	                            mov edx, eax	      4782	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68
0x4009772	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4782	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68
0x4009779	          0x895004	                mov dword [rax + 4], edx	      4782	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68
0x400977c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x4009783	          0x4889c7	                            mov rdi, rax	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x4009786	      0xe800000000	                          call 0x400978b	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x400978b	          0x4889c2	                            mov rdx, rax	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x400978e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x4009795	    0x488990e80200	            mov qword [rax + 0x2e8], rdx	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x400979c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x40097a3	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x40097aa	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4783	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x40097b1	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4784	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x40097b9	     0xf85a00a0000	                           jne 0x400a25f	      4784	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x40097bf	      0xbf00000000	                              mov edi, 0	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40097c4	      0xe800000000	                          call 0x40097c9	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40097c9	      0xbe00000000	                              mov esi, 0	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40097ce	          0x4889c7	                            mov rdi, rax	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40097d1	      0xe800000000	                          call 0x40097d6	      4786	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x40097d6	      0xb800000000	                              mov eax, 0	      4787	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x40097db	      0xe9480b0000	                           jmp 0x400a328	      4787	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x40097e0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x40097e7	        0x488b4008	                mov rax, qword [rax + 8]	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x40097eb	      0xbe00000000	                              mov esi, 0	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x40097f0	          0x4889c7	                            mov rdi, rax	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x40097f3	      0xe800000000	                          call 0x40097f8	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x40097f8	            0x85c0	                           test eax, eax	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x40097fa	            0x754d	                           jne 0x4009849	      4790	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x40097fc	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4792	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x4009802	          0x83e040	                           and eax, 0x40	      4792	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x4009805	            0x85c0	                           test eax, eax	      4792	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x4009807	     0xf84af0a0000	                            je 0x400a2bc	      4792	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x400980d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4794	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71
0x4009814	          0x8b4004	                mov eax, dword [rax + 4]	      4794	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71
0x4009817	          0x83c840	                            or eax, 0x40	      4794	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71
0x400981a	            0x89c2	                            mov edx, eax	      4794	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71
0x400981c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4794	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71
0x4009823	          0x895004	                mov dword [rax + 4], edx	      4794	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71
0x4009826	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x400982d	          0x4889c7	                            mov rdi, rax	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4009830	      0xe800000000	                          call 0x4009835	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4009835	            0x89c2	                            mov edx, eax	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4009837	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x400983e	    0x8990b8020000	            mov dword [rax + 0x2b8], edx	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4009844	      0xe9160a0000	                           jmp 0x400a25f	      4795	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x4009849	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4009850	        0x488b4008	                mov rax, qword [rax + 8]	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4009854	      0xbe00000000	                              mov esi, 0	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4009859	          0x4889c7	                            mov rdi, rax	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x400985c	      0xe800000000	                          call 0x4009861	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4009861	            0x85c0	                           test eax, eax	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4009863	            0x754e	                           jne 0x40098b3	      4797	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x4009865	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4799	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x400986b	      0x2580000000	                           and eax, 0x80	      4799	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x4009870	            0x85c0	                           test eax, eax	      4799	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x4009872	     0xf84470a0000	                            je 0x400a2bf	      4799	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x4009878	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4801	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73
0x400987f	          0x8b4004	                mov eax, dword [rax + 4]	      4801	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73
0x4009882	             0xc80	                             or al, 0x80	      4801	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73
0x4009884	            0x89c2	                            mov edx, eax	      4801	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73
0x4009886	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4801	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73
0x400988d	          0x895004	                mov dword [rax + 4], edx	      4801	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73
0x4009890	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x4009897	          0x4889c7	                            mov rdi, rax	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x400989a	      0xe800000000	                          call 0x400989f	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x400989f	            0x89c2	                            mov edx, eax	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x40098a1	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x40098a8	    0x8990bc020000	            mov dword [rax + 0x2bc], edx	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x40098ae	      0xe9ac090000	                           jmp 0x400a25f	      4802	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x40098b3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x40098ba	        0x488b4008	                mov rax, qword [rax + 8]	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x40098be	      0xbe00000000	                              mov esi, 0	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x40098c3	          0x4889c7	                            mov rdi, rax	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x40098c6	      0xe800000000	                          call 0x40098cb	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x40098cb	            0x85c0	                           test eax, eax	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x40098cd	            0x754f	                           jne 0x400991e	      4804	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x40098cf	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4806	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x40098d5	      0x2500010000	                          and eax, 0x100	      4806	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x40098da	            0x85c0	                           test eax, eax	      4806	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x40098dc	     0xf84e0090000	                            je 0x400a2c2	      4806	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x40098e2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4808	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75
0x40098e9	          0x8b4004	                mov eax, dword [rax + 4]	      4808	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75
0x40098ec	          0x80cc01	                                or ah, 1	      4808	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75
0x40098ef	            0x89c2	                            mov edx, eax	      4808	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75
0x40098f1	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4808	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75
0x40098f8	          0x895004	                mov dword [rax + 4], edx	      4808	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75
0x40098fb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x4009902	          0x4889c7	                            mov rdi, rax	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x4009905	      0xe800000000	                          call 0x400990a	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x400990a	            0x89c2	                            mov edx, eax	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x400990c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x4009913	    0x8990c0020000	            mov dword [rax + 0x2c0], edx	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x4009919	      0xe941090000	                           jmp 0x400a25f	      4809	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x400991e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x4009925	        0x488b4008	                mov rax, qword [rax + 8]	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x4009929	      0xbe00000000	                              mov esi, 0	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x400992e	          0x4889c7	                            mov rdi, rax	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x4009931	      0xe800000000	                          call 0x4009936	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x4009936	            0x85c0	                           test eax, eax	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x4009938	            0x754f	                           jne 0x4009989	      4811	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x400993a	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4813	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x4009940	      0x2500020000	                          and eax, 0x200	      4813	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x4009945	            0x85c0	                           test eax, eax	      4813	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x4009947	     0xf8478090000	                            je 0x400a2c5	      4813	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x400994d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4815	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77
0x4009954	          0x8b4004	                mov eax, dword [rax + 4]	      4815	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77
0x4009957	          0x80cc02	                                or ah, 2	      4815	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77
0x400995a	            0x89c2	                            mov edx, eax	      4815	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77
0x400995c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4815	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77
0x4009963	          0x895004	                mov dword [rax + 4], edx	      4815	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77
0x4009966	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x400996d	          0x4889c7	                            mov rdi, rax	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x4009970	      0xe800000000	                          call 0x4009975	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x4009975	            0x89c2	                            mov edx, eax	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x4009977	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x400997e	    0x8990c4020000	            mov dword [rax + 0x2c4], edx	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x4009984	      0xe9d6080000	                           jmp 0x400a25f	      4816	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x4009989	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x4009990	        0x488b4008	                mov rax, qword [rax + 8]	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x4009994	      0xbe00000000	                              mov esi, 0	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x4009999	          0x4889c7	                            mov rdi, rax	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x400999c	      0xe800000000	                          call 0x40099a1	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x40099a1	            0x85c0	                           test eax, eax	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x40099a3	            0x754f	                           jne 0x40099f4	      4818	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x40099a5	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4820	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x40099ab	      0x2500040000	                          and eax, 0x400	      4820	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x40099b0	            0x85c0	                           test eax, eax	      4820	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x40099b2	     0xf8410090000	                            je 0x400a2c8	      4820	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x40099b8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4822	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79
0x40099bf	          0x8b4004	                mov eax, dword [rax + 4]	      4822	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79
0x40099c2	          0x80cc04	                                or ah, 4	      4822	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79
0x40099c5	            0x89c2	                            mov edx, eax	      4822	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79
0x40099c7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4822	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79
0x40099ce	          0x895004	                mov dword [rax + 4], edx	      4822	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79
0x40099d1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x40099d8	          0x4889c7	                            mov rdi, rax	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x40099db	      0xe800000000	                          call 0x40099e0	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x40099e0	            0x89c2	                            mov edx, eax	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x40099e2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x40099e9	    0x8990c8020000	            mov dword [rax + 0x2c8], edx	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x40099ef	      0xe96b080000	                           jmp 0x400a25f	      4823	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x40099f4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x40099fb	        0x488b4008	                mov rax, qword [rax + 8]	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x40099ff	      0xbe00000000	                              mov esi, 0	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4009a04	          0x4889c7	                            mov rdi, rax	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4009a07	      0xe800000000	                          call 0x4009a0c	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4009a0c	            0x85c0	                           test eax, eax	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4009a0e	            0x754f	                           jne 0x4009a5f	      4825	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x4009a10	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4827	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x4009a16	      0x2500200000	                         and eax, 0x2000	      4827	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x4009a1b	            0x85c0	                           test eax, eax	      4827	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x4009a1d	     0xf84a8080000	                            je 0x400a2cb	      4827	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x4009a23	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4829	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81
0x4009a2a	          0x8b4004	                mov eax, dword [rax + 4]	      4829	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81
0x4009a2d	          0x80cc20	                             or ah, 0x20	      4829	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81
0x4009a30	            0x89c2	                            mov edx, eax	      4829	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81
0x4009a32	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4829	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81
0x4009a39	          0x895004	                mov dword [rax + 4], edx	      4829	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81
0x4009a3c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4009a43	          0x4889c7	                            mov rdi, rax	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4009a46	      0xe800000000	                          call 0x4009a4b	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4009a4b	            0x89c2	                            mov edx, eax	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4009a4d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4009a54	    0x8990cc020000	            mov dword [rax + 0x2cc], edx	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4009a5a	      0xe900080000	                           jmp 0x400a25f	      4830	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x4009a5f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4009a66	        0x488b4008	                mov rax, qword [rax + 8]	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4009a6a	      0xbe00000000	                              mov esi, 0	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4009a6f	          0x4889c7	                            mov rdi, rax	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4009a72	      0xe800000000	                          call 0x4009a77	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4009a77	            0x85c0	                           test eax, eax	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4009a79	            0x7551	                           jne 0x4009acc	      4832	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x4009a7b	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4834	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x4009a81	      0x2500400000	                         and eax, 0x4000	      4834	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x4009a86	            0x85c0	                           test eax, eax	      4834	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x4009a88	     0xf8440080000	                            je 0x400a2ce	      4834	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x4009a8e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4836	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83
0x4009a95	          0x8b4004	                mov eax, dword [rax + 4]	      4836	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83
0x4009a98	          0x80cc40	                             or ah, 0x40	      4836	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83
0x4009a9b	            0x89c2	                            mov edx, eax	      4836	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83
0x4009a9d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4836	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83
0x4009aa4	          0x895004	                mov dword [rax + 4], edx	      4836	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83
0x4009aa7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4009aae	          0x4889c7	                            mov rdi, rax	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4009ab1	      0xe800000000	                          call 0x4009ab6	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4009ab6	          0x4889c2	                            mov rdx, rax	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4009ab9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4009ac0	    0x488990f00200	            mov qword [rax + 0x2f0], rdx	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4009ac7	      0xe993070000	                           jmp 0x400a25f	      4837	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x4009acc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x4009ad3	        0x488b4008	                mov rax, qword [rax + 8]	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x4009ad7	      0xbe00000000	                              mov esi, 0	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x4009adc	          0x4889c7	                            mov rdi, rax	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x4009adf	      0xe800000000	                          call 0x4009ae4	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x4009ae4	            0x85c0	                           test eax, eax	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x4009ae6	     0xf85c9010000	                           jne 0x4009cb5	      4840	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x4009aec	    0xc78508ffffff	               mov dword [rbp - 0xf8], 0	      4842	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009af6	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4846	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x4009afc	      0x2500800000	                         and eax, 0x8000	      4846	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x4009b01	            0x85c0	                           test eax, eax	      4846	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x4009b03	     0xf84c8070000	                            je 0x400a2d1	      4846	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x4009b09	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b11	            0x741e	                            je 0x4009b31	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b13	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b1a	            0x8b00	                    mov eax, dword [rax]	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b1c	          0x83f805	                              cmp eax, 5	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b1f	            0x7510	                           jne 0x4009b31	      4849	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b21	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4850	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b28	        0x488b4008	                mov rax, qword [rax + 8]	      4850	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b2c	          0x4885c0	                           test rax, rax	      4850	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b2f	            0x7521	                           jne 0x4009b52	      4850	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b31	      0xbf00000000	                              mov edi, 0	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x4009b36	      0xe800000000	                          call 0x4009b3b	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x4009b3b	      0xbe00000000	                              mov esi, 0	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x4009b40	          0x4889c7	                            mov rdi, rax	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x4009b43	      0xe800000000	                          call 0x4009b48	      4852	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x4009b48	      0xb800000000	                              mov eax, 0	      4853	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b4d	      0xe9d6070000	                           jmp 0x400a328	      4853	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x4009b52	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4856	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009b59	        0x488b4008	                mov rax, qword [rax + 8]	      4856	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009b5d	          0x488b00	                    mov rax, qword [rax]	      4856	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009b60	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4856	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009b67	      0xe9bb000000	                           jmp 0x4009c27	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009b6c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4862	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x4009b73	        0x4883c010	                           add rax, 0x10	      4862	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x4009b77	          0x4889c7	                            mov rdi, rax	      4862	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x4009b7a	      0xe800000000	                          call 0x4009b7f	      4862	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x4009b7f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4862	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x4009b86	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      4863	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x4009b8e	            0x750a	                           jne 0x4009b9a	      4863	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x4009b90	      0xb800000000	                              mov eax, 0	      4864	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x4009b95	      0xe98e070000	                           jmp 0x400a328	      4864	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x4009b9a	    0x8b0500000000	            mov eax, dword [0x04009ba0] 	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009ba0	            0x85c0	                           test eax, eax	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009ba2	            0x7407	                            je 0x4009bab	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009ba4	      0xba00000000	                              mov edx, 0	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009ba9	            0xeb05	                           jmp 0x4009bb0	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009bab	      0xba00000000	                              mov edx, 0	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009bb0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009bb7	          0x4889c7	                            mov rdi, rax	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009bba	            0xffd2	                                call rdx	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009bbc	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4866	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x4009bc3	    0x4881bd58ffff	cmp qword [rbp - 0xa8], 0xffffffffffffd499	      4867	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x4009bce	            0x750a	                           jne 0x4009bda	      4867	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x4009bd0	      0xb800000000	                              mov eax, 0	      4868	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x4009bd5	      0xe94e070000	                           jmp 0x400a328	      4868	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x4009bda	    0x8b0500000000	            mov eax, dword [0x04009be0] 	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009be0	            0x85c0	                           test eax, eax	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009be2	            0x7407	                            je 0x4009beb	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009be4	      0xba00000000	                              mov edx, 0	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009be9	            0xeb05	                           jmp 0x4009bf0	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009beb	      0xba00000000	                              mov edx, 0	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009bf0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009bf7	          0x4889c7	                            mov rdi, rax	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009bfa	            0xffd2	                                call rdx	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009bfc	          0x4889c2	                            mov rdx, rax	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009bff	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009c05	            0x4898	                                    cdqe	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009c07	    0x488994c560ff	     mov qword [rbp + rax*8 - 0xa0], rdx	      4870	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x4009c0f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c16	          0x488b00	                    mov rax, qword [rax]	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c19	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c20	    0x838508ffffff	               add dword [rbp - 0xf8], 1	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c27	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c2f	            0x740d	                            je 0x4009c3e	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c31	    0x83bd08ffffff	            cmp dword [rbp - 0xf8], 0xf 	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c38	     0xf8e2effffff	                           jle 0x4009b6c	      4857	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x4009c3e	    0x83bd08ffffff	           cmp dword [rbp - 0xf8], 0x10 	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4009c45	            0x750a	                           jne 0x4009c51	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4009c47	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4009c4f	            0x7421	                            je 0x4009c72	      4873	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4009c51	      0xbf00000000	                              mov edi, 0	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x4009c56	      0xe800000000	                          call 0x4009c5b	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x4009c5b	      0xbe00000000	                              mov esi, 0	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x4009c60	          0x4889c7	                            mov rdi, rax	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x4009c63	      0xe800000000	                          call 0x4009c68	      4875	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x4009c68	      0xb800000000	                              mov eax, 0	      4876	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4009c6d	      0xe9b6060000	                           jmp 0x400a328	      4876	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x4009c72	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4879	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009c79	          0x8b4004	                mov eax, dword [rax + 4]	      4879	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009c7c	          0x80cc80	                             or ah, 0x80	      4879	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009c7f	            0x89c2	                            mov edx, eax	      4879	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009c81	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4879	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009c88	          0x895004	                mov dword [rax + 4], edx	      4879	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85
0x4009c8b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009c92	    0x488d88f80200	                  lea rcx, [rax + 0x2f8]	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009c99	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009ca0	      0xba80000000	                           mov edx, 0x80	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009ca5	          0x4889c6	                            mov rsi, rax	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009ca8	          0x4889cf	                            mov rdi, rcx	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009cab	      0xe800000000	                          call 0x4009cb0	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009cb0	      0xe9aa050000	                           jmp 0x400a25f	      4880	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x4009cb5	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4009cbc	        0x488b4008	                mov rax, qword [rax + 8]	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4009cc0	      0xbe00000000	                              mov esi, 0	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4009cc5	          0x4889c7	                            mov rdi, rax	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4009cc8	      0xe800000000	                          call 0x4009ccd	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4009ccd	            0x85c0	                           test eax, eax	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4009ccf	     0xf85a5000000	                           jne 0x4009d7a	      4884	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x4009cd5	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4886	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x4009cdb	          0x83e010	                           and eax, 0x10	      4886	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x4009cde	            0x85c0	                           test eax, eax	      4886	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x4009ce0	     0xf84ee050000	                            je 0x400a2d4	      4886	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x4009ce6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4888	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4009ced	            0x8b00	                    mov eax, dword [rax]	      4888	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4009cef	          0x83f806	                              cmp eax, 6	      4888	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4009cf2	            0x7421	                            je 0x4009d15	      4888	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4009cf4	      0xbf00000000	                              mov edi, 0	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4009cf9	      0xe800000000	                          call 0x4009cfe	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4009cfe	      0xbe00000000	                              mov esi, 0	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4009d03	          0x4889c7	                            mov rdi, rax	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4009d06	      0xe800000000	                          call 0x4009d0b	      4890	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x4009d0b	      0xb800000000	                              mov eax, 0	      4891	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4009d10	      0xe913060000	                           jmp 0x400a328	      4891	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x4009d15	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4893	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d1c	          0x8b4004	                mov eax, dword [rax + 4]	      4893	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d1f	          0x83c810	                            or eax, 0x10	      4893	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d22	            0x89c2	                            mov edx, eax	      4893	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d24	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4893	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d2b	          0x895004	                mov dword [rax + 4], edx	      4893	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d2e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4894	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d35	        0x488b5008	                mov rdx, qword [rax + 8]	      4894	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d39	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4894	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d40	    0x488990600200	            mov qword [rax + 0x260], rdx	      4894	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91
0x4009d47	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4895	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d4e	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4895	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d55	          0x4885c0	                           test rax, rax	      4895	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d58	     0xf8401050000	                            je 0x400a25f	      4895	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d5e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d65	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d6c	          0x8b5004	                mov edx, dword [rax + 4]	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d6f	          0x83c201	                              add edx, 1	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d72	          0x895004	                mov dword [rax + 4], edx	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d75	      0xe9e5040000	                           jmp 0x400a25f	      4896	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x4009d7a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4009d81	        0x488b4008	                mov rax, qword [rax + 8]	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4009d85	      0xbe00000000	                              mov esi, 0	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4009d8a	          0x4889c7	                            mov rdi, rax	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4009d8d	      0xe800000000	                          call 0x4009d92	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4009d92	            0x85c0	                           test eax, eax	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4009d94	     0xf85ae000000	                           jne 0x4009e48	      4898	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x4009d9a	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4900	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x4009da0	          0x83e020	                           and eax, 0x20	      4900	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x4009da3	            0x85c0	                           test eax, eax	      4900	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x4009da5	     0xf842c050000	                            je 0x400a2d7	      4900	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x4009dab	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009db2	    0x488d90680200	                  lea rdx, [rax + 0x268]	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009db9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009dc0	          0x4889d6	                            mov rsi, rdx	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009dc3	          0x4889c7	                            mov rdi, rax	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009dc6	      0xe800000000	                          call 0x4009dcb	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009dcb	          0x4889c2	                            mov rdx, rax	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009dce	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009dd5	    0x488990b00200	            mov qword [rax + 0x2b0], rdx	      4902	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x4009ddc	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009de3	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009dea	          0x4885c0	                           test rax, rax	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009ded	            0x741a	                            je 0x4009e09	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009def	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009df6	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009dfd	          0x4889c7	                            mov rdi, rax	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009e00	      0xe800000000	                          call 0x4009e05	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009e05	            0x85c0	                           test eax, eax	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009e07	            0x7521	                           jne 0x4009e2a	      4903	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x4009e09	      0xbf00000000	                              mov edi, 0	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x4009e0e	      0xe800000000	                          call 0x4009e13	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x4009e13	      0xbe00000000	                              mov esi, 0	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x4009e18	          0x4889c7	                            mov rdi, rax	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x4009e1b	      0xe800000000	                          call 0x4009e20	      4905	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x4009e20	      0xb800000000	                              mov eax, 0	      4906	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97
0x4009e25	      0xe9fe040000	                           jmp 0x400a328	      4906	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_97
0x4009e2a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x4009e31	          0x8b4004	                mov eax, dword [rax + 4]	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x4009e34	          0x83c820	                            or eax, 0x20	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x4009e37	            0x89c2	                            mov edx, eax	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x4009e39	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x4009e40	          0x895004	                mov dword [rax + 4], edx	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x4009e43	      0xe917040000	                           jmp 0x400a25f	      4908	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95
0x4009e48	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x4009e4f	        0x488b4008	                mov rax, qword [rax + 8]	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x4009e53	      0xbe00000000	                              mov esi, 0	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x4009e58	          0x4889c7	                            mov rdi, rax	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x4009e5b	      0xe800000000	                          call 0x4009e60	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x4009e60	            0x85c0	                           test eax, eax	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x4009e62	            0x754d	                           jne 0x4009eb1	      4910	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x4009e64	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4912	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x4009e6a	      0x2500010000	                          and eax, 0x100	      4912	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x4009e6f	            0x85c0	                           test eax, eax	      4912	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x4009e71	     0xf8463040000	                            je 0x400a2da	      4912	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x4009e77	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4914	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98
0x4009e7e	            0x8b00	                    mov eax, dword [rax]	      4914	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98
0x4009e80	          0x80cc01	                                or ah, 1	      4914	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98
0x4009e83	            0x89c2	                            mov edx, eax	      4914	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98
0x4009e85	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4914	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98
0x4009e8c	            0x8910	                    mov dword [rax], edx	      4914	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98
0x4009e8e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4009e95	          0x4889c7	                            mov rdi, rax	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4009e98	      0xe800000000	                          call 0x4009e9d	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4009e9d	            0x89c2	                            mov edx, eax	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4009e9f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4009ea6	    0x8990f4010000	            mov dword [rax + 0x1f4], edx	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4009eac	      0xe9ae030000	                           jmp 0x400a25f	      4915	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x4009eb1	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4009eb8	        0x488b4008	                mov rax, qword [rax + 8]	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4009ebc	      0xbe00000000	                              mov esi, 0	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4009ec1	          0x4889c7	                            mov rdi, rax	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4009ec4	      0xe800000000	                          call 0x4009ec9	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4009ec9	            0x85c0	                           test eax, eax	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4009ecb	            0x754d	                           jne 0x4009f1a	      4917	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x4009ecd	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4919	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x4009ed3	      0x2500020000	                          and eax, 0x200	      4919	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x4009ed8	            0x85c0	                           test eax, eax	      4919	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x4009eda	     0xf84fd030000	                            je 0x400a2dd	      4919	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x4009ee0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4921	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100
0x4009ee7	            0x8b00	                    mov eax, dword [rax]	      4921	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100
0x4009ee9	          0x80cc02	                                or ah, 2	      4921	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100
0x4009eec	            0x89c2	                            mov edx, eax	      4921	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100
0x4009eee	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4921	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100
0x4009ef5	            0x8910	                    mov dword [rax], edx	      4921	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100
0x4009ef7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4009efe	          0x4889c7	                            mov rdi, rax	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4009f01	      0xe800000000	                          call 0x4009f06	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4009f06	            0x89c2	                            mov edx, eax	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4009f08	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4009f0f	    0x8990f8010000	            mov dword [rax + 0x1f8], edx	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4009f15	      0xe945030000	                           jmp 0x400a25f	      4922	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x4009f1a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4009f21	        0x488b4008	                mov rax, qword [rax + 8]	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4009f25	      0xbe00000000	                              mov esi, 0	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4009f2a	          0x4889c7	                            mov rdi, rax	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4009f2d	      0xe800000000	                          call 0x4009f32	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4009f32	            0x85c0	                           test eax, eax	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4009f34	            0x754d	                           jne 0x4009f83	      4924	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x4009f36	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4926	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x4009f3c	      0x2500040000	                          and eax, 0x400	      4926	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x4009f41	            0x85c0	                           test eax, eax	      4926	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x4009f43	     0xf8497030000	                            je 0x400a2e0	      4926	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x4009f49	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4928	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102
0x4009f50	            0x8b00	                    mov eax, dword [rax]	      4928	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102
0x4009f52	          0x80cc04	                                or ah, 4	      4928	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102
0x4009f55	            0x89c2	                            mov edx, eax	      4928	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102
0x4009f57	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4928	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102
0x4009f5e	            0x8910	                    mov dword [rax], edx	      4928	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102
0x4009f60	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4009f67	          0x4889c7	                            mov rdi, rax	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4009f6a	      0xe800000000	                          call 0x4009f6f	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4009f6f	            0x89c2	                            mov edx, eax	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4009f71	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4009f78	    0x8990fc010000	            mov dword [rax + 0x1fc], edx	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4009f7e	      0xe9dc020000	                           jmp 0x400a25f	      4929	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x4009f83	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4009f8a	        0x488b4008	                mov rax, qword [rax + 8]	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4009f8e	      0xbe00000000	                              mov esi, 0	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4009f93	          0x4889c7	                            mov rdi, rax	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4009f96	      0xe800000000	                          call 0x4009f9b	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4009f9b	            0x85c0	                           test eax, eax	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4009f9d	            0x754d	                           jne 0x4009fec	      4931	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x4009f9f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4933	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x4009fa5	      0x2500080000	                          and eax, 0x800	      4933	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x4009faa	            0x85c0	                           test eax, eax	      4933	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x4009fac	     0xf8431030000	                            je 0x400a2e3	      4933	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x4009fb2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4935	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104
0x4009fb9	            0x8b00	                    mov eax, dword [rax]	      4935	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104
0x4009fbb	          0x80cc08	                                or ah, 8	      4935	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104
0x4009fbe	            0x89c2	                            mov edx, eax	      4935	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104
0x4009fc0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4935	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104
0x4009fc7	            0x8910	                    mov dword [rax], edx	      4935	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104
0x4009fc9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4009fd0	          0x4889c7	                            mov rdi, rax	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4009fd3	      0xe800000000	                          call 0x4009fd8	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4009fd8	            0x89c2	                            mov edx, eax	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4009fda	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4009fe1	    0x899000020000	            mov dword [rax + 0x200], edx	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4009fe7	      0xe973020000	                           jmp 0x400a25f	      4936	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x4009fec	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4009ff3	        0x488b4008	                mov rax, qword [rax + 8]	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4009ff7	      0xbe00000000	                              mov esi, 0	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4009ffc	          0x4889c7	                            mov rdi, rax	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x4009fff	      0xe800000000	                          call 0x400a004	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x400a004	            0x85c0	                           test eax, eax	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x400a006	     0xf85ca000000	                           jne 0x400a0d6	      4938	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x400a00c	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4940	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x400a012	      0x2500100000	                         and eax, 0x1000	      4940	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x400a017	            0x85c0	                           test eax, eax	      4940	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x400a019	     0xf84c7020000	                            je 0x400a2e6	      4940	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x400a01f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4942	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106
0x400a026	            0x8b00	                    mov eax, dword [rax]	      4942	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106
0x400a028	          0x80cc10	                             or ah, 0x10	      4942	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106
0x400a02b	            0x89c2	                            mov edx, eax	      4942	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106
0x400a02d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4942	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106
0x400a034	            0x8910	                    mov dword [rax], edx	      4942	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106
0x400a036	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4943	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x400a03d	          0x4889c7	                            mov rdi, rax	      4943	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x400a040	      0xe800000000	                          call 0x400a045	      4943	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x400a045	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4943	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x400a04c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x400a053	      0xbe00000000	                              mov esi, 0	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x400a058	          0x4889c7	                            mov rdi, rax	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x400a05b	      0xe800000000	                          call 0x400a060	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x400a060	            0x85c0	                           test eax, eax	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x400a062	            0x7516	                           jne 0x400a07a	      4944	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0x400a064	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4945	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0x400a06b	    0xc78008020000	              mov dword [rax + 0x208], 2	      4945	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0x400a075	      0xe9e5010000	                           jmp 0x400a25f	      4945	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0x400a07a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x400a081	      0xbe00000000	                              mov esi, 0	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x400a086	          0x4889c7	                            mov rdi, rax	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x400a089	      0xe800000000	                          call 0x400a08e	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x400a08e	            0x85c0	                           test eax, eax	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x400a090	            0x7516	                           jne 0x400a0a8	      4946	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0x400a092	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4947	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0x400a099	    0xc78008020000	              mov dword [rax + 0x208], 1	      4947	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0x400a0a3	      0xe9b7010000	                           jmp 0x400a25f	      4947	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0x400a0a8	      0xbf00000000	                              mov edi, 0	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0ad	      0xe800000000	                          call 0x400a0b2	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0b2	          0x4889c1	                            mov rcx, rax	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0b5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0bc	          0x4889c2	                            mov rdx, rax	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0bf	      0xbe00000000	                              mov esi, 0	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0c4	          0x4889cf	                            mov rdi, rcx	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0c7	      0xe800000000	                          call 0x400a0cc	      4950	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0x400a0cc	      0xb800000000	                              mov eax, 0	      4951	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40
0x400a0d1	      0xe952020000	                           jmp 0x400a328	      4951	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40
0x400a0d6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x400a0dd	        0x488b4008	                mov rax, qword [rax + 8]	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x400a0e1	      0xbe00000000	                              mov esi, 0	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x400a0e6	          0x4889c7	                            mov rdi, rax	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x400a0e9	      0xe800000000	                          call 0x400a0ee	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x400a0ee	            0x85c0	                           test eax, eax	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x400a0f0	            0x754d	                           jne 0x400a13f	      4954	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0x400a0f2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4956	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x400a0f8	      0x2500200000	                         and eax, 0x2000	      4956	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x400a0fd	            0x85c0	                           test eax, eax	      4956	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x400a0ff	     0xf84e4010000	                            je 0x400a2e9	      4956	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x400a105	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4958	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110
0x400a10c	            0x8b00	                    mov eax, dword [rax]	      4958	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110
0x400a10e	          0x80cc20	                             or ah, 0x20	      4958	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110
0x400a111	            0x89c2	                            mov edx, eax	      4958	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110
0x400a113	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4958	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110
0x400a11a	            0x8910	                    mov dword [rax], edx	      4958	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110
0x400a11c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x400a123	          0x4889c7	                            mov rdi, rax	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x400a126	      0xe800000000	                          call 0x400a12b	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x400a12b	            0x89c2	                            mov edx, eax	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x400a12d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x400a134	    0x89900c020000	            mov dword [rax + 0x20c], edx	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x400a13a	      0xe920010000	                           jmp 0x400a25f	      4959	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0x400a13f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x400a146	        0x488b4008	                mov rax, qword [rax + 8]	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x400a14a	      0xbe00000000	                              mov esi, 0	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x400a14f	          0x4889c7	                            mov rdi, rax	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x400a152	      0xe800000000	                          call 0x400a157	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x400a157	            0x85c0	                           test eax, eax	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x400a159	     0xf8593000000	                           jne 0x400a1f2	      4961	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0x400a15f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x400a165	      0x2500400000	                         and eax, 0x4000	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x400a16a	            0x85c0	                           test eax, eax	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x400a16c	     0xf847a010000	                            je 0x400a2ec	      4963	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x400a172	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4965	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a179	            0x8b00	                    mov eax, dword [rax]	      4965	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a17b	          0x80cc40	                             or ah, 0x40	      4965	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a17e	            0x89c2	                            mov edx, eax	      4965	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a180	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4965	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a187	            0x8910	                    mov dword [rax], edx	      4965	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a189	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4967	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a190	    0x488d90100200	                  lea rdx, [rax + 0x210]	      4967	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112
0x400a197	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x400a19e	          0x4889d6	                            mov rsi, rdx	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x400a1a1	          0x4889c7	                            mov rdi, rax	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x400a1a4	      0xe800000000	                          call 0x400a1a9	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x400a1a9	          0x4889c2	                            mov rdx, rax	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x400a1ac	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x400a1b3	    0x488990580200	            mov qword [rax + 0x258], rdx	      4966	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0x400a1ba	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4968	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x400a1c1	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      4968	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x400a1c8	          0x4885c0	                           test rax, rax	      4968	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x400a1cb	     0xf858e000000	                           jne 0x400a25f	      4968	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x400a1d1	      0xbf00000000	                              mov edi, 0	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x400a1d6	      0xe800000000	                          call 0x400a1db	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x400a1db	      0xbe00000000	                              mov esi, 0	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x400a1e0	          0x4889c7	                            mov rdi, rax	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x400a1e3	      0xe800000000	                          call 0x400a1e8	      4970	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0x400a1e8	      0xb800000000	                              mov eax, 0	      4971	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x400a1ed	      0xe936010000	                           jmp 0x400a328	      4971	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0x400a1f2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x400a1f9	        0x488b4008	                mov rax, qword [rax + 8]	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x400a1fd	      0xbe00000000	                              mov esi, 0	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x400a202	          0x4889c7	                            mov rdi, rax	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x400a205	      0xe800000000	                          call 0x400a20a	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x400a20a	            0x85c0	                           test eax, eax	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x400a20c	     0xf85dd000000	                           jne 0x400a2ef	      4974	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0x400a212	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x400a218	      0x2500000010	                     and eax, 0x10000000	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x400a21d	            0x85c0	                           test eax, eax	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x400a21f	     0xf84cd000000	                            je 0x400a2f2	      4976	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x400a225	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4978	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115
0x400a22c	            0x8b00	                    mov eax, dword [rax]	      4978	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115
0x400a22e	       0xd00000010	                      or eax, 0x10000000	      4978	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115
0x400a233	            0x89c2	                            mov edx, eax	      4978	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115
0x400a235	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4978	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115
0x400a23c	            0x8910	                    mov dword [rax], edx	      4978	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115
0x400a23e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x400a245	          0x4889c7	                            mov rdi, rax	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x400a248	      0xe800000000	                          call 0x400a24d	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x400a24d	            0x89c2	                            mov edx, eax	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x400a24f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x400a256	    0x899004020000	            mov dword [rax + 0x204], edx	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x400a25c	            0xeb01	                           jmp 0x400a25f	      4979	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0x400a25e	              0x90	                                     nop	      4620	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32
0x400a25f	    0x83ad00ffffff	              sub dword [rbp - 0x100], 1	      4983	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_44
0x400a266	    0x48838510ffff	            add qword [rbp - 0xf0], 0x10	      4514	channel.c	FUNCTION_107	FOR_1
0x400a26e	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4514	channel.c	FUNCTION_107	FOR_1
0x400a275	     0xf8f44e5ffff	                            jg 0x40087bf	      4514	channel.c	FUNCTION_107	FOR_1
0x400a27b	            0xeb76	                           jmp 0x400a2f3	      4514	channel.c	FUNCTION_107	FOR_1
0x400a27d	              0x90	                                     nop	      4522	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x400a27e	            0xeb73	                           jmp 0x400a2f3	      4522	channel.c	FUNCTION_107	FOR_1	IF_4	IF_5	IF_6
0x400a280	              0x90	                                     nop	      4529	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x400a281	            0xeb70	                           jmp 0x400a2f3	      4529	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x400a283	              0x90	                                     nop	      4537	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x400a284	            0xeb6d	                           jmp 0x400a2f3	      4537	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x400a286	              0x90	                                     nop	      4545	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x400a287	            0xeb6a	                           jmp 0x400a2f3	      4545	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x400a289	              0x90	                                     nop	      4555	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x400a28a	            0xeb67	                           jmp 0x400a2f3	      4555	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x400a28c	              0x90	                                     nop	      4566	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x400a28d	            0xeb64	                           jmp 0x400a2f3	      4566	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x400a28f	              0x90	                                     nop	      4574	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x400a290	            0xeb61	                           jmp 0x400a2f3	      4574	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x400a292	              0x90	                                     nop	      4584	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x400a293	            0xeb5e	                           jmp 0x400a2f3	      4584	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x400a295	              0x90	                                     nop	      4604	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x400a296	            0xeb5b	                           jmp 0x400a2f3	      4604	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x400a298	              0x90	                                     nop	      4614	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x400a299	            0xeb58	                           jmp 0x400a2f3	      4614	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x400a29b	              0x90	                                     nop	      4624	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x400a29c	            0xeb55	                           jmp 0x400a2f3	      4624	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x400a29e	              0x90	                                     nop	      4645	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x400a29f	            0xeb52	                           jmp 0x400a2f3	      4645	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x400a2a1	              0x90	                                     nop	      4657	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x400a2a2	            0xeb4f	                           jmp 0x400a2f3	      4657	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x400a2a4	              0x90	                                     nop	      4669	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x400a2a5	            0xeb4c	                           jmp 0x400a2f3	      4669	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x400a2a7	              0x90	                                     nop	      4681	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x400a2a8	            0xeb49	                           jmp 0x400a2f3	      4681	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x400a2aa	              0x90	                                     nop	      4693	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x400a2ab	            0xeb46	                           jmp 0x400a2f3	      4693	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x400a2ad	              0x90	                                     nop	      4719	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x400a2ae	            0xeb43	                           jmp 0x400a2f3	      4719	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x400a2b0	              0x90	                                     nop	      4732	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x400a2b1	            0xeb40	                           jmp 0x400a2f3	      4732	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x400a2b3	              0x90	                                     nop	      4744	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x400a2b4	            0xeb3d	                           jmp 0x400a2f3	      4744	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x400a2b6	              0x90	                                     nop	      4759	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x400a2b7	            0xeb3a	                           jmp 0x400a2f3	      4759	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x400a2b9	              0x90	                                     nop	      4781	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x400a2ba	            0xeb37	                           jmp 0x400a2f3	      4781	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x400a2bc	              0x90	                                     nop	      4793	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x400a2bd	            0xeb34	                           jmp 0x400a2f3	      4793	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x400a2bf	              0x90	                                     nop	      4800	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x400a2c0	            0xeb31	                           jmp 0x400a2f3	      4800	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x400a2c2	              0x90	                                     nop	      4807	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x400a2c3	            0xeb2e	                           jmp 0x400a2f3	      4807	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x400a2c5	              0x90	                                     nop	      4814	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x400a2c6	            0xeb2b	                           jmp 0x400a2f3	      4814	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x400a2c8	              0x90	                                     nop	      4821	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x400a2c9	            0xeb28	                           jmp 0x400a2f3	      4821	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x400a2cb	              0x90	                                     nop	      4828	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x400a2cc	            0xeb25	                           jmp 0x400a2f3	      4828	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x400a2ce	              0x90	                                     nop	      4835	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x400a2cf	            0xeb22	                           jmp 0x400a2f3	      4835	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x400a2d1	              0x90	                                     nop	      4847	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x400a2d2	            0xeb1f	                           jmp 0x400a2f3	      4847	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x400a2d4	              0x90	                                     nop	      4887	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x400a2d5	            0xeb1c	                           jmp 0x400a2f3	      4887	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x400a2d7	              0x90	                                     nop	      4901	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x400a2d8	            0xeb19	                           jmp 0x400a2f3	      4901	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x400a2da	              0x90	                                     nop	      4913	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x400a2db	            0xeb16	                           jmp 0x400a2f3	      4913	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x400a2dd	              0x90	                                     nop	      4920	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x400a2de	            0xeb13	                           jmp 0x400a2f3	      4920	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x400a2e0	              0x90	                                     nop	      4927	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x400a2e1	            0xeb10	                           jmp 0x400a2f3	      4927	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x400a2e3	              0x90	                                     nop	      4934	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x400a2e4	            0xeb0d	                           jmp 0x400a2f3	      4934	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x400a2e6	              0x90	                                     nop	      4941	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x400a2e7	            0xeb0a	                           jmp 0x400a2f3	      4941	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x400a2e9	              0x90	                                     nop	      4957	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x400a2ea	            0xeb07	                           jmp 0x400a2f3	      4957	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0x400a2ec	              0x90	                                     nop	      4964	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x400a2ed	            0xeb04	                           jmp 0x400a2f3	      4964	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0x400a2ef	              0x90	                                     nop	      4982	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_44
0x400a2f0	            0xeb01	                           jmp 0x400a2f3	      4982	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_44
0x400a2f2	              0x90	                                     nop	      4977	channel.c	FUNCTION_107	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0x400a2f3	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4985	channel.c	FUNCTION_107	ELSE_44	IF_117
0x400a2fa	            0x7e27	                           jle 0x400a323	      4985	channel.c	FUNCTION_107	ELSE_44	IF_117
0x400a2fc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x400a303	        0x488b5808	                mov rbx, qword [rax + 8]	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x400a307	      0xbf00000000	                              mov edi, 0	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x400a30c	      0xe800000000	                          call 0x400a311	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x400a311	          0x4889de	                            mov rsi, rbx	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x400a314	          0x4889c7	                            mov rdi, rax	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x400a317	      0xe800000000	                          call 0x400a31c	      4987	channel.c	FUNCTION_107	ELSE_44	IF_117	CALL_153
0x400a31c	      0xb800000000	                              mov eax, 0	      4988	channel.c	FUNCTION_107	ELSE_44	IF_117
0x400a321	            0xeb05	                           jmp 0x400a328	      4988	channel.c	FUNCTION_107	ELSE_44	IF_117
0x400a323	      0xb801000000	                              mov eax, 1	      4991	channel.c	FUNCTION_107
0x400a328	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4992	channel.c	FUNCTION_107
0x400a32c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4992	channel.c	FUNCTION_107
0x400a335	            0x7405	                            je 0x400a33c	      4992	channel.c	FUNCTION_107
0x400a337	      0xe800000000	                          call 0x400a33c	      4992	channel.c	FUNCTION_107
0x400a33c	    0x4881c4100100	                          add rsp, 0x110	      4992	channel.c	FUNCTION_107
0x400a343	              0x5b	                                 pop rbx	      4992	channel.c	FUNCTION_107
0x400a344	            0x415c	                                 pop r12	      4992	channel.c	FUNCTION_107
0x400a346	              0x5d	                                 pop rbp	      4992	channel.c	FUNCTION_107
0x400a347	              0xc3	                                     ret	      4992	channel.c	FUNCTION_107
channel_can_close	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	10
0x40006fb	              0x55	                                push rbp	       352	channel.c	FUNCTION_10
0x40006fc	          0x4889e5	                            mov rbp, rsp	       352	channel.c	FUNCTION_10
0x40006ff	        0x48897df8	                mov qword [rbp - 8], rdi	       352	channel.c	FUNCTION_10
0x4000703	        0x488b45f8	                mov rax, qword [rbp - 8]	       353	channel.c	FUNCTION_10
0x4000707	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	       353	channel.c	FUNCTION_10
0x400070d	            0x85c0	                           test eax, eax	       353	channel.c	FUNCTION_10
0x400070f	           0xf94c0	                                 sete al	       353	channel.c	FUNCTION_10
0x4000712	           0xfb6c0	                           movzx eax, al	       353	channel.c	FUNCTION_10
0x4000715	              0x5d	                                 pop rbp	       354	channel.c	FUNCTION_10
0x4000716	              0xc3	                                     ret	       354	channel.c	FUNCTION_10
free_unused_jobs_contents	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	32
0x400ad5f	              0x55	                                push rbp	      5360	channel.c	FUNCTION_123
0x400ad60	          0x4889e5	                            mov rbp, rsp	      5360	channel.c	FUNCTION_123
0x400ad63	        0x4883ec20	                           sub rsp, 0x20	      5360	channel.c	FUNCTION_123
0x400ad67	          0x897dec	             mov dword [rbp - 0x14], edi	      5360	channel.c	FUNCTION_123
0x400ad6a	          0x8975e8	             mov dword [rbp - 0x18], esi	      5360	channel.c	FUNCTION_123
0x400ad6d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5361	channel.c	FUNCTION_123
0x400ad74	    0x488b05000000	            mov rax, qword [0x0400ad7b] 	      5364	channel.c	FUNCTION_123	FOR_1
0x400ad7b	        0x488945f8	                mov qword [rbp - 8], rax	      5364	channel.c	FUNCTION_123	FOR_1
0x400ad7f	            0xeb3f	                           jmp 0x400adc0	      5364	channel.c	FUNCTION_123	FOR_1
0x400ad81	        0x488b45f8	                mov rax, qword [rbp - 8]	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400ad85	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400ad88	          0x3345ec	             xor eax, dword [rbp - 0x14]	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400ad8b	          0x2345e8	             and eax, dword [rbp - 0x18]	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400ad8e	            0x85c0	                           test eax, eax	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400ad90	            0x7423	                            je 0x400adb5	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400ad92	        0x488b45f8	                mov rax, qword [rbp - 8]	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400ad96	          0x4889c7	                            mov rdi, rax	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400ad99	      0xe822f9ffff	               call sym.job_still_useful	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400ad9e	            0x85c0	                           test eax, eax	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400ada0	            0x7513	                           jne 0x400adb5	      5366	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_1
0x400ada2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x400ada6	          0x4889c7	                            mov rdi, rax	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x400ada9	      0xe8aff6ffff	              call sym.job_free_contents	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x400adae	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      5371	channel.c	FUNCTION_123	FOR_1	IF_1
0x400adb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5364	channel.c	FUNCTION_123	FOR_1
0x400adb9	          0x488b00	                    mov rax, qword [rax]	      5364	channel.c	FUNCTION_123	FOR_1
0x400adbc	        0x488945f8	                mov qword [rbp - 8], rax	      5364	channel.c	FUNCTION_123	FOR_1
0x400adc0	      0x48837df800	                  cmp qword [rbp - 8], 0	      5364	channel.c	FUNCTION_123	FOR_1
0x400adc5	            0x75ba	                           jne 0x400ad81	      5364	channel.c	FUNCTION_123	FOR_1
0x400adc7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5373	channel.c	FUNCTION_123
0x400adca	              0xc9	                                   leave	      5374	channel.c	FUNCTION_123
0x400adcb	              0xc3	                                     ret	      5374	channel.c	FUNCTION_123
job_stop	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,8:IF,7:SWITCH,0	87
0x400bacb	              0x55	                                push rbp	      5797	channel.c	FUNCTION_134
0x400bacc	          0x4889e5	                            mov rbp, rsp	      5797	channel.c	FUNCTION_134
0x400bacf	        0x4883ec30	                           sub rsp, 0x30	      5797	channel.c	FUNCTION_134
0x400bad3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5797	channel.c	FUNCTION_134
0x400bad7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5797	channel.c	FUNCTION_134
0x400badb	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5797	channel.c	FUNCTION_134
0x400badf	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5800	channel.c	FUNCTION_134	IF_1
0x400bae4	            0x740a	                            je 0x400baf0	      5800	channel.c	FUNCTION_134	IF_1
0x400bae6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5801	channel.c	FUNCTION_134	IF_1
0x400baea	        0x488945f8	                mov qword [rbp - 8], rax	      5801	channel.c	FUNCTION_134	IF_1
0x400baee	            0xeb4f	                           jmp 0x400bb3f	      5801	channel.c	FUNCTION_134	IF_1
0x400baf0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400baf4	        0x4883c010	                           add rax, 0x10	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400baf8	            0x8b00	                    mov eax, dword [rax]	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400bafa	            0x85c0	                           test eax, eax	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400bafc	            0x750a	                           jne 0x400bb08	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400bafe	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5803	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400bb06	            0xeb37	                           jmp 0x400bb3f	      5803	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400bb08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400bb0c	        0x4883c010	                           add rax, 0x10	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400bb10	          0x4889c7	                            mov rdi, rax	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400bb13	      0xe800000000	                          call 0x400bb18	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400bb18	        0x488945f8	                mov qword [rbp - 8], rax	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400bb1c	      0x48837df800	                  cmp qword [rbp - 8], 0	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400bb21	            0x751c	                           jne 0x400bb3f	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400bb23	      0xbf00000000	                              mov edi, 0	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400bb28	      0xe800000000	                          call 0x400bb2d	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400bb2d	          0x4889c7	                            mov rdi, rax	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400bb30	      0xe800000000	                          call 0x400bb35	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400bb35	      0xb800000000	                              mov eax, 0	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400bb3a	      0xe9d1000000	                           jmp 0x400bc10	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400bb3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5813	channel.c	FUNCTION_134	IF_4
0x400bb43	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5813	channel.c	FUNCTION_134	IF_4
0x400bb46	            0x85c0	                           test eax, eax	      5813	channel.c	FUNCTION_134	IF_4
0x400bb48	            0x7524	                           jne 0x400bb6e	      5813	channel.c	FUNCTION_134	IF_4
0x400bb4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400bb4e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400bb52	      0xbe00000000	                              mov esi, 0	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400bb57	          0x4889c7	                            mov rdi, rax	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400bb5a	      0xb800000000	                              mov eax, 0	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400bb5f	      0xe800000000	                          call 0x400bb64	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400bb64	      0xb800000000	                              mov eax, 0	      5816	channel.c	FUNCTION_134	IF_4
0x400bb69	      0xe9a2000000	                           jmp 0x400bc10	      5816	channel.c	FUNCTION_134	IF_4
0x400bb6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5818	channel.c	FUNCTION_134	IF_5
0x400bb72	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5818	channel.c	FUNCTION_134	IF_5
0x400bb75	          0x83f802	                              cmp eax, 2	      5818	channel.c	FUNCTION_134	IF_5
0x400bb78	            0x7521	                           jne 0x400bb9b	      5818	channel.c	FUNCTION_134	IF_5
0x400bb7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400bb7e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400bb82	      0xbe00000000	                              mov esi, 0	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400bb87	          0x4889c7	                            mov rdi, rax	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400bb8a	      0xb800000000	                              mov eax, 0	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400bb8f	      0xe800000000	                          call 0x400bb94	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400bb94	      0xb800000000	                              mov eax, 0	      5821	channel.c	FUNCTION_134	IF_5
0x400bb99	            0xeb75	                           jmp 0x400bc10	      5821	channel.c	FUNCTION_134	IF_5
0x400bb9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5823	channel.c	FUNCTION_134	CALL_6
0x400bb9f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5823	channel.c	FUNCTION_134	CALL_6
0x400bba3	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5823	channel.c	FUNCTION_134	CALL_6
0x400bba7	      0xbe00000000	                              mov esi, 0	      5823	channel.c	FUNCTION_134	CALL_6
0x400bbac	          0x4889c7	                            mov rdi, rax	      5823	channel.c	FUNCTION_134	CALL_6
0x400bbaf	      0xb800000000	                              mov eax, 0	      5823	channel.c	FUNCTION_134	CALL_6
0x400bbb4	      0xe800000000	                          call 0x400bbb9	      5823	channel.c	FUNCTION_134	CALL_6
0x400bbb9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400bbbd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400bbc1	          0x4889d6	                            mov rsi, rdx	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400bbc4	          0x4889c7	                            mov rdi, rax	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400bbc7	      0xe800000000	                          call 0x400bbcc	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400bbcc	            0x85c0	                           test eax, eax	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400bbce	            0x7507	                           jne 0x400bbd7	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400bbd0	      0xb800000000	                              mov eax, 0	      5825	channel.c	FUNCTION_134	IF_6
0x400bbd5	            0xeb39	                           jmp 0x400bc10	      5825	channel.c	FUNCTION_134	IF_6
0x400bbd7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbdb	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbdf	          0x4885c0	                           test rax, rax	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbe2	            0x7427	                            je 0x400bc0b	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbe4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbe8	      0xbe00000000	                              mov esi, 0	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbed	          0x4889c7	                            mov rdi, rax	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbf0	      0xe800000000	                          call 0x400bbf5	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbf5	            0x85c0	                           test eax, eax	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbf7	            0x7512	                           jne 0x400bc0b	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400bbf9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5829	channel.c	FUNCTION_134	IF_7
0x400bbfd	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5829	channel.c	FUNCTION_134	IF_7
0x400bc01	    0xc780b0040000	              mov dword [rax + 0x4b0], 1	      5829	channel.c	FUNCTION_134	IF_7
0x400bc0b	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_134
0x400bc10	              0xc9	                                   leave	      5834	channel.c	FUNCTION_134
0x400bc11	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
job_info	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,14:IF,5:SWITCH,0	148
0x400b81d	              0x55	                                push rbp	      5727	channel.c	FUNCTION_132
0x400b81e	          0x4889e5	                            mov rbp, rsp	      5727	channel.c	FUNCTION_132
0x400b821	        0x4883ec30	                           sub rsp, 0x30	      5727	channel.c	FUNCTION_132
0x400b825	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5727	channel.c	FUNCTION_132
0x400b829	        0x488975d0	             mov qword [rbp - 0x30], rsi	      5727	channel.c	FUNCTION_132
0x400b82d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5733	channel.c	FUNCTION_132	CALL_2
0x400b831	          0x4889c7	                            mov rdi, rax	      5733	channel.c	FUNCTION_132	CALL_2
0x400b834	      0xe800000000	                          call 0x400b839	      5733	channel.c	FUNCTION_132	CALL_2
0x400b839	          0x4889c2	                            mov rdx, rax	      5733	channel.c	FUNCTION_132	CALL_2
0x400b83c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5733	channel.c	FUNCTION_132	CALL_2
0x400b840	          0x4889d1	                            mov rcx, rdx	      5733	channel.c	FUNCTION_132	CALL_2
0x400b843	      0xba00000000	                              mov edx, 0	      5733	channel.c	FUNCTION_132	CALL_2
0x400b848	      0xbe00000000	                              mov esi, 0	      5733	channel.c	FUNCTION_132	CALL_2
0x400b84d	          0x4889c7	                            mov rdi, rax	      5733	channel.c	FUNCTION_132	CALL_2
0x400b850	      0xe800000000	                          call 0x400b855	      5733	channel.c	FUNCTION_132	CALL_2
0x400b855	      0xbf00000000	                              mov edi, 0	      5735	channel.c	FUNCTION_132	CALL_3
0x400b85a	      0xe800000000	                          call 0x400b85f	      5735	channel.c	FUNCTION_132	CALL_3
0x400b85f	        0x488945e8	             mov qword [rbp - 0x18], rax	      5735	channel.c	FUNCTION_132	CALL_3
0x400b863	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5736	channel.c	FUNCTION_132	IF_1
0x400b868	     0xf84e0010000	                            je 0x400ba4e	      5736	channel.c	FUNCTION_132	IF_1
0x400b86e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5738	channel.c	FUNCTION_132
0x400b872	        0xc6400400	                   mov byte [rax + 4], 0	      5738	channel.c	FUNCTION_132
0x400b876	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5739	channel.c	FUNCTION_132
0x400b87a	    0xc7000a000000	                    mov dword [rax], 0xa	      5739	channel.c	FUNCTION_132
0x400b880	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5740	channel.c	FUNCTION_132
0x400b884	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      5740	channel.c	FUNCTION_132
0x400b888	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5740	channel.c	FUNCTION_132
0x400b88c	        0x48895008	                mov qword [rax + 8], rdx	      5740	channel.c	FUNCTION_132
0x400b890	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5741	channel.c	FUNCTION_132	IF_2
0x400b894	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5741	channel.c	FUNCTION_132	IF_2
0x400b898	          0x4885c0	                           test rax, rax	      5741	channel.c	FUNCTION_132	IF_2
0x400b89b	            0x7417	                            je 0x400b8b4	      5741	channel.c	FUNCTION_132	IF_2
0x400b89d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5742	channel.c	FUNCTION_132	IF_2
0x400b8a1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5742	channel.c	FUNCTION_132	IF_2
0x400b8a5	    0x8b90b4040000	           mov edx, dword [rax + 0x4b4] 	      5742	channel.c	FUNCTION_132	IF_2
0x400b8ab	          0x83c201	                              add edx, 1	      5742	channel.c	FUNCTION_132	IF_2
0x400b8ae	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      5742	channel.c	FUNCTION_132	IF_2
0x400b8b4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400b8b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400b8bc	          0x4889d6	                            mov rsi, rdx	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400b8bf	          0x4889c7	                            mov rdi, rax	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400b8c2	      0xe800000000	                          call 0x400b8c7	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400b8c7	            0x85c0	                           test eax, eax	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400b8c9	            0x750c	                           jne 0x400b8d7	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400b8cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5744	channel.c	FUNCTION_132	CALL_5
0x400b8cf	          0x4889c7	                            mov rdi, rax	      5744	channel.c	FUNCTION_132	CALL_5
0x400b8d2	      0xe800000000	                          call 0x400b8d7	      5744	channel.c	FUNCTION_132	CALL_5
0x400b8d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5747	channel.c	FUNCTION_132
0x400b8db	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5747	channel.c	FUNCTION_132
0x400b8de	            0x4898	                                    cdqe	      5747	channel.c	FUNCTION_132
0x400b8e0	        0x488945f0	             mov qword [rbp - 0x10], rax	      5747	channel.c	FUNCTION_132
0x400b8e4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5751	channel.c	FUNCTION_132	CALL_6
0x400b8e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5751	channel.c	FUNCTION_132	CALL_6
0x400b8ec	      0xb900000000	                              mov ecx, 0	      5751	channel.c	FUNCTION_132	CALL_6
0x400b8f1	      0xbe00000000	                              mov esi, 0	      5751	channel.c	FUNCTION_132	CALL_6
0x400b8f6	          0x4889c7	                            mov rdi, rax	      5751	channel.c	FUNCTION_132	CALL_6
0x400b8f9	      0xe800000000	                          call 0x400b8fe	      5751	channel.c	FUNCTION_132	CALL_6
0x400b8fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5753	channel.c	FUNCTION_132
0x400b902	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5753	channel.c	FUNCTION_132
0x400b906	          0x4885c0	                           test rax, rax	      5752	channel.c	FUNCTION_132	CALL_7
0x400b909	            0x740a	                            je 0x400b915	      5752	channel.c	FUNCTION_132	CALL_7
0x400b90b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5752	channel.c	FUNCTION_132	CALL_7
0x400b90f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5752	channel.c	FUNCTION_132	CALL_7
0x400b913	            0xeb05	                           jmp 0x400b91a	      5752	channel.c	FUNCTION_132	CALL_7
0x400b915	      0xb800000000	                              mov eax, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x400b91a	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	      5752	channel.c	FUNCTION_132	CALL_7
0x400b91e	          0x4889c1	                            mov rcx, rax	      5752	channel.c	FUNCTION_132	CALL_7
0x400b921	      0xba00000000	                              mov edx, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x400b926	      0xbe00000000	                              mov esi, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x400b92b	      0xe800000000	                          call 0x400b930	      5752	channel.c	FUNCTION_132	CALL_7
0x400b930	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5755	channel.c	FUNCTION_132
0x400b934	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5755	channel.c	FUNCTION_132
0x400b938	          0x4885c0	                           test rax, rax	      5754	channel.c	FUNCTION_132	CALL_8
0x400b93b	            0x740a	                            je 0x400b947	      5754	channel.c	FUNCTION_132	CALL_8
0x400b93d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5754	channel.c	FUNCTION_132	CALL_8
0x400b941	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5754	channel.c	FUNCTION_132	CALL_8
0x400b945	            0xeb05	                           jmp 0x400b94c	      5754	channel.c	FUNCTION_132	CALL_8
0x400b947	      0xb800000000	                              mov eax, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x400b94c	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	      5754	channel.c	FUNCTION_132	CALL_8
0x400b950	          0x4889c1	                            mov rcx, rax	      5754	channel.c	FUNCTION_132	CALL_8
0x400b953	      0xba00000000	                              mov edx, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x400b958	      0xbe00000000	                              mov esi, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x400b95d	      0xe800000000	                          call 0x400b962	      5754	channel.c	FUNCTION_132	CALL_8
0x400b962	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5757	channel.c	FUNCTION_132	CALL_9
0x400b966	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5757	channel.c	FUNCTION_132	CALL_9
0x400b969	          0x4863d0	                         movsxd rdx, eax	      5757	channel.c	FUNCTION_132	CALL_9
0x400b96c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5757	channel.c	FUNCTION_132	CALL_9
0x400b970	      0xb900000000	                              mov ecx, 0	      5757	channel.c	FUNCTION_132	CALL_9
0x400b975	      0xbe00000000	                              mov esi, 0	      5757	channel.c	FUNCTION_132	CALL_9
0x400b97a	          0x4889c7	                            mov rdi, rax	      5757	channel.c	FUNCTION_132	CALL_9
0x400b97d	      0xe800000000	                          call 0x400b982	      5757	channel.c	FUNCTION_132	CALL_9
0x400b982	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5758	channel.c	FUNCTION_132	CALL_10
0x400b986	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5758	channel.c	FUNCTION_132	CALL_10
0x400b98a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5758	channel.c	FUNCTION_132	CALL_10
0x400b98e	          0x4889d1	                            mov rcx, rdx	      5758	channel.c	FUNCTION_132	CALL_10
0x400b991	      0xba00000000	                              mov edx, 0	      5758	channel.c	FUNCTION_132	CALL_10
0x400b996	      0xbe00000000	                              mov esi, 0	      5758	channel.c	FUNCTION_132	CALL_10
0x400b99b	          0x4889c7	                            mov rdi, rax	      5758	channel.c	FUNCTION_132	CALL_10
0x400b99e	      0xe800000000	                          call 0x400b9a3	      5758	channel.c	FUNCTION_132	CALL_10
0x400b9a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9a7	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9af	          0x4889d1	                            mov rcx, rdx	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9b2	      0xba00000000	                              mov edx, 0	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9b7	      0xbe00000000	                              mov esi, 0	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9bc	          0x4889c7	                            mov rdi, rax	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9bf	      0xe800000000	                          call 0x400b9c4	      5759	channel.c	FUNCTION_132	CALL_11
0x400b9c4	      0xe800000000	                          call 0x400b9c9	      5761	channel.c	FUNCTION_132	CALL_12
0x400b9c9	        0x488945f8	                mov qword [rbp - 8], rax	      5761	channel.c	FUNCTION_132	CALL_12
0x400b9cd	      0x48837df800	                  cmp qword [rbp - 8], 0	      5762	channel.c	FUNCTION_132	IF_4
0x400b9d2	            0x747b	                            je 0x400ba4f	      5762	channel.c	FUNCTION_132	IF_4
0x400b9d4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400b9d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400b9dc	      0xbe00000000	                              mov esi, 0	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400b9e1	          0x4889c7	                            mov rdi, rax	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400b9e4	      0xe800000000	                          call 0x400b9e9	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400b9e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x400b9ed	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x400b9f1	          0x4885c0	                           test rax, rax	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x400b9f4	            0x7459	                            je 0x400ba4f	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x400b9f6	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400b9fd	            0xeb30	                           jmp 0x400ba2f	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400b9ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba03	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba07	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba0a	          0x4863d2	                         movsxd rdx, edx	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba0d	        0x48c1e203	                              shl rdx, 3	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba11	          0x4801d0	                            add rax, rdx	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba14	          0x488b08	                    mov rcx, qword [rax]	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba17	        0x488b45f8	                mov rax, qword [rbp - 8]	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba1b	      0xbaffffffff	                     mov edx, 0xffffffff	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba20	          0x4889ce	                            mov rsi, rcx	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba23	          0x4889c7	                            mov rdi, rax	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba26	      0xe800000000	                          call 0x400ba2b	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba2b	        0x8345e401	               add dword [rbp - 0x1c], 1	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba33	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba37	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba3a	          0x4863d2	                         movsxd rdx, edx	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba3d	        0x48c1e203	                              shl rdx, 3	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba41	          0x4801d0	                            add rax, rdx	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba44	          0x488b00	                    mov rax, qword [rax]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba47	          0x4885c0	                           test rax, rax	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba4a	            0x75b3	                           jne 0x400b9ff	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba4c	            0xeb01	                           jmp 0x400ba4f	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400ba4e	              0x90	                                     nop	      5737	channel.c	FUNCTION_132	IF_1
0x400ba4f	              0xc9	                                   leave	      5769	channel.c	FUNCTION_132
0x400ba50	              0xc3	                                     ret	      5769	channel.c	FUNCTION_132
has_pending_job	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	34
0x400b05e	              0x55	                                push rbp	      5473	channel.c	FUNCTION_128
0x400b05f	          0x4889e5	                            mov rbp, rsp	      5473	channel.c	FUNCTION_128
0x400b062	        0x4883ec10	                           sub rsp, 0x10	      5473	channel.c	FUNCTION_128
0x400b066	    0x488b05000000	            mov rax, qword [0x0400b06d] 	      5476	channel.c	FUNCTION_128	FOR_1
0x400b06d	        0x488945f8	                mov qword [rbp - 8], rax	      5476	channel.c	FUNCTION_128	FOR_1
0x400b071	            0xeb4a	                           jmp 0x400b0bd	      5476	channel.c	FUNCTION_128	FOR_1
0x400b073	        0x488b45f8	                mov rax, qword [rbp - 8]	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b077	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b07a	          0x83f801	                              cmp eax, 1	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b07d	            0x7510	                           jne 0x400b08f	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b07f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b083	          0x4889c7	                            mov rdi, rax	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b086	      0xe8bff5ffff	       call sym.job_channel_still_useful	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b08b	            0x85c0	                           test eax, eax	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b08d	            0x741c	                            je 0x400b0ab	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400b08f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x400b093	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x400b096	          0x83f803	                              cmp eax, 3	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x400b099	            0x7517	                           jne 0x400b0b2	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x400b09b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5481	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_2
0x400b09f	          0x4889c7	                            mov rdi, rax	      5481	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_2
0x400b0a2	      0xe8def5ffff	          call sym.job_channel_can_close	      5481	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_2
0x400b0a7	            0x85c0	                           test eax, eax	      5481	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_2
0x400b0a9	            0x7407	                            je 0x400b0b2	      5481	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_2
0x400b0ab	      0xb801000000	                              mov eax, 1	      5482	channel.c	FUNCTION_128	FOR_1	IF_1
0x400b0b0	            0xeb17	                           jmp 0x400b0c9	      5482	channel.c	FUNCTION_128	FOR_1	IF_1
0x400b0b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5476	channel.c	FUNCTION_128	FOR_1
0x400b0b6	          0x488b00	                    mov rax, qword [rax]	      5476	channel.c	FUNCTION_128	FOR_1
0x400b0b9	        0x488945f8	                mov qword [rbp - 8], rax	      5476	channel.c	FUNCTION_128	FOR_1
0x400b0bd	      0x48837df800	                  cmp qword [rbp - 8], 0	      5476	channel.c	FUNCTION_128	FOR_1
0x400b0c2	            0x75af	                           jne 0x400b073	      5476	channel.c	FUNCTION_128	FOR_1
0x400b0c4	      0xb800000000	                              mov eax, 0	      5483	channel.c	FUNCTION_128
0x400b0c9	              0xc9	                                   leave	      5484	channel.c	FUNCTION_128
0x400b0ca	              0xc3	                                     ret	      5484	channel.c	FUNCTION_128
channel_set_nonblock	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	31
0x4007076	              0x55	                                push rbp	      3672	channel.c	FUNCTION_86
0x4007077	          0x4889e5	                            mov rbp, rsp	      3672	channel.c	FUNCTION_86
0x400707a	        0x4883ec20	                           sub rsp, 0x20	      3672	channel.c	FUNCTION_86
0x400707e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3672	channel.c	FUNCTION_86
0x4007082	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3672	channel.c	FUNCTION_86
0x4007085	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3673	channel.c	FUNCTION_86
0x4007088	        0x48c1e004	                              shl rax, 4	      3673	channel.c	FUNCTION_86
0x400708c	          0x4889c2	                            mov rdx, rax	      3673	channel.c	FUNCTION_86
0x400708f	        0x48c1e204	                              shl rdx, 4	      3673	channel.c	FUNCTION_86
0x4007093	          0x4801d0	                            add rax, rdx	      3673	channel.c	FUNCTION_86
0x4007096	        0x488d5010	                   lea rdx, [rax + 0x10]	      3673	channel.c	FUNCTION_86
0x400709a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3673	channel.c	FUNCTION_86
0x400709e	          0x4801d0	                            add rax, rdx	      3673	channel.c	FUNCTION_86
0x40070a1	        0x4883c008	                              add rax, 8	      3673	channel.c	FUNCTION_86
0x40070a5	        0x488945f8	                mov qword [rbp - 8], rax	      3673	channel.c	FUNCTION_86
0x40070a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3674	channel.c	FUNCTION_86
0x40070ad	            0x8b00	                    mov eax, dword [rax]	      3674	channel.c	FUNCTION_86
0x40070af	          0x8945f4	              mov dword [rbp - 0xc], eax	      3674	channel.c	FUNCTION_86
0x40070b2	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	      3676	channel.c	FUNCTION_86	IF_1
0x40070b6	            0x7424	                            je 0x40070dc	      3676	channel.c	FUNCTION_86	IF_1
0x40070b8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x40070bb	      0xba00080000	                          mov edx, 0x800	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x40070c0	      0xbe04000000	                              mov esi, 4	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x40070c5	            0x89c7	                            mov edi, eax	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x40070c7	      0xb800000000	                              mov eax, 0	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x40070cc	      0xe800000000	                          call 0x40070d1	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x40070d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3685	channel.c	FUNCTION_86	IF_1
0x40070d5	    0xc7407c010000	               mov dword [rax + 0x7c], 1	      3685	channel.c	FUNCTION_86	IF_1
0x40070dc	              0x90	                                     nop	      3687	channel.c	FUNCTION_86
0x40070dd	              0xc9	                                   leave	      3687	channel.c	FUNCTION_86
0x40070de	              0xc3	                                     ret	      3687	channel.c	FUNCTION_86
channel_exe_cmd	ELSE,8:WHILE,0:FOR,0:DO,0:functions,0:CALL,40:IF,20:SWITCH,0	358
0x40040b4	              0x55	                                push rbp	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040b5	          0x4889e5	                            mov rbp, rsp	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040b8	    0x4881ec300100	                          sub rsp, 0x130	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040bf	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040c6	    0x89b5e4feffff	            mov dword [rbp - 0x11c], esi	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040cc	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040d3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040dc	        0x488945f8	                mov qword [rbp - 8], rax	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040e0	            0x31c0	                            xor eax, eax	      2196	channel.c	ELSE_6	FUNCTION_57
0x40040e2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2197	channel.c	ELSE_6	FUNCTION_57
0x40040e9	        0x488b4008	                mov rax, qword [rax + 8]	      2197	channel.c	ELSE_6	FUNCTION_57
0x40040ed	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2197	channel.c	ELSE_6	FUNCTION_57
0x40040f4	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      2199	channel.c	ELSE_6	FUNCTION_57
0x40040fb	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004101	        0x48c1e004	                              shl rax, 4	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004105	          0x4889c1	                            mov rcx, rax	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004108	        0x48c1e104	                              shl rcx, 4	      2199	channel.c	ELSE_6	FUNCTION_57
0x400410c	          0x4801c8	                            add rax, rcx	      2199	channel.c	ELSE_6	FUNCTION_57
0x400410f	          0x4801d0	                            add rax, rdx	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004112	        0x4883c020	                           add rax, 0x20	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004116	            0x8b00	                    mov eax, dword [rax]	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004118	          0x83f803	                              cmp eax, 3	      2199	channel.c	ELSE_6	FUNCTION_57
0x400411b	           0xf94c0	                                 sete al	      2199	channel.c	ELSE_6	FUNCTION_57
0x400411e	           0xfb6c0	                           movzx eax, al	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004121	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2199	channel.c	ELSE_6	FUNCTION_57
0x4004127	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x400412e	        0x4883c010	                           add rax, 0x10	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4004132	            0x8b00	                    mov eax, dword [rax]	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4004134	          0x83f802	                              cmp eax, 2	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4004137	            0x7441	                            je 0x400417a	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4004139	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4004140	      0xbe00000000	                              mov esi, 0	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4004145	          0x4889c7	                            mov rdi, rax	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4004148	      0xb800000000	                              mov eax, 0	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x400414d	      0xe8cac1ffff	                       call sym.ch_error	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4004152	    0x488b05000000	            mov rax, qword [0x04004159] 	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4004159	        0x4883f802	                              cmp rax, 2	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x400415d	     0xf8ed5050000	                           jle 0x4004738	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4004163	      0xbf00000000	                              mov edi, 0	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4004168	      0xe800000000	                          call 0x400416d	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x400416d	          0x4889c7	                            mov rdi, rax	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4004170	      0xe800000000	                          call 0x4004175	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4004175	      0xe9be050000	                           jmp 0x4004738	      2206	channel.c	ELSE_6	FUNCTION_57	IF_1
0x400417a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2208	channel.c	ELSE_6	FUNCTION_57
0x4004181	        0x4883c010	                           add rax, 0x10	      2208	channel.c	ELSE_6	FUNCTION_57
0x4004185	        0x488b4008	                mov rax, qword [rax + 8]	      2208	channel.c	ELSE_6	FUNCTION_57
0x4004189	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      2208	channel.c	ELSE_6	FUNCTION_57
0x4004190	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      2209	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4004198	            0x750b	                           jne 0x40041a5	      2209	channel.c	ELSE_6	FUNCTION_57	IF_3
0x400419a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x40041a5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x40041ac	      0xbe00000000	                              mov esi, 0	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x40041b1	          0x4889c7	                            mov rdi, rax	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x40041b4	      0xe800000000	                          call 0x40041b9	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x40041b9	            0x85c0	                           test eax, eax	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x40041bb	     0xf85a4000000	                           jne 0x4004265	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x40041c1	    0x8b0500000000	            mov eax, dword [0x040041c7] 	      2214	channel.c	ELSE_6	FUNCTION_57	IF_4
0x40041c7	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      2214	channel.c	ELSE_6	FUNCTION_57	IF_4
0x40041cd	    0xc70500000000	               mov dword [0x040041d7], 0	      2216	channel.c	ELSE_6	FUNCTION_57	IF_4
0x40041d7	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x40041de	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x40041e5	      0xbe00000000	                              mov esi, 0	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x40041ea	          0x4889c7	                            mov rdi, rax	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x40041ed	      0xb800000000	                              mov eax, 0	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x40041f2	      0xe800000000	                          call 0x40041f7	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x40041f7	    0x8b0500000000	            mov eax, dword [0x040041fd] 	      2218	channel.c	ELSE_6	FUNCTION_57	IF_4
0x40041fd	          0x83c001	                              add eax, 1	      2218	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4004200	    0x890500000000	            mov dword [0x04004206], eax 	      2218	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4004206	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x400420d	          0x4889c7	                            mov rdi, rax	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4004210	      0xe800000000	                          call 0x4004215	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4004215	    0x8b0500000000	            mov eax, dword [0x0400421b] 	      2220	channel.c	ELSE_6	FUNCTION_57	IF_4
0x400421b	          0x83e801	                              sub eax, 1	      2220	channel.c	ELSE_6	FUNCTION_57	IF_4
0x400421e	    0x890500000000	            mov dword [0x04004224], eax 	      2220	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4004224	    0x8b0500000000	            mov eax, dword [0x0400422a] 	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x400422a	            0x85c0	                           test eax, eax	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x400422c	            0x7426	                            je 0x4004254	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x400422e	      0xbf03000000	                              mov edi, 3	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x4004233	      0xe800000000	                          call 0x4004238	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x4004238	          0x4889c2	                            mov rdx, rax	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x400423b	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4004242	      0xbe00000000	                              mov esi, 0	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4004247	          0x4889c7	                            mov rdi, rax	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x400424a	      0xb800000000	                              mov eax, 0	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x400424f	      0xe800000000	                          call 0x4004254	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4004254	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      2224	channel.c	ELSE_6	FUNCTION_57	IF_4
0x400425a	    0x890500000000	            mov dword [0x04004260], eax 	      2224	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4004260	      0xe9d4040000	                           jmp 0x4004739	      2224	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4004265	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x400426c	      0xbe00000000	                              mov esi, 0	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4004271	          0x4889c7	                            mov rdi, rax	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4004274	      0xe800000000	                          call 0x4004279	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4004279	            0x85c0	                           test eax, eax	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x400427b	            0x7556	                           jne 0x40042d3	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x400427d	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004284	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x400428b	      0xbe00000000	                              mov esi, 0	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004290	          0x4889c7	                            mov rdi, rax	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004293	      0xb800000000	                              mov eax, 0	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x4004298	      0xe800000000	                          call 0x400429d	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x400429d	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2231	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x40042a4	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2231	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x40042ab	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2232	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x40042b5	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      2233	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x40042bf	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x40042c6	          0x4889c7	                            mov rdi, rax	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x40042c9	      0xe800000000	                          call 0x40042ce	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x40042ce	      0xe966040000	                           jmp 0x4004739	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x40042d3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x40042da	      0xbe00000000	                              mov esi, 0	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x40042df	          0x4889c7	                            mov rdi, rax	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x40042e2	      0xe800000000	                          call 0x40042e7	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x40042e7	            0x85c0	                           test eax, eax	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x40042e9	            0x7563	                           jne 0x400434e	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x40042eb	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x40042f2	      0xbe00000000	                              mov esi, 0	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x40042f7	          0x4889c7	                            mov rdi, rax	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x40042fa	      0xb800000000	                              mov eax, 0	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x40042ff	      0xe800000000	                          call 0x4004304	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4004304	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x400430b	           0xfb600	                   movzx eax, byte [rax]	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x400430e	            0x84c0	                             test al, al	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4004310	           0xf95c0	                                setne al	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4004313	           0xfb6c0	                           movzx eax, al	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4004316	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x400431c	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x4004323	          0x4889c7	                            mov rdi, rax	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x4004326	      0xe800000000	                          call 0x400432b	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x400432b	      0xbf00000000	                              mov edi, 0	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x4004330	      0xe800000000	                          call 0x4004335	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x4004335	      0xe800000000	                          call 0x400433a	      2244	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_16
0x400433a	      0xbe00000000	                              mov esi, 0	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x400433f	      0xbf01000000	                              mov edi, 1	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4004344	      0xe800000000	                          call 0x4004349	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4004349	      0xe9eb030000	                           jmp 0x4004739	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x400434e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004355	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400435a	          0x4889c7	                            mov rdi, rax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400435d	      0xe800000000	                          call 0x4004362	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004362	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004364	            0x741c	                            je 0x4004382	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004366	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400436d	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004372	          0x4889c7	                            mov rdi, rax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004375	      0xe800000000	                          call 0x400437a	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400437a	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400437c	     0xf8568030000	                           jne 0x40046ea	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4004382	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2249	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4004389	           0xfb600	                   movzx eax, byte [rax]	      2249	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x400438c	            0x3c63	                            cmp al, 0x63	      2249	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x400438e	           0xf94c0	                                 sete al	      2249	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4004391	           0xfb6c0	                           movzx eax, al	      2249	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4004394	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2249	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x400439a	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40043a1	            0x7407	                            je 0x40043aa	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40043a3	      0xb803000000	                              mov eax, 3	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40043a8	            0xeb05	                           jmp 0x40043af	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40043aa	      0xb802000000	                              mov eax, 2	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40043af	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40043b5	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043bb	            0x4898	                                    cdqe	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043bd	        0x48c1e004	                              shl rax, 4	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043c1	          0x4889c2	                            mov rdx, rax	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043c4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043cb	          0x4801d0	                            add rax, rdx	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043ce	            0x8b00	                    mov eax, dword [rax]	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043d0	            0x85c0	                           test eax, eax	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043d2	            0x7461	                            je 0x4004435	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043d4	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043da	            0x4898	                                    cdqe	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043dc	        0x48c1e004	                              shl rax, 4	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043e0	          0x4889c2	                            mov rdx, rax	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043e3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043ea	          0x4801d0	                            add rax, rdx	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043ed	            0x8b00	                    mov eax, dword [rax]	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043ef	          0x83f801	                              cmp eax, 1	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043f2	            0x7441	                            je 0x4004435	      2253	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40043f4	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40043fb	      0xbe00000000	                              mov esi, 0	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x4004400	          0x4889c7	                            mov rdi, rax	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x4004403	      0xb800000000	                              mov eax, 0	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x4004408	      0xe80fbfffff	                       call sym.ch_error	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x400440d	    0x488b05000000	            mov rax, qword [0x04004414] 	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x4004414	        0x4883f802	                              cmp rax, 2	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x4004418	     0xf8eca020000	                           jle 0x40046e8	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x400441e	      0xbf00000000	                              mov edi, 0	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4004423	      0xe800000000	                          call 0x4004428	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4004428	          0x4889c7	                            mov rdi, rax	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x400442b	      0xe800000000	                          call 0x4004430	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x4004430	      0xe9b3020000	                           jmp 0x40046e8	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x4004435	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x400443c	            0x7453	                            je 0x4004491	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x400443e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4004445	        0x4883c020	                           add rax, 0x20	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4004449	            0x8b00	                    mov eax, dword [rax]	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x400444b	          0x83f805	                              cmp eax, 5	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x400444e	            0x7441	                            je 0x4004491	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4004450	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4004457	      0xbe00000000	                              mov esi, 0	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x400445c	          0x4889c7	                            mov rdi, rax	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x400445f	      0xb800000000	                              mov eax, 0	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4004464	      0xe8b3beffff	                       call sym.ch_error	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4004469	    0x488b05000000	            mov rax, qword [0x04004470] 	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4004470	        0x4883f802	                              cmp rax, 2	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4004474	     0xf8e6e020000	                           jle 0x40046e8	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x400447a	      0xbf00000000	                              mov edi, 0	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x400447f	      0xe800000000	                          call 0x4004484	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4004484	          0x4889c7	                            mov rdi, rax	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4004487	      0xe800000000	                          call 0x400448c	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x400448c	      0xe957020000	                           jmp 0x40046e8	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4004491	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      2267	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x400449c	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      2270	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40044a7	    0x8b0500000000	            mov eax, dword [0x040044ad] 	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40044ad	          0x83c001	                              add eax, 1	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40044b0	    0x890500000000	            mov dword [0x040044b6], eax 	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40044b6	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2274	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13
0x40044bd	            0x753d	                           jne 0x40044fc	      2274	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13
0x40044bf	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40044c6	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40044cd	      0xbe00000000	                              mov esi, 0	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40044d2	          0x4889c7	                            mov rdi, rax	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40044d5	      0xb800000000	                              mov eax, 0	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40044da	      0xe800000000	                          call 0x40044df	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40044df	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40044e6	      0xbe00000000	                              mov esi, 0	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40044eb	          0x4889c7	                            mov rdi, rax	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40044ee	      0xe800000000	                          call 0x40044f3	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40044f3	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40044fa	            0xeb61	                           jmp 0x400455d	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40044fc	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4004503	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x400450a	      0xbe00000000	                              mov esi, 0	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x400450f	          0x4889c7	                            mov rdi, rax	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4004512	      0xb800000000	                              mov eax, 0	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4004517	      0xe800000000	                          call 0x400451c	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x400451c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4004523	        0x488d7020	                   lea rsi, [rax + 0x20]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4004527	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x400452e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4004535	          0x4989d0	                             mov r8, rdx	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4004538	      0xb900000000	                              mov ecx, 0	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x400453d	      0xba00000000	                              mov edx, 0	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4004542	          0x4889c7	                            mov rdi, rax	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4004545	      0xe800000000	                          call 0x400454a	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x400454a	          0x83f801	                              cmp eax, 1	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x400454d	            0x750e	                           jne 0x400455d	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x400454f	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2283	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14
0x4004556	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2283	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14
0x400455d	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004563	            0x4898	                                    cdqe	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004565	        0x48c1e004	                              shl rax, 4	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004569	          0x4889c2	                            mov rdx, rax	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400456c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004573	          0x4801d0	                            add rax, rdx	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004576	            0x8b00	                    mov eax, dword [rax]	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004578	          0x83f801	                              cmp eax, 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400457b	     0xf8526010000	                           jne 0x40046a7	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004581	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004587	            0x4898	                                    cdqe	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004589	        0x48c1e004	                              shl rax, 4	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400458d	          0x4889c2	                            mov rdx, rax	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004590	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4004597	          0x4801d0	                            add rax, rdx	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400459a	        0x488b4008	                mov rax, qword [rax + 8]	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400459e	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40045a4	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x40045ac	            0x7429	                            je 0x40045d7	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x40045ae	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045b4	          0x83c804	                               or eax, 4	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045b7	            0x89c2	                            mov edx, eax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045b9	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045c0	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045c6	          0x4889ce	                            mov rsi, rcx	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045c9	            0x89c7	                            mov edi, eax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045cb	      0xe800000000	                          call 0x40045d0	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045d0	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40045d7	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045df	            0x7418	                            je 0x40045f9	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045e1	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045e9	            0x745b	                            je 0x4004646	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045eb	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045f2	           0xfb600	                   movzx eax, byte [rax]	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045f5	            0x84c0	                             test al, al	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045f7	            0x754d	                           jne 0x4004646	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40045f9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4004600	          0x4889c7	                            mov rdi, rax	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4004603	      0xe800000000	                          call 0x4004608	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4004608	    0xc78540ffffff	               mov dword [rbp - 0xc0], 2	      2297	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4004612	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      2298	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x400461d	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004623	          0x83c804	                               or eax, 4	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004626	            0x89c2	                            mov edx, eax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004628	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x400462f	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004635	          0x4889ce	                            mov rsi, rcx	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004638	            0x89c7	                            mov edi, eax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x400463a	      0xe800000000	                          call 0x400463f	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x400463f	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4004646	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x400464e	            0x7457	                            je 0x40046a7	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4004650	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4004657	          0x4889c7	                            mov rdi, rax	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x400465a	      0xe800000000	                          call 0x400465f	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x400465f	            0x89c7	                            mov edi, eax	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004661	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004668	            0x7507	                           jne 0x4004671	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400466a	      0xbe00000000	                              mov esi, 0	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400466f	            0xeb05	                           jmp 0x4004676	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004671	      0xbe03000000	                              mov esi, 3	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004676	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400467d	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004684	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400468b	          0x4989c8	                             mov r8, rcx	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400468e	            0x89f9	                            mov ecx, edi	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004690	          0x4889c7	                            mov rdi, rax	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004693	      0xe800000000	                          call 0x4004698	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4004698	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x400469f	          0x4889c7	                            mov rdi, rax	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x40046a2	      0xe800000000	                          call 0x40046a7	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x40046a7	    0x8b0500000000	            mov eax, dword [0x040046ad] 	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40046ad	          0x83e801	                              sub eax, 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40046b0	    0x890500000000	            mov dword [0x040046b6], eax 	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40046b6	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x40046bd	    0x48398518ffff	            cmp qword [rbp - 0xe8], rax 	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x40046c4	            0x7511	                           jne 0x40046d7	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x40046c6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x40046cd	          0x4889c7	                            mov rdi, rax	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x40046d0	      0xe800000000	                          call 0x40046d5	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x40046d5	            0xeb62	                           jmp 0x4004739	      2248	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40046d7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x40046de	          0x4889c7	                            mov rdi, rax	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x40046e1	      0xe800000000	                          call 0x40046e6	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x40046e6	            0xeb51	                           jmp 0x4004739	      2248	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40046e8	            0xeb4f	                           jmp 0x4004739	      2248	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x40046ea	    0x488b05000000	            mov rax, qword [0x040046f1] 	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x40046f1	        0x4883f802	                              cmp rax, 2	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x40046f5	            0x7e42	                           jle 0x4004739	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x40046f7	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x40046fe	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004705	      0xbe00000000	                              mov esi, 0	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x400470a	          0x4889c7	                            mov rdi, rax	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x400470d	      0xb800000000	                              mov eax, 0	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004712	      0xe805bcffff	                       call sym.ch_error	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4004717	      0xbf00000000	                              mov edi, 0	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x400471c	      0xe800000000	                          call 0x4004721	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004721	          0x4889c2	                            mov rdx, rax	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004724	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x400472b	          0x4889c6	                            mov rsi, rax	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x400472e	          0x4889d7	                            mov rdi, rdx	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004731	      0xe800000000	                          call 0x4004736	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004736	            0xeb01	                           jmp 0x4004739	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4004738	              0x90	                                     nop	      2206	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4004739	        0x488b45f8	                mov rax, qword [rbp - 8]	      2321	channel.c	FUNCTION_57	ELSE_6
0x400473d	    0x644833042528	                xor rax, qword fs:[0x28]	      2321	channel.c	FUNCTION_57	ELSE_6
0x4004746	            0x7405	                            je 0x400474d	      2321	channel.c	FUNCTION_57	ELSE_6
0x4004748	      0xe800000000	                          call 0x400474d	      2321	channel.c	FUNCTION_57	ELSE_6
0x400474d	              0xc9	                                   leave	      2321	channel.c	FUNCTION_57	ELSE_6
0x400474e	              0xc3	                                     ret	      2321	channel.c	FUNCTION_57	ELSE_6
job_info_all	ELSE,0:WHILE,0:FOR,1:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	33
0x400ba51	              0x55	                                push rbp	      5776	channel.c	FUNCTION_133
0x400ba52	          0x4889e5	                            mov rbp, rsp	      5776	channel.c	FUNCTION_133
0x400ba55	        0x4883ec40	                           sub rsp, 0x40	      5776	channel.c	FUNCTION_133
0x400ba59	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5776	channel.c	FUNCTION_133
0x400ba5d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5776	channel.c	FUNCTION_133
0x400ba66	        0x488945f8	                mov qword [rbp - 8], rax	      5776	channel.c	FUNCTION_133
0x400ba6a	            0x31c0	                            xor eax, eax	      5776	channel.c	FUNCTION_133
0x400ba6c	    0x488b05000000	            mov rax, qword [0x0400ba73] 	      5780	channel.c	FUNCTION_133	FOR_1
0x400ba73	        0x488945d8	             mov qword [rbp - 0x28], rax	      5780	channel.c	FUNCTION_133	FOR_1
0x400ba77	            0xeb32	                           jmp 0x400baab	      5780	channel.c	FUNCTION_133	FOR_1
0x400ba79	    0xc745e0090000	               mov dword [rbp - 0x20], 9	      5782	channel.c	FUNCTION_133	FOR_1
0x400ba80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5783	channel.c	FUNCTION_133	FOR_1
0x400ba84	        0x488945e8	             mov qword [rbp - 0x18], rax	      5783	channel.c	FUNCTION_133	FOR_1
0x400ba88	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400ba8c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400ba90	          0x4889d6	                            mov rsi, rdx	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400ba93	          0x4889c7	                            mov rdi, rax	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400ba96	      0xe800000000	                          call 0x400ba9b	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400ba9b	          0x83f801	                              cmp eax, 1	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400ba9e	            0x7514	                           jne 0x400bab4	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400baa0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5780	channel.c	FUNCTION_133	FOR_1
0x400baa4	          0x488b00	                    mov rax, qword [rax]	      5780	channel.c	FUNCTION_133	FOR_1
0x400baa7	        0x488945d8	             mov qword [rbp - 0x28], rax	      5780	channel.c	FUNCTION_133	FOR_1
0x400baab	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5780	channel.c	FUNCTION_133	FOR_1
0x400bab0	            0x75c7	                           jne 0x400ba79	      5780	channel.c	FUNCTION_133	FOR_1
0x400bab2	            0xeb01	                           jmp 0x400bab5	      5780	channel.c	FUNCTION_133	FOR_1
0x400bab4	              0x90	                                     nop	      5786	channel.c	FUNCTION_133	FOR_1	IF_1
0x400bab5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5788	channel.c	FUNCTION_133
0x400bab9	    0x644833042528	                xor rax, qword fs:[0x28]	      5788	channel.c	FUNCTION_133
0x400bac2	            0x7405	                            je 0x400bac9	      5788	channel.c	FUNCTION_133
0x400bac4	      0xe800000000	                          call 0x400bac9	      5788	channel.c	FUNCTION_133
0x400bac9	              0xc9	                                   leave	      5788	channel.c	FUNCTION_133
0x400baca	              0xc3	                                     ret	      5788	channel.c	FUNCTION_133
channel_parse_messages	ELSE,1:WHILE,1:FOR,0:DO,0:functions,0:CALL,12:IF,9:SWITCH,0	139
0x4007ee8	              0x55	                                push rbp	      4215	channel.c	FUNCTION_95
0x4007ee9	          0x4889e5	                            mov rbp, rsp	      4215	channel.c	FUNCTION_95
0x4007eec	        0x4883ec40	                           sub rsp, 0x40	      4215	channel.c	FUNCTION_95
0x4007ef0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4215	channel.c	FUNCTION_95
0x4007ef9	        0x488945f8	                mov qword [rbp - 8], rax	      4215	channel.c	FUNCTION_95
0x4007efd	            0x31c0	                            xor eax, eax	      4215	channel.c	FUNCTION_95
0x4007eff	    0x488b05000000	            mov rax, qword [0x04007f06] 	      4216	channel.c	FUNCTION_95
0x4007f06	        0x488945d8	             mov qword [rbp - 0x28], rax	      4216	channel.c	FUNCTION_95
0x4007f0a	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      4217	channel.c	FUNCTION_95
0x4007f11	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4219	channel.c	FUNCTION_95
0x4007f18	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4223	channel.c	FUNCTION_95	CALL_1
0x4007f1c	      0xbe00000000	                              mov esi, 0	      4223	channel.c	FUNCTION_95	CALL_1
0x4007f21	          0x4889c7	                            mov rdi, rax	      4223	channel.c	FUNCTION_95	CALL_1
0x4007f24	      0xe800000000	                          call 0x4007f29	      4223	channel.c	FUNCTION_95	CALL_1
0x4007f29	    0x8b0500000000	            mov eax, dword [0x04007f2f] 	      4226	channel.c	FUNCTION_95
0x4007f2f	          0x83c001	                              add eax, 1	      4226	channel.c	FUNCTION_95
0x4007f32	    0x890500000000	            mov dword [0x04007f38], eax 	      4226	channel.c	FUNCTION_95
0x4007f38	    0x8b0500000000	            mov eax, dword [0x04007f3e] 	      4230	channel.c	FUNCTION_95	IF_1
0x4007f3e	            0x85c0	                           test eax, eax	      4230	channel.c	FUNCTION_95	IF_1
0x4007f40	     0xf8492010000	                            je 0x40080d8	      4230	channel.c	FUNCTION_95	IF_1
0x4007f46	      0xbe00000000	                              mov esi, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4007f4b	      0xbf00000000	                              mov edi, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4007f50	      0xb800000000	                              mov eax, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4007f55	      0xe800000000	                          call 0x4007f5a	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x4007f5a	    0xc70500000000	               mov dword [0x04007f64], 0	      4233	channel.c	FUNCTION_95	IF_1
0x4007f64	      0xe96f010000	                           jmp 0x40080d8	      4235	channel.c	FUNCTION_95	WHILE_1
0x4007f69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4007f6d	          0x4889c7	                            mov rdi, rax	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4007f70	      0xe88687ffff	              call sym.channel_can_close	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4007f75	            0x85c0	                           test eax, eax	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4007f77	            0x742a	                            je 0x4007fa3	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x4007f79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4239	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4007f7d	    0xc7806c040000	          mov dword [rax + 0x46c], 0x10 	      4239	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4007f87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4240	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_4
0x4007f8b	          0x4889c7	                            mov rdi, rax	      4240	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_4
0x4007f8e	      0xe80fe6ffff	              call sym.channel_close_now	      4240	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_4
0x4007f93	    0x488b05000000	            mov rax, qword [0x04007f9a] 	      4242	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4007f9a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4242	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4007f9e	      0xe935010000	                           jmp 0x40080d8	      4243	channel.c	FUNCTION_95	WHILE_1	IF_2
0x4007fa3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4007fa7	    0x8b8070040000	           mov eax, dword [rax + 0x470] 	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4007fad	            0x85c0	                           test eax, eax	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4007faf	            0x741c	                            je 0x4007fcd	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4007fb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4247	channel.c	FUNCTION_95	WHILE_1	IF_3	CALL_5
0x4007fb5	          0x4889c7	                            mov rdi, rax	      4247	channel.c	FUNCTION_95	WHILE_1	IF_3	CALL_5
0x4007fb8	      0xe80588ffff	                   call sym.channel_free	      4247	channel.c	FUNCTION_95	WHILE_1	IF_3	CALL_5
0x4007fbd	    0x488b05000000	            mov rax, qword [0x04007fc4] 	      4249	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4007fc4	        0x488945d8	             mov qword [rbp - 0x28], rax	      4249	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4007fc8	      0xe90b010000	                           jmp 0x40080d8	      4250	channel.c	FUNCTION_95	WHILE_1	IF_3
0x4007fcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fd1	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fd7	            0x85c0	                           test eax, eax	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fd9	            0x7533	                           jne 0x400800e	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fdb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fdf	          0x4889c7	                            mov rdi, rax	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fe2	      0xe88285ffff	           call sym.channel_still_useful	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fe7	            0x85c0	                           test eax, eax	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007fe9	            0x7523	                           jne 0x400800e	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x4007feb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4255	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_7
0x4007fef	          0x4889c7	                            mov rdi, rax	      4255	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_7
0x4007ff2	      0xe8cb87ffff	                   call sym.channel_free	      4255	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_7
0x4007ff7	    0x488b05000000	            mov rax, qword [0x04007ffe] 	      4256	channel.c	FUNCTION_95	WHILE_1	IF_4
0x4007ffe	        0x488945d8	             mov qword [rbp - 0x28], rax	      4256	channel.c	FUNCTION_95	WHILE_1	IF_4
0x4008002	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4257	channel.c	FUNCTION_95	WHILE_1	IF_4
0x4008009	      0xe9ca000000	                           jmp 0x40080d8	      4258	channel.c	FUNCTION_95	WHILE_1	IF_4
0x400800e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008012	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008015	        0x48c1e004	                              shl rax, 4	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008019	          0x4889c1	                            mov rcx, rax	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400801c	        0x48c1e104	                              shl rcx, 4	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008020	          0x4801c8	                            add rax, rcx	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008023	          0x4801d0	                            add rax, rdx	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008026	        0x4883c018	                           add rax, 0x18	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400802a	            0x8b00	                    mov eax, dword [rax]	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400802c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400802f	            0x7515	                           jne 0x4008046	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008031	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4008034	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4008038	            0x89d6	                            mov esi, edx	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x400803a	          0x4889c7	                            mov rdi, rax	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x400803d	      0xe800000000	                          call 0x4008042	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4008042	            0x85c0	                           test eax, eax	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4008044	            0x7474	                            je 0x40080ba	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x4008046	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400804a	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008050	          0x8d5001	                      lea edx, [rax + 1]	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008053	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x4008057	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400805d	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4008060	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4008064	            0x89d6	                            mov esi, edx	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4008066	          0x4889c7	                            mov rdi, rax	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4008069	      0xe897cbffff	            call sym.may_invoke_callback	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x400806e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x4008071	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4008075	            0x7507	                           jne 0x400807e	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x4008077	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      4268	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x400807e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4008082	          0x4889c7	                            mov rdi, rax	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4008085	      0xe800000000	                          call 0x400808a	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x400808a	            0x85c0	                           test eax, eax	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x400808c	            0x7518	                           jne 0x40080a6	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x400808e	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4008092	            0x7526	                           jne 0x40080ba	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x4008094	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x4008098	          0x4889c7	                            mov rdi, rax	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400809b	      0xe800000000	                          call 0x40080a0	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x40080a0	        0x4883f863	                           cmp rax, 0x63	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x40080a4	            0x7f14	                            jg 0x40080ba	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x40080a6	    0x488b05000000	            mov rax, qword [0x040080ad] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x40080ad	        0x488945d8	             mov qword [rbp - 0x28], rax	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x40080b1	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x40080b8	            0xeb1e	                           jmp 0x40080d8	      4281	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x40080ba	        0x837dd001	               cmp dword [rbp - 0x30], 1	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x40080be	            0x7706	                            ja 0x40080c6	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x40080c0	        0x8345d001	               add dword [rbp - 0x30], 1	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x40080c4	            0xeb12	                           jmp 0x40080d8	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x40080c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4288	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x40080ca	          0x488b00	                    mov rax, qword [rax]	      4288	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x40080cd	        0x488945d8	             mov qword [rbp - 0x28], rax	      4288	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x40080d1	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4289	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x40080d8	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4235	channel.c	FUNCTION_95	WHILE_1
0x40080dd	     0xf8586feffff	                           jne 0x4007f69	      4235	channel.c	FUNCTION_95	WHILE_1
0x40080e3	    0x8b0500000000	            mov eax, dword [0x040080e9] 	      4293	channel.c	FUNCTION_95	IF_9
0x40080e9	            0x85c0	                           test eax, eax	      4293	channel.c	FUNCTION_95	IF_9
0x40080eb	            0x7414	                            je 0x4008101	      4293	channel.c	FUNCTION_95	IF_9
0x40080ed	    0xc70500000000	               mov dword [0x040080f7], 0	      4295	channel.c	FUNCTION_95	IF_9
0x40080f7	      0xbf01000000	                              mov edi, 1	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x40080fc	      0xe800000000	                          call 0x4008101	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x4008101	    0x8b0500000000	            mov eax, dword [0x04008107] 	      4299	channel.c	FUNCTION_95
0x4008107	          0x83e801	                              sub eax, 1	      4299	channel.c	FUNCTION_95
0x400810a	    0x890500000000	            mov dword [0x04008110], eax 	      4299	channel.c	FUNCTION_95
0x4008110	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4301	channel.c	FUNCTION_95
0x4008113	        0x488b75f8	                mov rsi, qword [rbp - 8]	      4302	channel.c	FUNCTION_95
0x4008117	    0x644833342528	                xor rsi, qword fs:[0x28]	      4302	channel.c	FUNCTION_95
0x4008120	            0x7405	                            je 0x4008127	      4302	channel.c	FUNCTION_95
0x4008122	      0xe800000000	                          call 0x4008127	      4302	channel.c	FUNCTION_95
0x4008127	              0xc9	                                   leave	      4302	channel.c	FUNCTION_95
0x4008128	              0xc3	                                     ret	      4302	channel.c	FUNCTION_95
channel_any_readahead	ELSE,1:WHILE,1:FOR,0:DO,0:functions,0:CALL,1:IF,2:SWITCH,0	29
0x4008129	              0x55	                                push rbp	      4310	channel.c	FUNCTION_96
0x400812a	          0x4889e5	                            mov rbp, rsp	      4310	channel.c	FUNCTION_96
0x400812d	        0x4883ec10	                           sub rsp, 0x10	      4310	channel.c	FUNCTION_96
0x4008131	    0x488b05000000	            mov rax, qword [0x04008138] 	      4311	channel.c	FUNCTION_96
0x4008138	        0x488945f8	                mov qword [rbp - 8], rax	      4311	channel.c	FUNCTION_96
0x400813c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4312	channel.c	FUNCTION_96
0x4008143	            0xeb3a	                           jmp 0x400817f	      4314	channel.c	FUNCTION_96	WHILE_1
0x4008145	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x4008148	        0x488b45f8	                mov rax, qword [rbp - 8]	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400814c	            0x89d6	                            mov esi, edx	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400814e	          0x4889c7	                            mov rdi, rax	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x4008151	      0xe800000000	                          call 0x4008156	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x4008156	            0x85c0	                           test eax, eax	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x4008158	            0x7407	                            je 0x4008161	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400815a	      0xb801000000	                              mov eax, 1	      4317	channel.c	FUNCTION_96	WHILE_1	IF_1
0x400815f	            0xeb2a	                           jmp 0x400818b	      4317	channel.c	FUNCTION_96	WHILE_1	IF_1
0x4008161	        0x837df401	                cmp dword [rbp - 0xc], 1	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x4008165	            0x7706	                            ja 0x400816d	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x4008167	        0x8345f401	                add dword [rbp - 0xc], 1	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400816b	            0xeb12	                           jmp 0x400817f	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400816d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4322	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x4008171	          0x488b00	                    mov rax, qword [rax]	      4322	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x4008174	        0x488945f8	                mov qword [rbp - 8], rax	      4322	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x4008178	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4323	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x400817f	      0x48837df800	                  cmp qword [rbp - 8], 0	      4314	channel.c	FUNCTION_96	WHILE_1
0x4008184	            0x75bf	                           jne 0x4008145	      4314	channel.c	FUNCTION_96	WHILE_1
0x4008186	      0xb800000000	                              mov eax, 0	      4326	channel.c	FUNCTION_96
0x400818b	              0xc9	                                   leave	      4327	channel.c	FUNCTION_96
0x400818c	              0xc3	                                     ret	      4327	channel.c	FUNCTION_96
ch_close_part_on_error	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,7:IF,4:SWITCH,0	105
0x4006405	              0x55	                                push rbp	      3232	channel.c	FUNCTION_77
0x4006406	          0x4889e5	                            mov rbp, rsp	      3232	channel.c	FUNCTION_77
0x4006409	        0x4883ec60	                           sub rsp, 0x60	      3232	channel.c	FUNCTION_77
0x400640d	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3232	channel.c	FUNCTION_77
0x4006411	          0x8975b4	             mov dword [rbp - 0x4c], esi	      3232	channel.c	FUNCTION_77
0x4006414	          0x8955b0	             mov dword [rbp - 0x50], edx	      3232	channel.c	FUNCTION_77
0x4006417	        0x48894da8	             mov qword [rbp - 0x58], rcx	      3232	channel.c	FUNCTION_77
0x400641b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3232	channel.c	FUNCTION_77
0x4006424	        0x488945f8	                mov qword [rbp - 8], rax	      3232	channel.c	FUNCTION_77
0x4006428	            0x31c0	                            xor eax, eax	      3232	channel.c	FUNCTION_77
0x400642a	    0x48b825732829	          movabs rax, 0x6552203a29287325	      3233	channel.c	FUNCTION_77
0x4006434	        0x488945d0	             mov qword [rbp - 0x30], rax	      3233	channel.c	FUNCTION_77
0x4006438	    0x48b861642025	          movabs rax, 0x7266207325206461	      3233	channel.c	FUNCTION_77
0x4006442	        0x488945d8	             mov qword [rbp - 0x28], rax	      3233	channel.c	FUNCTION_77
0x4006446	    0x48b86f6d2063	          movabs rax, 0x61705f6863206d6f	      3233	channel.c	FUNCTION_77
0x4006450	        0x488945e0	             mov qword [rbp - 0x20], rax	      3233	channel.c	FUNCTION_77
0x4006454	    0x48b872745b25	          movabs rax, 0x202c5d64255b7472	      3233	channel.c	FUNCTION_77
0x400645e	        0x488945e8	             mov qword [rbp - 0x18], rax	      3233	channel.c	FUNCTION_77
0x4006462	    0x48b8636c6f73	            movabs rax, 0x676e69736f6c63	      3233	channel.c	FUNCTION_77
0x400646c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3233	channel.c	FUNCTION_77
0x4006470	        0x837db000	               cmp dword [rbp - 0x50], 0	      3235	channel.c	FUNCTION_77	IF_1
0x4006474	            0x7426	                            je 0x400649c	      3235	channel.c	FUNCTION_77	IF_1
0x4006476	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3237	channel.c	FUNCTION_77	CALL_1
0x4006479	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3237	channel.c	FUNCTION_77	CALL_1
0x400647d	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      3237	channel.c	FUNCTION_77	CALL_1
0x4006481	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3237	channel.c	FUNCTION_77	CALL_1
0x4006485	          0x4189c8	                            mov r8d, ecx	      3237	channel.c	FUNCTION_77	CALL_1
0x4006488	      0xb900000000	                              mov ecx, 0	      3237	channel.c	FUNCTION_77	CALL_1
0x400648d	          0x4889c7	                            mov rdi, rax	      3237	channel.c	FUNCTION_77	CALL_1
0x4006490	      0xb800000000	                              mov eax, 0	      3237	channel.c	FUNCTION_77	CALL_1
0x4006495	      0xe8829effff	                       call sym.ch_error	      3237	channel.c	FUNCTION_77	CALL_1
0x400649a	            0xeb24	                           jmp 0x40064c0	      3237	channel.c	FUNCTION_77	CALL_1
0x400649c	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3239	channel.c	FUNCTION_77	CALL_2
0x400649f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3239	channel.c	FUNCTION_77	CALL_2
0x40064a3	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      3239	channel.c	FUNCTION_77	CALL_2
0x40064a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3239	channel.c	FUNCTION_77	CALL_2
0x40064ab	          0x4189c8	                            mov r8d, ecx	      3239	channel.c	FUNCTION_77	CALL_2
0x40064ae	      0xb900000000	                              mov ecx, 0	      3239	channel.c	FUNCTION_77	CALL_2
0x40064b3	          0x4889c7	                            mov rdi, rax	      3239	channel.c	FUNCTION_77	CALL_2
0x40064b6	      0xb800000000	                              mov eax, 0	      3239	channel.c	FUNCTION_77	CALL_2
0x40064bb	      0xe800000000	                          call 0x40064c0	      3239	channel.c	FUNCTION_77	CALL_2
0x40064c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3252	channel.c	FUNCTION_77	IF_2
0x40064c4	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      3252	channel.c	FUNCTION_77	IF_2
0x40064cb	          0x4885c0	                           test rax, rax	      3252	channel.c	FUNCTION_77	IF_2
0x40064ce	            0x7427	                            je 0x40064f7	      3252	channel.c	FUNCTION_77	IF_2
0x40064d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064d4	    0x41b900000000	                              mov r9d, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064da	    0x41b800000000	                              mov r8d, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064e0	      0xb907000000	                              mov ecx, 7	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064e5	      0xba00000000	                              mov edx, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064ea	      0xbe00000000	                              mov esi, 0	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064ef	          0x4889c7	                            mov rdi, rax	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064f2	      0xe8fcceffff	                   call sym.channel_save	      3253	channel.c	FUNCTION_77	IF_2	CALL_3
0x40064f7	        0x837db401	               cmp dword [rbp - 0x4c], 1	      3260	channel.c	FUNCTION_77	IF_3
0x40064fb	            0x7406	                            je 0x4006503	      3260	channel.c	FUNCTION_77	IF_3
0x40064fd	        0x837db402	               cmp dword [rbp - 0x4c], 2	      3260	channel.c	FUNCTION_77	IF_3
0x4006501	            0x7566	                           jne 0x4006569	      3260	channel.c	FUNCTION_77	IF_3
0x4006503	        0x837db401	               cmp dword [rbp - 0x4c], 1	      3262	channel.c	FUNCTION_77	IF_3
0x4006507	            0x7507	                           jne 0x4006510	      3262	channel.c	FUNCTION_77	IF_3
0x4006509	      0xb802000000	                              mov eax, 2	      3262	channel.c	FUNCTION_77	IF_3
0x400650e	            0xeb05	                           jmp 0x4006515	      3262	channel.c	FUNCTION_77	IF_3
0x4006510	      0xb801000000	                              mov eax, 1	      3262	channel.c	FUNCTION_77	IF_3
0x4006515	          0x8945cc	             mov dword [rbp - 0x34], eax	      3262	channel.c	FUNCTION_77	IF_3
0x4006518	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400651c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400651f	        0x48c1e004	                              shl rax, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006523	          0x4889c1	                            mov rcx, rax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006526	        0x48c1e104	                              shl rcx, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400652a	          0x4801c8	                            add rax, rcx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400652d	          0x4801d0	                            add rax, rdx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006530	        0x4883c018	                           add rax, 0x18	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006534	            0x8b10	                    mov edx, dword [rax]	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006536	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400653a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400653d	        0x48c1e004	                              shl rax, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006541	          0x4889c6	                            mov rsi, rax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006544	        0x48c1e604	                              shl rsi, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006548	          0x4801f0	                            add rax, rsi	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400654b	          0x4801c8	                            add rax, rcx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x400654e	        0x4883c018	                           add rax, 0x18	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006552	            0x8b00	                    mov eax, dword [rax]	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006554	            0x39c2	                            cmp edx, eax	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006556	            0x7511	                           jne 0x4006569	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4006558	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x400655b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x400655f	            0x89d6	                            mov esi, edx	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x4006561	          0x4889c7	                            mov rdi, rax	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x4006564	      0xe8e0b3ffff	                  call sym.ch_close_part	      3265	channel.c	FUNCTION_77	IF_3	CALL_5
0x4006569	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3267	channel.c	FUNCTION_77	CALL_6
0x400656c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3267	channel.c	FUNCTION_77	CALL_6
0x4006570	            0x89d6	                            mov esi, edx	      3267	channel.c	FUNCTION_77	CALL_6
0x4006572	          0x4889c7	                            mov rdi, rax	      3267	channel.c	FUNCTION_77	CALL_6
0x4006575	      0xe8cfb3ffff	                  call sym.ch_close_part	      3267	channel.c	FUNCTION_77	CALL_6
0x400657a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3271	channel.c	FUNCTION_77	CALL_7
0x400657d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3271	channel.c	FUNCTION_77	CALL_7
0x4006581	            0x89d6	                            mov esi, edx	      3271	channel.c	FUNCTION_77	CALL_7
0x4006583	          0x4889c7	                            mov rdi, rax	      3271	channel.c	FUNCTION_77	CALL_7
0x4006586	      0xe898a6ffff	     call sym.channel_gui_unregister_one	      3271	channel.c	FUNCTION_77	CALL_7
0x400658b	              0x90	                                     nop	      3273	channel.c	FUNCTION_77
0x400658c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3273	channel.c	FUNCTION_77
0x4006590	    0x644833042528	                xor rax, qword fs:[0x28]	      3273	channel.c	FUNCTION_77
0x4006599	            0x7405	                            je 0x40065a0	      3273	channel.c	FUNCTION_77
0x400659b	      0xe800000000	                          call 0x40065a0	      3273	channel.c	FUNCTION_77
0x40065a0	              0xc9	                                   leave	      3273	channel.c	FUNCTION_77
0x40065a1	              0xc3	                                     ret	      3273	channel.c	FUNCTION_77
channel_get	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,2:SWITCH,0	45
0x4002f0d	              0x55	                                push rbp	      1642	channel.c	FUNCTION_46
0x4002f0e	          0x4889e5	                            mov rbp, rsp	      1642	channel.c	FUNCTION_46
0x4002f11	        0x4883ec30	                           sub rsp, 0x30	      1642	channel.c	FUNCTION_46
0x4002f15	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1642	channel.c	FUNCTION_46
0x4002f19	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1642	channel.c	FUNCTION_46
0x4002f1c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1643	channel.c	FUNCTION_46
0x4002f1f	        0x48c1e004	                              shl rax, 4	      1643	channel.c	FUNCTION_46
0x4002f23	          0x4889c2	                            mov rdx, rax	      1643	channel.c	FUNCTION_46
0x4002f26	        0x48c1e204	                              shl rdx, 4	      1643	channel.c	FUNCTION_46
0x4002f2a	          0x4801d0	                            add rax, rdx	      1643	channel.c	FUNCTION_46
0x4002f2d	        0x488d5020	                   lea rdx, [rax + 0x20]	      1643	channel.c	FUNCTION_46
0x4002f31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1643	channel.c	FUNCTION_46
0x4002f35	          0x4801d0	                            add rax, rdx	      1643	channel.c	FUNCTION_46
0x4002f38	        0x4883c010	                           add rax, 0x10	      1643	channel.c	FUNCTION_46
0x4002f3c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1643	channel.c	FUNCTION_46
0x4002f40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1644	channel.c	FUNCTION_46
0x4002f44	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1644	channel.c	FUNCTION_46
0x4002f48	        0x488945f0	             mov qword [rbp - 0x10], rax	      1644	channel.c	FUNCTION_46
0x4002f4c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1647	channel.c	FUNCTION_46	IF_1
0x4002f51	            0x7507	                           jne 0x4002f5a	      1647	channel.c	FUNCTION_46	IF_1
0x4002f53	      0xb800000000	                              mov eax, 0	      1648	channel.c	FUNCTION_46	IF_1
0x4002f58	            0xeb56	                           jmp 0x4002fb0	      1648	channel.c	FUNCTION_46	IF_1
0x4002f5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1650	channel.c	FUNCTION_46
0x4002f5e	          0x488b00	                    mov rax, qword [rax]	      1650	channel.c	FUNCTION_46
0x4002f61	        0x488945f8	                mov qword [rbp - 8], rax	      1650	channel.c	FUNCTION_46
0x4002f65	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1651	channel.c	FUNCTION_46
0x4002f69	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1651	channel.c	FUNCTION_46
0x4002f6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1651	channel.c	FUNCTION_46
0x4002f71	        0x48895010	             mov qword [rax + 0x10], rdx	      1651	channel.c	FUNCTION_46
0x4002f75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1652	channel.c	FUNCTION_46	IF_2
0x4002f79	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4002f7d	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x4002f80	            0x750e	                           jne 0x4002f90	      1652	channel.c	FUNCTION_46	IF_2
0x4002f82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1653	channel.c	FUNCTION_46	IF_2
0x4002f86	    0x48c740180000	               mov qword [rax + 0x18], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4002f8e	            0xeb10	                           jmp 0x4002fa0	      1653	channel.c	FUNCTION_46	IF_2
0x4002f90	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1655	channel.c	FUNCTION_46	ELSE_1
0x4002f94	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1655	channel.c	FUNCTION_46	ELSE_1
0x4002f98	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4002fa0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1656	channel.c	FUNCTION_46	CALL_1
0x4002fa4	          0x4889c7	                            mov rdi, rax	      1656	channel.c	FUNCTION_46	CALL_1
0x4002fa7	      0xe800000000	                          call 0x4002fac	      1656	channel.c	FUNCTION_46	CALL_1
0x4002fac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1657	channel.c	FUNCTION_46
0x4002fb0	              0xc9	                                   leave	      1658	channel.c	FUNCTION_46
0x4002fb1	              0xc3	                                     ret	      1658	channel.c	FUNCTION_46
job_status	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,2:IF,3:SWITCH,0	30
0x400b7b8	              0x55	                                push rbp	      5705	channel.c	FUNCTION_131
0x400b7b9	          0x4889e5	                            mov rbp, rsp	      5705	channel.c	FUNCTION_131
0x400b7bc	        0x4883ec20	                           sub rsp, 0x20	      5705	channel.c	FUNCTION_131
0x400b7c0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5705	channel.c	FUNCTION_131
0x400b7c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5708	channel.c	FUNCTION_131	IF_1
0x400b7c8	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5708	channel.c	FUNCTION_131	IF_1
0x400b7cb	          0x83f801	                              cmp eax, 1	      5708	channel.c	FUNCTION_131	IF_1
0x400b7ce	            0x760a	                           jbe 0x400b7da	      5708	channel.c	FUNCTION_131	IF_1
0x400b7d0	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5710	channel.c	FUNCTION_131	IF_1
0x400b7d8	            0xeb3d	                           jmp 0x400b817	      5710	channel.c	FUNCTION_131	IF_1
0x400b7da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400b7de	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400b7e1	            0x85c0	                           test eax, eax	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400b7e3	            0x750a	                           jne 0x400b7ef	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400b7e5	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5712	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400b7ed	            0xeb28	                           jmp 0x400b817	      5712	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400b7ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x400b7f3	          0x4889c7	                            mov rdi, rax	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x400b7f6	      0xe800000000	                          call 0x400b7fb	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x400b7fb	        0x488945f8	                mov qword [rbp - 8], rax	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x400b7ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400b803	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400b806	          0x83f802	                              cmp eax, 2	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400b809	            0x750c	                           jne 0x400b817	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400b80b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5717	channel.c	FUNCTION_131	ELSE_2	CALL_2
0x400b80f	          0x4889c7	                            mov rdi, rax	      5717	channel.c	FUNCTION_131	ELSE_2	CALL_2
0x400b812	      0xe800000000	                          call 0x400b817	      5717	channel.c	FUNCTION_131	ELSE_2	CALL_2
0x400b817	        0x488b45f8	                mov rax, qword [rbp - 8]	      5719	channel.c	FUNCTION_131
0x400b81b	              0xc9	                                   leave	      5720	channel.c	FUNCTION_131
0x400b81c	              0xc3	                                     ret	      5720	channel.c	FUNCTION_131
channel_write_new_lines	ELSE,1:WHILE,0:FOR,2:DO,0:functions,0:CALL,5:IF,7:SWITCH,0	96
0x4002c40	              0x55	                                push rbp	      1542	channel.c	FUNCTION_42
0x4002c41	          0x4889e5	                            mov rbp, rsp	      1542	channel.c	FUNCTION_42
0x4002c44	        0x4883ec30	                           sub rsp, 0x30	      1542	channel.c	FUNCTION_42
0x4002c48	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1542	channel.c	FUNCTION_42
0x4002c4c	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1544	channel.c	FUNCTION_42
0x4002c53	    0x488b05000000	            mov rax, qword [0x04002c5a] 	      1548	channel.c	FUNCTION_42	FOR_1
0x4002c5a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1548	channel.c	FUNCTION_42	FOR_1
0x4002c5e	      0xe935010000	                           jmp 0x4002d98	      1548	channel.c	FUNCTION_42	FOR_1
0x4002c63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1550	channel.c	FUNCTION_42	FOR_1
0x4002c67	    0x480548030000	                          add rax, 0x348	      1550	channel.c	FUNCTION_42	FOR_1
0x4002c6d	        0x488945f8	                mov qword [rbp - 8], rax	      1550	channel.c	FUNCTION_42	FOR_1
0x4002c71	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1552	channel.c	FUNCTION_42	FOR_1
0x4002c78	        0x488b45f8	                mov rax, qword [rbp - 8]	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c7c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c83	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c87	     0xf8500010000	                           jne 0x4002d8d	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c91	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c97	            0x85c0	                           test eax, eax	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c99	     0xf84ee000000	                            je 0x4002d8d	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002c9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4002ca3	            0x8b00	                    mov eax, dword [rax]	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4002ca5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4002ca8	     0xf84de000000	                            je 0x4002d8c	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4002cae	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002cb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cb9	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cc0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cc4	            0xeb30	                           jmp 0x4002cf6	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4002cca	          0x4889c7	                            mov rdi, rax	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4002ccd	      0xe833faffff	             call sym.can_write_buf_line	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4002cd2	            0x85c0	                           test eax, eax	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4002cd4	            0x742f	                            je 0x4002d05	      1562	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x4002cd6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4002cda	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4002cde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4002ce2	          0x4889ce	                            mov rsi, rcx	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4002ce5	          0x4889c7	                            mov rdi, rax	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4002ce8	      0xe8f6f8ffff	                 call sym.write_buf_line	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4002ced	        0x8345e401	               add dword [rbp - 0x1c], 1	      1565	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cf1	      0x488345f001	               add qword [rbp - 0x10], 1	      1560	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cf6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cfa	          0x488b00	                    mov rax, qword [rax]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002cfd	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002d01	            0x7fc3	                            jg 0x4002cc6	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002d03	            0xeb01	                           jmp 0x4002d06	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4002d05	              0x90	                                     nop	      1563	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	IF_3
0x4002d06	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x4002d0a	            0x751f	                           jne 0x4002d2b	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x4002d0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d10	          0x8d50ff	                      lea edx, [rax - 1]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d17	      0xbe00000000	                              mov esi, 0	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d1c	          0x4889c7	                            mov rdi, rax	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d1f	      0xb800000000	                              mov eax, 0	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d24	      0xe800000000	                          call 0x4002d29	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d29	            0xeb1f	                           jmp 0x4002d4a	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4002d2b	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1570	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d2f	            0x7e19	                           jle 0x4002d4a	      1570	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d31	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d38	      0xbe00000000	                              mov esi, 0	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d3d	          0x4889c7	                            mov rdi, rax	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d40	      0xb800000000	                              mov eax, 0	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d45	      0xe800000000	                          call 0x4002d4a	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4002d4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d4e	          0x488b00	                    mov rax, qword [rax]	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d51	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d55	            0x7e24	                           jle 0x4002d7b	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d57	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1574	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d5b	          0x488b00	                    mov rax, qword [rax]	      1574	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d5e	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      1574	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d62	          0x4889c2	                            mov rdx, rax	      1574	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4002d65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4002d69	      0xbe00000000	                              mov esi, 0	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4002d6e	          0x4889c7	                            mov rdi, rax	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4002d71	      0xb800000000	                              mov eax, 0	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4002d76	      0xe800000000	                          call 0x4002d7b	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4002d7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002d7f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002d83	    0x488990080100	            mov qword [rax + 0x108], rdx	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002d8a	            0xeb01	                           jmp 0x4002d8d	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x4002d8c	              0x90	                                     nop	      1557	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4002d8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1548	channel.c	FUNCTION_42	FOR_1
0x4002d91	          0x488b00	                    mov rax, qword [rax]	      1548	channel.c	FUNCTION_42	FOR_1
0x4002d94	        0x488945e8	             mov qword [rbp - 0x18], rax	      1548	channel.c	FUNCTION_42	FOR_1
0x4002d98	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1548	channel.c	FUNCTION_42	FOR_1
0x4002d9d	     0xf85c0feffff	                           jne 0x4002c63	      1548	channel.c	FUNCTION_42	FOR_1
0x4002da3	        0x837de000	               cmp dword [rbp - 0x20], 0	      1579	channel.c	FUNCTION_42	IF_7
0x4002da7	            0x750e	                           jne 0x4002db7	      1579	channel.c	FUNCTION_42	IF_7
0x4002da9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1580	channel.c	FUNCTION_42	IF_7
0x4002dad	    0xc780341c0000	            mov dword [rax + 0x1c34], 0 	      1580	channel.c	FUNCTION_42	IF_7
0x4002db7	              0x90	                                     nop	      1581	channel.c	FUNCTION_42
0x4002db8	              0xc9	                                   leave	      1581	channel.c	FUNCTION_42
0x4002db9	              0xc3	                                     ret	      1581	channel.c	FUNCTION_42
channel_unref	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	22
0x4000843	              0x55	                                push rbp	       418	channel.c	FUNCTION_15
0x4000844	          0x4889e5	                            mov rbp, rsp	       418	channel.c	FUNCTION_15
0x4000847	        0x4883ec10	                           sub rsp, 0x10	       418	channel.c	FUNCTION_15
0x400084b	        0x48897df8	                mov qword [rbp - 8], rdi	       418	channel.c	FUNCTION_15
0x400084f	      0x48837df800	                  cmp qword [rbp - 8], 0	       419	channel.c	FUNCTION_15	IF_1
0x4000854	            0x7433	                            je 0x4000889	       419	channel.c	FUNCTION_15	IF_1
0x4000856	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	channel.c	FUNCTION_15	IF_1
0x400085a	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x4000860	          0x8d50ff	                      lea edx, [rax - 1]	       419	channel.c	FUNCTION_15	IF_1
0x4000863	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	channel.c	FUNCTION_15	IF_1
0x4000867	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	       419	channel.c	FUNCTION_15	IF_1
0x400086d	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	channel.c	FUNCTION_15	IF_1
0x4000871	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x4000877	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x4000879	            0x7f0e	                            jg 0x4000889	       419	channel.c	FUNCTION_15	IF_1
0x400087b	        0x488b45f8	                mov rax, qword [rbp - 8]	       420	channel.c	FUNCTION_15	CALL_1
0x400087f	          0x4889c7	                            mov rdi, rax	       420	channel.c	FUNCTION_15	CALL_1
0x4000882	      0xe886ffffff	               call sym.channel_may_free	       420	channel.c	FUNCTION_15	CALL_1
0x4000887	            0xeb05	                           jmp 0x400088e	       420	channel.c	FUNCTION_15	CALL_1
0x4000889	      0xb800000000	                              mov eax, 0	       421	channel.c	FUNCTION_15
0x400088e	              0xc9	                                   leave	       422	channel.c	FUNCTION_15
0x400088f	              0xc3	                                     ret	       422	channel.c	FUNCTION_15
job_unref	ELSE,1:WHILE,0:FOR,0:DO,0:functions,0:CALL,5:IF,4:SWITCH,0	51
0x400aca1	              0x55	                                push rbp	      5332	channel.c	FUNCTION_122
0x400aca2	          0x4889e5	                            mov rbp, rsp	      5332	channel.c	FUNCTION_122
0x400aca5	        0x4883ec10	                           sub rsp, 0x10	      5332	channel.c	FUNCTION_122
0x400aca9	        0x48897df8	                mov qword [rbp - 8], rdi	      5332	channel.c	FUNCTION_122
0x400acad	      0x48837df800	                  cmp qword [rbp - 8], 0	      5333	channel.c	FUNCTION_122	IF_1
0x400acb2	     0xf84a4000000	                            je 0x400ad5c	      5333	channel.c	FUNCTION_122	IF_1
0x400acb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5333	channel.c	FUNCTION_122	IF_1
0x400acbc	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5333	channel.c	FUNCTION_122	IF_1
0x400acbf	          0x8d50ff	                      lea edx, [rax - 1]	      5333	channel.c	FUNCTION_122	IF_1
0x400acc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5333	channel.c	FUNCTION_122	IF_1
0x400acc6	          0x895058	             mov dword [rax + 0x58], edx	      5333	channel.c	FUNCTION_122	IF_1
0x400acc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5333	channel.c	FUNCTION_122	IF_1
0x400accd	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5333	channel.c	FUNCTION_122	IF_1
0x400acd0	            0x85c0	                           test eax, eax	      5333	channel.c	FUNCTION_122	IF_1
0x400acd2	     0xf8f84000000	                            jg 0x400ad5c	      5333	channel.c	FUNCTION_122	IF_1
0x400acd8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x400acdc	          0x4889c7	                            mov rdi, rax	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x400acdf	      0xe866f9ffff	       call sym.job_channel_still_useful	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x400ace4	            0x85c0	                           test eax, eax	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x400ace6	            0x7574	                           jne 0x400ad5c	      5337	channel.c	FUNCTION_122	IF_1	IF_2	CALL_1
0x400ace8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5341	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_2
0x400acec	          0x4889c7	                            mov rdi, rax	      5341	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_2
0x400acef	      0xe81af9ffff	             call sym.job_need_end_check	      5341	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_2
0x400acf4	            0x85c0	                           test eax, eax	      5341	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_2
0x400acf6	            0x750e	                           jne 0x400ad06	      5341	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_2
0x400acf8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5343	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_3
0x400acfc	          0x4889c7	                            mov rdi, rax	      5343	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_3
0x400acff	      0xe8d9f8ffff	                       call sym.job_free	      5343	channel.c	FUNCTION_122	IF_1	IF_2	IF_3	CALL_3
0x400ad04	            0xeb56	                           jmp 0x400ad5c	      5356	channel.c	FUNCTION_122
0x400ad06	        0x488b45f8	                mov rax, qword [rbp - 8]	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad0a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad0e	          0x4885c0	                           test rax, rax	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad11	            0x7449	                            je 0x400ad5c	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad13	        0x488b45f8	                mov rax, qword [rbp - 8]	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ad17	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ad1b	      0xbe00000000	                              mov esi, 0	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ad20	          0x4889c7	                            mov rdi, rax	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ad23	      0xb800000000	                              mov eax, 0	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ad28	      0xe800000000	                          call 0x400ad2d	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ad2d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad31	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad35	    0x48c780a80400	              mov qword [rax + 0x4a8], 0	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad40	        0x488b45f8	                mov rax, qword [rbp - 8]	      5351	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x400ad44	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5351	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x400ad48	          0x4889c7	                            mov rdi, rax	      5351	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x400ad4b	      0xe800000000	                          call 0x400ad50	      5351	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x400ad50	        0x488b45f8	                mov rax, qword [rbp - 8]	      5352	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad54	    0x48c740600000	               mov qword [rax + 0x60], 0	      5352	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400ad5c	              0x90	                                     nop	      5356	channel.c	FUNCTION_122
0x400ad5d	              0xc9	                                   leave	      5356	channel.c	FUNCTION_122
0x400ad5e	              0xc3	                                     ret	      5356	channel.c	FUNCTION_122
channel_close	ELSE,0:WHILE,1:FOR,2:DO,0:functions,0:CALL,17:IF,7:SWITCH,0	190
0x4005ab3	              0x55	                                push rbp	      2868	channel.c	FUNCTION_68
0x4005ab4	          0x4889e5	                            mov rbp, rsp	      2868	channel.c	FUNCTION_68
0x4005ab7	              0x53	                                push rbx	      2868	channel.c	FUNCTION_68
0x4005ab8	        0x4883ec58	                           sub rsp, 0x58	      2868	channel.c	FUNCTION_68
0x4005abc	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2868	channel.c	FUNCTION_68
0x4005ac0	          0x8975a4	             mov dword [rbp - 0x5c], esi	      2868	channel.c	FUNCTION_68
0x4005ac3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	channel.c	FUNCTION_68
0x4005acc	        0x488945e8	             mov qword [rbp - 0x18], rax	      2868	channel.c	FUNCTION_68
0x4005ad0	            0x31c0	                            xor eax, eax	      2868	channel.c	FUNCTION_68
0x4005ad2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2869	channel.c	FUNCTION_68	CALL_1
0x4005ad6	      0xbe00000000	                              mov esi, 0	      2869	channel.c	FUNCTION_68	CALL_1
0x4005adb	          0x4889c7	                            mov rdi, rax	      2869	channel.c	FUNCTION_68	CALL_1
0x4005ade	      0xb800000000	                              mov eax, 0	      2869	channel.c	FUNCTION_68	CALL_1
0x4005ae3	      0xe800000000	                          call 0x4005ae8	      2869	channel.c	FUNCTION_68	CALL_1
0x4005ae8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2872	channel.c	FUNCTION_68	CALL_2
0x4005aec	          0x4889c7	                            mov rdi, rax	      2872	channel.c	FUNCTION_68	CALL_2
0x4005aef	      0xe8cbb1ffff	         call sym.channel_gui_unregister	      2872	channel.c	FUNCTION_68	CALL_2
0x4005af4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2875	channel.c	FUNCTION_68	CALL_3
0x4005af8	      0xbe00000000	                              mov esi, 0	      2875	channel.c	FUNCTION_68	CALL_3
0x4005afd	          0x4889c7	                            mov rdi, rax	      2875	channel.c	FUNCTION_68	CALL_3
0x4005b00	      0xe844beffff	                  call sym.ch_close_part	      2875	channel.c	FUNCTION_68	CALL_3
0x4005b05	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2876	channel.c	FUNCTION_68	CALL_4
0x4005b09	      0xbe03000000	                              mov esi, 3	      2876	channel.c	FUNCTION_68	CALL_4
0x4005b0e	          0x4889c7	                            mov rdi, rax	      2876	channel.c	FUNCTION_68	CALL_4
0x4005b11	      0xe833beffff	                  call sym.ch_close_part	      2876	channel.c	FUNCTION_68	CALL_4
0x4005b16	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2877	channel.c	FUNCTION_68	CALL_5
0x4005b1a	      0xbe01000000	                              mov esi, 1	      2877	channel.c	FUNCTION_68	CALL_5
0x4005b1f	          0x4889c7	                            mov rdi, rax	      2877	channel.c	FUNCTION_68	CALL_5
0x4005b22	      0xe822beffff	                  call sym.ch_close_part	      2877	channel.c	FUNCTION_68	CALL_5
0x4005b27	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2878	channel.c	FUNCTION_68	CALL_6
0x4005b2b	      0xbe02000000	                              mov esi, 2	      2878	channel.c	FUNCTION_68	CALL_6
0x4005b30	          0x4889c7	                            mov rdi, rax	      2878	channel.c	FUNCTION_68	CALL_6
0x4005b33	      0xe811beffff	                  call sym.ch_close_part	      2878	channel.c	FUNCTION_68	CALL_6
0x4005b38	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2880	channel.c	FUNCTION_68	IF_1
0x4005b3c	     0xf845f020000	                            je 0x4005da1	      2880	channel.c	FUNCTION_68	IF_1
0x4005b42	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4005b46	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4005b4d	          0x4885c0	                           test rax, rax	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4005b50	            0x7416	                            je 0x4005b68	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4005b52	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4005b56	      0xbe00000000	                              mov esi, 0	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4005b5b	          0x4889c7	                            mov rdi, rax	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4005b5e	      0xb800000000	                              mov eax, 0	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4005b63	      0xe800000000	                          call 0x4005b68	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4005b68	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4005b6f	      0xe9af000000	                           jmp 0x4005c23	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4005b74	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b78	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b7f	          0x4885c0	                           test rax, rax	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b82	            0x7526	                           jne 0x4005baa	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b84	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b88	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b8b	        0x48c1e004	                              shl rax, 4	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b8f	          0x4889c1	                            mov rcx, rax	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b92	        0x48c1e104	                              shl rcx, 4	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b96	          0x4801c8	                            add rax, rcx	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b99	          0x4801d0	                            add rax, rdx	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005b9c	    0x4805f8000000	                           add rax, 0xf8	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005ba2	          0x488b00	                    mov rax, qword [rax]	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005ba5	          0x4885c0	                           test rax, rax	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005ba8	            0x7475	                            je 0x4005c1f	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005baa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005bae	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005bb4	          0x8d5001	                      lea edx, [rax + 1]	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005bb7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005bbb	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005bc1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2896	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4
0x4005bc5	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2896	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4
0x4005bcc	          0x4885c0	                           test rax, rax	      2896	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4
0x4005bcf	            0x7521	                           jne 0x4005bf2	      2896	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4
0x4005bd1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4005bd4	    0x488b14c50000	                  mov rdx, qword [rax*8]	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4005bdc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4005be0	      0xbe00000000	                              mov esi, 0	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4005be5	          0x4889c7	                            mov rdi, rax	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4005be8	      0xb800000000	                              mov eax, 0	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4005bed	      0xe800000000	                          call 0x4005bf2	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4005bf2	              0x90	                                     nop	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005bf3	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005bf6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005bfa	            0x89d6	                            mov esi, edx	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005bfc	          0x4889c7	                            mov rdi, rax	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005bff	      0xe801f0ffff	            call sym.may_invoke_callback	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005c04	            0x85c0	                           test eax, eax	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005c06	            0x75eb	                           jne 0x4005bf3	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4005c08	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005c0c	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005c12	          0x8d50ff	                      lea edx, [rax - 1]	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005c15	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005c19	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4005c1f	        0x8345bc01	               add dword [rbp - 0x44], 1	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4005c23	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4005c27	     0xf8647ffffff	                           jbe 0x4005b74	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4005c2d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c31	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c38	          0x4885c0	                           test rax, rax	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c3b	     0xf8460010000	                            je 0x4005da1	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c41	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c45	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c4b	          0x8d5001	                      lea edx, [rax + 1]	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c4e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c52	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c58	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2915	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c5c	    0x488b90900400	           mov rdx, qword [rax + 0x490] 	      2915	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c63	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4005c67	      0xbe00000000	                              mov esi, 0	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4005c6c	          0x4889c7	                            mov rdi, rax	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4005c6f	      0xb800000000	                              mov eax, 0	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4005c74	      0xe800000000	                          call 0x4005c79	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x4005c79	    0xc745d00a0000	             mov dword [rbp - 0x30], 0xa	      2916	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c80	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2917	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c84	        0x488945d8	             mov qword [rbp - 0x28], rax	      2917	channel.c	FUNCTION_68	IF_1	IF_5
0x4005c88	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005c8c	    0x488b98980400	           mov rbx, qword [rax + 0x498] 	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005c93	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005c97	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005c9e	          0x4889c7	                            mov rdi, rax	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005ca1	      0xe800000000	                          call 0x4005ca6	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005ca6	            0x89c7	                            mov edi, eax	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005ca8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cac	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cb3	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cb7	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cbb	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cbd	              0x53	                                push rbx	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cbe	            0x6a01	                                  push 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cc0	        0x488d4db8	                   lea rcx, [rbp - 0x48]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cc4	              0x51	                                push rcx	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cc5	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cc7	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cc9	    0x41b900000000	                              mov r9d, 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005ccf	          0x4989f0	                             mov r8, rsi	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cd2	      0xb901000000	                              mov ecx, 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cd7	            0x89fe	                            mov esi, edi	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cd9	          0x4889c7	                            mov rdi, rax	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005cdc	      0xe800000000	                          call 0x4005ce1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005ce1	        0x4883c430	                           add rsp, 0x30	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x4005ce5	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4005ce9	          0x4889c7	                            mov rdi, rax	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4005cec	      0xe800000000	                          call 0x4005cf1	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x4005cf1	    0xc70500000000	               mov dword [0x04005cfb], 1	      2922	channel.c	FUNCTION_68	IF_1	IF_5
0x4005cfb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4005cff	    0x488b90980400	           mov rdx, qword [rax + 0x498] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4005d06	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4005d0a	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4005d11	          0x4889d6	                            mov rsi, rdx	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4005d14	          0x4889c7	                            mov rdi, rax	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4005d17	      0xe800000000	                          call 0x4005d1c	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4005d1c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2926	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d20	    0x48c780900400	              mov qword [rax + 0x490], 0	      2926	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d2b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2927	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d2f	    0x48c780980400	              mov qword [rax + 0x498], 0	      2927	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d3a	    0x8b0500000000	            mov eax, dword [0x04005d40] 	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4005d40	            0x85c0	                           test eax, eax	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4005d42	            0x7414	                            je 0x4005d58	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4005d44	    0xc70500000000	               mov dword [0x04005d4e], 0	      2931	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4005d4e	      0xbf01000000	                              mov edi, 1	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4005d53	      0xe800000000	                          call 0x4005d58	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4005d58	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4005d5c	    0x8b80a0040000	           mov eax, dword [rax + 0x4a0] 	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4005d62	            0x85c0	                           test eax, eax	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4005d64	            0x7524	                           jne 0x4005d8a	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4005d66	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2937	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d6d	            0xeb15	                           jmp 0x4005d84	      2937	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d6f	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d72	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d76	            0x89d6	                            mov esi, edx	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d78	          0x4889c7	                            mov rdi, rax	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d7b	      0xe82feeffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d80	        0x8345bc01	               add dword [rbp - 0x44], 1	      2937	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d84	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      2937	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d88	            0x76e5	                           jbe 0x4005d6f	      2937	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4005d8a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d8e	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d94	          0x8d50ff	                      lea edx, [rax - 1]	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d97	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x4005d9b	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x4005da1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2944	channel.c	FUNCTION_68
0x4005da5	    0x48c780780400	              mov qword [rax + 0x478], 0	      2944	channel.c	FUNCTION_68
0x4005db0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2947	channel.c	FUNCTION_68	CALL_17
0x4005db4	          0x4889c7	                            mov rdi, rax	      2947	channel.c	FUNCTION_68	CALL_17
0x4005db7	      0xe800000000	                          call 0x4005dbc	      2947	channel.c	FUNCTION_68	CALL_17
0x4005dbc	              0x90	                                     nop	      2949	channel.c	FUNCTION_68
0x4005dbd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2949	channel.c	FUNCTION_68
0x4005dc1	    0x644833042528	                xor rax, qword fs:[0x28]	      2949	channel.c	FUNCTION_68
0x4005dca	            0x7405	                            je 0x4005dd1	      2949	channel.c	FUNCTION_68
0x4005dcc	      0xe800000000	                          call 0x4005dd1	      2949	channel.c	FUNCTION_68
0x4005dd1	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2949	channel.c	FUNCTION_68
0x4005dd5	              0xc9	                                   leave	      2949	channel.c	FUNCTION_68
0x4005dd6	              0xc3	                                     ret	      2949	channel.c	FUNCTION_68
channel_gui_register_one	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,8:IF,4:SWITCH,0	83
0x4000a24	              0x55	                                push rbp	       520	channel.c	FUNCTION_22
0x4000a25	          0x4889e5	                            mov rbp, rsp	       520	channel.c	FUNCTION_22
0x4000a28	        0x4883ec10	                           sub rsp, 0x10	       520	channel.c	FUNCTION_22
0x4000a2c	        0x48897df8	                mov qword [rbp - 8], rdi	       520	channel.c	FUNCTION_22
0x4000a30	          0x8975f4	              mov dword [rbp - 0xc], esi	       520	channel.c	FUNCTION_22
0x4000a33	    0x8b0500000000	            mov eax, dword [0x04000a39] 	       521	channel.c	FUNCTION_22	IF_1
0x4000a39	            0x85c0	                           test eax, eax	       521	channel.c	FUNCTION_22	IF_1
0x4000a3b	            0x750e	                           jne 0x4000a4b	       521	channel.c	FUNCTION_22	IF_1
0x4000a3d	    0x8b0500000000	            mov eax, dword [0x04000a43] 	       521	channel.c	FUNCTION_22	IF_1
0x4000a43	            0x85c0	                           test eax, eax	       521	channel.c	FUNCTION_22	IF_1
0x4000a45	     0xf84ee000000	                            je 0x4000b39	       521	channel.c	FUNCTION_22	IF_1
0x4000a4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	channel.c	FUNCTION_22	IF_2
0x4000a4f	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	       525	channel.c	FUNCTION_22	IF_2
0x4000a55	            0x85c0	                           test eax, eax	       525	channel.c	FUNCTION_22	IF_2
0x4000a57	     0xf85df000000	                           jne 0x4000b3c	       525	channel.c	FUNCTION_22	IF_2
0x4000a5d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       547	channel.c	FUNCTION_22	IF_4
0x4000a61	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       547	channel.c	FUNCTION_22	IF_4
0x4000a64	        0x48c1e004	                              shl rax, 4	       547	channel.c	FUNCTION_22	IF_4
0x4000a68	          0x4889c1	                            mov rcx, rax	       547	channel.c	FUNCTION_22	IF_4
0x4000a6b	        0x48c1e104	                              shl rcx, 4	       547	channel.c	FUNCTION_22	IF_4
0x4000a6f	          0x4801c8	                            add rax, rcx	       547	channel.c	FUNCTION_22	IF_4
0x4000a72	          0x4801d0	                            add rax, rdx	       547	channel.c	FUNCTION_22	IF_4
0x4000a75	        0x4883c01c	                           add rax, 0x1c	       547	channel.c	FUNCTION_22	IF_4
0x4000a79	            0x8b00	                    mov eax, dword [rax]	       547	channel.c	FUNCTION_22	IF_4
0x4000a7b	            0x85c0	                           test eax, eax	       547	channel.c	FUNCTION_22	IF_4
0x4000a7d	     0xf85ba000000	                           jne 0x4000b3d	       547	channel.c	FUNCTION_22	IF_4
0x4000a83	        0x488b55f8	                mov rdx, qword [rbp - 8]	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a87	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a8a	        0x48c1e004	                              shl rax, 4	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a8e	          0x4889c1	                            mov rcx, rax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a91	        0x48c1e104	                              shl rcx, 4	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a95	          0x4801c8	                            add rax, rcx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a98	          0x4801d0	                            add rax, rdx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a9b	        0x4883c018	                           add rax, 0x18	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000a9f	            0x8b08	                    mov ecx, dword [rax]	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000aa1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000aa4	    0x488b14c50000	                  mov rdx, qword [rax*8]	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000aac	        0x488b45f8	                mov rax, qword [rbp - 8]	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000ab0	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000ab5	          0x4889c7	                            mov rdi, rax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000ab8	      0xb800000000	                              mov eax, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000abd	      0xe800000000	                          call 0x4000ac2	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4000ac2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       568	channel.c	FUNCTION_22	IF_4
0x4000ac6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       568	channel.c	FUNCTION_22	IF_4
0x4000ac9	        0x48c1e004	                              shl rax, 4	       568	channel.c	FUNCTION_22	IF_4
0x4000acd	          0x4889c1	                            mov rcx, rax	       568	channel.c	FUNCTION_22	IF_4
0x4000ad0	        0x48c1e104	                              shl rcx, 4	       568	channel.c	FUNCTION_22	IF_4
0x4000ad4	          0x4801c8	                            add rax, rcx	       568	channel.c	FUNCTION_22	IF_4
0x4000ad7	          0x4801d0	                            add rax, rdx	       568	channel.c	FUNCTION_22	IF_4
0x4000ada	        0x4883c018	                           add rax, 0x18	       568	channel.c	FUNCTION_22	IF_4
0x4000ade	            0x8b00	                    mov eax, dword [rax]	       568	channel.c	FUNCTION_22	IF_4
0x4000ae0	            0x4898	                                    cdqe	       568	channel.c	FUNCTION_22	IF_4
0x4000ae2	          0x4889c6	                            mov rsi, rax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000ae5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       564	channel.c	FUNCTION_22	IF_4
0x4000ae9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       564	channel.c	FUNCTION_22	IF_4
0x4000aec	        0x48c1e004	                              shl rax, 4	       564	channel.c	FUNCTION_22	IF_4
0x4000af0	          0x4889c1	                            mov rcx, rax	       564	channel.c	FUNCTION_22	IF_4
0x4000af3	        0x48c1e104	                              shl rcx, 4	       564	channel.c	FUNCTION_22	IF_4
0x4000af7	          0x4801c8	                            add rax, rcx	       564	channel.c	FUNCTION_22	IF_4
0x4000afa	          0x4801d0	                            add rax, rdx	       564	channel.c	FUNCTION_22	IF_4
0x4000afd	        0x4883c018	                           add rax, 0x18	       564	channel.c	FUNCTION_22	IF_4
0x4000b01	            0x8b00	                    mov eax, dword [rax]	       564	channel.c	FUNCTION_22	IF_4
0x4000b03	          0x4889f1	                            mov rcx, rsi	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b06	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b0b	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b10	            0x89c7	                            mov edi, eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b12	      0xe800000000	                          call 0x4000b17	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b17	            0x89c1	                            mov ecx, eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b19	        0x488b55f8	                mov rdx, qword [rbp - 8]	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b1d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b20	        0x48c1e004	                              shl rax, 4	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b24	          0x4889c6	                            mov rsi, rax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b27	        0x48c1e604	                              shl rsi, 4	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b2b	          0x4801f0	                            add rax, rsi	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b2e	          0x4801d0	                            add rax, rdx	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b31	        0x4883c01c	                           add rax, 0x1c	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b35	            0x8908	                    mov dword [rax], ecx	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b37	            0xeb04	                           jmp 0x4000b3d	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4000b39	              0x90	                                     nop	       522	channel.c	FUNCTION_22	IF_1
0x4000b3a	            0xeb01	                           jmp 0x4000b3d	       522	channel.c	FUNCTION_22	IF_1
0x4000b3c	              0x90	                                     nop	       526	channel.c	FUNCTION_22	IF_2
0x4000b3d	              0xc9	                                   leave	       573	channel.c	FUNCTION_22
0x4000b3e	              0xc3	                                     ret	       573	channel.c	FUNCTION_22
remove_json_node	ELSE,2:WHILE,0:FOR,0:DO,0:functions,0:CALL,1:IF,2:SWITCH,0	39
0x4003d12	              0x55	                                push rbp	      2073	channel.c	ELSE_2	FUNCTION_54
0x4003d13	          0x4889e5	                            mov rbp, rsp	      2073	channel.c	ELSE_2	FUNCTION_54
0x4003d16	        0x4883ec10	                           sub rsp, 0x10	      2073	channel.c	ELSE_2	FUNCTION_54
0x4003d1a	        0x48897df8	                mov qword [rbp - 8], rdi	      2073	channel.c	ELSE_2	FUNCTION_54
0x4003d1e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2073	channel.c	ELSE_2	FUNCTION_54
0x4003d22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d26	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d2a	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d2d	            0x7512	                           jne 0x4003d41	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d2f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d33	        0x488b5008	                mov rdx, qword [rax + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d37	        0x488b45f8	                mov rax, qword [rbp - 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d3b	        0x48895008	                mov qword [rax + 8], rdx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d3f	            0xeb14	                           jmp 0x4003d55	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4003d41	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4003d45	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4003d49	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4003d4d	        0x488b5208	                mov rdx, qword [rdx + 8]	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4003d51	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4003d55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d59	        0x488b4008	                mov rax, qword [rax + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d5d	          0x4885c0	                           test rax, rax	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d60	            0x7512	                           jne 0x4003d74	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d62	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d66	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d6e	        0x48895010	             mov qword [rax + 0x10], rdx	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d72	            0xeb14	                           jmp 0x4003d88	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4003d74	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2081	channel.c	FUNCTION_54	ELSE_2
0x4003d78	        0x488b4008	                mov rax, qword [rax + 8]	      2081	channel.c	FUNCTION_54	ELSE_2
0x4003d7c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2081	channel.c	FUNCTION_54	ELSE_2
0x4003d80	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      2081	channel.c	FUNCTION_54	ELSE_2
0x4003d84	        0x48895010	             mov qword [rax + 0x10], rdx	      2081	channel.c	FUNCTION_54	ELSE_2
0x4003d88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4003d8c	          0x4889c7	                            mov rdi, rax	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4003d8f	      0xe800000000	                          call 0x4003d94	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4003d94	              0x90	                                     nop	      2083	channel.c	FUNCTION_54	ELSE_2
0x4003d95	              0xc9	                                   leave	      2083	channel.c	FUNCTION_54	ELSE_2
0x4003d96	              0xc3	                                     ret	      2083	channel.c	FUNCTION_54	ELSE_2
channel_peek	ELSE,0:WHILE,0:FOR,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	18
0x4002e7e	              0x55	                                push rbp	      1612	channel.c	FUNCTION_44
0x4002e7f	          0x4889e5	                            mov rbp, rsp	      1612	channel.c	FUNCTION_44
0x4002e82	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1612	channel.c	FUNCTION_44
0x4002e86	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1612	channel.c	FUNCTION_44
0x4002e89	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1613	channel.c	FUNCTION_44
0x4002e8c	        0x48c1e004	                              shl rax, 4	      1613	channel.c	FUNCTION_44
0x4002e90	          0x4889c2	                            mov rdx, rax	      1613	channel.c	FUNCTION_44
0x4002e93	        0x48c1e204	                              shl rdx, 4	      1613	channel.c	FUNCTION_44
0x4002e97	          0x4801d0	                            add rax, rdx	      1613	channel.c	FUNCTION_44
0x4002e9a	        0x488d5020	                   lea rdx, [rax + 0x20]	      1613	channel.c	FUNCTION_44
0x4002e9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1613	channel.c	FUNCTION_44
0x4002ea2	          0x4801d0	                            add rax, rdx	      1613	channel.c	FUNCTION_44
0x4002ea5	        0x4883c010	                           add rax, 0x10	      1613	channel.c	FUNCTION_44
0x4002ea9	        0x488945f8	                mov qword [rbp - 8], rax	      1613	channel.c	FUNCTION_44
0x4002ead	        0x488b45f8	                mov rax, qword [rbp - 8]	      1615	channel.c	FUNCTION_44
0x4002eb1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1615	channel.c	FUNCTION_44
0x4002eb5	              0x5d	                                 pop rbp	      1616	channel.c	FUNCTION_44
0x4002eb6	              0xc3	                                     ret	      1616	channel.c	FUNCTION_44
channel_save	ELSE,4:WHILE,0:FOR,1:DO,0:functions,0:CALL,9:IF,8:SWITCH,0	196
0x40033f3	              0x55	                                push rbp	      1792	channel.c	FUNCTION_50
0x40033f4	          0x4889e5	                            mov rbp, rsp	      1792	channel.c	FUNCTION_50
0x40033f7	        0x4883ec50	                           sub rsp, 0x50	      1792	channel.c	FUNCTION_50
0x40033fb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1792	channel.c	FUNCTION_50
0x40033ff	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1792	channel.c	FUNCTION_50
0x4003402	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1792	channel.c	FUNCTION_50
0x4003406	          0x894dd0	             mov dword [rbp - 0x30], ecx	      1792	channel.c	FUNCTION_50
0x4003409	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      1792	channel.c	FUNCTION_50
0x400340d	        0x4c894db8	              mov qword [rbp - 0x48], r9	      1792	channel.c	FUNCTION_50
0x4003411	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1794	channel.c	FUNCTION_50
0x4003414	        0x48c1e004	                              shl rax, 4	      1794	channel.c	FUNCTION_50
0x4003418	          0x4889c2	                            mov rdx, rax	      1794	channel.c	FUNCTION_50
0x400341b	        0x48c1e204	                              shl rdx, 4	      1794	channel.c	FUNCTION_50
0x400341f	          0x4801d0	                            add rax, rdx	      1794	channel.c	FUNCTION_50
0x4003422	        0x488d5020	                   lea rdx, [rax + 0x20]	      1794	channel.c	FUNCTION_50
0x4003426	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1794	channel.c	FUNCTION_50
0x400342a	          0x4801d0	                            add rax, rdx	      1794	channel.c	FUNCTION_50
0x400342d	        0x4883c010	                           add rax, 0x10	      1794	channel.c	FUNCTION_50
0x4003431	        0x488945f0	             mov qword [rbp - 0x10], rax	      1794	channel.c	FUNCTION_50
0x4003435	      0xbf20000000	                           mov edi, 0x20	      1798	channel.c	FUNCTION_50	CALL_1
0x400343a	      0xe800000000	                          call 0x400343f	      1798	channel.c	FUNCTION_50	CALL_1
0x400343f	        0x488945f8	                mov qword [rbp - 8], rax	      1798	channel.c	FUNCTION_50	CALL_1
0x4003443	      0x48837df800	                  cmp qword [rbp - 8], 0	      1799	channel.c	FUNCTION_50	IF_1
0x4003448	            0x750a	                           jne 0x4003454	      1799	channel.c	FUNCTION_50	IF_1
0x400344a	      0xb800000000	                              mov eax, 0	      1800	channel.c	FUNCTION_50	IF_1
0x400344f	      0xe963020000	                           jmp 0x40036b7	      1800	channel.c	FUNCTION_50	IF_1
0x4003454	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1803	channel.c	FUNCTION_50	CALL_2
0x4003457	          0x83c001	                              add eax, 1	      1803	channel.c	FUNCTION_50	CALL_2
0x400345a	            0x89c7	                            mov edi, eax	      1803	channel.c	FUNCTION_50	CALL_2
0x400345c	      0xe800000000	                          call 0x4003461	      1803	channel.c	FUNCTION_50	CALL_2
0x4003461	          0x4889c2	                            mov rdx, rax	      1803	channel.c	FUNCTION_50	CALL_2
0x4003464	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	channel.c	FUNCTION_50	CALL_2
0x4003468	          0x488910	                    mov qword [rax], rdx	      1803	channel.c	FUNCTION_50	CALL_2
0x400346b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1804	channel.c	FUNCTION_50	IF_2
0x400346f	          0x488b00	                    mov rax, qword [rax]	      1804	channel.c	FUNCTION_50	IF_2
0x4003472	          0x4885c0	                           test rax, rax	      1804	channel.c	FUNCTION_50	IF_2
0x4003475	            0x7516	                           jne 0x400348d	      1804	channel.c	FUNCTION_50	IF_2
0x4003477	        0x488b45f8	                mov rax, qword [rbp - 8]	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x400347b	          0x4889c7	                            mov rdi, rax	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x400347e	      0xe800000000	                          call 0x4003483	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x4003483	      0xb800000000	                              mov eax, 0	      1807	channel.c	FUNCTION_50	IF_2
0x4003488	      0xe92a020000	                           jmp 0x40036b7	      1807	channel.c	FUNCTION_50	IF_2
0x400348d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1810	channel.c	FUNCTION_50	IF_3
0x4003491	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1810	channel.c	FUNCTION_50	IF_3
0x4003494	        0x48c1e004	                              shl rax, 4	      1810	channel.c	FUNCTION_50	IF_3
0x4003498	          0x4889c1	                            mov rcx, rax	      1810	channel.c	FUNCTION_50	IF_3
0x400349b	        0x48c1e104	                              shl rcx, 4	      1810	channel.c	FUNCTION_50	IF_3
0x400349f	          0x4801c8	                            add rax, rcx	      1810	channel.c	FUNCTION_50	IF_3
0x40034a2	          0x4801d0	                            add rax, rdx	      1810	channel.c	FUNCTION_50	IF_3
0x40034a5	        0x4883c020	                           add rax, 0x20	      1810	channel.c	FUNCTION_50	IF_3
0x40034a9	            0x8b00	                    mov eax, dword [rax]	      1810	channel.c	FUNCTION_50	IF_3
0x40034ab	            0x85c0	                           test eax, eax	      1810	channel.c	FUNCTION_50	IF_3
0x40034ad	     0xf8599000000	                           jne 0x400354c	      1810	channel.c	FUNCTION_50	IF_3
0x40034b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1813	channel.c	FUNCTION_50	IF_3
0x40034b7	          0x488b00	                    mov rax, qword [rax]	      1813	channel.c	FUNCTION_50	IF_3
0x40034ba	        0x488945e8	             mov qword [rbp - 0x18], rax	      1813	channel.c	FUNCTION_50	IF_3
0x40034be	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40034c5	            0xeb58	                           jmp 0x400351f	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40034c7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034ca	          0x4863d0	                         movsxd rdx, eax	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034d1	          0x4801d0	                            add rax, rdx	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034d4	           0xfb600	                   movzx eax, byte [rax]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034d7	            0x3c0d	                             cmp al, 0xd	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034d9	            0x7522	                           jne 0x40034fd	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034db	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034de	          0x83c001	                              add eax, 1	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034e1	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034e4	            0x7d17	                           jge 0x40034fd	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034e6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034e9	            0x4898	                                    cdqe	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034eb	        0x488d5001	                      lea rdx, [rax + 1]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034f3	          0x4801d0	                            add rax, rdx	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034f6	           0xfb600	                   movzx eax, byte [rax]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034f9	            0x3c0a	                             cmp al, 0xa	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034fb	            0x741e	                            je 0x400351b	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40034fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4003501	        0x488d5001	                      lea rdx, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4003505	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4003509	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400350c	          0x4863ca	                         movsxd rcx, edx	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400350f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4003513	          0x4801ca	                            add rdx, rcx	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4003516	           0xfb612	                   movzx edx, byte [rdx]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4003519	            0x8810	                      mov byte [rax], dl	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400351b	        0x8345e401	               add dword [rbp - 0x1c], 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x400351f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4003522	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4003525	            0x7ca0	                            jl 0x40034c7	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4003527	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	channel.c	FUNCTION_50	IF_3
0x400352b	          0xc60000	                       mov byte [rax], 0	      1817	channel.c	FUNCTION_50	IF_3
0x400352e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1818	channel.c	FUNCTION_50	IF_3
0x4003532	        0x488b45f8	                mov rax, qword [rbp - 8]	      1818	channel.c	FUNCTION_50	IF_3
0x4003536	          0x488b00	                    mov rax, qword [rax]	      1818	channel.c	FUNCTION_50	IF_3
0x4003539	          0x4829c2	                            sub rdx, rax	      1818	channel.c	FUNCTION_50	IF_3
0x400353c	          0x4889d0	                            mov rax, rdx	      1818	channel.c	FUNCTION_50	IF_3
0x400353f	          0x4889c2	                            mov rdx, rax	      1818	channel.c	FUNCTION_50	IF_3
0x4003542	        0x488b45f8	                mov rax, qword [rbp - 8]	      1818	channel.c	FUNCTION_50	IF_3
0x4003546	        0x48895008	                mov qword [rax + 8], rdx	      1818	channel.c	FUNCTION_50	IF_3
0x400354a	            0xeb3c	                           jmp 0x4003588	      1818	channel.c	FUNCTION_50	IF_3
0x400354c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x400354f	          0x4863d0	                         movsxd rdx, eax	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4003552	        0x488b45f8	                mov rax, qword [rbp - 8]	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4003556	          0x488b00	                    mov rax, qword [rax]	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4003559	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x400355d	          0x4889ce	                            mov rsi, rcx	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4003560	          0x4889c7	                            mov rdi, rax	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4003563	      0xe800000000	                          call 0x4003568	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4003568	        0x488b45f8	                mov rax, qword [rbp - 8]	      1823	channel.c	FUNCTION_50	ELSE_1
0x400356c	          0x488b10	                    mov rdx, qword [rax]	      1823	channel.c	FUNCTION_50	ELSE_1
0x400356f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1823	channel.c	FUNCTION_50	ELSE_1
0x4003572	            0x4898	                                    cdqe	      1823	channel.c	FUNCTION_50	ELSE_1
0x4003574	          0x4801d0	                            add rax, rdx	      1823	channel.c	FUNCTION_50	ELSE_1
0x4003577	          0xc60000	                       mov byte [rax], 0	      1823	channel.c	FUNCTION_50	ELSE_1
0x400357a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1824	channel.c	FUNCTION_50	ELSE_1
0x400357d	          0x4863d0	                         movsxd rdx, eax	      1824	channel.c	FUNCTION_50	ELSE_1
0x4003580	        0x488b45f8	                mov rax, qword [rbp - 8]	      1824	channel.c	FUNCTION_50	ELSE_1
0x4003584	        0x48895008	                mov qword [rax + 8], rdx	      1824	channel.c	FUNCTION_50	ELSE_1
0x4003588	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1827	channel.c	FUNCTION_50	IF_5
0x400358c	            0x7455	                            je 0x40035e3	      1827	channel.c	FUNCTION_50	IF_5
0x400358e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1830	channel.c	FUNCTION_50	IF_5
0x4003592	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1830	channel.c	FUNCTION_50	IF_5
0x4003596	        0x488b45f8	                mov rax, qword [rbp - 8]	      1830	channel.c	FUNCTION_50	IF_5
0x400359a	        0x48895010	             mov qword [rax + 0x10], rdx	      1830	channel.c	FUNCTION_50	IF_5
0x400359e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1831	channel.c	FUNCTION_50	IF_5
0x40035a2	    0x48c740180000	               mov qword [rax + 0x18], 0	      1831	channel.c	FUNCTION_50	IF_5
0x40035aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x40035ae	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x40035b2	          0x4885c0	                           test rax, rax	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x40035b5	            0x750e	                           jne 0x40035c5	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x40035b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x40035bb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x40035bf	        0x48895018	             mov qword [rax + 0x18], rdx	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x40035c3	            0xeb10	                           jmp 0x40035d5	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x40035c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1835	channel.c	FUNCTION_50	IF_5	ELSE_2
0x40035c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1835	channel.c	FUNCTION_50	IF_5	ELSE_2
0x40035cd	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1835	channel.c	FUNCTION_50	IF_5	ELSE_2
0x40035d1	        0x48895018	             mov qword [rax + 0x18], rdx	      1835	channel.c	FUNCTION_50	IF_5	ELSE_2
0x40035d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1836	channel.c	FUNCTION_50	IF_5
0x40035d9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1836	channel.c	FUNCTION_50	IF_5
0x40035dd	        0x48895010	             mov qword [rax + 0x10], rdx	      1836	channel.c	FUNCTION_50	IF_5
0x40035e1	            0xeb53	                           jmp 0x4003636	      1836	channel.c	FUNCTION_50	IF_5
0x40035e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1841	channel.c	FUNCTION_50	ELSE_3
0x40035e7	    0x48c740100000	               mov qword [rax + 0x10], 0	      1841	channel.c	FUNCTION_50	ELSE_3
0x40035ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1842	channel.c	FUNCTION_50	ELSE_3
0x40035f3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1842	channel.c	FUNCTION_50	ELSE_3
0x40035f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1842	channel.c	FUNCTION_50	ELSE_3
0x40035fb	        0x48895018	             mov qword [rax + 0x18], rdx	      1842	channel.c	FUNCTION_50	ELSE_3
0x40035ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4003603	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4003607	          0x4885c0	                           test rax, rax	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x400360a	            0x750e	                           jne 0x400361a	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x400360c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4003610	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4003614	        0x48895010	             mov qword [rax + 0x10], rdx	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4003618	            0xeb10	                           jmp 0x400362a	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x400361a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1846	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x400361e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1846	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4003622	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1846	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4003626	        0x48895010	             mov qword [rax + 0x10], rdx	      1846	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x400362a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x400362e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4003632	        0x48895018	             mov qword [rax + 0x18], rdx	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4003636	      0xe800000000	                          call 0x400363b	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x400363b	            0x85c0	                           test eax, eax	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x400363d	            0x7473	                            je 0x40036b2	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x400363f	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x4003644	            0x746c	                            je 0x40036b2	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x4003646	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x400364a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x400364e	          0x4889d6	                            mov rsi, rdx	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x4003651	          0x4889c7	                            mov rdi, rax	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x4003654	      0xe8cbcaffff	                    call sym.ch_log_lead	      1852	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_6
0x4003659	    0x488b05000000	            mov rax, qword [0x04003660] 	      1853	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4003660	          0x4889c6	                            mov rsi, rax	      1853	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4003663	      0xbf27000000	                           mov edi, 0x27	      1853	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4003668	      0xe800000000	                          call 0x400366d	      1853	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x400366d	    0x488b15000000	            mov rdx, qword [0x04003674] 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x4003674	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x4003677	          0x4863f0	                         movsxd rsi, eax	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x400367a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x400367e	          0x4889d1	                            mov rcx, rdx	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x4003681	      0xba01000000	                              mov edx, 1	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x4003686	          0x4889c7	                            mov rdi, rax	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x4003689	      0xe800000000	                          call 0x400368e	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x400368e	    0x890500000000	            mov dword [0x04003694], eax 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_8
0x4003694	    0x488b05000000	            mov rax, qword [0x0400369b] 	      1855	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_9
0x400369b	          0x4889c1	                            mov rcx, rax	      1855	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_9
0x400369e	      0xba02000000	                              mov edx, 2	      1855	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_9
0x40036a3	      0xbe01000000	                              mov esi, 1	      1855	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_9
0x40036a8	      0xbf00000000	                              mov edi, 0	      1855	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_9
0x40036ad	      0xe800000000	                          call 0x40036b2	      1855	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_9
0x40036b2	      0xb801000000	                              mov eax, 1	      1857	channel.c	FUNCTION_50
0x40036b7	              0xc9	                                   leave	      1858	channel.c	FUNCTION_50
0x40036b8	              0xc3	                                     ret	      1858	channel.c	FUNCTION_50
channel_open	ELSE,0:WHILE,1:FOR,0:DO,0:functions,0:CALL,52:IF,21:SWITCH,0	573
0x4000cf2	              0x55	                                push rbp	       654	channel.c	FUNCTION_27
0x4000cf3	          0x4889e5	                            mov rbp, rsp	       654	channel.c	FUNCTION_27
0x4000cf6	              0x53	                                push rbx	       654	channel.c	FUNCTION_27
0x4000cf7	    0x4881ecb80100	                          sub rsp, 0x1b8	       654	channel.c	FUNCTION_27
0x4000cfe	    0x4889bd58feff	            mov qword [rbp - 0x1a8], rdi	       654	channel.c	FUNCTION_27
0x4000d05	    0x89b554feffff	            mov dword [rbp - 0x1ac], esi	       654	channel.c	FUNCTION_27
0x4000d0b	    0x899550feffff	            mov dword [rbp - 0x1b0], edx	       654	channel.c	FUNCTION_27
0x4000d11	    0x48898d48feff	            mov qword [rbp - 0x1b8], rcx	       654	channel.c	FUNCTION_27
0x4000d18	    0x64488b042528	                mov rax, qword fs:[0x28]	       654	channel.c	FUNCTION_27
0x4000d21	        0x488945e8	             mov qword [rbp - 0x18], rax	       654	channel.c	FUNCTION_27
0x4000d25	            0x31c0	                            xor eax, eax	       654	channel.c	FUNCTION_27
0x4000d27	    0xc78568feffff	    mov dword [rbp - 0x198], 0xffffffff 	       655	channel.c	FUNCTION_27
0x4000d31	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	       662	channel.c	FUNCTION_27
0x4000d37	    0x89856cfeffff	            mov dword [rbp - 0x194], eax	       662	channel.c	FUNCTION_27
0x4000d3d	      0xe800000000	                          call 0x4000d42	       671	channel.c	FUNCTION_27	CALL_2
0x4000d42	    0x48898590feff	            mov qword [rbp - 0x170], rax	       671	channel.c	FUNCTION_27	CALL_2
0x4000d49	    0x4883bd90feff	              cmp qword [rbp - 0x170], 0	       672	channel.c	FUNCTION_27	IF_1
0x4000d51	            0x751e	                           jne 0x4000d71	       672	channel.c	FUNCTION_27	IF_1
0x4000d53	      0xbe00000000	                              mov esi, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4000d58	      0xbf00000000	                              mov edi, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4000d5d	      0xb800000000	                              mov eax, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4000d62	      0xe8b5f5ffff	                       call sym.ch_error	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4000d67	      0xb800000000	                              mov eax, 0	       675	channel.c	FUNCTION_27	IF_1
0x4000d6c	      0xe956090000	                           jmp 0x40016c7	       675	channel.c	FUNCTION_27	IF_1
0x4000d71	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       680	channel.c	FUNCTION_27	CALL_4
0x4000d78	      0xba10000000	                           mov edx, 0x10	       680	channel.c	FUNCTION_27	CALL_4
0x4000d7d	      0xbe00000000	                              mov esi, 0	       680	channel.c	FUNCTION_27	CALL_4
0x4000d82	          0x4889c7	                            mov rdi, rax	       680	channel.c	FUNCTION_27	CALL_4
0x4000d85	      0xe800000000	                          call 0x4000d8a	       680	channel.c	FUNCTION_27	CALL_4
0x4000d8a	    0x66c785d0feff	               mov word [rbp - 0x130], 2	       681	channel.c	FUNCTION_27
0x4000d93	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       682	channel.c	FUNCTION_27	CALL_5
0x4000d99	           0xfb7c0	                           movzx eax, ax	       682	channel.c	FUNCTION_27	CALL_5
0x4000d9c	            0x89c7	                            mov edi, eax	       682	channel.c	FUNCTION_27	CALL_5
0x4000d9e	      0xe800000000	                          call 0x4000da3	       682	channel.c	FUNCTION_27	CALL_5
0x4000da3	    0x668985d2feff	              mov word [rbp - 0x12e], ax	       682	channel.c	FUNCTION_27	CALL_5
0x4000daa	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4000db1	          0x4889c7	                            mov rdi, rax	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4000db4	      0xe800000000	                          call 0x4000db9	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4000db9	    0x48898598feff	            mov qword [rbp - 0x168], rax	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4000dc0	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4000dc8	            0x755d	                           jne 0x4000e27	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4000dca	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4000dd1	      0xbe00000000	                              mov esi, 0	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4000dd6	          0x4889c7	                            mov rdi, rax	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4000dd9	      0xb800000000	                              mov eax, 0	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4000dde	      0xe839f5ffff	                       call sym.ch_error	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x4000de3	      0xe800000000	                          call 0x4000de8	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000de8	            0x8b00	                    mov eax, dword [rax]	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000dea	            0x89c7	                            mov edi, eax	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000dec	      0xe800000000	                          call 0x4000df1	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000df1	          0x4889c3	                            mov rbx, rax	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000df4	      0xbf00000000	                              mov edi, 0	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000df9	      0xe800000000	                          call 0x4000dfe	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000dfe	          0x4889da	                            mov rdx, rbx	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000e01	          0x4889c6	                            mov rsi, rax	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000e04	      0xbf00000000	                              mov edi, 0	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000e09	      0xe800000000	                          call 0x4000e0e	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x4000e0e	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       687	channel.c	FUNCTION_27	IF_2	CALL_9
0x4000e15	          0x4889c7	                            mov rdi, rax	       687	channel.c	FUNCTION_27	IF_2	CALL_9
0x4000e18	      0xe8a5f9ffff	                   call sym.channel_free	       687	channel.c	FUNCTION_27	IF_2	CALL_9
0x4000e1d	      0xb800000000	                              mov eax, 0	       688	channel.c	FUNCTION_27	IF_2
0x4000e22	      0xe9a0080000	                           jmp 0x40016c7	       688	channel.c	FUNCTION_27	IF_2
0x4000e27	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       695	channel.c	FUNCTION_27	CALL_10
0x4000e2e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       695	channel.c	FUNCTION_27	CALL_10
0x4000e32	          0x488b00	                    mov rax, qword [rax]	       695	channel.c	FUNCTION_27	CALL_10
0x4000e35	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       695	channel.c	FUNCTION_27	CALL_10
0x4000e3c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       696	channel.c	FUNCTION_27	CALL_11
0x4000e43	          0x8b4014	            mov eax, dword [rax + 0x14] 	       696	channel.c	FUNCTION_27	CALL_11
0x4000e46	          0x4863d0	                         movsxd rdx, eax	       696	channel.c	FUNCTION_27	CALL_11
0x4000e49	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       696	channel.c	FUNCTION_27	CALL_11
0x4000e50	    0x488d8dd0feff	                  lea rcx, [rbp - 0x130]	       696	channel.c	FUNCTION_27	CALL_11
0x4000e57	        0x4883c104	                              add rcx, 4	       696	channel.c	FUNCTION_27	CALL_11
0x4000e5b	          0x4889c6	                            mov rsi, rax	       696	channel.c	FUNCTION_27	CALL_11
0x4000e5e	          0x4889cf	                            mov rdi, rcx	       696	channel.c	FUNCTION_27	CALL_11
0x4000e61	      0xe800000000	                          call 0x4000e66	       696	channel.c	FUNCTION_27	CALL_11
0x4000e66	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       702	channel.c	FUNCTION_27	IF_3
0x4000e6d	            0x750a	                           jne 0x4000e79	       702	channel.c	FUNCTION_27	IF_3
0x4000e6f	    0xc78550feffff	              mov dword [rbp - 0x1b0], 1	       703	channel.c	FUNCTION_27	IF_3
0x4000e79	    0x48c78588feff	              mov qword [rbp - 0x178], 0	       711	channel.c	FUNCTION_27	WHILE_1
0x4000e84	    0x83bd68feffff	              cmp dword [rbp - 0x198], 0	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4000e8b	            0x780d	                            js 0x4000e9a	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4000e8d	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4000e93	            0x89c7	                            mov edi, eax	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4000e95	      0xe800000000	                          call 0x4000e9a	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x4000e9a	      0xba00000000	                              mov edx, 0	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4000e9f	      0xbe01000000	                              mov esi, 1	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4000ea4	      0xbf02000000	                              mov edi, 2	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4000ea9	      0xe800000000	                          call 0x4000eae	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4000eae	    0x898568feffff	            mov dword [rbp - 0x198], eax	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4000eb4	    0x83bd68feffff	cmp dword [rbp - 0x198], 0xffffffffffffffff	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4000ebb	            0x755d	                           jne 0x4000f1a	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4000ebd	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4000ec4	      0xbe00000000	                              mov esi, 0	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4000ec9	          0x4889c7	                            mov rdi, rax	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4000ecc	      0xb800000000	                              mov eax, 0	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4000ed1	      0xe846f4ffff	                       call sym.ch_error	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x4000ed6	      0xe800000000	                          call 0x4000edb	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000edb	            0x8b00	                    mov eax, dword [rax]	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000edd	            0x89c7	                            mov edi, eax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000edf	      0xe800000000	                          call 0x4000ee4	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000ee4	          0x4889c3	                            mov rbx, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000ee7	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000eec	      0xe800000000	                          call 0x4000ef1	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000ef1	          0x4889da	                            mov rdx, rbx	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000ef4	          0x4889c6	                            mov rsi, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000ef7	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000efc	      0xe800000000	                          call 0x4000f01	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4000f01	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       721	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_15
0x4000f08	          0x4889c7	                            mov rdi, rax	       721	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_15
0x4000f0b	      0xe8b2f8ffff	                   call sym.channel_free	       721	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_15
0x4000f10	      0xb800000000	                              mov eax, 0	       722	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4000f15	      0xe9ad070000	                           jmp 0x40016c7	       722	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4000f1a	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x4000f21	            0x7866	                            js 0x4000f89	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x4000f23	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4000f29	      0xba00080000	                          mov edx, 0x800	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4000f2e	      0xbe04000000	                              mov esi, 4	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4000f33	            0x89c7	                            mov edi, eax	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4000f35	      0xb800000000	                              mov eax, 0	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4000f3a	      0xe800000000	                          call 0x4000f3f	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4000f3f	            0x85c0	                           test eax, eax	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f41	            0x7946	                           jns 0x4000f89	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f43	      0xe800000000	                          call 0x4000f48	       738	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f48	            0x8b10	                    mov edx, dword [rax]	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4000f4a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4000f51	      0xbe00000000	                              mov esi, 0	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4000f56	          0x4889c7	                            mov rdi, rax	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4000f59	      0xb800000000	                              mov eax, 0	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4000f5e	      0xe8b9f3ffff	                       call sym.ch_error	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x4000f63	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f69	            0x89c7	                            mov edi, eax	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f6b	      0xe800000000	                          call 0x4000f70	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f70	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       740	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_19
0x4000f77	          0x4889c7	                            mov rdi, rax	       740	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_19
0x4000f7a	      0xe843f8ffff	                   call sym.channel_free	       740	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_19
0x4000f7f	      0xb800000000	                              mov eax, 0	       741	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f84	      0xe93e070000	                           jmp 0x40016c7	       741	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4000f89	    0x8b8d6cfeffff	            mov ecx, dword [rbp - 0x194]	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4000f8f	    0x488b9558feff	            mov rdx, qword [rbp - 0x1a8]	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4000f96	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4000f9d	      0xbe00000000	                              mov esi, 0	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4000fa2	          0x4889c7	                            mov rdi, rax	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4000fa5	      0xb800000000	                              mov eax, 0	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4000faa	      0xe800000000	                          call 0x4000faf	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4000faf	    0x488d8dd0feff	                  lea rcx, [rbp - 0x130]	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4000fb6	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4000fbc	      0xba10000000	                           mov edx, 0x10	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4000fc1	          0x4889ce	                            mov rsi, rcx	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4000fc4	            0x89c7	                            mov edi, eax	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4000fc6	      0xe800000000	                          call 0x4000fcb	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4000fcb	    0x898570feffff	            mov dword [rbp - 0x190], eax	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4000fd1	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x4000fd8	     0xf8415060000	                            je 0x40015f3	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x4000fde	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000fe5	            0x782c	                            js 0x4001013	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000fe7	      0xe800000000	                          call 0x4000fec	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000fec	            0x8b00	                    mov eax, dword [rax]	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000fee	          0x83f80b	                            cmp eax, 0xb	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000ff1	     0xf8492000000	                            je 0x4001089	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000ff7	      0xe800000000	                          call 0x4000ffc	       755	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000ffc	            0x8b00	                    mov eax, dword [rax]	       755	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4000ffe	          0x83f86f	                           cmp eax, 0x6f	       755	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001001	     0xf8482000000	                            je 0x4001089	       755	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001007	      0xe800000000	                          call 0x400100c	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400100c	            0x8b00	                    mov eax, dword [rax]	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400100e	          0x83f873	                           cmp eax, 0x73	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001011	            0x7476	                            je 0x4001089	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001013	      0xe800000000	                          call 0x4001018	       762	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001018	            0x8b10	                    mov edx, dword [rax]	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x400101a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4001021	      0xbe00000000	                              mov esi, 0	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4001026	          0x4889c7	                            mov rdi, rax	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4001029	      0xb800000000	                              mov eax, 0	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x400102e	      0xe8e9f2ffff	                       call sym.ch_error	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4001033	      0xe800000000	                          call 0x4001038	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4001038	            0x8b00	                    mov eax, dword [rax]	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400103a	            0x89c7	                            mov edi, eax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400103c	      0xe800000000	                          call 0x4001041	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4001041	          0x4889c3	                            mov rbx, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4001044	    0x488b05000000	            mov rax, qword [0x0400104b] 	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400104b	          0x4889c7	                            mov rdi, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400104e	      0xe800000000	                          call 0x4001053	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4001053	          0x4889da	                            mov rdx, rbx	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4001056	          0x4889c6	                            mov rsi, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4001059	      0xbf00000000	                              mov edi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400105e	      0xe800000000	                          call 0x4001063	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4001063	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001069	            0x89c7	                            mov edi, eax	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400106b	      0xe800000000	                          call 0x4001070	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001070	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       765	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_24
0x4001077	          0x4889c7	                            mov rdi, rax	       765	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_24
0x400107a	      0xe843f7ffff	                   call sym.channel_free	       765	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_24
0x400107f	      0xb800000000	                              mov eax, 0	       766	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001084	      0xe93e060000	                           jmp 0x40016c7	       766	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4001089	      0xb832000000	                           mov eax, 0x32	       771	channel.c	FUNCTION_27	WHILE_1
0x400108e	    0x83bd50feffff	          cmp dword [rbp - 0x1b0], 0x32 	       771	channel.c	FUNCTION_27	WHILE_1
0x4001095	     0xf4e8550feff	         cmovle eax, dword [rbp - 0x1b0]	       771	channel.c	FUNCTION_27	WHILE_1
0x400109c	    0x898574feffff	            mov dword [rbp - 0x18c], eax	       771	channel.c	FUNCTION_27	WHILE_1
0x40010a2	      0xe800000000	                          call 0x40010a7	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40010a7	            0x8b00	                    mov eax, dword [rax]	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40010a9	          0x83f86f	                           cmp eax, 0x6f	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40010ac	     0xf8465040000	                            je 0x4001517	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40010b2	    0xc78560feffff	              mov dword [rbp - 0x1a0], 0	       783	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40010bc	    0xc78564feffff	              mov dword [rbp - 0x19c], 4	       784	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40010c6	      0xb800000000	                              mov eax, 0	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010cb	      0xb910000000	                           mov ecx, 0x10	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010d0	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010d7	          0x4889d7	                            mov rdi, rdx	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010da	              0xfc	                                     cld	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010db	          0xf348ab	              rep stosq qword [rdi], rax	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010de	            0x89f8	                            mov eax, edi	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010e0	            0x89ca	                            mov edx, ecx	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010e2	    0x899578feffff	            mov dword [rbp - 0x188], edx	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010e8	    0x89857cfeffff	            mov dword [rbp - 0x184], eax	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x40010ee	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40010f4	          0x8d503f	                   lea edx, [rax + 0x3f]	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40010f7	            0x85c0	                           test eax, eax	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40010f9	           0xf48c2	                          cmovs eax, edx	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40010fc	          0xc1f806	                              sar eax, 6	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40010ff	            0x89c6	                            mov esi, eax	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001101	          0x4863c6	                         movsxd rax, esi	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001104	    0x488bbcc5e0fe	    mov rdi, qword [rbp + rax*8 - 0x120]	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x400110c	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001112	              0x99	                                     cdq	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001113	          0xc1ea1a	                           shr edx, 0x1a	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001116	             0x1d0	                            add eax, edx	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001118	          0x83e03f	                           and eax, 0x3f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x400111b	            0x29d0	                            sub eax, edx	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x400111d	      0xba01000000	                              mov edx, 1	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001122	            0x89c1	                            mov ecx, eax	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001124	          0x48d3e2	                             shl rdx, cl	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001127	          0x4889d0	                            mov rax, rdx	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x400112a	          0x4809c7	                             or rdi, rax	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x400112d	          0x4889fa	                            mov rdx, rdi	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001130	          0x4863c6	                         movsxd rax, esi	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x4001133	    0x488994c5e0fe	    mov qword [rbp + rax*8 - 0x120], rdx	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x400113b	      0xb800000000	                              mov eax, 0	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4001140	      0xb910000000	                           mov ecx, 0x10	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4001145	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x400114c	          0x4889d7	                            mov rdi, rdx	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x400114f	              0xfc	                                     cld	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4001150	          0xf348ab	              rep stosq qword [rdi], rax	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4001153	            0x89f8	                            mov eax, edi	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4001155	            0x89ca	                            mov edx, ecx	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4001157	    0x899580feffff	            mov dword [rbp - 0x180], edx	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x400115d	    0x898584feffff	            mov dword [rbp - 0x17c], eax	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x4001163	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001169	          0x8d503f	                   lea edx, [rax + 0x3f]	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x400116c	            0x85c0	                           test eax, eax	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x400116e	           0xf48c2	                          cmovs eax, edx	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001171	          0xc1f806	                              sar eax, 6	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001174	            0x89c6	                            mov esi, eax	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001176	          0x4863c6	                         movsxd rax, esi	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001179	    0x488bbcc560ff	     mov rdi, qword [rbp + rax*8 - 0xa0]	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001181	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001187	              0x99	                                     cdq	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001188	          0xc1ea1a	                           shr edx, 0x1a	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x400118b	             0x1d0	                            add eax, edx	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x400118d	          0x83e03f	                           and eax, 0x3f	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001190	            0x29d0	                            sub eax, edx	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001192	      0xba01000000	                              mov edx, 1	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001197	            0x89c1	                            mov ecx, eax	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x4001199	          0x48d3e2	                             shl rdx, cl	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x400119c	          0x4889d0	                            mov rax, rdx	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x400119f	          0x4809c7	                             or rdi, rax	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40011a2	          0x4889fa	                            mov rdx, rdi	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40011a5	          0x4863c6	                         movsxd rax, esi	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40011a8	    0x488994c560ff	     mov qword [rbp + rax*8 - 0xa0], rdx	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40011b0	    0x8b8d74feffff	            mov ecx, dword [rbp - 0x18c]	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011b6	      0xbad34d6210	                     mov edx, 0x10624dd3	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011bb	            0x89c8	                            mov eax, ecx	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011bd	            0xf7ea	                                imul edx	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011bf	          0xc1fa06	                              sar edx, 6	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011c2	            0x89c8	                            mov eax, ecx	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011c4	          0xc1f81f	                           sar eax, 0x1f	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011c7	            0x29c2	                            sub edx, eax	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011c9	            0x89d0	                            mov eax, edx	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011cb	            0x4898	                                    cdqe	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011cd	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011d4	    0x8b8d74feffff	            mov ecx, dword [rbp - 0x18c]	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011da	      0xbad34d6210	                     mov edx, 0x10624dd3	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011df	            0x89c8	                            mov eax, ecx	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011e1	            0xf7ea	                                imul edx	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011e3	          0xc1fa06	                              sar edx, 6	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011e6	            0x89c8	                            mov eax, ecx	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011e8	          0xc1f81f	                           sar eax, 0x1f	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011eb	            0x29c2	                            sub edx, eax	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011ed	            0x89d0	                            mov eax, edx	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011ef	    0x69c0e8030000	                    imul eax, eax, 0x3e8	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011f5	            0x29c1	                            sub ecx, eax	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011f7	            0x89c8	                            mov eax, ecx	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011f9	    0x69c0e8030000	                    imul eax, eax, 0x3e8	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40011ff	            0x4898	                                    cdqe	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4001201	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4001208	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x400120f	      0xbe00000000	                              mov esi, 0	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x4001214	          0x4889c7	                            mov rdi, rax	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x4001217	      0xe800000000	                          call 0x400121c	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x400121c	    0x8b9574feffff	            mov edx, dword [rbp - 0x18c]	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4001222	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4001229	      0xbe00000000	                              mov esi, 0	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400122e	          0x4889c7	                            mov rdi, rax	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4001231	      0xb800000000	                              mov eax, 0	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4001236	      0xe800000000	                          call 0x400123b	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400123b	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4001241	          0x8d7801	                      lea edi, [rax + 1]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4001244	    0x488d8da0feff	                  lea rcx, [rbp - 0x160]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400124b	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4001252	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4001259	          0x4989c8	                             mov r8, rcx	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400125c	      0xb900000000	                              mov ecx, 0	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4001261	          0x4889c6	                            mov rsi, rax	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4001264	      0xe800000000	                          call 0x4001269	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4001269	    0x898570feffff	            mov dword [rbp - 0x190], eax	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400126f	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4001276	            0x7976	                           jns 0x40012ee	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4001278	      0xe800000000	                          call 0x400127d	       806	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x400127d	            0x8b10	                    mov edx, dword [rax]	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x400127f	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4001286	      0xbe00000000	                              mov esi, 0	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x400128b	          0x4889c7	                            mov rdi, rax	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x400128e	      0xb800000000	                              mov eax, 0	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4001293	      0xe884f0ffff	                       call sym.ch_error	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4001298	      0xe800000000	                          call 0x400129d	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x400129d	            0x8b00	                    mov eax, dword [rax]	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x400129f	            0x89c7	                            mov edi, eax	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012a1	      0xe800000000	                          call 0x40012a6	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012a6	          0x4889c3	                            mov rbx, rax	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012a9	    0x488b05000000	            mov rax, qword [0x040012b0] 	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012b0	          0x4889c7	                            mov rdi, rax	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012b3	      0xe800000000	                          call 0x40012b8	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012b8	          0x4889da	                            mov rdx, rbx	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012bb	          0x4889c6	                            mov rsi, rax	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012be	      0xbf00000000	                              mov edi, 0	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012c3	      0xe800000000	                          call 0x40012c8	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x40012c8	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       808	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x40012ce	            0x89c7	                            mov edi, eax	       808	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x40012d0	      0xe800000000	                          call 0x40012d5	       808	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x40012d5	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       809	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_34
0x40012dc	          0x4889c7	                            mov rdi, rax	       809	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_34
0x40012df	      0xe8def4ffff	                   call sym.channel_free	       809	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_34
0x40012e4	      0xb800000000	                              mov eax, 0	       810	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x40012e9	      0xe9d9030000	                           jmp 0x40016c7	       810	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x40012ee	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40012f4	          0x8d503f	                   lea edx, [rax + 0x3f]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40012f7	            0x85c0	                           test eax, eax	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40012f9	           0xf48c2	                          cmovs eax, edx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40012fc	          0xc1f806	                              sar eax, 6	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40012ff	            0x4898	                                    cdqe	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001301	    0x488bb4c5e0fe	    mov rsi, qword [rbp + rax*8 - 0x120]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001309	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400130f	              0x99	                                     cdq	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001310	          0xc1ea1a	                           shr edx, 0x1a	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001313	             0x1d0	                            add eax, edx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001315	          0x83e03f	                           and eax, 0x3f	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001318	            0x29d0	                            sub eax, edx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400131a	      0xba01000000	                              mov edx, 1	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400131f	            0x89c1	                            mov ecx, eax	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001321	          0x48d3e2	                             shl rdx, cl	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001324	          0x4889d0	                            mov rax, rdx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001327	          0x4821f0	                            and rax, rsi	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400132a	          0x4885c0	                           test rax, rax	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400132d	            0x7545	                           jne 0x4001374	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400132f	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001335	          0x8d503f	                   lea edx, [rax + 0x3f]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001338	            0x85c0	                           test eax, eax	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400133a	           0xf48c2	                          cmovs eax, edx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400133d	          0xc1f806	                              sar eax, 6	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001340	            0x4898	                                    cdqe	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001342	    0x488bb4c560ff	     mov rsi, qword [rbp + rax*8 - 0xa0]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400134a	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001350	              0x99	                                     cdq	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001351	          0xc1ea1a	                           shr edx, 0x1a	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001354	             0x1d0	                            add eax, edx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001356	          0x83e03f	                           and eax, 0x3f	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001359	            0x29d0	                            sub eax, edx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400135b	      0xba01000000	                              mov edx, 1	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001360	            0x89c1	                            mov ecx, eax	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001362	          0x48d3e2	                             shl rdx, cl	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001365	          0x4889d0	                            mov rax, rdx	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001368	          0x4821f0	                            and rax, rsi	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400136b	          0x4885c0	                           test rax, rax	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400136e	     0xf84e6000000	                            je 0x400145a	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4001374	    0x488d8d64feff	                  lea rcx, [rbp - 0x19c]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x400137b	    0x488d9560feff	                  lea rdx, [rbp - 0x1a0]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4001382	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4001388	          0x4989c8	                             mov r8, rcx	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x400138b	          0x4889d1	                            mov rcx, rdx	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x400138e	      0xba04000000	                              mov edx, 4	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4001393	      0xbe01000000	                              mov esi, 1	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4001398	            0x89c7	                            mov edi, eax	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x400139a	      0xe800000000	                          call 0x400139f	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x400139f	    0x898570feffff	            mov dword [rbp - 0x190], eax	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x40013a5	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013ac	            0x7837	                            js 0x40013e5	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013ae	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013b4	            0x85c0	                           test eax, eax	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013b6	     0xf849e000000	                            je 0x400145a	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013bc	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       837	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013c2	          0x83f80b	                            cmp eax, 0xb	       837	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013c5	     0xf848f000000	                            je 0x400145a	       837	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013cb	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       838	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013d1	          0x83f86f	                           cmp eax, 0x6f	       838	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013d4	     0xf8480000000	                            je 0x400145a	       838	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013da	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013e0	          0x83f873	                           cmp eax, 0x73	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013e3	            0x7475	                            je 0x400145a	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40013e5	    0x8b9560feffff	            mov edx, dword [rbp - 0x1a0]	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40013eb	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40013f2	      0xbe00000000	                              mov esi, 0	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40013f7	          0x4889c7	                            mov rdi, rax	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40013fa	      0xb800000000	                              mov eax, 0	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x40013ff	      0xe818efffff	                       call sym.ch_error	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4001404	      0xe800000000	                          call 0x4001409	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4001409	            0x8b00	                    mov eax, dword [rax]	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400140b	            0x89c7	                            mov edi, eax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400140d	      0xe800000000	                          call 0x4001412	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4001412	          0x4889c3	                            mov rbx, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4001415	    0x488b05000000	            mov rax, qword [0x0400141c] 	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400141c	          0x4889c7	                            mov rdi, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400141f	      0xe800000000	                          call 0x4001424	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4001424	          0x4889da	                            mov rdx, rbx	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4001427	          0x4889c6	                            mov rsi, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400142a	      0xbf00000000	                              mov edi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400142f	      0xe800000000	                          call 0x4001434	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4001434	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400143a	            0x89c7	                            mov edi, eax	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400143c	      0xe800000000	                          call 0x4001441	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4001441	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       849	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_41
0x4001448	          0x4889c7	                            mov rdi, rax	       849	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_41
0x400144b	      0xe872f3ffff	                   call sym.channel_free	       849	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_41
0x4001450	      0xb800000000	                              mov eax, 0	       850	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4001455	      0xe96d020000	                           jmp 0x40016c7	       850	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400145a	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001460	          0x8d503f	                   lea edx, [rax + 0x3f]	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001463	            0x85c0	                           test eax, eax	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001465	           0xf48c2	                          cmovs eax, edx	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001468	          0xc1f806	                              sar eax, 6	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400146b	            0x4898	                                    cdqe	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400146d	    0x488bb4c560ff	     mov rsi, qword [rbp + rax*8 - 0xa0]	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001475	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400147b	              0x99	                                     cdq	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400147c	          0xc1ea1a	                           shr edx, 0x1a	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400147f	             0x1d0	                            add eax, edx	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001481	          0x83e03f	                           and eax, 0x3f	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001484	            0x29d0	                            sub eax, edx	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001486	      0xba01000000	                              mov edx, 1	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400148b	            0x89c1	                            mov ecx, eax	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400148d	          0x48d3e2	                             shl rdx, cl	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001490	          0x4889d0	                            mov rax, rdx	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001493	          0x4821f0	                            and rax, rsi	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001496	          0x4885c0	                           test rax, rax	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4001499	            0x740e	                            je 0x40014a9	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400149b	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40014a1	            0x85c0	                           test eax, eax	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40014a3	     0xf844d010000	                            je 0x40015f6	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x40014a9	    0x488d85c0feff	                  lea rax, [rbp - 0x140]	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x40014b0	      0xbe00000000	                              mov esi, 0	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x40014b5	          0x4889c7	                            mov rdi, rax	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x40014b8	      0xe800000000	                          call 0x40014bd	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x40014bd	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014c4	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014cb	          0x4829c2	                            sub rdx, rax	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014ce	          0x4889d0	                            mov rax, rdx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014d1	    0x4869f0e80300	                    imul rsi, rax, 0x3e8	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014d8	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014df	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014e6	          0x4889d1	                            mov rcx, rdx	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014e9	          0x4829c1	                            sub rcx, rax	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014ec	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014f6	          0x4889c8	                            mov rax, rcx	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014f9	          0x48f7ea	                                imul rdx	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x40014fc	        0x48c1fa07	                              sar rdx, 7	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4001500	          0x4889c8	                            mov rax, rcx	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4001503	        0x48c1f83f	                           sar rax, 0x3f	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4001507	          0x4829c2	                            sub rdx, rax	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400150a	          0x4889d0	                            mov rax, rdx	       860	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400150d	          0x4801f0	                            add rax, rsi	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4001510	    0x48898588feff	            mov qword [rbp - 0x178], rax	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4001517	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 1	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400151e	     0xf8e90000000	                           jle 0x40015b4	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001524	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400152a	            0x4898	                                    cdqe	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400152c	    0x483b8588feff	            cmp rax, qword [rbp - 0x178]	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001533	            0x7e7f	                           jle 0x40015b4	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001535	    0x8b8574feffff	            mov eax, dword [rbp - 0x18c]	       871	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400153b	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	       871	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001542	            0x29d0	                            sub eax, edx	       871	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001544	    0x898574feffff	            mov dword [rbp - 0x18c], eax	       871	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400154a	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	       872	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001550	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	       872	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001557	            0x29d0	                            sub eax, edx	       872	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4001559	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	       872	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400155f	    0x83bd74feffff	              cmp dword [rbp - 0x18c], 0	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x4001566	            0x7e26	                           jle 0x400158e	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x4001568	    0x8b8574feffff	            mov eax, dword [rbp - 0x18c]	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x400156e	            0x4898	                                    cdqe	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x4001570	      0xbe01000000	                              mov esi, 1	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x4001575	          0x4889c7	                            mov rdi, rax	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x4001578	      0xe800000000	                          call 0x400157d	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x400157d	      0xe800000000	                          call 0x4001582	       876	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_45
0x4001582	    0x8b8574feffff	            mov eax, dword [rbp - 0x18c]	       877	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x4001588	    0x298550feffff	            sub dword [rbp - 0x1b0], eax	       877	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x400158e	    0x8b0500000000	            mov eax, dword [0x04001594] 	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x4001594	            0x85c0	                           test eax, eax	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x4001596	            0x751c	                           jne 0x40015b4	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x4001598	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       881	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x400159f	     0xf8fd4f8ffff	                            jg 0x4000e79	       881	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40015a5	    0xc78550feffff	              mov dword [rbp - 0x1b0], 1	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40015af	      0xe9c5f8ffff	                           jmp 0x4000e79	       895	channel.c	FUNCTION_27	WHILE_1
0x40015b4	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40015bb	      0xbe00000000	                              mov esi, 0	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40015c0	          0x4889c7	                            mov rdi, rax	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40015c3	      0xb800000000	                              mov eax, 0	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40015c8	      0xe84fedffff	                       call sym.ch_error	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40015cd	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       892	channel.c	FUNCTION_27	WHILE_1
0x40015d3	            0x89c7	                            mov edi, eax	       892	channel.c	FUNCTION_27	WHILE_1
0x40015d5	      0xe800000000	                          call 0x40015da	       892	channel.c	FUNCTION_27	WHILE_1
0x40015da	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       893	channel.c	FUNCTION_27	WHILE_1	CALL_47
0x40015e1	          0x4889c7	                            mov rdi, rax	       893	channel.c	FUNCTION_27	WHILE_1	CALL_47
0x40015e4	      0xe8d9f1ffff	                   call sym.channel_free	       893	channel.c	FUNCTION_27	WHILE_1	CALL_47
0x40015e9	      0xb800000000	                              mov eax, 0	       894	channel.c	FUNCTION_27	WHILE_1
0x40015ee	      0xe9d4000000	                           jmp 0x40016c7	       894	channel.c	FUNCTION_27	WHILE_1
0x40015f3	              0x90	                                     nop	       751	channel.c	FUNCTION_27	WHILE_1	IF_8
0x40015f4	            0xeb01	                           jmp 0x40015f7	       751	channel.c	FUNCTION_27	WHILE_1	IF_8
0x40015f6	              0x90	                                     nop	       856	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16
0x40015f7	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       897	channel.c	FUNCTION_27	CALL_48
0x40015fe	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_27	CALL_48
0x4001603	          0x4889c7	                            mov rdi, rax	       897	channel.c	FUNCTION_27	CALL_48
0x4001606	      0xb800000000	                              mov eax, 0	       897	channel.c	FUNCTION_27	CALL_48
0x400160b	      0xe800000000	                          call 0x4001610	       897	channel.c	FUNCTION_27	CALL_48
0x4001610	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       899	channel.c	FUNCTION_27	IF_21
0x4001617	            0x781c	                            js 0x4001635	       899	channel.c	FUNCTION_27	IF_21
0x4001619	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x400161f	      0xba00000000	                              mov edx, 0	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4001624	      0xbe04000000	                              mov esi, 4	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4001629	            0x89c7	                            mov edi, eax	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x400162b	      0xb800000000	                              mov eax, 0	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4001630	      0xe800000000	                          call 0x4001635	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x4001635	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       909	channel.c	FUNCTION_27
0x400163c	    0x8b9568feffff	            mov edx, dword [rbp - 0x198]	       909	channel.c	FUNCTION_27
0x4001642	          0x895018	             mov dword [rax + 0x18], edx	       909	channel.c	FUNCTION_27
0x4001645	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       910	channel.c	FUNCTION_27
0x400164c	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	       910	channel.c	FUNCTION_27
0x4001653	    0x488990780400	            mov qword [rax + 0x478], rdx	       910	channel.c	FUNCTION_27
0x400165a	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	       911	channel.c	FUNCTION_27	CALL_51
0x4001661	          0x4889c7	                            mov rdi, rax	       911	channel.c	FUNCTION_27	CALL_51
0x4001664	      0xe800000000	                          call 0x4001669	       911	channel.c	FUNCTION_27	CALL_51
0x4001669	          0x4889c2	                            mov rdx, rax	       911	channel.c	FUNCTION_27	CALL_51
0x400166c	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       911	channel.c	FUNCTION_27	CALL_51
0x4001673	    0x488990600400	            mov qword [rax + 0x460], rdx	       911	channel.c	FUNCTION_27	CALL_51
0x400167a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       912	channel.c	FUNCTION_27
0x4001681	    0x8b9554feffff	            mov edx, dword [rbp - 0x1ac]	       912	channel.c	FUNCTION_27
0x4001687	    0x899068040000	            mov dword [rax + 0x468], edx	       912	channel.c	FUNCTION_27
0x400168d	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       913	channel.c	FUNCTION_27
0x4001694	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	       913	channel.c	FUNCTION_27
0x400169a	          0x83c801	                               or eax, 1	       913	channel.c	FUNCTION_27
0x400169d	            0x89c2	                            mov edx, eax	       913	channel.c	FUNCTION_27
0x400169f	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       913	channel.c	FUNCTION_27
0x40016a6	    0x89906c040000	            mov dword [rax + 0x46c], edx	       913	channel.c	FUNCTION_27
0x40016ac	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       916	channel.c	FUNCTION_27	CALL_52
0x40016b3	      0xbe00000000	                              mov esi, 0	       916	channel.c	FUNCTION_27	CALL_52
0x40016b8	          0x4889c7	                            mov rdi, rax	       916	channel.c	FUNCTION_27	CALL_52
0x40016bb	      0xe864f3ffff	       call sym.channel_gui_register_one	       916	channel.c	FUNCTION_27	CALL_52
0x40016c0	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       919	channel.c	FUNCTION_27
0x40016c7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       920	channel.c	FUNCTION_27
0x40016cb	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       920	channel.c	FUNCTION_27
0x40016d4	            0x7405	                            je 0x40016db	       920	channel.c	FUNCTION_27
0x40016d6	      0xe800000000	                          call 0x40016db	       920	channel.c	FUNCTION_27
0x40016db	    0x4881c4b80100	                          add rsp, 0x1b8	       920	channel.c	FUNCTION_27
0x40016e2	              0x5b	                                 pop rbx	       920	channel.c	FUNCTION_27
0x40016e3	              0x5d	                                 pop rbp	       920	channel.c	FUNCTION_27
0x40016e4	              0xc3	                                     ret	       920	channel.c	FUNCTION_27
