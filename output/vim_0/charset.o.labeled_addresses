getvvcol	ELSE,2:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,7:DO,0:CALL,7	108
0x40026ca	              0x55	                                push rbp	      1441	charset.c	FUNCTION_37
0x40026cb	          0x4889e5	                            mov rbp, rsp	      1441	charset.c	FUNCTION_37
0x40026ce	              0x53	                                push rbx	      1441	charset.c	FUNCTION_37
0x40026cf	        0x4883ec58	                           sub rsp, 0x58	      1441	charset.c	FUNCTION_37
0x40026d3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1441	charset.c	FUNCTION_37
0x40026d7	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1441	charset.c	FUNCTION_37
0x40026db	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1441	charset.c	FUNCTION_37
0x40026df	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1441	charset.c	FUNCTION_37
0x40026e3	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1441	charset.c	FUNCTION_37
0x40026e7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1441	charset.c	FUNCTION_37
0x40026f0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1441	charset.c	FUNCTION_37
0x40026f4	            0x31c0	                            xor eax, eax	      1441	charset.c	FUNCTION_37
0x40026f6	      0xe800000000	                          call 0x40026fb	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x40026fb	            0x85c0	                           test eax, eax	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x40026fd	     0xf8408010000	                            je 0x400280b	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x4002703	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x4002707	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x400270b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x400270f	    0x41b800000000	                              mov r8d, 0	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x4002715	      0xb900000000	                              mov ecx, 0	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x400271a	          0x4889c7	                            mov rdi, rax	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x400271d	      0xe800000000	                          call 0x4002722	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x4002722	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1454	charset.c	FUNCTION_37	IF_1
0x4002726	          0x8b400c	              mov eax, dword [rax + 0xc]	      1454	charset.c	FUNCTION_37	IF_1
0x4002729	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1454	charset.c	FUNCTION_37	IF_1
0x400272c	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1455	charset.c	FUNCTION_37	IF_1
0x4002733	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x4002737	          0x488b08	                    mov rcx, qword [rax]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x400273a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x400273e	        0x488b4008	                mov rax, qword [rax + 8]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x4002742	      0xba00000000	                              mov edx, 0	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x4002747	          0x4889ce	                            mov rsi, rcx	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x400274a	          0x4889c7	                            mov rdi, rax	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x400274d	      0xe800000000	                          call 0x4002752	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x4002752	        0x488945e0	             mov qword [rbp - 0x20], rax	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x4002756	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x400275a	          0x8b5808	                mov ebx, dword [rax + 8]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x400275d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4002761	          0x4889c7	                            mov rdi, rax	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4002764	      0xe800000000	                          call 0x4002769	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4002769	            0x39c3	                            cmp ebx, eax	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x400276b	            0x7d5c	                           jge 0x40027c9	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x400276d	    0x488b05000000	            mov rax, qword [0x04002774] 	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4002774	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4002778	          0x8b5208	                mov edx, dword [rdx + 8]	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x400277b	          0x4863ca	                         movsxd rcx, edx	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x400277e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4002782	          0x4801ca	                            add rdx, rcx	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4002785	          0x4889d7	                            mov rdi, rdx	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4002788	            0xffd0	                                call rax	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x400278a	          0x8945dc	             mov dword [rbp - 0x24], eax	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x400278d	        0x837ddc09	               cmp dword [rbp - 0x24], 9	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x4002791	            0x7436	                            je 0x40027c9	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x4002793	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x4002796	            0x89c7	                            mov edi, eax	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x4002798	      0xe800000000	                          call 0x400279d	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x400279d	            0x85c0	                           test eax, eax	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x400279f	            0x7428	                            je 0x40027c9	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x40027a1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x40027a4	            0x89c7	                            mov edi, eax	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x40027a6	      0xe800000000	                          call 0x40027ab	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x40027ab	          0x83e801	                              sub eax, 1	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x40027ae	          0x8945d8	             mov dword [rbp - 0x28], eax	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x40027b1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x40027b4	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x40027b7	            0x7e09	                           jle 0x40027c2	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x40027b9	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1467	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x40027c0	            0xeb07	                           jmp 0x40027c9	      1467	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x40027c2	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1469	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	ELSE_1
0x40027c9	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1473	charset.c	FUNCTION_37	IF_1
0x40027cc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1473	charset.c	FUNCTION_37	IF_1
0x40027cf	             0x1d0	                            add eax, edx	      1473	charset.c	FUNCTION_37	IF_1
0x40027d1	          0x8945d0	             mov dword [rbp - 0x30], eax	      1473	charset.c	FUNCTION_37	IF_1
0x40027d4	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1474	charset.c	FUNCTION_37	IF_1	IF_5
0x40027d9	            0x7409	                            je 0x40027e4	      1474	charset.c	FUNCTION_37	IF_1	IF_5
0x40027db	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1475	charset.c	FUNCTION_37	IF_1	IF_5
0x40027de	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1475	charset.c	FUNCTION_37	IF_1	IF_5
0x40027e2	            0x8910	                    mov dword [rax], edx	      1475	charset.c	FUNCTION_37	IF_1	IF_5
0x40027e4	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1476	charset.c	FUNCTION_37	IF_1	IF_6
0x40027e9	            0x7409	                            je 0x40027f4	      1476	charset.c	FUNCTION_37	IF_1	IF_6
0x40027eb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1477	charset.c	FUNCTION_37	IF_1	IF_6
0x40027ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1477	charset.c	FUNCTION_37	IF_1	IF_6
0x40027f2	            0x8910	                    mov dword [rax], edx	      1477	charset.c	FUNCTION_37	IF_1	IF_6
0x40027f4	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1478	charset.c	FUNCTION_37	IF_1	IF_7
0x40027f9	            0x742f	                            je 0x400282a	      1478	charset.c	FUNCTION_37	IF_1	IF_7
0x40027fb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x40027fe	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x4002801	             0x1c2	                            add edx, eax	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x4002803	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x4002807	            0x8910	                    mov dword [rax], edx	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x4002809	            0xeb1f	                           jmp 0x400282a	      1483	charset.c	FUNCTION_37
0x400280b	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      1482	charset.c	FUNCTION_37	CALL_7
0x400280f	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1482	charset.c	FUNCTION_37	CALL_7
0x4002813	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1482	charset.c	FUNCTION_37	CALL_7
0x4002817	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1482	charset.c	FUNCTION_37	CALL_7
0x400281b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1482	charset.c	FUNCTION_37	CALL_7
0x400281f	          0x4989f8	                             mov r8, rdi	      1482	charset.c	FUNCTION_37	CALL_7
0x4002822	          0x4889c7	                            mov rdi, rax	      1482	charset.c	FUNCTION_37	CALL_7
0x4002825	      0xe800000000	                          call 0x400282a	      1482	charset.c	FUNCTION_37	CALL_7
0x400282a	              0x90	                                     nop	      1483	charset.c	FUNCTION_37
0x400282b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1483	charset.c	FUNCTION_37
0x400282f	    0x644833042528	                xor rax, qword fs:[0x28]	      1483	charset.c	FUNCTION_37
0x4002838	            0x7405	                            je 0x400283f	      1483	charset.c	FUNCTION_37
0x400283a	      0xe800000000	                          call 0x400283f	      1483	charset.c	FUNCTION_37
0x400283f	        0x4883c458	                           add rsp, 0x58	      1483	charset.c	FUNCTION_37
0x4002843	              0x5b	                                 pop rbx	      1483	charset.c	FUNCTION_37
0x4002844	              0x5d	                                 pop rbp	      1483	charset.c	FUNCTION_37
0x4002845	              0xc3	                                     ret	      1483	charset.c	FUNCTION_37
nr2hex	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,0	16
0x4001225	              0x55	                                push rbp	       702	charset.c	FUNCTION_10
0x4001226	          0x4889e5	                            mov rbp, rsp	       702	charset.c	FUNCTION_10
0x4001229	          0x897dfc	                mov dword [rbp - 4], edi	       702	charset.c	FUNCTION_10
0x400122c	          0x8b45fc	                mov eax, dword [rbp - 4]	       703	charset.c	FUNCTION_10	IF_1
0x400122f	          0x83e00f	                            and eax, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x4001232	          0x83f809	                              cmp eax, 9	       703	charset.c	FUNCTION_10	IF_1
0x4001235	            0x770b	                            ja 0x4001242	       703	charset.c	FUNCTION_10	IF_1
0x4001237	          0x8b45fc	                mov eax, dword [rbp - 4]	       704	charset.c	FUNCTION_10	IF_1
0x400123a	          0x83e00f	                            and eax, 0xf	       704	charset.c	FUNCTION_10	IF_1
0x400123d	          0x83c030	                           add eax, 0x30	       704	charset.c	FUNCTION_10	IF_1
0x4001240	            0xeb09	                           jmp 0x400124b	       704	charset.c	FUNCTION_10	IF_1
0x4001242	          0x8b45fc	                mov eax, dword [rbp - 4]	       705	charset.c	FUNCTION_10
0x4001245	          0x83e00f	                            and eax, 0xf	       705	charset.c	FUNCTION_10
0x4001248	          0x83c057	                           add eax, 0x57	       705	charset.c	FUNCTION_10
0x400124b	              0x5d	                                 pop rbp	       706	charset.c	FUNCTION_10
0x400124c	              0xc3	                                     ret	       706	charset.c	FUNCTION_10
skiptowhite_esc	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,1:DO,0:CALL,0	34
0x4002eee	              0x55	                                push rbp	      1800	charset.c	FUNCTION_56
0x4002eef	          0x4889e5	                            mov rbp, rsp	      1800	charset.c	FUNCTION_56
0x4002ef2	        0x48897df8	                mov qword [rbp - 8], rdi	      1800	charset.c	FUNCTION_56
0x4002ef6	            0xeb2f	                           jmp 0x4002f27	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002ef8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002efc	           0xfb600	                   movzx eax, byte [rax]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002eff	            0x3c5c	                            cmp al, 0x5c	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f01	            0x740b	                            je 0x4002f0e	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f07	           0xfb600	                   movzx eax, byte [rax]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f0a	            0x3c16	                            cmp al, 0x16	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f0c	            0x7514	                           jne 0x4002f22	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f0e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f12	        0x4883c001	                              add rax, 1	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f16	           0xfb600	                   movzx eax, byte [rax]	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f19	            0x84c0	                             test al, al	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f1b	            0x7405	                            je 0x4002f22	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f1d	      0x488345f801	                  add qword [rbp - 8], 1	      1804	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4002f22	      0x488345f801	                  add qword [rbp - 8], 1	      1805	charset.c	FUNCTION_56	WHILE_1
0x4002f27	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f2b	           0xfb600	                   movzx eax, byte [rax]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f2e	            0x3c20	                            cmp al, 0x20	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f30	            0x7416	                            je 0x4002f48	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f32	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f36	           0xfb600	                   movzx eax, byte [rax]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f39	            0x3c09	                               cmp al, 9	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f3b	            0x740b	                            je 0x4002f48	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f41	           0xfb600	                   movzx eax, byte [rax]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f44	            0x84c0	                             test al, al	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f46	            0x75b0	                           jne 0x4002ef8	      1801	charset.c	FUNCTION_56	WHILE_1
0x4002f48	        0x488b45f8	                mov rax, qword [rbp - 8]	      1807	charset.c	FUNCTION_56
0x4002f4c	              0x5d	                                 pop rbp	      1808	charset.c	FUNCTION_56
0x4002f4d	              0xc3	                                     ret	      1808	charset.c	FUNCTION_56
ptr2cells	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,1	24
0x400132f	              0x55	                                push rbp	       761	charset.c	FUNCTION_13
0x4001330	          0x4889e5	                            mov rbp, rsp	       761	charset.c	FUNCTION_13
0x4001333	        0x4883ec10	                           sub rsp, 0x10	       761	charset.c	FUNCTION_13
0x4001337	        0x48897df8	                mov qword [rbp - 8], rdi	       761	charset.c	FUNCTION_13
0x400133b	    0x8b0500000000	            mov eax, dword [0x04001341] 	       764	charset.c	FUNCTION_13	IF_1
0x4001341	            0x85c0	                           test eax, eax	       764	charset.c	FUNCTION_13	IF_1
0x4001343	            0x7419	                            je 0x400135e	       764	charset.c	FUNCTION_13	IF_1
0x4001345	        0x488b45f8	                mov rax, qword [rbp - 8]	       764	charset.c	FUNCTION_13	IF_1
0x4001349	           0xfb600	                   movzx eax, byte [rax]	       764	charset.c	FUNCTION_13	IF_1
0x400134c	            0x84c0	                             test al, al	       764	charset.c	FUNCTION_13	IF_1
0x400134e	            0x790e	                           jns 0x400135e	       764	charset.c	FUNCTION_13	IF_1
0x4001350	        0x488b45f8	                mov rax, qword [rbp - 8]	       765	charset.c	FUNCTION_13	CALL_1
0x4001354	          0x4889c7	                            mov rdi, rax	       765	charset.c	FUNCTION_13	CALL_1
0x4001357	      0xe800000000	                          call 0x400135c	       765	charset.c	FUNCTION_13	CALL_1
0x400135c	            0xeb19	                           jmp 0x4001377	       765	charset.c	FUNCTION_13	CALL_1
0x400135e	        0x488b45f8	                mov rax, qword [rbp - 8]	       768	charset.c	FUNCTION_13
0x4001362	           0xfb600	                   movzx eax, byte [rax]	       768	charset.c	FUNCTION_13
0x4001365	           0xfb6c0	                           movzx eax, al	       768	charset.c	FUNCTION_13
0x4001368	            0x4898	                                    cdqe	       768	charset.c	FUNCTION_13
0x400136a	     0xfb680000000	                   movzx eax, byte [rax]	       768	charset.c	FUNCTION_13
0x4001371	           0xfb6c0	                           movzx eax, al	       768	charset.c	FUNCTION_13
0x4001374	          0x83e007	                              and eax, 7	       768	charset.c	FUNCTION_13
0x4001377	              0xc9	                                   leave	       769	charset.c	FUNCTION_13
0x4001378	              0xc3	                                     ret	       769	charset.c	FUNCTION_13
vim_isprintc_strict	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:DO,0:CALL,2	42
0x4001878	              0x55	                                push rbp	       983	charset.c	FUNCTION_29
0x4001879	          0x4889e5	                            mov rbp, rsp	       983	charset.c	FUNCTION_29
0x400187c	        0x4883ec10	                           sub rsp, 0x10	       983	charset.c	FUNCTION_29
0x4001880	          0x897dfc	                mov dword [rbp - 4], edi	       983	charset.c	FUNCTION_29
0x4001883	    0x8b0500000000	            mov eax, dword [0x04001889] 	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x4001889	            0x85c0	                           test eax, eax	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x400188b	            0x7420	                            je 0x40018ad	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x400188d	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x4001894	            0x7f17	                            jg 0x40018ad	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x4001896	          0x8b45fc	                mov eax, dword [rbp - 4]	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x4001899	            0x4898	                                    cdqe	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x400189b	     0xfb680000000	                   movzx eax, byte [rax]	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40018a2	            0x3c01	                               cmp al, 1	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40018a4	            0x7e07	                           jle 0x40018ad	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40018a6	      0xb800000000	                              mov eax, 0	       986	charset.c	FUNCTION_29	IF_1
0x40018ab	            0xeb51	                           jmp 0x40018fe	       986	charset.c	FUNCTION_29	IF_1
0x40018ad	    0x8b0500000000	            mov eax, dword [0x040018b3] 	       987	charset.c	FUNCTION_29	IF_2
0x40018b3	            0x85c0	                           test eax, eax	       987	charset.c	FUNCTION_29	IF_2
0x40018b5	            0x7415	                            je 0x40018cc	       987	charset.c	FUNCTION_29	IF_2
0x40018b7	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       987	charset.c	FUNCTION_29	IF_2
0x40018be	            0x7e0c	                           jle 0x40018cc	       987	charset.c	FUNCTION_29	IF_2
0x40018c0	          0x8b45fc	                mov eax, dword [rbp - 4]	       988	charset.c	FUNCTION_29	CALL_2
0x40018c3	            0x89c7	                            mov edi, eax	       988	charset.c	FUNCTION_29	CALL_2
0x40018c5	      0xe800000000	                          call 0x40018ca	       988	charset.c	FUNCTION_29	CALL_2
0x40018ca	            0xeb32	                           jmp 0x40018fe	       988	charset.c	FUNCTION_29	CALL_2
0x40018cc	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       990	charset.c	FUNCTION_29
0x40018d3	            0x7f1c	                            jg 0x40018f1	       990	charset.c	FUNCTION_29
0x40018d5	        0x837dfc00	                  cmp dword [rbp - 4], 0	       990	charset.c	FUNCTION_29
0x40018d9	            0x7e1d	                           jle 0x40018f8	       990	charset.c	FUNCTION_29
0x40018db	          0x8b45fc	                mov eax, dword [rbp - 4]	       990	charset.c	FUNCTION_29
0x40018de	            0x4898	                                    cdqe	       990	charset.c	FUNCTION_29
0x40018e0	     0xfb680000000	                   movzx eax, byte [rax]	       990	charset.c	FUNCTION_29
0x40018e7	           0xfb6c0	                           movzx eax, al	       990	charset.c	FUNCTION_29
0x40018ea	          0x83e010	                           and eax, 0x10	       990	charset.c	FUNCTION_29
0x40018ed	            0x85c0	                           test eax, eax	       990	charset.c	FUNCTION_29
0x40018ef	            0x7407	                            je 0x40018f8	       990	charset.c	FUNCTION_29
0x40018f1	      0xb801000000	                              mov eax, 1	       990	charset.c	FUNCTION_29
0x40018f6	            0xeb05	                           jmp 0x40018fd	       990	charset.c	FUNCTION_29
0x40018f8	      0xb800000000	                              mov eax, 0	       990	charset.c	FUNCTION_29
0x40018fd	              0x90	                                     nop	       990	charset.c	FUNCTION_29
0x40018fe	              0xc9	                                   leave	       991	charset.c	FUNCTION_29
0x40018ff	              0xc3	                                     ret	       991	charset.c	FUNCTION_29
trans_characters	ELSE,1:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,3:DO,0:CALL,5	73
0x40007e1	              0x55	                                push rbp	       319	charset.c	FUNCTION_3
0x40007e2	          0x4889e5	                            mov rbp, rsp	       319	charset.c	FUNCTION_3
0x40007e5	        0x4883ec30	                           sub rsp, 0x30	       319	charset.c	FUNCTION_3
0x40007e9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       319	charset.c	FUNCTION_3
0x40007ed	          0x8975d4	             mov dword [rbp - 0x2c], esi	       319	charset.c	FUNCTION_3
0x40007f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	charset.c	FUNCTION_3	CALL_1
0x40007f4	          0x4889c7	                            mov rdi, rax	       325	charset.c	FUNCTION_3	CALL_1
0x40007f7	      0xe800000000	                          call 0x40007fc	       325	charset.c	FUNCTION_3	CALL_1
0x40007fc	          0x8945ec	             mov dword [rbp - 0x14], eax	       325	charset.c	FUNCTION_3	CALL_1
0x40007ff	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       326	charset.c	FUNCTION_3
0x4000802	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       326	charset.c	FUNCTION_3
0x4000805	          0x8945f0	             mov dword [rbp - 0x10], eax	       326	charset.c	FUNCTION_3
0x4000808	      0xe9af000000	                           jmp 0x40008bc	       327	charset.c	FUNCTION_3	WHILE_1
0x400080d	    0x8b0500000000	            mov eax, dword [0x04000813] 	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000813	            0x85c0	                           test eax, eax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000815	            0x7421	                            je 0x4000838	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000817	    0x488b05000000	            mov rax, qword [0x0400081e] 	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x400081e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000822	          0x4889d7	                            mov rdi, rdx	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000825	            0xffd0	                                call rax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000827	          0x8945f4	              mov dword [rbp - 0xc], eax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x400082a	        0x837df401	                cmp dword [rbp - 0xc], 1	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x400082e	            0x7e08	                           jle 0x4000838	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000830	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000833	          0x2945ec	             sub dword [rbp - 0x14], eax	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000836	            0xeb7b	                           jmp 0x40008b3	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000838	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x400083c	           0xfb600	                   movzx eax, byte [rax]	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x400083f	           0xfb6c0	                           movzx eax, al	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000842	            0x89c7	                            mov edi, eax	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000844	      0xe800000000	                          call 0x4000849	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000849	        0x488945f8	                mov qword [rbp - 8], rax	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x400084d	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000851	          0x4889c7	                            mov rdi, rax	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000854	      0xe800000000	                          call 0x4000859	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000859	          0x8945f4	              mov dword [rbp - 0xc], eax	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x400085c	        0x837df401	                cmp dword [rbp - 0xc], 1	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000860	            0x7e34	                           jle 0x4000896	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000862	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000865	          0x83e801	                              sub eax, 1	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000868	          0x2945f0	             sub dword [rbp - 0x10], eax	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x400086b	        0x837df000	               cmp dword [rbp - 0x10], 0	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x400086f	            0x7e5c	                           jle 0x40008cd	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x4000871	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000874	            0x4898	                                    cdqe	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000876	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x400087a	        0x488d7201	                      lea rsi, [rdx + 1]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x400087e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000881	          0x4863ca	                         movsxd rcx, edx	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000884	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000888	          0x4801d1	                            add rcx, rdx	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x400088b	          0x4889c2	                            mov rdx, rax	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x400088e	          0x4889cf	                            mov rdi, rcx	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000891	      0xe800000000	                          call 0x4000896	       343	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x4000896	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x4000899	          0x4863d0	                         movsxd rdx, eax	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x400089c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x40008a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x40008a4	          0x4889ce	                            mov rsi, rcx	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x40008a7	          0x4889c7	                            mov rdi, rax	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x40008aa	      0xe800000000	                          call 0x40008af	       345	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_5
0x40008af	        0x836dec01	               sub dword [rbp - 0x14], 1	       346	charset.c	FUNCTION_3	WHILE_1	ELSE_1
0x40008b3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       348	charset.c	FUNCTION_3	WHILE_1
0x40008b6	            0x4898	                                    cdqe	       348	charset.c	FUNCTION_3	WHILE_1
0x40008b8	        0x480145d8	            add qword [rbp - 0x28], rax 	       348	charset.c	FUNCTION_3	WHILE_1
0x40008bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       327	charset.c	FUNCTION_3	WHILE_1
0x40008c0	           0xfb600	                   movzx eax, byte [rax]	       327	charset.c	FUNCTION_3	WHILE_1
0x40008c3	            0x84c0	                             test al, al	       327	charset.c	FUNCTION_3	WHILE_1
0x40008c5	     0xf8542ffffff	                           jne 0x400080d	       327	charset.c	FUNCTION_3	WHILE_1
0x40008cb	            0xeb01	                           jmp 0x40008ce	       327	charset.c	FUNCTION_3	WHILE_1
0x40008cd	              0x90	                                     nop	       342	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x40008ce	              0xc9	                                   leave	       350	charset.c	FUNCTION_3
0x40008cf	              0xc3	                                     ret	       350	charset.c	FUNCTION_3
in_win_border	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,4:DO,0:CALL,2	56
0x400212e	              0x55	                                push rbp	      1245	charset.c	FUNCTION_34
0x400212f	          0x4889e5	                            mov rbp, rsp	      1245	charset.c	FUNCTION_34
0x4002132	              0x53	                                push rbx	      1245	charset.c	FUNCTION_34
0x4002133	        0x4883ec28	                           sub rsp, 0x28	      1245	charset.c	FUNCTION_34
0x4002137	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1245	charset.c	FUNCTION_34
0x400213b	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1245	charset.c	FUNCTION_34
0x400213e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1249	charset.c	FUNCTION_34	IF_1
0x4002142	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1249	charset.c	FUNCTION_34	IF_1
0x4002148	            0x85c0	                           test eax, eax	      1249	charset.c	FUNCTION_34	IF_1
0x400214a	            0x7507	                           jne 0x4002153	      1249	charset.c	FUNCTION_34	IF_1
0x400214c	      0xb800000000	                              mov eax, 0	      1250	charset.c	FUNCTION_34	IF_1
0x4002151	            0xeb7c	                           jmp 0x40021cf	      1250	charset.c	FUNCTION_34	IF_1
0x4002153	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1251	charset.c	FUNCTION_34	CALL_1
0x4002157	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      1251	charset.c	FUNCTION_34	CALL_1
0x400215d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1251	charset.c	FUNCTION_34	CALL_1
0x4002161	          0x4889c7	                            mov rdi, rax	      1251	charset.c	FUNCTION_34	CALL_1
0x4002164	      0xe800000000	                          call 0x4002169	      1251	charset.c	FUNCTION_34	CALL_1
0x4002169	            0x29c3	                            sub ebx, eax	      1251	charset.c	FUNCTION_34	CALL_1
0x400216b	            0x89d8	                            mov eax, ebx	      1251	charset.c	FUNCTION_34	CALL_1
0x400216d	          0x8945e8	             mov dword [rbp - 0x18], eax	      1251	charset.c	FUNCTION_34	CALL_1
0x4002170	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1252	charset.c	FUNCTION_34	IF_2
0x4002173	          0x83e801	                              sub eax, 1	      1252	charset.c	FUNCTION_34	IF_2
0x4002176	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1252	charset.c	FUNCTION_34	IF_2
0x4002179	            0x7e07	                           jle 0x4002182	      1252	charset.c	FUNCTION_34	IF_2
0x400217b	      0xb800000000	                              mov eax, 0	      1253	charset.c	FUNCTION_34	IF_2
0x4002180	            0xeb4d	                           jmp 0x40021cf	      1253	charset.c	FUNCTION_34	IF_2
0x4002182	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1254	charset.c	FUNCTION_34	IF_3
0x4002185	          0x83e801	                              sub eax, 1	      1254	charset.c	FUNCTION_34	IF_3
0x4002188	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1254	charset.c	FUNCTION_34	IF_3
0x400218b	            0x7507	                           jne 0x4002194	      1254	charset.c	FUNCTION_34	IF_3
0x400218d	      0xb801000000	                              mov eax, 1	      1255	charset.c	FUNCTION_34	IF_3
0x4002192	            0xeb3b	                           jmp 0x40021cf	      1255	charset.c	FUNCTION_34	IF_3
0x4002194	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1256	charset.c	FUNCTION_34	CALL_2
0x4002198	          0x4889c7	                            mov rdi, rax	      1256	charset.c	FUNCTION_34	CALL_2
0x400219b	      0xe800000000	                          call 0x40021a0	      1256	charset.c	FUNCTION_34	CALL_2
0x40021a0	            0x89c2	                            mov edx, eax	      1256	charset.c	FUNCTION_34	CALL_2
0x40021a2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1256	charset.c	FUNCTION_34	CALL_2
0x40021a5	             0x1d0	                            add eax, edx	      1256	charset.c	FUNCTION_34	CALL_2
0x40021a7	          0x8945ec	             mov dword [rbp - 0x14], eax	      1256	charset.c	FUNCTION_34	CALL_2
0x40021aa	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1257	charset.c	FUNCTION_34	IF_4
0x40021ae	            0x7f07	                            jg 0x40021b7	      1257	charset.c	FUNCTION_34	IF_4
0x40021b0	      0xb800000000	                              mov eax, 0	      1258	charset.c	FUNCTION_34	IF_4
0x40021b5	            0xeb18	                           jmp 0x40021cf	      1258	charset.c	FUNCTION_34	IF_4
0x40021b7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1259	charset.c	FUNCTION_34
0x40021ba	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1259	charset.c	FUNCTION_34
0x40021bd	              0x99	                                     cdq	      1259	charset.c	FUNCTION_34
0x40021be	          0xf77dec	                 idiv dword [rbp - 0x14]	      1259	charset.c	FUNCTION_34
0x40021c1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1259	charset.c	FUNCTION_34
0x40021c4	          0x83e801	                              sub eax, 1	      1259	charset.c	FUNCTION_34
0x40021c7	            0x39c2	                            cmp edx, eax	      1259	charset.c	FUNCTION_34
0x40021c9	           0xf94c0	                                 sete al	      1259	charset.c	FUNCTION_34
0x40021cc	           0xfb6c0	                           movzx eax, al	      1259	charset.c	FUNCTION_34
0x40021cf	        0x4883c428	                           add rsp, 0x28	      1260	charset.c	FUNCTION_34
0x40021d3	              0x5b	                                 pop rbx	      1260	charset.c	FUNCTION_34
0x40021d4	              0x5d	                                 pop rbp	      1260	charset.c	FUNCTION_34
0x40021d5	              0xc3	                                     ret	      1260	charset.c	FUNCTION_34
win_nolbr_chartabsize	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,3:DO,0:CALL,3	57
0x4002076	              0x55	                                push rbp	      1219	charset.c	FUNCTION_33
0x4002077	          0x4889e5	                            mov rbp, rsp	      1219	charset.c	FUNCTION_33
0x400207a	        0x4883ec30	                           sub rsp, 0x30	      1219	charset.c	FUNCTION_33
0x400207e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1219	charset.c	FUNCTION_33
0x4002082	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1219	charset.c	FUNCTION_33
0x4002086	          0x8955dc	             mov dword [rbp - 0x24], edx	      1219	charset.c	FUNCTION_33
0x4002089	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1219	charset.c	FUNCTION_33
0x400208d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1222	charset.c	FUNCTION_33	IF_1
0x4002091	           0xfb600	                   movzx eax, byte [rax]	      1222	charset.c	FUNCTION_33	IF_1
0x4002094	            0x3c09	                               cmp al, 9	      1222	charset.c	FUNCTION_33	IF_1
0x4002096	            0x7538	                           jne 0x40020d0	      1222	charset.c	FUNCTION_33	IF_1
0x4002098	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1222	charset.c	FUNCTION_33	IF_1
0x400209c	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1222	charset.c	FUNCTION_33	IF_1
0x40020a2	            0x85c0	                           test eax, eax	      1222	charset.c	FUNCTION_33	IF_1
0x40020a4	            0x740a	                            je 0x40020b0	      1222	charset.c	FUNCTION_33	IF_1
0x40020a6	    0x8b0500000000	            mov eax, dword [0x040020ac] 	      1222	charset.c	FUNCTION_33	IF_1
0x40020ac	            0x85c0	                           test eax, eax	      1222	charset.c	FUNCTION_33	IF_1
0x40020ae	            0x7420	                            je 0x40020d0	      1222	charset.c	FUNCTION_33	IF_1
0x40020b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1224	charset.c	FUNCTION_33	IF_1
0x40020b4	        0x488b4008	                mov rax, qword [rax + 8]	      1224	charset.c	FUNCTION_33	IF_1
0x40020b8	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1224	charset.c	FUNCTION_33	IF_1
0x40020bf	          0x8945fc	                mov dword [rbp - 4], eax	      1224	charset.c	FUNCTION_33	IF_1
0x40020c2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1225	charset.c	FUNCTION_33	IF_1
0x40020c5	              0x99	                                     cdq	      1225	charset.c	FUNCTION_33	IF_1
0x40020c6	          0xf77dfc	                    idiv dword [rbp - 4]	      1225	charset.c	FUNCTION_33	IF_1
0x40020c9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1225	charset.c	FUNCTION_33	IF_1
0x40020cc	            0x29d0	                            sub eax, edx	      1225	charset.c	FUNCTION_33	IF_1
0x40020ce	            0xeb5c	                           jmp 0x400212c	      1225	charset.c	FUNCTION_33	IF_1
0x40020d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1227	charset.c	FUNCTION_33	CALL_1
0x40020d4	          0x4889c7	                            mov rdi, rax	      1227	charset.c	FUNCTION_33	CALL_1
0x40020d7	      0xe800000000	                          call 0x40020dc	      1227	charset.c	FUNCTION_33	CALL_1
0x40020dc	          0x8945fc	                mov dword [rbp - 4], eax	      1227	charset.c	FUNCTION_33	CALL_1
0x40020df	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020e3	            0x7544	                           jne 0x4002129	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020e9	           0xfb600	                   movzx eax, byte [rax]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020ec	           0xfb6c0	                           movzx eax, al	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020ef	            0x4898	                                    cdqe	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020f1	     0xfb680000000	                   movzx eax, byte [rax]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020f8	            0x3c01	                               cmp al, 1	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020fa	            0x7e2d	                           jle 0x4002129	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020fc	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x40020ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4002103	            0x89d6	                            mov esi, edx	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4002105	          0x4889c7	                            mov rdi, rax	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4002108	      0xe800000000	                          call 0x400210d	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x400210d	            0x85c0	                           test eax, eax	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x400210f	            0x7418	                            je 0x4002129	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4002111	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1232	charset.c	FUNCTION_33	IF_2	IF_3
0x4002116	            0x740a	                            je 0x4002122	      1232	charset.c	FUNCTION_33	IF_2	IF_3
0x4002118	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	charset.c	FUNCTION_33	IF_2	IF_3
0x400211c	    0xc70001000000	                      mov dword [rax], 1	      1233	charset.c	FUNCTION_33	IF_2	IF_3
0x4002122	      0xb803000000	                              mov eax, 3	      1234	charset.c	FUNCTION_33	IF_2
0x4002127	            0xeb03	                           jmp 0x400212c	      1234	charset.c	FUNCTION_33	IF_2
0x4002129	          0x8b45fc	                mov eax, dword [rbp - 4]	      1236	charset.c	FUNCTION_33
0x400212c	              0xc9	                                   leave	      1237	charset.c	FUNCTION_33
0x400212d	              0xc3	                                     ret	      1237	charset.c	FUNCTION_33
backslash_halve	ELSE,0:FOR,1:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,2	29
0x400351b	              0x55	                                push rbp	      2079	charset.c	FUNCTION_63
0x400351c	          0x4889e5	                            mov rbp, rsp	      2079	charset.c	FUNCTION_63
0x400351f	        0x4883ec10	                           sub rsp, 0x10	      2079	charset.c	FUNCTION_63
0x4003523	        0x48897df8	                mov qword [rbp - 8], rdi	      2079	charset.c	FUNCTION_63
0x4003527	            0xeb40	                           jmp 0x4003569	      2080	charset.c	FUNCTION_63	FOR_1
0x4003529	        0x488b45f8	                mov rax, qword [rbp - 8]	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x400352d	          0x4889c7	                            mov rdi, rax	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4003530	      0xe800000000	                          call 0x4003535	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4003535	            0x85c0	                           test eax, eax	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4003537	            0x742b	                            je 0x4003564	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4003539	        0x488b45f8	                mov rax, qword [rbp - 8]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x400353d	        0x4883c001	                              add rax, 1	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003541	          0x4889c7	                            mov rdi, rax	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003544	      0xe800000000	                          call 0x4003549	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003549	        0x488d5001	                      lea rdx, [rax + 1]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x400354d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003551	        0x488d4801	                      lea rcx, [rax + 1]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003555	        0x488b45f8	                mov rax, qword [rbp - 8]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003559	          0x4889ce	                            mov rsi, rcx	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x400355c	          0x4889c7	                            mov rdi, rax	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x400355f	      0xe800000000	                          call 0x4003564	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4003564	      0x488345f801	                  add qword [rbp - 8], 1	      2080	charset.c	FUNCTION_63	FOR_1
0x4003569	        0x488b45f8	                mov rax, qword [rbp - 8]	      2080	charset.c	FUNCTION_63	FOR_1
0x400356d	           0xfb600	                   movzx eax, byte [rax]	      2080	charset.c	FUNCTION_63	FOR_1
0x4003570	            0x84c0	                             test al, al	      2080	charset.c	FUNCTION_63	FOR_1
0x4003572	            0x75b5	                           jne 0x4003529	      2080	charset.c	FUNCTION_63	FOR_1
0x4003574	              0x90	                                     nop	      2083	charset.c	FUNCTION_63
0x4003575	              0xc9	                                   leave	      2083	charset.c	FUNCTION_63
0x4003576	              0xc3	                                     ret	      2083	charset.c	FUNCTION_63
skiptowhite	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,0	20
0x4002eb8	              0x55	                                push rbp	      1789	charset.c	FUNCTION_55
0x4002eb9	          0x4889e5	                            mov rbp, rsp	      1789	charset.c	FUNCTION_55
0x4002ebc	        0x48897df8	                mov qword [rbp - 8], rdi	      1789	charset.c	FUNCTION_55
0x4002ec0	            0xeb05	                           jmp 0x4002ec7	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ec2	      0x488345f801	                  add qword [rbp - 8], 1	      1791	charset.c	FUNCTION_55	WHILE_1
0x4002ec7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ecb	           0xfb600	                   movzx eax, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ece	            0x3c20	                            cmp al, 0x20	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ed0	            0x7416	                            je 0x4002ee8	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ed2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ed6	           0xfb600	                   movzx eax, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ed9	            0x3c09	                               cmp al, 9	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002edb	            0x740b	                            je 0x4002ee8	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002edd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ee1	           0xfb600	                   movzx eax, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ee4	            0x84c0	                             test al, al	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ee6	            0x75da	                           jne 0x4002ec2	      1790	charset.c	FUNCTION_55	WHILE_1
0x4002ee8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	charset.c	FUNCTION_55
0x4002eec	              0x5d	                                 pop rbp	      1793	charset.c	FUNCTION_55
0x4002eed	              0xc3	                                     ret	      1793	charset.c	FUNCTION_55
vim_isfilec	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0	19
0x4001776	              0x55	                                push rbp	       942	charset.c	FUNCTION_26
0x4001777	          0x4889e5	                            mov rbp, rsp	       942	charset.c	FUNCTION_26
0x400177a	          0x897dfc	                mov dword [rbp - 4], edi	       942	charset.c	FUNCTION_26
0x400177d	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       943	charset.c	FUNCTION_26
0x4001784	            0x7f1c	                            jg 0x40017a2	       943	charset.c	FUNCTION_26
0x4001786	        0x837dfc00	                  cmp dword [rbp - 4], 0	       943	charset.c	FUNCTION_26
0x400178a	            0x7e1d	                           jle 0x40017a9	       943	charset.c	FUNCTION_26
0x400178c	          0x8b45fc	                mov eax, dword [rbp - 4]	       943	charset.c	FUNCTION_26
0x400178f	            0x4898	                                    cdqe	       943	charset.c	FUNCTION_26
0x4001791	     0xfb680000000	                   movzx eax, byte [rax]	       943	charset.c	FUNCTION_26
0x4001798	           0xfb6c0	                           movzx eax, al	       943	charset.c	FUNCTION_26
0x400179b	          0x83e040	                           and eax, 0x40	       943	charset.c	FUNCTION_26
0x400179e	            0x85c0	                           test eax, eax	       943	charset.c	FUNCTION_26
0x40017a0	            0x7407	                            je 0x40017a9	       943	charset.c	FUNCTION_26
0x40017a2	      0xb801000000	                              mov eax, 1	       943	charset.c	FUNCTION_26
0x40017a7	            0xeb05	                           jmp 0x40017ae	       943	charset.c	FUNCTION_26
0x40017a9	      0xb800000000	                              mov eax, 0	       943	charset.c	FUNCTION_26
0x40017ae	              0x5d	                                 pop rbp	       944	charset.c	FUNCTION_26
0x40017af	              0xc3	                                     ret	       944	charset.c	FUNCTION_26
vim_iswordc_buf	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,3:DO,0:CALL,2	58
0x4001645	              0x55	                                push rbp	       901	charset.c	FUNCTION_23
0x4001646	          0x4889e5	                            mov rbp, rsp	       901	charset.c	FUNCTION_23
0x4001649	        0x4883ec10	                           sub rsp, 0x10	       901	charset.c	FUNCTION_23
0x400164d	          0x897dfc	                mov dword [rbp - 4], edi	       901	charset.c	FUNCTION_23
0x4001650	        0x488975f0	             mov qword [rbp - 0x10], rsi	       901	charset.c	FUNCTION_23
0x4001654	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       902	charset.c	FUNCTION_23	IF_1
0x400165b	            0x7e57	                           jle 0x40016b4	       902	charset.c	FUNCTION_23	IF_1
0x400165d	    0x8b0500000000	            mov eax, dword [0x04001663] 	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x4001663	            0x85c0	                           test eax, eax	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x4001665	            0x7420	                            je 0x4001687	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x4001667	          0x8b45fc	                mov eax, dword [rbp - 4]	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400166a	           0xfb6c0	                           movzx eax, al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400166d	          0x8b55fc	                mov edx, dword [rbp - 4]	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4001670	          0xc1ea08	                              shr edx, 8	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4001673	            0x89c6	                            mov esi, eax	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4001675	            0x89d7	                            mov edi, edx	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4001677	      0xe800000000	                          call 0x400167c	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400167c	          0x83f801	                              cmp eax, 1	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400167f	           0xf9fc0	                                 setg al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4001682	           0xfb6c0	                           movzx eax, al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4001685	            0xeb6c	                           jmp 0x40016f3	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4001687	    0x8b0500000000	            mov eax, dword [0x0400168d] 	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x400168d	            0x85c0	                           test eax, eax	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x400168f	            0x741c	                            je 0x40016ad	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x4001691	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x4001695	          0x8b45fc	                mov eax, dword [rbp - 4]	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x4001698	          0x4889d6	                            mov rsi, rdx	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x400169b	            0x89c7	                            mov edi, eax	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x400169d	      0xe800000000	                          call 0x40016a2	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x40016a2	          0x83f801	                              cmp eax, 1	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x40016a5	           0xf9fc0	                                 setg al	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x40016a8	           0xfb6c0	                           movzx eax, al	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x40016ab	            0xeb46	                           jmp 0x40016f3	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x40016ad	      0xb800000000	                              mov eax, 0	       910	charset.c	FUNCTION_23	IF_1
0x40016b2	            0xeb3f	                           jmp 0x40016f3	       910	charset.c	FUNCTION_23	IF_1
0x40016b4	        0x837dfc00	                  cmp dword [rbp - 4], 0	       912	charset.c	FUNCTION_23
0x40016b8	            0x7e33	                           jle 0x40016ed	       912	charset.c	FUNCTION_23
0x40016ba	          0x8b45fc	                mov eax, dword [rbp - 4]	       912	charset.c	FUNCTION_23
0x40016bd	          0xc1e803	                              shr eax, 3	       912	charset.c	FUNCTION_23
0x40016c0	            0x89c2	                            mov edx, eax	       912	charset.c	FUNCTION_23
0x40016c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       912	charset.c	FUNCTION_23
0x40016c6	            0x89d2	                            mov edx, edx	       912	charset.c	FUNCTION_23
0x40016c8	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       912	charset.c	FUNCTION_23
0x40016d0	           0xfb6d0	                           movzx edx, al	       912	charset.c	FUNCTION_23
0x40016d3	          0x8b45fc	                mov eax, dword [rbp - 4]	       912	charset.c	FUNCTION_23
0x40016d6	          0x83e007	                              and eax, 7	       912	charset.c	FUNCTION_23
0x40016d9	            0x89c1	                            mov ecx, eax	       912	charset.c	FUNCTION_23
0x40016db	            0xd3fa	                             sar edx, cl	       912	charset.c	FUNCTION_23
0x40016dd	            0x89d0	                            mov eax, edx	       912	charset.c	FUNCTION_23
0x40016df	          0x83e001	                              and eax, 1	       912	charset.c	FUNCTION_23
0x40016e2	            0x85c0	                           test eax, eax	       912	charset.c	FUNCTION_23
0x40016e4	            0x7407	                            je 0x40016ed	       912	charset.c	FUNCTION_23
0x40016e6	      0xb801000000	                              mov eax, 1	       912	charset.c	FUNCTION_23
0x40016eb	            0xeb05	                           jmp 0x40016f2	       912	charset.c	FUNCTION_23
0x40016ed	      0xb800000000	                              mov eax, 0	       912	charset.c	FUNCTION_23
0x40016f2	              0x90	                                     nop	       912	charset.c	FUNCTION_23
0x40016f3	              0xc9	                                   leave	       913	charset.c	FUNCTION_23
0x40016f4	              0xc3	                                     ret	       913	charset.c	FUNCTION_23
skipdigits	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	16
0x4002a43	              0x55	                                push rbp	      1559	charset.c	FUNCTION_42
0x4002a44	          0x4889e5	                            mov rbp, rsp	      1559	charset.c	FUNCTION_42
0x4002a47	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1559	charset.c	FUNCTION_42
0x4002a4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1560	charset.c	FUNCTION_42
0x4002a4f	        0x488945f8	                mov qword [rbp - 8], rax	      1560	charset.c	FUNCTION_42
0x4002a53	            0xeb05	                           jmp 0x4002a5a	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4002a55	      0x488345f801	                  add qword [rbp - 8], 1	      1563	charset.c	FUNCTION_42	WHILE_1
0x4002a5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4002a5e	           0xfb600	                   movzx eax, byte [rax]	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4002a61	           0xfb6c0	                           movzx eax, al	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4002a64	          0x83e830	                           sub eax, 0x30	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4002a67	          0x83f809	                              cmp eax, 9	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4002a6a	            0x76e9	                           jbe 0x4002a55	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4002a6c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1564	charset.c	FUNCTION_42
0x4002a70	              0x5d	                                 pop rbp	      1565	charset.c	FUNCTION_42
0x4002a71	              0xc3	                                     ret	      1565	charset.c	FUNCTION_42
linetabsize_col	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	24
0x400150b	              0x55	                                push rbp	       854	charset.c	FUNCTION_19
0x400150c	          0x4889e5	                            mov rbp, rsp	       854	charset.c	FUNCTION_19
0x400150f	        0x4883ec20	                           sub rsp, 0x20	       854	charset.c	FUNCTION_19
0x4001513	          0x897dec	             mov dword [rbp - 0x14], edi	       854	charset.c	FUNCTION_19
0x4001516	        0x488975e0	             mov qword [rbp - 0x20], rsi	       854	charset.c	FUNCTION_19
0x400151a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       855	charset.c	FUNCTION_19
0x400151d	          0x8945f4	              mov dword [rbp - 0xc], eax	       855	charset.c	FUNCTION_19
0x4001520	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       856	charset.c	FUNCTION_19
0x4001524	        0x488945f8	                mov qword [rbp - 8], rax	       856	charset.c	FUNCTION_19
0x4001528	            0xeb19	                           jmp 0x4001543	       858	charset.c	FUNCTION_19	WHILE_1
0x400152a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       859	charset.c	FUNCTION_19	CALL_1
0x400152d	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       859	charset.c	FUNCTION_19	CALL_1
0x4001531	        0x488b45f8	                mov rax, qword [rbp - 8]	       859	charset.c	FUNCTION_19	CALL_1
0x4001535	          0x4889ce	                            mov rsi, rcx	       859	charset.c	FUNCTION_19	CALL_1
0x4001538	          0x4889c7	                            mov rdi, rax	       859	charset.c	FUNCTION_19	CALL_1
0x400153b	      0xe800000000	                          call 0x4001540	       859	charset.c	FUNCTION_19	CALL_1
0x4001540	           0x145f4	              add dword [rbp - 0xc], eax	       859	charset.c	FUNCTION_19	CALL_1
0x4001543	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       858	charset.c	FUNCTION_19	WHILE_1
0x4001547	           0xfb600	                   movzx eax, byte [rax]	       858	charset.c	FUNCTION_19	WHILE_1
0x400154a	            0x84c0	                             test al, al	       858	charset.c	FUNCTION_19	WHILE_1
0x400154c	            0x75dc	                           jne 0x400152a	       858	charset.c	FUNCTION_19	WHILE_1
0x400154e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       860	charset.c	FUNCTION_19
0x4001551	              0xc9	                                   leave	       861	charset.c	FUNCTION_19
0x4001552	              0xc3	                                     ret	       861	charset.c	FUNCTION_19
skipbin	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	18
0x4002a72	              0x55	                                push rbp	      1573	charset.c	FUNCTION_43
0x4002a73	          0x4889e5	                            mov rbp, rsp	      1573	charset.c	FUNCTION_43
0x4002a76	        0x4883ec20	                           sub rsp, 0x20	      1573	charset.c	FUNCTION_43
0x4002a7a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1573	charset.c	FUNCTION_43
0x4002a7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1574	charset.c	FUNCTION_43
0x4002a82	        0x488945f8	                mov qword [rbp - 8], rax	      1574	charset.c	FUNCTION_43
0x4002a86	            0xeb05	                           jmp 0x4002a8d	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002a88	      0x488345f801	                  add qword [rbp - 8], 1	      1577	charset.c	FUNCTION_43	WHILE_1
0x4002a8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002a91	           0xfb600	                   movzx eax, byte [rax]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002a94	           0xfb6c0	                           movzx eax, al	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002a97	            0x89c7	                            mov edi, eax	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002a99	      0xe800000000	                          call 0x4002a9e	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002a9e	            0x85c0	                           test eax, eax	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002aa0	            0x75e6	                           jne 0x4002a88	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4002aa2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1578	charset.c	FUNCTION_43
0x4002aa6	              0xc9	                                   leave	      1579	charset.c	FUNCTION_43
0x4002aa7	              0xc3	                                     ret	      1579	charset.c	FUNCTION_43
byte2cells	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,0	17
0x400124d	              0x55	                                push rbp	       718	charset.c	FUNCTION_11
0x400124e	          0x4889e5	                            mov rbp, rsp	       718	charset.c	FUNCTION_11
0x4001251	          0x897dfc	                mov dword [rbp - 4], edi	       718	charset.c	FUNCTION_11
0x4001254	    0x8b0500000000	            mov eax, dword [0x0400125a] 	       720	charset.c	FUNCTION_11	IF_1
0x400125a	            0x85c0	                           test eax, eax	       720	charset.c	FUNCTION_11	IF_1
0x400125c	            0x740d	                            je 0x400126b	       720	charset.c	FUNCTION_11	IF_1
0x400125e	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	       720	charset.c	FUNCTION_11	IF_1
0x4001262	            0x7e07	                           jle 0x400126b	       720	charset.c	FUNCTION_11	IF_1
0x4001264	      0xb800000000	                              mov eax, 0	       721	charset.c	FUNCTION_11	IF_1
0x4001269	            0xeb12	                           jmp 0x400127d	       721	charset.c	FUNCTION_11	IF_1
0x400126b	          0x8b45fc	                mov eax, dword [rbp - 4]	       723	charset.c	FUNCTION_11
0x400126e	            0x4898	                                    cdqe	       723	charset.c	FUNCTION_11
0x4001270	     0xfb680000000	                   movzx eax, byte [rax]	       723	charset.c	FUNCTION_11
0x4001277	           0xfb6c0	                           movzx eax, al	       723	charset.c	FUNCTION_11
0x400127a	          0x83e007	                              and eax, 7	       723	charset.c	FUNCTION_11
0x400127d	              0x5d	                                 pop rbp	       724	charset.c	FUNCTION_11
0x400127e	              0xc3	                                     ret	       724	charset.c	FUNCTION_11
getwhitecols_curline	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,2	7
0x4002a09	              0x55	                                push rbp	      1544	charset.c	FUNCTION_40
0x4002a0a	          0x4889e5	                            mov rbp, rsp	      1544	charset.c	FUNCTION_40
0x4002a0d	      0xe800000000	                          call 0x4002a12	      1545	charset.c	FUNCTION_40	CALL_2
0x4002a12	          0x4889c7	                            mov rdi, rax	      1545	charset.c	FUNCTION_40	CALL_2
0x4002a15	      0xe800000000	                          call 0x4002a1a	      1545	charset.c	FUNCTION_40	CALL_2
0x4002a1a	              0x5d	                                 pop rbp	      1546	charset.c	FUNCTION_40
0x4002a1b	              0xc3	                                     ret	      1546	charset.c	FUNCTION_40
skiptodigit	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	20
0x4002b1f	              0x55	                                push rbp	      1613	charset.c	FUNCTION_46
0x4002b20	          0x4889e5	                            mov rbp, rsp	      1613	charset.c	FUNCTION_46
0x4002b23	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1613	charset.c	FUNCTION_46
0x4002b27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1614	charset.c	FUNCTION_46
0x4002b2b	        0x488945f8	                mov qword [rbp - 8], rax	      1614	charset.c	FUNCTION_46
0x4002b2f	            0xeb05	                           jmp 0x4002b36	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b31	      0x488345f801	                  add qword [rbp - 8], 1	      1617	charset.c	FUNCTION_46	WHILE_1
0x4002b36	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b3a	           0xfb600	                   movzx eax, byte [rax]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b3d	            0x84c0	                             test al, al	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b3f	            0x7412	                            je 0x4002b53	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b41	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b45	           0xfb600	                   movzx eax, byte [rax]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b48	           0xfb6c0	                           movzx eax, al	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b4b	          0x83e830	                           sub eax, 0x30	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b4e	          0x83f809	                              cmp eax, 9	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b51	            0x77de	                            ja 0x4002b31	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4002b53	        0x488b45f8	                mov rax, qword [rbp - 8]	      1618	charset.c	FUNCTION_46
0x4002b57	              0x5d	                                 pop rbp	      1619	charset.c	FUNCTION_46
0x4002b58	              0xc3	                                     ret	      1619	charset.c	FUNCTION_46
vim_islower	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,6:DO,0:CALL,3	44
0x4002c15	              0x55	                                push rbp	      1685	charset.c	FUNCTION_51
0x4002c16	          0x4889e5	                            mov rbp, rsp	      1685	charset.c	FUNCTION_51
0x4002c19	        0x4883ec10	                           sub rsp, 0x10	      1685	charset.c	FUNCTION_51
0x4002c1d	          0x897dfc	                mov dword [rbp - 4], edi	      1685	charset.c	FUNCTION_51
0x4002c20	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1686	charset.c	FUNCTION_51	IF_1
0x4002c24	            0x7f07	                            jg 0x4002c2d	      1686	charset.c	FUNCTION_51	IF_1
0x4002c26	      0xb800000000	                              mov eax, 0	      1687	charset.c	FUNCTION_51	IF_1
0x4002c2b	            0xeb72	                           jmp 0x4002c9f	      1687	charset.c	FUNCTION_51	IF_1
0x4002c2d	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1688	charset.c	FUNCTION_51	IF_2
0x4002c31	            0x7e4d	                           jle 0x4002c80	      1688	charset.c	FUNCTION_51	IF_2
0x4002c33	    0x8b0500000000	            mov eax, dword [0x04002c39] 	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x4002c39	            0x85c0	                           test eax, eax	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x4002c3b	            0x740c	                            je 0x4002c49	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x4002c3d	          0x8b45fc	                mov eax, dword [rbp - 4]	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x4002c40	            0x89c7	                            mov edi, eax	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x4002c42	      0xe800000000	                          call 0x4002c47	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x4002c47	            0xeb56	                           jmp 0x4002c9f	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x4002c49	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1692	charset.c	FUNCTION_51	IF_2	IF_4
0x4002c50	            0x7e07	                           jle 0x4002c59	      1692	charset.c	FUNCTION_51	IF_2	IF_4
0x4002c52	      0xb800000000	                              mov eax, 0	      1699	charset.c	FUNCTION_51	IF_2	IF_4
0x4002c57	            0xeb46	                           jmp 0x4002c9f	      1699	charset.c	FUNCTION_51	IF_2	IF_4
0x4002c59	    0x8b0500000000	            mov eax, dword [0x04002c5f] 	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c5f	            0x85c0	                           test eax, eax	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c61	            0x741d	                            je 0x4002c80	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c63	          0x8b45fc	                mov eax, dword [rbp - 4]	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c66	            0x4898	                                    cdqe	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c68	     0xfb680000000	                   movzx eax, byte [rax]	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c6f	           0xfb6c0	                           movzx eax, al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c72	          0x83e06c	                           and eax, 0x6c	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c75	          0x83f86c	                           cmp eax, 0x6c	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c78	           0xf94c0	                                 sete al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c7b	           0xfb6c0	                           movzx eax, al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c7e	            0xeb1f	                           jmp 0x4002c9f	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4002c80	      0xe800000000	                          call 0x4002c85	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c85	          0x488b00	                    mov rax, qword [rax]	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c88	          0x8b55fc	                mov edx, dword [rbp - 4]	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c8b	          0x4863d2	                         movsxd rdx, edx	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c8e	          0x4801d2	                            add rdx, rdx	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c91	          0x4801d0	                            add rax, rdx	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c94	           0xfb700	                   movzx eax, word [rax]	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c97	           0xfb7c0	                           movzx eax, ax	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c9a	      0x2500020000	                          and eax, 0x200	      1704	charset.c	FUNCTION_51	CALL_3
0x4002c9f	              0xc9	                                   leave	      1705	charset.c	FUNCTION_51
0x4002ca0	              0xc3	                                     ret	      1705	charset.c	FUNCTION_51
getvcol_nolist	ELSE,1:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,2	43
0x400260e	              0x55	                                push rbp	      1415	charset.c	ELSE_6	FUNCTION_36
0x400260f	          0x4889e5	                            mov rbp, rsp	      1415	charset.c	ELSE_6	FUNCTION_36
0x4002612	        0x4883ec20	                           sub rsp, 0x20	      1415	charset.c	ELSE_6	FUNCTION_36
0x4002616	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1415	charset.c	ELSE_6	FUNCTION_36
0x400261a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1415	charset.c	ELSE_6	FUNCTION_36
0x4002623	        0x488945f8	                mov qword [rbp - 8], rax	      1415	charset.c	ELSE_6	FUNCTION_36
0x4002627	            0x31c0	                            xor eax, eax	      1415	charset.c	ELSE_6	FUNCTION_36
0x4002629	    0x488b05000000	            mov rax, qword [0x04002630] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x4002630	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x4002636	          0x8945f4	              mov dword [rbp - 0xc], eax	      1416	charset.c	ELSE_6	FUNCTION_36
0x4002639	    0x488b05000000	            mov rax, qword [0x04002640] 	      1419	charset.c	ELSE_6	FUNCTION_36
0x4002640	    0xc78034020000	              mov dword [rax + 0x234], 0	      1419	charset.c	ELSE_6	FUNCTION_36
0x400264a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x400264e	          0x8b400c	              mov eax, dword [rax + 0xc]	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4002651	            0x85c0	                           test eax, eax	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4002653	            0x7427	                            je 0x400267c	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4002655	    0x488b05000000	            mov rax, qword [0x0400265c] 	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400265c	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4002660	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4002664	    0x41b800000000	                              mov r8d, 0	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400266a	          0x4889d1	                            mov rcx, rdx	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400266d	      0xba00000000	                              mov edx, 0	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4002672	          0x4889c7	                            mov rdi, rax	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4002675	      0xe800000000	                          call 0x400267a	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400267a	            0xeb25	                           jmp 0x40026a1	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400267c	    0x488b05000000	            mov rax, qword [0x04002683] 	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4002683	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4002687	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x400268b	    0x41b800000000	                              mov r8d, 0	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4002691	          0x4889d1	                            mov rcx, rdx	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4002694	      0xba00000000	                              mov edx, 0	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4002699	          0x4889c7	                            mov rdi, rax	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x400269c	      0xe800000000	                          call 0x40026a1	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x40026a1	    0x488b05000000	            mov rax, qword [0x040026a8] 	      1426	charset.c	ELSE_6	FUNCTION_36
0x40026a8	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1426	charset.c	ELSE_6	FUNCTION_36
0x40026ab	    0x899034020000	            mov dword [rax + 0x234], edx	      1426	charset.c	ELSE_6	FUNCTION_36
0x40026b1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1427	charset.c	ELSE_6	FUNCTION_36
0x40026b4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1428	charset.c	ELSE_6	FUNCTION_36
0x40026b8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1428	charset.c	ELSE_6	FUNCTION_36
0x40026c1	            0x7405	                            je 0x40026c8	      1428	charset.c	ELSE_6	FUNCTION_36
0x40026c3	      0xe800000000	                          call 0x40026c8	      1428	charset.c	ELSE_6	FUNCTION_36
0x40026c8	              0xc9	                                   leave	      1428	charset.c	ELSE_6	FUNCTION_36
0x40026c9	              0xc3	                                     ret	      1428	charset.c	ELSE_6	FUNCTION_36
vim_strsize	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	10
0x4001379	              0x55	                                push rbp	       777	charset.c	FUNCTION_14
0x400137a	          0x4889e5	                            mov rbp, rsp	       777	charset.c	FUNCTION_14
0x400137d	        0x4883ec10	                           sub rsp, 0x10	       777	charset.c	FUNCTION_14
0x4001381	        0x48897df8	                mov qword [rbp - 8], rdi	       777	charset.c	FUNCTION_14
0x4001385	        0x488b45f8	                mov rax, qword [rbp - 8]	       778	charset.c	FUNCTION_14	CALL_1
0x4001389	      0xbeffffff7f	                     mov esi, 0x7fffffff	       778	charset.c	FUNCTION_14	CALL_1
0x400138e	          0x4889c7	                            mov rdi, rax	       778	charset.c	FUNCTION_14	CALL_1
0x4001391	      0xe800000000	                          call 0x4001396	       778	charset.c	FUNCTION_14	CALL_1
0x4001396	              0xc9	                                   leave	       779	charset.c	FUNCTION_14
0x4001397	              0xc3	                                     ret	       779	charset.c	FUNCTION_14
vim_toupper	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,7:DO,0:CALL,4	60
0x4002d46	              0x55	                                push rbp	      1733	charset.c	FUNCTION_53
0x4002d47	          0x4889e5	                            mov rbp, rsp	      1733	charset.c	FUNCTION_53
0x4002d4a	        0x4883ec10	                           sub rsp, 0x10	      1733	charset.c	FUNCTION_53
0x4002d4e	          0x897dfc	                mov dword [rbp - 4], edi	      1733	charset.c	FUNCTION_53
0x4002d51	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1734	charset.c	FUNCTION_53	IF_1
0x4002d55	            0x7f08	                            jg 0x4002d5f	      1734	charset.c	FUNCTION_53	IF_1
0x4002d57	          0x8b45fc	                mov eax, dword [rbp - 4]	      1735	charset.c	FUNCTION_53	IF_1
0x4002d5a	      0xe99e000000	                           jmp 0x4002dfd	      1735	charset.c	FUNCTION_53	IF_1
0x4002d5f	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1736	charset.c	FUNCTION_53	IF_2
0x4002d63	            0x7f0d	                            jg 0x4002d72	      1736	charset.c	FUNCTION_53	IF_2
0x4002d65	    0x8b0500000000	            mov eax, dword [0x04002d6b] 	      1736	charset.c	FUNCTION_53	IF_2
0x4002d6b	          0x83e002	                              and eax, 2	      1736	charset.c	FUNCTION_53	IF_2
0x4002d6e	            0x85c0	                           test eax, eax	      1736	charset.c	FUNCTION_53	IF_2
0x4002d70	            0x7555	                           jne 0x4002dc7	      1736	charset.c	FUNCTION_53	IF_2
0x4002d72	    0x8b0500000000	            mov eax, dword [0x04002d78] 	      1738	charset.c	FUNCTION_53	IF_2	IF_3
0x4002d78	            0x85c0	                           test eax, eax	      1738	charset.c	FUNCTION_53	IF_2	IF_3
0x4002d7a	            0x740c	                            je 0x4002d88	      1738	charset.c	FUNCTION_53	IF_2	IF_3
0x4002d7c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x4002d7f	            0x89c7	                            mov edi, eax	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x4002d81	      0xe800000000	                          call 0x4002d86	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x4002d86	            0xeb75	                           jmp 0x4002dfd	      1739	charset.c	FUNCTION_53	IF_2	CALL_1
0x4002d88	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1740	charset.c	FUNCTION_53	IF_2	IF_4
0x4002d8f	            0x7e1b	                           jle 0x4002dac	      1740	charset.c	FUNCTION_53	IF_2	IF_4
0x4002d91	    0x8b0500000000	            mov eax, dword [0x04002d97] 	      1743	charset.c	FUNCTION_53	IF_2	IF_4	IF_5
0x4002d97	            0x85c0	                           test eax, eax	      1743	charset.c	FUNCTION_53	IF_2	IF_4	IF_5
0x4002d99	            0x740c	                            je 0x4002da7	      1743	charset.c	FUNCTION_53	IF_2	IF_4	IF_5
0x4002d9b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x4002d9e	            0x89c7	                            mov edi, eax	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x4002da0	      0xe800000000	                          call 0x4002da5	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x4002da5	            0xeb56	                           jmp 0x4002dfd	      1744	charset.c	FUNCTION_53	IF_2	IF_4	CALL_2
0x4002da7	          0x8b45fc	                mov eax, dword [rbp - 4]	      1747	charset.c	FUNCTION_53	IF_2	IF_4
0x4002daa	            0xeb51	                           jmp 0x4002dfd	      1747	charset.c	FUNCTION_53	IF_2	IF_4
0x4002dac	    0x8b0500000000	            mov eax, dword [0x04002db2] 	      1749	charset.c	FUNCTION_53	IF_2	IF_6
0x4002db2	            0x85c0	                           test eax, eax	      1749	charset.c	FUNCTION_53	IF_2	IF_6
0x4002db4	            0x7411	                            je 0x4002dc7	      1749	charset.c	FUNCTION_53	IF_2	IF_6
0x4002db6	          0x8b45fc	                mov eax, dword [rbp - 4]	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x4002db9	            0x4898	                                    cdqe	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x4002dbb	     0xfb680000000	                   movzx eax, byte [rax]	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x4002dc2	           0xfb6c0	                           movzx eax, al	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x4002dc5	            0xeb36	                           jmp 0x4002dfd	      1750	charset.c	FUNCTION_53	IF_2	IF_6
0x4002dc7	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1752	charset.c	FUNCTION_53	IF_7
0x4002dcb	            0x7f26	                            jg 0x4002df3	      1752	charset.c	FUNCTION_53	IF_7
0x4002dcd	    0x8b0500000000	            mov eax, dword [0x04002dd3] 	      1752	charset.c	FUNCTION_53	IF_7
0x4002dd3	          0x83e002	                              and eax, 2	      1752	charset.c	FUNCTION_53	IF_7
0x4002dd6	            0x85c0	                           test eax, eax	      1752	charset.c	FUNCTION_53	IF_7
0x4002dd8	            0x7419	                            je 0x4002df3	      1752	charset.c	FUNCTION_53	IF_7
0x4002dda	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      1753	charset.c	FUNCTION_53	CALL_3
0x4002dde	            0x7e0e	                           jle 0x4002dee	      1753	charset.c	FUNCTION_53	CALL_3
0x4002de0	        0x837dfc7a	               cmp dword [rbp - 4], 0x7a	      1753	charset.c	FUNCTION_53	CALL_3
0x4002de4	            0x7f08	                            jg 0x4002dee	      1753	charset.c	FUNCTION_53	CALL_3
0x4002de6	          0x8b45fc	                mov eax, dword [rbp - 4]	      1753	charset.c	FUNCTION_53	CALL_3
0x4002de9	          0x83e820	                           sub eax, 0x20	      1753	charset.c	FUNCTION_53	CALL_3
0x4002dec	            0xeb0f	                           jmp 0x4002dfd	      1753	charset.c	FUNCTION_53	CALL_3
0x4002dee	          0x8b45fc	                mov eax, dword [rbp - 4]	      1753	charset.c	FUNCTION_53	CALL_3
0x4002df1	            0xeb0a	                           jmp 0x4002dfd	      1753	charset.c	FUNCTION_53	CALL_3
0x4002df3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1754	charset.c	FUNCTION_53	CALL_4
0x4002df6	            0x89c7	                            mov edi, eax	      1754	charset.c	FUNCTION_53	CALL_4
0x4002df8	      0xe800000000	                          call 0x4002dfd	      1754	charset.c	FUNCTION_53	CALL_4
0x4002dfd	              0xc9	                                   leave	      1755	charset.c	FUNCTION_53
0x4002dfe	              0xc3	                                     ret	      1755	charset.c	FUNCTION_53
vim_tolower	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,7:DO,0:CALL,4	60
0x4002dff	              0x55	                                push rbp	      1759	charset.c	FUNCTION_54
0x4002e00	          0x4889e5	                            mov rbp, rsp	      1759	charset.c	FUNCTION_54
0x4002e03	        0x4883ec10	                           sub rsp, 0x10	      1759	charset.c	FUNCTION_54
0x4002e07	          0x897dfc	                mov dword [rbp - 4], edi	      1759	charset.c	FUNCTION_54
0x4002e0a	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1760	charset.c	FUNCTION_54	IF_1
0x4002e0e	            0x7f08	                            jg 0x4002e18	      1760	charset.c	FUNCTION_54	IF_1
0x4002e10	          0x8b45fc	                mov eax, dword [rbp - 4]	      1761	charset.c	FUNCTION_54	IF_1
0x4002e13	      0xe99e000000	                           jmp 0x4002eb6	      1761	charset.c	FUNCTION_54	IF_1
0x4002e18	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1762	charset.c	FUNCTION_54	IF_2
0x4002e1c	            0x7f0d	                            jg 0x4002e2b	      1762	charset.c	FUNCTION_54	IF_2
0x4002e1e	    0x8b0500000000	            mov eax, dword [0x04002e24] 	      1762	charset.c	FUNCTION_54	IF_2
0x4002e24	          0x83e002	                              and eax, 2	      1762	charset.c	FUNCTION_54	IF_2
0x4002e27	            0x85c0	                           test eax, eax	      1762	charset.c	FUNCTION_54	IF_2
0x4002e29	            0x7555	                           jne 0x4002e80	      1762	charset.c	FUNCTION_54	IF_2
0x4002e2b	    0x8b0500000000	            mov eax, dword [0x04002e31] 	      1764	charset.c	FUNCTION_54	IF_2	IF_3
0x4002e31	            0x85c0	                           test eax, eax	      1764	charset.c	FUNCTION_54	IF_2	IF_3
0x4002e33	            0x740c	                            je 0x4002e41	      1764	charset.c	FUNCTION_54	IF_2	IF_3
0x4002e35	          0x8b45fc	                mov eax, dword [rbp - 4]	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x4002e38	            0x89c7	                            mov edi, eax	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x4002e3a	      0xe800000000	                          call 0x4002e3f	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x4002e3f	            0xeb75	                           jmp 0x4002eb6	      1765	charset.c	FUNCTION_54	IF_2	CALL_1
0x4002e41	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1766	charset.c	FUNCTION_54	IF_2	IF_4
0x4002e48	            0x7e1b	                           jle 0x4002e65	      1766	charset.c	FUNCTION_54	IF_2	IF_4
0x4002e4a	    0x8b0500000000	            mov eax, dword [0x04002e50] 	      1769	charset.c	FUNCTION_54	IF_2	IF_4	IF_5
0x4002e50	            0x85c0	                           test eax, eax	      1769	charset.c	FUNCTION_54	IF_2	IF_4	IF_5
0x4002e52	            0x740c	                            je 0x4002e60	      1769	charset.c	FUNCTION_54	IF_2	IF_4	IF_5
0x4002e54	          0x8b45fc	                mov eax, dword [rbp - 4]	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x4002e57	            0x89c7	                            mov edi, eax	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x4002e59	      0xe800000000	                          call 0x4002e5e	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x4002e5e	            0xeb56	                           jmp 0x4002eb6	      1770	charset.c	FUNCTION_54	IF_2	IF_4	CALL_2
0x4002e60	          0x8b45fc	                mov eax, dword [rbp - 4]	      1773	charset.c	FUNCTION_54	IF_2	IF_4
0x4002e63	            0xeb51	                           jmp 0x4002eb6	      1773	charset.c	FUNCTION_54	IF_2	IF_4
0x4002e65	    0x8b0500000000	            mov eax, dword [0x04002e6b] 	      1775	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e6b	            0x85c0	                           test eax, eax	      1775	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e6d	            0x7411	                            je 0x4002e80	      1775	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e6f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e72	            0x4898	                                    cdqe	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e74	     0xfb680000000	                   movzx eax, byte [rax]	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e7b	           0xfb6c0	                           movzx eax, al	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e7e	            0xeb36	                           jmp 0x4002eb6	      1776	charset.c	FUNCTION_54	IF_2	IF_6
0x4002e80	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1778	charset.c	FUNCTION_54	IF_7
0x4002e84	            0x7f26	                            jg 0x4002eac	      1778	charset.c	FUNCTION_54	IF_7
0x4002e86	    0x8b0500000000	            mov eax, dword [0x04002e8c] 	      1778	charset.c	FUNCTION_54	IF_7
0x4002e8c	          0x83e002	                              and eax, 2	      1778	charset.c	FUNCTION_54	IF_7
0x4002e8f	            0x85c0	                           test eax, eax	      1778	charset.c	FUNCTION_54	IF_7
0x4002e91	            0x7419	                            je 0x4002eac	      1778	charset.c	FUNCTION_54	IF_7
0x4002e93	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1779	charset.c	FUNCTION_54	CALL_3
0x4002e97	            0x7e0e	                           jle 0x4002ea7	      1779	charset.c	FUNCTION_54	CALL_3
0x4002e99	        0x837dfc5a	               cmp dword [rbp - 4], 0x5a	      1779	charset.c	FUNCTION_54	CALL_3
0x4002e9d	            0x7f08	                            jg 0x4002ea7	      1779	charset.c	FUNCTION_54	CALL_3
0x4002e9f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1779	charset.c	FUNCTION_54	CALL_3
0x4002ea2	          0x83c020	                           add eax, 0x20	      1779	charset.c	FUNCTION_54	CALL_3
0x4002ea5	            0xeb0f	                           jmp 0x4002eb6	      1779	charset.c	FUNCTION_54	CALL_3
0x4002ea7	          0x8b45fc	                mov eax, dword [rbp - 4]	      1779	charset.c	FUNCTION_54	CALL_3
0x4002eaa	            0xeb0a	                           jmp 0x4002eb6	      1779	charset.c	FUNCTION_54	CALL_3
0x4002eac	          0x8b45fc	                mov eax, dword [rbp - 4]	      1780	charset.c	FUNCTION_54	CALL_4
0x4002eaf	            0x89c7	                            mov edi, eax	      1780	charset.c	FUNCTION_54	CALL_4
0x4002eb1	      0xe800000000	                          call 0x4002eb6	      1780	charset.c	FUNCTION_54	CALL_4
0x4002eb6	              0xc9	                                   leave	      1781	charset.c	FUNCTION_54
0x4002eb7	              0xc3	                                     ret	      1781	charset.c	FUNCTION_54
transchar_nonprint	ELSE,8:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,9:DO,0:CALL,6	81
0x400103b	              0x55	                                push rbp	       611	charset.c	FUNCTION_8
0x400103c	          0x4889e5	                            mov rbp, rsp	       611	charset.c	FUNCTION_8
0x400103f	        0x4883ec10	                           sub rsp, 0x10	       611	charset.c	FUNCTION_8
0x4001043	        0x48897df8	                mov qword [rbp - 8], rdi	       611	charset.c	FUNCTION_8
0x4001047	          0x8975f4	              mov dword [rbp - 0xc], esi	       611	charset.c	FUNCTION_8
0x400104a	        0x837df40a	              cmp dword [rbp - 0xc], 0xa	       612	charset.c	FUNCTION_8	IF_1
0x400104e	            0x7509	                           jne 0x4001059	       612	charset.c	FUNCTION_8	IF_1
0x4001050	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       613	charset.c	FUNCTION_8	IF_1
0x4001057	            0xeb21	                           jmp 0x400107a	       613	charset.c	FUNCTION_8	IF_1
0x4001059	        0x837df40d	              cmp dword [rbp - 0xc], 0xd	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x400105d	            0x751b	                           jne 0x400107a	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x400105f	    0x488b05000000	            mov rax, qword [0x04001066] 	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x4001066	          0x4889c7	                            mov rdi, rax	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x4001069	      0xe800000000	                          call 0x400106e	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x400106e	          0x83f802	                              cmp eax, 2	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x4001071	            0x7507	                           jne 0x400107a	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x4001073	    0xc745f40a0000	              mov dword [rbp - 0xc], 0xa	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x400107a	    0x8b0500000000	            mov eax, dword [0x04001080] 	       617	charset.c	FUNCTION_8	IF_3
0x4001080	          0x83e004	                              and eax, 4	       617	charset.c	FUNCTION_8	IF_3
0x4001083	            0x85c0	                           test eax, eax	       617	charset.c	FUNCTION_8	IF_3
0x4001085	            0x7416	                            je 0x400109d	       617	charset.c	FUNCTION_8	IF_3
0x4001087	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       618	charset.c	FUNCTION_8	CALL_2
0x400108a	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	charset.c	FUNCTION_8	CALL_2
0x400108e	            0x89d6	                            mov esi, edx	       618	charset.c	FUNCTION_8	CALL_2
0x4001090	          0x4889c7	                            mov rdi, rax	       618	charset.c	FUNCTION_8	CALL_2
0x4001093	      0xe800000000	                          call 0x4001098	       618	charset.c	FUNCTION_8	CALL_2
0x4001098	      0xe9ad000000	                           jmp 0x400114a	       674	charset.c	FUNCTION_8
0x400109d	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010a1	            0x7f27	                            jg 0x40010ca	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010a7	          0xc6005e	                    mov byte [rax], 0x5e	       627	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010ae	        0x4883c001	                              add rax, 1	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010b2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010b5	          0x83f240	                           xor edx, 0x40	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010b8	            0x8810	                      mov byte [rax], dl	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010be	        0x4883c002	                              add rax, 2	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010c2	          0xc60000	                       mov byte [rax], 0	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40010c5	      0xe980000000	                           jmp 0x400114a	       674	charset.c	FUNCTION_8
0x40010ca	    0x8b0500000000	            mov eax, dword [0x040010d0] 	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x40010d0	            0x85c0	                           test eax, eax	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x40010d2	            0x7419	                            je 0x40010ed	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x40010d4	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x40010d8	            0x7e13	                           jle 0x40010ed	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x40010da	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x40010dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x40010e1	            0x89d6	                            mov esi, edx	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x40010e3	          0x4889c7	                            mov rdi, rax	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x40010e6	      0xe800000000	                          call 0x40010eb	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x40010eb	            0xeb5d	                           jmp 0x400114a	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x40010ed	    0x817df49f0000	            cmp dword [rbp - 0xc], 0x9f 	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40010f4	            0x7e2d	                           jle 0x4001123	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40010f6	    0x817df4fe0000	            cmp dword [rbp - 0xc], 0xfe 	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40010fd	            0x7f24	                            jg 0x4001123	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x40010ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       648	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4001103	          0xc6007c	                    mov byte [rax], 0x7c	       648	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4001106	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400110a	        0x4883c001	                              add rax, 1	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400110e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4001111	          0x83c280	             add edx, 0xffffffffffffff80	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4001114	            0x8810	                      mov byte [rax], dl	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4001116	        0x488b45f8	                mov rax, qword [rbp - 8]	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400111a	        0x4883c002	                              add rax, 2	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400111e	          0xc60000	                       mov byte [rax], 0	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4001121	            0xeb27	                           jmp 0x400114a	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4001123	        0x488b45f8	                mov rax, qword [rbp - 8]	       666	charset.c	FUNCTION_8	ELSE_8
0x4001127	          0xc6007e	                    mov byte [rax], 0x7e	       666	charset.c	FUNCTION_8	ELSE_8
0x400112a	        0x488b45f8	                mov rax, qword [rbp - 8]	       670	charset.c	FUNCTION_8	ELSE_8
0x400112e	        0x4883c001	                              add rax, 1	       670	charset.c	FUNCTION_8	ELSE_8
0x4001132	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       670	charset.c	FUNCTION_8	ELSE_8
0x4001135	          0x83c280	             add edx, 0xffffffffffffff80	       670	charset.c	FUNCTION_8	ELSE_8
0x4001138	          0x83f240	                           xor edx, 0x40	       670	charset.c	FUNCTION_8	ELSE_8
0x400113b	            0x8810	                      mov byte [rax], dl	       670	charset.c	FUNCTION_8	ELSE_8
0x400113d	        0x488b45f8	                mov rax, qword [rbp - 8]	       672	charset.c	FUNCTION_8	ELSE_8
0x4001141	        0x4883c002	                              add rax, 2	       672	charset.c	FUNCTION_8	ELSE_8
0x4001145	          0xc60000	                       mov byte [rax], 0	       672	charset.c	FUNCTION_8	ELSE_8
0x4001148	            0xeb00	                           jmp 0x400114a	       674	charset.c	FUNCTION_8
0x400114a	              0x90	                                     nop	       674	charset.c	FUNCTION_8
0x400114b	              0xc9	                                   leave	       674	charset.c	FUNCTION_8
0x400114c	              0xc3	                                     ret	       674	charset.c	FUNCTION_8
skipwhite	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	18
0x40029d6	              0x55	                                push rbp	      1530	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x40029d7	          0x4889e5	                            mov rbp, rsp	      1530	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x40029da	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1530	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x40029de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1531	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x40029e2	        0x488945f8	                mov qword [rbp - 8], rax	      1531	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x40029e6	            0xeb05	                           jmp 0x40029ed	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x40029e8	      0x488345f801	                  add qword [rbp - 8], 1	      1534	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1
0x40029ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x40029f1	           0xfb600	                   movzx eax, byte [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x40029f4	            0x3c20	                            cmp al, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x40029f6	            0x74f0	                            je 0x40029e8	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x40029f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x40029fc	           0xfb600	                   movzx eax, byte [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x40029ff	            0x3c09	                               cmp al, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002a01	            0x74e5	                            je 0x40029e8	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4002a03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1535	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x4002a07	              0x5d	                                 pop rbp	      1536	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x4002a08	              0xc3	                                     ret	      1536	charset.c	ELSE_3	ELSE_4	FUNCTION_39
vim_isblankline	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	25
0x4002fa6	              0x55	                                push rbp	      1834	charset.c	FUNCTION_58
0x4002fa7	          0x4889e5	                            mov rbp, rsp	      1834	charset.c	FUNCTION_58
0x4002faa	        0x4883ec18	                           sub rsp, 0x18	      1834	charset.c	FUNCTION_58
0x4002fae	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1834	charset.c	FUNCTION_58
0x4002fb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1837	charset.c	FUNCTION_58	CALL_1
0x4002fb6	          0x4889c7	                            mov rdi, rax	      1837	charset.c	FUNCTION_58	CALL_1
0x4002fb9	      0xe800000000	                          call 0x4002fbe	      1837	charset.c	FUNCTION_58	CALL_1
0x4002fbe	        0x488945f8	                mov qword [rbp - 8], rax	      1837	charset.c	FUNCTION_58	CALL_1
0x4002fc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1838	charset.c	FUNCTION_58
0x4002fc6	           0xfb600	                   movzx eax, byte [rax]	      1838	charset.c	FUNCTION_58
0x4002fc9	            0x84c0	                             test al, al	      1838	charset.c	FUNCTION_58
0x4002fcb	            0x7416	                            je 0x4002fe3	      1838	charset.c	FUNCTION_58
0x4002fcd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1838	charset.c	FUNCTION_58
0x4002fd1	           0xfb600	                   movzx eax, byte [rax]	      1838	charset.c	FUNCTION_58
0x4002fd4	            0x3c0d	                             cmp al, 0xd	      1838	charset.c	FUNCTION_58
0x4002fd6	            0x740b	                            je 0x4002fe3	      1838	charset.c	FUNCTION_58
0x4002fd8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1838	charset.c	FUNCTION_58
0x4002fdc	           0xfb600	                   movzx eax, byte [rax]	      1838	charset.c	FUNCTION_58
0x4002fdf	            0x3c0a	                             cmp al, 0xa	      1838	charset.c	FUNCTION_58
0x4002fe1	            0x7507	                           jne 0x4002fea	      1838	charset.c	FUNCTION_58
0x4002fe3	      0xb801000000	                              mov eax, 1	      1838	charset.c	FUNCTION_58
0x4002fe8	            0xeb05	                           jmp 0x4002fef	      1838	charset.c	FUNCTION_58
0x4002fea	      0xb800000000	                              mov eax, 0	      1838	charset.c	FUNCTION_58
0x4002fef	              0xc9	                                   leave	      1839	charset.c	FUNCTION_58
0x4002ff0	              0xc3	                                     ret	      1839	charset.c	FUNCTION_58
str_foldcase	ELSE,5:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,14:DO,0:CALL,15	330
0x4000ae8	              0x55	                                push rbp	       441	charset.c	FUNCTION_5
0x4000ae9	          0x4889e5	                            mov rbp, rsp	       441	charset.c	FUNCTION_5
0x4000aec	              0x53	                                push rbx	       441	charset.c	FUNCTION_5
0x4000aed	        0x4883ec68	                           sub rsp, 0x68	       441	charset.c	FUNCTION_5
0x4000af1	        0x48897da8	             mov qword [rbp - 0x58], rdi	       441	charset.c	FUNCTION_5
0x4000af5	          0x8975a4	             mov dword [rbp - 0x5c], esi	       441	charset.c	FUNCTION_5
0x4000af8	        0x48895598	             mov qword [rbp - 0x68], rdx	       441	charset.c	FUNCTION_5
0x4000afc	          0x894da0	             mov dword [rbp - 0x60], ecx	       441	charset.c	FUNCTION_5
0x4000aff	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	charset.c	FUNCTION_5
0x4000b08	        0x488945e8	             mov qword [rbp - 0x18], rax	       441	charset.c	FUNCTION_5
0x4000b0c	            0x31c0	                            xor eax, eax	       441	charset.c	FUNCTION_5
0x4000b0e	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       444	charset.c	FUNCTION_5
0x4000b11	          0x8945bc	             mov dword [rbp - 0x44], eax	       444	charset.c	FUNCTION_5
0x4000b14	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       452	charset.c	FUNCTION_5	IF_1
0x4000b19	            0x7559	                           jne 0x4000b74	       452	charset.c	FUNCTION_5	IF_1
0x4000b1b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x4000b1f	      0xba0a000000	                            mov edx, 0xa	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x4000b24	      0xbe01000000	                              mov esi, 1	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x4000b29	          0x4889c7	                            mov rdi, rax	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x4000b2c	      0xe800000000	                          call 0x4000b31	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x4000b31	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b34	          0x8d5001	                      lea edx, [rax + 1]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b37	        0x488d45d0	                   lea rax, [rbp - 0x30]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b3b	            0x89d6	                            mov esi, edx	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b3d	          0x4889c7	                            mov rdi, rax	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b40	      0xe800000000	                          call 0x4000b45	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b45	            0x85c0	                           test eax, eax	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b47	            0x750a	                           jne 0x4000b53	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000b49	      0xb800000000	                              mov eax, 0	       456	charset.c	FUNCTION_5	IF_1	IF_2
0x4000b4e	      0xe9b5030000	                           jmp 0x4000f08	       456	charset.c	FUNCTION_5	IF_1	IF_2
0x4000b53	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x4000b56	          0x4863d0	                         movsxd rdx, eax	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x4000b59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x4000b5d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x4000b61	          0x4889ce	                            mov rsi, rcx	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x4000b64	          0x4889c7	                            mov rdi, rax	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x4000b67	      0xe800000000	                          call 0x4000b6c	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x4000b6c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       458	charset.c	FUNCTION_5	IF_1
0x4000b6f	          0x8945d0	             mov dword [rbp - 0x30], eax	       458	charset.c	FUNCTION_5	IF_1
0x4000b72	            0xeb2a	                           jmp 0x4000b9e	       458	charset.c	FUNCTION_5	IF_1
0x4000b74	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       462	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000b77	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       462	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000b7a	            0x7c09	                            jl 0x4000b85	       462	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000b7c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000b7f	          0x83e801	                              sub eax, 1	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000b82	          0x8945bc	             mov dword [rbp - 0x44], eax	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x4000b85	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000b88	          0x4863d0	                         movsxd rdx, eax	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000b8b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000b8f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000b93	          0x4889ce	                            mov rsi, rcx	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000b96	          0x4889c7	                            mov rdi, rax	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000b99	      0xe800000000	                          call 0x4000b9e	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x4000b9e	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       466	charset.c	FUNCTION_5	IF_4
0x4000ba3	            0x7511	                           jne 0x4000bb6	       466	charset.c	FUNCTION_5	IF_4
0x4000ba5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       467	charset.c	FUNCTION_5	IF_4
0x4000ba9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       467	charset.c	FUNCTION_5	IF_4
0x4000bac	            0x4898	                                    cdqe	       467	charset.c	FUNCTION_5	IF_4
0x4000bae	          0x4801d0	                            add rax, rdx	       467	charset.c	FUNCTION_5	IF_4
0x4000bb1	          0xc60000	                       mov byte [rax], 0	       467	charset.c	FUNCTION_5	IF_4
0x4000bb4	            0xeb10	                           jmp 0x4000bc6	       467	charset.c	FUNCTION_5	IF_4
0x4000bb6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       469	charset.c	FUNCTION_5	ELSE_2
0x4000bb9	          0x4863d0	                         movsxd rdx, eax	       469	charset.c	FUNCTION_5	ELSE_2
0x4000bbc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       469	charset.c	FUNCTION_5	ELSE_2
0x4000bc0	          0x4801d0	                            add rax, rdx	       469	charset.c	FUNCTION_5	ELSE_2
0x4000bc3	          0xc60000	                       mov byte [rax], 0	       469	charset.c	FUNCTION_5	ELSE_2
0x4000bc6	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       472	charset.c	FUNCTION_5	ELSE_2
0x4000bcd	      0xe9eb020000	                           jmp 0x4000ebd	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000bd2	    0x8b0500000000	            mov eax, dword [0x04000bd8] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bd8	            0x85c0	                           test eax, eax	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bda	            0x754d	                           jne 0x4000c29	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bdc	    0x8b0500000000	            mov eax, dword [0x04000be2] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000be2	            0x85c0	                           test eax, eax	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000be4	     0xf8474020000	                            je 0x4000e5e	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bea	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bef	            0x7514	                           jne 0x4000c05	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bf1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bf5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bf8	            0x4898	                                    cdqe	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bfa	          0x4801d0	                            add rax, rdx	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000bfd	           0xfb600	                   movzx eax, byte [rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c00	           0xfb6c0	                           movzx eax, al	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c03	            0xeb13	                           jmp 0x4000c18	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c05	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c08	          0x4863d0	                         movsxd rdx, eax	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c0b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c0f	          0x4801d0	                            add rax, rdx	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c12	           0xfb600	                   movzx eax, byte [rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c15	           0xfb6c0	                           movzx eax, al	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c18	            0x4898	                                    cdqe	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c1a	     0xfb680000000	                   movzx eax, byte [rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c21	            0x3c01	                               cmp al, 1	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c23	     0xf8e35020000	                           jle 0x4000e5e	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000c29	    0x8b0500000000	            mov eax, dword [0x04000c2f] 	       478	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6
0x4000c2f	            0x85c0	                           test eax, eax	       478	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6
0x4000c31	     0xf84f4010000	                            je 0x4000e2b	       478	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6
0x4000c37	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c3c	            0x750e	                           jne 0x4000c4c	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c3e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c42	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c45	            0x4898	                                    cdqe	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c47	          0x4801d0	                            add rax, rdx	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c4a	            0xeb0d	                           jmp 0x4000c59	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c4c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c4f	          0x4863d0	                         movsxd rdx, eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c52	        0x488b4598	             mov rax, qword [rbp - 0x68]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c56	          0x4801d0	                            add rax, rdx	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c59	          0x4889c7	                            mov rdi, rax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c5c	      0xe800000000	                          call 0x4000c61	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c61	          0x8945c8	             mov dword [rbp - 0x38], eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000c64	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c69	            0x750e	                           jne 0x4000c79	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c6b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c6f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c72	            0x4898	                                    cdqe	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c74	          0x4801d0	                            add rax, rdx	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c77	            0xeb0d	                           jmp 0x4000c86	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c79	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c7c	          0x4863d0	                         movsxd rdx, eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c7f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c83	          0x4801d0	                            add rax, rdx	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c86	          0x4889c7	                            mov rdi, rax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c89	      0xe800000000	                          call 0x4000c8e	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c8e	          0x8945cc	             mov dword [rbp - 0x34], eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000c91	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000c94	            0x89c7	                            mov edi, eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000c96	      0xe800000000	                          call 0x4000c9b	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000c9b	          0x8945c0	             mov dword [rbp - 0x40], eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000c9e	        0x837dc87f	           cmp dword [rbp - 0x38], 0x7f 	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000ca2	            0x7e0a	                           jle 0x4000cae	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000ca4	        0x837dcc01	               cmp dword [rbp - 0x34], 1	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000ca8	     0xf8e7d010000	                           jle 0x4000e2b	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000cae	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000cb1	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000cb4	     0xf8471010000	                            je 0x4000e2b	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000cba	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x4000cbd	            0x89c7	                            mov edi, eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x4000cbf	      0xe800000000	                          call 0x4000cc4	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x4000cc4	          0x8945c4	             mov dword [rbp - 0x3c], eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x4000cc7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x4000cca	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x4000ccd	     0xf8429010000	                            je 0x4000dfc	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x4000cd3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0x4000cd6	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0x4000cd9	            0x7e46	                           jle 0x4000d21	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0x4000cdb	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000ce0	            0x751e	                           jne 0x4000d00	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000ce2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000ce5	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000ce8	          0x8d5001	                      lea edx, [rax + 1]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000ceb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000cef	            0x89d6	                            mov esi, edx	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000cf1	          0x4889c7	                            mov rdi, rax	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000cf4	      0xe800000000	                          call 0x4000cf9	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000cf9	            0x85c0	                           test eax, eax	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000cfb	           0xf94c0	                                 sete al	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000cfe	            0xeb11	                           jmp 0x4000d11	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d00	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d03	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d06	             0x1d0	                            add eax, edx	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d08	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       499	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d0b	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d0e	           0xf9dc0	                                setge al	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d11	            0x84c0	                             test al, al	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d13	            0x740c	                            je 0x4000d21	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d15	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       502	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d18	          0x8945c0	             mov dword [rbp - 0x40], eax	       502	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d1b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       503	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d1e	          0x8945c4	             mov dword [rbp - 0x3c], eax	       503	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000d21	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       506	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11
0x4000d24	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       506	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11
0x4000d27	     0xf84cf000000	                            je 0x4000dfc	       506	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11
0x4000d2d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d32	            0x7569	                           jne 0x4000d9d	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d38	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d3b	          0x4863ca	                         movsxd rcx, edx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d3e	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d41	          0x4863d2	                         movsxd rdx, edx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d44	          0x4801ca	                            add rdx, rcx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d47	          0x4801d0	                            add rax, rdx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d4a	          0x4889c7	                            mov rdi, rax	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d4d	      0xe800000000	                          call 0x4000d52	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d52	        0x488d5001	                      lea rdx, [rax + 1]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d5a	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d5d	          0x4863f1	                         movsxd rsi, ecx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d60	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d63	          0x4863c9	                         movsxd rcx, ecx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d66	          0x4801f1	                            add rcx, rsi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d69	          0x4801c1	                            add rcx, rax	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d6c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d70	          0x8b75b8	             mov esi, dword [rbp - 0x48]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d73	          0x4863fe	                         movsxd rdi, esi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d76	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d79	          0x4863f6	                         movsxd rsi, esi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d7c	          0x4801fe	                            add rsi, rdi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d7f	          0x4801f0	                            add rax, rsi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d82	          0x4889ce	                            mov rsi, rcx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d85	          0x4889c7	                            mov rdi, rax	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d88	      0xe800000000	                          call 0x4000d8d	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000d8d	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d90	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d93	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d96	             0x1d0	                            add eax, edx	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d98	          0x8945d0	             mov dword [rbp - 0x30], eax	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d9b	            0xeb5f	                           jmp 0x4000dfc	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000d9d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000da0	          0x4863d0	                         movsxd rdx, eax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000da3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000da6	            0x4898	                                    cdqe	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000da8	          0x4801c2	                            add rdx, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dab	        0x488b4598	             mov rax, qword [rbp - 0x68]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000daf	          0x4801d0	                            add rax, rdx	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000db2	          0x4889c7	                            mov rdi, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000db5	      0xe800000000	                          call 0x4000dba	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dba	        0x488d5001	                      lea rdx, [rax + 1]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dbe	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dc1	          0x4863c8	                         movsxd rcx, eax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dc4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dc7	            0x4898	                                    cdqe	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dc9	          0x4801c1	                            add rcx, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dcc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dd0	          0x4801c1	                            add rcx, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dd3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dd6	          0x4863f0	                         movsxd rsi, eax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dd9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000ddc	            0x4898	                                    cdqe	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dde	          0x4801c6	                            add rsi, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000de1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000de5	          0x4801f0	                            add rax, rsi	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000de8	          0x4889ce	                            mov rsi, rcx	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000deb	          0x4889c7	                            mov rdi, rax	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000dee	      0xe800000000	                          call 0x4000df3	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000df3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x4000df6	          0x2b45cc	             sub eax, dword [rbp - 0x34]	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x4000df9	           0x145bc	             add dword [rbp - 0x44], eax	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x4000dfc	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e01	            0x750e	                           jne 0x4000e11	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e03	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e07	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e0a	            0x4898	                                    cdqe	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e0c	          0x4801d0	                            add rax, rdx	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e0f	            0xeb0d	                           jmp 0x4000e1e	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e11	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e14	          0x4863d0	                         movsxd rdx, eax	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e17	        0x488b4598	             mov rax, qword [rbp - 0x68]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e1b	          0x4801d0	                            add rax, rdx	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e1e	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e21	          0x4889c6	                            mov rsi, rax	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e24	            0x89d7	                            mov edi, edx	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e26	      0xe800000000	                          call 0x4000e2b	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x4000e2b	    0x488b15000000	            mov rdx, qword [0x04000e32] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e32	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e37	            0x750e	                           jne 0x4000e47	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e39	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e3d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e40	            0x4898	                                    cdqe	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e42	          0x4801c8	                            add rax, rcx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e45	            0xeb0d	                           jmp 0x4000e54	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e47	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e4a	          0x4863c8	                         movsxd rcx, eax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e4d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e51	          0x4801c8	                            add rax, rcx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e54	          0x4889c7	                            mov rdi, rax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e57	            0xffd2	                                call rdx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e59	           0x145b8	             add dword [rbp - 0x48], eax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e5c	            0xeb5f	                           jmp 0x4000ebd	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000e5e	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0x4000e63	            0x752a	                           jne 0x4000e8f	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0x4000e65	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e69	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e6c	            0x4898	                                    cdqe	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e6e	        0x488d1c02	                    lea rbx, [rdx + rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e72	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e76	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e79	            0x4898	                                    cdqe	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e7b	          0x4801d0	                            add rax, rdx	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e7e	           0xfb600	                   movzx eax, byte [rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e81	           0xfb6c0	                           movzx eax, al	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e84	            0x89c7	                            mov edi, eax	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e86	      0xe800000000	                          call 0x4000e8b	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e8b	            0x8803	                      mov byte [rbx], al	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e8d	            0xeb2a	                           jmp 0x4000eb9	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000e8f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000e92	          0x4863d0	                         movsxd rdx, eax	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000e95	        0x488b4598	             mov rax, qword [rbp - 0x68]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000e99	        0x488d1c02	                    lea rbx, [rdx + rax]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000e9d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000ea0	          0x4863d0	                         movsxd rdx, eax	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000ea3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000ea7	          0x4801d0	                            add rax, rdx	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000eaa	           0xfb600	                   movzx eax, byte [rax]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000ead	           0xfb6c0	                           movzx eax, al	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000eb0	            0x89c7	                            mov edi, eax	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000eb2	      0xe800000000	                          call 0x4000eb7	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000eb7	            0x8803	                      mov byte [rbx], al	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000eb9	        0x8345b801	               add dword [rbp - 0x48], 1	       533	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4
0x4000ebd	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ec2	            0x7516	                           jne 0x4000eda	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ec4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ec8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ecb	            0x4898	                                    cdqe	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ecd	          0x4801d0	                            add rax, rdx	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ed0	           0xfb600	                   movzx eax, byte [rax]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ed3	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ed5	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ed8	            0xeb15	                           jmp 0x4000eef	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000eda	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000edd	          0x4863d0	                         movsxd rdx, eax	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ee0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ee4	          0x4801d0	                            add rax, rdx	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ee7	           0xfb600	                   movzx eax, byte [rax]	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000eea	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000eec	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000eef	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ef1	     0xf85dbfcffff	                           jne 0x4000bd2	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000ef7	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       537	charset.c	FUNCTION_5	IF_14
0x4000efc	            0x7506	                           jne 0x4000f04	       537	charset.c	FUNCTION_5	IF_14
0x4000efe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       538	charset.c	FUNCTION_5	IF_14
0x4000f02	            0xeb04	                           jmp 0x4000f08	       538	charset.c	FUNCTION_5	IF_14
0x4000f04	        0x488b4598	             mov rax, qword [rbp - 0x68]	       539	charset.c	FUNCTION_5
0x4000f08	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       540	charset.c	FUNCTION_5
0x4000f0c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       540	charset.c	FUNCTION_5
0x4000f15	            0x7405	                            je 0x4000f1c	       540	charset.c	FUNCTION_5
0x4000f17	      0xe800000000	                          call 0x4000f1c	       540	charset.c	FUNCTION_5
0x4000f1c	        0x4883c468	                           add rsp, 0x68	       540	charset.c	FUNCTION_5
0x4000f20	              0x5b	                                 pop rbx	       540	charset.c	FUNCTION_5
0x4000f21	              0x5d	                                 pop rbp	       540	charset.c	FUNCTION_5
0x4000f22	              0xc3	                                     ret	       540	charset.c	FUNCTION_5
char2cells	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,5:DO,0:CALL,4	54
0x400127f	              0x55	                                push rbp	       733	charset.c	FUNCTION_12
0x4001280	          0x4889e5	                            mov rbp, rsp	       733	charset.c	FUNCTION_12
0x4001283	        0x4883ec10	                           sub rsp, 0x10	       733	charset.c	FUNCTION_12
0x4001287	          0x897dfc	                mov dword [rbp - 4], edi	       733	charset.c	FUNCTION_12
0x400128a	        0x837dfc00	                  cmp dword [rbp - 4], 0	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x400128e	            0x7931	                           jns 0x40012c1	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x4001290	    0x817dfc800000	               cmp dword [rbp - 4], 0x80	       735	charset.c	FUNCTION_12	CALL_3
0x4001297	            0x7417	                            je 0x40012b0	       735	charset.c	FUNCTION_12	CALL_3
0x4001299	        0x837dfc00	                  cmp dword [rbp - 4], 0	       735	charset.c	FUNCTION_12	CALL_3
0x400129d	            0x740a	                            je 0x40012a9	       735	charset.c	FUNCTION_12	CALL_3
0x400129f	          0x8b45fc	                mov eax, dword [rbp - 4]	       735	charset.c	FUNCTION_12	CALL_3
0x40012a2	            0xf7d8	                                 neg eax	       735	charset.c	FUNCTION_12	CALL_3
0x40012a4	           0xfb6c0	                           movzx eax, al	       735	charset.c	FUNCTION_12	CALL_3
0x40012a7	            0xeb0c	                           jmp 0x40012b5	       735	charset.c	FUNCTION_12	CALL_3
0x40012a9	      0xb8ff000000	                           mov eax, 0xff	       735	charset.c	FUNCTION_12	CALL_3
0x40012ae	            0xeb05	                           jmp 0x40012b5	       735	charset.c	FUNCTION_12	CALL_3
0x40012b0	      0xb8fe000000	                           mov eax, 0xfe	       735	charset.c	FUNCTION_12	CALL_3
0x40012b5	            0x89c7	                            mov edi, eax	       735	charset.c	FUNCTION_12	CALL_3
0x40012b7	      0xe800000000	                          call 0x40012bc	       735	charset.c	FUNCTION_12	CALL_3
0x40012bc	          0x83c002	                              add eax, 2	       735	charset.c	FUNCTION_12	CALL_3
0x40012bf	            0xeb6c	                           jmp 0x400132d	       735	charset.c	FUNCTION_12	CALL_3
0x40012c1	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	       737	charset.c	FUNCTION_12	IF_2
0x40012c5	            0x7e51	                           jle 0x4001318	       737	charset.c	FUNCTION_12	IF_2
0x40012c7	    0x8b0500000000	            mov eax, dword [0x040012cd] 	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x40012cd	            0x85c0	                           test eax, eax	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x40012cf	            0x740c	                            je 0x40012dd	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x40012d1	          0x8b45fc	                mov eax, dword [rbp - 4]	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x40012d4	            0x89c7	                            mov edi, eax	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x40012d6	      0xe800000000	                          call 0x40012db	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x40012db	            0xeb50	                           jmp 0x400132d	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x40012dd	    0x8b0500000000	            mov eax, dword [0x040012e3] 	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40012e3	            0x85c0	                           test eax, eax	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40012e5	            0x7431	                            je 0x4001318	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40012e7	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40012ee	            0x7e28	                           jle 0x4001318	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40012f0	    0x8b0500000000	            mov eax, dword [0x040012f6] 	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40012f6	      0x3dcc260000	                         cmp eax, 0x26cc	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40012fb	            0x7514	                           jne 0x4001311	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40012fd	          0x8b45fc	                mov eax, dword [rbp - 4]	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4001300	          0xc1e808	                              shr eax, 8	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4001303	      0x3d8e000000	                           cmp eax, 0x8e	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4001308	            0x7507	                           jne 0x4001311	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x400130a	      0xb801000000	                              mov eax, 1	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x400130f	            0xeb1c	                           jmp 0x400132d	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x4001311	      0xb802000000	                              mov eax, 2	       748	charset.c	FUNCTION_12	IF_2	IF_4
0x4001316	            0xeb15	                           jmp 0x400132d	       748	charset.c	FUNCTION_12	IF_2	IF_4
0x4001318	          0x8b45fc	                mov eax, dword [rbp - 4]	       752	charset.c	FUNCTION_12
0x400131b	           0xfb6c0	                           movzx eax, al	       752	charset.c	FUNCTION_12
0x400131e	            0x4898	                                    cdqe	       752	charset.c	FUNCTION_12
0x4001320	     0xfb680000000	                   movzx eax, byte [rax]	       752	charset.c	FUNCTION_12
0x4001327	           0xfb6c0	                           movzx eax, al	       752	charset.c	FUNCTION_12
0x400132a	          0x83e007	                              and eax, 7	       752	charset.c	FUNCTION_12
0x400132d	              0xc9	                                   leave	       753	charset.c	FUNCTION_12
0x400132e	              0xc3	                                     ret	       753	charset.c	FUNCTION_12
backslash_halve_save	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,2	18
0x4003577	              0x55	                                push rbp	      2090	charset.c	FUNCTION_64
0x4003578	          0x4889e5	                            mov rbp, rsp	      2090	charset.c	FUNCTION_64
0x400357b	        0x4883ec20	                           sub rsp, 0x20	      2090	charset.c	FUNCTION_64
0x400357f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2090	charset.c	FUNCTION_64
0x4003583	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2093	charset.c	FUNCTION_64	CALL_1
0x4003587	          0x4889c7	                            mov rdi, rax	      2093	charset.c	FUNCTION_64	CALL_1
0x400358a	      0xe800000000	                          call 0x400358f	      2093	charset.c	FUNCTION_64	CALL_1
0x400358f	        0x488945f8	                mov qword [rbp - 8], rax	      2093	charset.c	FUNCTION_64	CALL_1
0x4003593	      0x48837df800	                  cmp qword [rbp - 8], 0	      2094	charset.c	FUNCTION_64	IF_1
0x4003598	            0x7506	                           jne 0x40035a0	      2094	charset.c	FUNCTION_64	IF_1
0x400359a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2095	charset.c	FUNCTION_64	IF_1
0x400359e	            0xeb10	                           jmp 0x40035b0	      2095	charset.c	FUNCTION_64	IF_1
0x40035a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2096	charset.c	FUNCTION_64	CALL_2
0x40035a4	          0x4889c7	                            mov rdi, rax	      2096	charset.c	FUNCTION_64	CALL_2
0x40035a7	      0xe800000000	                          call 0x40035ac	      2096	charset.c	FUNCTION_64	CALL_2
0x40035ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      2097	charset.c	FUNCTION_64
0x40035b0	              0xc9	                                   leave	      2098	charset.c	FUNCTION_64
0x40035b1	              0xc3	                                     ret	      2098	charset.c	FUNCTION_64
vim_isdigit	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0	12
0x4002b9a	              0x55	                                push rbp	      1642	charset.c	FUNCTION_48
0x4002b9b	          0x4889e5	                            mov rbp, rsp	      1642	charset.c	FUNCTION_48
0x4002b9e	          0x897dfc	                mov dword [rbp - 4], edi	      1642	charset.c	FUNCTION_48
0x4002ba1	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	      1643	charset.c	FUNCTION_48
0x4002ba5	            0x7e0d	                           jle 0x4002bb4	      1643	charset.c	FUNCTION_48
0x4002ba7	        0x837dfc39	               cmp dword [rbp - 4], 0x39	      1643	charset.c	FUNCTION_48
0x4002bab	            0x7f07	                            jg 0x4002bb4	      1643	charset.c	FUNCTION_48
0x4002bad	      0xb801000000	                              mov eax, 1	      1643	charset.c	FUNCTION_48
0x4002bb2	            0xeb05	                           jmp 0x4002bb9	      1643	charset.c	FUNCTION_48
0x4002bb4	      0xb800000000	                              mov eax, 0	      1643	charset.c	FUNCTION_48
0x4002bb9	              0x5d	                                 pop rbp	      1644	charset.c	FUNCTION_48
0x4002bba	              0xc3	                                     ret	      1644	charset.c	FUNCTION_48
vim_iswordp_buf	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,2	29
0x4001719	              0x55	                                push rbp	       926	charset.c	FUNCTION_25
0x400171a	          0x4889e5	                            mov rbp, rsp	       926	charset.c	FUNCTION_25
0x400171d	        0x4883ec20	                           sub rsp, 0x20	       926	charset.c	FUNCTION_25
0x4001721	        0x48897de8	             mov qword [rbp - 0x18], rdi	       926	charset.c	FUNCTION_25
0x4001725	        0x488975e0	             mov qword [rbp - 0x20], rsi	       926	charset.c	FUNCTION_25
0x4001729	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       927	charset.c	FUNCTION_25
0x400172d	           0xfb600	                   movzx eax, byte [rax]	       927	charset.c	FUNCTION_25
0x4001730	           0xfb6c0	                           movzx eax, al	       927	charset.c	FUNCTION_25
0x4001733	          0x8945fc	                mov dword [rbp - 4], eax	       927	charset.c	FUNCTION_25
0x4001736	    0x8b0500000000	            mov eax, dword [0x0400173c] 	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x400173c	            0x85c0	                           test eax, eax	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x400173e	            0x7423	                            je 0x4001763	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4001740	          0x8b45fc	                mov eax, dword [rbp - 4]	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4001743	            0x4898	                                    cdqe	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4001745	     0xfb680000000	                   movzx eax, byte [rax]	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x400174c	            0x3c01	                               cmp al, 1	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x400174e	            0x7e13	                           jle 0x4001763	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x4001750	    0x488b05000000	            mov rax, qword [0x04001757] 	       931	charset.c	FUNCTION_25	IF_1
0x4001757	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       931	charset.c	FUNCTION_25	IF_1
0x400175b	          0x4889d7	                            mov rdi, rdx	       931	charset.c	FUNCTION_25	IF_1
0x400175e	            0xffd0	                                call rax	       931	charset.c	FUNCTION_25	IF_1
0x4001760	          0x8945fc	                mov dword [rbp - 4], eax	       931	charset.c	FUNCTION_25	IF_1
0x4001763	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       933	charset.c	FUNCTION_25	CALL_2
0x4001767	          0x8b45fc	                mov eax, dword [rbp - 4]	       933	charset.c	FUNCTION_25	CALL_2
0x400176a	          0x4889d6	                            mov rsi, rdx	       933	charset.c	FUNCTION_25	CALL_2
0x400176d	            0x89c7	                            mov edi, eax	       933	charset.c	FUNCTION_25	CALL_2
0x400176f	      0xe800000000	                          call 0x4001774	       933	charset.c	FUNCTION_25	CALL_2
0x4001774	              0xc9	                                   leave	       934	charset.c	FUNCTION_25
0x4001775	              0xc3	                                     ret	       934	charset.c	FUNCTION_25
vim_str2nr	ELSE,11:FOR,1:functions,0:SWITCH,0:WHILE,4:IF,26:DO,0:CALL,6	321
0x4002ff1	              0x55	                                push rbp	      1871	charset.c	FUNCTION_59
0x4002ff2	          0x4889e5	                            mov rbp, rsp	      1871	charset.c	FUNCTION_59
0x4002ff5	              0x53	                                push rbx	      1871	charset.c	FUNCTION_59
0x4002ff6	        0x4883ec58	                           sub rsp, 0x58	      1871	charset.c	FUNCTION_59
0x4002ffa	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1871	charset.c	FUNCTION_59
0x4002ffe	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1871	charset.c	FUNCTION_59
0x4003002	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1871	charset.c	FUNCTION_59
0x4003006	          0x894db4	             mov dword [rbp - 0x4c], ecx	      1871	charset.c	FUNCTION_59
0x4003009	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1871	charset.c	FUNCTION_59
0x400300d	        0x4c894da0	              mov qword [rbp - 0x60], r9	      1871	charset.c	FUNCTION_59
0x4003011	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1872	charset.c	FUNCTION_59
0x4003015	        0x488945e0	             mov qword [rbp - 0x20], rax	      1872	charset.c	FUNCTION_59
0x4003019	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1873	charset.c	FUNCTION_59
0x4003020	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1874	charset.c	FUNCTION_59
0x4003027	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1875	charset.c	FUNCTION_59
0x400302f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1878	charset.c	FUNCTION_59	IF_1
0x4003033	           0xfb600	                   movzx eax, byte [rax]	      1878	charset.c	FUNCTION_59	IF_1
0x4003036	            0x3c2d	                            cmp al, 0x2d	      1878	charset.c	FUNCTION_59	IF_1
0x4003038	            0x750c	                           jne 0x4003046	      1878	charset.c	FUNCTION_59	IF_1
0x400303a	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1880	charset.c	FUNCTION_59	IF_1
0x4003041	      0x488345e001	               add qword [rbp - 0x20], 1	      1881	charset.c	FUNCTION_59	IF_1
0x4003046	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1885	charset.c	FUNCTION_59	IF_2
0x400304a	           0xfb600	                   movzx eax, byte [rax]	      1885	charset.c	FUNCTION_59	IF_2
0x400304d	            0x3c30	                            cmp al, 0x30	      1885	charset.c	FUNCTION_59	IF_2
0x400304f	     0xf8533010000	                           jne 0x4003188	      1885	charset.c	FUNCTION_59	IF_2
0x4003055	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1885	charset.c	FUNCTION_59	IF_2
0x4003059	        0x4883c001	                              add rax, 1	      1885	charset.c	FUNCTION_59	IF_2
0x400305d	           0xfb600	                   movzx eax, byte [rax]	      1885	charset.c	FUNCTION_59	IF_2
0x4003060	            0x3c38	                            cmp al, 0x38	      1885	charset.c	FUNCTION_59	IF_2
0x4003062	     0xf8420010000	                            je 0x4003188	      1885	charset.c	FUNCTION_59	IF_2
0x4003068	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1885	charset.c	FUNCTION_59	IF_2
0x400306c	        0x4883c001	                              add rax, 1	      1885	charset.c	FUNCTION_59	IF_2
0x4003070	           0xfb600	                   movzx eax, byte [rax]	      1885	charset.c	FUNCTION_59	IF_2
0x4003073	            0x3c39	                            cmp al, 0x39	      1885	charset.c	FUNCTION_59	IF_2
0x4003075	     0xf840d010000	                            je 0x4003188	      1885	charset.c	FUNCTION_59	IF_2
0x400307b	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1886	charset.c	FUNCTION_59	IF_2
0x400307f	            0x740a	                            je 0x400308b	      1886	charset.c	FUNCTION_59	IF_2
0x4003081	        0x837d1001	               cmp dword [rbp + 0x10], 1	      1886	charset.c	FUNCTION_59	IF_2
0x4003085	     0xf8efd000000	                           jle 0x4003188	      1886	charset.c	FUNCTION_59	IF_2
0x400308b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1888	charset.c	FUNCTION_59	IF_2
0x400308f	        0x4883c001	                              add rax, 1	      1888	charset.c	FUNCTION_59	IF_2
0x4003093	           0xfb600	                   movzx eax, byte [rax]	      1888	charset.c	FUNCTION_59	IF_2
0x4003096	           0xfb6c0	                           movzx eax, al	      1888	charset.c	FUNCTION_59	IF_2
0x4003099	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1888	charset.c	FUNCTION_59	IF_2
0x400309c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x400309f	          0x83e004	                              and eax, 4	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x40030a2	            0x85c0	                           test eax, eax	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x40030a4	            0x743b	                            je 0x40030e1	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x40030a6	        0x837dd458	           cmp dword [rbp - 0x2c], 0x58 	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030aa	            0x7406	                            je 0x40030b2	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030ac	        0x837dd478	           cmp dword [rbp - 0x2c], 0x78 	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030b0	            0x752f	                           jne 0x40030e1	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030b6	        0x4883c002	                              add rax, 2	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030ba	           0xfb600	                   movzx eax, byte [rax]	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030bd	           0xfb6c0	                           movzx eax, al	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030c0	            0x89c7	                            mov edi, eax	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030c2	      0xe800000000	                          call 0x40030c7	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030c7	            0x85c0	                           test eax, eax	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030c9	            0x7416	                            je 0x40030e1	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x40030cb	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x40030cf	            0x7406	                            je 0x40030d7	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x40030d1	        0x837d1002	               cmp dword [rbp + 0x10], 2	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x40030d5	            0x7e0a	                           jle 0x40030e1	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x40030d7	      0x488345e002	               add qword [rbp - 0x20], 2	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x40030dc	      0xe9a7000000	                           jmp 0x4003188	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x40030e1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40030e4	          0x83e001	                              and eax, 1	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40030e7	            0x85c0	                           test eax, eax	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40030e9	            0x7438	                            je 0x4003123	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40030eb	        0x837dd442	           cmp dword [rbp - 0x2c], 0x42 	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40030ef	            0x7406	                            je 0x40030f7	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40030f1	        0x837dd462	           cmp dword [rbp - 0x2c], 0x62 	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40030f5	            0x752c	                           jne 0x4003123	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40030f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40030fb	        0x4883c002	                              add rax, 2	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40030ff	           0xfb600	                   movzx eax, byte [rax]	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4003102	           0xfb6c0	                           movzx eax, al	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4003105	            0x89c7	                            mov edi, eax	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4003107	      0xe800000000	                          call 0x400310c	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x400310c	            0x85c0	                           test eax, eax	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x400310e	            0x7413	                            je 0x4003123	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x4003110	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4003114	            0x7406	                            je 0x400311c	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4003116	        0x837d1002	               cmp dword [rbp + 0x10], 2	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x400311a	            0x7e07	                           jle 0x4003123	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x400311c	      0x488345e002	               add qword [rbp - 0x20], 2	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4003121	            0xeb65	                           jmp 0x4003188	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x4003123	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1902	charset.c	FUNCTION_59	IF_2	ELSE_2
0x400312a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x400312d	          0x83e002	                              and eax, 2	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x4003130	            0x85c0	                           test eax, eax	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x4003132	            0x7454	                            je 0x4003188	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x4003134	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400313b	            0xeb28	                           jmp 0x4003165	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400313d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4003140	          0x4863d0	                         movsxd rdx, eax	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4003143	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4003147	          0x4801d0	                            add rax, rdx	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x400314a	           0xfb600	                   movzx eax, byte [rax]	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x400314d	            0x3c37	                            cmp al, 0x37	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x400314f	            0x7609	                           jbe 0x400315a	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4003151	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1910	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4003158	            0xeb2e	                           jmp 0x4003188	      1911	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x400315a	    0xc745d4300000	           mov dword [rbp - 0x2c], 0x30 	      1913	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1
0x4003161	        0x8345dc01	               add dword [rbp - 0x24], 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003165	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003168	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400316b	            0x741b	                            je 0x4003188	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400316d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003170	          0x4863d0	                         movsxd rdx, eax	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003173	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003177	          0x4801d0	                            add rax, rdx	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400317a	           0xfb600	                   movzx eax, byte [rax]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400317d	           0xfb6c0	                           movzx eax, al	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003180	          0x83e830	                           sub eax, 0x30	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003183	          0x83f809	                              cmp eax, 9	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003186	            0x76b5	                           jbe 0x400313d	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4003188	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1922	charset.c	FUNCTION_59
0x400318f	        0x837dd442	           cmp dword [rbp - 0x2c], 0x42 	      1923	charset.c	FUNCTION_59	IF_7
0x4003193	            0x740c	                            je 0x40031a1	      1923	charset.c	FUNCTION_59	IF_7
0x4003195	        0x837dd462	           cmp dword [rbp - 0x2c], 0x62 	      1923	charset.c	FUNCTION_59	IF_7
0x4003199	            0x7406	                            je 0x40031a1	      1923	charset.c	FUNCTION_59	IF_7
0x400319b	        0x837db409	               cmp dword [rbp - 0x4c], 9	      1923	charset.c	FUNCTION_59	IF_7
0x400319f	            0x757c	                           jne 0x400321d	      1923	charset.c	FUNCTION_59	IF_7
0x40031a1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1926	charset.c	FUNCTION_59	IF_7	IF_8
0x40031a5	            0x7451	                            je 0x40031f8	      1926	charset.c	FUNCTION_59	IF_7	IF_8
0x40031a7	        0x8345dc02	               add dword [rbp - 0x24], 2	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x40031ab	            0xeb4b	                           jmp 0x40031f8	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40031ad	    0x48b8feffffff	         movabs rax, 0x7ffffffffffffffe 	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031b7	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031bb	            0x7720	                            ja 0x40031dd	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031c1	        0x488d1400	                    lea rdx, [rax + rax]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031c9	           0xfb600	                   movzx eax, byte [rax]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031cc	           0xfb6c0	                           movzx eax, al	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031cf	          0x83e830	                           sub eax, 0x30	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031d2	            0x4898	                                    cdqe	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031d4	          0x4801d0	                            add rax, rdx	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031d7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031db	            0xeb08	                           jmp 0x40031e5	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x40031dd	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1934	charset.c	FUNCTION_59	IF_7	WHILE_1	ELSE_3
0x40031e5	      0x488345e001	               add qword [rbp - 0x20], 1	      1935	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40031ea	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x40031ed	          0x8d5001	                      lea edx, [rax + 1]	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x40031f0	          0x8955dc	             mov dword [rbp - 0x24], edx	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x40031f3	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x40031f6	            0x741f	                            je 0x4003217	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x40031f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40031fc	           0xfb600	                   movzx eax, byte [rax]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40031ff	            0x3c2f	                            cmp al, 0x2f	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4003201	     0xf868b010000	                           jbe 0x4003392	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4003207	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x400320b	           0xfb600	                   movzx eax, byte [rax]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x400320e	            0x3c31	                            cmp al, 0x31	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4003210	            0x769b	                           jbe 0x40031ad	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4003212	      0xe97b010000	                           jmp 0x4003392	      1923	charset.c	FUNCTION_59	IF_7
0x4003217	              0x90	                                     nop	      1937	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4003218	      0xe975010000	                           jmp 0x4003392	      1923	charset.c	FUNCTION_59	IF_7
0x400321d	        0x837dd430	           cmp dword [rbp - 0x2c], 0x30 	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4003221	            0x7457	                            je 0x400327a	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4003223	        0x837db40a	            cmp dword [rbp - 0x4c], 0xa 	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4003227	            0x7576	                           jne 0x400329f	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4003229	            0xeb4f	                           jmp 0x400327a	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x400322b	    0x48b8feffffff	         movabs rax, 0x1ffffffffffffffe 	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4003235	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4003239	            0x7724	                            ja 0x400325f	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x400323b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x400323f	    0x488d14c50000	                        lea rdx, [rax*8]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4003247	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x400324b	           0xfb600	                   movzx eax, byte [rax]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x400324e	           0xfb6c0	                           movzx eax, al	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4003251	          0x83e830	                           sub eax, 0x30	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4003254	            0x4898	                                    cdqe	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4003256	          0x4801d0	                            add rax, rdx	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x4003259	        0x488945e8	             mov qword [rbp - 0x18], rax	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x400325d	            0xeb08	                           jmp 0x4003267	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x400325f	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1949	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	ELSE_5
0x4003267	      0x488345e001	               add qword [rbp - 0x20], 1	      1950	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x400326c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x400326f	          0x8d5001	                      lea edx, [rax + 1]	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x4003272	          0x8955dc	             mov dword [rbp - 0x24], edx	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x4003275	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x4003278	            0x741f	                            je 0x4003299	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x400327a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x400327e	           0xfb600	                   movzx eax, byte [rax]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4003281	            0x3c2f	                            cmp al, 0x2f	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4003283	     0xf860c010000	                           jbe 0x4003395	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4003289	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x400328d	           0xfb600	                   movzx eax, byte [rax]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4003290	            0x3c37	                            cmp al, 0x37	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4003292	            0x7697	                           jbe 0x400322b	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4003294	      0xe9fc000000	                           jmp 0x4003395	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4003299	              0x90	                                     nop	      1952	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x400329a	      0xe9f6000000	                           jmp 0x4003395	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x400329f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x40032a3	            0x750a	                           jne 0x40032af	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x40032a5	        0x837db40c	            cmp dword [rbp - 0x4c], 0xc 	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x40032a9	     0xf85cf000000	                           jne 0x400337e	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x40032af	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1958	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x40032b3	            0x7458	                            je 0x400330d	      1958	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x40032b5	        0x8345dc02	               add dword [rbp - 0x24], 2	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x40032b9	            0xeb52	                           jmp 0x400330d	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x40032bb	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x40032c5	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x40032c9	            0x7727	                            ja 0x40032f2	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x40032cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032cf	        0x48c1e004	                              shl rax, 4	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032d3	          0x4889c3	                            mov rbx, rax	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032da	           0xfb600	                   movzx eax, byte [rax]	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032dd	           0xfb6c0	                           movzx eax, al	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032e0	            0x89c7	                            mov edi, eax	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032e2	      0xe800000000	                          call 0x40032e7	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032e7	            0x4898	                                    cdqe	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032e9	          0x4801d8	                            add rax, rbx	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032ec	        0x488945e8	             mov qword [rbp - 0x18], rax	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032f0	            0xeb08	                           jmp 0x40032fa	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x40032f2	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1966	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	ELSE_7
0x40032fa	      0x488345e001	               add qword [rbp - 0x20], 1	      1967	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3
0x40032ff	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4003302	          0x8d5001	                      lea edx, [rax + 1]	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4003305	          0x8955dc	             mov dword [rbp - 0x24], edx	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4003308	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x400330b	            0x7417	                            je 0x4003324	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x400330d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4003311	           0xfb600	                   movzx eax, byte [rax]	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4003314	           0xfb6c0	                           movzx eax, al	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4003317	            0x89c7	                            mov edi, eax	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4003319	      0xe800000000	                          call 0x400331e	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x400331e	            0x85c0	                           test eax, eax	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4003320	            0x7599	                           jne 0x40032bb	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4003322	            0xeb75	                           jmp 0x4003399	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4003324	              0x90	                                     nop	      1969	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4003325	            0xeb72	                           jmp 0x4003399	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4003327	    0x48b898999999	          movabs rax, 0x1999999999999998	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003331	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003335	            0x772c	                            ja 0x4003363	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003337	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400333b	          0x4889d0	                            mov rax, rdx	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400333e	        0x48c1e002	                              shl rax, 2	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003342	          0x4801d0	                            add rax, rdx	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003345	          0x4801c0	                            add rax, rax	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003348	          0x4889c2	                            mov rdx, rax	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400334b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400334f	           0xfb600	                   movzx eax, byte [rax]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003352	           0xfb6c0	                           movzx eax, al	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003355	          0x83e830	                           sub eax, 0x30	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003358	            0x4898	                                    cdqe	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400335a	          0x4801d0	                            add rax, rdx	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400335d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003361	            0xeb08	                           jmp 0x400336b	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4003363	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	      1981	charset.c	FUNCTION_59	ELSE_8	WHILE_4	ELSE_9
0x400336b	      0x488345e001	               add qword [rbp - 0x20], 1	      1982	charset.c	FUNCTION_59	ELSE_8	WHILE_4
0x4003370	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x4003373	          0x8d5001	                      lea edx, [rax + 1]	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x4003376	          0x8955dc	             mov dword [rbp - 0x24], edx	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x4003379	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x400337c	            0x741a	                            je 0x4003398	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x400337e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4003382	           0xfb600	                   movzx eax, byte [rax]	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4003385	           0xfb6c0	                           movzx eax, al	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4003388	          0x83e830	                           sub eax, 0x30	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x400338b	          0x83f809	                              cmp eax, 9	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x400338e	            0x7697	                           jbe 0x4003327	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4003390	            0xeb07	                           jmp 0x4003399	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x4003392	              0x90	                                     nop	      1923	charset.c	FUNCTION_59	IF_7
0x4003393	            0xeb04	                           jmp 0x4003399	      1923	charset.c	FUNCTION_59	IF_7
0x4003395	              0x90	                                     nop	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4003396	            0xeb01	                           jmp 0x4003399	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x4003398	              0x90	                                     nop	      1984	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x4003399	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1988	charset.c	FUNCTION_59	IF_20
0x400339e	            0x7409	                            je 0x40033a9	      1988	charset.c	FUNCTION_59	IF_20
0x40033a0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1989	charset.c	FUNCTION_59	IF_20
0x40033a4	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1989	charset.c	FUNCTION_59	IF_20
0x40033a7	            0x8910	                    mov dword [rax], edx	      1989	charset.c	FUNCTION_59	IF_20
0x40033a9	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1990	charset.c	FUNCTION_59	IF_21
0x40033ae	            0x7416	                            je 0x40033c6	      1990	charset.c	FUNCTION_59	IF_21
0x40033b0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1991	charset.c	FUNCTION_59	IF_21
0x40033b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1991	charset.c	FUNCTION_59	IF_21
0x40033b8	          0x4829c2	                            sub rdx, rax	      1991	charset.c	FUNCTION_59	IF_21
0x40033bb	          0x4889d0	                            mov rax, rdx	      1991	charset.c	FUNCTION_59	IF_21
0x40033be	            0x89c2	                            mov edx, eax	      1991	charset.c	FUNCTION_59	IF_21
0x40033c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1991	charset.c	FUNCTION_59	IF_21
0x40033c4	            0x8910	                    mov dword [rax], edx	      1991	charset.c	FUNCTION_59	IF_21
0x40033c6	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1992	charset.c	FUNCTION_59	IF_22
0x40033cb	            0x7457	                            je 0x4003424	      1992	charset.c	FUNCTION_59	IF_22
0x40033cd	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x40033d1	            0x742f	                            je 0x4003402	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x40033d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x40033d7	          0x4885c0	                           test rax, rax	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x40033da	            0x7913	                           jns 0x40033ef	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x40033dc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x40033e0	    0x48b900000000	          movabs rcx, 0x8000000000000000	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x40033ea	          0x488908	                    mov qword [rax], rcx	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x40033ed	            0xeb35	                           jmp 0x4003424	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x40033ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x40033f3	          0x48f7d8	                                 neg rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x40033f6	          0x4889c2	                            mov rdx, rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x40033f9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x40033fd	          0x488910	                    mov qword [rax], rdx	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4003400	            0xeb22	                           jmp 0x4003424	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4003402	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4003406	          0x4885c0	                           test rax, rax	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4003409	            0x790e	                           jns 0x4003419	      2004	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x400340b	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	      2005	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4003415	        0x488945e8	             mov qword [rbp - 0x18], rax	      2005	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4003419	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x400341d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x4003421	          0x488910	                    mov qword [rax], rdx	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x4003424	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2009	charset.c	FUNCTION_59	IF_26
0x4003429	            0x740b	                            je 0x4003436	      2009	charset.c	FUNCTION_59	IF_26
0x400342b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2010	charset.c	FUNCTION_59	IF_26
0x400342f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2010	charset.c	FUNCTION_59	IF_26
0x4003433	          0x488910	                    mov qword [rax], rdx	      2010	charset.c	FUNCTION_59	IF_26
0x4003436	              0x90	                                     nop	      2011	charset.c	FUNCTION_59
0x4003437	        0x4883c458	                           add rsp, 0x58	      2011	charset.c	FUNCTION_59
0x400343b	              0x5b	                                 pop rbx	      2011	charset.c	FUNCTION_59
0x400343c	              0x5d	                                 pop rbp	      2011	charset.c	FUNCTION_59
0x400343d	              0xc3	                                     ret	      2011	charset.c	FUNCTION_59
getdigits	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,2	26
0x4002f4e	              0x55	                                push rbp	      1816	charset.c	FUNCTION_57
0x4002f4f	          0x4889e5	                            mov rbp, rsp	      1816	charset.c	FUNCTION_57
0x4002f52	        0x4883ec20	                           sub rsp, 0x20	      1816	charset.c	FUNCTION_57
0x4002f56	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1816	charset.c	FUNCTION_57
0x4002f5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1820	charset.c	FUNCTION_57
0x4002f5e	          0x488b00	                    mov rax, qword [rax]	      1820	charset.c	FUNCTION_57
0x4002f61	        0x488945f0	             mov qword [rbp - 0x10], rax	      1820	charset.c	FUNCTION_57
0x4002f65	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1821	charset.c	FUNCTION_57	CALL_1
0x4002f69	          0x4889c7	                            mov rdi, rax	      1821	charset.c	FUNCTION_57	CALL_1
0x4002f6c	      0xe800000000	                          call 0x4002f71	      1821	charset.c	FUNCTION_57	CALL_1
0x4002f71	        0x488945f8	                mov qword [rbp - 8], rax	      1821	charset.c	FUNCTION_57	CALL_1
0x4002f75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1822	charset.c	FUNCTION_57	IF_1
0x4002f79	           0xfb600	                   movzx eax, byte [rax]	      1822	charset.c	FUNCTION_57	IF_1
0x4002f7c	            0x3c2d	                            cmp al, 0x2d	      1822	charset.c	FUNCTION_57	IF_1
0x4002f7e	            0x7505	                           jne 0x4002f85	      1822	charset.c	FUNCTION_57	IF_1
0x4002f80	      0x488345f001	               add qword [rbp - 0x10], 1	      1823	charset.c	FUNCTION_57	IF_1
0x4002f85	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1824	charset.c	FUNCTION_57	CALL_2
0x4002f89	          0x4889c7	                            mov rdi, rax	      1824	charset.c	FUNCTION_57	CALL_2
0x4002f8c	      0xe800000000	                          call 0x4002f91	      1824	charset.c	FUNCTION_57	CALL_2
0x4002f91	        0x488945f0	             mov qword [rbp - 0x10], rax	      1824	charset.c	FUNCTION_57	CALL_2
0x4002f95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1825	charset.c	FUNCTION_57
0x4002f99	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1825	charset.c	FUNCTION_57
0x4002f9d	          0x488910	                    mov qword [rax], rdx	      1825	charset.c	FUNCTION_57
0x4002fa0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1826	charset.c	FUNCTION_57
0x4002fa4	              0xc9	                                   leave	      1827	charset.c	FUNCTION_57
0x4002fa5	              0xc3	                                     ret	      1827	charset.c	FUNCTION_57
skiptohex	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	22
0x4002b59	              0x55	                                push rbp	      1626	charset.c	FUNCTION_47
0x4002b5a	          0x4889e5	                            mov rbp, rsp	      1626	charset.c	FUNCTION_47
0x4002b5d	        0x4883ec20	                           sub rsp, 0x20	      1626	charset.c	FUNCTION_47
0x4002b61	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1626	charset.c	FUNCTION_47
0x4002b65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1627	charset.c	FUNCTION_47
0x4002b69	        0x488945f8	                mov qword [rbp - 8], rax	      1627	charset.c	FUNCTION_47
0x4002b6d	            0xeb05	                           jmp 0x4002b74	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b6f	      0x488345f801	                  add qword [rbp - 8], 1	      1630	charset.c	FUNCTION_47	WHILE_1
0x4002b74	        0x488b45f8	                mov rax, qword [rbp - 8]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b78	           0xfb600	                   movzx eax, byte [rax]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b7b	            0x84c0	                             test al, al	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b7d	            0x7415	                            je 0x4002b94	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b7f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b83	           0xfb600	                   movzx eax, byte [rax]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b86	           0xfb6c0	                           movzx eax, al	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b89	            0x89c7	                            mov edi, eax	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b8b	      0xe800000000	                          call 0x4002b90	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b90	            0x85c0	                           test eax, eax	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b92	            0x74db	                            je 0x4002b6f	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4002b94	        0x488b45f8	                mov rax, qword [rbp - 8]	      1631	charset.c	FUNCTION_47
0x4002b98	              0xc9	                                   leave	      1632	charset.c	FUNCTION_47
0x4002b99	              0xc3	                                     ret	      1632	charset.c	FUNCTION_47
lbr_chartabsize	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:DO,0:CALL,2	66
0x4001900	              0x55	                                push rbp	      1001	charset.c	FUNCTION_30
0x4001901	          0x4889e5	                            mov rbp, rsp	      1001	charset.c	FUNCTION_30
0x4001904	        0x4883ec30	                           sub rsp, 0x30	      1001	charset.c	FUNCTION_30
0x4001908	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1001	charset.c	FUNCTION_30
0x400190c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1001	charset.c	FUNCTION_30
0x4001910	          0x8955dc	             mov dword [rbp - 0x24], edx	      1001	charset.c	FUNCTION_30
0x4001913	    0x488b05000000	            mov rax, qword [0x0400191a] 	      1003	charset.c	FUNCTION_30	IF_1
0x400191a	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1003	charset.c	FUNCTION_30	IF_1
0x4001920	            0x85c0	                           test eax, eax	      1003	charset.c	FUNCTION_30	IF_1
0x4001922	     0xf85ab000000	                           jne 0x40019d3	      1003	charset.c	FUNCTION_30	IF_1
0x4001928	    0x488b05000000	            mov rax, qword [0x0400192f] 	      1003	charset.c	FUNCTION_30	IF_1
0x400192f	           0xfb600	                   movzx eax, byte [rax]	      1003	charset.c	FUNCTION_30	IF_1
0x4001932	            0x84c0	                             test al, al	      1003	charset.c	FUNCTION_30	IF_1
0x4001934	     0xf8599000000	                           jne 0x40019d3	      1003	charset.c	FUNCTION_30	IF_1
0x400193a	    0x488b05000000	            mov rax, qword [0x04001941] 	      1003	charset.c	FUNCTION_30	IF_1
0x4001941	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1003	charset.c	FUNCTION_30	IF_1
0x4001947	            0x85c0	                           test eax, eax	      1003	charset.c	FUNCTION_30	IF_1
0x4001949	     0xf8584000000	                           jne 0x40019d3	      1003	charset.c	FUNCTION_30	IF_1
0x400194f	    0x488b05000000	            mov rax, qword [0x04001956] 	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x4001956	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x400195c	            0x85c0	                           test eax, eax	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x400195e	            0x7420	                            je 0x4001980	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x4001960	    0x488b05000000	            mov rax, qword [0x04001967] 	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001967	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x400196a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x400196e	      0xb900000000	                              mov ecx, 0	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001973	          0x4889c7	                            mov rdi, rax	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001976	      0xe8fb060000	          call sym.win_nolbr_chartabsize	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x400197b	      0xe980000000	                           jmp 0x4001a00	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001980	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1010	charset.c	FUNCTION_30	IF_1
0x4001984	           0xfb600	                   movzx eax, byte [rax]	      1010	charset.c	FUNCTION_30	IF_1
0x4001987	            0x3c09	                               cmp al, 9	      1010	charset.c	FUNCTION_30	IF_1
0x4001989	            0x753a	                           jne 0x40019c5	      1010	charset.c	FUNCTION_30	IF_1
0x400198b	    0x488b05000000	            mov rax, qword [0x04001992] 	      1010	charset.c	FUNCTION_30	IF_1
0x4001992	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1010	charset.c	FUNCTION_30	IF_1
0x4001998	            0x85c0	                           test eax, eax	      1010	charset.c	FUNCTION_30	IF_1
0x400199a	            0x740a	                            je 0x40019a6	      1010	charset.c	FUNCTION_30	IF_1
0x400199c	    0x8b0500000000	            mov eax, dword [0x040019a2] 	      1010	charset.c	FUNCTION_30	IF_1
0x40019a2	            0x85c0	                           test eax, eax	      1010	charset.c	FUNCTION_30	IF_1
0x40019a4	            0x741f	                            je 0x40019c5	      1010	charset.c	FUNCTION_30	IF_1
0x40019a6	    0x488b05000000	            mov rax, qword [0x040019ad] 	      1010	charset.c	FUNCTION_30	IF_1
0x40019ad	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1010	charset.c	FUNCTION_30	IF_1
0x40019b4	          0x8945fc	                mov dword [rbp - 4], eax	      1010	charset.c	FUNCTION_30	IF_1
0x40019b7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1010	charset.c	FUNCTION_30	IF_1
0x40019ba	              0x99	                                     cdq	      1010	charset.c	FUNCTION_30	IF_1
0x40019bb	          0xf77dfc	                    idiv dword [rbp - 4]	      1010	charset.c	FUNCTION_30	IF_1
0x40019be	          0x8b45fc	                mov eax, dword [rbp - 4]	      1010	charset.c	FUNCTION_30	IF_1
0x40019c1	            0x29d0	                            sub eax, edx	      1010	charset.c	FUNCTION_30	IF_1
0x40019c3	            0xeb3b	                           jmp 0x4001a00	      1010	charset.c	FUNCTION_30	IF_1
0x40019c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1010	charset.c	FUNCTION_30	IF_1
0x40019c9	          0x4889c7	                            mov rdi, rax	      1010	charset.c	FUNCTION_30	IF_1
0x40019cc	      0xe800000000	                          call 0x40019d1	      1010	charset.c	FUNCTION_30	IF_1
0x40019d1	            0xeb2d	                           jmp 0x4001a00	      1010	charset.c	FUNCTION_30	IF_1
0x40019d3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1013	charset.c	FUNCTION_30	CALL_2
0x40019d8	            0x7506	                           jne 0x40019e0	      1013	charset.c	FUNCTION_30	CALL_2
0x40019da	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1013	charset.c	FUNCTION_30	CALL_2
0x40019de	            0xeb04	                           jmp 0x40019e4	      1013	charset.c	FUNCTION_30	CALL_2
0x40019e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	charset.c	FUNCTION_30	CALL_2
0x40019e4	    0x488b3d000000	            mov rdi, qword [0x040019eb] 	      1013	charset.c	FUNCTION_30	CALL_2
0x40019eb	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1013	charset.c	FUNCTION_30	CALL_2
0x40019ee	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1013	charset.c	FUNCTION_30	CALL_2
0x40019f2	    0x41b800000000	                              mov r8d, 0	      1013	charset.c	FUNCTION_30	CALL_2
0x40019f8	          0x4889c6	                            mov rsi, rax	      1013	charset.c	FUNCTION_30	CALL_2
0x40019fb	      0xe800000000	                          call 0x4001a00	      1013	charset.c	FUNCTION_30	CALL_2
0x4001a00	              0xc9	                                   leave	      1015	charset.c	FUNCTION_30
0x4001a01	              0xc3	                                     ret	      1015	charset.c	FUNCTION_30
rem_backslash	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	17
0x40034eb	              0x55	                                push rbp	      2056	charset.c	FUNCTION_62
0x40034ec	          0x4889e5	                            mov rbp, rsp	      2056	charset.c	FUNCTION_62
0x40034ef	        0x48897df8	                mov qword [rbp - 8], rdi	      2056	charset.c	FUNCTION_62
0x40034f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2068	charset.c	FUNCTION_62
0x40034f7	           0xfb600	                   movzx eax, byte [rax]	      2068	charset.c	FUNCTION_62
0x40034fa	            0x3c5c	                            cmp al, 0x5c	      2068	charset.c	FUNCTION_62
0x40034fc	            0x7516	                           jne 0x4003514	      2068	charset.c	FUNCTION_62
0x40034fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      2068	charset.c	FUNCTION_62
0x4003502	        0x4883c001	                              add rax, 1	      2068	charset.c	FUNCTION_62
0x4003506	           0xfb600	                   movzx eax, byte [rax]	      2068	charset.c	FUNCTION_62
0x4003509	            0x84c0	                             test al, al	      2068	charset.c	FUNCTION_62
0x400350b	            0x7407	                            je 0x4003514	      2068	charset.c	FUNCTION_62
0x400350d	      0xb801000000	                              mov eax, 1	      2068	charset.c	FUNCTION_62
0x4003512	            0xeb05	                           jmp 0x4003519	      2068	charset.c	FUNCTION_62
0x4003514	      0xb800000000	                              mov eax, 0	      2068	charset.c	FUNCTION_62
0x4003519	              0x5d	                                 pop rbp	      2070	charset.c	FUNCTION_62
0x400351a	              0xc3	                                     ret	      2070	charset.c	FUNCTION_62
hex2nr	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:DO,0:CALL,0	21
0x400343e	              0x55	                                push rbp	      2019	charset.c	FUNCTION_60
0x400343f	          0x4889e5	                            mov rbp, rsp	      2019	charset.c	FUNCTION_60
0x4003442	          0x897dfc	                mov dword [rbp - 4], edi	      2019	charset.c	FUNCTION_60
0x4003445	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      2020	charset.c	FUNCTION_60	IF_1
0x4003449	            0x7e0e	                           jle 0x4003459	      2020	charset.c	FUNCTION_60	IF_1
0x400344b	        0x837dfc66	               cmp dword [rbp - 4], 0x66	      2020	charset.c	FUNCTION_60	IF_1
0x400344f	            0x7f08	                            jg 0x4003459	      2020	charset.c	FUNCTION_60	IF_1
0x4003451	          0x8b45fc	                mov eax, dword [rbp - 4]	      2021	charset.c	FUNCTION_60	IF_1
0x4003454	          0x83e857	                           sub eax, 0x57	      2021	charset.c	FUNCTION_60	IF_1
0x4003457	            0xeb1a	                           jmp 0x4003473	      2021	charset.c	FUNCTION_60	IF_1
0x4003459	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      2022	charset.c	FUNCTION_60	IF_2
0x400345d	            0x7e0e	                           jle 0x400346d	      2022	charset.c	FUNCTION_60	IF_2
0x400345f	        0x837dfc46	               cmp dword [rbp - 4], 0x46	      2022	charset.c	FUNCTION_60	IF_2
0x4003463	            0x7f08	                            jg 0x400346d	      2022	charset.c	FUNCTION_60	IF_2
0x4003465	          0x8b45fc	                mov eax, dword [rbp - 4]	      2023	charset.c	FUNCTION_60	IF_2
0x4003468	          0x83e837	                           sub eax, 0x37	      2023	charset.c	FUNCTION_60	IF_2
0x400346b	            0xeb06	                           jmp 0x4003473	      2023	charset.c	FUNCTION_60	IF_2
0x400346d	          0x8b45fc	                mov eax, dword [rbp - 4]	      2024	charset.c	FUNCTION_60
0x4003470	          0x83e830	                           sub eax, 0x30	      2024	charset.c	FUNCTION_60
0x4003473	              0x5d	                                 pop rbp	      2025	charset.c	FUNCTION_60
0x4003474	              0xc3	                                     ret	      2025	charset.c	FUNCTION_60
hexhex2nr	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,4	40
0x4003475	              0x55	                                push rbp	      2034	charset.c	FUNCTION_61
0x4003476	          0x4889e5	                            mov rbp, rsp	      2034	charset.c	FUNCTION_61
0x4003479	              0x53	                                push rbx	      2034	charset.c	FUNCTION_61
0x400347a	        0x4883ec08	                              sub rsp, 8	      2034	charset.c	FUNCTION_61
0x400347e	        0x48897df0	             mov qword [rbp - 0x10], rdi	      2034	charset.c	FUNCTION_61
0x4003482	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4003486	           0xfb600	                   movzx eax, byte [rax]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4003489	           0xfb6c0	                           movzx eax, al	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x400348c	            0x89c7	                            mov edi, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x400348e	      0xe800000000	                          call 0x4003493	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4003493	            0x85c0	                           test eax, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4003495	            0x7419	                            je 0x40034b0	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x4003497	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x400349b	        0x4883c001	                              add rax, 1	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x400349f	           0xfb600	                   movzx eax, byte [rax]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40034a2	           0xfb6c0	                           movzx eax, al	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40034a5	            0x89c7	                            mov edi, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40034a7	      0xe800000000	                          call 0x40034ac	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40034ac	            0x85c0	                           test eax, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40034ae	            0x7507	                           jne 0x40034b7	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40034b0	      0xb8ffffffff	                     mov eax, 0xffffffff	      2036	charset.c	FUNCTION_61	IF_1
0x40034b5	            0xeb2d	                           jmp 0x40034e4	      2036	charset.c	FUNCTION_61	IF_1
0x40034b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2037	charset.c	FUNCTION_61	CALL_4
0x40034bb	           0xfb600	                   movzx eax, byte [rax]	      2037	charset.c	FUNCTION_61	CALL_4
0x40034be	           0xfb6c0	                           movzx eax, al	      2037	charset.c	FUNCTION_61	CALL_4
0x40034c1	            0x89c7	                            mov edi, eax	      2037	charset.c	FUNCTION_61	CALL_4
0x40034c3	      0xe800000000	                          call 0x40034c8	      2037	charset.c	FUNCTION_61	CALL_4
0x40034c8	          0xc1e004	                              shl eax, 4	      2037	charset.c	FUNCTION_61	CALL_4
0x40034cb	            0x89c3	                            mov ebx, eax	      2037	charset.c	FUNCTION_61	CALL_4
0x40034cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2037	charset.c	FUNCTION_61	CALL_4
0x40034d1	        0x4883c001	                              add rax, 1	      2037	charset.c	FUNCTION_61	CALL_4
0x40034d5	           0xfb600	                   movzx eax, byte [rax]	      2037	charset.c	FUNCTION_61	CALL_4
0x40034d8	           0xfb6c0	                           movzx eax, al	      2037	charset.c	FUNCTION_61	CALL_4
0x40034db	            0x89c7	                            mov edi, eax	      2037	charset.c	FUNCTION_61	CALL_4
0x40034dd	      0xe800000000	                          call 0x40034e2	      2037	charset.c	FUNCTION_61	CALL_4
0x40034e2	             0x1d8	                            add eax, ebx	      2037	charset.c	FUNCTION_61	CALL_4
0x40034e4	        0x4883c408	                              add rsp, 8	      2038	charset.c	FUNCTION_61
0x40034e8	              0x5b	                                 pop rbx	      2038	charset.c	FUNCTION_61
0x40034e9	              0x5d	                                 pop rbp	      2038	charset.c	FUNCTION_61
0x40034ea	              0xc3	                                     ret	      2038	charset.c	FUNCTION_61
vim_isxdigit	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0	20
0x4002bbb	              0x55	                                push rbp	      1653	charset.c	FUNCTION_49
0x4002bbc	          0x4889e5	                            mov rbp, rsp	      1653	charset.c	FUNCTION_49
0x4002bbf	          0x897dfc	                mov dword [rbp - 4], edi	      1653	charset.c	FUNCTION_49
0x4002bc2	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	      1656	charset.c	FUNCTION_49
0x4002bc6	            0x7e06	                           jle 0x4002bce	      1656	charset.c	FUNCTION_49
0x4002bc8	        0x837dfc39	               cmp dword [rbp - 4], 0x39	      1654	charset.c	FUNCTION_49
0x4002bcc	            0x7e18	                           jle 0x4002be6	      1654	charset.c	FUNCTION_49
0x4002bce	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      1655	charset.c	FUNCTION_49
0x4002bd2	            0x7e06	                           jle 0x4002bda	      1655	charset.c	FUNCTION_49
0x4002bd4	        0x837dfc66	               cmp dword [rbp - 4], 0x66	      1655	charset.c	FUNCTION_49
0x4002bd8	            0x7e0c	                           jle 0x4002be6	      1655	charset.c	FUNCTION_49
0x4002bda	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1656	charset.c	FUNCTION_49
0x4002bde	            0x7e0d	                           jle 0x4002bed	      1656	charset.c	FUNCTION_49
0x4002be0	        0x837dfc46	               cmp dword [rbp - 4], 0x46	      1656	charset.c	FUNCTION_49
0x4002be4	            0x7f07	                            jg 0x4002bed	      1656	charset.c	FUNCTION_49
0x4002be6	      0xb801000000	                              mov eax, 1	      1656	charset.c	FUNCTION_49
0x4002beb	            0xeb05	                           jmp 0x4002bf2	      1656	charset.c	FUNCTION_49
0x4002bed	      0xb800000000	                              mov eax, 0	      1656	charset.c	FUNCTION_49
0x4002bf2	              0x5d	                                 pop rbp	      1657	charset.c	FUNCTION_49
0x4002bf3	              0xc3	                                     ret	      1657	charset.c	FUNCTION_49
skiptobin	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	22
0x4002ade	              0x55	                                push rbp	      1600	charset.c	FUNCTION_45
0x4002adf	          0x4889e5	                            mov rbp, rsp	      1600	charset.c	FUNCTION_45
0x4002ae2	        0x4883ec20	                           sub rsp, 0x20	      1600	charset.c	FUNCTION_45
0x4002ae6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1600	charset.c	FUNCTION_45
0x4002aea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1601	charset.c	FUNCTION_45
0x4002aee	        0x488945f8	                mov qword [rbp - 8], rax	      1601	charset.c	FUNCTION_45
0x4002af2	            0xeb05	                           jmp 0x4002af9	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002af4	      0x488345f801	                  add qword [rbp - 8], 1	      1604	charset.c	FUNCTION_45	WHILE_1
0x4002af9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002afd	           0xfb600	                   movzx eax, byte [rax]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b00	            0x84c0	                             test al, al	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b02	            0x7415	                            je 0x4002b19	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b04	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b08	           0xfb600	                   movzx eax, byte [rax]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b0b	           0xfb6c0	                           movzx eax, al	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b0e	            0x89c7	                            mov edi, eax	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b10	      0xe800000000	                          call 0x4002b15	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b15	            0x85c0	                           test eax, eax	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b17	            0x74db	                            je 0x4002af4	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4002b19	        0x488b45f8	                mov rax, qword [rbp - 8]	      1605	charset.c	FUNCTION_45
0x4002b1d	              0xc9	                                   leave	      1606	charset.c	FUNCTION_45
0x4002b1e	              0xc3	                                     ret	      1606	charset.c	FUNCTION_45
getvcol	ELSE,6:FOR,2:functions,0:SWITCH,0:WHILE,0:IF,16:DO,0:CALL,9	299
0x40021d6	              0x55	                                push rbp	      1278	charset.c	FUNCTION_35
0x40021d7	          0x4889e5	                            mov rbp, rsp	      1278	charset.c	FUNCTION_35
0x40021da	        0x4883ec70	                           sub rsp, 0x70	      1278	charset.c	FUNCTION_35
0x40021de	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1278	charset.c	FUNCTION_35
0x40021e2	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1278	charset.c	FUNCTION_35
0x40021e6	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1278	charset.c	FUNCTION_35
0x40021ea	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1278	charset.c	FUNCTION_35
0x40021ee	        0x4c894598	              mov qword [rbp - 0x68], r8	      1278	charset.c	FUNCTION_35
0x40021f2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1278	charset.c	FUNCTION_35
0x40021fb	        0x488945f8	                mov qword [rbp - 8], rax	      1278	charset.c	FUNCTION_35
0x40021ff	            0x31c0	                            xor eax, eax	      1278	charset.c	FUNCTION_35
0x4002201	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1285	charset.c	FUNCTION_35
0x4002205	        0x488b4008	                mov rax, qword [rax + 8]	      1285	charset.c	FUNCTION_35
0x4002209	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1285	charset.c	FUNCTION_35
0x4002210	          0x8945d8	             mov dword [rbp - 0x28], eax	      1285	charset.c	FUNCTION_35
0x4002213	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1288	charset.c	FUNCTION_35
0x400221a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1289	charset.c	FUNCTION_35	CALL_1
0x400221e	          0x488b08	                    mov rcx, qword [rax]	      1289	charset.c	FUNCTION_35	CALL_1
0x4002221	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1289	charset.c	FUNCTION_35	CALL_1
0x4002225	        0x488b4008	                mov rax, qword [rax + 8]	      1289	charset.c	FUNCTION_35	CALL_1
0x4002229	      0xba00000000	                              mov edx, 0	      1289	charset.c	FUNCTION_35	CALL_1
0x400222e	          0x4889ce	                            mov rsi, rcx	      1289	charset.c	FUNCTION_35	CALL_1
0x4002231	          0x4889c7	                            mov rdi, rax	      1289	charset.c	FUNCTION_35	CALL_1
0x4002234	      0xe800000000	                          call 0x4002239	      1289	charset.c	FUNCTION_35	CALL_1
0x4002239	        0x488945e0	             mov qword [rbp - 0x20], rax	      1289	charset.c	FUNCTION_35	CALL_1
0x400223d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1289	charset.c	FUNCTION_35	CALL_1
0x4002241	        0x488945f0	             mov qword [rbp - 0x10], rax	      1289	charset.c	FUNCTION_35	CALL_1
0x4002245	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1290	charset.c	FUNCTION_35	IF_1
0x4002249	          0x8b4008	                mov eax, dword [rax + 8]	      1290	charset.c	FUNCTION_35	IF_1
0x400224c	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1290	charset.c	FUNCTION_35	IF_1
0x4002251	            0x750a	                           jne 0x400225d	      1290	charset.c	FUNCTION_35	IF_1
0x4002253	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1291	charset.c	FUNCTION_35	IF_1
0x400225b	            0xeb55	                           jmp 0x40022b2	      1291	charset.c	FUNCTION_35	IF_1
0x400225d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x4002261	           0xfb600	                   movzx eax, byte [rax]	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x4002264	            0x84c0	                             test al, al	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x4002266	            0x750b	                           jne 0x4002273	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x4002268	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1297	charset.c	FUNCTION_35	ELSE_1	IF_2
0x400226c	    0xc74008000000	                  mov dword [rax + 8], 0	      1297	charset.c	FUNCTION_35	ELSE_1	IF_2
0x4002273	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1298	charset.c	FUNCTION_35	ELSE_1
0x4002277	          0x8b4008	                mov eax, dword [rax + 8]	      1298	charset.c	FUNCTION_35	ELSE_1
0x400227a	          0x4863d0	                         movsxd rdx, eax	      1298	charset.c	FUNCTION_35	ELSE_1
0x400227d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1298	charset.c	FUNCTION_35	ELSE_1
0x4002281	          0x4801d0	                            add rax, rdx	      1298	charset.c	FUNCTION_35	ELSE_1
0x4002284	        0x488945e8	             mov qword [rbp - 0x18], rax	      1298	charset.c	FUNCTION_35	ELSE_1
0x4002288	    0x8b0500000000	            mov eax, dword [0x0400228e] 	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x400228e	            0x85c0	                           test eax, eax	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4002290	            0x7420	                            je 0x40022b2	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4002292	    0x488b05000000	            mov rax, qword [0x04002299] 	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x4002299	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x400229d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40022a1	          0x4889ce	                            mov rsi, rcx	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40022a4	          0x4889d7	                            mov rdi, rdx	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40022a7	            0xffd0	                                call rax	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40022a9	            0x4898	                                    cdqe	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40022ab	          0x48f7d8	                                 neg rax	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40022ae	        0x480145e8	            add qword [rbp - 0x18], rax 	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40022b2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1312	charset.c	FUNCTION_35	IF_4
0x40022b6	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1312	charset.c	FUNCTION_35	IF_4
0x40022bc	            0x85c0	                           test eax, eax	      1312	charset.c	FUNCTION_35	IF_4
0x40022be	            0x740e	                            je 0x40022ce	      1312	charset.c	FUNCTION_35	IF_4
0x40022c0	    0x8b0500000000	            mov eax, dword [0x040022c6] 	      1312	charset.c	FUNCTION_35	IF_4
0x40022c6	            0x85c0	                           test eax, eax	      1312	charset.c	FUNCTION_35	IF_4
0x40022c8	     0xf8462010000	                            je 0x4002430	      1312	charset.c	FUNCTION_35	IF_4
0x40022ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1314	charset.c	FUNCTION_35	IF_4
0x40022d2	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1314	charset.c	FUNCTION_35	IF_4
0x40022d8	            0x85c0	                           test eax, eax	      1314	charset.c	FUNCTION_35	IF_4
0x40022da	     0xf8550010000	                           jne 0x4002430	      1314	charset.c	FUNCTION_35	IF_4
0x40022e0	    0x488b05000000	            mov rax, qword [0x040022e7] 	      1314	charset.c	FUNCTION_35	IF_4
0x40022e7	           0xfb600	                   movzx eax, byte [rax]	      1314	charset.c	FUNCTION_35	IF_4
0x40022ea	            0x84c0	                             test al, al	      1314	charset.c	FUNCTION_35	IF_4
0x40022ec	     0xf853e010000	                           jne 0x4002430	      1314	charset.c	FUNCTION_35	IF_4
0x40022f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1314	charset.c	FUNCTION_35	IF_4
0x40022f6	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1314	charset.c	FUNCTION_35	IF_4
0x40022fc	            0x85c0	                           test eax, eax	      1314	charset.c	FUNCTION_35	IF_4
0x40022fe	     0xf852c010000	                           jne 0x4002430	      1314	charset.c	FUNCTION_35	IF_4
0x4002304	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1324	charset.c	FUNCTION_35	IF_4	FOR_1
0x400230b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x400230f	           0xfb600	                   movzx eax, byte [rax]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x4002312	           0xfb6c0	                           movzx eax, al	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x4002315	          0x8945dc	             mov dword [rbp - 0x24], eax	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x4002318	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400231c	            0x750c	                           jne 0x400232a	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400231e	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1330	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4002325	      0xe904010000	                           jmp 0x400242e	      1331	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400232a	        0x837ddc09	               cmp dword [rbp - 0x24], 9	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x400232e	            0x7514	                           jne 0x4002344	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4002330	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4002333	              0x99	                                     cdq	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4002334	          0xf77dd8	                 idiv dword [rbp - 0x28]	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4002337	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x400233a	            0x29d0	                            sub eax, edx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x400233c	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x400233f	      0xe9a6000000	                           jmp 0x40023ea	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4002344	    0x8b0500000000	            mov eax, dword [0x0400234a] 	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x400234a	            0x85c0	                           test eax, eax	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x400234c	     0xf8483000000	                            je 0x40023d5	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x4002352	    0x8b0500000000	            mov eax, dword [0x04002358] 	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x4002358	            0x85c0	                           test eax, eax	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x400235a	            0x7417	                            je 0x4002373	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x400235c	        0x837ddc7f	           cmp dword [rbp - 0x24], 0x7f 	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x4002360	            0x7e11	                           jle 0x4002373	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x4002362	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4002366	          0x4889c7	                            mov rdi, rax	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4002369	      0xe800000000	                          call 0x400236e	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x400236e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4002371	            0xeb15	                           jmp 0x4002388	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4002373	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x4002376	            0x4898	                                    cdqe	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x4002378	     0xfb680000000	                   movzx eax, byte [rax]	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x400237f	           0xfb6c0	                           movzx eax, al	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x4002382	          0x83e007	                              and eax, 7	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x4002385	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x4002388	        0x837dd402	               cmp dword [rbp - 0x2c], 2	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x400238c	            0x755c	                           jne 0x40023ea	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x400238e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4002392	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4002398	            0x85c0	                           test eax, eax	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x400239a	            0x744e	                            je 0x40023ea	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x400239c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40023a0	           0xfb600	                   movzx eax, byte [rax]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40023a3	           0xfb6c0	                           movzx eax, al	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40023a6	            0x4898	                                    cdqe	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40023a8	     0xfb680000000	                   movzx eax, byte [rax]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40023af	            0x3c01	                               cmp al, 1	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40023b1	            0x7e37	                           jle 0x40023ea	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40023b3	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40023b6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40023ba	            0x89d6	                            mov esi, edx	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40023bc	          0x4889c7	                            mov rdi, rax	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40023bf	      0xe800000000	                          call 0x40023c4	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40023c4	            0x85c0	                           test eax, eax	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40023c6	            0x7422	                            je 0x40023ea	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40023c8	        0x8345d401	               add dword [rbp - 0x2c], 1	      1354	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x40023cc	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      1355	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x40023d3	            0xeb15	                           jmp 0x40023ea	      1355	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x40023d5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40023d8	            0x4898	                                    cdqe	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40023da	     0xfb680000000	                   movzx eax, byte [rax]	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40023e1	           0xfb6c0	                           movzx eax, al	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40023e4	          0x83e007	                              and eax, 7	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40023e7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40023ea	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40023ef	            0x740a	                            je 0x40023fb	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40023f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40023f5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40023f9	            0x7332	                           jae 0x400242d	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40023fb	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x40023fe	           0x145d0	             add dword [rbp - 0x30], eax	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x4002401	    0x8b0500000000	            mov eax, dword [0x04002407] 	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002407	            0x85c0	                           test eax, eax	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002409	            0x7412	                            je 0x400241d	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x400240b	    0x488b05000000	            mov rax, qword [0x04002412] 	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002412	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002416	          0x4889d7	                            mov rdi, rdx	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002419	            0xffd0	                                call rax	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x400241b	            0xeb05	                           jmp 0x4002422	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x400241d	      0xb801000000	                              mov eax, 1	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002422	            0x4898	                                    cdqe	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002424	        0x480145e0	            add qword [rbp - 0x20], rax 	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4002428	      0xe9d7feffff	                           jmp 0x4002304	      1368	charset.c	FUNCTION_35	IF_4	FOR_1
0x400242d	              0x90	                                     nop	      1364	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x400242e	            0xeb7d	                           jmp 0x40024ad	      1312	charset.c	FUNCTION_35	IF_4
0x4002430	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1375	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x4002437	        0x488d7dcc	                   lea rdi, [rbp - 0x34]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400243b	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400243e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4002442	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4002446	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400244a	          0x4989f8	                             mov r8, rdi	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400244d	          0x4889c7	                            mov rdi, rax	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4002450	      0xe800000000	                          call 0x4002455	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4002455	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4002458	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x400245c	           0xfb600	                   movzx eax, byte [rax]	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x400245f	            0x84c0	                             test al, al	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x4002461	            0x7509	                           jne 0x400246c	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x4002463	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1380	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x400246a	            0xeb41	                           jmp 0x40024ad	      1381	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x400246c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x4002471	            0x740a	                            je 0x400247d	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x4002473	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x4002477	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x400247b	            0x732f	                           jae 0x40024ac	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x400247d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1387	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x4002480	           0x145d0	             add dword [rbp - 0x30], eax	      1387	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x4002483	    0x8b0500000000	            mov eax, dword [0x04002489] 	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4002489	            0x85c0	                           test eax, eax	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400248b	            0x7412	                            je 0x400249f	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400248d	    0x488b05000000	            mov rax, qword [0x04002494] 	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4002494	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4002498	          0x4889d7	                            mov rdi, rdx	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400249b	            0xffd0	                                call rax	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400249d	            0xeb05	                           jmp 0x40024a4	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400249f	      0xb801000000	                              mov eax, 1	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x40024a4	            0x4898	                                    cdqe	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x40024a6	        0x480145e0	            add qword [rbp - 0x20], rax 	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x40024aa	            0xeb84	                           jmp 0x4002430	      1389	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x40024ac	              0x90	                                     nop	      1385	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x40024ad	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1391	charset.c	FUNCTION_35	IF_13
0x40024b2	            0x740e	                            je 0x40024c2	      1391	charset.c	FUNCTION_35	IF_13
0x40024b4	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1392	charset.c	FUNCTION_35	IF_13
0x40024b7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1392	charset.c	FUNCTION_35	IF_13
0x40024ba	             0x1c2	                            add edx, eax	      1392	charset.c	FUNCTION_35	IF_13
0x40024bc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1392	charset.c	FUNCTION_35	IF_13
0x40024c0	            0x8910	                    mov dword [rax], edx	      1392	charset.c	FUNCTION_35	IF_13
0x40024c2	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1393	charset.c	FUNCTION_35	IF_14
0x40024c7	            0x7411	                            je 0x40024da	      1393	charset.c	FUNCTION_35	IF_14
0x40024c9	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1394	charset.c	FUNCTION_35	IF_14
0x40024cc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1394	charset.c	FUNCTION_35	IF_14
0x40024cf	             0x1d0	                            add eax, edx	      1394	charset.c	FUNCTION_35	IF_14
0x40024d1	          0x8d50ff	                      lea edx, [rax - 1]	      1394	charset.c	FUNCTION_35	IF_14
0x40024d4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1394	charset.c	FUNCTION_35	IF_14
0x40024d8	            0x8910	                    mov dword [rax], edx	      1394	charset.c	FUNCTION_35	IF_14
0x40024da	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1395	charset.c	FUNCTION_35	IF_15
0x40024df	     0xf8412010000	                            je 0x40025f7	      1395	charset.c	FUNCTION_35	IF_15
0x40024e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x40024e9	           0xfb600	                   movzx eax, byte [rax]	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x40024ec	            0x3c09	                               cmp al, 9	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x40024ee	     0xf85f5000000	                           jne 0x40025e9	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x40024f4	    0x8b0500000000	            mov eax, dword [0x040024fa] 	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x40024fa	          0x83e001	                              and eax, 1	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x40024fd	            0x85c0	                           test eax, eax	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x40024ff	     0xf84e4000000	                            je 0x40025e9	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x4002505	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4002509	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x400250f	            0x85c0	                           test eax, eax	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4002511	     0xf85d2000000	                           jne 0x40025e9	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4002517	      0xe800000000	                          call 0x400251c	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x400251c	            0x85c0	                           test eax, eax	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x400251e	     0xf85c5000000	                           jne 0x40025e9	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x4002524	    0x8b0500000000	            mov eax, dword [0x0400252a] 	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x400252a	            0x85c0	                           test eax, eax	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x400252c	     0xf84a4000000	                            je 0x40025d6	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4002532	    0x488b05000000	            mov rax, qword [0x04002539] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002539	           0xfb600	                   movzx eax, byte [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400253c	            0x3c65	                            cmp al, 0x65	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x400253e	     0xf84a5000000	                            je 0x40025e9	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4002544	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002548	          0x488b10	                    mov rdx, qword [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400254b	    0x488b05000000	            mov rax, qword [0x04002552] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002552	          0x4839c2	                            cmp rdx, rax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4002555	            0x7415	                            je 0x400256c	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4002557	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400255b	          0x488b10	                    mov rdx, qword [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400255e	    0x488b05000000	            mov rax, qword [0x04002565] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002565	          0x4839c2	                            cmp rdx, rax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002568	            0x7d37	                           jge 0x40025a1	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400256a	            0xeb7d	                           jmp 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400256c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002570	          0x8b5008	                mov edx, dword [rax + 8]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002573	    0x8b0500000000	            mov eax, dword [0x04002579] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002579	            0x39c2	                            cmp edx, eax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x400257b	            0x7413	                            je 0x4002590	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x400257d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002581	          0x8b5008	                mov edx, dword [rax + 8]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002584	    0x8b0500000000	            mov eax, dword [0x0400258a] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400258a	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400258c	            0x7d13	                           jge 0x40025a1	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400258e	            0xeb59	                           jmp 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002590	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002594	          0x8b500c	              mov edx, dword [rax + 0xc]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4002597	    0x8b0500000000	            mov eax, dword [0x0400259d] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400259d	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400259f	            0x7c48	                            jl 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025a1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025a5	          0x488b10	                    mov rdx, qword [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025a8	    0x488b05000000	            mov rax, qword [0x040025af] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025af	          0x4839c2	                            cmp rdx, rax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025b2	            0x7522	                           jne 0x40025d6	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025b4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025b8	          0x8b5008	                mov edx, dword [rax + 8]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025bb	    0x8b0500000000	            mov eax, dword [0x040025c1] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025c1	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025c3	            0x7511	                           jne 0x40025d6	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025c9	          0x8b500c	              mov edx, dword [rax + 0xc]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025cc	    0x8b0500000000	            mov eax, dword [0x040025d2] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025d2	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025d4	            0x7413	                            je 0x40025e9	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x40025d6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x40025d9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x40025dc	             0x1d0	                            add eax, edx	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x40025de	          0x8d50ff	                      lea edx, [rax - 1]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x40025e1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x40025e5	            0x8910	                    mov dword [rax], edx	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x40025e7	            0xeb0e	                           jmp 0x40025f7	      1408	charset.c	FUNCTION_35	ELSE_6
0x40025e9	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x40025ec	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x40025ef	             0x1c2	                            add edx, eax	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x40025f1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x40025f5	            0x8910	                    mov dword [rax], edx	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x40025f7	              0x90	                                     nop	      1408	charset.c	FUNCTION_35	ELSE_6
0x40025f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	charset.c	FUNCTION_35	ELSE_6
0x40025fc	    0x644833042528	                xor rax, qword fs:[0x28]	      1408	charset.c	FUNCTION_35	ELSE_6
0x4002605	            0x7405	                            je 0x400260c	      1408	charset.c	FUNCTION_35	ELSE_6
0x4002607	      0xe800000000	                          call 0x400260c	      1408	charset.c	FUNCTION_35	ELSE_6
0x400260c	              0xc9	                                   leave	      1408	charset.c	FUNCTION_35	ELSE_6
0x400260d	              0xc3	                                     ret	      1408	charset.c	FUNCTION_35	ELSE_6
transstr	ELSE,6:FOR,0:functions,0:SWITCH,0:WHILE,2:IF,7:DO,0:CALL,13	150
0x40008d0	              0x55	                                push rbp	       360	charset.c	FUNCTION_4
0x40008d1	          0x4889e5	                            mov rbp, rsp	       360	charset.c	FUNCTION_4
0x40008d4	        0x4883ec50	                           sub rsp, 0x50	       360	charset.c	FUNCTION_4
0x40008d8	        0x48897db8	             mov qword [rbp - 0x48], rdi	       360	charset.c	FUNCTION_4
0x40008dc	    0x64488b042528	                mov rax, qword fs:[0x28]	       360	charset.c	FUNCTION_4
0x40008e5	        0x488945f8	                mov qword [rbp - 8], rax	       360	charset.c	FUNCTION_4
0x40008e9	            0x31c0	                            xor eax, eax	       360	charset.c	FUNCTION_4
0x40008eb	    0x8b0500000000	            mov eax, dword [0x040008f1] 	       369	charset.c	FUNCTION_4	IF_1
0x40008f1	            0x85c0	                           test eax, eax	       369	charset.c	FUNCTION_4	IF_1
0x40008f3	     0xf84d1000000	                            je 0x40009ca	       369	charset.c	FUNCTION_4	IF_1
0x40008f9	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       373	charset.c	FUNCTION_4	IF_1
0x4000900	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       374	charset.c	FUNCTION_4	IF_1
0x4000904	        0x488945d8	             mov qword [rbp - 0x28], rax	       374	charset.c	FUNCTION_4	IF_1
0x4000908	      0xe99b000000	                           jmp 0x40009a8	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x400090d	    0x488b05000000	            mov rax, qword [0x04000914] 	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000914	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000918	          0x4889d7	                            mov rdi, rdx	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x400091b	            0xffd0	                                call rax	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x400091d	          0x8945c8	             mov dword [rbp - 0x38], eax	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000920	        0x837dc801	               cmp dword [rbp - 0x38], 1	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000924	            0x7e54	                           jle 0x400097a	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000926	    0x488b05000000	            mov rax, qword [0x0400092d] 	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x400092d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000931	          0x4889d7	                            mov rdi, rdx	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000934	            0xffd0	                                call rax	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000936	          0x8945cc	             mov dword [rbp - 0x34], eax	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000939	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x400093c	            0x4898	                                    cdqe	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x400093e	        0x480145d8	            add qword [rbp - 0x28], rax 	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000942	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000945	            0x89c7	                            mov edi, eax	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000947	      0xe800000000	                          call 0x400094c	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x400094c	            0x85c0	                           test eax, eax	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x400094e	            0x7408	                            je 0x4000958	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000950	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000953	           0x145c4	             add dword [rbp - 0x3c], eax	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000956	            0xeb50	                           jmp 0x40009a8	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000958	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x400095b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x400095f	            0x89d6	                            mov esi, edx	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000961	          0x4889c7	                            mov rdi, rax	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000964	      0xe800000000	                          call 0x4000969	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000969	        0x488d45e0	                   lea rax, [rbp - 0x20]	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x400096d	          0x4889c7	                            mov rdi, rax	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000970	      0xe800000000	                          call 0x4000975	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000975	           0x145c4	             add dword [rbp - 0x3c], eax	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000978	            0xeb2e	                           jmp 0x40009a8	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x400097a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x400097e	        0x488d5001	                      lea rdx, [rax + 1]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000982	        0x488955d8	             mov qword [rbp - 0x28], rdx	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000986	           0xfb600	                   movzx eax, byte [rax]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000989	           0xfb6c0	                           movzx eax, al	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x400098c	            0x89c7	                            mov edi, eax	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x400098e	      0xe800000000	                          call 0x4000993	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000993	          0x8945c8	             mov dword [rbp - 0x38], eax	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000996	        0x837dc800	               cmp dword [rbp - 0x38], 0	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x400099a	            0x7e08	                           jle 0x40009a4	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x400099c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x400099f	           0x145c4	             add dword [rbp - 0x3c], eax	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x40009a2	            0xeb04	                           jmp 0x40009a8	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x40009a4	        0x8345c404	               add dword [rbp - 0x3c], 4	       395	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	ELSE_3
0x40009a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x40009ac	           0xfb600	                   movzx eax, byte [rax]	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x40009af	            0x84c0	                             test al, al	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x40009b1	     0xf8556ffffff	                           jne 0x400090d	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x40009b7	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x40009ba	          0x83c001	                              add eax, 1	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x40009bd	            0x89c7	                            mov edi, eax	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x40009bf	      0xe800000000	                          call 0x40009c4	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x40009c4	        0x488945d0	             mov qword [rbp - 0x30], rax	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x40009c8	            0xeb1a	                           jmp 0x40009e4	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x40009ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       402	charset.c	FUNCTION_4	CALL_7
0x40009ce	          0x4889c7	                            mov rdi, rax	       402	charset.c	FUNCTION_4	CALL_7
0x40009d1	      0xe800000000	                          call 0x40009d6	       402	charset.c	FUNCTION_4	CALL_7
0x40009d6	          0x83c001	                              add eax, 1	       402	charset.c	FUNCTION_4	CALL_7
0x40009d9	            0x89c7	                            mov edi, eax	       402	charset.c	FUNCTION_4	CALL_7
0x40009db	      0xe800000000	                          call 0x40009e0	       402	charset.c	FUNCTION_4	CALL_7
0x40009e0	        0x488945d0	             mov qword [rbp - 0x30], rax	       402	charset.c	FUNCTION_4	CALL_7
0x40009e4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       403	charset.c	FUNCTION_4	IF_5
0x40009e9	     0xf84df000000	                            je 0x4000ace	       403	charset.c	FUNCTION_4	IF_5
0x40009ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       405	charset.c	FUNCTION_4	IF_5
0x40009f3	          0xc60000	                       mov byte [rax], 0	       405	charset.c	FUNCTION_4	IF_5
0x40009f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       406	charset.c	FUNCTION_4	IF_5
0x40009fa	        0x488945d8	             mov qword [rbp - 0x28], rax	       406	charset.c	FUNCTION_4	IF_5
0x40009fe	      0xe9bc000000	                           jmp 0x4000abf	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000a03	    0x8b0500000000	            mov eax, dword [0x04000a09] 	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a09	            0x85c0	                           test eax, eax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a0b	     0xf8483000000	                            je 0x4000a94	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a11	    0x488b05000000	            mov rax, qword [0x04000a18] 	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a18	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a1c	          0x4889d7	                            mov rdi, rdx	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a1f	            0xffd0	                                call rax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a21	          0x8945c8	             mov dword [rbp - 0x38], eax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a24	        0x837dc801	               cmp dword [rbp - 0x38], 1	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a28	            0x7e6a	                           jle 0x4000a94	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a2a	    0x488b05000000	            mov rax, qword [0x04000a31] 	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a31	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a35	          0x4889d7	                            mov rdi, rdx	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a38	            0xffd0	                                call rax	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a3a	          0x8945cc	             mov dword [rbp - 0x34], eax	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a3d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000a40	            0x89c7	                            mov edi, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000a42	      0xe800000000	                          call 0x4000a47	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000a47	            0x85c0	                           test eax, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000a49	            0x741b	                            je 0x4000a66	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000a4b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a4e	          0x4863d0	                         movsxd rdx, eax	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a51	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a55	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a59	          0x4889ce	                            mov rsi, rcx	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a5c	          0x4889c7	                            mov rdi, rax	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a5f	      0xe800000000	                          call 0x4000a64	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a64	            0xeb23	                           jmp 0x4000a89	       414	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_9
0x4000a66	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a6a	          0x4889c7	                            mov rdi, rax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a6d	      0xe800000000	                          call 0x4000a72	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a72	          0x4889c2	                            mov rdx, rax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a75	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a79	          0x4801c2	                            add rdx, rax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a7c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a7f	            0x89c6	                            mov esi, eax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a81	          0x4889d7	                            mov rdi, rdx	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a84	      0xe800000000	                          call 0x4000a89	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000a89	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a8c	            0x4898	                                    cdqe	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a8e	        0x480145d8	            add qword [rbp - 0x28], rax 	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a92	            0xeb2b	                           jmp 0x4000abf	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000a94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000a98	        0x488d5001	                      lea rdx, [rax + 1]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000a9c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000aa0	           0xfb600	                   movzx eax, byte [rax]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000aa3	           0xfb6c0	                           movzx eax, al	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000aa6	            0x89c7	                            mov edi, eax	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000aa8	      0xe800000000	                          call 0x4000aad	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000aad	          0x4889c2	                            mov rdx, rax	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000ab0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000ab4	          0x4889d6	                            mov rsi, rdx	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000ab7	          0x4889c7	                            mov rdi, rax	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000aba	      0xe800000000	                          call 0x4000abf	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000abf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000ac3	           0xfb600	                   movzx eax, byte [rax]	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000ac6	            0x84c0	                             test al, al	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000ac8	     0xf8535ffffff	                           jne 0x4000a03	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000ace	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       424	charset.c	FUNCTION_4
0x4000ad2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       425	charset.c	FUNCTION_4
0x4000ad6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       425	charset.c	FUNCTION_4
0x4000adf	            0x7405	                            je 0x4000ae6	       425	charset.c	FUNCTION_4
0x4000ae1	      0xe800000000	                          call 0x4000ae6	       425	charset.c	FUNCTION_4
0x4000ae6	              0xc9	                                   leave	       425	charset.c	FUNCTION_4
0x4000ae7	              0xc3	                                     ret	       425	charset.c	FUNCTION_4
win_chartabsize	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0	32
0x4001488	              0x55	                                push rbp	       834	charset.c	FUNCTION_17
0x4001489	          0x4889e5	                            mov rbp, rsp	       834	charset.c	FUNCTION_17
0x400148c	        0x4883ec30	                           sub rsp, 0x30	       834	charset.c	FUNCTION_17
0x4001490	        0x48897de8	             mov qword [rbp - 0x18], rdi	       834	charset.c	FUNCTION_17
0x4001494	        0x488975e0	             mov qword [rbp - 0x20], rsi	       834	charset.c	FUNCTION_17
0x4001498	          0x8955dc	             mov dword [rbp - 0x24], edx	       834	charset.c	FUNCTION_17
0x400149b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       835	charset.c	FUNCTION_17
0x400149f	           0xfb600	                   movzx eax, byte [rax]	       835	charset.c	FUNCTION_17
0x40014a2	            0x3c09	                               cmp al, 9	       835	charset.c	FUNCTION_17
0x40014a4	            0x7538	                           jne 0x40014de	       835	charset.c	FUNCTION_17
0x40014a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       835	charset.c	FUNCTION_17
0x40014aa	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	       835	charset.c	FUNCTION_17
0x40014b0	            0x85c0	                           test eax, eax	       835	charset.c	FUNCTION_17
0x40014b2	            0x740a	                            je 0x40014be	       835	charset.c	FUNCTION_17
0x40014b4	    0x8b0500000000	            mov eax, dword [0x040014ba] 	       835	charset.c	FUNCTION_17
0x40014ba	            0x85c0	                           test eax, eax	       835	charset.c	FUNCTION_17
0x40014bc	            0x7420	                            je 0x40014de	       835	charset.c	FUNCTION_17
0x40014be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       835	charset.c	FUNCTION_17
0x40014c2	        0x488b4008	                mov rax, qword [rax + 8]	       835	charset.c	FUNCTION_17
0x40014c6	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	       835	charset.c	FUNCTION_17
0x40014cd	          0x8945fc	                mov dword [rbp - 4], eax	       835	charset.c	FUNCTION_17
0x40014d0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       835	charset.c	FUNCTION_17
0x40014d3	              0x99	                                     cdq	       835	charset.c	FUNCTION_17
0x40014d4	          0xf77dfc	                    idiv dword [rbp - 4]	       835	charset.c	FUNCTION_17
0x40014d7	          0x8b45fc	                mov eax, dword [rbp - 4]	       835	charset.c	FUNCTION_17
0x40014da	            0x29d0	                            sub eax, edx	       835	charset.c	FUNCTION_17
0x40014dc	            0xeb0c	                           jmp 0x40014ea	       835	charset.c	FUNCTION_17
0x40014de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       835	charset.c	FUNCTION_17
0x40014e2	          0x4889c7	                            mov rdi, rax	       835	charset.c	FUNCTION_17
0x40014e5	      0xe800000000	                          call 0x40014ea	       835	charset.c	FUNCTION_17
0x40014ea	              0xc9	                                   leave	       836	charset.c	FUNCTION_17
0x40014eb	              0xc3	                                     ret	       836	charset.c	FUNCTION_17
vim_isupper	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,6:DO,0:CALL,3	51
0x4002ca1	              0x55	                                push rbp	      1709	charset.c	FUNCTION_52
0x4002ca2	          0x4889e5	                            mov rbp, rsp	      1709	charset.c	FUNCTION_52
0x4002ca5	        0x4883ec10	                           sub rsp, 0x10	      1709	charset.c	FUNCTION_52
0x4002ca9	          0x897dfc	                mov dword [rbp - 4], edi	      1709	charset.c	FUNCTION_52
0x4002cac	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      1710	charset.c	FUNCTION_52	IF_1
0x4002cb0	            0x7f0a	                            jg 0x4002cbc	      1710	charset.c	FUNCTION_52	IF_1
0x4002cb2	      0xb800000000	                              mov eax, 0	      1711	charset.c	FUNCTION_52	IF_1
0x4002cb7	      0xe988000000	                           jmp 0x4002d44	      1711	charset.c	FUNCTION_52	IF_1
0x4002cbc	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1712	charset.c	FUNCTION_52	IF_2
0x4002cc0	            0x7e63	                           jle 0x4002d25	      1712	charset.c	FUNCTION_52	IF_2
0x4002cc2	    0x8b0500000000	            mov eax, dword [0x04002cc8] 	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x4002cc8	            0x85c0	                           test eax, eax	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x4002cca	            0x740c	                            je 0x4002cd8	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x4002ccc	          0x8b45fc	                mov eax, dword [rbp - 4]	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x4002ccf	            0x89c7	                            mov edi, eax	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x4002cd1	      0xe800000000	                          call 0x4002cd6	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x4002cd6	            0xeb6c	                           jmp 0x4002d44	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x4002cd8	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1716	charset.c	FUNCTION_52	IF_2	IF_4
0x4002cdf	            0x7e1d	                           jle 0x4002cfe	      1716	charset.c	FUNCTION_52	IF_2	IF_4
0x4002ce1	    0x8b0500000000	            mov eax, dword [0x04002ce7] 	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x4002ce7	            0x85c0	                           test eax, eax	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x4002ce9	            0x740c	                            je 0x4002cf7	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x4002ceb	          0x8b45fc	                mov eax, dword [rbp - 4]	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x4002cee	            0x89c7	                            mov edi, eax	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x4002cf0	      0xe800000000	                          call 0x4002cf5	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x4002cf5	            0xeb4d	                           jmp 0x4002d44	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x4002cf7	      0xb800000000	                              mov eax, 0	      1723	charset.c	FUNCTION_52	IF_2	IF_4
0x4002cfc	            0xeb46	                           jmp 0x4002d44	      1723	charset.c	FUNCTION_52	IF_2	IF_4
0x4002cfe	    0x8b0500000000	            mov eax, dword [0x04002d04] 	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d04	            0x85c0	                           test eax, eax	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d06	            0x741d	                            je 0x4002d25	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d08	          0x8b45fc	                mov eax, dword [rbp - 4]	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d0b	            0x4898	                                    cdqe	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d0d	     0xfb680000000	                   movzx eax, byte [rax]	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d14	           0xfb6c0	                           movzx eax, al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d17	          0x83e055	                           and eax, 0x55	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d1a	          0x83f855	                           cmp eax, 0x55	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d1d	           0xf94c0	                                 sete al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d20	           0xfb6c0	                           movzx eax, al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d23	            0xeb1f	                           jmp 0x4002d44	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4002d25	      0xe800000000	                          call 0x4002d2a	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d2a	          0x488b00	                    mov rax, qword [rax]	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d2d	          0x8b55fc	                mov edx, dword [rbp - 4]	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d30	          0x4863d2	                         movsxd rdx, edx	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d33	          0x4801d2	                            add rdx, rdx	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d36	          0x4801d0	                            add rax, rdx	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d39	           0xfb700	                   movzx eax, word [rax]	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d3c	           0xfb7c0	                           movzx eax, ax	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d3f	      0x2500010000	                          and eax, 0x100	      1728	charset.c	FUNCTION_52	CALL_3
0x4002d44	              0xc9	                                   leave	      1729	charset.c	FUNCTION_52
0x4002d45	              0xc3	                                     ret	      1729	charset.c	FUNCTION_52
win_linetabsize	ELSE,0:FOR,1:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,2	44
0x4001553	              0x55	                                push rbp	       868	charset.c	FUNCTION_20
0x4001554	          0x4889e5	                            mov rbp, rsp	       868	charset.c	FUNCTION_20
0x4001557	        0x4883ec30	                           sub rsp, 0x30	       868	charset.c	FUNCTION_20
0x400155b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       868	charset.c	FUNCTION_20
0x400155f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       868	charset.c	FUNCTION_20
0x4001563	          0x8955dc	             mov dword [rbp - 0x24], edx	       868	charset.c	FUNCTION_20
0x4001566	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       869	charset.c	FUNCTION_20
0x400156d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       872	charset.c	FUNCTION_20	FOR_1
0x4001571	        0x488945f8	                mov qword [rbp - 8], rax	       872	charset.c	FUNCTION_20	FOR_1
0x4001575	            0xeb47	                           jmp 0x40015be	       872	charset.c	FUNCTION_20	FOR_1
0x4001577	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       874	charset.c	FUNCTION_20	CALL_2
0x400157a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       874	charset.c	FUNCTION_20	CALL_2
0x400157e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       874	charset.c	FUNCTION_20	CALL_2
0x4001582	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       874	charset.c	FUNCTION_20	CALL_2
0x4001586	    0x41b800000000	                              mov r8d, 0	       874	charset.c	FUNCTION_20	CALL_2
0x400158c	          0x4889c7	                            mov rdi, rax	       874	charset.c	FUNCTION_20	CALL_2
0x400158f	      0xe800000000	                          call 0x4001594	       874	charset.c	FUNCTION_20	CALL_2
0x4001594	           0x145f4	              add dword [rbp - 0xc], eax	       874	charset.c	FUNCTION_20	CALL_2
0x4001597	    0x8b0500000000	            mov eax, dword [0x0400159d] 	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x400159d	            0x85c0	                           test eax, eax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x400159f	            0x7412	                            je 0x40015b3	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015a1	    0x488b05000000	            mov rax, qword [0x040015a8] 	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015a8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015ac	          0x4889d7	                            mov rdi, rdx	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015af	            0xffd0	                                call rax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015b1	            0xeb05	                           jmp 0x40015b8	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015b3	      0xb801000000	                              mov eax, 1	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015b8	            0x4898	                                    cdqe	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015ba	        0x480145f8	                add qword [rbp - 8], rax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40015be	        0x488b45f8	                mov rax, qword [rbp - 8]	       872	charset.c	FUNCTION_20	FOR_1
0x40015c2	           0xfb600	                   movzx eax, byte [rax]	       872	charset.c	FUNCTION_20	FOR_1
0x40015c5	            0x84c0	                             test al, al	       872	charset.c	FUNCTION_20	FOR_1
0x40015c7	            0x741c	                            je 0x40015e5	       872	charset.c	FUNCTION_20	FOR_1
0x40015c9	    0x817ddcffffff	     cmp dword [rbp - 0x24], 0x7fffffff 	       872	charset.c	FUNCTION_20	FOR_1
0x40015d0	            0x74a5	                            je 0x4001577	       872	charset.c	FUNCTION_20	FOR_1
0x40015d2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       872	charset.c	FUNCTION_20	FOR_1
0x40015d5	          0x4863d0	                         movsxd rdx, eax	       872	charset.c	FUNCTION_20	FOR_1
0x40015d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       872	charset.c	FUNCTION_20	FOR_1
0x40015dc	          0x4801d0	                            add rax, rdx	       872	charset.c	FUNCTION_20	FOR_1
0x40015df	        0x483b45f8	                cmp rax, qword [rbp - 8]	       872	charset.c	FUNCTION_20	FOR_1
0x40015e3	            0x7792	                            ja 0x4001577	       872	charset.c	FUNCTION_20	FOR_1
0x40015e5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       875	charset.c	FUNCTION_20
0x40015e8	              0xc9	                                   leave	       876	charset.c	FUNCTION_20
0x40015e9	              0xc3	                                     ret	       876	charset.c	FUNCTION_20
vim_strnsize	ELSE,1:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,1:DO,0:CALL,2	44
0x4001398	              0x55	                                push rbp	       787	charset.c	FUNCTION_15
0x4001399	          0x4889e5	                            mov rbp, rsp	       787	charset.c	FUNCTION_15
0x400139c	        0x4883ec20	                           sub rsp, 0x20	       787	charset.c	FUNCTION_15
0x40013a0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       787	charset.c	FUNCTION_15
0x40013a4	          0x8975e4	             mov dword [rbp - 0x1c], esi	       787	charset.c	FUNCTION_15
0x40013a7	    0xc745f8000000	                  mov dword [rbp - 8], 0	       788	charset.c	FUNCTION_15
0x40013ae	            0xeb5c	                           jmp 0x400140c	       790	charset.c	FUNCTION_15	WHILE_1
0x40013b0	    0x8b0500000000	            mov eax, dword [0x040013b6] 	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013b6	            0x85c0	                           test eax, eax	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013b8	            0x7436	                            je 0x40013f0	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013ba	    0x488b05000000	            mov rax, qword [0x040013c1] 	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013c1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013c5	          0x4889d7	                            mov rdi, rdx	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013c8	            0xffd0	                                call rax	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013ca	          0x8945fc	                mov dword [rbp - 4], eax	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x40013d1	          0x4889c7	                            mov rdi, rax	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x40013d4	      0xe800000000	                          call 0x40013d9	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x40013d9	           0x145f8	                add dword [rbp - 8], eax	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x40013dc	          0x8b45fc	                mov eax, dword [rbp - 4]	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013df	            0x4898	                                    cdqe	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013e1	        0x480145e8	            add qword [rbp - 0x18], rax 	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013e5	          0x8b45fc	                mov eax, dword [rbp - 4]	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013e8	          0x83e801	                              sub eax, 1	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013eb	          0x2945e4	             sub dword [rbp - 0x1c], eax	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013ee	            0xeb1c	                           jmp 0x400140c	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x40013f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x40013f4	        0x488d5001	                      lea rdx, [rax + 1]	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x40013f8	        0x488955e8	             mov qword [rbp - 0x18], rdx	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x40013fc	           0xfb600	                   movzx eax, byte [rax]	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x40013ff	           0xfb6c0	                           movzx eax, al	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x4001402	            0x89c7	                            mov edi, eax	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x4001404	      0xe800000000	                          call 0x4001409	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x4001409	           0x145f8	                add dword [rbp - 8], eax	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x400140c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	charset.c	FUNCTION_15	WHILE_1
0x4001410	           0xfb600	                   movzx eax, byte [rax]	       790	charset.c	FUNCTION_15	WHILE_1
0x4001413	            0x84c0	                             test al, al	       790	charset.c	FUNCTION_15	WHILE_1
0x4001415	            0x740a	                            je 0x4001421	       790	charset.c	FUNCTION_15	WHILE_1
0x4001417	        0x836de401	               sub dword [rbp - 0x1c], 1	       790	charset.c	FUNCTION_15	WHILE_1
0x400141b	        0x837de400	               cmp dword [rbp - 0x1c], 0	       790	charset.c	FUNCTION_15	WHILE_1
0x400141f	            0x798f	                           jns 0x40013b0	       790	charset.c	FUNCTION_15	WHILE_1
0x4001421	          0x8b45f8	                mov eax, dword [rbp - 8]	       805	charset.c	FUNCTION_15
0x4001424	              0xc9	                                   leave	       806	charset.c	FUNCTION_15
0x4001425	              0xc3	                                     ret	       806	charset.c	FUNCTION_15
transchar_hex	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,4	67
0x400114d	              0x55	                                push rbp	       678	charset.c	FUNCTION_9
0x400114e	          0x4889e5	                            mov rbp, rsp	       678	charset.c	FUNCTION_9
0x4001151	              0x53	                                push rbx	       678	charset.c	FUNCTION_9
0x4001152	        0x4883ec28	                           sub rsp, 0x28	       678	charset.c	FUNCTION_9
0x4001156	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       678	charset.c	FUNCTION_9
0x400115a	          0x8975d4	             mov dword [rbp - 0x2c], esi	       678	charset.c	FUNCTION_9
0x400115d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       679	charset.c	FUNCTION_9
0x4001164	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       681	charset.c	FUNCTION_9
0x4001168	          0xc6003c	                    mov byte [rax], 0x3c	       681	charset.c	FUNCTION_9
0x400116b	    0x817dd4ff0000	           cmp dword [rbp - 0x2c], 0xff 	       683	charset.c	FUNCTION_9	IF_1
0x4001172	            0x7e42	                           jle 0x40011b6	       683	charset.c	FUNCTION_9	IF_1
0x4001174	        0x8345ec01	               add dword [rbp - 0x14], 1	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x4001178	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x400117b	          0x4863d0	                         movsxd rdx, eax	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x400117e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x4001182	        0x488d1c02	                    lea rbx, [rdx + rax]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x4001186	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x4001189	          0xc1e80c	                            shr eax, 0xc	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x400118c	            0x89c7	                            mov edi, eax	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x400118e	      0xe892000000	                         call sym.nr2hex	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x4001193	            0x8803	                      mov byte [rbx], al	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x4001195	        0x8345ec01	               add dword [rbp - 0x14], 1	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x4001199	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x400119c	          0x4863d0	                         movsxd rdx, eax	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x400119f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40011a3	        0x488d1c02	                    lea rbx, [rdx + rax]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40011a7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40011aa	          0xc1e808	                              shr eax, 8	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40011ad	            0x89c7	                            mov edi, eax	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40011af	      0xe871000000	                         call sym.nr2hex	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40011b4	            0x8803	                      mov byte [rbx], al	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x40011b6	        0x8345ec01	               add dword [rbp - 0x14], 1	       689	charset.c	FUNCTION_9	CALL_3
0x40011ba	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       689	charset.c	FUNCTION_9	CALL_3
0x40011bd	          0x4863d0	                         movsxd rdx, eax	       689	charset.c	FUNCTION_9	CALL_3
0x40011c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       689	charset.c	FUNCTION_9	CALL_3
0x40011c4	        0x488d1c02	                    lea rbx, [rdx + rax]	       689	charset.c	FUNCTION_9	CALL_3
0x40011c8	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       689	charset.c	FUNCTION_9	CALL_3
0x40011cb	          0xc1e804	                              shr eax, 4	       689	charset.c	FUNCTION_9	CALL_3
0x40011ce	            0x89c7	                            mov edi, eax	       689	charset.c	FUNCTION_9	CALL_3
0x40011d0	      0xe850000000	                         call sym.nr2hex	       689	charset.c	FUNCTION_9	CALL_3
0x40011d5	            0x8803	                      mov byte [rbx], al	       689	charset.c	FUNCTION_9	CALL_3
0x40011d7	        0x8345ec01	               add dword [rbp - 0x14], 1	       690	charset.c	FUNCTION_9	CALL_4
0x40011db	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       690	charset.c	FUNCTION_9	CALL_4
0x40011de	          0x4863d0	                         movsxd rdx, eax	       690	charset.c	FUNCTION_9	CALL_4
0x40011e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       690	charset.c	FUNCTION_9	CALL_4
0x40011e5	        0x488d1c02	                    lea rbx, [rdx + rax]	       690	charset.c	FUNCTION_9	CALL_4
0x40011e9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       690	charset.c	FUNCTION_9	CALL_4
0x40011ec	            0x89c7	                            mov edi, eax	       690	charset.c	FUNCTION_9	CALL_4
0x40011ee	      0xe832000000	                         call sym.nr2hex	       690	charset.c	FUNCTION_9	CALL_4
0x40011f3	            0x8803	                      mov byte [rbx], al	       690	charset.c	FUNCTION_9	CALL_4
0x40011f5	        0x8345ec01	               add dword [rbp - 0x14], 1	       691	charset.c	FUNCTION_9
0x40011f9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       691	charset.c	FUNCTION_9
0x40011fc	          0x4863d0	                         movsxd rdx, eax	       691	charset.c	FUNCTION_9
0x40011ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       691	charset.c	FUNCTION_9
0x4001203	          0x4801d0	                            add rax, rdx	       691	charset.c	FUNCTION_9
0x4001206	          0xc6003e	                    mov byte [rax], 0x3e	       691	charset.c	FUNCTION_9
0x4001209	        0x8345ec01	               add dword [rbp - 0x14], 1	       692	charset.c	FUNCTION_9
0x400120d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       692	charset.c	FUNCTION_9
0x4001210	          0x4863d0	                         movsxd rdx, eax	       692	charset.c	FUNCTION_9
0x4001213	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       692	charset.c	FUNCTION_9
0x4001217	          0x4801d0	                            add rax, rdx	       692	charset.c	FUNCTION_9
0x400121a	          0xc60000	                       mov byte [rax], 0	       692	charset.c	FUNCTION_9
0x400121d	              0x90	                                     nop	       693	charset.c	FUNCTION_9
0x400121e	        0x4883c428	                           add rsp, 0x28	       693	charset.c	FUNCTION_9
0x4001222	              0x5b	                                 pop rbx	       693	charset.c	FUNCTION_9
0x4001223	              0x5d	                                 pop rbp	       693	charset.c	FUNCTION_9
0x4001224	              0xc3	                                     ret	       693	charset.c	FUNCTION_9
chartabsize	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0	30
0x4001426	              0x55	                                push rbp	       827	charset.c	FUNCTION_16
0x4001427	          0x4889e5	                            mov rbp, rsp	       827	charset.c	FUNCTION_16
0x400142a	        0x4883ec20	                           sub rsp, 0x20	       827	charset.c	FUNCTION_16
0x400142e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       827	charset.c	FUNCTION_16
0x4001432	          0x8975e4	             mov dword [rbp - 0x1c], esi	       827	charset.c	FUNCTION_16
0x4001435	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	charset.c	FUNCTION_16
0x4001439	           0xfb600	                   movzx eax, byte [rax]	       828	charset.c	FUNCTION_16
0x400143c	            0x3c09	                               cmp al, 9	       828	charset.c	FUNCTION_16
0x400143e	            0x753a	                           jne 0x400147a	       828	charset.c	FUNCTION_16
0x4001440	    0x488b05000000	            mov rax, qword [0x04001447] 	       828	charset.c	FUNCTION_16
0x4001447	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	       828	charset.c	FUNCTION_16
0x400144d	            0x85c0	                           test eax, eax	       828	charset.c	FUNCTION_16
0x400144f	            0x740a	                            je 0x400145b	       828	charset.c	FUNCTION_16
0x4001451	    0x8b0500000000	            mov eax, dword [0x04001457] 	       828	charset.c	FUNCTION_16
0x4001457	            0x85c0	                           test eax, eax	       828	charset.c	FUNCTION_16
0x4001459	            0x741f	                            je 0x400147a	       828	charset.c	FUNCTION_16
0x400145b	    0x488b05000000	            mov rax, qword [0x04001462] 	       828	charset.c	FUNCTION_16
0x4001462	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	       828	charset.c	FUNCTION_16
0x4001469	          0x8945fc	                mov dword [rbp - 4], eax	       828	charset.c	FUNCTION_16
0x400146c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       828	charset.c	FUNCTION_16
0x400146f	              0x99	                                     cdq	       828	charset.c	FUNCTION_16
0x4001470	          0xf77dfc	                    idiv dword [rbp - 4]	       828	charset.c	FUNCTION_16
0x4001473	          0x8b45fc	                mov eax, dword [rbp - 4]	       828	charset.c	FUNCTION_16
0x4001476	            0x29d0	                            sub eax, edx	       828	charset.c	FUNCTION_16
0x4001478	            0xeb0c	                           jmp 0x4001486	       828	charset.c	FUNCTION_16
0x400147a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	charset.c	FUNCTION_16
0x400147e	          0x4889c7	                            mov rdi, rax	       828	charset.c	FUNCTION_16
0x4001481	      0xe800000000	                          call 0x4001486	       828	charset.c	FUNCTION_16
0x4001486	              0xc9	                                   leave	       829	charset.c	FUNCTION_16
0x4001487	              0xc3	                                     ret	       829	charset.c	FUNCTION_16
transchar_byte	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,2	20
0x4000ffe	              0x55	                                push rbp	       594	charset.c	FUNCTION_7
0x4000fff	          0x4889e5	                            mov rbp, rsp	       594	charset.c	FUNCTION_7
0x4001002	        0x4883ec10	                           sub rsp, 0x10	       594	charset.c	FUNCTION_7
0x4001006	          0x897dfc	                mov dword [rbp - 4], edi	       594	charset.c	FUNCTION_7
0x4001009	    0x8b0500000000	            mov eax, dword [0x0400100f] 	       595	charset.c	FUNCTION_7	IF_1
0x400100f	            0x85c0	                           test eax, eax	       595	charset.c	FUNCTION_7	IF_1
0x4001011	            0x741c	                            je 0x400102f	       595	charset.c	FUNCTION_7	IF_1
0x4001013	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	       595	charset.c	FUNCTION_7	IF_1
0x4001017	            0x7e16	                           jle 0x400102f	       595	charset.c	FUNCTION_7	IF_1
0x4001019	          0x8b45fc	                mov eax, dword [rbp - 4]	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x400101c	            0x89c6	                            mov esi, eax	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x400101e	      0xbf00000000	                              mov edi, 0	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x4001023	      0xe800000000	                          call 0x4001028	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x4001028	      0xb800000000	                              mov eax, 0	       598	charset.c	FUNCTION_7	IF_1
0x400102d	            0xeb0a	                           jmp 0x4001039	       598	charset.c	FUNCTION_7	IF_1
0x400102f	          0x8b45fc	                mov eax, dword [rbp - 4]	       600	charset.c	FUNCTION_7	CALL_2
0x4001032	            0x89c7	                            mov edi, eax	       600	charset.c	FUNCTION_7	CALL_2
0x4001034	      0xe800000000	                          call 0x4001039	       600	charset.c	FUNCTION_7	CALL_2
0x4001039	              0xc9	                                   leave	       601	charset.c	FUNCTION_7
0x400103a	              0xc3	                                     ret	       601	charset.c	FUNCTION_7
win_lbr_chartabsize	ELSE,3:FOR,1:functions,0:SWITCH,0:WHILE,0:IF,24:DO,0:CALL,22	430
0x4001a70	              0x55	                                push rbp	      1047	charset.c	FUNCTION_32
0x4001a71	          0x4889e5	                            mov rbp, rsp	      1047	charset.c	FUNCTION_32
0x4001a74	              0x53	                                push rbx	      1047	charset.c	FUNCTION_32
0x4001a75	    0x4881ec880000	                           sub rsp, 0x88	      1047	charset.c	FUNCTION_32
0x4001a7c	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1047	charset.c	FUNCTION_32
0x4001a80	        0x48897590	             mov qword [rbp - 0x70], rsi	      1047	charset.c	FUNCTION_32
0x4001a84	        0x48895588	             mov qword [rbp - 0x78], rdx	      1047	charset.c	FUNCTION_32
0x4001a88	          0x894d84	             mov dword [rbp - 0x7c], ecx	      1047	charset.c	FUNCTION_32
0x4001a8b	    0x4c898578ffff	              mov qword [rbp - 0x88], r8	      1047	charset.c	FUNCTION_32
0x4001a92	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1052	charset.c	FUNCTION_32
0x4001a99	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      1056	charset.c	FUNCTION_32
0x4001aa0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1062	charset.c	FUNCTION_32
0x4001aa4	           0xfb600	                   movzx eax, byte [rax]	      1062	charset.c	FUNCTION_32
0x4001aa7	            0x3c09	                               cmp al, 9	      1062	charset.c	FUNCTION_32
0x4001aa9	           0xf94c0	                                 sete al	      1062	charset.c	FUNCTION_32
0x4001aac	           0xfb6c0	                           movzx eax, al	      1062	charset.c	FUNCTION_32
0x4001aaf	          0x8945d0	             mov dword [rbp - 0x30], eax	      1062	charset.c	FUNCTION_32
0x4001ab2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1068	charset.c	FUNCTION_32	IF_1
0x4001ab6	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1068	charset.c	FUNCTION_32	IF_1
0x4001abc	            0x85c0	                           test eax, eax	      1068	charset.c	FUNCTION_32	IF_1
0x4001abe	     0xf85a8000000	                           jne 0x4001b6c	      1068	charset.c	FUNCTION_32	IF_1
0x4001ac4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1068	charset.c	FUNCTION_32	IF_1
0x4001ac8	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1068	charset.c	FUNCTION_32	IF_1
0x4001ace	            0x85c0	                           test eax, eax	      1068	charset.c	FUNCTION_32	IF_1
0x4001ad0	     0xf8596000000	                           jne 0x4001b6c	      1068	charset.c	FUNCTION_32	IF_1
0x4001ad6	    0x488b05000000	            mov rax, qword [0x04001add] 	      1068	charset.c	FUNCTION_32	IF_1
0x4001add	           0xfb600	                   movzx eax, byte [rax]	      1068	charset.c	FUNCTION_32	IF_1
0x4001ae0	            0x84c0	                             test al, al	      1068	charset.c	FUNCTION_32	IF_1
0x4001ae2	     0xf8584000000	                           jne 0x4001b6c	      1068	charset.c	FUNCTION_32	IF_1
0x4001ae8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4001aec	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4001af2	            0x85c0	                           test eax, eax	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4001af4	            0x741f	                            je 0x4001b15	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4001af6	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4001afd	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4001b00	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4001b04	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4001b08	          0x4889c7	                            mov rdi, rax	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4001b0b	      0xe866050000	          call sym.win_nolbr_chartabsize	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4001b10	      0xe957050000	                           jmp 0x400206c	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4001b15	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b19	           0xfb600	                   movzx eax, byte [rax]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b1c	            0x3c09	                               cmp al, 9	      1075	charset.c	FUNCTION_32	IF_1
0x4001b1e	            0x753b	                           jne 0x4001b5b	      1075	charset.c	FUNCTION_32	IF_1
0x4001b20	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b24	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      1075	charset.c	FUNCTION_32	IF_1
0x4001b2a	            0x85c0	                           test eax, eax	      1075	charset.c	FUNCTION_32	IF_1
0x4001b2c	            0x740a	                            je 0x4001b38	      1075	charset.c	FUNCTION_32	IF_1
0x4001b2e	    0x8b0500000000	            mov eax, dword [0x04001b34] 	      1075	charset.c	FUNCTION_32	IF_1
0x4001b34	            0x85c0	                           test eax, eax	      1075	charset.c	FUNCTION_32	IF_1
0x4001b36	            0x7423	                            je 0x4001b5b	      1075	charset.c	FUNCTION_32	IF_1
0x4001b38	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b3c	        0x488b4008	                mov rax, qword [rax + 8]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b40	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      1075	charset.c	FUNCTION_32	IF_1
0x4001b47	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1075	charset.c	FUNCTION_32	IF_1
0x4001b4a	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b4d	              0x99	                                     cdq	      1075	charset.c	FUNCTION_32	IF_1
0x4001b4e	          0xf77dd4	                 idiv dword [rbp - 0x2c]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b51	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b54	            0x29d0	                            sub eax, edx	      1075	charset.c	FUNCTION_32	IF_1
0x4001b56	      0xe911050000	                           jmp 0x400206c	      1075	charset.c	FUNCTION_32	IF_1
0x4001b5b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1075	charset.c	FUNCTION_32	IF_1
0x4001b5f	          0x4889c7	                            mov rdi, rax	      1075	charset.c	FUNCTION_32	IF_1
0x4001b62	      0xe800000000	                          call 0x4001b67	      1075	charset.c	FUNCTION_32	IF_1
0x4001b67	      0xe900050000	                           jmp 0x400206c	      1075	charset.c	FUNCTION_32	IF_1
0x4001b6c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1082	charset.c	FUNCTION_32	CALL_2
0x4001b6f	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1082	charset.c	FUNCTION_32	CALL_2
0x4001b73	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1082	charset.c	FUNCTION_32	CALL_2
0x4001b77	          0x4889ce	                            mov rsi, rcx	      1082	charset.c	FUNCTION_32	CALL_2
0x4001b7a	          0x4889c7	                            mov rdi, rax	      1082	charset.c	FUNCTION_32	CALL_2
0x4001b7d	      0xe806f9ffff	                call sym.win_chartabsize	      1082	charset.c	FUNCTION_32	CALL_2
0x4001b82	          0x8945ac	             mov dword [rbp - 0x54], eax	      1082	charset.c	FUNCTION_32	CALL_2
0x4001b85	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1083	charset.c	FUNCTION_32
0x4001b89	           0xfb600	                   movzx eax, byte [rax]	      1083	charset.c	FUNCTION_32
0x4001b8c	           0xfb6c0	                           movzx eax, al	      1083	charset.c	FUNCTION_32
0x4001b8f	          0x8945d8	             mov dword [rbp - 0x28], eax	      1083	charset.c	FUNCTION_32
0x4001b92	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1084	charset.c	FUNCTION_32	IF_3
0x4001b96	            0x7409	                            je 0x4001ba1	      1084	charset.c	FUNCTION_32	IF_3
0x4001b98	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1085	charset.c	FUNCTION_32	IF_3
0x4001b9b	          0x83e801	                              sub eax, 1	      1085	charset.c	FUNCTION_32	IF_3
0x4001b9e	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1085	charset.c	FUNCTION_32	IF_3
0x4001ba1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1091	charset.c	FUNCTION_32	IF_4
0x4001ba5	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1091	charset.c	FUNCTION_32	IF_4
0x4001bab	            0x85c0	                           test eax, eax	      1091	charset.c	FUNCTION_32	IF_4
0x4001bad	     0xf84b4010000	                            je 0x4001d67	      1091	charset.c	FUNCTION_32	IF_4
0x4001bb3	    0x817dd8ff0000	           cmp dword [rbp - 0x28], 0xff 	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bba	     0xf8fa7010000	                            jg 0x4001d67	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bc0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bc3	           0xfb6c0	                           movzx eax, al	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bc6	            0x4898	                                    cdqe	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bc8	     0xfb680000000	                   movzx eax, byte [rax]	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bcf	            0x84c0	                             test al, al	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bd1	     0xf8490010000	                            je 0x4001d67	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4001bd7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001bdb	        0x4883c001	                              add rax, 1	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001bdf	           0xfb600	                   movzx eax, byte [rax]	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001be2	           0xfb6c0	                           movzx eax, al	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001be5	            0x4898	                                    cdqe	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001be7	     0xfb680000000	                   movzx eax, byte [rax]	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001bee	            0x84c0	                             test al, al	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001bf0	     0xf8571010000	                           jne 0x4001d67	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4001bf6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1094	charset.c	FUNCTION_32	IF_4
0x4001bfa	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1094	charset.c	FUNCTION_32	IF_4
0x4001c00	            0x85c0	                           test eax, eax	      1094	charset.c	FUNCTION_32	IF_4
0x4001c02	     0xf845f010000	                            je 0x4001d67	      1094	charset.c	FUNCTION_32	IF_4
0x4001c08	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1095	charset.c	FUNCTION_32	IF_4
0x4001c0c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1095	charset.c	FUNCTION_32	IF_4
0x4001c12	            0x85c0	                           test eax, eax	      1095	charset.c	FUNCTION_32	IF_4
0x4001c14	     0xf844d010000	                            je 0x4001d67	      1095	charset.c	FUNCTION_32	IF_4
0x4001c1a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4001c1e	          0x4889c7	                            mov rdi, rax	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4001c21	      0xe800000000	                          call 0x4001c26	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4001c26	          0x8945dc	             mov dword [rbp - 0x24], eax	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4001c29	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1102	charset.c	FUNCTION_32	IF_4
0x4001c2c	          0x8945b0	             mov dword [rbp - 0x50], eax	      1102	charset.c	FUNCTION_32	IF_4
0x4001c2f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1103	charset.c	FUNCTION_32	IF_4
0x4001c33	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1103	charset.c	FUNCTION_32	IF_4
0x4001c39	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      1103	charset.c	FUNCTION_32	IF_4
0x4001c3c	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1103	charset.c	FUNCTION_32	IF_4
0x4001c3f	          0x8945b8	             mov dword [rbp - 0x48], eax	      1103	charset.c	FUNCTION_32	IF_4
0x4001c42	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x4001c45	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x4001c48	            0x7c39	                            jl 0x4001c83	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x4001c4a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x4001c4d	           0x145b8	             add dword [rbp - 0x48], eax	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x4001c50	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4001c54	          0x4889c7	                            mov rdi, rax	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4001c57	      0xe800000000	                          call 0x4001c5c	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4001c5c	            0x89c2	                            mov edx, eax	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4001c5e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4001c61	             0x1d0	                            add eax, edx	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4001c63	          0x8945e0	             mov dword [rbp - 0x20], eax	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4001c66	        0x837de000	               cmp dword [rbp - 0x20], 0	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c6a	            0x7e17	                           jle 0x4001c83	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c6c	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c6f	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c72	              0x99	                                     cdq	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c73	          0xf77de0	                 idiv dword [rbp - 0x20]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c76	          0x83c001	                              add eax, 1	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c79	         0xfaf45e0	            imul eax, dword [rbp - 0x20]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c7d	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c80	           0x145b8	             add dword [rbp - 0x48], eax	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4001c83	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1114	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001c87	        0x488945e8	             mov qword [rbp - 0x18], rax	      1114	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001c8b	    0x8b0500000000	            mov eax, dword [0x04001c91] 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001c91	            0x85c0	                           test eax, eax	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001c93	            0x7412	                            je 0x4001ca7	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001c95	    0x488b05000000	            mov rax, qword [0x04001c9c] 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001c9c	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001ca0	          0x4889d7	                            mov rdi, rdx	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001ca3	            0xffd0	                                call rax	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001ca5	            0xeb05	                           jmp 0x4001cac	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001ca7	      0xb801000000	                              mov eax, 1	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001cac	            0x4898	                                    cdqe	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001cae	        0x48014588	            add qword [rbp - 0x78], rax 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4001cb2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001cb6	           0xfb600	                   movzx eax, byte [rax]	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001cb9	           0xfb6c0	                           movzx eax, al	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001cbc	          0x8945d8	             mov dword [rbp - 0x28], eax	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x4001cbf	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x4001cc3	     0xf84f5000000	                            je 0x4001dbe	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x4001cc9	    0x817dd8ff0000	           cmp dword [rbp - 0x28], 0xff 	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x4001cd0	            0x7f13	                            jg 0x4001ce5	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x4001cd2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4001cd5	           0xfb6c0	                           movzx eax, al	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4001cd8	            0x4898	                                    cdqe	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4001cda	     0xfb680000000	                   movzx eax, byte [rax]	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4001ce1	            0x84c0	                             test al, al	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4001ce3	            0x7543	                           jne 0x4001d28	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4001ce5	    0x817dd8ff0000	           cmp dword [rbp - 0x28], 0xff 	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001cec	            0x7f17	                            jg 0x4001d05	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001cee	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001cf1	           0xfb6c0	                           movzx eax, al	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001cf4	            0x4898	                                    cdqe	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001cf6	     0xfb680000000	                   movzx eax, byte [rax]	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001cfd	            0x84c0	                             test al, al	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001cff	     0xf85b9000000	                           jne 0x4001dbe	      1119	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_9
0x4001d05	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d08	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d0b	            0x741b	                            je 0x4001d28	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d11	           0xfb600	                   movzx eax, byte [rax]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d14	           0xfb6c0	                           movzx eax, al	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d17	            0x4898	                                    cdqe	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d19	     0xfb680000000	                   movzx eax, byte [rax]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d20	            0x84c0	                             test al, al	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d22	     0xf8596000000	                           jne 0x4001dbe	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4001d28	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4001d2b	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4001d2f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4001d33	          0x4889ce	                            mov rsi, rcx	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4001d36	          0x4889c7	                            mov rdi, rax	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4001d39	      0xe84af7ffff	                call sym.win_chartabsize	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4001d3e	           0x145b0	             add dword [rbp - 0x50], eax	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4001d41	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d44	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d47	     0xf8c36ffffff	                            jl 0x4001c83	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d4d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d50	          0x2b4584	             sub eax, dword [rbp - 0x7c]	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d53	            0x89c2	                            mov edx, eax	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d55	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d58	             0x1d0	                            add eax, edx	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d5a	          0x8945ac	             mov dword [rbp - 0x54], eax	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d5d	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1127	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d64	              0x90	                                     nop	      1128	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4001d65	            0xeb57	                           jmp 0x4001dbe	      1091	charset.c	FUNCTION_32	IF_4
0x4001d67	    0x8b0500000000	            mov eax, dword [0x04001d6d] 	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d6d	            0x85c0	                           test eax, eax	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d6f	            0x744e	                            je 0x4001dbf	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d71	        0x837dac02	               cmp dword [rbp - 0x54], 2	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d75	            0x7548	                           jne 0x4001dbf	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d77	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d7b	           0xfb600	                   movzx eax, byte [rax]	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d7e	           0xfb6c0	                           movzx eax, al	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d81	            0x4898	                                    cdqe	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d83	     0xfb680000000	                   movzx eax, byte [rax]	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d8a	            0x3c01	                               cmp al, 1	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d8c	            0x7e31	                           jle 0x4001dbf	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4001d8e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001d92	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001d98	            0x85c0	                           test eax, eax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001d9a	            0x7423	                            je 0x4001dbf	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001d9c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001d9f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001da3	            0x89d6	                            mov esi, edx	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001da5	          0x4889c7	                            mov rdi, rax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001da8	      0xe800000000	                          call 0x4001dad	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001dad	            0x85c0	                           test eax, eax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001daf	            0x740e	                            je 0x4001dbf	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001db1	        0x8345ac01	               add dword [rbp - 0x54], 1	      1136	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001db5	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      1137	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001dbc	            0xeb01	                           jmp 0x4001dbf	      1137	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001dbe	              0x90	                                     nop	      1091	charset.c	FUNCTION_32	IF_4
0x4001dbf	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1146	charset.c	FUNCTION_32
0x4001dc6	    0x488b05000000	            mov rax, qword [0x04001dcd] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001dcd	           0xfb600	                   movzx eax, byte [rax]	      1147	charset.c	FUNCTION_32	IF_10
0x4001dd0	            0x84c0	                             test al, al	      1147	charset.c	FUNCTION_32	IF_10
0x4001dd2	            0x7512	                           jne 0x4001de6	      1147	charset.c	FUNCTION_32	IF_10
0x4001dd4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1147	charset.c	FUNCTION_32	IF_10
0x4001dd8	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001dde	            0x85c0	                           test eax, eax	      1147	charset.c	FUNCTION_32	IF_10
0x4001de0	     0xf8468020000	                            je 0x400204e	      1147	charset.c	FUNCTION_32	IF_10
0x4001de6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1147	charset.c	FUNCTION_32	IF_10
0x4001dea	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001df0	            0x85c0	                           test eax, eax	      1147	charset.c	FUNCTION_32	IF_10
0x4001df2	     0xf8456020000	                            je 0x400204e	      1147	charset.c	FUNCTION_32	IF_10
0x4001df8	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1147	charset.c	FUNCTION_32	IF_10
0x4001dfc	     0xf844c020000	                            je 0x400204e	      1147	charset.c	FUNCTION_32	IF_10
0x4001e02	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      1149	charset.c	FUNCTION_32	IF_10
0x4001e09	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001e0d	          0x4889c7	                            mov rdi, rax	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001e10	      0xe800000000	                          call 0x4001e15	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001e15	          0x8945c8	             mov dword [rbp - 0x38], eax	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001e18	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1152	charset.c	FUNCTION_32	IF_10
0x4001e1b	          0x8945dc	             mov dword [rbp - 0x24], eax	      1152	charset.c	FUNCTION_32	IF_10
0x4001e1e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1153	charset.c	FUNCTION_32	IF_10
0x4001e21	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1153	charset.c	FUNCTION_32	IF_10
0x4001e24	             0x1d0	                            add eax, edx	      1153	charset.c	FUNCTION_32	IF_10
0x4001e26	           0x14584	             add dword [rbp - 0x7c], eax	      1153	charset.c	FUNCTION_32	IF_10
0x4001e29	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001e2d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001e33	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001e36	     0xf8fdd000000	                            jg 0x4001f19	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001e3c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x4001e40	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x4001e46	          0x294584	             sub dword [rbp - 0x7c], eax	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x4001e49	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e4d	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e53	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e57	          0x4889c7	                            mov rdi, rax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e5a	      0xe800000000	                          call 0x4001e5f	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e5f	            0x89c2	                            mov edx, eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e61	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e64	            0x29d0	                            sub eax, edx	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e66	            0x29c3	                            sub ebx, eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e68	            0x89d8	                            mov eax, ebx	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e6a	          0x8945dc	             mov dword [rbp - 0x24], eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001e6d	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e70	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e73	            0x7c10	                            jl 0x4001e85	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e75	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e79	            0x7e0a	                           jle 0x4001e85	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e7b	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e7e	              0x99	                                     cdq	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e7f	          0xf77ddc	                 idiv dword [rbp - 0x24]	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e82	          0x895584	             mov dword [rbp - 0x7c], edx	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x4001e85	    0x488b05000000	            mov rax, qword [0x04001e8c] 	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001e8c	           0xfb600	                   movzx eax, byte [rax]	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001e8f	            0x84c0	                             test al, al	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001e91	            0x743b	                            je 0x4001ece	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001e93	    0x8b0500000000	            mov eax, dword [0x04001e99] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001e99	            0x85c0	                           test eax, eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001e9b	            0x7411	                            je 0x4001eae	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001e9d	    0x488b05000000	            mov rax, qword [0x04001ea4] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001ea4	          0x4889c7	                            mov rdi, rax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001ea7	      0xe800000000	                          call 0x4001eac	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001eac	            0xeb0f	                           jmp 0x4001ebd	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001eae	    0x488b05000000	            mov rax, qword [0x04001eb5] 	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001eb5	          0x4889c7	                            mov rdi, rax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001eb8	      0xe800000000	                          call 0x4001ebd	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001ebd	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001ec0	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1163	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001ec3	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1163	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001ec6	            0x7c06	                            jl 0x4001ece	      1163	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001ec8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001ecb	          0x294584	             sub dword [rbp - 0x7c], eax	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001ece	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001ed1	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001ed4	            0x7c12	                            jl 0x4001ee8	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001ed6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001eda	            0x7e0c	                           jle 0x4001ee8	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001edc	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001edf	              0x99	                                     cdq	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001ee0	          0xf77ddc	                 idiv dword [rbp - 0x24]	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001ee3	          0x895584	             mov dword [rbp - 0x7c], edx	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001ee6	            0xeb22	                           jmp 0x4001f0a	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001ee8	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001eec	            0x7e1c	                           jle 0x4001f0a	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001eee	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001ef2	            0x7e16	                           jle 0x4001f0a	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001ef4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001ef8	          0x4889c7	                            mov rdi, rax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001efb	      0xe800000000	                          call 0x4001f00	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001f00	            0x89c2	                            mov edx, eax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001f02	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001f05	            0x29d0	                            sub eax, edx	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001f07	           0x14584	             add dword [rbp - 0x7c], eax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001f0a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x4001f0e	          0x4889c7	                            mov rdi, rax	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x4001f11	      0xe800000000	                          call 0x4001f16	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x4001f16	          0x2945c8	             sub dword [rbp - 0x38], eax	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x4001f19	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f1d	            0x741f	                            je 0x4001f3e	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f1f	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f22	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f25	             0x1c2	                            add edx, eax	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f27	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f2a	             0x1c2	                            add edx, eax	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f2c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f30	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f36	            0x39c2	                            cmp edx, eax	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f38	     0xf8e10010000	                           jle 0x400204e	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f3e	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1175	charset.c	FUNCTION_32	IF_10	IF_17
0x4001f45	    0x488b05000000	            mov rax, qword [0x04001f4c] 	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x4001f4c	           0xfb600	                   movzx eax, byte [rax]	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x4001f4f	            0x84c0	                             test al, al	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x4001f51	     0xf84c0000000	                            je 0x4002017	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x4001f57	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f5a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f5d	             0x1c2	                            add edx, eax	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f5f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f62	             0x1c2	                            add edx, eax	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f64	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f68	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f6e	            0x39c2	                            cmp edx, eax	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f70	     0xf8e8f000000	                           jle 0x4002005	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f76	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f7a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f80	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f83	          0x2b45c8	             sub eax, dword [rbp - 0x38]	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f86	          0x8945cc	             mov dword [rbp - 0x34], eax	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f89	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f8d	            0x7416	                            je 0x4001fa5	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f8f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f93	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f99	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f9c	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001f9f	             0x1ca	                            add edx, ecx	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001fa1	            0x29d0	                            sub eax, edx	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001fa3	            0xeb05	                           jmp 0x4001faa	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001fa5	      0xb800000000	                              mov eax, 0	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001faa	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001fad	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x4001fb1	            0x750d	                           jne 0x4001fc0	      1183	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x4001fb3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x4001fb7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x4001fbd	          0x8945cc	             mov dword [rbp - 0x34], eax	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x4001fc0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fc3	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fc6	              0x99	                                     cdq	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fc7	          0xf77dcc	                 idiv dword [rbp - 0x34]	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fca	            0x89c3	                            mov ebx, eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fcc	    0x488b05000000	            mov rax, qword [0x04001fd3] 	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fd3	          0x4889c7	                            mov rdi, rax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fd6	      0xe800000000	                          call 0x4001fdb	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fdb	           0xfafc3	                           imul eax, ebx	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fde	           0x145bc	             add dword [rbp - 0x44], eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x4001fe1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001fe4	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001fe7	              0x99	                                     cdq	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001fe8	          0xf77dcc	                 idiv dword [rbp - 0x34]	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001feb	            0x89d0	                            mov eax, edx	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001fed	            0x85c0	                           test eax, eax	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001fef	            0x7426	                            je 0x4002017	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x4001ff1	    0x488b05000000	            mov rax, qword [0x04001ff8] 	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4001ff8	          0x4889c7	                            mov rdi, rax	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4001ffb	      0xe800000000	                          call 0x4002000	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4002000	           0x145bc	             add dword [rbp - 0x44], eax	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4002003	            0xeb12	                           jmp 0x4002017	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4002005	    0x488b05000000	            mov rax, qword [0x0400200c] 	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_21
0x400200c	          0x4889c7	                            mov rdi, rax	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_21
0x400200f	      0xe800000000	                          call 0x4002014	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_21
0x4002014	           0x145bc	             add dword [rbp - 0x44], eax	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_21
0x4002017	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x400201b	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x4002021	            0x85c0	                           test eax, eax	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x4002023	            0x7416	                            je 0x400203b	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x4002025	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4002029	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x400202d	          0x4889d6	                            mov rsi, rdx	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4002030	          0x4889c7	                            mov rdi, rax	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4002033	      0xe800000000	                          call 0x4002038	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4002038	           0x145bc	             add dword [rbp - 0x44], eax	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x400203b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1196	charset.c	FUNCTION_32	IF_10	IF_17
0x400203e	           0x145ac	             add dword [rbp - 0x54], eax	      1196	charset.c	FUNCTION_32	IF_10	IF_17
0x4002041	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1197	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4002045	            0x7407	                            je 0x400204e	      1197	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4002047	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x400204e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1201	charset.c	FUNCTION_32	IF_24
0x4002056	            0x7411	                            je 0x4002069	      1201	charset.c	FUNCTION_32	IF_24
0x4002058	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1202	charset.c	FUNCTION_32	IF_24
0x400205b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1202	charset.c	FUNCTION_32	IF_24
0x400205e	             0x1c2	                            add edx, eax	      1202	charset.c	FUNCTION_32	IF_24
0x4002060	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1202	charset.c	FUNCTION_32	IF_24
0x4002067	            0x8910	                    mov dword [rax], edx	      1202	charset.c	FUNCTION_32	IF_24
0x4002069	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1203	charset.c	FUNCTION_32
0x400206c	    0x4881c4880000	                           add rsp, 0x88	      1205	charset.c	FUNCTION_32
0x4002073	              0x5b	                                 pop rbx	      1205	charset.c	FUNCTION_32
0x4002074	              0x5d	                                 pop rbp	      1205	charset.c	FUNCTION_32
0x4002075	              0xc3	                                     ret	      1205	charset.c	FUNCTION_32
getwhitecols	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	13
0x4002a1c	              0x55	                                push rbp	      1550	charset.c	FUNCTION_41
0x4002a1d	          0x4889e5	                            mov rbp, rsp	      1550	charset.c	FUNCTION_41
0x4002a20	        0x4883ec08	                              sub rsp, 8	      1550	charset.c	FUNCTION_41
0x4002a24	        0x48897df8	                mov qword [rbp - 8], rdi	      1550	charset.c	FUNCTION_41
0x4002a28	        0x488b45f8	                mov rax, qword [rbp - 8]	      1551	charset.c	FUNCTION_41	CALL_1
0x4002a2c	          0x4889c7	                            mov rdi, rax	      1551	charset.c	FUNCTION_41	CALL_1
0x4002a2f	      0xe800000000	                          call 0x4002a34	      1551	charset.c	FUNCTION_41	CALL_1
0x4002a34	          0x4889c2	                            mov rdx, rax	      1551	charset.c	FUNCTION_41	CALL_1
0x4002a37	        0x488b45f8	                mov rax, qword [rbp - 8]	      1551	charset.c	FUNCTION_41	CALL_1
0x4002a3b	          0x4829c2	                            sub rdx, rax	      1551	charset.c	FUNCTION_41	CALL_1
0x4002a3e	          0x4889d0	                            mov rax, rdx	      1551	charset.c	FUNCTION_41	CALL_1
0x4002a41	              0xc9	                                   leave	      1552	charset.c	FUNCTION_41
0x4002a42	              0xc3	                                     ret	      1552	charset.c	FUNCTION_41
vim_iswordp	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	11
0x40016f5	              0x55	                                push rbp	       920	charset.c	FUNCTION_24
0x40016f6	          0x4889e5	                            mov rbp, rsp	       920	charset.c	FUNCTION_24
0x40016f9	        0x4883ec10	                           sub rsp, 0x10	       920	charset.c	FUNCTION_24
0x40016fd	        0x48897df8	                mov qword [rbp - 8], rdi	       920	charset.c	FUNCTION_24
0x4001701	    0x488b15000000	            mov rdx, qword [0x04001708] 	       921	charset.c	FUNCTION_24	CALL_1
0x4001708	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	charset.c	FUNCTION_24	CALL_1
0x400170c	          0x4889d6	                            mov rsi, rdx	       921	charset.c	FUNCTION_24	CALL_1
0x400170f	          0x4889c7	                            mov rdi, rax	       921	charset.c	FUNCTION_24	CALL_1
0x4001712	      0xe800000000	                          call 0x4001717	       921	charset.c	FUNCTION_24	CALL_1
0x4001717	              0xc9	                                   leave	       922	charset.c	FUNCTION_24
0x4001718	              0xc3	                                     ret	       922	charset.c	FUNCTION_24
lbr_chartabsize_adv	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,2	34
0x4001a02	              0x55	                                push rbp	      1025	charset.c	FUNCTION_31
0x4001a03	          0x4889e5	                            mov rbp, rsp	      1025	charset.c	FUNCTION_31
0x4001a06	        0x4883ec30	                           sub rsp, 0x30	      1025	charset.c	FUNCTION_31
0x4001a0a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1025	charset.c	FUNCTION_31
0x4001a0e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1025	charset.c	FUNCTION_31
0x4001a12	          0x8955dc	             mov dword [rbp - 0x24], edx	      1025	charset.c	FUNCTION_31
0x4001a15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a19	          0x488b08	                    mov rcx, qword [rax]	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a1c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a23	          0x4889ce	                            mov rsi, rcx	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a26	          0x4889c7	                            mov rdi, rax	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a29	      0xe800000000	                          call 0x4001a2e	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a2e	          0x8945fc	                mov dword [rbp - 4], eax	      1028	charset.c	FUNCTION_31	CALL_1
0x4001a31	    0x8b0500000000	            mov eax, dword [0x04001a37] 	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a37	            0x85c0	                           test eax, eax	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a39	            0x7417	                            je 0x4001a52	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a3b	    0x488b05000000	            mov rax, qword [0x04001a42] 	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a42	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a46	          0x488b12	                    mov rdx, qword [rdx]	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a49	          0x4889d7	                            mov rdi, rdx	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a4c	            0xffd0	                                call rax	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a4e	            0x89c1	                            mov ecx, eax	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a50	            0xeb05	                           jmp 0x4001a57	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a52	      0xb901000000	                              mov ecx, 1	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a5b	          0x488b10	                    mov rdx, qword [rax]	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a5e	          0x4863c1	                         movsxd rax, ecx	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a61	          0x4801c2	                            add rdx, rax	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a68	          0x488910	                    mov qword [rax], rdx	      1029	charset.c	FUNCTION_31	CALL_2
0x4001a6b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1030	charset.c	FUNCTION_31
0x4001a6e	              0xc9	                                   leave	      1031	charset.c	FUNCTION_31
0x4001a6f	              0xc3	                                     ret	      1031	charset.c	FUNCTION_31
linetabsize	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	10
0x40014ec	              0x55	                                push rbp	       845	charset.c	FUNCTION_18
0x40014ed	          0x4889e5	                            mov rbp, rsp	       845	charset.c	FUNCTION_18
0x40014f0	        0x4883ec10	                           sub rsp, 0x10	       845	charset.c	FUNCTION_18
0x40014f4	        0x48897df8	                mov qword [rbp - 8], rdi	       845	charset.c	FUNCTION_18
0x40014f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       846	charset.c	FUNCTION_18	CALL_1
0x40014fc	          0x4889c6	                            mov rsi, rax	       846	charset.c	FUNCTION_18	CALL_1
0x40014ff	      0xbf00000000	                              mov edi, 0	       846	charset.c	FUNCTION_18	CALL_1
0x4001504	      0xe800000000	                          call 0x4001509	       846	charset.c	FUNCTION_18	CALL_1
0x4001509	              0xc9	                                   leave	       847	charset.c	FUNCTION_18
0x400150a	              0xc3	                                     ret	       847	charset.c	FUNCTION_18
vim_isbdigit	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0	12
0x4002bf4	              0x55	                                push rbp	      1665	charset.c	FUNCTION_50
0x4002bf5	          0x4889e5	                            mov rbp, rsp	      1665	charset.c	FUNCTION_50
0x4002bf8	          0x897dfc	                mov dword [rbp - 4], edi	      1665	charset.c	FUNCTION_50
0x4002bfb	        0x837dfc30	               cmp dword [rbp - 4], 0x30	      1666	charset.c	FUNCTION_50
0x4002bff	            0x7406	                            je 0x4002c07	      1666	charset.c	FUNCTION_50
0x4002c01	        0x837dfc31	               cmp dword [rbp - 4], 0x31	      1666	charset.c	FUNCTION_50
0x4002c05	            0x7507	                           jne 0x4002c0e	      1666	charset.c	FUNCTION_50
0x4002c07	      0xb801000000	                              mov eax, 1	      1666	charset.c	FUNCTION_50
0x4002c0c	            0xeb05	                           jmp 0x4002c13	      1666	charset.c	FUNCTION_50
0x4002c0e	      0xb800000000	                              mov eax, 0	      1666	charset.c	FUNCTION_50
0x4002c13	              0x5d	                                 pop rbp	      1667	charset.c	FUNCTION_50
0x4002c14	              0xc3	                                     ret	      1667	charset.c	FUNCTION_50
skiphex	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,1:IF,0:DO,0:CALL,1	18
0x4002aa8	              0x55	                                push rbp	      1586	charset.c	FUNCTION_44
0x4002aa9	          0x4889e5	                            mov rbp, rsp	      1586	charset.c	FUNCTION_44
0x4002aac	        0x4883ec20	                           sub rsp, 0x20	      1586	charset.c	FUNCTION_44
0x4002ab0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1586	charset.c	FUNCTION_44
0x4002ab4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1587	charset.c	FUNCTION_44
0x4002ab8	        0x488945f8	                mov qword [rbp - 8], rax	      1587	charset.c	FUNCTION_44
0x4002abc	            0xeb05	                           jmp 0x4002ac3	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002abe	      0x488345f801	                  add qword [rbp - 8], 1	      1590	charset.c	FUNCTION_44	WHILE_1
0x4002ac3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002ac7	           0xfb600	                   movzx eax, byte [rax]	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002aca	           0xfb6c0	                           movzx eax, al	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002acd	            0x89c7	                            mov edi, eax	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002acf	      0xe800000000	                          call 0x4002ad4	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002ad4	            0x85c0	                           test eax, eax	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002ad6	            0x75e6	                           jne 0x4002abe	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4002ad8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1591	charset.c	FUNCTION_44
0x4002adc	              0xc9	                                   leave	      1592	charset.c	FUNCTION_44
0x4002add	              0xc3	                                     ret	      1592	charset.c	FUNCTION_44
vim_isIDc	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0	19
0x40015ea	              0x55	                                push rbp	       884	charset.c	FUNCTION_21
0x40015eb	          0x4889e5	                            mov rbp, rsp	       884	charset.c	FUNCTION_21
0x40015ee	          0x897dfc	                mov dword [rbp - 4], edi	       884	charset.c	FUNCTION_21
0x40015f1	        0x837dfc00	                  cmp dword [rbp - 4], 0	       885	charset.c	FUNCTION_21
0x40015f5	            0x7e26	                           jle 0x400161d	       885	charset.c	FUNCTION_21
0x40015f7	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       885	charset.c	FUNCTION_21
0x40015fe	            0x7f1d	                            jg 0x400161d	       885	charset.c	FUNCTION_21
0x4001600	          0x8b45fc	                mov eax, dword [rbp - 4]	       885	charset.c	FUNCTION_21
0x4001603	            0x4898	                                    cdqe	       885	charset.c	FUNCTION_21
0x4001605	     0xfb680000000	                   movzx eax, byte [rax]	       885	charset.c	FUNCTION_21
0x400160c	           0xfb6c0	                           movzx eax, al	       885	charset.c	FUNCTION_21
0x400160f	          0x83e020	                           and eax, 0x20	       885	charset.c	FUNCTION_21
0x4001612	            0x85c0	                           test eax, eax	       885	charset.c	FUNCTION_21
0x4001614	            0x7407	                            je 0x400161d	       885	charset.c	FUNCTION_21
0x4001616	      0xb801000000	                              mov eax, 1	       885	charset.c	FUNCTION_21
0x400161b	            0xeb05	                           jmp 0x4001622	       885	charset.c	FUNCTION_21
0x400161d	      0xb800000000	                              mov eax, 0	       885	charset.c	FUNCTION_21
0x4001622	              0x5d	                                 pop rbp	       886	charset.c	FUNCTION_21
0x4001623	              0xc3	                                     ret	       886	charset.c	FUNCTION_21
transchar	ELSE,1:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:DO,0:CALL,5	64
0x4000f23	              0x55	                                push rbp	       555	charset.c	FUNCTION_6
0x4000f24	          0x4889e5	                            mov rbp, rsp	       555	charset.c	FUNCTION_6
0x4000f27	        0x4883ec20	                           sub rsp, 0x20	       555	charset.c	FUNCTION_6
0x4000f2b	          0x897dec	             mov dword [rbp - 0x14], edi	       555	charset.c	FUNCTION_6
0x4000f2e	    0xc745fc000000	                  mov dword [rbp - 4], 0	       558	charset.c	FUNCTION_6
0x4000f35	        0x837dec00	               cmp dword [rbp - 0x14], 0	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0x4000f39	            0x793d	                           jns 0x4000f78	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0x4000f3b	    0xc60500000000	            mov byte [0x04000f42], 0x7e 	       561	charset.c	FUNCTION_6	IF_1
0x4000f42	    0xc60500000000	            mov byte [0x04000f49], 0x40 	       562	charset.c	FUNCTION_6	IF_1
0x4000f49	    0xc745fc020000	                  mov dword [rbp - 4], 2	       563	charset.c	FUNCTION_6	IF_1
0x4000f50	    0x817dec800000	           cmp dword [rbp - 0x14], 0x80 	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f57	            0x7417	                            je 0x4000f70	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f59	        0x837dec00	               cmp dword [rbp - 0x14], 0	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f5d	            0x740a	                            je 0x4000f69	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f5f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f62	            0xf7d8	                                 neg eax	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f64	           0xfb6c0	                           movzx eax, al	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f67	            0xeb0c	                           jmp 0x4000f75	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f69	      0xb8ff000000	                           mov eax, 0xff	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f6e	            0xeb05	                           jmp 0x4000f75	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f70	      0xb8fe000000	                           mov eax, 0xfe	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f75	          0x8945ec	             mov dword [rbp - 0x14], eax	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000f78	    0x8b0500000000	            mov eax, dword [0x04000f7e] 	       567	charset.c	FUNCTION_6	IF_2
0x4000f7e	            0x85c0	                           test eax, eax	       567	charset.c	FUNCTION_6	IF_2
0x4000f80	            0x7524	                           jne 0x4000fa6	       567	charset.c	FUNCTION_6	IF_2
0x4000f82	        0x837dec1f	           cmp dword [rbp - 0x14], 0x1f 	       567	charset.c	FUNCTION_6	IF_2
0x4000f86	            0x7e06	                           jle 0x4000f8e	       567	charset.c	FUNCTION_6	IF_2
0x4000f88	        0x837dec7e	           cmp dword [rbp - 0x14], 0x7e 	       571	charset.c	FUNCTION_6	IF_2
0x4000f8c	            0x7e2f	                           jle 0x4000fbd	       571	charset.c	FUNCTION_6	IF_2
0x4000f8e	    0x8b0500000000	            mov eax, dword [0x04000f94] 	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000f94	            0x85c0	                           test eax, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000f96	            0x740e	                            je 0x4000fa6	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000f98	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000f9b	            0x89c7	                            mov edi, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000f9d	      0xe800000000	                          call 0x4000fa2	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000fa2	            0x85c0	                           test eax, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000fa4	            0x7517	                           jne 0x4000fbd	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000fa6	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000fad	            0x7f2f	                            jg 0x4000fde	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000faf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000fb2	            0x89c7	                            mov edi, eax	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000fb4	      0xe800000000	                          call 0x4000fb9	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000fb9	            0x85c0	                           test eax, eax	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000fbb	            0x7421	                            je 0x4000fde	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x4000fbd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       579	charset.c	FUNCTION_6	IF_2
0x4000fc0	            0x89c2	                            mov edx, eax	       579	charset.c	FUNCTION_6	IF_2
0x4000fc2	          0x8b45fc	                mov eax, dword [rbp - 4]	       579	charset.c	FUNCTION_6	IF_2
0x4000fc5	            0x4898	                                    cdqe	       579	charset.c	FUNCTION_6	IF_2
0x4000fc7	    0x889000000000	                      mov byte [rax], dl	       579	charset.c	FUNCTION_6	IF_2
0x4000fcd	          0x8b45fc	                mov eax, dword [rbp - 4]	       580	charset.c	FUNCTION_6	IF_2
0x4000fd0	          0x83c001	                              add eax, 1	       580	charset.c	FUNCTION_6	IF_2
0x4000fd3	            0x4898	                                    cdqe	       580	charset.c	FUNCTION_6	IF_2
0x4000fd5	    0xc68000000000	                       mov byte [rax], 0	       580	charset.c	FUNCTION_6	IF_2
0x4000fdc	            0xeb19	                           jmp 0x4000ff7	       580	charset.c	FUNCTION_6	IF_2
0x4000fde	          0x8b45fc	                mov eax, dword [rbp - 4]	       583	charset.c	FUNCTION_6	CALL_5
0x4000fe1	            0x4898	                                    cdqe	       583	charset.c	FUNCTION_6	CALL_5
0x4000fe3	    0x488d90000000	                          lea rdx, [rax]	       583	charset.c	FUNCTION_6	CALL_5
0x4000fea	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       583	charset.c	FUNCTION_6	CALL_5
0x4000fed	            0x89c6	                            mov esi, eax	       583	charset.c	FUNCTION_6	CALL_5
0x4000fef	          0x4889d7	                            mov rdi, rdx	       583	charset.c	FUNCTION_6	CALL_5
0x4000ff2	      0xe800000000	                          call 0x4000ff7	       583	charset.c	FUNCTION_6	CALL_5
0x4000ff7	      0xb800000000	                              mov eax, 0	       584	charset.c	FUNCTION_6
0x4000ffc	              0xc9	                                   leave	       585	charset.c	FUNCTION_6
0x4000ffd	              0xc3	                                     ret	       585	charset.c	FUNCTION_6
buf_init_chartab	ELSE,18:FOR,3:functions,0:SWITCH,0:WHILE,7:IF,31:DO,0:CALL,18	534
0x400005a	              0x55	                                push rbp	        80	charset.c	FUNCTION_2
0x400005b	          0x4889e5	                            mov rbp, rsp	        80	charset.c	FUNCTION_2
0x400005e	        0x4883ec40	                           sub rsp, 0x40	        80	charset.c	FUNCTION_2
0x4000062	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        80	charset.c	FUNCTION_2
0x4000066	          0x8975c4	             mov dword [rbp - 0x3c], esi	        80	charset.c	FUNCTION_2
0x4000069	    0x64488b042528	                mov rax, qword fs:[0x28]	        80	charset.c	FUNCTION_2
0x4000072	        0x488945f8	                mov qword [rbp - 8], rax	        80	charset.c	FUNCTION_2
0x4000076	            0x31c0	                            xor eax, eax	        80	charset.c	FUNCTION_2
0x4000078	        0x837dc400	               cmp dword [rbp - 0x3c], 0	        88	charset.c	FUNCTION_2	IF_1
0x400007c	     0xf84b1010000	                            je 0x4000233	        88	charset.c	FUNCTION_2	IF_1
0x4000082	    0xc745dc000000	               mov dword [rbp - 0x24], 0	        98	charset.c	FUNCTION_2	IF_1
0x4000089	            0xeb2a	                           jmp 0x40000b5	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x400008b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x400008e	          0x8d5001	                      lea edx, [rax + 1]	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4000091	          0x8955dc	             mov dword [rbp - 0x24], edx	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4000094	    0x8b1500000000	            mov edx, dword [0x0400009a] 	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x400009a	          0x83e204	                              and edx, 4	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x400009d	            0x85d2	                           test edx, edx	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x400009f	            0x7407	                            je 0x40000a8	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000a1	      0xba04000000	                              mov edx, 4	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000a6	            0xeb05	                           jmp 0x40000ad	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000a8	      0xba02000000	                              mov edx, 2	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000ad	            0x4898	                                    cdqe	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000af	    0x889000000000	                      mov byte [rax], dl	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000b5	        0x837ddc1f	           cmp dword [rbp - 0x24], 0x1f 	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000b9	            0x7ed0	                           jle 0x400008b	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x40000bb	            0xeb12	                           jmp 0x40000cf	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000bd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000c0	          0x8d5001	                      lea edx, [rax + 1]	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000c3	          0x8955dc	             mov dword [rbp - 0x24], edx	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000c6	            0x4898	                                    cdqe	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000c8	    0xc68000000000	                    mov byte [rax], 0x11	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000cf	        0x837ddc7e	           cmp dword [rbp - 0x24], 0x7e 	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000d3	            0x7ee8	                           jle 0x40000bd	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x40000d5	    0x8b0500000000	            mov eax, dword [0x040000db] 	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40000db	            0x85c0	                           test eax, eax	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40000dd	     0xf84ce000000	                            je 0x40001b1	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x40000e3	            0xeb12	                           jmp 0x40000f7	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x40000e5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x40000e8	          0x8d5001	                      lea edx, [rax + 1]	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x40000eb	          0x8955dc	             mov dword [rbp - 0x24], edx	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x40000ee	            0x4898	                                    cdqe	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x40000f0	    0xc68000000000	                    mov byte [rax], 0x11	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x40000f7	    0x817ddce00000	           cmp dword [rbp - 0x24], 0xe0 	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x40000fe	            0x7ee5	                           jle 0x40000e5	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4000100	      0xe9ac000000	                           jmp 0x40001b1	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x4000105	    0x8b0500000000	            mov eax, dword [0x0400010b] 	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400010b	            0x85c0	                           test eax, eax	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400010d	            0x7420	                            je 0x400012f	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400010f	    0x817ddc9f0000	           cmp dword [rbp - 0x24], 0x9f 	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4000116	            0x7e17	                           jle 0x400012f	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4000118	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400011b	          0x8d5001	                      lea edx, [rax + 1]	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400011e	          0x8955dc	             mov dword [rbp - 0x24], edx	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4000121	            0x4898	                                    cdqe	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4000123	    0xc68000000000	                    mov byte [rax], 0x11	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400012a	      0xe982000000	                           jmp 0x40001b1	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400012f	    0x8b0500000000	            mov eax, dword [0x04000135] 	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4000135	      0x3dcc260000	                         cmp eax, 0x26cc	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400013a	            0x751d	                           jne 0x4000159	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400013c	    0x817ddc8e0000	           cmp dword [rbp - 0x24], 0x8e 	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4000143	            0x7514	                           jne 0x4000159	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4000145	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4000148	          0x8d5001	                      lea edx, [rax + 1]	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400014b	          0x8955dc	             mov dword [rbp - 0x24], edx	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400014e	            0x4898	                                    cdqe	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4000150	    0xc68000000000	                    mov byte [rax], 0x11	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4000157	            0xeb58	                           jmp 0x40001b1	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4000159	    0x8b0500000000	            mov eax, dword [0x0400015f] 	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x400015f	            0x85c0	                           test eax, eax	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4000161	            0x7424	                            je 0x4000187	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4000163	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4000166	            0x4898	                                    cdqe	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4000168	     0xfb680000000	                   movzx eax, byte [rax]	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x400016f	            0x3c02	                               cmp al, 2	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4000171	            0x7514	                           jne 0x4000187	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4000173	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4000176	          0x8d5001	                      lea edx, [rax + 1]	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4000179	          0x8955dc	             mov dword [rbp - 0x24], edx	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x400017c	            0x4898	                                    cdqe	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x400017e	    0xc68000000000	                    mov byte [rax], 0x12	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4000185	            0xeb2a	                           jmp 0x40001b1	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4000187	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x400018a	          0x8d5001	                      lea edx, [rax + 1]	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x400018d	          0x8955dc	             mov dword [rbp - 0x24], edx	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4000190	    0x8b1500000000	            mov edx, dword [0x04000196] 	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4000196	          0x83e204	                              and edx, 4	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4000199	            0x85d2	                           test edx, edx	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x400019b	            0x7407	                            je 0x40001a4	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x400019d	      0xba04000000	                              mov edx, 4	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x40001a2	            0xeb05	                           jmp 0x40001a9	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x40001a4	      0xba02000000	                              mov edx, 2	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x40001a9	            0x4898	                                    cdqe	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x40001ab	    0x889000000000	                      mov byte [rax], dl	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x40001b1	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x40001b8	     0xf8e47ffffff	                           jle 0x4000105	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x40001be	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x40001c5	            0xeb63	                           jmp 0x400022a	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x40001c7	    0x8b0500000000	            mov eax, dword [0x040001cd] 	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001cd	            0x85c0	                           test eax, eax	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001cf	            0x7410	                            je 0x40001e1	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001d1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001d4	            0x4898	                                    cdqe	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001d6	     0xfb680000000	                   movzx eax, byte [rax]	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001dd	            0x3c01	                               cmp al, 1	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001df	            0x7f29	                            jg 0x400020a	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x40001e1	    0x8b0500000000	            mov eax, dword [0x040001e7] 	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x40001e7	      0x3dcc260000	                         cmp eax, 0x26cc	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x40001ec	            0x7509	                           jne 0x40001f7	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x40001ee	    0x817ddc8e0000	           cmp dword [rbp - 0x24], 0x8e 	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x40001f5	            0x7413	                            je 0x400020a	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x40001f7	    0x8b0500000000	            mov eax, dword [0x040001fd] 	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x40001fd	            0x85c0	                           test eax, eax	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x40001ff	            0x7425	                            je 0x4000226	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4000201	    0x817ddc9f0000	           cmp dword [rbp - 0x24], 0x9f 	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4000208	            0x7e1c	                           jle 0x4000226	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400020a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400020d	            0x4898	                                    cdqe	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400020f	     0xfb680000000	                   movzx eax, byte [rax]	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4000216	          0x83c840	                            or eax, 0x40	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4000219	            0x89c2	                            mov edx, eax	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400021b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x400021e	            0x4898	                                    cdqe	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4000220	    0x889000000000	                      mov byte [rax], dl	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4000226	        0x8345dc01	               add dword [rbp - 0x24], 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x400022a	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x4000231	            0x7e94	                           jle 0x40001c7	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x4000233	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       145	charset.c	FUNCTION_2	CALL_3
0x4000237	    0x4805a0090000	                          add rax, 0x9a0	       145	charset.c	FUNCTION_2	CALL_3
0x400023d	      0xba20000000	                           mov edx, 0x20	       145	charset.c	FUNCTION_2	CALL_3
0x4000242	      0xbe00000000	                              mov esi, 0	       145	charset.c	FUNCTION_2	CALL_3
0x4000247	          0x4889c7	                            mov rdi, rax	       145	charset.c	FUNCTION_2	CALL_3
0x400024a	      0xe800000000	                          call 0x400024f	       145	charset.c	FUNCTION_2	CALL_3
0x400024f	    0x8b0500000000	            mov eax, dword [0x04000255] 	       147	charset.c	FUNCTION_2	IF_7
0x4000255	            0x85c0	                           test eax, eax	       147	charset.c	FUNCTION_2	IF_7
0x4000257	            0x7468	                            je 0x40002c1	       147	charset.c	FUNCTION_2	IF_7
0x4000259	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x4000260	            0xeb56	                           jmp 0x40002b8	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x4000262	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x4000265	            0x4898	                                    cdqe	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x4000267	     0xfb680000000	                   movzx eax, byte [rax]	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x400026e	            0x3c02	                               cmp al, 2	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x4000270	            0x7542	                           jne 0x40002b4	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x4000272	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000275	          0xc1e803	                              shr eax, 3	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000278	            0x89c6	                            mov esi, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400027a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400027d	          0xc1e803	                              shr eax, 3	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000280	            0x89c2	                            mov edx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000282	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000286	            0x89d2	                            mov edx, edx	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000288	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000290	            0x89c7	                            mov edi, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000292	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000295	          0x83e007	                              and eax, 7	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000298	      0xba01000000	                              mov edx, 1	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400029d	            0x89c1	                            mov ecx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400029f	            0xd3e2	                             shl edx, cl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40002a1	            0x89d0	                            mov eax, edx	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40002a3	             0x9f8	                             or eax, edi	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40002a5	            0x89c1	                            mov ecx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40002a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40002ab	            0x89f2	                            mov edx, esi	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40002ad	    0x888c10a00900	        mov byte [rax + rdx + 0x9a0], cl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x40002b4	        0x8345dc01	               add dword [rbp - 0x24], 1	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x40002b8	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x40002bf	            0x7ea1	                           jle 0x4000262	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x40002c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       160	charset.c	FUNCTION_2	IF_9
0x40002c5	    0x8b8020150000	          mov eax, dword [rax + 0x1520] 	       160	charset.c	FUNCTION_2	IF_9
0x40002cb	            0x85c0	                           test eax, eax	       160	charset.c	FUNCTION_2	IF_9
0x40002cd	            0x741a	                            je 0x40002e9	       160	charset.c	FUNCTION_2	IF_9
0x40002cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	charset.c	FUNCTION_2	IF_9
0x40002d3	     0xfb680a50900	          movzx eax, byte [rax + 0x9a5] 	       161	charset.c	FUNCTION_2	IF_9
0x40002da	          0x83c820	                            or eax, 0x20	       161	charset.c	FUNCTION_2	IF_9
0x40002dd	            0x89c2	                            mov edx, eax	       161	charset.c	FUNCTION_2	IF_9
0x40002df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	charset.c	FUNCTION_2	IF_9
0x40002e3	    0x8890a5090000	              mov byte [rax + 0x9a5], dl	       161	charset.c	FUNCTION_2	IF_9
0x40002e9	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       168	charset.c	FUNCTION_2	FOR_3
0x40002ed	            0x7407	                            je 0x40002f6	       168	charset.c	FUNCTION_2	FOR_3
0x40002ef	      0xb800000000	                              mov eax, 0	       168	charset.c	FUNCTION_2	FOR_3
0x40002f4	            0xeb05	                           jmp 0x40002fb	       168	charset.c	FUNCTION_2	FOR_3
0x40002f6	      0xb803000000	                              mov eax, 3	       168	charset.c	FUNCTION_2	FOR_3
0x40002fb	          0x8945e4	             mov dword [rbp - 0x1c], eax	       168	charset.c	FUNCTION_2	FOR_3
0x40002fe	      0xe9af040000	                           jmp 0x40007b2	       168	charset.c	FUNCTION_2	FOR_3
0x4000303	        0x837de400	               cmp dword [rbp - 0x1c], 0	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x4000307	            0x7510	                           jne 0x4000319	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x4000309	    0x488b05000000	            mov rax, qword [0x04000310] 	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x4000310	        0x488945f0	             mov qword [rbp - 0x10], rax	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x4000314	      0xe986040000	                           jmp 0x400079f	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x4000319	        0x837de401	               cmp dword [rbp - 0x1c], 1	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x400031d	            0x7510	                           jne 0x400032f	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x400031f	    0x488b05000000	            mov rax, qword [0x04000326] 	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x4000326	        0x488945f0	             mov qword [rbp - 0x10], rax	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x400032a	      0xe970040000	                           jmp 0x400079f	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x400032f	        0x837de402	               cmp dword [rbp - 0x1c], 2	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4000333	            0x7510	                           jne 0x4000345	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4000335	    0x488b05000000	            mov rax, qword [0x0400033c] 	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x400033c	        0x488945f0	             mov qword [rbp - 0x10], rax	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4000340	      0xe95a040000	                           jmp 0x400079f	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x4000345	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x4000349	    0x488b80b81400	          mov rax, qword [rax + 0x14b8] 	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x4000350	        0x488945f0	             mov qword [rbp - 0x10], rax	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x4000354	      0xe946040000	                           jmp 0x400079f	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4000359	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       181	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4000360	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4000367	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400036b	           0xfb600	                   movzx eax, byte [rax]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400036e	            0x3c5e	                            cmp al, 0x5e	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4000370	            0x7522	                           jne 0x4000394	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4000372	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4000376	        0x4883c001	                              add rax, 1	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400037a	           0xfb600	                   movzx eax, byte [rax]	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400037d	            0x84c0	                             test al, al	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400037f	            0x7413	                            je 0x4000394	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4000381	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       185	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4000388	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400038c	        0x4883c001	                              add rax, 1	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4000390	        0x488945f0	             mov qword [rbp - 0x10], rax	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4000394	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x4000398	           0xfb600	                   movzx eax, byte [rax]	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x400039b	           0xfb6c0	                           movzx eax, al	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x400039e	          0x83e830	                           sub eax, 0x30	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x40003a1	          0x83f809	                              cmp eax, 9	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x40003a4	            0x7711	                            ja 0x40003b7	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x40003a6	        0x488d45f0	                   lea rax, [rbp - 0x10]	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x40003aa	          0x4889c7	                            mov rdi, rax	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x40003ad	      0xe800000000	                          call 0x40003b2	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x40003b2	          0x8945dc	             mov dword [rbp - 0x24], eax	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x40003b5	            0xeb30	                           jmp 0x40003e7	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x40003b7	    0x8b0500000000	            mov eax, dword [0x040003bd] 	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003bd	            0x85c0	                           test eax, eax	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003bf	            0x7411	                            je 0x40003d2	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003c1	        0x488d45f0	                   lea rax, [rbp - 0x10]	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003c5	          0x4889c7	                            mov rdi, rax	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003c8	      0xe800000000	                          call 0x40003cd	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003cd	          0x8945dc	             mov dword [rbp - 0x24], eax	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003d0	            0xeb15	                           jmp 0x40003e7	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x40003d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x40003d6	        0x488d5001	                      lea rdx, [rax + 1]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x40003da	        0x488955f0	             mov qword [rbp - 0x10], rdx	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x40003de	           0xfb600	                   movzx eax, byte [rax]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x40003e1	           0xfb6c0	                           movzx eax, al	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x40003e4	          0x8945dc	             mov dword [rbp - 0x24], eax	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x40003e7	    0xc745e0ffffff	     mov dword [rbp - 0x20], 0xffffffff 	       197	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x40003ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x40003f2	           0xfb600	                   movzx eax, byte [rax]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x40003f5	            0x3c2d	                            cmp al, 0x2d	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x40003f7	            0x756e	                           jne 0x4000467	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x40003f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x40003fd	        0x4883c001	                              add rax, 1	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4000401	           0xfb600	                   movzx eax, byte [rax]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4000404	            0x84c0	                             test al, al	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4000406	            0x745f	                            je 0x4000467	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4000408	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400040c	        0x4883c001	                              add rax, 1	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4000410	        0x488945f0	             mov qword [rbp - 0x10], rax	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4000414	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x4000418	           0xfb600	                   movzx eax, byte [rax]	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x400041b	           0xfb6c0	                           movzx eax, al	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x400041e	          0x83e830	                           sub eax, 0x30	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x4000421	          0x83f809	                              cmp eax, 9	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x4000424	            0x7711	                            ja 0x4000437	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x4000426	        0x488d45f0	                   lea rax, [rbp - 0x10]	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x400042a	          0x4889c7	                            mov rdi, rax	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x400042d	      0xe800000000	                          call 0x4000432	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4000432	          0x8945e0	             mov dword [rbp - 0x20], eax	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4000435	            0xeb30	                           jmp 0x4000467	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4000437	    0x8b0500000000	            mov eax, dword [0x0400043d] 	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x400043d	            0x85c0	                           test eax, eax	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x400043f	            0x7411	                            je 0x4000452	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4000441	        0x488d45f0	                   lea rax, [rbp - 0x10]	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4000445	          0x4889c7	                            mov rdi, rax	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4000448	      0xe800000000	                          call 0x400044d	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x400044d	          0x8945e0	             mov dword [rbp - 0x20], eax	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4000450	            0xeb15	                           jmp 0x4000467	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4000452	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x4000456	        0x488d5001	                      lea rdx, [rax + 1]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x400045a	        0x488955f0	             mov qword [rbp - 0x10], rdx	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x400045e	           0xfb600	                   movzx eax, byte [rax]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x4000461	           0xfb6c0	                           movzx eax, al	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x4000464	          0x8945e0	             mov dword [rbp - 0x20], eax	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x4000467	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400046b	            0x7e36	                           jle 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400046d	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000474	            0x7f2d	                            jg 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000476	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000479	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400047c	            0x7d06	                           jge 0x4000484	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400047e	        0x837de0ff	cmp dword [rbp - 0x20], 0xffffffffffffffff	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000482	            0x751f	                           jne 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000484	    0x817de0ff0000	           cmp dword [rbp - 0x20], 0xff 	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400048b	            0x7f16	                            jg 0x40004a3	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400048d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000491	           0xfb600	                   movzx eax, byte [rax]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000494	            0x84c0	                             test al, al	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000496	            0x7415	                            je 0x40004ad	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4000498	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400049c	           0xfb600	                   movzx eax, byte [rax]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400049f	            0x3c2c	                            cmp al, 0x2c	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40004a1	            0x740a	                            je 0x40004ad	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40004a3	      0xb800000000	                              mov eax, 0	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40004a8	      0xe91e030000	                           jmp 0x40007cb	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40004ad	        0x837de0ff	cmp dword [rbp - 0x20], 0xffffffffffffffff	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x40004b1	     0xf85a7020000	                           jne 0x400075e	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x40004b7	        0x837ddc40	           cmp dword [rbp - 0x24], 0x40 	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40004bb	            0x751a	                           jne 0x40004d7	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40004bd	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       225	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40004c4	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       226	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40004cb	    0xc745e0ff0000	           mov dword [rbp - 0x20], 0xff 	       227	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40004d2	      0xe987020000	                           jmp 0x400075e	       227	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40004d7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       230	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	ELSE_11
0x40004da	          0x8945e0	             mov dword [rbp - 0x20], eax	       230	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	ELSE_11
0x40004dd	      0xe97c020000	                           jmp 0x400075e	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x40004e2	        0x837dec00	               cmp dword [rbp - 0x14], 0	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004e6	            0x744a	                            je 0x4000532	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004e8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004eb	            0x89c7	                            mov edi, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004ed	      0xe800000000	                          call 0x40004f2	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004f2	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004f4	            0x753c	                           jne 0x4000532	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004f6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004f9	            0x89c7	                            mov edi, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x40004fb	      0xe800000000	                          call 0x4000500	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4000500	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4000502	            0x752e	                           jne 0x4000532	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4000504	    0x8b0500000000	            mov eax, dword [0x0400050a] 	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400050a	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400050c	     0xf8448020000	                            je 0x400075a	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4000512	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4000515	            0x89c7	                            mov edi, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4000517	      0xe800000000	                          call 0x400051c	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400051c	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400051e	            0x7512	                           jne 0x4000532	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4000520	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4000523	            0x89c7	                            mov edi, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4000525	      0xe800000000	                          call 0x400052a	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400052a	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400052c	     0xf8428020000	                            je 0x400075a	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4000532	        0x837de400	               cmp dword [rbp - 0x1c], 0	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x4000536	            0x7548	                           jne 0x4000580	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x4000538	        0x837de800	               cmp dword [rbp - 0x18], 0	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400053c	            0x7421	                            je 0x400055f	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400053e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4000541	            0x4898	                                    cdqe	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4000543	     0xfb680000000	                   movzx eax, byte [rax]	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400054a	          0x83e0df	                     and eax, 0xffffffdf	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400054d	            0x89c2	                            mov edx, eax	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400054f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4000552	            0x4898	                                    cdqe	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4000554	    0x889000000000	                      mov byte [rax], dl	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400055a	      0xe9fb010000	                           jmp 0x400075a	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x400055f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4000562	            0x4898	                                    cdqe	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4000564	     0xfb680000000	                   movzx eax, byte [rax]	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x400056b	          0x83c820	                            or eax, 0x20	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x400056e	            0x89c2	                            mov edx, eax	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4000570	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4000573	            0x4898	                                    cdqe	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4000575	    0x889000000000	                      mov byte [rax], dl	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x400057b	      0xe9da010000	                           jmp 0x400075a	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4000580	        0x837de401	               cmp dword [rbp - 0x1c], 1	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x4000584	     0xf85f4000000	                           jne 0x400067e	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x400058a	        0x837ddc1f	           cmp dword [rbp - 0x24], 0x1f 	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x400058e	            0x7e34	                           jle 0x40005c4	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4000590	        0x837ddc7e	           cmp dword [rbp - 0x24], 0x7e 	       254	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4000594	            0x7f2e	                            jg 0x40005c4	       254	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4000596	    0x8b0500000000	            mov eax, dword [0x0400059c] 	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x400059c	            0x85c0	                           test eax, eax	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x400059e	     0xf84b6010000	                            je 0x400075a	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x40005a4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005a7	            0x89c7	                            mov edi, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005a9	      0xe800000000	                          call 0x40005ae	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005ae	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005b0	            0x7512	                           jne 0x40005c4	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005b2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005b5	            0x89c7	                            mov edi, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005b7	      0xe800000000	                          call 0x40005bc	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005bc	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005be	     0xf8496010000	                            je 0x400075a	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40005c4	    0x8b0500000000	            mov eax, dword [0x040005ca] 	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005ca	            0x85c0	                           test eax, eax	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005cc	            0x7414	                            je 0x40005e2	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005ce	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005d1	            0x4898	                                    cdqe	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005d3	     0xfb680000000	                   movzx eax, byte [rax]	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005da	            0x3c02	                               cmp al, 2	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005dc	     0xf8478010000	                            je 0x400075a	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40005e2	        0x837de800	               cmp dword [rbp - 0x18], 0	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005e6	            0x7458	                            je 0x4000640	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005e8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005eb	            0x4898	                                    cdqe	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005ed	     0xfb680000000	                   movzx eax, byte [rax]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005f4	          0x83e0f8	                     and eax, 0xfffffff8	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005f7	            0x89c2	                            mov edx, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005f9	    0x8b0500000000	            mov eax, dword [0x040005ff] 	       271	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40005ff	          0x83e004	                              and eax, 4	       271	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000602	            0x85c0	                           test eax, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000604	            0x7407	                            je 0x400060d	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000606	      0xb804000000	                              mov eax, 4	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400060b	            0xeb05	                           jmp 0x4000612	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400060d	      0xb802000000	                              mov eax, 2	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000612	             0x1c2	                            add edx, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000614	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000617	            0x4898	                                    cdqe	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000619	    0x889000000000	                      mov byte [rax], dl	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400061f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000622	            0x4898	                                    cdqe	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000624	     0xfb680000000	                   movzx eax, byte [rax]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400062b	          0x83e0ef	                     and eax, 0xffffffef	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400062e	            0x89c2	                            mov edx, eax	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000630	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000633	            0x4898	                                    cdqe	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000635	    0x889000000000	                      mov byte [rax], dl	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400063b	      0xe91a010000	                           jmp 0x400075a	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4000640	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000643	            0x4898	                                    cdqe	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000645	     0xfb680000000	                   movzx eax, byte [rax]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400064c	          0x83e0f8	                     and eax, 0xfffffff8	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400064f	          0x8d5001	                      lea edx, [rax + 1]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000652	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000655	            0x4898	                                    cdqe	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000657	    0x889000000000	                      mov byte [rax], dl	       276	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400065d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000660	            0x4898	                                    cdqe	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000662	     0xfb680000000	                   movzx eax, byte [rax]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000669	          0x83c810	                            or eax, 0x10	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400066c	            0x89c2	                            mov edx, eax	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400066e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000671	            0x4898	                                    cdqe	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000673	    0x889000000000	                      mov byte [rax], dl	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4000679	      0xe9dc000000	                           jmp 0x400075a	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400067e	        0x837de402	               cmp dword [rbp - 0x1c], 2	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x4000682	            0x7548	                           jne 0x40006cc	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x4000684	        0x837de800	               cmp dword [rbp - 0x18], 0	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x4000688	            0x7421	                            je 0x40006ab	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400068a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400068d	            0x4898	                                    cdqe	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400068f	     0xfb680000000	                   movzx eax, byte [rax]	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x4000696	          0x83e0bf	                     and eax, 0xffffffbf	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x4000699	            0x89c2	                            mov edx, eax	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400069b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400069e	            0x4898	                                    cdqe	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40006a0	    0x889000000000	                      mov byte [rax], dl	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40006a6	      0xe9af000000	                           jmp 0x400075a	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x40006ab	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006ae	            0x4898	                                    cdqe	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006b0	     0xfb680000000	                   movzx eax, byte [rax]	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006b7	          0x83c840	                            or eax, 0x40	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006ba	            0x89c2	                            mov edx, eax	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006bc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006bf	            0x4898	                                    cdqe	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006c1	    0x889000000000	                      mov byte [rax], dl	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006c7	      0xe98e000000	                           jmp 0x400075a	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x40006cc	        0x837de800	               cmp dword [rbp - 0x18], 0	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006d0	            0x7446	                            je 0x4000718	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006d2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006d5	          0xc1e803	                              shr eax, 3	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006d8	            0x89c6	                            mov esi, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006da	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006dd	          0xc1e803	                              shr eax, 3	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006e0	            0x89c2	                            mov edx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006e6	            0x89d2	                            mov edx, edx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006e8	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006f0	            0x89c2	                            mov edx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006f2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006f5	          0x83e007	                              and eax, 7	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006f8	      0xbf01000000	                              mov edi, 1	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006fd	            0x89c1	                            mov ecx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x40006ff	            0xd3e7	                             shl edi, cl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4000701	            0x89f8	                            mov eax, edi	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4000703	            0xf7d0	                                 not eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4000705	            0x21d0	                            and eax, edx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4000707	            0x89c1	                            mov ecx, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4000709	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400070d	            0x89f2	                            mov edx, esi	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400070f	    0x888c10a00900	        mov byte [rax + rdx + 0x9a0], cl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4000716	            0xeb42	                           jmp 0x400075a	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4000718	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400071b	          0xc1e803	                              shr eax, 3	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400071e	            0x89c6	                            mov esi, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000720	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000723	          0xc1e803	                              shr eax, 3	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000726	            0x89c2	                            mov edx, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000728	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400072c	            0x89d2	                            mov edx, edx	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400072e	     0xfb68410a009	    movzx eax, byte [rax + rdx + 0x9a0] 	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000736	            0x89c7	                            mov edi, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000738	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400073b	          0x83e007	                              and eax, 7	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400073e	      0xba01000000	                              mov edx, 1	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000743	            0x89c1	                            mov ecx, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000745	            0xd3e2	                             shl edx, cl	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000747	            0x89d0	                            mov eax, edx	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000749	             0x9f8	                             or eax, edi	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400074b	            0x89c1	                            mov ecx, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400074d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000751	            0x89f2	                            mov edx, esi	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4000753	    0x888c10a00900	        mov byte [rax + rdx + 0x9a0], cl	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400075a	        0x8345dc01	               add dword [rbp - 0x24], 1	       296	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400075e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4000761	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4000764	     0xf8e78fdffff	                           jle 0x40004e2	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400076a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x400076e	           0xfb600	                   movzx eax, byte [rax]	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4000771	           0xfb6c0	                           movzx eax, al	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4000774	          0x8945dc	             mov dword [rbp - 0x24], eax	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4000777	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x400077b	          0x4889c7	                            mov rdi, rax	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x400077e	      0xe800000000	                          call 0x4000783	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x4000783	        0x488945f0	             mov qword [rbp - 0x10], rax	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x4000787	        0x837ddc2c	           cmp dword [rbp - 0x24], 0x2c 	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x400078b	            0x7512	                           jne 0x400079f	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x400078d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x4000791	           0xfb600	                   movzx eax, byte [rax]	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x4000794	            0x84c0	                             test al, al	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x4000796	            0x7507	                           jne 0x400079f	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x4000798	      0xb800000000	                              mov eax, 0	       303	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x400079d	            0xeb2c	                           jmp 0x40007cb	       303	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x400079f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40007a3	           0xfb600	                   movzx eax, byte [rax]	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40007a6	            0x84c0	                             test al, al	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40007a8	     0xf85abfbffff	                           jne 0x4000359	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40007ae	        0x8345e401	               add dword [rbp - 0x1c], 1	       168	charset.c	FUNCTION_2	FOR_3
0x40007b2	        0x837de403	               cmp dword [rbp - 0x1c], 3	       168	charset.c	FUNCTION_2	FOR_3
0x40007b6	     0xf8e47fbffff	                           jle 0x4000303	       168	charset.c	FUNCTION_2	FOR_3
0x40007bc	    0xc70500000000	               mov dword [0x040007c6], 1	       306	charset.c	FUNCTION_2
0x40007c6	      0xb801000000	                              mov eax, 1	       307	charset.c	FUNCTION_2
0x40007cb	        0x488b75f8	                mov rsi, qword [rbp - 8]	       308	charset.c	FUNCTION_2
0x40007cf	    0x644833342528	                xor rsi, qword fs:[0x28]	       308	charset.c	FUNCTION_2
0x40007d8	            0x7405	                            je 0x40007df	       308	charset.c	FUNCTION_2
0x40007da	      0xe800000000	                          call 0x40007df	       308	charset.c	FUNCTION_2
0x40007df	              0xc9	                                   leave	       308	charset.c	FUNCTION_2
0x40007e0	              0xc3	                                     ret	       308	charset.c	FUNCTION_2
getvcols	ELSE,4:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,4:DO,0:CALL,5	121
0x4002846	              0x55	                                push rbp	      1497	charset.c	FUNCTION_38
0x4002847	          0x4889e5	                            mov rbp, rsp	      1497	charset.c	FUNCTION_38
0x400284a	        0x4883ec50	                           sub rsp, 0x50	      1497	charset.c	FUNCTION_38
0x400284e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1497	charset.c	FUNCTION_38
0x4002852	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1497	charset.c	FUNCTION_38
0x4002856	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1497	charset.c	FUNCTION_38
0x400285a	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1497	charset.c	FUNCTION_38
0x400285e	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      1497	charset.c	FUNCTION_38
0x4002862	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	charset.c	FUNCTION_38
0x400286b	        0x488945f8	                mov qword [rbp - 8], rax	      1497	charset.c	FUNCTION_38
0x400286f	            0x31c0	                            xor eax, eax	      1497	charset.c	FUNCTION_38
0x4002871	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002875	          0x488b10	                    mov rdx, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002878	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x400287c	          0x488b00	                    mov rax, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x400287f	          0x4839c2	                            cmp rdx, rax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002882	            0x7416	                            je 0x400289a	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002884	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002888	          0x488b10	                    mov rdx, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x400288b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x400288f	          0x488b00	                    mov rax, qword [rax]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002892	          0x4839c2	                            cmp rdx, rax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002895	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x4002898	            0xeb3a	                           jmp 0x40028d4	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x400289a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x400289e	          0x8b5008	                mov edx, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028a5	          0x8b4008	                mov eax, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028a8	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028aa	            0x7415	                            je 0x40028c1	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028b0	          0x8b5008	                mov edx, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028b7	          0x8b4008	                mov eax, dword [rax + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028ba	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028bc	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028bf	            0xeb13	                           jmp 0x40028d4	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028c5	          0x8b500c	              mov edx, dword [rax + 0xc]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028cc	          0x8b400c	              mov eax, dword [rax + 0xc]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028cf	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028d1	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028d4	            0x84c0	                             test al, al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028d6	            0x7442	                            je 0x400291a	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40028d8	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028dc	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028e0	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028e8	          0x4989c8	                             mov r8, rcx	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028eb	      0xb900000000	                              mov ecx, 0	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028f0	          0x4889c7	                            mov rdi, rax	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028f3	      0xe800000000	                          call 0x40028f8	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40028f8	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x40028fc	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4002900	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4002904	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4002908	          0x4989c8	                             mov r8, rcx	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x400290b	      0xb900000000	                              mov ecx, 0	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4002910	          0x4889c7	                            mov rdi, rax	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4002913	      0xe800000000	                          call 0x4002918	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4002918	            0xeb40	                           jmp 0x400295a	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x400291a	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x400291e	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4002922	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4002926	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x400292a	          0x4989c8	                             mov r8, rcx	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x400292d	      0xb900000000	                              mov ecx, 0	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4002932	          0x4889c7	                            mov rdi, rax	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4002935	      0xe800000000	                          call 0x400293a	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x400293a	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x400293e	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4002942	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4002946	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x400294a	          0x4989c8	                             mov r8, rcx	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x400294d	      0xb900000000	                              mov ecx, 0	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4002952	          0x4889c7	                            mov rdi, rax	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4002955	      0xe800000000	                          call 0x400295a	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x400295a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1510	charset.c	FUNCTION_38	IF_2
0x400295d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1510	charset.c	FUNCTION_38	IF_2
0x4002960	            0x39c2	                            cmp edx, eax	      1510	charset.c	FUNCTION_38	IF_2
0x4002962	            0x7d0b	                           jge 0x400296f	      1510	charset.c	FUNCTION_38	IF_2
0x4002964	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1511	charset.c	FUNCTION_38	IF_2
0x4002967	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1511	charset.c	FUNCTION_38	IF_2
0x400296b	            0x8910	                    mov dword [rax], edx	      1511	charset.c	FUNCTION_38	IF_2
0x400296d	            0xeb09	                           jmp 0x4002978	      1511	charset.c	FUNCTION_38	IF_2
0x400296f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1513	charset.c	FUNCTION_38	ELSE_2
0x4002972	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1513	charset.c	FUNCTION_38	ELSE_2
0x4002976	            0x8910	                    mov dword [rax], edx	      1513	charset.c	FUNCTION_38	ELSE_2
0x4002978	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x400297b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x400297e	            0x39c2	                            cmp edx, eax	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4002980	            0x7e34	                           jle 0x40029b6	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4002982	    0x488b05000000	            mov rax, qword [0x04002989] 	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4002989	           0xfb600	                   movzx eax, byte [rax]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x400298c	            0x3c65	                            cmp al, 0x65	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x400298e	            0x751b	                           jne 0x40029ab	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4002990	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4002993	          0x8d50ff	                      lea edx, [rax - 1]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4002996	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4002999	            0x39c2	                            cmp edx, eax	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x400299b	            0x7c0e	                            jl 0x40029ab	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x400299d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x40029a0	          0x8d50ff	                      lea edx, [rax - 1]	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x40029a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x40029a7	            0x8910	                    mov dword [rax], edx	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x40029a9	            0xeb14	                           jmp 0x40029bf	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029ab	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x40029ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x40029b2	            0x8910	                    mov dword [rax], edx	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x40029b4	            0xeb09	                           jmp 0x40029bf	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029b6	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029bd	            0x8910	                    mov dword [rax], edx	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029bf	              0x90	                                     nop	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029c4	    0x644833042528	                xor rax, qword fs:[0x28]	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029cd	            0x7405	                            je 0x40029d4	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029cf	      0xe800000000	                          call 0x40029d4	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029d4	              0xc9	                                   leave	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x40029d5	              0xc3	                                     ret	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
vim_isprintc	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:DO,0:CALL,1	30
0x400181a	              0x55	                                push rbp	       969	charset.c	FUNCTION_28
0x400181b	          0x4889e5	                            mov rbp, rsp	       969	charset.c	FUNCTION_28
0x400181e	        0x4883ec10	                           sub rsp, 0x10	       969	charset.c	FUNCTION_28
0x4001822	          0x897dfc	                mov dword [rbp - 4], edi	       969	charset.c	FUNCTION_28
0x4001825	    0x8b0500000000	            mov eax, dword [0x0400182b] 	       971	charset.c	FUNCTION_28	IF_1
0x400182b	            0x85c0	                           test eax, eax	       971	charset.c	FUNCTION_28	IF_1
0x400182d	            0x7415	                            je 0x4001844	       971	charset.c	FUNCTION_28	IF_1
0x400182f	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       971	charset.c	FUNCTION_28	IF_1
0x4001836	            0x7e0c	                           jle 0x4001844	       971	charset.c	FUNCTION_28	IF_1
0x4001838	          0x8b45fc	                mov eax, dword [rbp - 4]	       972	charset.c	FUNCTION_28	CALL_1
0x400183b	            0x89c7	                            mov edi, eax	       972	charset.c	FUNCTION_28	CALL_1
0x400183d	      0xe800000000	                          call 0x4001842	       972	charset.c	FUNCTION_28	CALL_1
0x4001842	            0xeb32	                           jmp 0x4001876	       972	charset.c	FUNCTION_28	CALL_1
0x4001844	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	       974	charset.c	FUNCTION_28
0x400184b	            0x7f1c	                            jg 0x4001869	       974	charset.c	FUNCTION_28
0x400184d	        0x837dfc00	                  cmp dword [rbp - 4], 0	       974	charset.c	FUNCTION_28
0x4001851	            0x7e1d	                           jle 0x4001870	       974	charset.c	FUNCTION_28
0x4001853	          0x8b45fc	                mov eax, dword [rbp - 4]	       974	charset.c	FUNCTION_28
0x4001856	            0x4898	                                    cdqe	       974	charset.c	FUNCTION_28
0x4001858	     0xfb680000000	                   movzx eax, byte [rax]	       974	charset.c	FUNCTION_28
0x400185f	           0xfb6c0	                           movzx eax, al	       974	charset.c	FUNCTION_28
0x4001862	          0x83e010	                           and eax, 0x10	       974	charset.c	FUNCTION_28
0x4001865	            0x85c0	                           test eax, eax	       974	charset.c	FUNCTION_28
0x4001867	            0x7407	                            je 0x4001870	       974	charset.c	FUNCTION_28
0x4001869	      0xb801000000	                              mov eax, 1	       974	charset.c	FUNCTION_28
0x400186e	            0xeb05	                           jmp 0x4001875	       974	charset.c	FUNCTION_28
0x4001870	      0xb800000000	                              mov eax, 0	       974	charset.c	FUNCTION_28
0x4001875	              0x90	                                     nop	       974	charset.c	FUNCTION_28
0x4001876	              0xc9	                                   leave	       975	charset.c	FUNCTION_28
0x4001877	              0xc3	                                     ret	       975	charset.c	FUNCTION_28
init_chartab	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	8
0x4000040	              0x55	                                push rbp	        72	charset.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        72	charset.c	FUNCTION_1
0x4000044	    0x488b05000000	            mov rax, qword [0x0400004b] 	        73	charset.c	FUNCTION_1	CALL_1
0x400004b	      0xbe01000000	                              mov esi, 1	        73	charset.c	FUNCTION_1	CALL_1
0x4000050	          0x4889c7	                            mov rdi, rax	        73	charset.c	FUNCTION_1	CALL_1
0x4000053	      0xe800000000	                          call 0x4000058	        73	charset.c	FUNCTION_1	CALL_1
0x4000058	              0x5d	                                 pop rbp	        74	charset.c	FUNCTION_1
0x4000059	              0xc3	                                     ret	        74	charset.c	FUNCTION_1
vim_isfilec_or_wc	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,2	31
0x40017b0	              0x55	                                push rbp	       954	charset.c	FUNCTION_27
0x40017b1	          0x4889e5	                            mov rbp, rsp	       954	charset.c	FUNCTION_27
0x40017b4	        0x4883ec20	                           sub rsp, 0x20	       954	charset.c	FUNCTION_27
0x40017b8	          0x897dec	             mov dword [rbp - 0x14], edi	       954	charset.c	FUNCTION_27
0x40017bb	    0x64488b042528	                mov rax, qword fs:[0x28]	       954	charset.c	FUNCTION_27
0x40017c4	        0x488945f8	                mov qword [rbp - 8], rax	       954	charset.c	FUNCTION_27
0x40017c8	            0x31c0	                            xor eax, eax	       954	charset.c	FUNCTION_27
0x40017ca	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       957	charset.c	FUNCTION_27
0x40017cd	          0x8845f0	               mov byte [rbp - 0x10], al	       957	charset.c	FUNCTION_27
0x40017d0	        0xc645f100	                 mov byte [rbp - 0xf], 0	       958	charset.c	FUNCTION_27
0x40017d4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       959	charset.c	FUNCTION_27	CALL_2
0x40017d7	            0x89c7	                            mov edi, eax	       959	charset.c	FUNCTION_27	CALL_2
0x40017d9	      0xe800000000	                          call 0x40017de	       959	charset.c	FUNCTION_27	CALL_2
0x40017de	            0x85c0	                           test eax, eax	       959	charset.c	FUNCTION_27	CALL_2
0x40017e0	            0x7516	                           jne 0x40017f8	       959	charset.c	FUNCTION_27	CALL_2
0x40017e2	        0x837dec5d	           cmp dword [rbp - 0x14], 0x5d 	       959	charset.c	FUNCTION_27	CALL_2
0x40017e6	            0x7410	                            je 0x40017f8	       959	charset.c	FUNCTION_27	CALL_2
0x40017e8	        0x488d45f0	                   lea rax, [rbp - 0x10]	       959	charset.c	FUNCTION_27	CALL_2
0x40017ec	          0x4889c7	                            mov rdi, rax	       959	charset.c	FUNCTION_27	CALL_2
0x40017ef	      0xe800000000	                          call 0x40017f4	       959	charset.c	FUNCTION_27	CALL_2
0x40017f4	            0x85c0	                           test eax, eax	       959	charset.c	FUNCTION_27	CALL_2
0x40017f6	            0x7407	                            je 0x40017ff	       959	charset.c	FUNCTION_27	CALL_2
0x40017f8	      0xb801000000	                              mov eax, 1	       959	charset.c	FUNCTION_27	CALL_2
0x40017fd	            0xeb05	                           jmp 0x4001804	       959	charset.c	FUNCTION_27	CALL_2
0x40017ff	      0xb800000000	                              mov eax, 0	       959	charset.c	FUNCTION_27	CALL_2
0x4001804	        0x488b55f8	                mov rdx, qword [rbp - 8]	       960	charset.c	FUNCTION_27
0x4001808	    0x644833142528	                xor rdx, qword fs:[0x28]	       960	charset.c	FUNCTION_27
0x4001811	            0x7405	                            je 0x4001818	       960	charset.c	FUNCTION_27
0x4001813	      0xe800000000	                          call 0x4001818	       960	charset.c	FUNCTION_27
0x4001818	              0xc9	                                   leave	       960	charset.c	FUNCTION_27
0x4001819	              0xc3	                                     ret	       960	charset.c	FUNCTION_27
vim_iswordc	ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1	11
0x4001624	              0x55	                                push rbp	       895	charset.c	FUNCTION_22
0x4001625	          0x4889e5	                            mov rbp, rsp	       895	charset.c	FUNCTION_22
0x4001628	        0x4883ec10	                           sub rsp, 0x10	       895	charset.c	FUNCTION_22
0x400162c	          0x897dfc	                mov dword [rbp - 4], edi	       895	charset.c	FUNCTION_22
0x400162f	    0x488b15000000	            mov rdx, qword [0x04001636] 	       896	charset.c	FUNCTION_22	CALL_1
0x4001636	          0x8b45fc	                mov eax, dword [rbp - 4]	       896	charset.c	FUNCTION_22	CALL_1
0x4001639	          0x4889d6	                            mov rsi, rdx	       896	charset.c	FUNCTION_22	CALL_1
0x400163c	            0x89c7	                            mov edi, eax	       896	charset.c	FUNCTION_22	CALL_1
0x400163e	      0xe800000000	                          call 0x4001643	       896	charset.c	FUNCTION_22	CALL_1
0x4001643	              0xc9	                                   leave	       897	charset.c	FUNCTION_22
0x4001644	              0xc3	                                     ret	       897	charset.c	FUNCTION_22
