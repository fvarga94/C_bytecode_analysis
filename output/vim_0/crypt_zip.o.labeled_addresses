crypt_zip_init	CALL,2:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,1:functions,0:DO,0	79
0x40000b1	              0x55	                                push rbp	        95	crypt_zip.c	FUNCTION_2
0x40000b2	          0x4889e5	                            mov rbp, rsp	        95	crypt_zip.c	FUNCTION_2
0x40000b5	        0x4883ec40	                           sub rsp, 0x40	        95	crypt_zip.c	FUNCTION_2
0x40000b9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        95	crypt_zip.c	FUNCTION_2
0x40000bd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        95	crypt_zip.c	FUNCTION_2
0x40000c1	        0x488955d8	             mov qword [rbp - 0x28], rdx	        95	crypt_zip.c	FUNCTION_2
0x40000c5	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        95	crypt_zip.c	FUNCTION_2
0x40000c8	        0x4c8945c8	              mov qword [rbp - 0x38], r8	        95	crypt_zip.c	FUNCTION_2
0x40000cc	        0x44894dd0	             mov dword [rbp - 0x30], r9d	        95	crypt_zip.c	FUNCTION_2
0x40000d0	      0xbf0c000000	                            mov edi, 0xc	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x40000d5	      0xe800000000	                          call 0x40000da	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x40000da	        0x488945f8	                mov qword [rbp - 8], rax	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x40000de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	crypt_zip.c	FUNCTION_2
0x40000e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       100	crypt_zip.c	FUNCTION_2
0x40000e6	        0x48895008	                mov qword [rax + 8], rdx	       100	crypt_zip.c	FUNCTION_2
0x40000ea	      0xe851ffffff	                   call sym.make_crc_tab	       102	crypt_zip.c	FUNCTION_2	CALL_2
0x40000ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	crypt_zip.c	FUNCTION_2
0x40000f3	    0xc70078563412	            mov dword [rax], 0x12345678 	       103	crypt_zip.c	FUNCTION_2
0x40000f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	crypt_zip.c	FUNCTION_2
0x40000fd	    0xc74004896745	        mov dword [rax + 4], 0x23456789 	       104	crypt_zip.c	FUNCTION_2
0x4000104	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	crypt_zip.c	FUNCTION_2
0x4000108	    0xc74008907856	        mov dword [rax + 8], 0x34567890 	       105	crypt_zip.c	FUNCTION_2
0x400010f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000113	        0x488945f0	             mov qword [rbp - 0x10], rax	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000117	      0xe99a000000	                           jmp 0x40001b6	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x400011c	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000120	            0x8b00	                    mov eax, dword [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000122	            0x89c2	                            mov edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000124	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000128	           0xfb600	                   movzx eax, byte [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400012b	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400012e	            0x31d0	                            xor eax, edx	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000130	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000133	            0x4898	                                    cdqe	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000135	    0x8b1485000000	                  mov edx, dword [rax*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400013c	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000140	            0x8b00	                    mov eax, dword [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000142	          0xc1e808	                              shr eax, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000145	            0x31c2	                            xor edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000147	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400014b	            0x8910	                    mov dword [rax], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400014d	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000151	          0x8b5004	                mov edx, dword [rax + 4]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000154	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000158	            0x8b00	                    mov eax, dword [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400015a	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400015d	             0x1c2	                            add edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400015f	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000163	          0x895004	                mov dword [rax + 4], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000166	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400016a	          0x8b4004	                mov eax, dword [rax + 4]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400016d	    0x69c005840808	                imul eax, eax, 0x8088405	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000173	          0x8d5001	                      lea edx, [rax + 1]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000176	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400017a	          0x895004	                mov dword [rax + 4], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400017d	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000181	          0x8b4008	                mov eax, dword [rax + 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000184	            0x89c2	                            mov edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000186	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400018a	          0x8b4004	                mov eax, dword [rax + 4]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400018d	          0xc1e818	                           shr eax, 0x18	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000190	            0x31d0	                            xor eax, edx	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000192	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000195	            0x4898	                                    cdqe	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x4000197	    0x8b1485000000	                  mov edx, dword [rax*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x400019e	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x40001a2	          0x8b4008	                mov eax, dword [rax + 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x40001a5	          0xc1e808	                              shr eax, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x40001a8	            0x31c2	                            xor edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x40001aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x40001ae	          0x895008	                mov dword [rax + 8], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1
0x40001b1	      0x488345f001	               add qword [rbp - 0x10], 1	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40001b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40001ba	           0xfb600	                   movzx eax, byte [rax]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40001bd	            0x84c0	                             test al, al	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40001bf	     0xf8557ffffff	                           jne 0x400011c	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40001c5	              0x90	                                     nop	       110	crypt_zip.c	FUNCTION_2
0x40001c6	              0xc9	                                   leave	       110	crypt_zip.c	FUNCTION_2
0x40001c7	              0xc3	                                     ret	       110	crypt_zip.c	FUNCTION_2
crypt_zip_decode	CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,1:functions,0:DO,0	85
0x40002ea	              0x55	                                push rbp	       145	crypt_zip.c	FUNCTION_4
0x40002eb	          0x4889e5	                            mov rbp, rsp	       145	crypt_zip.c	FUNCTION_4
0x40002ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       145	crypt_zip.c	FUNCTION_4
0x40002f2	        0x488975d0	             mov qword [rbp - 0x30], rsi	       145	crypt_zip.c	FUNCTION_4
0x40002f6	        0x488955c8	             mov qword [rbp - 0x38], rdx	       145	crypt_zip.c	FUNCTION_4
0x40002fa	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       145	crypt_zip.c	FUNCTION_4
0x40002fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	crypt_zip.c	FUNCTION_4
0x4000302	        0x488b4008	                mov rax, qword [rax + 8]	       146	crypt_zip.c	FUNCTION_4
0x4000306	        0x488945f8	                mov qword [rbp - 8], rax	       146	crypt_zip.c	FUNCTION_4
0x400030a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x4000312	      0xe9e1000000	                           jmp 0x40003f8	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x4000317	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x400031b	          0x8b4008	                mov eax, dword [rax + 8]	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x400031e	          0x83c802	                               or eax, 2	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x4000321	        0x668945ee	               mov word [rbp - 0x12], ax	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x4000325	         0xfb755ee	            movzx edx, word [rbp - 0x12]	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x4000329	         0xfb745ee	            movzx eax, word [rbp - 0x12]	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x400032d	          0x83f001	                              xor eax, 1	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x4000330	           0xfb7c0	                           movzx eax, ax	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x4000333	           0xfafc2	                           imul eax, edx	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x4000336	          0xc1e808	                              shr eax, 8	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x4000339	        0x6625ff00	                            and ax, 0xff	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x400033d	        0x668945ee	               mov word [rbp - 0x12], ax	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x4000341	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000345	            0x8b00	                    mov eax, dword [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000347	            0x89c6	                            mov esi, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000349	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400034d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000351	          0x4801d0	                            add rax, rdx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000354	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000358	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400035c	          0x4801ca	                            add rdx, rcx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400035f	           0xfb60a	                   movzx ecx, byte [rdx]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000362	         0xfb755ee	            movzx edx, word [rbp - 0x12]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000366	            0x31ca	                            xor edx, ecx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000368	            0x8810	                      mov byte [rax], dl	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400036a	           0xfb600	                   movzx eax, byte [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400036d	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000370	            0x31f0	                            xor eax, esi	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000372	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000375	            0x4898	                                    cdqe	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000377	    0x8b1485000000	                  mov edx, dword [rax*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400037e	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000382	            0x8b00	                    mov eax, dword [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000384	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000387	            0x31c2	                            xor edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000389	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400038d	            0x8910	                    mov dword [rax], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400038f	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000393	          0x8b5004	                mov edx, dword [rax + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x4000396	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400039a	            0x8b00	                    mov eax, dword [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400039c	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x400039f	             0x1c2	                            add edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003a5	          0x895004	                mov dword [rax + 4], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003ac	          0x8b4004	                mov eax, dword [rax + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003af	    0x69c005840808	                imul eax, eax, 0x8088405	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003b5	          0x8d5001	                      lea edx, [rax + 1]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003bc	          0x895004	                mov dword [rax + 4], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003c3	          0x8b4008	                mov eax, dword [rax + 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003c6	            0x89c2	                            mov edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003cc	          0x8b4004	                mov eax, dword [rax + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003cf	          0xc1e818	                           shr eax, 0x18	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003d2	            0x31d0	                            xor eax, edx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003d4	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003d7	            0x4898	                                    cdqe	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003d9	    0x8b1485000000	                  mov edx, dword [rax*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003e4	          0x8b4008	                mov eax, dword [rax + 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003e7	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003ea	            0x31c2	                            xor edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003f0	          0x895008	                mov dword [rax + 8], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1
0x40003f3	      0x488345f001	               add qword [rbp - 0x10], 1	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40003f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40003fc	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x4000400	     0xf8211ffffff	                            jb 0x4000317	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x4000406	              0x90	                                     nop	       156	crypt_zip.c	FUNCTION_4
0x4000407	              0x5d	                                 pop rbp	       156	crypt_zip.c	FUNCTION_4
0x4000408	              0xc3	                                     ret	       156	crypt_zip.c	FUNCTION_4
make_crc_tab	CALL,0:ELSE,0:IF,1:WHILE,0:SWITCH,0:FOR,2:functions,0:DO,0	33
0x4000040	              0x55	                                push rbp	        48	crypt_zip.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        48	crypt_zip.c	FUNCTION_1
0x4000044	    0x8b0500000000	            mov eax, dword [0x0400004a] 	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400004a	            0x85c0	                           test eax, eax	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400004c	            0x7560	                           jne 0x40000ae	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400004e	    0xc745f8000000	                  mov dword [rbp - 8], 0	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x4000055	            0xeb42	                           jmp 0x4000099	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x4000057	          0x8b45f8	                mov eax, dword [rbp - 8]	        56	crypt_zip.c	FUNCTION_1	FOR_1
0x400005a	          0x8945fc	                mov dword [rbp - 4], eax	        56	crypt_zip.c	FUNCTION_1	FOR_1
0x400005d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000064	            0xeb1c	                           jmp 0x4000082	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000066	          0x8b45fc	                mov eax, dword [rbp - 4]	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000069	            0xd1e8	                              shr eax, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400006b	            0x89c2	                            mov edx, eax	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400006d	          0x8b45fc	                mov eax, dword [rbp - 4]	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000070	          0x83e001	                              and eax, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000073	    0x69c02083b8ed	               imul eax, eax, 0xedb88320	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000079	            0x31d0	                            xor eax, edx	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400007b	          0x8945fc	                mov dword [rbp - 4], eax	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400007e	        0x8345f401	                add dword [rbp - 0xc], 1	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000082	        0x837df407	                cmp dword [rbp - 0xc], 7	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000086	            0x76de	                           jbe 0x4000066	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000088	          0x8b45f8	                mov eax, dword [rbp - 8]	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x400008b	          0x8b55fc	                mov edx, dword [rbp - 4]	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x400008e	    0x891485000000	                  mov dword [rax*4], edx	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x4000095	        0x8345f801	                  add dword [rbp - 8], 1	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x4000099	    0x817df8ff0000	               cmp dword [rbp - 8], 0xff	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x40000a0	            0x76b5	                           jbe 0x4000057	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x40000a2	    0xc70500000000	               mov dword [0x040000ac], 1	        61	crypt_zip.c	FUNCTION_1
0x40000ac	            0xeb01	                           jmp 0x40000af	        61	crypt_zip.c	FUNCTION_1
0x40000ae	              0x90	                                     nop	        53	crypt_zip.c	FUNCTION_1	IF_1
0x40000af	              0x5d	                                 pop rbp	        62	crypt_zip.c	FUNCTION_1
0x40000b0	              0xc3	                                     ret	        62	crypt_zip.c	FUNCTION_1
crypt_zip_encode	CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,1:functions,0:DO,0	86
0x40001c8	              0x55	                                push rbp	       122	crypt_zip.c	FUNCTION_3
0x40001c9	          0x4889e5	                            mov rbp, rsp	       122	crypt_zip.c	FUNCTION_3
0x40001cc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       122	crypt_zip.c	FUNCTION_3
0x40001d0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       122	crypt_zip.c	FUNCTION_3
0x40001d4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       122	crypt_zip.c	FUNCTION_3
0x40001d8	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       122	crypt_zip.c	FUNCTION_3
0x40001dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       123	crypt_zip.c	FUNCTION_3
0x40001e0	        0x488b4008	                mov rax, qword [rax + 8]	       123	crypt_zip.c	FUNCTION_3
0x40001e4	        0x488945f8	                mov qword [rbp - 8], rax	       123	crypt_zip.c	FUNCTION_3
0x40001e8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40001f0	      0xe9e4000000	                           jmp 0x40002d9	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40001f5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x40001f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x40001fd	          0x4801d0	                            add rax, rdx	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x4000200	           0xfb600	                   movzx eax, byte [rax]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x4000203	           0xfb6c0	                           movzx eax, al	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x4000206	          0x8945e8	             mov dword [rbp - 0x18], eax	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x4000209	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x400020d	          0x8b4008	                mov eax, dword [rax + 8]	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000210	          0x83c802	                               or eax, 2	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000213	        0x668945e6	               mov word [rbp - 0x1a], ax	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000217	         0xfb755e6	            movzx edx, word [rbp - 0x1a]	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x400021b	         0xfb745e6	            movzx eax, word [rbp - 0x1a]	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x400021f	          0x83f001	                              xor eax, 1	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000222	           0xfb7c0	                           movzx eax, ax	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000225	           0xfafc2	                           imul eax, edx	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000228	          0xc1e808	                              shr eax, 8	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x400022b	      0x25ff000000	                           and eax, 0xff	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000230	          0x8945ec	             mov dword [rbp - 0x14], eax	       130	crypt_zip.c	FUNCTION_3	FOR_1
0x4000233	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000237	            0x8b00	                    mov eax, dword [rax]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000239	          0x3345e8	             xor eax, dword [rbp - 0x18]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400023c	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400023f	            0x4898	                                    cdqe	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000241	    0x8b1485000000	                  mov edx, dword [rax*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000248	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400024c	            0x8b00	                    mov eax, dword [rax]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400024e	          0xc1e808	                              shr eax, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000251	            0x31c2	                            xor edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000253	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000257	            0x8910	                    mov dword [rax], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000259	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400025d	          0x8b5004	                mov edx, dword [rax + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000260	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000264	            0x8b00	                    mov eax, dword [rax]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000266	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000269	             0x1c2	                            add edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400026b	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400026f	          0x895004	                mov dword [rax + 4], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000272	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000276	          0x8b4004	                mov eax, dword [rax + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000279	    0x69c005840808	                imul eax, eax, 0x8088405	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400027f	          0x8d5001	                      lea edx, [rax + 1]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000282	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000286	          0x895004	                mov dword [rax + 4], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000289	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400028d	          0x8b4008	                mov eax, dword [rax + 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000290	            0x89c2	                            mov edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000292	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000296	          0x8b4004	                mov eax, dword [rax + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x4000299	          0xc1e818	                           shr eax, 0x18	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400029c	            0x31d0	                            xor eax, edx	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x400029e	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002a1	            0x4898	                                    cdqe	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002a3	    0x8b1485000000	                  mov edx, dword [rax*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002ae	          0x8b4008	                mov eax, dword [rax + 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002b1	          0xc1e808	                              shr eax, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002b4	            0x31c2	                            xor edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002ba	          0x895008	                mov dword [rax + 8], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1
0x40002bd	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002c5	          0x4801d0	                            add rax, rdx	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002c8	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002cb	            0x89d1	                            mov ecx, edx	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002cd	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002d0	            0x31ca	                            xor edx, ecx	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002d2	            0x8810	                      mov byte [rax], dl	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x40002d4	      0x488345f001	               add qword [rbp - 0x10], 1	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40002d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40002dd	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40002e1	     0xf820effffff	                            jb 0x40001f5	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x40002e7	              0x90	                                     nop	       134	crypt_zip.c	FUNCTION_3
0x40002e8	              0x5d	                                 pop rbp	       134	crypt_zip.c	FUNCTION_3
0x40002e9	              0xc3	                                     ret	       134	crypt_zip.c	FUNCTION_3
