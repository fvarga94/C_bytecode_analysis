vimlist_remove	FOR,1:CALL,1:WHILE,0:ELSE,2:functions,0:IF,3:DO,0:SWITCH,0	62
0x4000e5b	              0x55	                                push rbp	       688	list.c	FUNCTION_33
0x4000e5c	          0x4889e5	                            mov rbp, rsp	       688	list.c	FUNCTION_33
0x4000e5f	        0x4883ec28	                           sub rsp, 0x28	       688	list.c	FUNCTION_33
0x4000e63	        0x48897de8	             mov qword [rbp - 0x18], rdi	       688	list.c	FUNCTION_33
0x4000e67	        0x488975e0	             mov qword [rbp - 0x20], rsi	       688	list.c	FUNCTION_33
0x4000e6b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       688	list.c	FUNCTION_33
0x4000e6f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       692	list.c	FUNCTION_33	FOR_1
0x4000e73	        0x488945f8	                mov qword [rbp - 8], rax	       692	list.c	FUNCTION_33	FOR_1
0x4000e77	            0xeb39	                           jmp 0x4000eb2	       692	list.c	FUNCTION_33	FOR_1
0x4000e79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       694	list.c	FUNCTION_33	FOR_1
0x4000e7d	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       694	list.c	FUNCTION_33	FOR_1
0x4000e80	          0x8d50ff	                      lea edx, [rax - 1]	       694	list.c	FUNCTION_33	FOR_1
0x4000e83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       694	list.c	FUNCTION_33	FOR_1
0x4000e87	          0x89503c	             mov dword [rax + 0x3c], edx	       694	list.c	FUNCTION_33	FOR_1
0x4000e8a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x4000e8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x4000e92	          0x4889d6	                            mov rsi, rdx	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x4000e95	          0x4889c7	                            mov rdi, rax	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x4000e98	      0xe800000000	                          call 0x4000e9d	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x4000e9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       696	list.c	FUNCTION_33	FOR_1	IF_1
0x4000ea1	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       696	list.c	FUNCTION_33	FOR_1	IF_1
0x4000ea5	            0x7414	                            je 0x4000ebb	       696	list.c	FUNCTION_33	FOR_1	IF_1
0x4000ea7	        0x488b45f8	                mov rax, qword [rbp - 8]	       692	list.c	FUNCTION_33	FOR_1
0x4000eab	          0x488b00	                    mov rax, qword [rax]	       692	list.c	FUNCTION_33	FOR_1
0x4000eae	        0x488945f8	                mov qword [rbp - 8], rax	       692	list.c	FUNCTION_33	FOR_1
0x4000eb2	      0x48837df800	                  cmp qword [rbp - 8], 0	       692	list.c	FUNCTION_33	FOR_1
0x4000eb7	            0x75c0	                           jne 0x4000e79	       692	list.c	FUNCTION_33	FOR_1
0x4000eb9	            0xeb01	                           jmp 0x4000ebc	       692	list.c	FUNCTION_33	FOR_1
0x4000ebb	              0x90	                                     nop	       697	list.c	FUNCTION_33	FOR_1	IF_1
0x4000ebc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       700	list.c	FUNCTION_33	IF_2
0x4000ec0	          0x488b00	                    mov rax, qword [rax]	       700	list.c	FUNCTION_33	IF_2
0x4000ec3	          0x4885c0	                           test rax, rax	       700	list.c	FUNCTION_33	IF_2
0x4000ec6	            0x7512	                           jne 0x4000eda	       700	list.c	FUNCTION_33	IF_2
0x4000ec8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       701	list.c	FUNCTION_33	IF_2
0x4000ecc	        0x488b5008	                mov rdx, qword [rax + 8]	       701	list.c	FUNCTION_33	IF_2
0x4000ed0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       701	list.c	FUNCTION_33	IF_2
0x4000ed4	        0x48895008	                mov qword [rax + 8], rdx	       701	list.c	FUNCTION_33	IF_2
0x4000ed8	            0xeb13	                           jmp 0x4000eed	       701	list.c	FUNCTION_33	IF_2
0x4000eda	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	list.c	FUNCTION_33	ELSE_1
0x4000ede	          0x488b00	                    mov rax, qword [rax]	       703	list.c	FUNCTION_33	ELSE_1
0x4000ee1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       703	list.c	FUNCTION_33	ELSE_1
0x4000ee5	        0x488b5208	                mov rdx, qword [rdx + 8]	       703	list.c	FUNCTION_33	ELSE_1
0x4000ee9	        0x48895008	                mov qword [rax + 8], rdx	       703	list.c	FUNCTION_33	ELSE_1
0x4000eed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       704	list.c	FUNCTION_33	IF_3
0x4000ef1	        0x488b4008	                mov rax, qword [rax + 8]	       704	list.c	FUNCTION_33	IF_3
0x4000ef5	          0x4885c0	                           test rax, rax	       704	list.c	FUNCTION_33	IF_3
0x4000ef8	            0x7510	                           jne 0x4000f0a	       704	list.c	FUNCTION_33	IF_3
0x4000efa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       705	list.c	FUNCTION_33	IF_3
0x4000efe	          0x488b10	                    mov rdx, qword [rax]	       705	list.c	FUNCTION_33	IF_3
0x4000f01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       705	list.c	FUNCTION_33	IF_3
0x4000f05	          0x488910	                    mov qword [rax], rdx	       705	list.c	FUNCTION_33	IF_3
0x4000f08	            0xeb12	                           jmp 0x4000f1c	       705	list.c	FUNCTION_33	IF_3
0x4000f0a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       707	list.c	FUNCTION_33	ELSE_2
0x4000f0e	        0x488b4008	                mov rax, qword [rax + 8]	       707	list.c	FUNCTION_33	ELSE_2
0x4000f12	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       707	list.c	FUNCTION_33	ELSE_2
0x4000f16	          0x488b12	                    mov rdx, qword [rdx]	       707	list.c	FUNCTION_33	ELSE_2
0x4000f19	          0x488910	                    mov qword [rax], rdx	       707	list.c	FUNCTION_33	ELSE_2
0x4000f1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       708	list.c	FUNCTION_33	ELSE_2
0x4000f20	    0x48c740180000	               mov qword [rax + 0x18], 0	       708	list.c	FUNCTION_33	ELSE_2
0x4000f28	              0x90	                                     nop	       709	list.c	FUNCTION_33	ELSE_2
0x4000f29	              0xc9	                                   leave	       709	list.c	FUNCTION_33	ELSE_2
0x4000f2a	              0xc3	                                     ret	       709	list.c	FUNCTION_33	ELSE_2
list2string	FOR,0:CALL,6:WHILE,0:ELSE,0:functions,0:IF,2:DO,0:SWITCH,0	57
0x4000f2b	              0x55	                                push rbp	       717	list.c	ELSE_2	FUNCTION_34
0x4000f2c	          0x4889e5	                            mov rbp, rsp	       717	list.c	ELSE_2	FUNCTION_34
0x4000f2f	        0x4883ec30	                           sub rsp, 0x30	       717	list.c	ELSE_2	FUNCTION_34
0x4000f33	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       717	list.c	ELSE_2	FUNCTION_34
0x4000f37	          0x8975d4	             mov dword [rbp - 0x2c], esi	       717	list.c	ELSE_2	FUNCTION_34
0x4000f3a	          0x8955d0	             mov dword [rbp - 0x30], edx	       717	list.c	ELSE_2	FUNCTION_34
0x4000f3d	    0x64488b042528	                mov rax, qword fs:[0x28]	       717	list.c	ELSE_2	FUNCTION_34
0x4000f46	        0x488945f8	                mov qword [rbp - 8], rax	       717	list.c	ELSE_2	FUNCTION_34
0x4000f4a	            0x31c0	                            xor eax, eax	       717	list.c	ELSE_2	FUNCTION_34
0x4000f4c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f50	        0x488b4008	                mov rax, qword [rax + 8]	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f54	          0x4885c0	                           test rax, rax	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f57	            0x750a	                           jne 0x4000f63	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f59	      0xb800000000	                              mov eax, 0	       721	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f5e	      0xe98e000000	                           jmp 0x4000ff1	       721	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000f63	        0x488d45e0	                   lea rax, [rbp - 0x20]	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f67	      0xba50000000	                           mov edx, 0x50	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f6c	      0xbe01000000	                              mov esi, 1	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f71	          0x4889c7	                            mov rdi, rax	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f74	      0xe800000000	                          call 0x4000f79	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000f79	        0x488d45e0	                   lea rax, [rbp - 0x20]	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000f7d	      0xbe5b000000	                           mov esi, 0x5b	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000f82	          0x4889c7	                            mov rdi, rax	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000f85	      0xe800000000	                          call 0x4000f8a	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000f8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f8e	        0x488b7008	                mov rsi, qword [rax + 8]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f92	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f95	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f98	        0x488d45e0	                   lea rax, [rbp - 0x20]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f9c	          0x4189c9	                            mov r9d, ecx	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000f9f	          0x4189d0	                            mov r8d, edx	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000fa2	      0xb900000000	                              mov ecx, 0	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000fa7	      0xba00000000	                              mov edx, 0	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000fac	          0x4889c7	                            mov rdi, rax	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000faf	      0xe800000000	                          call 0x4000fb4	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000fb4	            0x85c0	                           test eax, eax	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000fb6	            0x7513	                           jne 0x4000fcb	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000fb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4000fbc	          0x4889c7	                            mov rdi, rax	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4000fbf	      0xe800000000	                          call 0x4000fc4	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4000fc4	      0xb800000000	                              mov eax, 0	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4000fc9	            0xeb26	                           jmp 0x4000ff1	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4000fcb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000fcf	      0xbe5d000000	                           mov esi, 0x5d	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000fd4	          0x4889c7	                            mov rdi, rax	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000fd7	      0xe800000000	                          call 0x4000fdc	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000fdc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000fe0	      0xbe00000000	                              mov esi, 0	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000fe5	          0x4889c7	                            mov rdi, rax	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000fe8	      0xe800000000	                          call 0x4000fed	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000fed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       732	list.c	ELSE_2	FUNCTION_34
0x4000ff1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       733	list.c	ELSE_2	FUNCTION_34
0x4000ff5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       733	list.c	ELSE_2	FUNCTION_34
0x4000ffe	            0x7405	                            je 0x4001005	       733	list.c	ELSE_2	FUNCTION_34
0x4001000	      0xe800000000	                          call 0x4001005	       733	list.c	ELSE_2	FUNCTION_34
0x4001005	              0xc9	                                   leave	       733	list.c	ELSE_2	FUNCTION_34
0x4001006	              0xc3	                                     ret	       733	list.c	ELSE_2	FUNCTION_34
list_insert_tv	FOR,0:CALL,3:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	27
0x4000b24	              0x55	                                push rbp	       547	list.c	FUNCTION_28
0x4000b25	          0x4889e5	                            mov rbp, rsp	       547	list.c	FUNCTION_28
0x4000b28	        0x4883ec30	                           sub rsp, 0x30	       547	list.c	FUNCTION_28
0x4000b2c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       547	list.c	FUNCTION_28
0x4000b30	        0x488975e0	             mov qword [rbp - 0x20], rsi	       547	list.c	FUNCTION_28
0x4000b34	        0x488955d8	             mov qword [rbp - 0x28], rdx	       547	list.c	FUNCTION_28
0x4000b38	      0xe800000000	                          call 0x4000b3d	       548	list.c	FUNCTION_28	CALL_1
0x4000b3d	        0x488945f8	                mov qword [rbp - 8], rax	       548	list.c	FUNCTION_28	CALL_1
0x4000b41	      0x48837df800	                  cmp qword [rbp - 8], 0	       550	list.c	FUNCTION_28	IF_1
0x4000b46	            0x7507	                           jne 0x4000b4f	       550	list.c	FUNCTION_28	IF_1
0x4000b48	      0xb800000000	                              mov eax, 0	       551	list.c	FUNCTION_28	IF_1
0x4000b4d	            0xeb33	                           jmp 0x4000b82	       551	list.c	FUNCTION_28	IF_1
0x4000b4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       552	list.c	FUNCTION_28	CALL_2
0x4000b53	        0x488d5010	                   lea rdx, [rax + 0x10]	       552	list.c	FUNCTION_28	CALL_2
0x4000b57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       552	list.c	FUNCTION_28	CALL_2
0x4000b5b	          0x4889d6	                            mov rsi, rdx	       552	list.c	FUNCTION_28	CALL_2
0x4000b5e	          0x4889c7	                            mov rdi, rax	       552	list.c	FUNCTION_28	CALL_2
0x4000b61	      0xe800000000	                          call 0x4000b66	       552	list.c	FUNCTION_28	CALL_2
0x4000b66	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       553	list.c	FUNCTION_28	CALL_3
0x4000b6a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       553	list.c	FUNCTION_28	CALL_3
0x4000b6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       553	list.c	FUNCTION_28	CALL_3
0x4000b72	          0x4889ce	                            mov rsi, rcx	       553	list.c	FUNCTION_28	CALL_3
0x4000b75	          0x4889c7	                            mov rdi, rax	       553	list.c	FUNCTION_28	CALL_3
0x4000b78	      0xe800000000	                          call 0x4000b7d	       553	list.c	FUNCTION_28	CALL_3
0x4000b7d	      0xb801000000	                              mov eax, 1	       554	list.c	FUNCTION_28
0x4000b82	              0xc9	                                   leave	       555	list.c	FUNCTION_28
0x4000b83	              0xc3	                                     ret	       555	list.c	FUNCTION_28
list_free	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	16
0x40003cb	              0x55	                                push rbp	       205	list.c	FUNCTION_12
0x40003cc	          0x4889e5	                            mov rbp, rsp	       205	list.c	FUNCTION_12
0x40003cf	        0x4883ec10	                           sub rsp, 0x10	       205	list.c	FUNCTION_12
0x40003d3	        0x48897df8	                mov qword [rbp - 8], rdi	       205	list.c	FUNCTION_12
0x40003d7	    0x8b0500000000	            mov eax, dword [0x040003dd] 	       206	list.c	FUNCTION_12	IF_1
0x40003dd	            0x85c0	                           test eax, eax	       206	list.c	FUNCTION_12	IF_1
0x40003df	            0x7518	                           jne 0x40003f9	       206	list.c	FUNCTION_12	IF_1
0x40003e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x40003e5	          0x4889c7	                            mov rdi, rax	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x40003e8	      0xe850feffff	             call sym.list_free_contents	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x40003ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x40003f1	          0x4889c7	                            mov rdi, rax	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x40003f4	      0xe804ffffff	                 call sym.list_free_list	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x40003f9	              0x90	                                     nop	       211	list.c	FUNCTION_12
0x40003fa	              0xc9	                                   leave	       211	list.c	FUNCTION_12
0x40003fb	              0xc3	                                     ret	       211	list.c	FUNCTION_12
list_len	FOR,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	12
0x400046d	              0x55	                                push rbp	       248	list.c	FUNCTION_16
0x400046e	          0x4889e5	                            mov rbp, rsp	       248	list.c	FUNCTION_16
0x4000471	        0x48897df8	                mov qword [rbp - 8], rdi	       248	list.c	FUNCTION_16
0x4000475	      0x48837df800	                  cmp qword [rbp - 8], 0	       249	list.c	FUNCTION_16	IF_1
0x400047a	            0x7507	                           jne 0x4000483	       249	list.c	FUNCTION_16	IF_1
0x400047c	      0xb800000000	                              mov eax, 0	       250	list.c	FUNCTION_16	IF_1
0x4000481	            0xeb09	                           jmp 0x400048c	       250	list.c	FUNCTION_16	IF_1
0x4000483	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	list.c	FUNCTION_16
0x4000487	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       251	list.c	FUNCTION_16
0x400048a	            0x4898	                                    cdqe	       251	list.c	FUNCTION_16
0x400048c	              0x5d	                                 pop rbp	       252	list.c	FUNCTION_16
0x400048d	              0xc3	                                     ret	       252	list.c	FUNCTION_16
list_append	FOR,0:CALL,0:WHILE,0:ELSE,1:functions,0:IF,1:DO,0:SWITCH,0	38
0x400084c	              0x55	                                push rbp	       424	list.c	FUNCTION_22
0x400084d	          0x4889e5	                            mov rbp, rsp	       424	list.c	FUNCTION_22
0x4000850	        0x48897df8	                mov qword [rbp - 8], rdi	       424	list.c	FUNCTION_22
0x4000854	        0x488975f0	             mov qword [rbp - 0x10], rsi	       424	list.c	FUNCTION_22
0x4000858	        0x488b45f8	                mov rax, qword [rbp - 8]	       425	list.c	FUNCTION_22	IF_1
0x400085c	        0x488b4008	                mov rax, qword [rax + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000860	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4000863	            0x7525	                           jne 0x400088a	       425	list.c	FUNCTION_22	IF_1
0x4000865	        0x488b45f8	                mov rax, qword [rbp - 8]	       428	list.c	FUNCTION_22	IF_1
0x4000869	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       428	list.c	FUNCTION_22	IF_1
0x400086d	          0x488910	                    mov qword [rax], rdx	       428	list.c	FUNCTION_22	IF_1
0x4000870	        0x488b45f8	                mov rax, qword [rbp - 8]	       429	list.c	FUNCTION_22	IF_1
0x4000874	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       429	list.c	FUNCTION_22	IF_1
0x4000878	        0x48895008	                mov qword [rax + 8], rdx	       429	list.c	FUNCTION_22	IF_1
0x400087c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       430	list.c	FUNCTION_22	IF_1
0x4000880	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000888	            0xeb2b	                           jmp 0x40008b5	       430	list.c	FUNCTION_22	IF_1
0x400088a	        0x488b45f8	                mov rax, qword [rbp - 8]	       434	list.c	FUNCTION_22	ELSE_1
0x400088e	        0x488b4008	                mov rax, qword [rax + 8]	       434	list.c	FUNCTION_22	ELSE_1
0x4000892	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       434	list.c	FUNCTION_22	ELSE_1
0x4000896	          0x488910	                    mov qword [rax], rdx	       434	list.c	FUNCTION_22	ELSE_1
0x4000899	        0x488b45f8	                mov rax, qword [rbp - 8]	       435	list.c	FUNCTION_22	ELSE_1
0x400089d	        0x488b5008	                mov rdx, qword [rax + 8]	       435	list.c	FUNCTION_22	ELSE_1
0x40008a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       435	list.c	FUNCTION_22	ELSE_1
0x40008a5	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x40008a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	list.c	FUNCTION_22	ELSE_1
0x40008ad	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       436	list.c	FUNCTION_22	ELSE_1
0x40008b1	        0x48895008	                mov qword [rax + 8], rdx	       436	list.c	FUNCTION_22	ELSE_1
0x40008b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       438	list.c	FUNCTION_22
0x40008b9	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       438	list.c	FUNCTION_22
0x40008bc	          0x8d5001	                      lea edx, [rax + 1]	       438	list.c	FUNCTION_22
0x40008bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       438	list.c	FUNCTION_22
0x40008c3	          0x89503c	             mov dword [rax + 0x3c], edx	       438	list.c	FUNCTION_22
0x40008c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       439	list.c	FUNCTION_22
0x40008ca	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x40008d1	              0x90	                                     nop	       440	list.c	FUNCTION_22
0x40008d2	              0x5d	                                 pop rbp	       440	list.c	FUNCTION_22
0x40008d3	              0xc3	                                     ret	       440	list.c	FUNCTION_22
listitem_remove	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,0:DO,0:SWITCH,0	17
0x4000437	              0x55	                                push rbp	       238	list.c	FUNCTION_15
0x4000438	          0x4889e5	                            mov rbp, rsp	       238	list.c	FUNCTION_15
0x400043b	        0x4883ec10	                           sub rsp, 0x10	       238	list.c	FUNCTION_15
0x400043f	        0x48897df8	                mov qword [rbp - 8], rdi	       238	list.c	FUNCTION_15
0x4000443	        0x488975f0	             mov qword [rbp - 0x10], rsi	       238	list.c	FUNCTION_15
0x4000447	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       239	list.c	FUNCTION_15	CALL_1
0x400044b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       239	list.c	FUNCTION_15	CALL_1
0x400044f	        0x488b45f8	                mov rax, qword [rbp - 8]	       239	list.c	FUNCTION_15	CALL_1
0x4000453	          0x4889ce	                            mov rsi, rcx	       239	list.c	FUNCTION_15	CALL_1
0x4000456	          0x4889c7	                            mov rdi, rax	       239	list.c	FUNCTION_15	CALL_1
0x4000459	      0xe800000000	                          call 0x400045e	       239	list.c	FUNCTION_15	CALL_1
0x400045e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	list.c	FUNCTION_15	CALL_2
0x4000462	          0x4889c7	                            mov rdi, rax	       240	list.c	FUNCTION_15	CALL_2
0x4000465	      0xe800000000	                          call 0x400046a	       240	list.c	FUNCTION_15	CALL_2
0x400046a	              0x90	                                     nop	       241	list.c	FUNCTION_15
0x400046b	              0xc9	                                   leave	       241	list.c	FUNCTION_15
0x400046c	              0xc3	                                     ret	       241	list.c	FUNCTION_15
list_find_nr	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,2:DO,0:SWITCH,0	28
0x4000710	              0x55	                                push rbp	       369	list.c	FUNCTION_19
0x4000711	          0x4889e5	                            mov rbp, rsp	       369	list.c	FUNCTION_19
0x4000714	        0x4883ec30	                           sub rsp, 0x30	       369	list.c	FUNCTION_19
0x4000718	        0x48897de8	             mov qword [rbp - 0x18], rdi	       369	list.c	FUNCTION_19
0x400071c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       369	list.c	FUNCTION_19
0x4000720	        0x488955d8	             mov qword [rbp - 0x28], rdx	       369	list.c	FUNCTION_19
0x4000724	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       372	list.c	FUNCTION_19	CALL_1
0x4000728	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	list.c	FUNCTION_19	CALL_1
0x400072c	          0x4889d6	                            mov rsi, rdx	       372	list.c	FUNCTION_19	CALL_1
0x400072f	          0x4889c7	                            mov rdi, rax	       372	list.c	FUNCTION_19	CALL_1
0x4000732	      0xe800000000	                          call 0x4000737	       372	list.c	FUNCTION_19	CALL_1
0x4000737	        0x488945f8	                mov qword [rbp - 8], rax	       372	list.c	FUNCTION_19	CALL_1
0x400073b	      0x48837df800	                  cmp qword [rbp - 8], 0	       373	list.c	FUNCTION_19	IF_1
0x4000740	            0x751a	                           jne 0x400075c	       373	list.c	FUNCTION_19	IF_1
0x4000742	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       375	list.c	FUNCTION_19	IF_1	IF_2
0x4000747	            0x740a	                            je 0x4000753	       375	list.c	FUNCTION_19	IF_1	IF_2
0x4000749	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       376	list.c	FUNCTION_19	IF_1	IF_2
0x400074d	    0xc70001000000	                      mov dword [rax], 1	       376	list.c	FUNCTION_19	IF_1	IF_2
0x4000753	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       377	list.c	FUNCTION_19	IF_1
0x400075a	            0xeb17	                           jmp 0x4000773	       377	list.c	FUNCTION_19	IF_1
0x400075c	        0x488b45f8	                mov rax, qword [rbp - 8]	       379	list.c	FUNCTION_19	CALL_2
0x4000760	        0x488d5010	                   lea rdx, [rax + 0x10]	       379	list.c	FUNCTION_19	CALL_2
0x4000764	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       379	list.c	FUNCTION_19	CALL_2
0x4000768	          0x4889c6	                            mov rsi, rax	       379	list.c	FUNCTION_19	CALL_2
0x400076b	          0x4889d7	                            mov rdi, rdx	       379	list.c	FUNCTION_19	CALL_2
0x400076e	      0xe800000000	                          call 0x4000773	       379	list.c	FUNCTION_19	CALL_2
0x4000773	              0xc9	                                   leave	       380	list.c	FUNCTION_19
0x4000774	              0xc3	                                     ret	       380	list.c	FUNCTION_19
get_list_tv	FOR,0:CALL,14:WHILE,1:ELSE,1:functions,0:IF,10:DO,0:SWITCH,0	141
0x400139d	              0x55	                                push rbp	       858	list.c	FUNCTION_37
0x400139e	          0x4889e5	                            mov rbp, rsp	       858	list.c	FUNCTION_37
0x40013a1	              0x53	                                push rbx	       858	list.c	FUNCTION_37
0x40013a2	        0x4883ec58	                           sub rsp, 0x58	       858	list.c	FUNCTION_37
0x40013a6	        0x48897db8	             mov qword [rbp - 0x48], rdi	       858	list.c	FUNCTION_37
0x40013aa	        0x488975b0	             mov qword [rbp - 0x50], rsi	       858	list.c	FUNCTION_37
0x40013ae	          0x8955ac	             mov dword [rbp - 0x54], edx	       858	list.c	FUNCTION_37
0x40013b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       858	list.c	FUNCTION_37
0x40013ba	        0x488945e8	             mov qword [rbp - 0x18], rax	       858	list.c	FUNCTION_37
0x40013be	            0x31c0	                            xor eax, eax	       858	list.c	FUNCTION_37
0x40013c0	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       859	list.c	FUNCTION_37
0x40013c8	        0x837dac00	               cmp dword [rbp - 0x54], 0	       863	list.c	FUNCTION_37	IF_1
0x40013cc	            0x741a	                            je 0x40013e8	       863	list.c	FUNCTION_37	IF_1
0x40013ce	      0xe800000000	                          call 0x40013d3	       865	list.c	FUNCTION_37	IF_1	CALL_1
0x40013d3	        0x488945c0	             mov qword [rbp - 0x40], rax	       865	list.c	FUNCTION_37	IF_1	CALL_1
0x40013d7	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       866	list.c	FUNCTION_37	IF_1	IF_2
0x40013dc	            0x750a	                           jne 0x40013e8	       866	list.c	FUNCTION_37	IF_1	IF_2
0x40013de	      0xb800000000	                              mov eax, 0	       867	list.c	FUNCTION_37	IF_1	IF_2
0x40013e3	      0xe98e010000	                           jmp 0x4001576	       867	list.c	FUNCTION_37	IF_1	IF_2
0x40013e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       870	list.c	FUNCTION_37	CALL_2
0x40013ec	          0x488b00	                    mov rax, qword [rax]	       870	list.c	FUNCTION_37	CALL_2
0x40013ef	        0x4883c001	                              add rax, 1	       870	list.c	FUNCTION_37	CALL_2
0x40013f3	          0x4889c7	                            mov rdi, rax	       870	list.c	FUNCTION_37	CALL_2
0x40013f6	      0xe800000000	                          call 0x40013fb	       870	list.c	FUNCTION_37	CALL_2
0x40013fb	          0x4889c2	                            mov rdx, rax	       870	list.c	FUNCTION_37	CALL_2
0x40013fe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       870	list.c	FUNCTION_37	CALL_2
0x4001402	          0x488910	                    mov qword [rax], rdx	       870	list.c	FUNCTION_37	CALL_2
0x4001405	      0xe9c8000000	                           jmp 0x40014d2	       871	list.c	FUNCTION_37	WHILE_1
0x400140a	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x400140d	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001411	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001415	          0x4889ce	                            mov rsi, rcx	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001418	          0x4889c7	                            mov rdi, rax	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x400141b	      0xe800000000	                          call 0x4001420	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001420	            0x85c0	                           test eax, eax	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001422	     0xf84f9000000	                            je 0x4001521	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4001428	        0x837dac00	               cmp dword [rbp - 0x54], 0	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x400142c	            0x744d	                            je 0x400147b	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x400142e	      0xe800000000	                          call 0x4001433	       877	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_4
0x4001433	        0x488945c8	             mov qword [rbp - 0x38], rax	       877	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_4
0x4001437	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400143c	            0x7431	                            je 0x400146f	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400143e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4001442	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4001446	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400144a	        0x48894110	             mov qword [rcx + 0x10], rax	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400144e	        0x48895118	             mov qword [rcx + 0x18], rdx	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4001452	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       881	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4001456	        0xc6401400	                mov byte [rax + 0x14], 0	       881	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400145a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x400145e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x4001462	          0x4889d6	                            mov rsi, rdx	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x4001465	          0x4889c7	                            mov rdi, rax	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x4001468	      0xe800000000	                          call 0x400146d	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x400146d	            0xeb0c	                           jmp 0x400147b	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x400146f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x4001473	          0x4889c7	                            mov rdi, rax	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x4001476	      0xe800000000	                          call 0x400147b	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x400147b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x400147f	          0x488b00	                    mov rax, qword [rax]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001482	           0xfb600	                   movzx eax, byte [rax]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001485	            0x3c5d	                            cmp al, 0x5d	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001487	            0x746b	                            je 0x40014f4	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001489	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x400148d	          0x488b00	                    mov rax, qword [rax]	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4001490	           0xfb600	                   movzx eax, byte [rax]	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4001493	            0x3c2c	                            cmp al, 0x2c	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4001495	            0x741e	                            je 0x40014b5	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4001497	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x400149b	          0x488b18	                    mov rbx, qword [rax]	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x400149e	      0xbf00000000	                              mov edi, 0	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40014a3	      0xe800000000	                          call 0x40014a8	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40014a8	          0x4889de	                            mov rsi, rbx	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40014ab	          0x4889c7	                            mov rdi, rax	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40014ae	      0xe800000000	                          call 0x40014b3	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40014b3	            0xeb6d	                           jmp 0x4001522	       893	list.c	FUNCTION_37	WHILE_1	IF_7
0x40014b5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014b9	          0x488b00	                    mov rax, qword [rax]	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014bc	        0x4883c001	                              add rax, 1	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014c0	          0x4889c7	                            mov rdi, rax	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014c3	      0xe800000000	                          call 0x40014c8	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014c8	          0x4889c2	                            mov rdx, rax	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014cf	          0x488910	                    mov qword [rax], rdx	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x40014d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       871	list.c	FUNCTION_37	WHILE_1
0x40014d6	          0x488b00	                    mov rax, qword [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x40014d9	           0xfb600	                   movzx eax, byte [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x40014dc	            0x3c5d	                            cmp al, 0x5d	       871	list.c	FUNCTION_37	WHILE_1
0x40014de	            0x7415	                            je 0x40014f5	       871	list.c	FUNCTION_37	WHILE_1
0x40014e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       871	list.c	FUNCTION_37	WHILE_1
0x40014e4	          0x488b00	                    mov rax, qword [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x40014e7	           0xfb600	                   movzx eax, byte [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x40014ea	            0x84c0	                             test al, al	       871	list.c	FUNCTION_37	WHILE_1
0x40014ec	     0xf8518ffffff	                           jne 0x400140a	       871	list.c	FUNCTION_37	WHILE_1
0x40014f2	            0xeb01	                           jmp 0x40014f5	       871	list.c	FUNCTION_37	WHILE_1
0x40014f4	              0x90	                                     nop	       889	list.c	FUNCTION_37	WHILE_1	IF_6
0x40014f5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       898	list.c	FUNCTION_37	IF_8
0x40014f9	          0x488b00	                    mov rax, qword [rax]	       898	list.c	FUNCTION_37	IF_8
0x40014fc	           0xfb600	                   movzx eax, byte [rax]	       898	list.c	FUNCTION_37	IF_8
0x40014ff	            0x3c5d	                            cmp al, 0x5d	       898	list.c	FUNCTION_37	IF_8
0x4001501	            0x7438	                            je 0x400153b	       898	list.c	FUNCTION_37	IF_8
0x4001503	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001507	          0x488b18	                    mov rbx, qword [rax]	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400150a	      0xbf00000000	                              mov edi, 0	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400150f	      0xe800000000	                          call 0x4001514	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001514	          0x4889de	                            mov rsi, rbx	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001517	          0x4889c7	                            mov rdi, rax	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400151a	      0xe800000000	                          call 0x400151f	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400151f	            0xeb01	                           jmp 0x4001522	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001521	              0x90	                                     nop	       874	list.c	FUNCTION_37	WHILE_1	IF_3
0x4001522	        0x837dac00	               cmp dword [rbp - 0x54], 0	       902	list.c	FUNCTION_37	IF_8	IF_9
0x4001526	            0x740c	                            je 0x4001534	       902	list.c	FUNCTION_37	IF_8	IF_9
0x4001528	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       903	list.c	FUNCTION_37	IF_8	CALL_12
0x400152c	          0x4889c7	                            mov rdi, rax	       903	list.c	FUNCTION_37	IF_8	CALL_12
0x400152f	      0xe800000000	                          call 0x4001534	       903	list.c	FUNCTION_37	IF_8	CALL_12
0x4001534	      0xb800000000	                              mov eax, 0	       904	list.c	FUNCTION_37	IF_8
0x4001539	            0xeb3b	                           jmp 0x4001576	       904	list.c	FUNCTION_37	IF_8
0x400153b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       907	list.c	FUNCTION_37	CALL_13
0x400153f	          0x488b00	                    mov rax, qword [rax]	       907	list.c	FUNCTION_37	CALL_13
0x4001542	        0x4883c001	                              add rax, 1	       907	list.c	FUNCTION_37	CALL_13
0x4001546	          0x4889c7	                            mov rdi, rax	       907	list.c	FUNCTION_37	CALL_13
0x4001549	      0xe800000000	                          call 0x400154e	       907	list.c	FUNCTION_37	CALL_13
0x400154e	          0x4889c2	                            mov rdx, rax	       907	list.c	FUNCTION_37	CALL_13
0x4001551	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       907	list.c	FUNCTION_37	CALL_13
0x4001555	          0x488910	                    mov qword [rax], rdx	       907	list.c	FUNCTION_37	CALL_13
0x4001558	        0x837dac00	               cmp dword [rbp - 0x54], 0	       908	list.c	FUNCTION_37	IF_10
0x400155c	            0x7413	                            je 0x4001571	       908	list.c	FUNCTION_37	IF_10
0x400155e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       909	list.c	FUNCTION_37	CALL_14
0x4001562	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       909	list.c	FUNCTION_37	CALL_14
0x4001566	          0x4889d6	                            mov rsi, rdx	       909	list.c	FUNCTION_37	CALL_14
0x4001569	          0x4889c7	                            mov rdi, rax	       909	list.c	FUNCTION_37	CALL_14
0x400156c	      0xe800000000	                          call 0x4001571	       909	list.c	FUNCTION_37	CALL_14
0x4001571	      0xb801000000	                              mov eax, 1	       911	list.c	FUNCTION_37
0x4001576	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       912	list.c	FUNCTION_37
0x400157a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       912	list.c	FUNCTION_37
0x4001583	            0x7405	                            je 0x400158a	       912	list.c	FUNCTION_37
0x4001585	      0xe800000000	                          call 0x400158a	       912	list.c	FUNCTION_37
0x400158a	        0x4883c458	                           add rsp, 0x58	       912	list.c	FUNCTION_37
0x400158e	              0x5b	                                 pop rbx	       912	list.c	FUNCTION_37
0x400158f	              0x5d	                                 pop rbp	       912	list.c	FUNCTION_37
0x4001590	              0xc3	                                     ret	       912	list.c	FUNCTION_37
listitem_alloc	FOR,0:CALL,1:WHILE,0:ELSE,0:functions,0:IF,0:DO,0:SWITCH,0	6
0x40003fc	              0x55	                                push rbp	       219	list.c	FUNCTION_13
0x40003fd	          0x4889e5	                            mov rbp, rsp	       219	list.c	FUNCTION_13
0x4000400	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000405	      0xe800000000	                          call 0x400040a	       220	list.c	FUNCTION_13	CALL_1
0x400040a	              0x5d	                                 pop rbp	       221	list.c	FUNCTION_13
0x400040b	              0xc3	                                     ret	       221	list.c	FUNCTION_13
list_free_nonref	FOR,1:CALL,1:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	30
0x4000295	              0x55	                                push rbp	       153	list.c	FUNCTION_9
0x4000296	          0x4889e5	                            mov rbp, rsp	       153	list.c	FUNCTION_9
0x4000299	        0x4883ec20	                           sub rsp, 0x20	       153	list.c	FUNCTION_9
0x400029d	          0x897dec	             mov dword [rbp - 0x14], edi	       153	list.c	FUNCTION_9
0x40002a0	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       155	list.c	FUNCTION_9
0x40002a7	    0x488b05000000	            mov rax, qword [0x040002ae] 	       157	list.c	FUNCTION_9	FOR_1
0x40002ae	        0x488945f8	                mov qword [rbp - 8], rax	       157	list.c	FUNCTION_9	FOR_1
0x40002b2	            0xeb3d	                           jmp 0x40002f1	       157	list.c	FUNCTION_9	FOR_1
0x40002b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40002b8	          0x8b4044	            mov eax, dword [rax + 0x44] 	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40002bb	          0x3345ec	             xor eax, dword [rbp - 0x14]	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40002be	          0x83e0fe	                     and eax, 0xfffffffe	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40002c1	            0x85c0	                           test eax, eax	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40002c3	            0x7420	                            je 0x40002e5	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40002c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x40002c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x40002cd	          0x4885c0	                           test rax, rax	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x40002d0	            0x7513	                           jne 0x40002e5	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x40002d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40002d6	          0x4889c7	                            mov rdi, rax	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40002d9	      0xe85fffffff	             call sym.list_free_contents	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40002de	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       165	list.c	FUNCTION_9	FOR_1	IF_1
0x40002e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	list.c	FUNCTION_9	FOR_1
0x40002e9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       157	list.c	FUNCTION_9	FOR_1
0x40002ed	        0x488945f8	                mov qword [rbp - 8], rax	       157	list.c	FUNCTION_9	FOR_1
0x40002f1	      0x48837df800	                  cmp qword [rbp - 8], 0	       157	list.c	FUNCTION_9	FOR_1
0x40002f6	            0x75bc	                           jne 0x40002b4	       157	list.c	FUNCTION_9	FOR_1
0x40002f8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       167	list.c	FUNCTION_9
0x40002fb	              0xc9	                                   leave	       168	list.c	FUNCTION_9
0x40002fc	              0xc3	                                     ret	       168	list.c	FUNCTION_9
list_free_list	FOR,0:CALL,1:WHILE,0:ELSE,1:functions,0:IF,2:DO,0:SWITCH,0	32
0x40002fd	              0x55	                                push rbp	       172	list.c	FUNCTION_10
0x40002fe	          0x4889e5	                            mov rbp, rsp	       172	list.c	FUNCTION_10
0x4000301	        0x4883ec10	                           sub rsp, 0x10	       172	list.c	FUNCTION_10
0x4000305	        0x48897df8	                mov qword [rbp - 8], rdi	       172	list.c	FUNCTION_10
0x4000309	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	list.c	FUNCTION_10	IF_1
0x400030d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       174	list.c	FUNCTION_10	IF_1
0x4000311	          0x4885c0	                           test rax, rax	       174	list.c	FUNCTION_10	IF_1
0x4000314	            0x7511	                           jne 0x4000327	       174	list.c	FUNCTION_10	IF_1
0x4000316	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	list.c	FUNCTION_10	IF_1
0x400031a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       175	list.c	FUNCTION_10	IF_1
0x400031e	    0x488905000000	            mov qword [0x04000325], rax 	       175	list.c	FUNCTION_10	IF_1
0x4000325	            0xeb14	                           jmp 0x400033b	       175	list.c	FUNCTION_10	IF_1
0x4000327	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	list.c	FUNCTION_10	ELSE_1
0x400032b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       177	list.c	FUNCTION_10	ELSE_1
0x400032f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       177	list.c	FUNCTION_10	ELSE_1
0x4000333	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x4000337	        0x48895028	             mov qword [rax + 0x28], rdx	       177	list.c	FUNCTION_10	ELSE_1
0x400033b	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	list.c	FUNCTION_10	IF_2
0x400033f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       178	list.c	FUNCTION_10	IF_2
0x4000343	          0x4885c0	                           test rax, rax	       178	list.c	FUNCTION_10	IF_2
0x4000346	            0x7414	                            je 0x400035c	       178	list.c	FUNCTION_10	IF_2
0x4000348	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	list.c	FUNCTION_10	IF_2
0x400034c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       179	list.c	FUNCTION_10	IF_2
0x4000350	        0x488b55f8	                mov rdx, qword [rbp - 8]	       179	list.c	FUNCTION_10	IF_2
0x4000354	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       179	list.c	FUNCTION_10	IF_2
0x4000358	        0x48895030	             mov qword [rax + 0x30], rdx	       179	list.c	FUNCTION_10	IF_2
0x400035c	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	list.c	FUNCTION_10	CALL_1
0x4000360	          0x4889c7	                            mov rdi, rax	       181	list.c	FUNCTION_10	CALL_1
0x4000363	      0xe800000000	                          call 0x4000368	       181	list.c	FUNCTION_10	CALL_1
0x4000368	              0x90	                                     nop	       182	list.c	FUNCTION_10
0x4000369	              0xc9	                                   leave	       182	list.c	FUNCTION_10
0x400036a	              0xc3	                                     ret	       182	list.c	FUNCTION_10
list_append_list	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	31
0x400099d	              0x55	                                push rbp	       485	list.c	FUNCTION_25
0x400099e	          0x4889e5	                            mov rbp, rsp	       485	list.c	FUNCTION_25
0x40009a1	        0x4883ec20	                           sub rsp, 0x20	       485	list.c	FUNCTION_25
0x40009a5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       485	list.c	FUNCTION_25
0x40009a9	        0x488975e0	             mov qword [rbp - 0x20], rsi	       485	list.c	FUNCTION_25
0x40009ad	      0xe800000000	                          call 0x40009b2	       486	list.c	FUNCTION_25	CALL_1
0x40009b2	        0x488945f8	                mov qword [rbp - 8], rax	       486	list.c	FUNCTION_25	CALL_1
0x40009b6	      0x48837df800	                  cmp qword [rbp - 8], 0	       488	list.c	FUNCTION_25	IF_1
0x40009bb	            0x7507	                           jne 0x40009c4	       488	list.c	FUNCTION_25	IF_1
0x40009bd	      0xb800000000	                              mov eax, 0	       489	list.c	FUNCTION_25	IF_1
0x40009c2	            0xeb48	                           jmp 0x4000a0c	       489	list.c	FUNCTION_25	IF_1
0x40009c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	list.c	FUNCTION_25
0x40009c8	    0xc74010050000	               mov dword [rax + 0x10], 5	       490	list.c	FUNCTION_25
0x40009cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       491	list.c	FUNCTION_25
0x40009d3	        0xc6401400	                mov byte [rax + 0x14], 0	       491	list.c	FUNCTION_25
0x40009d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	list.c	FUNCTION_25
0x40009db	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       492	list.c	FUNCTION_25
0x40009df	        0x48895018	             mov qword [rax + 0x18], rdx	       492	list.c	FUNCTION_25
0x40009e3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       493	list.c	FUNCTION_25	CALL_2
0x40009e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       493	list.c	FUNCTION_25	CALL_2
0x40009eb	          0x4889d6	                            mov rsi, rdx	       493	list.c	FUNCTION_25	CALL_2
0x40009ee	          0x4889c7	                            mov rdi, rax	       493	list.c	FUNCTION_25	CALL_2
0x40009f1	      0xe800000000	                          call 0x40009f6	       493	list.c	FUNCTION_25	CALL_2
0x40009f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       494	list.c	FUNCTION_25
0x40009fa	          0x8b4038	            mov eax, dword [rax + 0x38] 	       494	list.c	FUNCTION_25
0x40009fd	          0x8d5001	                      lea edx, [rax + 1]	       494	list.c	FUNCTION_25
0x4000a00	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       494	list.c	FUNCTION_25
0x4000a04	          0x895038	             mov dword [rax + 0x38], edx	       494	list.c	FUNCTION_25
0x4000a07	      0xb801000000	                              mov eax, 1	       495	list.c	FUNCTION_25
0x4000a0c	              0xc9	                                   leave	       496	list.c	FUNCTION_25
0x4000a0d	              0xc3	                                     ret	       496	list.c	FUNCTION_25
list_alloc	FOR,0:CALL,1:WHILE,0:ELSE,0:functions,0:IF,2:DO,0:SWITCH,0	24
0x4000119	              0x55	                                push rbp	        72	list.c	FUNCTION_4
0x400011a	          0x4889e5	                            mov rbp, rsp	        72	list.c	FUNCTION_4
0x400011d	        0x4883ec10	                           sub rsp, 0x10	        72	list.c	FUNCTION_4
0x4000121	      0xbf50000000	                           mov edi, 0x50	        75	list.c	FUNCTION_4	CALL_1
0x4000126	      0xe800000000	                          call 0x400012b	        75	list.c	FUNCTION_4	CALL_1
0x400012b	        0x488945f8	                mov qword [rbp - 8], rax	        75	list.c	FUNCTION_4	CALL_1
0x400012f	      0x48837df800	                  cmp qword [rbp - 8], 0	        76	list.c	FUNCTION_4	IF_1
0x4000134	            0x7441	                            je 0x4000177	        76	list.c	FUNCTION_4	IF_1
0x4000136	    0x488b05000000	            mov rax, qword [0x0400013d] 	        79	list.c	FUNCTION_4	IF_1	IF_2
0x400013d	          0x4885c0	                           test rax, rax	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000140	            0x740f	                            je 0x4000151	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000142	    0x488b05000000	            mov rax, qword [0x04000149] 	        80	list.c	FUNCTION_4	IF_1	IF_2
0x4000149	        0x488b55f8	                mov rdx, qword [rbp - 8]	        80	list.c	FUNCTION_4	IF_1	IF_2
0x400014d	        0x48895030	             mov qword [rax + 0x30], rdx	        80	list.c	FUNCTION_4	IF_1	IF_2
0x4000151	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	list.c	FUNCTION_4	IF_1
0x4000155	    0x48c740300000	               mov qword [rax + 0x30], 0	        81	list.c	FUNCTION_4	IF_1
0x400015d	    0x488b15000000	            mov rdx, qword [0x04000164] 	        82	list.c	FUNCTION_4	IF_1
0x4000164	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	list.c	FUNCTION_4	IF_1
0x4000168	        0x48895028	             mov qword [rax + 0x28], rdx	        82	list.c	FUNCTION_4	IF_1
0x400016c	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	list.c	FUNCTION_4	IF_1
0x4000170	    0x488905000000	            mov qword [0x04000177], rax 	        83	list.c	FUNCTION_4	IF_1
0x4000177	        0x488b45f8	                mov rax, qword [rbp - 8]	        85	list.c	FUNCTION_4
0x400017b	              0xc9	                                   leave	        86	list.c	FUNCTION_4
0x400017c	              0xc3	                                     ret	        86	list.c	FUNCTION_4
rettv_list_alloc	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	20
0x400017d	              0x55	                                push rbp	        94	list.c	FUNCTION_5
0x400017e	          0x4889e5	                            mov rbp, rsp	        94	list.c	FUNCTION_5
0x4000181	        0x4883ec20	                           sub rsp, 0x20	        94	list.c	FUNCTION_5
0x4000185	        0x48897de8	             mov qword [rbp - 0x18], rdi	        94	list.c	FUNCTION_5
0x4000189	      0xe800000000	                          call 0x400018e	        95	list.c	FUNCTION_5	CALL_1
0x400018e	        0x488945f8	                mov qword [rbp - 8], rax	        95	list.c	FUNCTION_5	CALL_1
0x4000192	      0x48837df800	                  cmp qword [rbp - 8], 0	        97	list.c	FUNCTION_5	IF_1
0x4000197	            0x7507	                           jne 0x40001a0	        97	list.c	FUNCTION_5	IF_1
0x4000199	      0xb800000000	                              mov eax, 0	        98	list.c	FUNCTION_5	IF_1
0x400019e	            0xeb20	                           jmp 0x40001c0	        98	list.c	FUNCTION_5	IF_1
0x40001a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	list.c	FUNCTION_5
0x40001a4	        0xc6400400	                   mov byte [rax + 4], 0	       100	list.c	FUNCTION_5
0x40001a8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       101	list.c	FUNCTION_5	CALL_2
0x40001ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	list.c	FUNCTION_5	CALL_2
0x40001b0	          0x4889d6	                            mov rsi, rdx	       101	list.c	FUNCTION_5	CALL_2
0x40001b3	          0x4889c7	                            mov rdi, rax	       101	list.c	FUNCTION_5	CALL_2
0x40001b6	      0xe800000000	                          call 0x40001bb	       101	list.c	FUNCTION_5	CALL_2
0x40001bb	      0xb801000000	                              mov eax, 1	       102	list.c	FUNCTION_5
0x40001c0	              0xc9	                                   leave	       103	list.c	FUNCTION_5
0x40001c1	              0xc3	                                     ret	       103	list.c	FUNCTION_5
list_idx_of_item	FOR,1:CALL,0:WHILE,0:ELSE,0:functions,0:IF,2:DO,0:SWITCH,0	30
0x40007dc	              0x55	                                push rbp	       405	list.c	FUNCTION_21
0x40007dd	          0x4889e5	                            mov rbp, rsp	       405	list.c	FUNCTION_21
0x40007e0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       405	list.c	FUNCTION_21
0x40007e4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       405	list.c	FUNCTION_21
0x40007e8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       406	list.c	FUNCTION_21
0x40007f0	      0x48837de800	               cmp qword [rbp - 0x18], 0	       409	list.c	FUNCTION_21	IF_1
0x40007f5	            0x7509	                           jne 0x4000800	       409	list.c	FUNCTION_21	IF_1
0x40007f7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       410	list.c	FUNCTION_21	IF_1
0x40007fe	            0xeb4a	                           jmp 0x400084a	       410	list.c	FUNCTION_21	IF_1
0x4000800	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       411	list.c	FUNCTION_21
0x4000808	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	list.c	FUNCTION_21	FOR_1
0x400080c	          0x488b00	                    mov rax, qword [rax]	       412	list.c	FUNCTION_21	FOR_1
0x400080f	        0x488945f8	                mov qword [rbp - 8], rax	       412	list.c	FUNCTION_21	FOR_1
0x4000813	            0xeb10	                           jmp 0x4000825	       412	list.c	FUNCTION_21	FOR_1
0x4000815	      0x488345f001	               add qword [rbp - 0x10], 1	       413	list.c	FUNCTION_21	FOR_1
0x400081a	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	list.c	FUNCTION_21	FOR_1
0x400081e	          0x488b00	                    mov rax, qword [rax]	       412	list.c	FUNCTION_21	FOR_1
0x4000821	        0x488945f8	                mov qword [rbp - 8], rax	       412	list.c	FUNCTION_21	FOR_1
0x4000825	      0x48837df800	                  cmp qword [rbp - 8], 0	       412	list.c	FUNCTION_21	FOR_1
0x400082a	            0x740a	                            je 0x4000836	       412	list.c	FUNCTION_21	FOR_1
0x400082c	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	list.c	FUNCTION_21	FOR_1
0x4000830	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       412	list.c	FUNCTION_21	FOR_1
0x4000834	            0x75df	                           jne 0x4000815	       412	list.c	FUNCTION_21	FOR_1
0x4000836	      0x48837df800	                  cmp qword [rbp - 8], 0	       414	list.c	FUNCTION_21	IF_2
0x400083b	            0x7509	                           jne 0x4000846	       414	list.c	FUNCTION_21	IF_2
0x400083d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       415	list.c	FUNCTION_21	IF_2
0x4000844	            0xeb04	                           jmp 0x400084a	       415	list.c	FUNCTION_21	IF_2
0x4000846	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       416	list.c	FUNCTION_21
0x400084a	              0x5d	                                 pop rbp	       417	list.c	FUNCTION_21
0x400084b	              0xc3	                                     ret	       417	list.c	FUNCTION_21
list_find	FOR,0:CALL,0:WHILE,2:ELSE,4:functions,0:IF,7:DO,0:SWITCH,0	118
0x4000583	              0x55	                                push rbp	       288	list.c	FUNCTION_18
0x4000584	          0x4889e5	                            mov rbp, rsp	       288	list.c	FUNCTION_18
0x4000587	        0x48897de8	             mov qword [rbp - 0x18], rdi	       288	list.c	FUNCTION_18
0x400058b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       288	list.c	FUNCTION_18
0x400058f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       292	list.c	FUNCTION_18	IF_1
0x4000594	            0x750a	                           jne 0x40005a0	       292	list.c	FUNCTION_18	IF_1
0x4000596	      0xb800000000	                              mov eax, 0	       293	list.c	FUNCTION_18	IF_1
0x400059b	      0xe96e010000	                           jmp 0x400070e	       293	list.c	FUNCTION_18	IF_1
0x40005a0	      0x48837de000	               cmp qword [rbp - 0x20], 0	       296	list.c	FUNCTION_18	IF_2
0x40005a5	            0x790d	                           jns 0x40005b4	       296	list.c	FUNCTION_18	IF_2
0x40005a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       297	list.c	FUNCTION_18	IF_2
0x40005ab	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       297	list.c	FUNCTION_18	IF_2
0x40005ae	            0x4898	                                    cdqe	       297	list.c	FUNCTION_18	IF_2
0x40005b0	        0x480145e0	            add qword [rbp - 0x20], rax 	       297	list.c	FUNCTION_18	IF_2
0x40005b4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       300	list.c	FUNCTION_18	IF_3
0x40005b9	            0x780f	                            js 0x40005ca	       300	list.c	FUNCTION_18	IF_3
0x40005bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	list.c	FUNCTION_18	IF_3
0x40005bf	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       300	list.c	FUNCTION_18	IF_3
0x40005c2	            0x4898	                                    cdqe	       300	list.c	FUNCTION_18	IF_3
0x40005c4	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       300	list.c	FUNCTION_18	IF_3
0x40005c8	            0x7f0a	                            jg 0x40005d4	       300	list.c	FUNCTION_18	IF_3
0x40005ca	      0xb800000000	                              mov eax, 0	       301	list.c	FUNCTION_18	IF_3
0x40005cf	      0xe93a010000	                           jmp 0x400070e	       301	list.c	FUNCTION_18	IF_3
0x40005d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       304	list.c	FUNCTION_18	IF_4
0x40005d8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       304	list.c	FUNCTION_18	IF_4
0x40005dc	          0x4885c0	                           test rax, rax	       304	list.c	FUNCTION_18	IF_4
0x40005df	     0xf848a000000	                            je 0x400066f	       304	list.c	FUNCTION_18	IF_4
0x40005e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005e9	          0x8b4040	            mov eax, dword [rax + 0x40] 	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005ec	            0x89c2	                            mov edx, eax	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005ee	          0xc1ea1f	                           shr edx, 0x1f	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005f1	             0x1d0	                            add eax, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005f3	            0xd1f8	                              sar eax, 1	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005f5	            0x4898	                                    cdqe	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005f7	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005fb	            0x7e18	                           jle 0x4000615	       306	list.c	FUNCTION_18	IF_4	IF_5
0x40005fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x4000601	          0x488b00	                    mov rax, qword [rax]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x4000604	        0x488945f0	             mov qword [rbp - 0x10], rax	       309	list.c	FUNCTION_18	IF_4	IF_5
0x4000608	    0x48c745f80000	                  mov qword [rbp - 8], 0	       310	list.c	FUNCTION_18	IF_4	IF_5
0x4000610	      0xe9b5000000	                           jmp 0x40006ca	       310	list.c	FUNCTION_18	IF_4	IF_5
0x4000615	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000619	          0x8b5040	            mov edx, dword [rax + 0x40] 	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400061c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000620	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000623	             0x1d0	                            add eax, edx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000625	            0x89c2	                            mov edx, eax	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000627	          0xc1ea1f	                           shr edx, 0x1f	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400062a	             0x1d0	                            add eax, edx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400062c	            0xd1f8	                              sar eax, 1	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400062e	            0x4898	                                    cdqe	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000630	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000634	            0x7d1e	                           jge 0x4000654	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000636	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400063a	        0x488b4008	                mov rax, qword [rax + 8]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400063e	        0x488945f0	             mov qword [rbp - 0x10], rax	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000642	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000646	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000649	          0x83e801	                              sub eax, 1	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400064c	            0x4898	                                    cdqe	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x400064e	        0x488945f8	                mov qword [rbp - 8], rax	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000652	            0xeb76	                           jmp 0x40006ca	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x4000654	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       321	list.c	FUNCTION_18	IF_4	ELSE_2
0x4000658	        0x488b4018	            mov rax, qword [rax + 0x18] 	       321	list.c	FUNCTION_18	IF_4	ELSE_2
0x400065c	        0x488945f0	             mov qword [rbp - 0x10], rax	       321	list.c	FUNCTION_18	IF_4	ELSE_2
0x4000660	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x4000664	          0x8b4040	            mov eax, dword [rax + 0x40] 	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x4000667	            0x4898	                                    cdqe	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x4000669	        0x488945f8	                mov qword [rbp - 8], rax	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x400066d	            0xeb5b	                           jmp 0x40006ca	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x400066f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000673	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000676	            0x89c2	                            mov edx, eax	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000678	          0xc1ea1f	                           shr edx, 0x1f	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x400067b	             0x1d0	                            add eax, edx	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x400067d	            0xd1f8	                              sar eax, 1	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x400067f	            0x4898	                                    cdqe	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000681	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000685	            0x7e15	                           jle 0x400069c	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000687	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x400068b	          0x488b00	                    mov rax, qword [rax]	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x400068e	        0x488945f0	             mov qword [rbp - 0x10], rax	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000692	    0x48c745f80000	                  mov qword [rbp - 8], 0	       331	list.c	FUNCTION_18	ELSE_3	IF_7
0x400069a	            0xeb2e	                           jmp 0x40006ca	       331	list.c	FUNCTION_18	ELSE_3	IF_7
0x400069c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006a0	        0x488b4008	                mov rax, qword [rax + 8]	       336	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006a4	        0x488945f0	             mov qword [rbp - 0x10], rax	       336	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006ac	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006af	          0x83e801	                              sub eax, 1	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006b2	            0x4898	                                    cdqe	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006b4	        0x488945f8	                mov qword [rbp - 8], rax	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40006b8	            0xeb10	                           jmp 0x40006ca	       341	list.c	FUNCTION_18	WHILE_1
0x40006ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       344	list.c	FUNCTION_18	WHILE_1
0x40006be	          0x488b00	                    mov rax, qword [rax]	       344	list.c	FUNCTION_18	WHILE_1
0x40006c1	        0x488945f0	             mov qword [rbp - 0x10], rax	       344	list.c	FUNCTION_18	WHILE_1
0x40006c5	      0x488345f801	                  add qword [rbp - 8], 1	       345	list.c	FUNCTION_18	WHILE_1
0x40006ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       341	list.c	FUNCTION_18	WHILE_1
0x40006ce	        0x483b45f8	                cmp rax, qword [rbp - 8]	       341	list.c	FUNCTION_18	WHILE_1
0x40006d2	            0x7fe6	                            jg 0x40006ba	       341	list.c	FUNCTION_18	WHILE_1
0x40006d4	            0xeb11	                           jmp 0x40006e7	       347	list.c	FUNCTION_18	WHILE_2
0x40006d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       350	list.c	FUNCTION_18	WHILE_2
0x40006da	        0x488b4008	                mov rax, qword [rax + 8]	       350	list.c	FUNCTION_18	WHILE_2
0x40006de	        0x488945f0	             mov qword [rbp - 0x10], rax	       350	list.c	FUNCTION_18	WHILE_2
0x40006e2	      0x48836df801	                  sub qword [rbp - 8], 1	       351	list.c	FUNCTION_18	WHILE_2
0x40006e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       347	list.c	FUNCTION_18	WHILE_2
0x40006eb	        0x483b45f8	                cmp rax, qword [rbp - 8]	       347	list.c	FUNCTION_18	WHILE_2
0x40006ef	            0x7ce5	                            jl 0x40006d6	       347	list.c	FUNCTION_18	WHILE_2
0x40006f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	list.c	FUNCTION_18
0x40006f5	            0x89c2	                            mov edx, eax	       355	list.c	FUNCTION_18
0x40006f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	list.c	FUNCTION_18
0x40006fb	          0x895040	             mov dword [rax + 0x40], edx	       355	list.c	FUNCTION_18
0x40006fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	list.c	FUNCTION_18
0x4000702	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       356	list.c	FUNCTION_18
0x4000706	        0x48895018	             mov qword [rax + 0x18], rdx	       356	list.c	FUNCTION_18
0x400070a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	list.c	FUNCTION_18
0x400070e	              0x5d	                                 pop rbp	       359	list.c	FUNCTION_18
0x400070f	              0xc3	                                     ret	       359	list.c	FUNCTION_18
list_find_str	FOR,0:CALL,4:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	29
0x4000775	              0x55	                                push rbp	       387	list.c	FUNCTION_20
0x4000776	          0x4889e5	                            mov rbp, rsp	       387	list.c	FUNCTION_20
0x4000779	        0x4883ec20	                           sub rsp, 0x20	       387	list.c	FUNCTION_20
0x400077d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       387	list.c	FUNCTION_20
0x4000781	        0x488975e0	             mov qword [rbp - 0x20], rsi	       387	list.c	FUNCTION_20
0x4000785	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       390	list.c	FUNCTION_20	CALL_1
0x4000789	        0x488d50ff	                      lea rdx, [rax - 1]	       390	list.c	FUNCTION_20	CALL_1
0x400078d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	list.c	FUNCTION_20	CALL_1
0x4000791	          0x4889d6	                            mov rsi, rdx	       390	list.c	FUNCTION_20	CALL_1
0x4000794	          0x4889c7	                            mov rdi, rax	       390	list.c	FUNCTION_20	CALL_1
0x4000797	      0xe800000000	                          call 0x400079c	       390	list.c	FUNCTION_20	CALL_1
0x400079c	        0x488945f8	                mov qword [rbp - 8], rax	       390	list.c	FUNCTION_20	CALL_1
0x40007a0	      0x48837df800	                  cmp qword [rbp - 8], 0	       391	list.c	FUNCTION_20	IF_1
0x40007a5	            0x7523	                           jne 0x40007ca	       391	list.c	FUNCTION_20	IF_1
0x40007a7	      0xbf00000000	                              mov edi, 0	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40007ac	      0xe800000000	                          call 0x40007b1	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40007b1	          0x4889c2	                            mov rdx, rax	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40007b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40007b8	          0x4889c6	                            mov rsi, rax	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40007bb	          0x4889d7	                            mov rdi, rdx	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40007be	      0xe800000000	                          call 0x40007c3	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40007c3	      0xb800000000	                              mov eax, 0	       394	list.c	FUNCTION_20	IF_1
0x40007c8	            0xeb10	                           jmp 0x40007da	       394	list.c	FUNCTION_20	IF_1
0x40007ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       396	list.c	FUNCTION_20	CALL_4
0x40007ce	        0x4883c010	                           add rax, 0x10	       396	list.c	FUNCTION_20	CALL_4
0x40007d2	          0x4889c7	                            mov rdi, rax	       396	list.c	FUNCTION_20	CALL_4
0x40007d5	      0xe800000000	                          call 0x40007da	       396	list.c	FUNCTION_20	CALL_4
0x40007da	              0xc9	                                   leave	       397	list.c	FUNCTION_20
0x40007db	              0xc3	                                     ret	       397	list.c	FUNCTION_20
list_append_tv	FOR,0:CALL,3:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	25
0x40008d4	              0x55	                                push rbp	       448	list.c	FUNCTION_23
0x40008d5	          0x4889e5	                            mov rbp, rsp	       448	list.c	FUNCTION_23
0x40008d8	        0x4883ec20	                           sub rsp, 0x20	       448	list.c	FUNCTION_23
0x40008dc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       448	list.c	FUNCTION_23
0x40008e0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       448	list.c	FUNCTION_23
0x40008e4	      0xe800000000	                          call 0x40008e9	       449	list.c	FUNCTION_23	CALL_1
0x40008e9	        0x488945f8	                mov qword [rbp - 8], rax	       449	list.c	FUNCTION_23	CALL_1
0x40008ed	      0x48837df800	                  cmp qword [rbp - 8], 0	       451	list.c	FUNCTION_23	IF_1
0x40008f2	            0x7507	                           jne 0x40008fb	       451	list.c	FUNCTION_23	IF_1
0x40008f4	      0xb800000000	                              mov eax, 0	       452	list.c	FUNCTION_23	IF_1
0x40008f9	            0xeb2f	                           jmp 0x400092a	       452	list.c	FUNCTION_23	IF_1
0x40008fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       453	list.c	FUNCTION_23	CALL_2
0x40008ff	        0x488d5010	                   lea rdx, [rax + 0x10]	       453	list.c	FUNCTION_23	CALL_2
0x4000903	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       453	list.c	FUNCTION_23	CALL_2
0x4000907	          0x4889d6	                            mov rsi, rdx	       453	list.c	FUNCTION_23	CALL_2
0x400090a	          0x4889c7	                            mov rdi, rax	       453	list.c	FUNCTION_23	CALL_2
0x400090d	      0xe800000000	                          call 0x4000912	       453	list.c	FUNCTION_23	CALL_2
0x4000912	        0x488b55f8	                mov rdx, qword [rbp - 8]	       454	list.c	FUNCTION_23	CALL_3
0x4000916	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	list.c	FUNCTION_23	CALL_3
0x400091a	          0x4889d6	                            mov rsi, rdx	       454	list.c	FUNCTION_23	CALL_3
0x400091d	          0x4889c7	                            mov rdi, rax	       454	list.c	FUNCTION_23	CALL_3
0x4000920	      0xe800000000	                          call 0x4000925	       454	list.c	FUNCTION_23	CALL_3
0x4000925	      0xb801000000	                              mov eax, 1	       455	list.c	FUNCTION_23
0x400092a	              0xc9	                                   leave	       456	list.c	FUNCTION_23
0x400092b	              0xc3	                                     ret	       456	list.c	FUNCTION_23
list_join_inner	FOR,2:CALL,10:WHILE,0:ELSE,2:functions,0:IF,7:DO,0:SWITCH,0	167
0x4001007	              0x55	                                push rbp	       749	list.c	FUNCTION_35
0x4001008	          0x4889e5	                            mov rbp, rsp	       749	list.c	FUNCTION_35
0x400100b	    0x4881ecb00000	                           sub rsp, 0xb0	       749	list.c	FUNCTION_35
0x4001012	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       749	list.c	FUNCTION_35
0x4001019	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       749	list.c	FUNCTION_35
0x4001020	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       749	list.c	FUNCTION_35
0x4001027	    0x898d64ffffff	             mov dword [rbp - 0x9c], ecx	       749	list.c	FUNCTION_35
0x400102d	    0x44898560ffff	             mov dword [rbp - 0xa0], r8d	       749	list.c	FUNCTION_35
0x4001034	    0x44898d5cffff	             mov dword [rbp - 0xa4], r9d	       749	list.c	FUNCTION_35
0x400103b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       749	list.c	FUNCTION_35
0x400103f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       749	list.c	FUNCTION_35
0x4001046	    0x64488b042528	                mov rax, qword fs:[0x28]	       749	list.c	FUNCTION_35
0x400104f	        0x488945f8	                mov qword [rbp - 8], rax	       749	list.c	FUNCTION_35
0x4001053	            0x31c0	                            xor eax, eax	       749	list.c	FUNCTION_35
0x4001055	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       753	list.c	FUNCTION_35
0x400105c	    0xc74588010000	               mov dword [rbp - 0x78], 1	       754	list.c	FUNCTION_35
0x4001063	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       761	list.c	FUNCTION_35	FOR_1
0x400106a	          0x488b00	                    mov rax, qword [rax]	       761	list.c	FUNCTION_35	FOR_1
0x400106d	        0x48894598	             mov qword [rbp - 0x68], rax	       761	list.c	FUNCTION_35	FOR_1
0x4001071	      0xe91d010000	                           jmp 0x4001193	       761	list.c	FUNCTION_35	FOR_1
0x4001076	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x400107d	           0xf94c0	                                 sete al	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001080	           0xfb6f0	                           movzx esi, al	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001083	        0x488b4598	             mov rax, qword [rbp - 0x68]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001087	        0x488d7810	                   lea rdi, [rax + 0x10]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x400108b	    0x448b8d60ffff	             mov r9d, dword [rbp - 0xa0]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001092	    0x448b8564ffff	             mov r8d, dword [rbp - 0x9c]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001099	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x400109f	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010a3	        0x488d4590	                   lea rax, [rbp - 0x70]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010a7	        0x4883ec08	                              sub rsp, 8	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010ab	              0x56	                                push rsi	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010ac	          0x4889c6	                            mov rsi, rax	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010af	      0xe800000000	                          call 0x40010b4	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010b4	        0x4883c410	                           add rsp, 0x10	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010b8	        0x488945a0	             mov qword [rbp - 0x60], rax	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x40010bc	      0x48837da000	               cmp qword [rbp - 0x60], 0	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x40010c1	            0x750a	                           jne 0x40010cd	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x40010c3	      0xb800000000	                              mov eax, 0	       766	list.c	FUNCTION_35	FOR_1	IF_1
0x40010c8	      0xe9d0010000	                           jmp 0x400129d	       766	list.c	FUNCTION_35	FOR_1	IF_1
0x40010cd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x40010d1	          0x4889c7	                            mov rdi, rax	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x40010d4	      0xe800000000	                          call 0x40010d9	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x40010d9	          0x89458c	             mov dword [rbp - 0x74], eax	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x40010dc	          0x8b458c	             mov eax, dword [rbp - 0x74]	       769	list.c	FUNCTION_35	FOR_1
0x40010df	           0x14584	             add dword [rbp - 0x7c], eax	       769	list.c	FUNCTION_35	FOR_1
0x40010e2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x40010e9	      0xbe01000000	                              mov esi, 1	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x40010ee	          0x4889c7	                            mov rdi, rax	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x40010f1	      0xe800000000	                          call 0x40010f6	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x40010f6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       772	list.c	FUNCTION_35	FOR_1
0x40010fd	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       772	list.c	FUNCTION_35	FOR_1
0x4001101	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       772	list.c	FUNCTION_35	FOR_1
0x4001108	            0x8b00	                    mov eax, dword [rax]	       772	list.c	FUNCTION_35	FOR_1
0x400110a	          0x8d4801	                      lea ecx, [rax + 1]	       772	list.c	FUNCTION_35	FOR_1
0x400110d	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       772	list.c	FUNCTION_35	FOR_1
0x4001114	            0x890a	                    mov dword [rdx], ecx	       772	list.c	FUNCTION_35	FOR_1
0x4001116	            0x4898	                                    cdqe	       772	list.c	FUNCTION_35	FOR_1
0x4001118	        0x48c1e004	                              shl rax, 4	       772	list.c	FUNCTION_35	FOR_1
0x400111c	          0x4801f0	                            add rax, rsi	       772	list.c	FUNCTION_35	FOR_1
0x400111f	        0x488945a8	             mov qword [rbp - 0x58], rax	       772	list.c	FUNCTION_35	FOR_1
0x4001123	        0x488b4590	             mov rax, qword [rbp - 0x70]	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4001127	          0x4885c0	                           test rax, rax	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x400112a	            0x750a	                           jne 0x4001136	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x400112c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4001130	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4001134	            0x7419	                            je 0x400114f	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4001136	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       775	list.c	FUNCTION_35	FOR_1	IF_2
0x400113a	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       775	list.c	FUNCTION_35	FOR_1	IF_2
0x400113e	          0x488910	                    mov qword [rax], rdx	       775	list.c	FUNCTION_35	FOR_1	IF_2
0x4001141	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x4001145	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x4001149	        0x48895008	                mov qword [rax + 8], rdx	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x400114d	            0xeb2a	                           jmp 0x4001179	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x400114f	          0x8b558c	             mov edx, dword [rbp - 0x74]	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4001152	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4001156	            0x89d6	                            mov esi, edx	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4001158	          0x4889c7	                            mov rdi, rax	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x400115b	      0xe800000000	                          call 0x4001160	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4001160	          0x4889c2	                            mov rdx, rax	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4001163	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4001167	          0x488910	                    mov qword [rax], rdx	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x400116a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x400116e	          0x488b10	                    mov rdx, qword [rax]	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x4001171	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x4001175	        0x48895008	                mov qword [rax + 8], rdx	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x4001179	      0xe800000000	                          call 0x400117e	       784	list.c	FUNCTION_35	FOR_1	CALL_5
0x400117e	    0x8b0500000000	            mov eax, dword [0x04001184] 	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4001184	            0x85c0	                           test eax, eax	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4001186	            0x7522	                           jne 0x40011aa	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4001188	        0x488b4598	             mov rax, qword [rbp - 0x68]	       761	list.c	FUNCTION_35	FOR_1
0x400118c	          0x488b00	                    mov rax, qword [rax]	       761	list.c	FUNCTION_35	FOR_1
0x400118f	        0x48894598	             mov qword [rbp - 0x68], rax	       761	list.c	FUNCTION_35	FOR_1
0x4001193	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       761	list.c	FUNCTION_35	FOR_1
0x4001198	            0x7411	                            je 0x40011ab	       761	list.c	FUNCTION_35	FOR_1
0x400119a	    0x8b0500000000	            mov eax, dword [0x040011a0] 	       761	list.c	FUNCTION_35	FOR_1
0x40011a0	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x40011a2	     0xf84cefeffff	                            je 0x4001076	       761	list.c	FUNCTION_35	FOR_1
0x40011a8	            0xeb01	                           jmp 0x40011ab	       761	list.c	FUNCTION_35	FOR_1
0x40011aa	              0x90	                                     nop	       786	list.c	FUNCTION_35	FOR_1	IF_3
0x40011ab	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       791	list.c	FUNCTION_35	IF_4
0x40011b2	            0x8b00	                    mov eax, dword [rax]	       791	list.c	FUNCTION_35	IF_4
0x40011b4	          0x83f801	                              cmp eax, 1	       791	list.c	FUNCTION_35	IF_4
0x40011b7	            0x7e23	                           jle 0x40011dc	       791	list.c	FUNCTION_35	IF_4
0x40011b9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       792	list.c	FUNCTION_35	CALL_6
0x40011c0	          0x4889c7	                            mov rdi, rax	       792	list.c	FUNCTION_35	CALL_6
0x40011c3	      0xe800000000	                          call 0x40011c8	       792	list.c	FUNCTION_35	CALL_6
0x40011c8	            0x89c2	                            mov edx, eax	       792	list.c	FUNCTION_35	CALL_6
0x40011ca	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       792	list.c	FUNCTION_35	CALL_6
0x40011d1	            0x8b00	                    mov eax, dword [rax]	       792	list.c	FUNCTION_35	CALL_6
0x40011d3	          0x83e801	                              sub eax, 1	       792	list.c	FUNCTION_35	CALL_6
0x40011d6	           0xfafc2	                           imul eax, edx	       792	list.c	FUNCTION_35	CALL_6
0x40011d9	           0x14584	             add dword [rbp - 0x7c], eax	       792	list.c	FUNCTION_35	CALL_6
0x40011dc	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011df	          0x8d5002	                      lea edx, [rax + 2]	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011e2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011e9	            0x89d6	                            mov esi, edx	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011eb	          0x4889c7	                            mov rdi, rax	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011ee	      0xe800000000	                          call 0x40011f3	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011f3	            0x85c0	                           test eax, eax	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011f5	            0x750a	                           jne 0x4001201	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40011f7	      0xb800000000	                              mov eax, 0	       794	list.c	FUNCTION_35	IF_5
0x40011fc	      0xe99c000000	                           jmp 0x400129d	       794	list.c	FUNCTION_35	IF_5
0x4001201	    0xc74580000000	               mov dword [rbp - 0x80], 0	       796	list.c	FUNCTION_35	FOR_2
0x4001208	            0xeb72	                           jmp 0x400127c	       796	list.c	FUNCTION_35	FOR_2
0x400120a	        0x837d8800	               cmp dword [rbp - 0x78], 0	       798	list.c	FUNCTION_35	FOR_2	IF_6
0x400120e	            0x7409	                            je 0x4001219	       798	list.c	FUNCTION_35	FOR_2	IF_6
0x4001210	    0xc74588000000	               mov dword [rbp - 0x78], 0	       799	list.c	FUNCTION_35	FOR_2	IF_6
0x4001217	            0xeb19	                           jmp 0x4001232	       799	list.c	FUNCTION_35	FOR_2	IF_6
0x4001219	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4001220	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4001227	          0x4889d6	                            mov rsi, rdx	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x400122a	          0x4889c7	                            mov rdi, rax	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x400122d	      0xe800000000	                          call 0x4001232	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4001232	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       802	list.c	FUNCTION_35	FOR_2
0x4001239	        0x488b4010	            mov rax, qword [rax + 0x10] 	       802	list.c	FUNCTION_35	FOR_2
0x400123d	          0x8b5580	             mov edx, dword [rbp - 0x80]	       802	list.c	FUNCTION_35	FOR_2
0x4001240	          0x4863d2	                         movsxd rdx, edx	       802	list.c	FUNCTION_35	FOR_2
0x4001243	        0x48c1e204	                              shl rdx, 4	       802	list.c	FUNCTION_35	FOR_2
0x4001247	          0x4801d0	                            add rax, rdx	       802	list.c	FUNCTION_35	FOR_2
0x400124a	        0x488945a8	             mov qword [rbp - 0x58], rax	       802	list.c	FUNCTION_35	FOR_2
0x400124e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4001252	          0x488b00	                    mov rax, qword [rax]	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4001255	          0x4885c0	                           test rax, rax	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4001258	            0x7419	                            je 0x4001273	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x400125a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x400125e	          0x488b10	                    mov rdx, qword [rax]	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4001261	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4001268	          0x4889d6	                            mov rsi, rdx	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x400126b	          0x4889c7	                            mov rdi, rax	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x400126e	      0xe800000000	                          call 0x4001273	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4001273	      0xe800000000	                          call 0x4001278	       806	list.c	FUNCTION_35	FOR_2	CALL_10
0x4001278	        0x83458001	               add dword [rbp - 0x80], 1	       796	list.c	FUNCTION_35	FOR_2
0x400127c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       796	list.c	FUNCTION_35	FOR_2
0x4001283	            0x8b00	                    mov eax, dword [rax]	       796	list.c	FUNCTION_35	FOR_2
0x4001285	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       796	list.c	FUNCTION_35	FOR_2
0x4001288	            0x7e0e	                           jle 0x4001298	       796	list.c	FUNCTION_35	FOR_2
0x400128a	    0x8b0500000000	            mov eax, dword [0x04001290] 	       796	list.c	FUNCTION_35	FOR_2
0x4001290	            0x85c0	                           test eax, eax	       796	list.c	FUNCTION_35	FOR_2
0x4001292	     0xf8472ffffff	                            je 0x400120a	       796	list.c	FUNCTION_35	FOR_2
0x4001298	      0xb801000000	                              mov eax, 1	       809	list.c	FUNCTION_35
0x400129d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       810	list.c	FUNCTION_35
0x40012a1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       810	list.c	FUNCTION_35
0x40012aa	            0x7405	                            je 0x40012b1	       810	list.c	FUNCTION_35
0x40012ac	      0xe800000000	                          call 0x40012b1	       810	list.c	FUNCTION_35
0x40012b1	              0xc9	                                   leave	       810	list.c	FUNCTION_35
0x40012b2	              0xc3	                                     ret	       810	list.c	FUNCTION_35
list_append_number	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	26
0x4000ac4	              0x55	                                push rbp	       527	list.c	FUNCTION_27
0x4000ac5	          0x4889e5	                            mov rbp, rsp	       527	list.c	FUNCTION_27
0x4000ac8	        0x4883ec20	                           sub rsp, 0x20	       527	list.c	FUNCTION_27
0x4000acc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       527	list.c	FUNCTION_27
0x4000ad0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       527	list.c	FUNCTION_27
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       530	list.c	FUNCTION_27	CALL_1
0x4000ad9	        0x488945f8	                mov qword [rbp - 8], rax	       530	list.c	FUNCTION_27	CALL_1
0x4000add	      0x48837df800	                  cmp qword [rbp - 8], 0	       531	list.c	FUNCTION_27	IF_1
0x4000ae2	            0x7507	                           jne 0x4000aeb	       531	list.c	FUNCTION_27	IF_1
0x4000ae4	      0xb800000000	                              mov eax, 0	       532	list.c	FUNCTION_27	IF_1
0x4000ae9	            0xeb37	                           jmp 0x4000b22	       532	list.c	FUNCTION_27	IF_1
0x4000aeb	        0x488b45f8	                mov rax, qword [rbp - 8]	       533	list.c	FUNCTION_27
0x4000aef	    0xc74010010000	               mov dword [rax + 0x10], 1	       533	list.c	FUNCTION_27
0x4000af6	        0x488b45f8	                mov rax, qword [rbp - 8]	       534	list.c	FUNCTION_27
0x4000afa	        0xc6401400	                mov byte [rax + 0x14], 0	       534	list.c	FUNCTION_27
0x4000afe	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	list.c	FUNCTION_27
0x4000b02	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       535	list.c	FUNCTION_27
0x4000b06	        0x48895018	             mov qword [rax + 0x18], rdx	       535	list.c	FUNCTION_27
0x4000b0a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       536	list.c	FUNCTION_27	CALL_2
0x4000b0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	list.c	FUNCTION_27	CALL_2
0x4000b12	          0x4889d6	                            mov rsi, rdx	       536	list.c	FUNCTION_27	CALL_2
0x4000b15	          0x4889c7	                            mov rdi, rax	       536	list.c	FUNCTION_27	CALL_2
0x4000b18	      0xe800000000	                          call 0x4000b1d	       536	list.c	FUNCTION_27	CALL_2
0x4000b1d	      0xb801000000	                              mov eax, 1	       537	list.c	FUNCTION_27
0x4000b22	              0xc9	                                   leave	       538	list.c	FUNCTION_27
0x4000b23	              0xc3	                                     ret	       538	list.c	FUNCTION_27
write_list	FOR,2:CALL,6:WHILE,0:ELSE,1:functions,0:IF,5:DO,0:SWITCH,0	73
0x4001591	              0x55	                                push rbp	       919	list.c	FUNCTION_38
0x4001592	          0x4889e5	                            mov rbp, rsp	       919	list.c	FUNCTION_38
0x4001595	        0x4883ec40	                           sub rsp, 0x40	       919	list.c	FUNCTION_38
0x4001599	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       919	list.c	FUNCTION_38
0x400159d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       919	list.c	FUNCTION_38
0x40015a1	          0x8955cc	             mov dword [rbp - 0x34], edx	       919	list.c	FUNCTION_38
0x40015a4	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       922	list.c	FUNCTION_38
0x40015ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       925	list.c	FUNCTION_38	FOR_1
0x40015af	          0x488b00	                    mov rax, qword [rax]	       925	list.c	FUNCTION_38	FOR_1
0x40015b2	        0x488945f0	             mov qword [rbp - 0x10], rax	       925	list.c	FUNCTION_38	FOR_1
0x40015b6	      0xe9c7000000	                           jmp 0x4001682	       925	list.c	FUNCTION_38	FOR_1
0x40015bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x40015bf	        0x4883c010	                           add rax, 0x10	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x40015c3	          0x4889c7	                            mov rdi, rax	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x40015c6	      0xe800000000	                          call 0x40015cb	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x40015cb	        0x488945f8	                mov qword [rbp - 8], rax	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x40015cf	            0xeb50	                           jmp 0x4001621	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x40015d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x40015d5	           0xfb600	                   movzx eax, byte [rax]	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x40015d8	            0x3c0a	                             cmp al, 0xa	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x40015da	            0x7516	                           jne 0x40015f2	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x40015dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x40015e0	          0x4889c6	                            mov rsi, rax	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x40015e3	      0xbf00000000	                              mov edi, 0	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x40015e8	      0xe800000000	                          call 0x40015ed	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x40015ed	          0x8945e8	             mov dword [rbp - 0x18], eax	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x40015f0	            0xeb1b	                           jmp 0x400160d	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x40015f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x40015f6	           0xfb600	                   movzx eax, byte [rax]	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x40015f9	           0xfb6c0	                           movzx eax, al	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x40015fc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4001600	          0x4889d6	                            mov rsi, rdx	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4001603	            0x89c7	                            mov edi, eax	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4001605	      0xe800000000	                          call 0x400160a	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x400160a	          0x8945e8	             mov dword [rbp - 0x18], eax	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x400160d	        0x837de8ff	cmp dword [rbp - 0x18], 0xffffffffffffffff	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001611	            0x7509	                           jne 0x400161c	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001613	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400161a	            0xeb10	                           jmp 0x400162c	       936	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400161c	      0x488345f801	                  add qword [rbp - 8], 1	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001621	        0x488b45f8	                mov rax, qword [rbp - 8]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001625	           0xfb600	                   movzx eax, byte [rax]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001628	            0x84c0	                             test al, al	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400162a	            0x75a5	                           jne 0x40015d1	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400162c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001630	            0x740c	                            je 0x400163e	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001632	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001636	          0x488b00	                    mov rax, qword [rax]	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001639	          0x4885c0	                           test rax, rax	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x400163c	            0x741f	                            je 0x400165d	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x400163e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001642	          0x4889c6	                            mov rsi, rax	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001645	      0xbf0a000000	                            mov edi, 0xa	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x400164a	      0xe800000000	                          call 0x400164f	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x400164f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001652	            0x7509	                           jne 0x400165d	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001654	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       942	list.c	FUNCTION_38	FOR_1	IF_3	IF_4
0x400165b	            0xeb30	                           jmp 0x400168d	       943	list.c	FUNCTION_38	FOR_1	IF_3	IF_4
0x400165d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001661	            0x7514	                           jne 0x4001677	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001663	      0xbf00000000	                              mov edi, 0	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4001668	      0xe800000000	                          call 0x400166d	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x400166d	          0x4889c7	                            mov rdi, rax	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4001670	      0xe800000000	                          call 0x4001675	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4001675	            0xeb16	                           jmp 0x400168d	       948	list.c	FUNCTION_38	FOR_1	IF_5
0x4001677	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       925	list.c	FUNCTION_38	FOR_1
0x400167b	          0x488b00	                    mov rax, qword [rax]	       925	list.c	FUNCTION_38	FOR_1
0x400167e	        0x488945f0	             mov qword [rbp - 0x10], rax	       925	list.c	FUNCTION_38	FOR_1
0x4001682	      0x48837df000	               cmp qword [rbp - 0x10], 0	       925	list.c	FUNCTION_38	FOR_1
0x4001687	     0xf852effffff	                           jne 0x40015bb	       925	list.c	FUNCTION_38	FOR_1
0x400168d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       951	list.c	FUNCTION_38
0x4001690	              0xc9	                                   leave	       952	list.c	FUNCTION_38
0x4001691	              0xc3	                                     ret	       952	list.c	FUNCTION_38
list_insert	FOR,0:CALL,1:WHILE,0:ELSE,2:functions,0:IF,2:DO,0:SWITCH,0	51
0x4000b84	              0x55	                                push rbp	       559	list.c	FUNCTION_29
0x4000b85	          0x4889e5	                            mov rbp, rsp	       559	list.c	FUNCTION_29
0x4000b88	        0x4883ec18	                           sub rsp, 0x18	       559	list.c	FUNCTION_29
0x4000b8c	        0x48897df8	                mov qword [rbp - 8], rdi	       559	list.c	FUNCTION_29
0x4000b90	        0x488975f0	             mov qword [rbp - 0x10], rsi	       559	list.c	FUNCTION_29
0x4000b94	        0x488955e8	             mov qword [rbp - 0x18], rdx	       559	list.c	FUNCTION_29
0x4000b98	      0x48837de800	               cmp qword [rbp - 0x18], 0	       560	list.c	FUNCTION_29	IF_1
0x4000b9d	            0x7515	                           jne 0x4000bb4	       560	list.c	FUNCTION_29	IF_1
0x4000b9f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       562	list.c	FUNCTION_29	CALL_1
0x4000ba3	        0x488b45f8	                mov rax, qword [rbp - 8]	       562	list.c	FUNCTION_29	CALL_1
0x4000ba7	          0x4889d6	                            mov rsi, rdx	       562	list.c	FUNCTION_29	CALL_1
0x4000baa	          0x4889c7	                            mov rdi, rax	       562	list.c	FUNCTION_29	CALL_1
0x4000bad	      0xe800000000	                          call 0x4000bb2	       562	list.c	FUNCTION_29	CALL_1
0x4000bb2	            0xeb7e	                           jmp 0x4000c32	       581	list.c	FUNCTION_29
0x4000bb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       566	list.c	FUNCTION_29	ELSE_1
0x4000bb8	        0x488b5008	                mov rdx, qword [rax + 8]	       566	list.c	FUNCTION_29	ELSE_1
0x4000bbc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       566	list.c	FUNCTION_29	ELSE_1
0x4000bc0	        0x48895008	                mov qword [rax + 8], rdx	       566	list.c	FUNCTION_29	ELSE_1
0x4000bc4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       567	list.c	FUNCTION_29	ELSE_1
0x4000bc8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       567	list.c	FUNCTION_29	ELSE_1
0x4000bcc	          0x488910	                    mov qword [rax], rdx	       567	list.c	FUNCTION_29	ELSE_1
0x4000bcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bd3	        0x488b4008	                mov rax, qword [rax + 8]	       568	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bd7	          0x4885c0	                           test rax, rax	       568	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bda	            0x751e	                           jne 0x4000bfa	       568	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bdc	        0x488b45f8	                mov rax, qword [rbp - 8]	       570	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000be0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       570	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000be4	          0x488910	                    mov qword [rax], rdx	       570	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000be7	        0x488b45f8	                mov rax, qword [rbp - 8]	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000beb	          0x8b4040	            mov eax, dword [rax + 0x40] 	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bee	          0x8d5001	                      lea edx, [rax + 1]	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bf1	        0x488b45f8	                mov rax, qword [rbp - 8]	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bf5	          0x895040	             mov dword [rax + 0x40], edx	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bf8	            0xeb1b	                           jmp 0x4000c15	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x4000bfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       575	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x4000bfe	        0x488b4008	                mov rax, qword [rax + 8]	       575	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x4000c02	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       575	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x4000c06	          0x488910	                    mov qword [rax], rdx	       575	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x4000c09	        0x488b45f8	                mov rax, qword [rbp - 8]	       576	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x4000c0d	    0x48c740180000	               mov qword [rax + 0x18], 0	       576	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x4000c15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       578	list.c	FUNCTION_29	ELSE_1
0x4000c19	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       578	list.c	FUNCTION_29	ELSE_1
0x4000c1d	        0x48895008	                mov qword [rax + 8], rdx	       578	list.c	FUNCTION_29	ELSE_1
0x4000c21	        0x488b45f8	                mov rax, qword [rbp - 8]	       579	list.c	FUNCTION_29	ELSE_1
0x4000c25	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       579	list.c	FUNCTION_29	ELSE_1
0x4000c28	          0x8d5001	                      lea edx, [rax + 1]	       579	list.c	FUNCTION_29	ELSE_1
0x4000c2b	        0x488b45f8	                mov rax, qword [rbp - 8]	       579	list.c	FUNCTION_29	ELSE_1
0x4000c2f	          0x89503c	             mov dword [rax + 0x3c], edx	       579	list.c	FUNCTION_29	ELSE_1
0x4000c32	              0x90	                                     nop	       581	list.c	FUNCTION_29
0x4000c33	              0xc9	                                   leave	       581	list.c	FUNCTION_29
0x4000c34	              0xc3	                                     ret	       581	list.c	FUNCTION_29
list_free_items	FOR,1:CALL,1:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	30
0x400036b	              0x55	                                push rbp	       186	list.c	FUNCTION_11
0x400036c	          0x4889e5	                            mov rbp, rsp	       186	list.c	FUNCTION_11
0x400036f	        0x4883ec20	                           sub rsp, 0x20	       186	list.c	FUNCTION_11
0x4000373	          0x897dec	             mov dword [rbp - 0x14], edi	       186	list.c	FUNCTION_11
0x4000376	    0x488b05000000	            mov rax, qword [0x0400037d] 	       189	list.c	FUNCTION_11	FOR_1
0x400037d	        0x488945f0	             mov qword [rbp - 0x10], rax	       189	list.c	FUNCTION_11	FOR_1
0x4000381	            0xeb3e	                           jmp 0x40003c1	       189	list.c	FUNCTION_11	FOR_1
0x4000383	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       191	list.c	FUNCTION_11	FOR_1
0x4000387	        0x488b4028	            mov rax, qword [rax + 0x28] 	       191	list.c	FUNCTION_11	FOR_1
0x400038b	        0x488945f8	                mov qword [rbp - 8], rax	       191	list.c	FUNCTION_11	FOR_1
0x400038f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x4000393	          0x8b4044	            mov eax, dword [rax + 0x44] 	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x4000396	          0x3345ec	             xor eax, dword [rbp - 0x14]	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x4000399	          0x83e0fe	                     and eax, 0xfffffffe	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x400039c	            0x85c0	                           test eax, eax	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x400039e	            0x7419	                            je 0x40003b9	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40003a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40003a4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40003a8	          0x4885c0	                           test rax, rax	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40003ab	            0x750c	                           jne 0x40003b9	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40003ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x40003b1	          0x4889c7	                            mov rdi, rax	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x40003b4	      0xe844ffffff	                 call sym.list_free_list	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x40003b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	list.c	FUNCTION_11	FOR_1
0x40003bd	        0x488945f0	             mov qword [rbp - 0x10], rax	       189	list.c	FUNCTION_11	FOR_1
0x40003c1	      0x48837df000	               cmp qword [rbp - 0x10], 0	       189	list.c	FUNCTION_11	FOR_1
0x40003c6	            0x75bb	                           jne 0x4000383	       189	list.c	FUNCTION_11	FOR_1
0x40003c8	              0x90	                                     nop	       201	list.c	FUNCTION_11
0x40003c9	              0xc9	                                   leave	       201	list.c	FUNCTION_11
0x40003ca	              0xc3	                                     ret	       201	list.c	FUNCTION_11
list_join	FOR,1:CALL,4:WHILE,0:ELSE,0:functions,0:IF,2:DO,0:SWITCH,0	63
0x40012b3	              0x55	                                push rbp	       825	list.c	FUNCTION_36
0x40012b4	          0x4889e5	                            mov rbp, rsp	       825	list.c	FUNCTION_36
0x40012b7	        0x4883ec60	                           sub rsp, 0x60	       825	list.c	FUNCTION_36
0x40012bb	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       825	list.c	FUNCTION_36
0x40012bf	        0x488975c0	             mov qword [rbp - 0x40], rsi	       825	list.c	FUNCTION_36
0x40012c3	        0x488955b8	             mov qword [rbp - 0x48], rdx	       825	list.c	FUNCTION_36
0x40012c7	          0x894db4	             mov dword [rbp - 0x4c], ecx	       825	list.c	FUNCTION_36
0x40012ca	        0x448945b0	             mov dword [rbp - 0x50], r8d	       825	list.c	FUNCTION_36
0x40012ce	        0x44894dac	             mov dword [rbp - 0x54], r9d	       825	list.c	FUNCTION_36
0x40012d2	    0x64488b042528	                mov rax, qword fs:[0x28]	       825	list.c	FUNCTION_36
0x40012db	        0x488945f8	                mov qword [rbp - 8], rax	       825	list.c	FUNCTION_36
0x40012df	            0x31c0	                            xor eax, eax	       825	list.c	FUNCTION_36
0x40012e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       831	list.c	FUNCTION_36	IF_1
0x40012e5	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       831	list.c	FUNCTION_36	IF_1
0x40012e8	            0x85c0	                           test eax, eax	       831	list.c	FUNCTION_36	IF_1
0x40012ea	            0x7f0a	                            jg 0x40012f6	       831	list.c	FUNCTION_36	IF_1
0x40012ec	      0xb801000000	                              mov eax, 1	       832	list.c	FUNCTION_36	IF_1
0x40012f1	      0xe991000000	                           jmp 0x4001387	       832	list.c	FUNCTION_36	IF_1
0x40012f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       833	list.c	FUNCTION_36	CALL_1
0x40012fa	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       833	list.c	FUNCTION_36	CALL_1
0x40012fd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       833	list.c	FUNCTION_36	CALL_1
0x4001301	      0xbe10000000	                           mov esi, 0x10	       833	list.c	FUNCTION_36	CALL_1
0x4001306	          0x4889c7	                            mov rdi, rax	       833	list.c	FUNCTION_36	CALL_1
0x4001309	      0xe800000000	                          call 0x400130e	       833	list.c	FUNCTION_36	CALL_1
0x400130e	        0x448b4dac	             mov r9d, dword [rbp - 0x54]	       834	list.c	FUNCTION_36	CALL_2
0x4001312	        0x448b45b0	             mov r8d, dword [rbp - 0x50]	       834	list.c	FUNCTION_36	CALL_2
0x4001316	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       834	list.c	FUNCTION_36	CALL_2
0x4001319	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       834	list.c	FUNCTION_36	CALL_2
0x400131d	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       834	list.c	FUNCTION_36	CALL_2
0x4001321	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       834	list.c	FUNCTION_36	CALL_2
0x4001325	        0x4883ec08	                              sub rsp, 8	       834	list.c	FUNCTION_36	CALL_2
0x4001329	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       834	list.c	FUNCTION_36	CALL_2
0x400132d	              0x57	                                push rdi	       834	list.c	FUNCTION_36	CALL_2
0x400132e	          0x4889c7	                            mov rdi, rax	       834	list.c	FUNCTION_36	CALL_2
0x4001331	      0xe8d1fcffff	                call sym.list_join_inner	       834	list.c	FUNCTION_36	CALL_2
0x4001336	        0x4883c410	                           add rsp, 0x10	       834	list.c	FUNCTION_36	CALL_2
0x400133a	          0x8945d4	             mov dword [rbp - 0x2c], eax	       834	list.c	FUNCTION_36	CALL_2
0x400133d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       838	list.c	FUNCTION_36	IF_2
0x4001341	          0x4885c0	                           test rax, rax	       838	list.c	FUNCTION_36	IF_2
0x4001344	            0x743e	                            je 0x4001384	       838	list.c	FUNCTION_36	IF_2
0x4001346	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       840	list.c	FUNCTION_36	IF_2
0x400134a	        0x488945d8	             mov qword [rbp - 0x28], rax	       840	list.c	FUNCTION_36	IF_2
0x400134e	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001355	            0xeb19	                           jmp 0x4001370	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001357	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400135b	        0x488b4008	                mov rax, qword [rax + 8]	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400135f	          0x4889c7	                            mov rdi, rax	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4001362	      0xe800000000	                          call 0x4001367	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4001367	      0x488345d810	            add qword [rbp - 0x28], 0x10	       844	list.c	FUNCTION_36	IF_2	FOR_1
0x400136c	        0x8345d001	               add dword [rbp - 0x30], 1	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001370	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001373	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001376	            0x7fdf	                            jg 0x4001357	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001378	        0x488d45e0	                   lea rax, [rbp - 0x20]	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x400137c	          0x4889c7	                            mov rdi, rax	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x400137f	      0xe800000000	                          call 0x4001384	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x4001384	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       849	list.c	FUNCTION_36
0x4001387	        0x488b4df8	                mov rcx, qword [rbp - 8]	       850	list.c	FUNCTION_36
0x400138b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       850	list.c	FUNCTION_36
0x4001394	            0x7405	                            je 0x400139b	       850	list.c	FUNCTION_36
0x4001396	      0xe800000000	                          call 0x400139b	       850	list.c	FUNCTION_36
0x400139b	              0xc9	                                   leave	       850	list.c	FUNCTION_36
0x400139c	              0xc3	                                     ret	       850	list.c	FUNCTION_36
list_add_watch	FOR,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,0:DO,0:SWITCH,0	14
0x4000040	              0x55	                                push rbp	        26	list.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        26	list.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        26	list.c	FUNCTION_1
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	        26	list.c	FUNCTION_1
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	list.c	FUNCTION_1
0x4000050	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        27	list.c	FUNCTION_1
0x4000054	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        27	list.c	FUNCTION_1
0x4000058	        0x48895008	                mov qword [rax + 8], rdx	        27	list.c	FUNCTION_1
0x400005c	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	list.c	FUNCTION_1
0x4000060	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        28	list.c	FUNCTION_1
0x4000064	        0x48895010	             mov qword [rax + 0x10], rdx	        28	list.c	FUNCTION_1
0x4000068	              0x90	                                     nop	        29	list.c	FUNCTION_1
0x4000069	              0x5d	                                 pop rbp	        29	list.c	FUNCTION_1
0x400006a	              0xc3	                                     ret	        29	list.c	FUNCTION_1
list_equal	FOR,1:CALL,3:WHILE,0:ELSE,0:functions,0:IF,4:DO,0:SWITCH,0	72
0x400048e	              0x55	                                push rbp	       263	list.c	FUNCTION_17
0x400048f	          0x4889e5	                            mov rbp, rsp	       263	list.c	FUNCTION_17
0x4000492	              0x53	                                push rbx	       263	list.c	FUNCTION_17
0x4000493	        0x4883ec38	                           sub rsp, 0x38	       263	list.c	FUNCTION_17
0x4000497	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       263	list.c	FUNCTION_17
0x400049b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       263	list.c	FUNCTION_17
0x400049f	          0x8955cc	             mov dword [rbp - 0x34], edx	       263	list.c	FUNCTION_17
0x40004a2	          0x894dc8	             mov dword [rbp - 0x38], ecx	       263	list.c	FUNCTION_17
0x40004a5	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       266	list.c	FUNCTION_17	IF_1
0x40004aa	            0x7407	                            je 0x40004b3	       266	list.c	FUNCTION_17	IF_1
0x40004ac	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       266	list.c	FUNCTION_17	IF_1
0x40004b1	            0x750a	                           jne 0x40004bd	       266	list.c	FUNCTION_17	IF_1
0x40004b3	      0xb800000000	                              mov eax, 0	       267	list.c	FUNCTION_17	IF_1
0x40004b8	      0xe9bf000000	                           jmp 0x400057c	       267	list.c	FUNCTION_17	IF_1
0x40004bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       268	list.c	FUNCTION_17	IF_2
0x40004c1	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       268	list.c	FUNCTION_17	IF_2
0x40004c5	            0x750a	                           jne 0x40004d1	       268	list.c	FUNCTION_17	IF_2
0x40004c7	      0xb801000000	                              mov eax, 1	       269	list.c	FUNCTION_17	IF_2
0x40004cc	      0xe9ab000000	                           jmp 0x400057c	       269	list.c	FUNCTION_17	IF_2
0x40004d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004d5	          0x4889c7	                            mov rdi, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004d8	      0xe800000000	                          call 0x40004dd	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004dd	          0x4889c3	                            mov rbx, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004e4	          0x4889c7	                            mov rdi, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004e7	      0xe800000000	                          call 0x40004ec	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004ec	          0x4839c3	                            cmp rbx, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004ef	            0x740a	                            je 0x40004fb	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004f1	      0xb800000000	                              mov eax, 0	       271	list.c	FUNCTION_17	IF_3
0x40004f6	      0xe981000000	                           jmp 0x400057c	       271	list.c	FUNCTION_17	IF_3
0x40004fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	list.c	FUNCTION_17	FOR_1
0x40004ff	          0x488b00	                    mov rax, qword [rax]	       273	list.c	FUNCTION_17	FOR_1
0x4000502	        0x488945e0	             mov qword [rbp - 0x20], rax	       273	list.c	FUNCTION_17	FOR_1
0x4000506	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       273	list.c	FUNCTION_17	FOR_1
0x400050a	          0x488b00	                    mov rax, qword [rax]	       273	list.c	FUNCTION_17	FOR_1
0x400050d	        0x488945e8	             mov qword [rbp - 0x18], rax	       273	list.c	FUNCTION_17	FOR_1
0x4000511	            0xeb40	                           jmp 0x4000553	       273	list.c	FUNCTION_17	FOR_1
0x4000513	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000517	        0x488d7010	                   lea rsi, [rax + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x400051b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x400051f	        0x488d7810	                   lea rdi, [rax + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000523	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000526	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000529	            0x89d1	                            mov ecx, edx	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x400052b	            0x89c2	                            mov edx, eax	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x400052d	      0xe800000000	                          call 0x4000532	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000532	            0x85c0	                           test eax, eax	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000534	            0x7507	                           jne 0x400053d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000536	      0xb800000000	                              mov eax, 0	       277	list.c	FUNCTION_17	FOR_1	IF_4
0x400053b	            0xeb3f	                           jmp 0x400057c	       277	list.c	FUNCTION_17	FOR_1	IF_4
0x400053d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       275	list.c	FUNCTION_17	FOR_1
0x4000541	          0x488b00	                    mov rax, qword [rax]	       275	list.c	FUNCTION_17	FOR_1
0x4000544	        0x488945e0	             mov qword [rbp - 0x20], rax	       275	list.c	FUNCTION_17	FOR_1
0x4000548	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	list.c	FUNCTION_17	FOR_1
0x400054c	          0x488b00	                    mov rax, qword [rax]	       275	list.c	FUNCTION_17	FOR_1
0x400054f	        0x488945e8	             mov qword [rbp - 0x18], rax	       275	list.c	FUNCTION_17	FOR_1
0x4000553	      0x48837de000	               cmp qword [rbp - 0x20], 0	       273	list.c	FUNCTION_17	FOR_1
0x4000558	            0x7407	                            je 0x4000561	       273	list.c	FUNCTION_17	FOR_1
0x400055a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       274	list.c	FUNCTION_17	FOR_1
0x400055f	            0x75b2	                           jne 0x4000513	       274	list.c	FUNCTION_17	FOR_1
0x4000561	      0x48837de000	               cmp qword [rbp - 0x20], 0	       278	list.c	FUNCTION_17
0x4000566	            0x750e	                           jne 0x4000576	       278	list.c	FUNCTION_17
0x4000568	      0x48837de800	               cmp qword [rbp - 0x18], 0	       278	list.c	FUNCTION_17
0x400056d	            0x7507	                           jne 0x4000576	       278	list.c	FUNCTION_17
0x400056f	      0xb801000000	                              mov eax, 1	       278	list.c	FUNCTION_17
0x4000574	            0xeb05	                           jmp 0x400057b	       278	list.c	FUNCTION_17
0x4000576	      0xb800000000	                              mov eax, 0	       278	list.c	FUNCTION_17
0x400057b	              0x90	                                     nop	       278	list.c	FUNCTION_17
0x400057c	        0x4883c438	                           add rsp, 0x38	       279	list.c	FUNCTION_17
0x4000580	              0x5b	                                 pop rbx	       279	list.c	FUNCTION_17
0x4000581	              0x5d	                                 pop rbp	       279	list.c	FUNCTION_17
0x4000582	              0xc3	                                     ret	       279	list.c	FUNCTION_17
list_copy	FOR,1:CALL,7:WHILE,0:ELSE,1:functions,0:IF,7:DO,0:SWITCH,0	83
0x4000d2a	              0x55	                                push rbp	       633	list.c	FUNCTION_32
0x4000d2b	          0x4889e5	                            mov rbp, rsp	       633	list.c	FUNCTION_32
0x4000d2e	        0x4883ec30	                           sub rsp, 0x30	       633	list.c	FUNCTION_32
0x4000d32	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       633	list.c	FUNCTION_32
0x4000d36	          0x8975d4	             mov dword [rbp - 0x2c], esi	       633	list.c	FUNCTION_32
0x4000d39	          0x8955d0	             mov dword [rbp - 0x30], edx	       633	list.c	FUNCTION_32
0x4000d3c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       638	list.c	FUNCTION_32	IF_1
0x4000d41	            0x750a	                           jne 0x4000d4d	       638	list.c	FUNCTION_32	IF_1
0x4000d43	      0xb800000000	                              mov eax, 0	       639	list.c	FUNCTION_32	IF_1
0x4000d48	      0xe90c010000	                           jmp 0x4000e59	       639	list.c	FUNCTION_32	IF_1
0x4000d4d	      0xe800000000	                          call 0x4000d52	       641	list.c	FUNCTION_32	CALL_1
0x4000d52	        0x488945e8	             mov qword [rbp - 0x18], rax	       641	list.c	FUNCTION_32	CALL_1
0x4000d56	      0x48837de800	               cmp qword [rbp - 0x18], 0	       642	list.c	FUNCTION_32	IF_2
0x4000d5b	     0xf84f4000000	                            je 0x4000e55	       642	list.c	FUNCTION_32	IF_2
0x4000d61	        0x837dd000	               cmp dword [rbp - 0x30], 0	       644	list.c	FUNCTION_32	IF_2	IF_3
0x4000d65	            0x7416	                            je 0x4000d7d	       644	list.c	FUNCTION_32	IF_2	IF_3
0x4000d67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       648	list.c	FUNCTION_32	IF_2	IF_3
0x4000d6b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       648	list.c	FUNCTION_32	IF_2	IF_3
0x4000d6e	          0x895044	             mov dword [rax + 0x44], edx	       648	list.c	FUNCTION_32	IF_2	IF_3
0x4000d71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       649	list.c	FUNCTION_32	IF_2	IF_3
0x4000d75	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       649	list.c	FUNCTION_32	IF_2	IF_3
0x4000d79	        0x48895020	             mov qword [rax + 0x20], rdx	       649	list.c	FUNCTION_32	IF_2	IF_3
0x4000d7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000d81	          0x488b00	                    mov rax, qword [rax]	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000d84	        0x488945f0	             mov qword [rbp - 0x10], rax	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000d88	      0xe984000000	                           jmp 0x4000e11	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000d8d	      0xe800000000	                          call 0x4000d92	       654	list.c	FUNCTION_32	IF_2	FOR_1	CALL_2
0x4000d92	        0x488945f8	                mov qword [rbp - 8], rax	       654	list.c	FUNCTION_32	IF_2	FOR_1	CALL_2
0x4000d96	      0x48837df800	                  cmp qword [rbp - 8], 0	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000d9b	     0xf8487000000	                            je 0x4000e28	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000da1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       657	list.c	FUNCTION_32	IF_2	FOR_1	IF_5
0x4000da5	            0x7431	                            je 0x4000dd8	       657	list.c	FUNCTION_32	IF_2	FOR_1	IF_5
0x4000da7	        0x488b45f8	                mov rax, qword [rbp - 8]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dab	        0x488d7010	                   lea rsi, [rax + 0x10]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000daf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000db3	        0x488d7810	                   lea rdi, [rax + 0x10]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000db7	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dba	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dbd	            0x89d1	                            mov ecx, edx	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dbf	            0x89c2	                            mov edx, eax	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dc1	      0xe800000000	                          call 0x4000dc6	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dc6	            0x85c0	                           test eax, eax	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dc8	            0x7529	                           jne 0x4000df3	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000dca	        0x488b45f8	                mov rax, qword [rbp - 8]	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x4000dce	          0x4889c7	                            mov rdi, rax	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x4000dd1	      0xe800000000	                          call 0x4000dd6	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x4000dd6	            0xeb51	                           jmp 0x4000e29	       662	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6
0x4000dd8	        0x488b45f8	                mov rax, qword [rbp - 8]	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000ddc	        0x488d5010	                   lea rdx, [rax + 0x10]	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000de0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000de4	        0x4883c010	                           add rax, 0x10	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000de8	          0x4889d6	                            mov rsi, rdx	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000deb	          0x4889c7	                            mov rdi, rax	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000dee	      0xe800000000	                          call 0x4000df3	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000df3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x4000df7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x4000dfb	          0x4889d6	                            mov rsi, rdx	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x4000dfe	          0x4889c7	                            mov rdi, rax	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x4000e01	      0xe800000000	                          call 0x4000e06	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x4000e06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       652	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e0a	          0x488b00	                    mov rax, qword [rax]	       652	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e0d	        0x488945f0	             mov qword [rbp - 0x10], rax	       652	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e11	      0x48837df000	               cmp qword [rbp - 0x10], 0	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e16	            0x7411	                            je 0x4000e29	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e18	    0x8b0500000000	            mov eax, dword [0x04000e1e] 	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e1e	            0x85c0	                           test eax, eax	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e20	     0xf8467ffffff	                            je 0x4000d8d	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e26	            0xeb01	                           jmp 0x4000e29	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000e28	              0x90	                                     nop	       656	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000e29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       669	list.c	FUNCTION_32	IF_2
0x4000e2d	          0x8b4038	            mov eax, dword [rax + 0x38] 	       669	list.c	FUNCTION_32	IF_2
0x4000e30	          0x8d5001	                      lea edx, [rax + 1]	       669	list.c	FUNCTION_32	IF_2
0x4000e33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       669	list.c	FUNCTION_32	IF_2
0x4000e37	          0x895038	             mov dword [rax + 0x38], edx	       669	list.c	FUNCTION_32	IF_2
0x4000e3a	      0x48837df000	               cmp qword [rbp - 0x10], 0	       670	list.c	FUNCTION_32	IF_2	IF_7
0x4000e3f	            0x7414	                            je 0x4000e55	       670	list.c	FUNCTION_32	IF_2	IF_7
0x4000e41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       672	list.c	FUNCTION_32	IF_2	IF_7	CALL_7
0x4000e45	          0x4889c7	                            mov rdi, rax	       672	list.c	FUNCTION_32	IF_2	IF_7	CALL_7
0x4000e48	      0xe800000000	                          call 0x4000e4d	       672	list.c	FUNCTION_32	IF_2	IF_7	CALL_7
0x4000e4d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       673	list.c	FUNCTION_32	IF_2	IF_7
0x4000e55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       677	list.c	FUNCTION_32
0x4000e59	              0xc9	                                   leave	       678	list.c	FUNCTION_32
0x4000e5a	              0xc3	                                     ret	       678	list.c	FUNCTION_32
list_unref	FOR,0:CALL,1:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	21
0x40001ff	              0x55	                                push rbp	       123	list.c	FUNCTION_7
0x4000200	          0x4889e5	                            mov rbp, rsp	       123	list.c	FUNCTION_7
0x4000203	        0x4883ec10	                           sub rsp, 0x10	       123	list.c	FUNCTION_7
0x4000207	        0x48897df8	                mov qword [rbp - 8], rdi	       123	list.c	FUNCTION_7
0x400020b	      0x48837df800	                  cmp qword [rbp - 8], 0	       124	list.c	FUNCTION_7	IF_1
0x4000210	            0x7428	                            je 0x400023a	       124	list.c	FUNCTION_7	IF_1
0x4000212	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	list.c	FUNCTION_7	IF_1
0x4000216	          0x8b4038	            mov eax, dword [rax + 0x38] 	       124	list.c	FUNCTION_7	IF_1
0x4000219	          0x8d50ff	                      lea edx, [rax - 1]	       124	list.c	FUNCTION_7	IF_1
0x400021c	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	list.c	FUNCTION_7	IF_1
0x4000220	          0x895038	             mov dword [rax + 0x38], edx	       124	list.c	FUNCTION_7	IF_1
0x4000223	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	list.c	FUNCTION_7	IF_1
0x4000227	          0x8b4038	            mov eax, dword [rax + 0x38] 	       124	list.c	FUNCTION_7	IF_1
0x400022a	            0x85c0	                           test eax, eax	       124	list.c	FUNCTION_7	IF_1
0x400022c	            0x7f0c	                            jg 0x400023a	       124	list.c	FUNCTION_7	IF_1
0x400022e	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	list.c	FUNCTION_7	CALL_1
0x4000232	          0x4889c7	                            mov rdi, rax	       125	list.c	FUNCTION_7	CALL_1
0x4000235	      0xe800000000	                          call 0x400023a	       125	list.c	FUNCTION_7	CALL_1
0x400023a	              0x90	                                     nop	       126	list.c	FUNCTION_7
0x400023b	              0xc9	                                   leave	       126	list.c	FUNCTION_7
0x400023c	              0xc3	                                     ret	       126	list.c	FUNCTION_7
list_append_dict	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	31
0x400092c	              0x55	                                push rbp	       464	list.c	FUNCTION_24
0x400092d	          0x4889e5	                            mov rbp, rsp	       464	list.c	FUNCTION_24
0x4000930	        0x4883ec20	                           sub rsp, 0x20	       464	list.c	FUNCTION_24
0x4000934	        0x48897de8	             mov qword [rbp - 0x18], rdi	       464	list.c	FUNCTION_24
0x4000938	        0x488975e0	             mov qword [rbp - 0x20], rsi	       464	list.c	FUNCTION_24
0x400093c	      0xe800000000	                          call 0x4000941	       465	list.c	FUNCTION_24	CALL_1
0x4000941	        0x488945f8	                mov qword [rbp - 8], rax	       465	list.c	FUNCTION_24	CALL_1
0x4000945	      0x48837df800	                  cmp qword [rbp - 8], 0	       467	list.c	FUNCTION_24	IF_1
0x400094a	            0x7507	                           jne 0x4000953	       467	list.c	FUNCTION_24	IF_1
0x400094c	      0xb800000000	                              mov eax, 0	       468	list.c	FUNCTION_24	IF_1
0x4000951	            0xeb48	                           jmp 0x400099b	       468	list.c	FUNCTION_24	IF_1
0x4000953	        0x488b45f8	                mov rax, qword [rbp - 8]	       469	list.c	FUNCTION_24
0x4000957	    0xc74010060000	               mov dword [rax + 0x10], 6	       469	list.c	FUNCTION_24
0x400095e	        0x488b45f8	                mov rax, qword [rbp - 8]	       470	list.c	FUNCTION_24
0x4000962	        0xc6401400	                mov byte [rax + 0x14], 0	       470	list.c	FUNCTION_24
0x4000966	        0x488b45f8	                mov rax, qword [rbp - 8]	       471	list.c	FUNCTION_24
0x400096a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       471	list.c	FUNCTION_24
0x400096e	        0x48895018	             mov qword [rax + 0x18], rdx	       471	list.c	FUNCTION_24
0x4000972	        0x488b55f8	                mov rdx, qword [rbp - 8]	       472	list.c	FUNCTION_24	CALL_2
0x4000976	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	list.c	FUNCTION_24	CALL_2
0x400097a	          0x4889d6	                            mov rsi, rdx	       472	list.c	FUNCTION_24	CALL_2
0x400097d	          0x4889c7	                            mov rdi, rax	       472	list.c	FUNCTION_24	CALL_2
0x4000980	      0xe800000000	                          call 0x4000985	       472	list.c	FUNCTION_24	CALL_2
0x4000985	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       473	list.c	FUNCTION_24
0x4000989	          0x8b4004	                mov eax, dword [rax + 4]	       473	list.c	FUNCTION_24
0x400098c	          0x8d5001	                      lea edx, [rax + 1]	       473	list.c	FUNCTION_24
0x400098f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       473	list.c	FUNCTION_24
0x4000993	          0x895004	                mov dword [rax + 4], edx	       473	list.c	FUNCTION_24
0x4000996	      0xb801000000	                              mov eax, 1	       474	list.c	FUNCTION_24
0x400099b	              0xc9	                                   leave	       475	list.c	FUNCTION_24
0x400099c	              0xc3	                                     ret	       475	list.c	FUNCTION_24
list_rem_watch	FOR,1:CALL,0:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	30
0x400006b	              0x55	                                push rbp	        37	list.c	FUNCTION_2
0x400006c	          0x4889e5	                            mov rbp, rsp	        37	list.c	FUNCTION_2
0x400006f	        0x48897de8	             mov qword [rbp - 0x18], rdi	        37	list.c	FUNCTION_2
0x4000073	        0x488975e0	             mov qword [rbp - 0x20], rsi	        37	list.c	FUNCTION_2
0x4000077	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	list.c	FUNCTION_2
0x400007b	        0x4883c010	                           add rax, 0x10	        40	list.c	FUNCTION_2
0x400007f	        0x488945f8	                mov qword [rbp - 8], rax	        40	list.c	FUNCTION_2
0x4000083	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	list.c	FUNCTION_2	FOR_1
0x4000087	        0x488b4010	            mov rax, qword [rax + 0x10] 	        41	list.c	FUNCTION_2	FOR_1
0x400008b	        0x488945f0	             mov qword [rbp - 0x10], rax	        41	list.c	FUNCTION_2	FOR_1
0x400008f	            0xeb33	                           jmp 0x40000c4	        41	list.c	FUNCTION_2	FOR_1
0x4000091	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000095	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000099	            0x7511	                           jne 0x40000ac	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x400009b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x400009f	        0x488b5008	                mov rdx, qword [rax + 8]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x40000a3	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x40000a7	          0x488910	                    mov qword [rax], rdx	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x40000aa	            0xeb1f	                           jmp 0x40000cb	        46	list.c	FUNCTION_2	FOR_1	IF_1
0x40000ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        48	list.c	FUNCTION_2	FOR_1
0x40000b0	        0x4883c008	                              add rax, 8	        48	list.c	FUNCTION_2	FOR_1
0x40000b4	        0x488945f8	                mov qword [rbp - 8], rax	        48	list.c	FUNCTION_2	FOR_1
0x40000b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        41	list.c	FUNCTION_2	FOR_1
0x40000bc	        0x488b4008	                mov rax, qword [rax + 8]	        41	list.c	FUNCTION_2	FOR_1
0x40000c0	        0x488945f0	             mov qword [rbp - 0x10], rax	        41	list.c	FUNCTION_2	FOR_1
0x40000c4	      0x48837df000	               cmp qword [rbp - 0x10], 0	        41	list.c	FUNCTION_2	FOR_1
0x40000c9	            0x75c6	                           jne 0x4000091	        41	list.c	FUNCTION_2	FOR_1
0x40000cb	              0x90	                                     nop	        50	list.c	FUNCTION_2
0x40000cc	              0x5d	                                 pop rbp	        50	list.c	FUNCTION_2
0x40000cd	              0xc3	                                     ret	        50	list.c	FUNCTION_2
list_fix_watch	FOR,1:CALL,0:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	24
0x40000ce	              0x55	                                push rbp	        58	list.c	FUNCTION_3
0x40000cf	          0x4889e5	                            mov rbp, rsp	        58	list.c	FUNCTION_3
0x40000d2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        58	list.c	FUNCTION_3
0x40000d6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        58	list.c	FUNCTION_3
0x40000da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	list.c	FUNCTION_3	FOR_1
0x40000de	        0x488b4010	            mov rax, qword [rax + 0x10] 	        61	list.c	FUNCTION_3	FOR_1
0x40000e2	        0x488945f8	                mov qword [rbp - 8], rax	        61	list.c	FUNCTION_3	FOR_1
0x40000e6	            0xeb27	                           jmp 0x400010f	        61	list.c	FUNCTION_3	FOR_1
0x40000e8	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x40000ec	          0x488b00	                    mov rax, qword [rax]	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x40000ef	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x40000f3	            0x750e	                           jne 0x4000103	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x40000f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x40000f9	          0x488b10	                    mov rdx, qword [rax]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x40000fc	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x4000100	          0x488910	                    mov qword [rax], rdx	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x4000103	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	list.c	FUNCTION_3	FOR_1
0x4000107	        0x488b4008	                mov rax, qword [rax + 8]	        61	list.c	FUNCTION_3	FOR_1
0x400010b	        0x488945f8	                mov qword [rbp - 8], rax	        61	list.c	FUNCTION_3	FOR_1
0x400010f	      0x48837df800	                  cmp qword [rbp - 8], 0	        61	list.c	FUNCTION_3	FOR_1
0x4000114	            0x75d2	                           jne 0x40000e8	        61	list.c	FUNCTION_3	FOR_1
0x4000116	              0x90	                                     nop	        64	list.c	FUNCTION_3
0x4000117	              0x5d	                                 pop rbp	        64	list.c	FUNCTION_3
0x4000118	              0xc3	                                     ret	        64	list.c	FUNCTION_3
list_extend	FOR,1:CALL,1:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	35
0x4000c35	              0x55	                                push rbp	       590	list.c	FUNCTION_30
0x4000c36	          0x4889e5	                            mov rbp, rsp	       590	list.c	FUNCTION_30
0x4000c39	        0x4883ec30	                           sub rsp, 0x30	       590	list.c	FUNCTION_30
0x4000c3d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       590	list.c	FUNCTION_30
0x4000c41	        0x488975e0	             mov qword [rbp - 0x20], rsi	       590	list.c	FUNCTION_30
0x4000c45	        0x488955d8	             mov qword [rbp - 0x28], rdx	       590	list.c	FUNCTION_30
0x4000c49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       592	list.c	FUNCTION_30
0x4000c4d	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       592	list.c	FUNCTION_30
0x4000c50	          0x8945f4	              mov dword [rbp - 0xc], eax	       592	list.c	FUNCTION_30
0x4000c53	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       596	list.c	FUNCTION_30	FOR_1
0x4000c57	          0x488b00	                    mov rax, qword [rax]	       596	list.c	FUNCTION_30	FOR_1
0x4000c5a	        0x488945f8	                mov qword [rbp - 8], rax	       596	list.c	FUNCTION_30	FOR_1
0x4000c5e	            0xeb31	                           jmp 0x4000c91	       596	list.c	FUNCTION_30	FOR_1
0x4000c60	        0x488b45f8	                mov rax, qword [rbp - 8]	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c64	        0x488d4810	                   lea rcx, [rax + 0x10]	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c68	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c70	          0x4889ce	                            mov rsi, rcx	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c73	          0x4889c7	                            mov rdi, rax	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c76	      0xe800000000	                          call 0x4000c7b	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c7b	            0x85c0	                           test eax, eax	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c7d	            0x7507	                           jne 0x4000c86	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000c7f	      0xb800000000	                              mov eax, 0	       598	list.c	FUNCTION_30	FOR_1	IF_1
0x4000c84	            0xeb21	                           jmp 0x4000ca7	       598	list.c	FUNCTION_30	FOR_1	IF_1
0x4000c86	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	list.c	FUNCTION_30	FOR_1
0x4000c8a	          0x488b00	                    mov rax, qword [rax]	       596	list.c	FUNCTION_30	FOR_1
0x4000c8d	        0x488945f8	                mov qword [rbp - 8], rax	       596	list.c	FUNCTION_30	FOR_1
0x4000c91	      0x48837df800	                  cmp qword [rbp - 8], 0	       596	list.c	FUNCTION_30	FOR_1
0x4000c96	            0x740a	                            je 0x4000ca2	       596	list.c	FUNCTION_30	FOR_1
0x4000c98	        0x836df401	                sub dword [rbp - 0xc], 1	       596	list.c	FUNCTION_30	FOR_1
0x4000c9c	        0x837df400	                cmp dword [rbp - 0xc], 0	       596	list.c	FUNCTION_30	FOR_1
0x4000ca0	            0x79be	                           jns 0x4000c60	       596	list.c	FUNCTION_30	FOR_1
0x4000ca2	      0xb801000000	                              mov eax, 1	       599	list.c	FUNCTION_30
0x4000ca7	              0xc9	                                   leave	       600	list.c	FUNCTION_30
0x4000ca8	              0xc3	                                     ret	       600	list.c	FUNCTION_30
init_static_list	FOR,1:CALL,1:WHILE,0:ELSE,2:functions,0:IF,2:DO,0:SWITCH,0	58
0x4001692	              0x55	                                push rbp	       959	list.c	FUNCTION_39
0x4001693	          0x4889e5	                            mov rbp, rsp	       959	list.c	FUNCTION_39
0x4001696	        0x4883ec30	                           sub rsp, 0x30	       959	list.c	FUNCTION_39
0x400169a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       959	list.c	FUNCTION_39
0x400169e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       960	list.c	FUNCTION_39
0x40016a2	        0x488945f0	             mov qword [rbp - 0x10], rax	       960	list.c	FUNCTION_39
0x40016a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       963	list.c	FUNCTION_39	CALL_1
0x40016aa	      0xba90010000	                          mov edx, 0x190	       963	list.c	FUNCTION_39	CALL_1
0x40016af	      0xbe00000000	                              mov esi, 0	       963	list.c	FUNCTION_39	CALL_1
0x40016b4	          0x4889c7	                            mov rdi, rax	       963	list.c	FUNCTION_39	CALL_1
0x40016b7	      0xe800000000	                          call 0x40016bc	       963	list.c	FUNCTION_39	CALL_1
0x40016bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       964	list.c	FUNCTION_39
0x40016c0	        0x488d5050	                   lea rdx, [rax + 0x50]	       964	list.c	FUNCTION_39
0x40016c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       964	list.c	FUNCTION_39
0x40016c8	          0x488910	                    mov qword [rax], rdx	       964	list.c	FUNCTION_39
0x40016cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       965	list.c	FUNCTION_39
0x40016cf	    0x488d90700100	                  lea rdx, [rax + 0x170]	       965	list.c	FUNCTION_39
0x40016d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       965	list.c	FUNCTION_39
0x40016da	        0x48895008	                mov qword [rax + 8], rdx	       965	list.c	FUNCTION_39
0x40016de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       966	list.c	FUNCTION_39
0x40016e2	    0xc740389f8601	        mov dword [rax + 0x38], 0x1869f 	       966	list.c	FUNCTION_39
0x40016e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       967	list.c	FUNCTION_39
0x40016ed	        0xc6404802	                mov byte [rax + 0x48], 2	       967	list.c	FUNCTION_39
0x40016f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       968	list.c	FUNCTION_39
0x40016f5	    0xc7403c0a0000	             mov dword [rax + 0x3c], 0xa	       968	list.c	FUNCTION_39
0x40016fc	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       970	list.c	FUNCTION_39	FOR_1
0x4001703	            0xeb62	                           jmp 0x4001767	       970	list.c	FUNCTION_39	FOR_1
0x4001705	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       972	list.c	FUNCTION_39	FOR_1
0x4001708	            0x4898	                                    cdqe	       972	list.c	FUNCTION_39	FOR_1
0x400170a	        0x48c1e005	                              shl rax, 5	       972	list.c	FUNCTION_39	FOR_1
0x400170e	        0x488d5050	                   lea rdx, [rax + 0x50]	       972	list.c	FUNCTION_39	FOR_1
0x4001712	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       972	list.c	FUNCTION_39	FOR_1
0x4001716	          0x4801d0	                            add rax, rdx	       972	list.c	FUNCTION_39	FOR_1
0x4001719	        0x488945f8	                mov qword [rbp - 8], rax	       972	list.c	FUNCTION_39	FOR_1
0x400171d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       974	list.c	FUNCTION_39	FOR_1	IF_1
0x4001721	            0x750e	                           jne 0x4001731	       974	list.c	FUNCTION_39	FOR_1	IF_1
0x4001723	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	list.c	FUNCTION_39	FOR_1	IF_1
0x4001727	    0x48c740080000	                  mov qword [rax + 8], 0	       975	list.c	FUNCTION_39	FOR_1	IF_1
0x400172f	            0xeb10	                           jmp 0x4001741	       975	list.c	FUNCTION_39	FOR_1	IF_1
0x4001731	        0x488b45f8	                mov rax, qword [rbp - 8]	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001735	        0x488d50e0	                   lea rdx, [rax - 0x20]	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001739	        0x488b45f8	                mov rax, qword [rbp - 8]	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x400173d	        0x48895008	                mov qword [rax + 8], rdx	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001741	        0x837dec09	               cmp dword [rbp - 0x14], 9	       978	list.c	FUNCTION_39	FOR_1	IF_2
0x4001745	            0x750d	                           jne 0x4001754	       978	list.c	FUNCTION_39	FOR_1	IF_2
0x4001747	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	list.c	FUNCTION_39	FOR_1	IF_2
0x400174b	    0x48c700000000	                      mov qword [rax], 0	       979	list.c	FUNCTION_39	FOR_1	IF_2
0x4001752	            0xeb0f	                           jmp 0x4001763	       979	list.c	FUNCTION_39	FOR_1	IF_2
0x4001754	        0x488b45f8	                mov rax, qword [rbp - 8]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001758	        0x488d5020	                   lea rdx, [rax + 0x20]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x400175c	        0x488b45f8	                mov rax, qword [rbp - 8]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001760	          0x488910	                    mov qword [rax], rdx	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001763	        0x8345ec01	               add dword [rbp - 0x14], 1	       970	list.c	FUNCTION_39	FOR_1
0x4001767	        0x837dec09	               cmp dword [rbp - 0x14], 9	       970	list.c	FUNCTION_39	FOR_1
0x400176b	            0x7e98	                           jle 0x4001705	       970	list.c	FUNCTION_39	FOR_1
0x400176d	              0x90	                                     nop	       983	list.c	FUNCTION_39
0x400176e	              0xc9	                                   leave	       983	list.c	FUNCTION_39
0x400176f	              0xc3	                                     ret	       983	list.c	FUNCTION_39
list_free_contents	FOR,1:CALL,2:WHILE,0:ELSE,0:functions,0:IF,0:DO,0:SWITCH,0	27
0x400023d	              0x55	                                push rbp	       134	list.c	FUNCTION_8
0x400023e	          0x4889e5	                            mov rbp, rsp	       134	list.c	FUNCTION_8
0x4000241	        0x4883ec20	                           sub rsp, 0x20	       134	list.c	FUNCTION_8
0x4000245	        0x48897de8	             mov qword [rbp - 0x18], rdi	       134	list.c	FUNCTION_8
0x4000249	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	list.c	FUNCTION_8	FOR_1
0x400024d	          0x488b00	                    mov rax, qword [rax]	       137	list.c	FUNCTION_8	FOR_1
0x4000250	        0x488945f8	                mov qword [rbp - 8], rax	       137	list.c	FUNCTION_8	FOR_1
0x4000254	            0xeb35	                           jmp 0x400028b	       137	list.c	FUNCTION_8	FOR_1
0x4000256	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	list.c	FUNCTION_8	FOR_1
0x400025a	          0x488b10	                    mov rdx, qword [rax]	       140	list.c	FUNCTION_8	FOR_1
0x400025d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	list.c	FUNCTION_8	FOR_1
0x4000261	          0x488910	                    mov qword [rax], rdx	       140	list.c	FUNCTION_8	FOR_1
0x4000264	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4000268	        0x4883c010	                           add rax, 0x10	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x400026c	          0x4889c7	                            mov rdi, rax	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x400026f	      0xe800000000	                          call 0x4000274	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4000274	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000278	          0x4889c7	                            mov rdi, rax	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x400027b	      0xe800000000	                          call 0x4000280	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000280	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	list.c	FUNCTION_8	FOR_1
0x4000284	          0x488b00	                    mov rax, qword [rax]	       137	list.c	FUNCTION_8	FOR_1
0x4000287	        0x488945f8	                mov qword [rbp - 8], rax	       137	list.c	FUNCTION_8	FOR_1
0x400028b	      0x48837df800	                  cmp qword [rbp - 8], 0	       137	list.c	FUNCTION_8	FOR_1
0x4000290	            0x75c4	                           jne 0x4000256	       137	list.c	FUNCTION_8	FOR_1
0x4000292	              0x90	                                     nop	       144	list.c	FUNCTION_8
0x4000293	              0xc9	                                   leave	       144	list.c	FUNCTION_8
0x4000294	              0xc3	                                     ret	       144	list.c	FUNCTION_8
rettv_list_set	FOR,0:CALL,0:WHILE,0:ELSE,0:functions,0:IF,1:DO,0:SWITCH,0	19
0x40001c2	              0x55	                                push rbp	       110	list.c	FUNCTION_6
0x40001c3	          0x4889e5	                            mov rbp, rsp	       110	list.c	FUNCTION_6
0x40001c6	        0x48897df8	                mov qword [rbp - 8], rdi	       110	list.c	FUNCTION_6
0x40001ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	       110	list.c	FUNCTION_6
0x40001ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	list.c	FUNCTION_6
0x40001d2	    0xc70005000000	                      mov dword [rax], 5	       111	list.c	FUNCTION_6
0x40001d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	list.c	FUNCTION_6
0x40001dc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	list.c	FUNCTION_6
0x40001e0	        0x48895008	                mov qword [rax + 8], rdx	       112	list.c	FUNCTION_6
0x40001e4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       113	list.c	FUNCTION_6	IF_1
0x40001e9	            0x7411	                            je 0x40001fc	       113	list.c	FUNCTION_6	IF_1
0x40001eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	list.c	FUNCTION_6	IF_1
0x40001ef	          0x8b4038	            mov eax, dword [rax + 0x38] 	       114	list.c	FUNCTION_6	IF_1
0x40001f2	          0x8d5001	                      lea edx, [rax + 1]	       114	list.c	FUNCTION_6	IF_1
0x40001f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	list.c	FUNCTION_6	IF_1
0x40001f9	          0x895038	             mov dword [rax + 0x38], edx	       114	list.c	FUNCTION_6	IF_1
0x40001fc	              0x90	                                     nop	       115	list.c	FUNCTION_6
0x40001fd	              0x5d	                                 pop rbp	       115	list.c	FUNCTION_6
0x40001fe	              0xc3	                                     ret	       115	list.c	FUNCTION_6
list_append_string	FOR,0:CALL,4:WHILE,0:ELSE,1:functions,0:IF,3:DO,0:SWITCH,0	50
0x4000a0e	              0x55	                                push rbp	       505	list.c	FUNCTION_26
0x4000a0f	          0x4889e5	                            mov rbp, rsp	       505	list.c	FUNCTION_26
0x4000a12	        0x4883ec30	                           sub rsp, 0x30	       505	list.c	FUNCTION_26
0x4000a16	        0x48897de8	             mov qword [rbp - 0x18], rdi	       505	list.c	FUNCTION_26
0x4000a1a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       505	list.c	FUNCTION_26
0x4000a1e	          0x8955dc	             mov dword [rbp - 0x24], edx	       505	list.c	FUNCTION_26
0x4000a21	      0xe800000000	                          call 0x4000a26	       506	list.c	FUNCTION_26	CALL_1
0x4000a26	        0x488945f8	                mov qword [rbp - 8], rax	       506	list.c	FUNCTION_26	CALL_1
0x4000a2a	      0x48837df800	                  cmp qword [rbp - 8], 0	       508	list.c	FUNCTION_26	IF_1
0x4000a2f	            0x750a	                           jne 0x4000a3b	       508	list.c	FUNCTION_26	IF_1
0x4000a31	      0xb800000000	                              mov eax, 0	       509	list.c	FUNCTION_26	IF_1
0x4000a36	      0xe987000000	                           jmp 0x4000ac2	       509	list.c	FUNCTION_26	IF_1
0x4000a3b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       510	list.c	FUNCTION_26	CALL_2
0x4000a3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       510	list.c	FUNCTION_26	CALL_2
0x4000a43	          0x4889d6	                            mov rsi, rdx	       510	list.c	FUNCTION_26	CALL_2
0x4000a46	          0x4889c7	                            mov rdi, rax	       510	list.c	FUNCTION_26	CALL_2
0x4000a49	      0xe800000000	                          call 0x4000a4e	       510	list.c	FUNCTION_26	CALL_2
0x4000a4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       511	list.c	FUNCTION_26
0x4000a52	    0xc74010020000	               mov dword [rax + 0x10], 2	       511	list.c	FUNCTION_26
0x4000a59	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	list.c	FUNCTION_26
0x4000a5d	        0xc6401400	                mov byte [rax + 0x14], 0	       512	list.c	FUNCTION_26
0x4000a61	      0x48837de000	               cmp qword [rbp - 0x20], 0	       513	list.c	FUNCTION_26	IF_2
0x4000a66	            0x750e	                           jne 0x4000a76	       513	list.c	FUNCTION_26	IF_2
0x4000a68	        0x488b45f8	                mov rax, qword [rbp - 8]	       514	list.c	FUNCTION_26	IF_2
0x4000a6c	    0x48c740180000	               mov qword [rax + 0x18], 0	       514	list.c	FUNCTION_26	IF_2
0x4000a74	            0xeb47	                           jmp 0x4000abd	       514	list.c	FUNCTION_26	IF_2
0x4000a76	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a7a	            0x7816	                            js 0x4000a92	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a7c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a7f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a83	            0x89d6	                            mov esi, edx	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a85	          0x4889c7	                            mov rdi, rax	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a88	      0xe800000000	                          call 0x4000a8d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a8d	          0x4889c2	                            mov rdx, rax	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a90	            0xeb0f	                           jmp 0x4000aa1	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a96	          0x4889c7	                            mov rdi, rax	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a99	      0xe800000000	                          call 0x4000a9e	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000a9e	          0x4889c2	                            mov rdx, rax	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000aa1	        0x488b45f8	                mov rax, qword [rbp - 8]	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000aa5	        0x48895018	             mov qword [rax + 0x18], rdx	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000aa9	        0x488b45f8	                mov rax, qword [rbp - 8]	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000aad	        0x488b4018	            mov rax, qword [rax + 0x18] 	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000ab1	          0x4885c0	                           test rax, rax	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000ab4	            0x7507	                           jne 0x4000abd	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000ab6	      0xb800000000	                              mov eax, 0	       517	list.c	FUNCTION_26	ELSE_1	IF_3
0x4000abb	            0xeb05	                           jmp 0x4000ac2	       517	list.c	FUNCTION_26	ELSE_1	IF_3
0x4000abd	      0xb801000000	                              mov eax, 1	       518	list.c	FUNCTION_26
0x4000ac2	              0xc9	                                   leave	       519	list.c	FUNCTION_26
0x4000ac3	              0xc3	                                     ret	       519	list.c	FUNCTION_26
listitem_free	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,0:DO,0:SWITCH,0	14
0x400040c	              0x55	                                push rbp	       228	list.c	FUNCTION_14
0x400040d	          0x4889e5	                            mov rbp, rsp	       228	list.c	FUNCTION_14
0x4000410	        0x4883ec10	                           sub rsp, 0x10	       228	list.c	FUNCTION_14
0x4000414	        0x48897df8	                mov qword [rbp - 8], rdi	       228	list.c	FUNCTION_14
0x4000418	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	list.c	FUNCTION_14	CALL_1
0x400041c	        0x4883c010	                           add rax, 0x10	       229	list.c	FUNCTION_14	CALL_1
0x4000420	          0x4889c7	                            mov rdi, rax	       229	list.c	FUNCTION_14	CALL_1
0x4000423	      0xe800000000	                          call 0x4000428	       229	list.c	FUNCTION_14	CALL_1
0x4000428	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	list.c	FUNCTION_14	CALL_2
0x400042c	          0x4889c7	                            mov rdi, rax	       230	list.c	FUNCTION_14	CALL_2
0x400042f	      0xe800000000	                          call 0x4000434	       230	list.c	FUNCTION_14	CALL_2
0x4000434	              0x90	                                     nop	       231	list.c	FUNCTION_14
0x4000435	              0xc9	                                   leave	       231	list.c	FUNCTION_14
0x4000436	              0xc3	                                     ret	       231	list.c	FUNCTION_14
list_concat	FOR,0:CALL,2:WHILE,0:ELSE,0:functions,0:IF,2:DO,0:SWITCH,0	35
0x4000ca9	              0x55	                                push rbp	       608	list.c	FUNCTION_31
0x4000caa	          0x4889e5	                            mov rbp, rsp	       608	list.c	FUNCTION_31
0x4000cad	        0x4883ec30	                           sub rsp, 0x30	       608	list.c	FUNCTION_31
0x4000cb1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       608	list.c	FUNCTION_31
0x4000cb5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       608	list.c	FUNCTION_31
0x4000cb9	        0x488955d8	             mov qword [rbp - 0x28], rdx	       608	list.c	FUNCTION_31
0x4000cbd	      0x48837de800	               cmp qword [rbp - 0x18], 0	       611	list.c	FUNCTION_31	IF_1
0x4000cc2	            0x7407	                            je 0x4000ccb	       611	list.c	FUNCTION_31	IF_1
0x4000cc4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       611	list.c	FUNCTION_31	IF_1
0x4000cc9	            0x7507	                           jne 0x4000cd2	       611	list.c	FUNCTION_31	IF_1
0x4000ccb	      0xb800000000	                              mov eax, 0	       612	list.c	FUNCTION_31	IF_1
0x4000cd0	            0xeb56	                           jmp 0x4000d28	       612	list.c	FUNCTION_31	IF_1
0x4000cd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       615	list.c	FUNCTION_31	CALL_1
0x4000cd6	      0xba00000000	                              mov edx, 0	       615	list.c	FUNCTION_31	CALL_1
0x4000cdb	      0xbe00000000	                              mov esi, 0	       615	list.c	FUNCTION_31	CALL_1
0x4000ce0	          0x4889c7	                            mov rdi, rax	       615	list.c	FUNCTION_31	CALL_1
0x4000ce3	      0xe800000000	                          call 0x4000ce8	       615	list.c	FUNCTION_31	CALL_1
0x4000ce8	        0x488945f8	                mov qword [rbp - 8], rax	       615	list.c	FUNCTION_31	CALL_1
0x4000cec	      0x48837df800	                  cmp qword [rbp - 8], 0	       616	list.c	FUNCTION_31	IF_2
0x4000cf1	            0x7507	                           jne 0x4000cfa	       616	list.c	FUNCTION_31	IF_2
0x4000cf3	      0xb800000000	                              mov eax, 0	       617	list.c	FUNCTION_31	IF_2
0x4000cf8	            0xeb2e	                           jmp 0x4000d28	       617	list.c	FUNCTION_31	IF_2
0x4000cfa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       618	list.c	FUNCTION_31
0x4000cfe	    0xc70005000000	                      mov dword [rax], 5	       618	list.c	FUNCTION_31
0x4000d04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       619	list.c	FUNCTION_31
0x4000d08	        0x488b55f8	                mov rdx, qword [rbp - 8]	       619	list.c	FUNCTION_31
0x4000d0c	        0x48895008	                mov qword [rax + 8], rdx	       619	list.c	FUNCTION_31
0x4000d10	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       622	list.c	FUNCTION_31	CALL_2
0x4000d14	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	list.c	FUNCTION_31	CALL_2
0x4000d18	      0xba00000000	                              mov edx, 0	       622	list.c	FUNCTION_31	CALL_2
0x4000d1d	          0x4889ce	                            mov rsi, rcx	       622	list.c	FUNCTION_31	CALL_2
0x4000d20	          0x4889c7	                            mov rdi, rax	       622	list.c	FUNCTION_31	CALL_2
0x4000d23	      0xe800000000	                          call 0x4000d28	       622	list.c	FUNCTION_31	CALL_2
0x4000d28	              0xc9	                                   leave	       623	list.c	FUNCTION_31
0x4000d29	              0xc3	                                     ret	       623	list.c	FUNCTION_31
