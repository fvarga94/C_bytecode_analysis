copy_winopt	ELSE,0:IF,0:SWITCH,0:CALL,15:DO,0:WHILE,0:functions,0:FOR,0	226
0x400e7b0	              0x55	                                push rbp	     10870	option.c	FUNCTION_80
0x400e7b1	          0x4889e5	                            mov rbp, rsp	     10870	option.c	FUNCTION_80
0x400e7b4	        0x4883ec10	                           sub rsp, 0x10	     10870	option.c	FUNCTION_80
0x400e7b8	        0x48897df8	                mov qword [rbp - 8], rdi	     10870	option.c	FUNCTION_80
0x400e7bc	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10870	option.c	FUNCTION_80
0x400e7c0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10872	option.c	FUNCTION_80
0x400e7c4	            0x8b10	                    mov edx, dword [rax]	     10872	option.c	FUNCTION_80
0x400e7c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10872	option.c	FUNCTION_80
0x400e7ca	            0x8910	                    mov dword [rax], edx	     10872	option.c	FUNCTION_80
0x400e7cc	        0x488b45f8	                mov rax, qword [rbp - 8]	     10874	option.c	FUNCTION_80
0x400e7d0	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	     10874	option.c	FUNCTION_80
0x400e7d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10874	option.c	FUNCTION_80
0x400e7da	    0x899084000000	             mov dword [rax + 0x84], edx	     10874	option.c	FUNCTION_80
0x400e7e0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10875	option.c	FUNCTION_80
0x400e7e4	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	     10875	option.c	FUNCTION_80
0x400e7ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10875	option.c	FUNCTION_80
0x400e7ee	    0x899088000000	             mov dword [rax + 0x88], edx	     10875	option.c	FUNCTION_80
0x400e7f4	        0x488b45f8	                mov rax, qword [rbp - 8]	     10876	option.c	FUNCTION_80
0x400e7f8	    0x8b908c000000	            mov edx, dword [rax + 0x8c] 	     10876	option.c	FUNCTION_80
0x400e7fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10876	option.c	FUNCTION_80
0x400e802	    0x89908c000000	             mov dword [rax + 0x8c], edx	     10876	option.c	FUNCTION_80
0x400e808	        0x488b45f8	                mov rax, qword [rbp - 8]	     10878	option.c	FUNCTION_80
0x400e80c	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	     10878	option.c	FUNCTION_80
0x400e813	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10878	option.c	FUNCTION_80
0x400e817	    0x488990900000	             mov qword [rax + 0x90], rdx	     10878	option.c	FUNCTION_80
0x400e81e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10881	option.c	FUNCTION_80
0x400e822	    0x8b90a4000000	            mov edx, dword [rax + 0xa4] 	     10881	option.c	FUNCTION_80
0x400e828	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10881	option.c	FUNCTION_80
0x400e82c	    0x8990a4000000	             mov dword [rax + 0xa4], edx	     10881	option.c	FUNCTION_80
0x400e832	        0x488b45f8	                mov rax, qword [rbp - 8]	     10882	option.c	FUNCTION_80	CALL_1
0x400e836	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	     10882	option.c	FUNCTION_80	CALL_1
0x400e83d	          0x4889c7	                            mov rdi, rax	     10882	option.c	FUNCTION_80	CALL_1
0x400e840	      0xe800000000	                          call 0x400e845	     10882	option.c	FUNCTION_80	CALL_1
0x400e845	          0x4889c2	                            mov rdx, rax	     10882	option.c	FUNCTION_80	CALL_1
0x400e848	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10882	option.c	FUNCTION_80	CALL_1
0x400e84c	    0x488990a80000	             mov qword [rax + 0xa8], rdx	     10882	option.c	FUNCTION_80	CALL_1
0x400e853	        0x488b45f8	                mov rax, qword [rbp - 8]	     10885	option.c	FUNCTION_80	CALL_2
0x400e857	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	     10885	option.c	FUNCTION_80	CALL_2
0x400e85e	          0x4889c7	                            mov rdi, rax	     10885	option.c	FUNCTION_80	CALL_2
0x400e861	      0xe800000000	                          call 0x400e866	     10885	option.c	FUNCTION_80	CALL_2
0x400e866	          0x4889c2	                            mov rdx, rax	     10885	option.c	FUNCTION_80	CALL_2
0x400e869	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10885	option.c	FUNCTION_80	CALL_2
0x400e86d	    0x488990d00000	             mov qword [rax + 0xd0], rdx	     10885	option.c	FUNCTION_80	CALL_2
0x400e874	        0x488b45f8	                mov rax, qword [rbp - 8]	     10887	option.c	FUNCTION_80
0x400e878	    0x8b90e4000000	            mov edx, dword [rax + 0xe4] 	     10887	option.c	FUNCTION_80
0x400e87e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10887	option.c	FUNCTION_80
0x400e882	    0x8990e4000000	             mov dword [rax + 0xe4], edx	     10887	option.c	FUNCTION_80
0x400e888	        0x488b45f8	                mov rax, qword [rbp - 8]	     10889	option.c	FUNCTION_80
0x400e88c	    0x8b90e8000000	            mov edx, dword [rax + 0xe8] 	     10889	option.c	FUNCTION_80
0x400e892	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10889	option.c	FUNCTION_80
0x400e896	    0x8990e8000000	             mov dword [rax + 0xe8], edx	     10889	option.c	FUNCTION_80
0x400e89c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10892	option.c	FUNCTION_80
0x400e8a0	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	     10892	option.c	FUNCTION_80
0x400e8a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10892	option.c	FUNCTION_80
0x400e8aa	    0x899080000000	             mov dword [rax + 0x80], edx	     10892	option.c	FUNCTION_80
0x400e8b0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10893	option.c	FUNCTION_80
0x400e8b4	          0x8b5004	                mov edx, dword [rax + 4]	     10893	option.c	FUNCTION_80
0x400e8b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10893	option.c	FUNCTION_80
0x400e8bb	          0x895004	                mov dword [rax + 4], edx	     10893	option.c	FUNCTION_80
0x400e8be	        0x488b45f8	                mov rax, qword [rbp - 8]	     10894	option.c	FUNCTION_80	CALL_3
0x400e8c2	        0x488b4008	                mov rax, qword [rax + 8]	     10894	option.c	FUNCTION_80	CALL_3
0x400e8c6	          0x4889c7	                            mov rdi, rax	     10894	option.c	FUNCTION_80	CALL_3
0x400e8c9	      0xe800000000	                          call 0x400e8ce	     10894	option.c	FUNCTION_80	CALL_3
0x400e8ce	          0x4889c2	                            mov rdx, rax	     10894	option.c	FUNCTION_80	CALL_3
0x400e8d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10894	option.c	FUNCTION_80	CALL_3
0x400e8d5	        0x48895008	                mov qword [rax + 8], rdx	     10894	option.c	FUNCTION_80	CALL_3
0x400e8d9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10896	option.c	FUNCTION_80
0x400e8dd	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	     10896	option.c	FUNCTION_80
0x400e8e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10896	option.c	FUNCTION_80
0x400e8e7	    0x8990d8000000	             mov dword [rax + 0xd8], edx	     10896	option.c	FUNCTION_80
0x400e8ed	        0x488b45f8	                mov rax, qword [rbp - 8]	     10897	option.c	FUNCTION_80
0x400e8f1	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	     10897	option.c	FUNCTION_80
0x400e8f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10897	option.c	FUNCTION_80
0x400e8fb	    0x8990e0000000	             mov dword [rax + 0xe0], edx	     10897	option.c	FUNCTION_80
0x400e901	        0x488b45f8	                mov rax, qword [rbp - 8]	     10898	option.c	FUNCTION_80
0x400e905	    0x8b9000010000	           mov edx, dword [rax + 0x100] 	     10898	option.c	FUNCTION_80
0x400e90b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10898	option.c	FUNCTION_80
0x400e90f	    0x899000010000	            mov dword [rax + 0x100], edx	     10898	option.c	FUNCTION_80
0x400e915	        0x488b45f8	                mov rax, qword [rbp - 8]	     10899	option.c	FUNCTION_80
0x400e919	    0x8b9004010000	           mov edx, dword [rax + 0x104] 	     10899	option.c	FUNCTION_80
0x400e91f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10899	option.c	FUNCTION_80
0x400e923	    0x899004010000	            mov dword [rax + 0x104], edx	     10899	option.c	FUNCTION_80
0x400e929	        0x488b45f8	                mov rax, qword [rbp - 8]	     10901	option.c	FUNCTION_80
0x400e92d	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	     10901	option.c	FUNCTION_80
0x400e933	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10901	option.c	FUNCTION_80
0x400e937	    0x8990b8000000	             mov dword [rax + 0xb8], edx	     10901	option.c	FUNCTION_80
0x400e93d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10904	option.c	FUNCTION_80
0x400e941	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	     10904	option.c	FUNCTION_80
0x400e947	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10904	option.c	FUNCTION_80
0x400e94b	    0x8990bc000000	             mov dword [rax + 0xbc], edx	     10904	option.c	FUNCTION_80
0x400e951	        0x488b45f8	                mov rax, qword [rbp - 8]	     10905	option.c	FUNCTION_80
0x400e955	    0x8b90c0000000	            mov edx, dword [rax + 0xc0] 	     10905	option.c	FUNCTION_80
0x400e95b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10905	option.c	FUNCTION_80
0x400e95f	    0x8990c0000000	             mov dword [rax + 0xc0], edx	     10905	option.c	FUNCTION_80
0x400e965	        0x488b45f8	                mov rax, qword [rbp - 8]	     10906	option.c	FUNCTION_80	CALL_4
0x400e969	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	     10906	option.c	FUNCTION_80	CALL_4
0x400e970	          0x4889c7	                            mov rdi, rax	     10906	option.c	FUNCTION_80	CALL_4
0x400e973	      0xe800000000	                          call 0x400e978	     10906	option.c	FUNCTION_80	CALL_4
0x400e978	          0x4889c2	                            mov rdx, rax	     10906	option.c	FUNCTION_80	CALL_4
0x400e97b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10906	option.c	FUNCTION_80	CALL_4
0x400e97f	    0x488990c80000	             mov qword [rax + 0xc8], rdx	     10906	option.c	FUNCTION_80	CALL_4
0x400e986	        0x488b45f8	                mov rax, qword [rbp - 8]	     10909	option.c	FUNCTION_80
0x400e98a	          0x8b5010	            mov edx, dword [rax + 0x10] 	     10909	option.c	FUNCTION_80
0x400e98d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10909	option.c	FUNCTION_80
0x400e991	          0x895010	             mov dword [rax + 0x10], edx	     10909	option.c	FUNCTION_80
0x400e994	        0x488b45f8	                mov rax, qword [rbp - 8]	     10910	option.c	FUNCTION_80
0x400e998	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	     10910	option.c	FUNCTION_80
0x400e99e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10910	option.c	FUNCTION_80
0x400e9a2	    0x8990dc000000	             mov dword [rax + 0xdc], edx	     10910	option.c	FUNCTION_80
0x400e9a8	        0x488b45f8	                mov rax, qword [rbp - 8]	     10913	option.c	FUNCTION_80	CALL_5
0x400e9ac	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	     10913	option.c	FUNCTION_80	CALL_5
0x400e9b3	          0x4889c7	                            mov rdi, rax	     10913	option.c	FUNCTION_80	CALL_5
0x400e9b6	      0xe800000000	                          call 0x400e9bb	     10913	option.c	FUNCTION_80	CALL_5
0x400e9bb	          0x4889c2	                            mov rdx, rax	     10913	option.c	FUNCTION_80	CALL_5
0x400e9be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10913	option.c	FUNCTION_80	CALL_5
0x400e9c2	    0x488990f00000	             mov qword [rax + 0xf0], rdx	     10913	option.c	FUNCTION_80	CALL_5
0x400e9c9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10914	option.c	FUNCTION_80
0x400e9cd	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	     10914	option.c	FUNCTION_80
0x400e9d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10914	option.c	FUNCTION_80
0x400e9d8	    0x488990f80000	             mov qword [rax + 0xf8], rdx	     10914	option.c	FUNCTION_80
0x400e9df	        0x488b45f8	                mov rax, qword [rbp - 8]	     10917	option.c	FUNCTION_80	CALL_6
0x400e9e3	    0x488b80100100	           mov rax, qword [rax + 0x110] 	     10917	option.c	FUNCTION_80	CALL_6
0x400e9ea	          0x4889c7	                            mov rdi, rax	     10917	option.c	FUNCTION_80	CALL_6
0x400e9ed	      0xe800000000	                          call 0x400e9f2	     10917	option.c	FUNCTION_80	CALL_6
0x400e9f2	          0x4889c2	                            mov rdx, rax	     10917	option.c	FUNCTION_80	CALL_6
0x400e9f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10917	option.c	FUNCTION_80	CALL_6
0x400e9f9	    0x488990100100	            mov qword [rax + 0x110], rdx	     10917	option.c	FUNCTION_80	CALL_6
0x400ea00	        0x488b45f8	                mov rax, qword [rbp - 8]	     10918	option.c	FUNCTION_80	CALL_7
0x400ea04	    0x488b80180100	           mov rax, qword [rax + 0x118] 	     10918	option.c	FUNCTION_80	CALL_7
0x400ea0b	          0x4889c7	                            mov rdi, rax	     10918	option.c	FUNCTION_80	CALL_7
0x400ea0e	      0xe800000000	                          call 0x400ea13	     10918	option.c	FUNCTION_80	CALL_7
0x400ea13	          0x4889c2	                            mov rdx, rax	     10918	option.c	FUNCTION_80	CALL_7
0x400ea16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10918	option.c	FUNCTION_80	CALL_7
0x400ea1a	    0x488990180100	            mov qword [rax + 0x118], rdx	     10918	option.c	FUNCTION_80	CALL_7
0x400ea21	        0x488b45f8	                mov rax, qword [rbp - 8]	     10921	option.c	FUNCTION_80
0x400ea25	        0x488b5018	            mov rdx, qword [rax + 0x18] 	     10921	option.c	FUNCTION_80
0x400ea29	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10921	option.c	FUNCTION_80
0x400ea2d	        0x48895018	             mov qword [rax + 0x18], rdx	     10921	option.c	FUNCTION_80
0x400ea31	        0x488b45f8	                mov rax, qword [rbp - 8]	     10922	option.c	FUNCTION_80
0x400ea35	          0x8b5020	            mov edx, dword [rax + 0x20] 	     10922	option.c	FUNCTION_80
0x400ea38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10922	option.c	FUNCTION_80
0x400ea3c	          0x895020	             mov dword [rax + 0x20], edx	     10922	option.c	FUNCTION_80
0x400ea3f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10923	option.c	FUNCTION_80
0x400ea43	          0x8b5024	            mov edx, dword [rax + 0x24] 	     10923	option.c	FUNCTION_80
0x400ea46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10923	option.c	FUNCTION_80
0x400ea4a	          0x895024	             mov dword [rax + 0x24], edx	     10923	option.c	FUNCTION_80
0x400ea4d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10924	option.c	FUNCTION_80
0x400ea51	          0x8b5028	            mov edx, dword [rax + 0x28] 	     10924	option.c	FUNCTION_80
0x400ea54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10924	option.c	FUNCTION_80
0x400ea58	          0x895028	             mov dword [rax + 0x28], edx	     10924	option.c	FUNCTION_80
0x400ea5b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10925	option.c	FUNCTION_80	CALL_8
0x400ea5f	        0x488b4030	            mov rax, qword [rax + 0x30] 	     10925	option.c	FUNCTION_80	CALL_8
0x400ea63	          0x4889c7	                            mov rdi, rax	     10925	option.c	FUNCTION_80	CALL_8
0x400ea66	      0xe800000000	                          call 0x400ea6b	     10925	option.c	FUNCTION_80	CALL_8
0x400ea6b	          0x4889c2	                            mov rdx, rax	     10925	option.c	FUNCTION_80	CALL_8
0x400ea6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10925	option.c	FUNCTION_80	CALL_8
0x400ea72	        0x48895030	             mov qword [rax + 0x30], rdx	     10925	option.c	FUNCTION_80	CALL_8
0x400ea76	        0x488b45f8	                mov rax, qword [rbp - 8]	     10926	option.c	FUNCTION_80
0x400ea7a	        0x488b5058	            mov rdx, qword [rax + 0x58] 	     10926	option.c	FUNCTION_80
0x400ea7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10926	option.c	FUNCTION_80
0x400ea82	        0x48895058	             mov qword [rax + 0x58], rdx	     10926	option.c	FUNCTION_80
0x400ea86	        0x488b45f8	                mov rax, qword [rbp - 8]	     10927	option.c	FUNCTION_80
0x400ea8a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	     10927	option.c	FUNCTION_80
0x400ea8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10927	option.c	FUNCTION_80
0x400ea92	        0x48895038	             mov qword [rax + 0x38], rdx	     10927	option.c	FUNCTION_80
0x400ea96	        0x488b45f8	                mov rax, qword [rbp - 8]	     10928	option.c	FUNCTION_80
0x400ea9a	          0x8b5040	            mov edx, dword [rax + 0x40] 	     10928	option.c	FUNCTION_80
0x400ea9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10928	option.c	FUNCTION_80
0x400eaa1	          0x895040	             mov dword [rax + 0x40], edx	     10928	option.c	FUNCTION_80
0x400eaa4	        0x488b45f8	                mov rax, qword [rbp - 8]	     10929	option.c	FUNCTION_80	CALL_9
0x400eaa8	        0x488b4048	            mov rax, qword [rax + 0x48] 	     10929	option.c	FUNCTION_80	CALL_9
0x400eaac	          0x4889c7	                            mov rdi, rax	     10929	option.c	FUNCTION_80	CALL_9
0x400eaaf	      0xe800000000	                          call 0x400eab4	     10929	option.c	FUNCTION_80	CALL_9
0x400eab4	          0x4889c2	                            mov rdx, rax	     10929	option.c	FUNCTION_80	CALL_9
0x400eab7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10929	option.c	FUNCTION_80	CALL_9
0x400eabb	        0x48895048	             mov qword [rax + 0x48], rdx	     10929	option.c	FUNCTION_80	CALL_9
0x400eabf	        0x488b45f8	                mov rax, qword [rbp - 8]	     10930	option.c	FUNCTION_80
0x400eac3	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	     10930	option.c	FUNCTION_80
0x400eac9	            0x85c0	                           test eax, eax	     10931	option.c	FUNCTION_80	CALL_10
0x400eacb	            0x7412	                            je 0x400eadf	     10931	option.c	FUNCTION_80	CALL_10
0x400eacd	        0x488b45f8	                mov rax, qword [rbp - 8]	     10931	option.c	FUNCTION_80	CALL_10
0x400ead1	        0x488b4050	            mov rax, qword [rax + 0x50] 	     10931	option.c	FUNCTION_80	CALL_10
0x400ead5	          0x4889c7	                            mov rdi, rax	     10931	option.c	FUNCTION_80	CALL_10
0x400ead8	      0xe800000000	                          call 0x400eadd	     10931	option.c	FUNCTION_80	CALL_10
0x400eadd	            0xeb07	                           jmp 0x400eae6	     10931	option.c	FUNCTION_80	CALL_10
0x400eadf	    0x488b05000000	            mov rax, qword [0x0400eae6] 	     10931	option.c	FUNCTION_80	CALL_10
0x400eae6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10930	option.c	FUNCTION_80
0x400eaea	        0x48894250	             mov qword [rdx + 0x50], rax	     10930	option.c	FUNCTION_80
0x400eaee	        0x488b45f8	                mov rax, qword [rbp - 8]	     10932	option.c	FUNCTION_80
0x400eaf2	        0x488b5060	            mov rdx, qword [rax + 0x60] 	     10932	option.c	FUNCTION_80
0x400eaf6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10932	option.c	FUNCTION_80
0x400eafa	        0x48895060	             mov qword [rax + 0x60], rdx	     10932	option.c	FUNCTION_80
0x400eafe	        0x488b45f8	                mov rax, qword [rbp - 8]	     10934	option.c	FUNCTION_80	CALL_11
0x400eb02	        0x488b4068	            mov rax, qword [rax + 0x68] 	     10934	option.c	FUNCTION_80	CALL_11
0x400eb06	          0x4889c7	                            mov rdi, rax	     10934	option.c	FUNCTION_80	CALL_11
0x400eb09	      0xe800000000	                          call 0x400eb0e	     10934	option.c	FUNCTION_80	CALL_11
0x400eb0e	          0x4889c2	                            mov rdx, rax	     10934	option.c	FUNCTION_80	CALL_11
0x400eb11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10934	option.c	FUNCTION_80	CALL_11
0x400eb15	        0x48895068	             mov qword [rax + 0x68], rdx	     10934	option.c	FUNCTION_80	CALL_11
0x400eb19	        0x488b45f8	                mov rax, qword [rbp - 8]	     10935	option.c	FUNCTION_80	CALL_12
0x400eb1d	        0x488b4070	            mov rax, qword [rax + 0x70] 	     10935	option.c	FUNCTION_80	CALL_12
0x400eb21	          0x4889c7	                            mov rdi, rax	     10935	option.c	FUNCTION_80	CALL_12
0x400eb24	      0xe800000000	                          call 0x400eb29	     10935	option.c	FUNCTION_80	CALL_12
0x400eb29	          0x4889c2	                            mov rdx, rax	     10935	option.c	FUNCTION_80	CALL_12
0x400eb2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10935	option.c	FUNCTION_80	CALL_12
0x400eb30	        0x48895070	             mov qword [rax + 0x70], rdx	     10935	option.c	FUNCTION_80	CALL_12
0x400eb34	        0x488b45f8	                mov rax, qword [rbp - 8]	     10937	option.c	FUNCTION_80	CALL_13
0x400eb38	        0x488b4078	            mov rax, qword [rax + 0x78] 	     10937	option.c	FUNCTION_80	CALL_13
0x400eb3c	          0x4889c7	                            mov rdi, rax	     10937	option.c	FUNCTION_80	CALL_13
0x400eb3f	      0xe800000000	                          call 0x400eb44	     10937	option.c	FUNCTION_80	CALL_13
0x400eb44	          0x4889c2	                            mov rdx, rax	     10937	option.c	FUNCTION_80	CALL_13
0x400eb47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10937	option.c	FUNCTION_80	CALL_13
0x400eb4b	        0x48895078	             mov qword [rax + 0x78], rdx	     10937	option.c	FUNCTION_80	CALL_13
0x400eb4f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10940	option.c	FUNCTION_80	CALL_14
0x400eb53	    0x488b80080100	           mov rax, qword [rax + 0x108] 	     10940	option.c	FUNCTION_80	CALL_14
0x400eb5a	          0x4889c7	                            mov rdi, rax	     10940	option.c	FUNCTION_80	CALL_14
0x400eb5d	      0xe800000000	                          call 0x400eb62	     10940	option.c	FUNCTION_80	CALL_14
0x400eb62	          0x4889c2	                            mov rdx, rax	     10940	option.c	FUNCTION_80	CALL_14
0x400eb65	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10940	option.c	FUNCTION_80	CALL_14
0x400eb69	    0x488990080100	            mov qword [rax + 0x108], rdx	     10940	option.c	FUNCTION_80	CALL_14
0x400eb70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10942	option.c	FUNCTION_80	CALL_15
0x400eb74	          0x4889c7	                            mov rdi, rax	     10942	option.c	FUNCTION_80	CALL_15
0x400eb77	      0xe836000000	                   call sym.check_winopt	     10942	option.c	FUNCTION_80	CALL_15
0x400eb7c	              0x90	                                     nop	     10943	option.c	FUNCTION_80
0x400eb7d	              0xc9	                                   leave	     10943	option.c	FUNCTION_80
0x400eb7e	              0xc3	                                     ret	     10943	option.c	FUNCTION_80
option_expand	ELSE,0:IF,4:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	78
0x400402c	              0x55	                                push rbp	      5520	option.c	FUNCTION_25
0x400402d	          0x4889e5	                            mov rbp, rsp	      5520	option.c	FUNCTION_25
0x4004030	        0x4883ec10	                           sub rsp, 0x10	      5520	option.c	FUNCTION_25
0x4004034	          0x897dfc	                mov dword [rbp - 4], edi	      5520	option.c	FUNCTION_25
0x4004037	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5520	option.c	FUNCTION_25
0x400403b	          0x8b45fc	                mov eax, dword [rbp - 4]	      5522	option.c	FUNCTION_25	IF_1
0x400403e	            0x4898	                                    cdqe	      5522	option.c	FUNCTION_25	IF_1
0x4004040	        0x48c1e006	                              shl rax, 6	      5522	option.c	FUNCTION_25	IF_1
0x4004044	    0x480500000000	                              add rax, 0	      5522	option.c	FUNCTION_25	IF_1
0x400404a	          0x488b00	                    mov rax, qword [rax]	      5522	option.c	FUNCTION_25	IF_1
0x400404d	          0x83e010	                           and eax, 0x10	      5522	option.c	FUNCTION_25	IF_1
0x4004050	          0x4885c0	                           test rax, rax	      5522	option.c	FUNCTION_25	IF_1
0x4004053	            0x7417	                            je 0x400406c	      5522	option.c	FUNCTION_25	IF_1
0x4004055	          0x8b45fc	                mov eax, dword [rbp - 4]	      5522	option.c	FUNCTION_25	IF_1
0x4004058	            0x4898	                                    cdqe	      5522	option.c	FUNCTION_25	IF_1
0x400405a	        0x48c1e006	                              shl rax, 6	      5522	option.c	FUNCTION_25	IF_1
0x400405e	    0x480500000000	                              add rax, 0	      5522	option.c	FUNCTION_25	IF_1
0x4004064	          0x488b00	                    mov rax, qword [rax]	      5522	option.c	FUNCTION_25	IF_1
0x4004067	          0x4885c0	                           test rax, rax	      5522	option.c	FUNCTION_25	IF_1
0x400406a	            0x750a	                           jne 0x4004076	      5522	option.c	FUNCTION_25	IF_1
0x400406c	      0xb800000000	                              mov eax, 0	      5523	option.c	FUNCTION_25	IF_1
0x4004071	      0xe9d4000000	                           jmp 0x400414a	      5523	option.c	FUNCTION_25	IF_1
0x4004076	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x400407b	            0x741e	                            je 0x400409b	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x400407d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4004081	          0x4889c7	                            mov rdi, rax	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4004084	      0xe800000000	                          call 0x4004089	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4004089	    0x483d00100000	                         cmp rax, 0x1000	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x400408f	            0x760a	                           jbe 0x400409b	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4004091	      0xb800000000	                              mov eax, 0	      5528	option.c	FUNCTION_25	IF_2
0x4004096	      0xe9af000000	                           jmp 0x400414a	      5528	option.c	FUNCTION_25	IF_2
0x400409b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5530	option.c	FUNCTION_25	IF_3
0x40040a0	            0x7519	                           jne 0x40040bb	      5530	option.c	FUNCTION_25	IF_3
0x40040a2	          0x8b45fc	                mov eax, dword [rbp - 4]	      5531	option.c	FUNCTION_25	IF_3
0x40040a5	            0x4898	                                    cdqe	      5531	option.c	FUNCTION_25	IF_3
0x40040a7	        0x48c1e006	                              shl rax, 6	      5531	option.c	FUNCTION_25	IF_3
0x40040ab	    0x480500000000	                              add rax, 0	      5531	option.c	FUNCTION_25	IF_3
0x40040b1	          0x488b00	                    mov rax, qword [rax]	      5531	option.c	FUNCTION_25	IF_3
0x40040b4	          0x488b00	                    mov rax, qword [rax]	      5531	option.c	FUNCTION_25	IF_3
0x40040b7	        0x488945f0	             mov qword [rbp - 0x10], rax	      5531	option.c	FUNCTION_25	IF_3
0x40040bb	          0x8b45fc	                mov eax, dword [rbp - 4]	      5542	option.c	FUNCTION_25
0x40040be	            0x4898	                                    cdqe	      5542	option.c	FUNCTION_25
0x40040c0	        0x48c1e006	                              shl rax, 6	      5542	option.c	FUNCTION_25
0x40040c4	    0x480500000000	                              add rax, 0	      5542	option.c	FUNCTION_25
0x40040ca	          0x488b00	                    mov rax, qword [rax]	      5542	option.c	FUNCTION_25
0x40040cd	    0x483d00000000	                              cmp rax, 0	      5539	option.c	FUNCTION_25	CALL_2
0x40040d3	            0x7507	                           jne 0x40040dc	      5539	option.c	FUNCTION_25	CALL_2
0x40040d5	      0xb900000000	                              mov ecx, 0	      5539	option.c	FUNCTION_25	CALL_2
0x40040da	            0xeb05	                           jmp 0x40040e1	      5539	option.c	FUNCTION_25	CALL_2
0x40040dc	      0xb900000000	                              mov ecx, 0	      5539	option.c	FUNCTION_25	CALL_2
0x40040e1	          0x8b45fc	                mov eax, dword [rbp - 4]	      5540	option.c	FUNCTION_25
0x40040e4	            0x4898	                                    cdqe	      5540	option.c	FUNCTION_25
0x40040e6	        0x48c1e006	                              shl rax, 6	      5540	option.c	FUNCTION_25
0x40040ea	    0x480500000000	                              add rax, 0	      5540	option.c	FUNCTION_25
0x40040f0	          0x488b00	                    mov rax, qword [rax]	      5540	option.c	FUNCTION_25
0x40040f3	    0x483d00000000	                              cmp rax, 0	      5539	option.c	FUNCTION_25	CALL_2
0x40040f9	           0xf94c0	                                 sete al	      5539	option.c	FUNCTION_25	CALL_2
0x40040fc	           0xfb6d0	                           movzx edx, al	      5539	option.c	FUNCTION_25	CALL_2
0x40040ff	    0x488b35000000	            mov rsi, qword [0x04004106] 	      5539	option.c	FUNCTION_25	CALL_2
0x4004106	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5539	option.c	FUNCTION_25	CALL_2
0x400410a	          0x4989c9	                             mov r9, rcx	      5539	option.c	FUNCTION_25	CALL_2
0x400410d	    0x41b800000000	                              mov r8d, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4004113	            0x89d1	                            mov ecx, edx	      5539	option.c	FUNCTION_25	CALL_2
0x4004115	      0xba00100000	                         mov edx, 0x1000	      5539	option.c	FUNCTION_25	CALL_2
0x400411a	          0x4889c7	                            mov rdi, rax	      5539	option.c	FUNCTION_25	CALL_2
0x400411d	      0xe800000000	                          call 0x4004122	      5539	option.c	FUNCTION_25	CALL_2
0x4004122	    0x488b05000000	            mov rax, qword [0x04004129] 	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4004129	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x400412d	          0x4889d6	                            mov rsi, rdx	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4004130	          0x4889c7	                            mov rdi, rax	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4004133	      0xe800000000	                          call 0x4004138	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4004138	            0x85c0	                           test eax, eax	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x400413a	            0x7507	                           jne 0x4004143	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x400413c	      0xb800000000	                              mov eax, 0	      5546	option.c	FUNCTION_25	IF_4
0x4004141	            0xeb07	                           jmp 0x400414a	      5546	option.c	FUNCTION_25	IF_4
0x4004143	    0x488b05000000	            mov rax, qword [0x0400414a] 	      5548	option.c	FUNCTION_25
0x400414a	              0xc9	                                   leave	      5549	option.c	FUNCTION_25
0x400414b	              0xc3	                                     ret	      5549	option.c	FUNCTION_25
get_equalprg	ELSE,0:IF,1:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	13
0x400e70b	              0x55	                                push rbp	     10836	option.c	FUNCTION_78
0x400e70c	          0x4889e5	                            mov rbp, rsp	     10836	option.c	FUNCTION_78
0x400e70f	    0x488b05000000	            mov rax, qword [0x0400e716] 	     10837	option.c	FUNCTION_78	IF_1
0x400e716	    0x488b80081600	          mov rax, qword [rax + 0x1608] 	     10837	option.c	FUNCTION_78	IF_1
0x400e71d	           0xfb600	                   movzx eax, byte [rax]	     10837	option.c	FUNCTION_78	IF_1
0x400e720	            0x84c0	                             test al, al	     10837	option.c	FUNCTION_78	IF_1
0x400e722	            0x7509	                           jne 0x400e72d	     10837	option.c	FUNCTION_78	IF_1
0x400e724	    0x488b05000000	            mov rax, qword [0x0400e72b] 	     10838	option.c	FUNCTION_78	IF_1
0x400e72b	            0xeb0e	                           jmp 0x400e73b	     10838	option.c	FUNCTION_78	IF_1
0x400e72d	    0x488b05000000	            mov rax, qword [0x0400e734] 	     10839	option.c	FUNCTION_78
0x400e734	    0x488b80081600	          mov rax, qword [rax + 0x1608] 	     10839	option.c	FUNCTION_78
0x400e73b	              0x5d	                                 pop rbp	     10840	option.c	FUNCTION_78
0x400e73c	              0xc3	                                     ret	     10840	option.c	FUNCTION_78
win_copy_options	ELSE,0:IF,0:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	29
0x400e73d	              0x55	                                push rbp	     10848	option.c	FUNCTION_79
0x400e73e	          0x4889e5	                            mov rbp, rsp	     10848	option.c	FUNCTION_79
0x400e741	        0x4883ec10	                           sub rsp, 0x10	     10848	option.c	FUNCTION_79
0x400e745	        0x48897df8	                mov qword [rbp - 8], rdi	     10848	option.c	FUNCTION_79
0x400e749	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10848	option.c	FUNCTION_79
0x400e74d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10849	option.c	FUNCTION_79	CALL_1
0x400e751	    0x488d90b00100	                  lea rdx, [rax + 0x1b0]	     10849	option.c	FUNCTION_79	CALL_1
0x400e758	        0x488b45f8	                mov rax, qword [rbp - 8]	     10849	option.c	FUNCTION_79	CALL_1
0x400e75c	    0x4805b0010000	                          add rax, 0x1b0	     10849	option.c	FUNCTION_79	CALL_1
0x400e762	          0x4889d6	                            mov rsi, rdx	     10849	option.c	FUNCTION_79	CALL_1
0x400e765	          0x4889c7	                            mov rdi, rax	     10849	option.c	FUNCTION_79	CALL_1
0x400e768	      0xe800000000	                          call 0x400e76d	     10849	option.c	FUNCTION_79	CALL_1
0x400e76d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10850	option.c	FUNCTION_79	CALL_2
0x400e771	    0x488d90680300	                  lea rdx, [rax + 0x368]	     10850	option.c	FUNCTION_79	CALL_2
0x400e778	        0x488b45f8	                mov rax, qword [rbp - 8]	     10850	option.c	FUNCTION_79	CALL_2
0x400e77c	    0x480568030000	                          add rax, 0x368	     10850	option.c	FUNCTION_79	CALL_2
0x400e782	          0x4889d6	                            mov rsi, rdx	     10850	option.c	FUNCTION_79	CALL_2
0x400e785	          0x4889c7	                            mov rdi, rax	     10850	option.c	FUNCTION_79	CALL_2
0x400e788	      0xe800000000	                          call 0x400e78d	     10850	option.c	FUNCTION_79	CALL_2
0x400e78d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10854	option.c	FUNCTION_79
0x400e791	    0x8b9078050000	           mov edx, dword [rax + 0x578] 	     10854	option.c	FUNCTION_79
0x400e797	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10854	option.c	FUNCTION_79
0x400e79b	    0x899078050000	            mov dword [rax + 0x578], edx	     10854	option.c	FUNCTION_79
0x400e7a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10858	option.c	FUNCTION_79	CALL_3
0x400e7a5	          0x4889c7	                            mov rdi, rax	     10858	option.c	FUNCTION_79	CALL_3
0x400e7a8	      0xe8ca340000	                   call sym.briopt_check	     10858	option.c	FUNCTION_79	CALL_3
0x400e7ad	              0x90	                                     nop	     10860	option.c	FUNCTION_79
0x400e7ae	              0xc9	                                   leave	     10860	option.c	FUNCTION_79
0x400e7af	              0xc3	                                     ret	     10860	option.c	FUNCTION_79
briopt_check	ELSE,2:IF,5:SWITCH,0:CALL,8:DO,0:WHILE,1:functions,0:FOR,0	119
0x4011c77	              0x55	                                push rbp	     12642	option.c	FUNCTION_116
0x4011c78	          0x4889e5	                            mov rbp, rsp	     12642	option.c	FUNCTION_116
0x4011c7b	        0x4883ec30	                           sub rsp, 0x30	     12642	option.c	FUNCTION_116
0x4011c7f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     12642	option.c	FUNCTION_116
0x4011c83	    0x64488b042528	                mov rax, qword fs:[0x28]	     12642	option.c	FUNCTION_116
0x4011c8c	        0x488945f8	                mov qword [rbp - 8], rax	     12642	option.c	FUNCTION_116
0x4011c90	            0x31c0	                            xor eax, eax	     12642	option.c	FUNCTION_116
0x4011c92	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12644	option.c	FUNCTION_116
0x4011c99	    0x48c745f01400	           mov qword [rbp - 0x10], 0x14 	     12645	option.c	FUNCTION_116
0x4011ca1	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     12646	option.c	FUNCTION_116
0x4011ca8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12648	option.c	FUNCTION_116
0x4011cac	    0x488b80b80100	           mov rax, qword [rax + 0x1b8] 	     12648	option.c	FUNCTION_116
0x4011cb3	        0x488945e8	             mov qword [rbp - 0x18], rax	     12648	option.c	FUNCTION_116
0x4011cb7	      0xe921010000	                           jmp 0x4011ddd	     12649	option.c	FUNCTION_116	WHILE_1
0x4011cbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4011cc0	      0xba06000000	                              mov edx, 6	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4011cc5	      0xbe00000000	                              mov esi, 0	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4011cca	          0x4889c7	                            mov rdi, rax	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4011ccd	      0xe800000000	                          call 0x4011cd2	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4011cd2	            0x85c0	                           test eax, eax	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4011cd4	            0x7558	                           jne 0x4011d2e	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4011cd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cda	        0x4883c006	                              add rax, 6	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cde	           0xfb600	                   movzx eax, byte [rax]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011ce1	            0x3c2d	                            cmp al, 0x2d	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011ce3	            0x7516	                           jne 0x4011cfb	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011ce5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011ce9	        0x4883c007	                              add rax, 7	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011ced	           0xfb600	                   movzx eax, byte [rax]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cf0	           0xfb6c0	                           movzx eax, al	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cf3	          0x83e830	                           sub eax, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cf6	          0x83f809	                              cmp eax, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cf9	            0x7616	                           jbe 0x4011d11	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011cff	        0x4883c006	                              add rax, 6	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011d03	           0xfb600	                   movzx eax, byte [rax]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011d06	           0xfb6c0	                           movzx eax, al	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011d09	          0x83e830	                           sub eax, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011d0c	          0x83f809	                              cmp eax, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011d0f	            0x771d	                            ja 0x4011d2e	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4011d11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4011d15	        0x4883c006	                              add rax, 6	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4011d19	        0x488945e8	             mov qword [rbp - 0x18], rax	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4011d1d	        0x488d45e8	                   lea rax, [rbp - 0x18]	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4011d21	          0x4889c7	                            mov rdi, rax	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4011d24	      0xe800000000	                          call 0x4011d29	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4011d29	          0x8945e0	             mov dword [rbp - 0x20], eax	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4011d2c	            0xeb7b	                           jmp 0x4011da9	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4011d2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d32	      0xba04000000	                              mov edx, 4	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d37	      0xbe00000000	                              mov esi, 0	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d3c	          0x4889c7	                            mov rdi, rax	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d3f	      0xe800000000	                          call 0x4011d44	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d44	            0x85c0	                           test eax, eax	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d46	            0x7534	                           jne 0x4011d7c	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d4c	        0x4883c004	                              add rax, 4	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d50	           0xfb600	                   movzx eax, byte [rax]	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d53	           0xfb6c0	                           movzx eax, al	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d56	          0x83e830	                           sub eax, 0x30	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d59	          0x83f809	                              cmp eax, 9	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d5c	            0x771e	                            ja 0x4011d7c	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4011d5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x4011d62	        0x4883c004	                              add rax, 4	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x4011d66	        0x488945e8	             mov qword [rbp - 0x18], rax	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x4011d6a	        0x488d45e8	                   lea rax, [rbp - 0x18]	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4011d6e	          0x4889c7	                            mov rdi, rax	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4011d71	      0xe800000000	                          call 0x4011d76	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4011d76	        0x488945f0	             mov qword [rbp - 0x10], rax	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4011d7a	            0xeb2d	                           jmp 0x4011da9	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4011d7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4011d80	      0xba03000000	                              mov edx, 3	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4011d85	      0xbe00000000	                              mov esi, 0	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4011d8a	          0x4889c7	                            mov rdi, rax	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4011d8d	      0xe800000000	                          call 0x4011d92	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4011d92	            0x85c0	                           test eax, eax	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4011d94	            0x7513	                           jne 0x4011da9	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4011d96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4011d9a	        0x4883c003	                              add rax, 3	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4011d9e	        0x488945e8	             mov qword [rbp - 0x18], rax	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4011da2	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	     12665	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4011da9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011dad	           0xfb600	                   movzx eax, byte [rax]	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011db0	            0x3c2c	                            cmp al, 0x2c	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011db2	            0x7412	                            je 0x4011dc6	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011db4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011db8	           0xfb600	                   movzx eax, byte [rax]	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011dbb	            0x84c0	                             test al, al	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011dbd	            0x7407	                            je 0x4011dc6	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011dbf	      0xb800000000	                              mov eax, 0	     12668	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011dc4	            0xeb55	                           jmp 0x4011e1b	     12668	option.c	FUNCTION_116	WHILE_1	IF_4
0x4011dc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4011dca	           0xfb600	                   movzx eax, byte [rax]	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4011dcd	            0x3c2c	                            cmp al, 0x2c	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4011dcf	            0x750c	                           jne 0x4011ddd	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4011dd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4011dd5	        0x4883c001	                              add rax, 1	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4011dd9	        0x488945e8	             mov qword [rbp - 0x18], rax	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4011ddd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12649	option.c	FUNCTION_116	WHILE_1
0x4011de1	           0xfb600	                   movzx eax, byte [rax]	     12649	option.c	FUNCTION_116	WHILE_1
0x4011de4	            0x84c0	                             test al, al	     12649	option.c	FUNCTION_116	WHILE_1
0x4011de6	     0xf85d0feffff	                           jne 0x4011cbc	     12649	option.c	FUNCTION_116	WHILE_1
0x4011dec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12673	option.c	FUNCTION_116
0x4011df0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	     12673	option.c	FUNCTION_116
0x4011df3	    0x899044050000	            mov dword [rax + 0x544], edx	     12673	option.c	FUNCTION_116
0x4011df9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12674	option.c	FUNCTION_116
0x4011dfd	            0x89c2	                            mov edx, eax	     12674	option.c	FUNCTION_116
0x4011dff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12674	option.c	FUNCTION_116
0x4011e03	    0x899040050000	            mov dword [rax + 0x540], edx	     12674	option.c	FUNCTION_116
0x4011e09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12675	option.c	FUNCTION_116
0x4011e0d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     12675	option.c	FUNCTION_116
0x4011e10	    0x899048050000	            mov dword [rax + 0x548], edx	     12675	option.c	FUNCTION_116
0x4011e16	      0xb801000000	                              mov eax, 1	     12677	option.c	FUNCTION_116
0x4011e1b	        0x488b4df8	                mov rcx, qword [rbp - 8]	     12678	option.c	FUNCTION_116
0x4011e1f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     12678	option.c	FUNCTION_116
0x4011e28	            0x7405	                            je 0x4011e2f	     12678	option.c	FUNCTION_116
0x4011e2a	      0xe800000000	                          call 0x4011e2f	     12678	option.c	FUNCTION_116
0x4011e2f	              0xc9	                                   leave	     12678	option.c	FUNCTION_116
0x4011e30	              0xc3	                                     ret	     12678	option.c	FUNCTION_116
term_bg_default	ELSE,0:IF,1:SWITCH,0:CALL,6:DO,0:WHILE,0:functions,0:FOR,0	66
0x4000e64	              0x55	                                push rbp	      4012	option.c	FUNCTION_9
0x4000e65	          0x4889e5	                            mov rbp, rsp	      4012	option.c	FUNCTION_9
0x4000e68	        0x4883ec10	                           sub rsp, 0x10	      4012	option.c	FUNCTION_9
0x4000e6c	    0x488b05000000	            mov rax, qword [0x04000e73] 	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x4000e73	      0xbe00000000	                              mov esi, 0	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x4000e78	          0x4889c7	                            mov rdi, rax	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x4000e7b	      0xe800000000	                          call 0x4000e80	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x4000e80	            0x85c0	                           test eax, eax	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x4000e82	     0xf84c7000000	                            je 0x4000f4f	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x4000e88	    0x488b05000000	            mov rax, qword [0x04000e8f] 	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x4000e8f	      0xbe00000000	                              mov esi, 0	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x4000e94	          0x4889c7	                            mov rdi, rax	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x4000e97	      0xe800000000	                          call 0x4000e9c	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x4000e9c	            0x85c0	                           test eax, eax	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x4000e9e	     0xf84ab000000	                            je 0x4000f4f	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x4000ea4	    0x488b05000000	            mov rax, qword [0x04000eab] 	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4000eab	      0xba06000000	                              mov edx, 6	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4000eb0	      0xbe00000000	                              mov esi, 0	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4000eb5	          0x4889c7	                            mov rdi, rax	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4000eb8	      0xe800000000	                          call 0x4000ebd	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4000ebd	            0x85c0	                           test eax, eax	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4000ebf	     0xf848a000000	                            je 0x4000f4f	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4000ec5	    0x488b05000000	            mov rax, qword [0x04000ecc] 	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4000ecc	      0xba05000000	                              mov edx, 5	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4000ed1	      0xbe00000000	                              mov esi, 0	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4000ed6	          0x4889c7	                            mov rdi, rax	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4000ed9	      0xe800000000	                          call 0x4000ede	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4000ede	            0x85c0	                           test eax, eax	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4000ee0	            0x746d	                            je 0x4000f4f	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4000ee2	      0xbf00000000	                              mov edi, 0	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4000ee7	      0xe800000000	                          call 0x4000eec	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4000eec	        0x488945f8	                mov qword [rbp - 8], rax	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4000ef0	      0x48837df800	                  cmp qword [rbp - 8], 0	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4000ef5	            0x745f	                            je 0x4000f56	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4000ef7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4000efb	      0xbe3b000000	                           mov esi, 0x3b	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4000f00	          0x4889c7	                            mov rdi, rax	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4000f03	      0xe800000000	                          call 0x4000f08	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4000f08	        0x488945f8	                mov qword [rbp - 8], rax	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4000f0c	      0x48837df800	                  cmp qword [rbp - 8], 0	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4000f11	            0x7443	                            je 0x4000f56	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4000f13	        0x488b45f8	                mov rax, qword [rbp - 8]	      4025	option.c	FUNCTION_9	IF_1
0x4000f17	        0x4883c001	                              add rax, 1	      4025	option.c	FUNCTION_9	IF_1
0x4000f1b	           0xfb600	                   movzx eax, byte [rax]	      4025	option.c	FUNCTION_9	IF_1
0x4000f1e	            0x3c2f	                            cmp al, 0x2f	      4025	option.c	FUNCTION_9	IF_1
0x4000f20	            0x760f	                           jbe 0x4000f31	      4025	option.c	FUNCTION_9	IF_1
0x4000f22	        0x488b45f8	                mov rax, qword [rbp - 8]	      4025	option.c	FUNCTION_9	IF_1
0x4000f26	        0x4883c001	                              add rax, 1	      4025	option.c	FUNCTION_9	IF_1
0x4000f2a	           0xfb600	                   movzx eax, byte [rax]	      4025	option.c	FUNCTION_9	IF_1
0x4000f2d	            0x3c36	                            cmp al, 0x36	      4025	option.c	FUNCTION_9	IF_1
0x4000f2f	            0x760f	                           jbe 0x4000f40	      4025	option.c	FUNCTION_9	IF_1
0x4000f31	        0x488b45f8	                mov rax, qword [rbp - 8]	      4025	option.c	FUNCTION_9	IF_1
0x4000f35	        0x4883c001	                              add rax, 1	      4025	option.c	FUNCTION_9	IF_1
0x4000f39	           0xfb600	                   movzx eax, byte [rax]	      4025	option.c	FUNCTION_9	IF_1
0x4000f3c	            0x3c38	                            cmp al, 0x38	      4025	option.c	FUNCTION_9	IF_1
0x4000f3e	            0x7516	                           jne 0x4000f56	      4025	option.c	FUNCTION_9	IF_1
0x4000f40	        0x488b45f8	                mov rax, qword [rbp - 8]	      4026	option.c	FUNCTION_9	IF_1
0x4000f44	        0x4883c002	                              add rax, 2	      4026	option.c	FUNCTION_9	IF_1
0x4000f48	           0xfb600	                   movzx eax, byte [rax]	      4026	option.c	FUNCTION_9	IF_1
0x4000f4b	            0x84c0	                             test al, al	      4026	option.c	FUNCTION_9	IF_1
0x4000f4d	            0x7507	                           jne 0x4000f56	      4026	option.c	FUNCTION_9	IF_1
0x4000f4f	      0xb800000000	                              mov eax, 0	      4027	option.c	FUNCTION_9	IF_1
0x4000f54	            0xeb05	                           jmp 0x4000f5b	      4027	option.c	FUNCTION_9	IF_1
0x4000f56	      0xb800000000	                              mov eax, 0	      4028	option.c	FUNCTION_9
0x4000f5b	              0xc9	                                   leave	      4030	option.c	FUNCTION_9
0x4000f5c	              0xc3	                                     ret	      4030	option.c	FUNCTION_9
set_string_option_global	ELSE,1:IF,2:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	49
0x4004b6b	              0x55	                                push rbp	      5933	option.c	FUNCTION_37
0x4004b6c	          0x4889e5	                            mov rbp, rsp	      5933	option.c	FUNCTION_37
0x4004b6f	        0x4883ec20	                           sub rsp, 0x20	      5933	option.c	FUNCTION_37
0x4004b73	          0x897dec	             mov dword [rbp - 0x14], edi	      5933	option.c	FUNCTION_37
0x4004b76	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5933	option.c	FUNCTION_37
0x4004b7a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5937	option.c	FUNCTION_37	IF_1
0x4004b7d	            0x4898	                                    cdqe	      5937	option.c	FUNCTION_37	IF_1
0x4004b7f	        0x48c1e006	                              shl rax, 6	      5937	option.c	FUNCTION_37	IF_1
0x4004b83	    0x480500000000	                              add rax, 0	      5937	option.c	FUNCTION_37	IF_1
0x4004b89	          0x488b00	                    mov rax, qword [rax]	      5937	option.c	FUNCTION_37	IF_1
0x4004b8c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      5937	option.c	FUNCTION_37	IF_1
0x4004b90	            0x7510	                           jne 0x4004ba2	      5937	option.c	FUNCTION_37	IF_1
0x4004b92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5938	option.c	FUNCTION_37	CALL_1
0x4004b96	    0x4805b8010000	                          add rax, 0x1b8	      5938	option.c	FUNCTION_37	CALL_1
0x4004b9c	        0x488945f0	             mov qword [rbp - 0x10], rax	      5938	option.c	FUNCTION_37	CALL_1
0x4004ba0	            0xeb16	                           jmp 0x4004bb8	      5938	option.c	FUNCTION_37	CALL_1
0x4004ba2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5940	option.c	FUNCTION_37	ELSE_1
0x4004ba5	            0x4898	                                    cdqe	      5940	option.c	FUNCTION_37	ELSE_1
0x4004ba7	        0x48c1e006	                              shl rax, 6	      5940	option.c	FUNCTION_37	ELSE_1
0x4004bab	    0x480500000000	                              add rax, 0	      5940	option.c	FUNCTION_37	ELSE_1
0x4004bb1	          0x488b00	                    mov rax, qword [rax]	      5940	option.c	FUNCTION_37	ELSE_1
0x4004bb4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5940	option.c	FUNCTION_37	ELSE_1
0x4004bb8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5941	option.c	FUNCTION_37	IF_2
0x4004bbb	            0x4898	                                    cdqe	      5941	option.c	FUNCTION_37	IF_2
0x4004bbd	        0x48c1e006	                              shl rax, 6	      5941	option.c	FUNCTION_37	IF_2
0x4004bc1	    0x480500000000	                              add rax, 0	      5941	option.c	FUNCTION_37	IF_2
0x4004bc7	            0x8b00	                    mov eax, dword [rax]	      5941	option.c	FUNCTION_37	IF_2
0x4004bc9	            0x85c0	                           test eax, eax	      5941	option.c	FUNCTION_37	IF_2
0x4004bcb	            0x743e	                            je 0x4004c0b	      5941	option.c	FUNCTION_37	IF_2
0x4004bcd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5942	option.c	FUNCTION_37	IF_2
0x4004bd1	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      5942	option.c	FUNCTION_37	IF_2
0x4004bd5	            0x7434	                            je 0x4004c0b	      5942	option.c	FUNCTION_37	IF_2
0x4004bd7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004bdb	          0x488b00	                    mov rax, qword [rax]	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004bde	          0x4889c7	                            mov rdi, rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004be1	      0xe800000000	                          call 0x4004be6	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004be6	        0x488945f8	                mov qword [rbp - 8], rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004bea	      0x48837df800	                  cmp qword [rbp - 8], 0	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004bef	            0x741a	                            je 0x4004c0b	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004bf1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x4004bf5	          0x488b00	                    mov rax, qword [rax]	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x4004bf8	          0x4889c7	                            mov rdi, rax	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x4004bfb	      0xe800000000	                          call 0x4004c00	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x4004c00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5946	option.c	FUNCTION_37	IF_2
0x4004c04	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5946	option.c	FUNCTION_37	IF_2
0x4004c08	          0x488910	                    mov qword [rax], rdx	      5946	option.c	FUNCTION_37	IF_2
0x4004c0b	              0x90	                                     nop	      5948	option.c	FUNCTION_37
0x4004c0c	              0xc9	                                   leave	      5948	option.c	FUNCTION_37
0x4004c0d	              0xc3	                                     ret	      5948	option.c	FUNCTION_37
get_highlight_default	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	17
0x400bcea	              0x55	                                push rbp	      9805	option.c	FUNCTION_58
0x400bceb	          0x4889e5	                            mov rbp, rsp	      9805	option.c	FUNCTION_58
0x400bcee	        0x4883ec10	                           sub rsp, 0x10	      9805	option.c	FUNCTION_58
0x400bcf2	      0xbf00000000	                              mov edi, 0	      9808	option.c	FUNCTION_58	CALL_1
0x400bcf7	      0xe8a8f8ffff	                     call sym.findoption	      9808	option.c	FUNCTION_58	CALL_1
0x400bcfc	          0x8945fc	                mov dword [rbp - 4], eax	      9808	option.c	FUNCTION_58	CALL_1
0x400bcff	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9809	option.c	FUNCTION_58	IF_1
0x400bd03	            0x7814	                            js 0x400bd19	      9809	option.c	FUNCTION_58	IF_1
0x400bd05	          0x8b45fc	                mov eax, dword [rbp - 4]	      9810	option.c	FUNCTION_58	IF_1
0x400bd08	            0x4898	                                    cdqe	      9810	option.c	FUNCTION_58	IF_1
0x400bd0a	        0x48c1e006	                              shl rax, 6	      9810	option.c	FUNCTION_58	IF_1
0x400bd0e	    0x480500000000	                              add rax, 0	      9810	option.c	FUNCTION_58	IF_1
0x400bd14	          0x488b00	                    mov rax, qword [rax]	      9810	option.c	FUNCTION_58	IF_1
0x400bd17	            0xeb05	                           jmp 0x400bd1e	      9810	option.c	FUNCTION_58	IF_1
0x400bd19	      0xb800000000	                              mov eax, 0	      9811	option.c	FUNCTION_58
0x400bd1e	              0xc9	                                   leave	      9812	option.c	FUNCTION_58
0x400bd1f	              0xc3	                                     ret	      9812	option.c	FUNCTION_58
check_buf_options	ELSE,0:IF,0:SWITCH,0:CALL,50:DO,0:WHILE,0:functions,0:FOR,0	206
0x40043a9	              0x55	                                push rbp	      5647	option.c	FUNCTION_29
0x40043aa	          0x4889e5	                            mov rbp, rsp	      5647	option.c	FUNCTION_29
0x40043ad	        0x4883ec10	                           sub rsp, 0x10	      5647	option.c	FUNCTION_29
0x40043b1	        0x48897df8	                mov qword [rbp - 8], rdi	      5647	option.c	FUNCTION_29
0x40043b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5648	option.c	FUNCTION_29	CALL_1
0x40043b9	    0x480510140000	                         add rax, 0x1410	      5648	option.c	FUNCTION_29	CALL_1
0x40043bf	          0x4889c7	                            mov rdi, rax	      5648	option.c	FUNCTION_29	CALL_1
0x40043c2	      0xe8d6030000	            call sym.check_string_option	      5648	option.c	FUNCTION_29	CALL_1
0x40043c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5649	option.c	FUNCTION_29	CALL_2
0x40043cb	    0x480518140000	                         add rax, 0x1418	      5649	option.c	FUNCTION_29	CALL_2
0x40043d1	          0x4889c7	                            mov rdi, rax	      5649	option.c	FUNCTION_29	CALL_2
0x40043d4	      0xe8c4030000	            call sym.check_string_option	      5649	option.c	FUNCTION_29	CALL_2
0x40043d9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5651	option.c	FUNCTION_29	CALL_3
0x40043dd	    0x480588140000	                         add rax, 0x1488	      5651	option.c	FUNCTION_29	CALL_3
0x40043e3	          0x4889c7	                            mov rdi, rax	      5651	option.c	FUNCTION_29	CALL_3
0x40043e6	      0xe8b2030000	            call sym.check_string_option	      5651	option.c	FUNCTION_29	CALL_3
0x40043eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5653	option.c	FUNCTION_29	CALL_4
0x40043ef	    0x480590140000	                         add rax, 0x1490	      5653	option.c	FUNCTION_29	CALL_4
0x40043f5	          0x4889c7	                            mov rdi, rax	      5653	option.c	FUNCTION_29	CALL_4
0x40043f8	      0xe8a0030000	            call sym.check_string_option	      5653	option.c	FUNCTION_29	CALL_4
0x40043fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5655	option.c	FUNCTION_29	CALL_5
0x4004401	    0x4805c0140000	                         add rax, 0x14c0	      5655	option.c	FUNCTION_29	CALL_5
0x4004407	          0x4889c7	                            mov rdi, rax	      5655	option.c	FUNCTION_29	CALL_5
0x400440a	      0xe88e030000	            call sym.check_string_option	      5655	option.c	FUNCTION_29	CALL_5
0x400440f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5656	option.c	FUNCTION_29	CALL_6
0x4004413	    0x4805c8140000	                         add rax, 0x14c8	      5656	option.c	FUNCTION_29	CALL_6
0x4004419	          0x4889c7	                            mov rdi, rax	      5656	option.c	FUNCTION_29	CALL_6
0x400441c	      0xe87c030000	            call sym.check_string_option	      5656	option.c	FUNCTION_29	CALL_6
0x4004421	        0x488b45f8	                mov rax, qword [rbp - 8]	      5658	option.c	FUNCTION_29	CALL_7
0x4004425	    0x4805d0140000	                         add rax, 0x14d0	      5658	option.c	FUNCTION_29	CALL_7
0x400442b	          0x4889c7	                            mov rdi, rax	      5658	option.c	FUNCTION_29	CALL_7
0x400442e	      0xe86a030000	            call sym.check_string_option	      5658	option.c	FUNCTION_29	CALL_7
0x4004433	        0x488b45f8	                mov rax, qword [rbp - 8]	      5662	option.c	FUNCTION_29	CALL_8
0x4004437	    0x4805e0140000	                         add rax, 0x14e0	      5662	option.c	FUNCTION_29	CALL_8
0x400443d	          0x4889c7	                            mov rdi, rax	      5662	option.c	FUNCTION_29	CALL_8
0x4004440	      0xe858030000	            call sym.check_string_option	      5662	option.c	FUNCTION_29	CALL_8
0x4004445	        0x488b45f8	                mov rax, qword [rbp - 8]	      5663	option.c	FUNCTION_29	CALL_9
0x4004449	    0x4805f0140000	                         add rax, 0x14f0	      5663	option.c	FUNCTION_29	CALL_9
0x400444f	          0x4889c7	                            mov rdi, rax	      5663	option.c	FUNCTION_29	CALL_9
0x4004452	      0xe846030000	            call sym.check_string_option	      5663	option.c	FUNCTION_29	CALL_9
0x4004457	        0x488b45f8	                mov rax, qword [rbp - 8]	      5666	option.c	FUNCTION_29	CALL_10
0x400445b	    0x480538170000	                         add rax, 0x1738	      5666	option.c	FUNCTION_29	CALL_10
0x4004461	          0x4889c7	                            mov rdi, rax	      5666	option.c	FUNCTION_29	CALL_10
0x4004464	      0xe834030000	            call sym.check_string_option	      5666	option.c	FUNCTION_29	CALL_10
0x4004469	        0x488b45f8	                mov rax, qword [rbp - 8]	      5669	option.c	FUNCTION_29	CALL_11
0x400446d	    0x480548170000	                         add rax, 0x1748	      5669	option.c	FUNCTION_29	CALL_11
0x4004473	          0x4889c7	                            mov rdi, rax	      5669	option.c	FUNCTION_29	CALL_11
0x4004476	      0xe822030000	            call sym.check_string_option	      5669	option.c	FUNCTION_29	CALL_11
0x400447b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5671	option.c	FUNCTION_29	CALL_12
0x400447f	    0x4805f8140000	                         add rax, 0x14f8	      5671	option.c	FUNCTION_29	CALL_12
0x4004485	          0x4889c7	                            mov rdi, rax	      5671	option.c	FUNCTION_29	CALL_12
0x4004488	      0xe810030000	            call sym.check_string_option	      5671	option.c	FUNCTION_29	CALL_12
0x400448d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5673	option.c	FUNCTION_29	CALL_13
0x4004491	    0x480500150000	                         add rax, 0x1500	      5673	option.c	FUNCTION_29	CALL_13
0x4004497	          0x4889c7	                            mov rdi, rax	      5673	option.c	FUNCTION_29	CALL_13
0x400449a	      0xe8fe020000	            call sym.check_string_option	      5673	option.c	FUNCTION_29	CALL_13
0x400449f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5676	option.c	FUNCTION_29	CALL_14
0x40044a3	    0x480510150000	                         add rax, 0x1510	      5676	option.c	FUNCTION_29	CALL_14
0x40044a9	          0x4889c7	                            mov rdi, rax	      5676	option.c	FUNCTION_29	CALL_14
0x40044ac	      0xe8ec020000	            call sym.check_string_option	      5676	option.c	FUNCTION_29	CALL_14
0x40044b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5678	option.c	FUNCTION_29	CALL_15
0x40044b5	    0x480518150000	                         add rax, 0x1518	      5678	option.c	FUNCTION_29	CALL_15
0x40044bb	          0x4889c7	                            mov rdi, rax	      5678	option.c	FUNCTION_29	CALL_15
0x40044be	      0xe8da020000	            call sym.check_string_option	      5678	option.c	FUNCTION_29	CALL_15
0x40044c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5679	option.c	FUNCTION_29	CALL_16
0x40044c7	    0x480530150000	                         add rax, 0x1530	      5679	option.c	FUNCTION_29	CALL_16
0x40044cd	          0x4889c7	                            mov rdi, rax	      5679	option.c	FUNCTION_29	CALL_16
0x40044d0	      0xe8c8020000	            call sym.check_string_option	      5679	option.c	FUNCTION_29	CALL_16
0x40044d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5680	option.c	FUNCTION_29	CALL_17
0x40044d9	    0x4805a0140000	                         add rax, 0x14a0	      5680	option.c	FUNCTION_29	CALL_17
0x40044df	          0x4889c7	                            mov rdi, rax	      5680	option.c	FUNCTION_29	CALL_17
0x40044e2	      0xe8b6020000	            call sym.check_string_option	      5680	option.c	FUNCTION_29	CALL_17
0x40044e7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5681	option.c	FUNCTION_29	CALL_18
0x40044eb	    0x4805a8140000	                         add rax, 0x14a8	      5681	option.c	FUNCTION_29	CALL_18
0x40044f1	          0x4889c7	                            mov rdi, rax	      5681	option.c	FUNCTION_29	CALL_18
0x40044f4	      0xe8a4020000	            call sym.check_string_option	      5681	option.c	FUNCTION_29	CALL_18
0x40044f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5682	option.c	FUNCTION_29	CALL_19
0x40044fd	    0x4805b8140000	                         add rax, 0x14b8	      5682	option.c	FUNCTION_29	CALL_19
0x4004503	          0x4889c7	                            mov rdi, rax	      5682	option.c	FUNCTION_29	CALL_19
0x4004506	      0xe892020000	            call sym.check_string_option	      5682	option.c	FUNCTION_29	CALL_19
0x400450b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5684	option.c	FUNCTION_29	CALL_20
0x400450f	    0x480548140000	                         add rax, 0x1448	      5684	option.c	FUNCTION_29	CALL_20
0x4004515	          0x4889c7	                            mov rdi, rax	      5684	option.c	FUNCTION_29	CALL_20
0x4004518	      0xe880020000	            call sym.check_string_option	      5684	option.c	FUNCTION_29	CALL_20
0x400451d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5687	option.c	FUNCTION_29	CALL_21
0x4004521	    0x480550140000	                         add rax, 0x1450	      5687	option.c	FUNCTION_29	CALL_21
0x4004527	          0x4889c7	                            mov rdi, rax	      5687	option.c	FUNCTION_29	CALL_21
0x400452a	      0xe86e020000	            call sym.check_string_option	      5687	option.c	FUNCTION_29	CALL_21
0x400452f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5689	option.c	FUNCTION_29	CALL_22
0x4004533	    0x480548150000	                         add rax, 0x1548	      5689	option.c	FUNCTION_29	CALL_22
0x4004539	          0x4889c7	                            mov rdi, rax	      5689	option.c	FUNCTION_29	CALL_22
0x400453c	      0xe85c020000	            call sym.check_string_option	      5689	option.c	FUNCTION_29	CALL_22
0x4004541	        0x488b45f8	                mov rax, qword [rbp - 8]	      5691	option.c	FUNCTION_29	CALL_23
0x4004545	    0x480558150000	                         add rax, 0x1558	      5691	option.c	FUNCTION_29	CALL_23
0x400454b	          0x4889c7	                            mov rdi, rax	      5691	option.c	FUNCTION_29	CALL_23
0x400454e	      0xe84a020000	            call sym.check_string_option	      5691	option.c	FUNCTION_29	CALL_23
0x4004553	        0x488b45f8	                mov rax, qword [rbp - 8]	      5694	option.c	FUNCTION_29	CALL_24
0x4004557	    0x4805a0150000	                         add rax, 0x15a0	      5694	option.c	FUNCTION_29	CALL_24
0x400455d	          0x4889c7	                            mov rdi, rax	      5694	option.c	FUNCTION_29	CALL_24
0x4004560	      0xe838020000	            call sym.check_string_option	      5694	option.c	FUNCTION_29	CALL_24
0x4004565	        0x488b45f8	                mov rax, qword [rbp - 8]	      5695	option.c	FUNCTION_29	CALL_25
0x4004569	    0x4805181c0000	                         add rax, 0x1c18	      5695	option.c	FUNCTION_29	CALL_25
0x400456f	          0x4889c7	                            mov rdi, rax	      5695	option.c	FUNCTION_29	CALL_25
0x4004572	      0xe826020000	            call sym.check_string_option	      5695	option.c	FUNCTION_29	CALL_25
0x4004577	        0x488b45f8	                mov rax, qword [rbp - 8]	      5698	option.c	FUNCTION_29	CALL_26
0x400457b	    0x4805d01b0000	                         add rax, 0x1bd0	      5698	option.c	FUNCTION_29	CALL_26
0x4004581	          0x4889c7	                            mov rdi, rax	      5698	option.c	FUNCTION_29	CALL_26
0x4004584	      0xe814020000	            call sym.check_string_option	      5698	option.c	FUNCTION_29	CALL_26
0x4004589	        0x488b45f8	                mov rax, qword [rbp - 8]	      5699	option.c	FUNCTION_29	CALL_27
0x400458d	    0x4805e01b0000	                         add rax, 0x1be0	      5699	option.c	FUNCTION_29	CALL_27
0x4004593	          0x4889c7	                            mov rdi, rax	      5699	option.c	FUNCTION_29	CALL_27
0x4004596	      0xe802020000	            call sym.check_string_option	      5699	option.c	FUNCTION_29	CALL_27
0x400459b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5700	option.c	FUNCTION_29	CALL_28
0x400459f	    0x4805e81b0000	                         add rax, 0x1be8	      5700	option.c	FUNCTION_29	CALL_28
0x40045a5	          0x4889c7	                            mov rdi, rax	      5700	option.c	FUNCTION_29	CALL_28
0x40045a8	      0xe8f0010000	            call sym.check_string_option	      5700	option.c	FUNCTION_29	CALL_28
0x40045ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      5703	option.c	FUNCTION_29	CALL_29
0x40045b1	    0x480588150000	                         add rax, 0x1588	      5703	option.c	FUNCTION_29	CALL_29
0x40045b7	          0x4889c7	                            mov rdi, rax	      5703	option.c	FUNCTION_29	CALL_29
0x40045ba	      0xe8de010000	            call sym.check_string_option	      5703	option.c	FUNCTION_29	CALL_29
0x40045bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5706	option.c	FUNCTION_29	CALL_30
0x40045c3	    0x480538140000	                         add rax, 0x1438	      5706	option.c	FUNCTION_29	CALL_30
0x40045c9	          0x4889c7	                            mov rdi, rax	      5706	option.c	FUNCTION_29	CALL_30
0x40045cc	      0xe8cc010000	            call sym.check_string_option	      5706	option.c	FUNCTION_29	CALL_30
0x40045d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5707	option.c	FUNCTION_29	CALL_31
0x40045d5	    0x480530140000	                         add rax, 0x1430	      5707	option.c	FUNCTION_29	CALL_31
0x40045db	          0x4889c7	                            mov rdi, rax	      5707	option.c	FUNCTION_29	CALL_31
0x40045de	      0xe8ba010000	            call sym.check_string_option	      5707	option.c	FUNCTION_29	CALL_31
0x40045e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5708	option.c	FUNCTION_29	CALL_32
0x40045e7	          0x4889c7	                            mov rdi, rax	      5708	option.c	FUNCTION_29	CALL_32
0x40045ea	      0xe800000000	                          call 0x40045ef	      5708	option.c	FUNCTION_29	CALL_32
0x40045ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      5710	option.c	FUNCTION_29	CALL_33
0x40045f3	    0x480598140000	                         add rax, 0x1498	      5710	option.c	FUNCTION_29	CALL_33
0x40045f9	          0x4889c7	                            mov rdi, rax	      5710	option.c	FUNCTION_29	CALL_33
0x40045fc	      0xe89c010000	            call sym.check_string_option	      5710	option.c	FUNCTION_29	CALL_33
0x4004601	        0x488b45f8	                mov rax, qword [rbp - 8]	      5712	option.c	FUNCTION_29	CALL_34
0x4004605	    0x480540140000	                         add rax, 0x1440	      5712	option.c	FUNCTION_29	CALL_34
0x400460b	          0x4889c7	                            mov rdi, rax	      5712	option.c	FUNCTION_29	CALL_34
0x400460e	      0xe88a010000	            call sym.check_string_option	      5712	option.c	FUNCTION_29	CALL_34
0x4004613	        0x488b45f8	                mov rax, qword [rbp - 8]	      5715	option.c	FUNCTION_29	CALL_35
0x4004617	    0x480558140000	                         add rax, 0x1458	      5715	option.c	FUNCTION_29	CALL_35
0x400461d	          0x4889c7	                            mov rdi, rax	      5715	option.c	FUNCTION_29	CALL_35
0x4004620	      0xe878010000	            call sym.check_string_option	      5715	option.c	FUNCTION_29	CALL_35
0x4004625	        0x488b45f8	                mov rax, qword [rbp - 8]	      5718	option.c	FUNCTION_29	CALL_36
0x4004629	    0x480560140000	                         add rax, 0x1460	      5718	option.c	FUNCTION_29	CALL_36
0x400462f	          0x4889c7	                            mov rdi, rax	      5718	option.c	FUNCTION_29	CALL_36
0x4004632	      0xe866010000	            call sym.check_string_option	      5718	option.c	FUNCTION_29	CALL_36
0x4004637	        0x488b45f8	                mov rax, qword [rbp - 8]	      5719	option.c	FUNCTION_29	CALL_37
0x400463b	    0x480568140000	                         add rax, 0x1468	      5719	option.c	FUNCTION_29	CALL_37
0x4004641	          0x4889c7	                            mov rdi, rax	      5719	option.c	FUNCTION_29	CALL_37
0x4004644	      0xe854010000	            call sym.check_string_option	      5719	option.c	FUNCTION_29	CALL_37
0x4004649	        0x488b45f8	                mov rax, qword [rbp - 8]	      5722	option.c	FUNCTION_29	CALL_38
0x400464d	    0x4805e8150000	                         add rax, 0x15e8	      5722	option.c	FUNCTION_29	CALL_38
0x4004653	          0x4889c7	                            mov rdi, rax	      5722	option.c	FUNCTION_29	CALL_38
0x4004656	      0xe842010000	            call sym.check_string_option	      5722	option.c	FUNCTION_29	CALL_38
0x400465b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5725	option.c	FUNCTION_29	CALL_39
0x400465f	    0x4805f0150000	                         add rax, 0x15f0	      5725	option.c	FUNCTION_29	CALL_39
0x4004665	          0x4889c7	                            mov rdi, rax	      5725	option.c	FUNCTION_29	CALL_39
0x4004668	      0xe830010000	            call sym.check_string_option	      5725	option.c	FUNCTION_29	CALL_39
0x400466d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5726	option.c	FUNCTION_29	CALL_40
0x4004671	    0x4805f8150000	                         add rax, 0x15f8	      5726	option.c	FUNCTION_29	CALL_40
0x4004677	          0x4889c7	                            mov rdi, rax	      5726	option.c	FUNCTION_29	CALL_40
0x400467a	      0xe81e010000	            call sym.check_string_option	      5726	option.c	FUNCTION_29	CALL_40
0x400467f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5727	option.c	FUNCTION_29	CALL_41
0x4004683	    0x480500160000	                         add rax, 0x1600	      5727	option.c	FUNCTION_29	CALL_41
0x4004689	          0x4889c7	                            mov rdi, rax	      5727	option.c	FUNCTION_29	CALL_41
0x400468c	      0xe80c010000	            call sym.check_string_option	      5727	option.c	FUNCTION_29	CALL_41
0x4004691	        0x488b45f8	                mov rax, qword [rbp - 8]	      5729	option.c	FUNCTION_29	CALL_42
0x4004695	    0x480508160000	                         add rax, 0x1608	      5729	option.c	FUNCTION_29	CALL_42
0x400469b	          0x4889c7	                            mov rdi, rax	      5729	option.c	FUNCTION_29	CALL_42
0x400469e	      0xe8fa000000	            call sym.check_string_option	      5729	option.c	FUNCTION_29	CALL_42
0x40046a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5730	option.c	FUNCTION_29	CALL_43
0x40046a7	    0x480510160000	                         add rax, 0x1610	      5730	option.c	FUNCTION_29	CALL_43
0x40046ad	          0x4889c7	                            mov rdi, rax	      5730	option.c	FUNCTION_29	CALL_43
0x40046b0	      0xe8e8000000	            call sym.check_string_option	      5730	option.c	FUNCTION_29	CALL_43
0x40046b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5731	option.c	FUNCTION_29	CALL_44
0x40046b9	    0x480520160000	                         add rax, 0x1620	      5731	option.c	FUNCTION_29	CALL_44
0x40046bf	          0x4889c7	                            mov rdi, rax	      5731	option.c	FUNCTION_29	CALL_44
0x40046c2	      0xe8d6000000	            call sym.check_string_option	      5731	option.c	FUNCTION_29	CALL_44
0x40046c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5732	option.c	FUNCTION_29	CALL_45
0x40046cb	    0x480528160000	                         add rax, 0x1628	      5732	option.c	FUNCTION_29	CALL_45
0x40046d1	          0x4889c7	                            mov rdi, rax	      5732	option.c	FUNCTION_29	CALL_45
0x40046d4	      0xe8c4000000	            call sym.check_string_option	      5732	option.c	FUNCTION_29	CALL_45
0x40046d9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5734	option.c	FUNCTION_29	CALL_46
0x40046dd	    0x480538160000	                         add rax, 0x1638	      5734	option.c	FUNCTION_29	CALL_46
0x40046e3	          0x4889c7	                            mov rdi, rax	      5734	option.c	FUNCTION_29	CALL_46
0x40046e6	      0xe8b2000000	            call sym.check_string_option	      5734	option.c	FUNCTION_29	CALL_46
0x40046eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5735	option.c	FUNCTION_29	CALL_47
0x40046ef	    0x480540160000	                         add rax, 0x1640	      5735	option.c	FUNCTION_29	CALL_47
0x40046f5	          0x4889c7	                            mov rdi, rax	      5735	option.c	FUNCTION_29	CALL_47
0x40046f8	      0xe8a0000000	            call sym.check_string_option	      5735	option.c	FUNCTION_29	CALL_47
0x40046fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5738	option.c	FUNCTION_29	CALL_48
0x4004701	    0x480558160000	                         add rax, 0x1658	      5738	option.c	FUNCTION_29	CALL_48
0x4004707	          0x4889c7	                            mov rdi, rax	      5738	option.c	FUNCTION_29	CALL_48
0x400470a	      0xe88e000000	            call sym.check_string_option	      5738	option.c	FUNCTION_29	CALL_48
0x400470f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5740	option.c	FUNCTION_29	CALL_49
0x4004713	    0x4805f8130000	                         add rax, 0x13f8	      5740	option.c	FUNCTION_29	CALL_49
0x4004719	          0x4889c7	                            mov rdi, rax	      5740	option.c	FUNCTION_29	CALL_49
0x400471c	      0xe87c000000	            call sym.check_string_option	      5740	option.c	FUNCTION_29	CALL_49
0x4004721	        0x488b45f8	                mov rax, qword [rbp - 8]	      5742	option.c	FUNCTION_29	CALL_50
0x4004725	    0x480528150000	                         add rax, 0x1528	      5742	option.c	FUNCTION_29	CALL_50
0x400472b	          0x4889c7	                            mov rdi, rax	      5742	option.c	FUNCTION_29	CALL_50
0x400472e	      0xe86a000000	            call sym.check_string_option	      5742	option.c	FUNCTION_29	CALL_50
0x4004733	              0x90	                                     nop	      5744	option.c	FUNCTION_29
0x4004734	              0xc9	                                   leave	      5744	option.c	FUNCTION_29
0x4004735	              0xc3	                                     ret	      5744	option.c	FUNCTION_29
get_sts_value	ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	14
0x4011996	              0x55	                                push rbp	     12533	option.c	FUNCTION_114
0x4011997	          0x4889e5	                            mov rbp, rsp	     12533	option.c	FUNCTION_114
0x401199a	    0x488b05000000	            mov rax, qword [0x040119a1] 	     12534	option.c	FUNCTION_114	CALL_1
0x40119a1	    0x488b80781500	          mov rax, qword [rax + 0x1578] 	     12534	option.c	FUNCTION_114	CALL_1
0x40119a8	          0x4885c0	                           test rax, rax	     12534	option.c	FUNCTION_114	CALL_1
0x40119ab	            0x7911	                           jns 0x40119be	     12534	option.c	FUNCTION_114	CALL_1
0x40119ad	    0x488b05000000	            mov rax, qword [0x040119b4] 	     12534	option.c	FUNCTION_114	CALL_1
0x40119b4	          0x4889c7	                            mov rdi, rax	     12534	option.c	FUNCTION_114	CALL_1
0x40119b7	      0xe800000000	                          call 0x40119bc	     12534	option.c	FUNCTION_114	CALL_1
0x40119bc	            0xeb0e	                           jmp 0x40119cc	     12534	option.c	FUNCTION_114	CALL_1
0x40119be	    0x488b05000000	            mov rax, qword [0x040119c5] 	     12534	option.c	FUNCTION_114	CALL_1
0x40119c5	    0x488b80781500	          mov rax, qword [rax + 0x1578] 	     12534	option.c	FUNCTION_114	CALL_1
0x40119cc	              0x5d	                                 pop rbp	     12535	option.c	FUNCTION_114
0x40119cd	              0xc3	                                     ret	     12535	option.c	FUNCTION_114
illegal_char	ELSE,0:IF,1:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	28
0x4003b78	              0x55	                                push rbp	      5321	option.c	FUNCTION_18
0x4003b79	          0x4889e5	                            mov rbp, rsp	      5321	option.c	FUNCTION_18
0x4003b7c	              0x53	                                push rbx	      5321	option.c	FUNCTION_18
0x4003b7d	        0x4883ec18	                           sub rsp, 0x18	      5321	option.c	FUNCTION_18
0x4003b81	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5321	option.c	FUNCTION_18
0x4003b85	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5321	option.c	FUNCTION_18
0x4003b88	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5322	option.c	FUNCTION_18	IF_1
0x4003b8d	            0x7507	                           jne 0x4003b96	      5322	option.c	FUNCTION_18	IF_1
0x4003b8f	      0xb800000000	                              mov eax, 0	      5323	option.c	FUNCTION_18	IF_1
0x4003b94	            0xeb35	                           jmp 0x4003bcb	      5323	option.c	FUNCTION_18	IF_1
0x4003b96	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5325	option.c	FUNCTION_18	CALL_3
0x4003b99	            0x89c7	                            mov edi, eax	      5325	option.c	FUNCTION_18	CALL_3
0x4003b9b	      0xe800000000	                          call 0x4003ba0	      5325	option.c	FUNCTION_18	CALL_3
0x4003ba0	          0x4889c3	                            mov rbx, rax	      5325	option.c	FUNCTION_18	CALL_3
0x4003ba3	      0xbf00000000	                              mov edi, 0	      5324	option.c	FUNCTION_18	CALL_2
0x4003ba8	      0xe800000000	                          call 0x4003bad	      5324	option.c	FUNCTION_18	CALL_2
0x4003bad	          0x4889c1	                            mov rcx, rax	      5324	option.c	FUNCTION_18	CALL_2
0x4003bb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5324	option.c	FUNCTION_18	CALL_2
0x4003bb4	          0x4889da	                            mov rdx, rbx	      5324	option.c	FUNCTION_18	CALL_2
0x4003bb7	          0x4889ce	                            mov rsi, rcx	      5324	option.c	FUNCTION_18	CALL_2
0x4003bba	          0x4889c7	                            mov rdi, rax	      5324	option.c	FUNCTION_18	CALL_2
0x4003bbd	      0xb800000000	                              mov eax, 0	      5324	option.c	FUNCTION_18	CALL_2
0x4003bc2	      0xe800000000	                          call 0x4003bc7	      5324	option.c	FUNCTION_18	CALL_2
0x4003bc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5326	option.c	FUNCTION_18
0x4003bcb	        0x4883c418	                           add rsp, 0x18	      5327	option.c	FUNCTION_18
0x4003bcf	              0x5b	                                 pop rbx	      5327	option.c	FUNCTION_18
0x4003bd0	              0x5d	                                 pop rbp	      5327	option.c	FUNCTION_18
0x4003bd1	              0xc3	                                     ret	      5327	option.c	FUNCTION_18
reset_option_was_set	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	25
0x40111e2	              0x55	                                push rbp	     12269	option.c	FUNCTION_103
0x40111e3	          0x4889e5	                            mov rbp, rsp	     12269	option.c	FUNCTION_103
0x40111e6	        0x4883ec20	                           sub rsp, 0x20	     12269	option.c	FUNCTION_103
0x40111ea	        0x48897de8	             mov qword [rbp - 0x18], rdi	     12269	option.c	FUNCTION_103
0x40111ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12270	option.c	FUNCTION_103	CALL_1
0x40111f2	          0x4889c7	                            mov rdi, rax	     12270	option.c	FUNCTION_103	CALL_1
0x40111f5	      0xe8aaa3ffff	                     call sym.findoption	     12270	option.c	FUNCTION_103	CALL_1
0x40111fa	          0x8945fc	                mov dword [rbp - 4], eax	     12270	option.c	FUNCTION_103	CALL_1
0x40111fd	        0x837dfc00	                  cmp dword [rbp - 4], 0	     12272	option.c	FUNCTION_103	IF_1
0x4011201	            0x782a	                            js 0x401122d	     12272	option.c	FUNCTION_103	IF_1
0x4011203	          0x8b45fc	                mov eax, dword [rbp - 4]	     12273	option.c	FUNCTION_103	IF_1
0x4011206	            0x4898	                                    cdqe	     12273	option.c	FUNCTION_103	IF_1
0x4011208	        0x48c1e006	                              shl rax, 6	     12273	option.c	FUNCTION_103	IF_1
0x401120c	    0x480500000000	                              add rax, 0	     12273	option.c	FUNCTION_103	IF_1
0x4011212	          0x488b00	                    mov rax, qword [rax]	     12273	option.c	FUNCTION_103	IF_1
0x4011215	          0x80e4fe	                            and ah, 0xfe	     12273	option.c	FUNCTION_103	IF_1
0x4011218	          0x4889c2	                            mov rdx, rax	     12273	option.c	FUNCTION_103	IF_1
0x401121b	          0x8b45fc	                mov eax, dword [rbp - 4]	     12273	option.c	FUNCTION_103	IF_1
0x401121e	            0x4898	                                    cdqe	     12273	option.c	FUNCTION_103	IF_1
0x4011220	        0x48c1e006	                              shl rax, 6	     12273	option.c	FUNCTION_103	IF_1
0x4011224	    0x480500000000	                              add rax, 0	     12273	option.c	FUNCTION_103	IF_1
0x401122a	          0x488910	                    mov qword [rax], rdx	     12273	option.c	FUNCTION_103	IF_1
0x401122d	              0x90	                                     nop	     12274	option.c	FUNCTION_103
0x401122e	              0xc9	                                   leave	     12274	option.c	FUNCTION_103
0x401122f	              0xc3	                                     ret	     12274	option.c	FUNCTION_103
get_varp	ELSE,0:IF,1:SWITCH,1:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	858
0x400d56c	              0x55	                                push rbp	     10590	option.c	FUNCTION_77
0x400d56d	          0x4889e5	                            mov rbp, rsp	     10590	option.c	FUNCTION_77
0x400d570	        0x4883ec10	                           sub rsp, 0x10	     10590	option.c	FUNCTION_77
0x400d574	        0x48897df8	                mov qword [rbp - 8], rdi	     10590	option.c	FUNCTION_77
0x400d578	        0x488b45f8	                mov rax, qword [rbp - 8]	     10592	option.c	FUNCTION_77	IF_1
0x400d57c	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10592	option.c	FUNCTION_77	IF_1
0x400d580	          0x4885c0	                           test rax, rax	     10592	option.c	FUNCTION_77	IF_1
0x400d583	            0x750a	                           jne 0x400d58f	     10592	option.c	FUNCTION_77	IF_1
0x400d585	      0xb800000000	                              mov eax, 0	     10593	option.c	FUNCTION_77	IF_1
0x400d58a	      0xe97a110000	                           jmp 0x400e709	     10593	option.c	FUNCTION_77	IF_1
0x400d58f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d593	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d596	      0x3d21400000	                         cmp eax, 0x4021	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d59b	     0xf84820e0000	                            je 0x400e423	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5a1	      0x3d21400000	                         cmp eax, 0x4021	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5a6	     0xf8f09030000	                            jg 0x400d8b5	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5ac	      0x3d1c200000	                         cmp eax, 0x201c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5b1	     0xf842c0c0000	                            je 0x400e1e3	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5b7	      0x3d1c200000	                         cmp eax, 0x201c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5bc	     0xf8f57010000	                            jg 0x400d719	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5c2	      0x3d0d200000	                         cmp eax, 0x200d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5c7	     0xf84080b0000	                            je 0x400e0d5	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5cd	      0x3d0d200000	                         cmp eax, 0x200d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5d2	     0xf8f9f000000	                            jg 0x400d677	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5d8	      0x3d05200000	                         cmp eax, 0x2005	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5dd	     0xf84b40c0000	                            je 0x400e297	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5e3	      0x3d05200000	                         cmp eax, 0x2005	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5e8	            0x7f45	                            jg 0x400d62f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5ea	      0x3d01200000	                         cmp eax, 0x2001	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5ef	     0xf842c0a0000	                            je 0x400e021	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5f5	      0x3d01200000	                         cmp eax, 0x2001	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5fa	            0x7f18	                            jg 0x400d614	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5fc	            0x85c0	                           test eax, eax	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d5fe	     0xf84cf050000	                            je 0x400dbd3	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d604	      0x3d00200000	                         cmp eax, 0x2000	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d609	     0xf84240a0000	                            je 0x400e033	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d60f	      0xe9d6100000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d614	      0x3d03200000	                         cmp eax, 0x2003	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d619	     0xf84540c0000	                            je 0x400e273	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d61f	      0x3d03200000	                         cmp eax, 0x2003	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d624	     0xf8f5b0c0000	                            jg 0x400e285	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d62a	      0xe9320c0000	                           jmp 0x400e261	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d62f	      0x3d09200000	                         cmp eax, 0x2009	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d634	     0xf84530a0000	                            je 0x400e08d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d63a	      0x3d09200000	                         cmp eax, 0x2009	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d63f	            0x7f1b	                            jg 0x400d65c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d641	      0x3d07200000	                         cmp eax, 0x2007	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d646	     0xf84cd0b0000	                            je 0x400e219	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d64c	      0x3d07200000	                         cmp eax, 0x2007	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d651	     0xf8fd40b0000	                            jg 0x400e22b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d657	      0xe9f30b0000	                           jmp 0x400e24f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d65c	      0x3d0b200000	                         cmp eax, 0x200b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d661	     0xf844a0a0000	                            je 0x400e0b1	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d667	      0x3d0b200000	                         cmp eax, 0x200b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d66c	     0xf8f510a0000	                            jg 0x400e0c3	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d672	      0xe9280a0000	                           jmp 0x400e09f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d677	      0x3d14200000	                         cmp eax, 0x2014	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d67c	     0xf84850b0000	                            je 0x400e207	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d682	      0x3d14200000	                         cmp eax, 0x2014	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d687	            0x7f48	                            jg 0x400d6d1	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d689	      0x3d10200000	                         cmp eax, 0x2010	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d68e	     0xf84770a0000	                            je 0x400e10b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d694	      0x3d10200000	                         cmp eax, 0x2010	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d699	            0x7f1b	                            jg 0x400d6b6	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d69b	      0x3d0e200000	                         cmp eax, 0x200e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6a0	     0xf84410a0000	                            je 0x400e0e7	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6a6	      0x3d0f200000	                         cmp eax, 0x200f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6ab	     0xf84480a0000	                            je 0x400e0f9	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6b1	      0xe934100000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6b6	      0x3d12200000	                         cmp eax, 0x2012	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6bb	     0xf846e0a0000	                            je 0x400e12f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6c1	      0x3d12200000	                         cmp eax, 0x2012	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6c6	     0xf8f750a0000	                            jg 0x400e141	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6cc	      0xe94c0a0000	                           jmp 0x400e11d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6d1	      0x3d18200000	                         cmp eax, 0x2018	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6d6	     0xf84d10a0000	                            je 0x400e1ad	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6dc	      0x3d18200000	                         cmp eax, 0x2018	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6e1	            0x7f1b	                            jg 0x400d6fe	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6e3	      0x3d16200000	                         cmp eax, 0x2016	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6e8	     0xf84770a0000	                            je 0x400e165	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6ee	      0x3d16200000	                         cmp eax, 0x2016	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6f3	     0xf8f7e0a0000	                            jg 0x400e177	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6f9	      0xe9550a0000	                           jmp 0x400e153	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d6fe	      0x3d1a200000	                         cmp eax, 0x201a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d703	     0xf84c80a0000	                            je 0x400e1d1	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d709	      0x3d1a200000	                         cmp eax, 0x201a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d70e	     0xf8f290b0000	                            jg 0x400e23d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d714	      0xe9a60a0000	                           jmp 0x400e1bf	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d719	      0x3d0a400000	                         cmp eax, 0x400a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d71e	     0xf84bb0b0000	                            je 0x400e2df	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d724	      0x3d0a400000	                         cmp eax, 0x400a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d729	     0xf8fc3000000	                            jg 0x400d7f2	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d72f	      0x3d24200000	                         cmp eax, 0x2024	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d734	     0xf84bb0a0000	                            je 0x400e1f5	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d73a	      0x3d24200000	                         cmp eax, 0x2024	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d73f	            0x7f53	                            jg 0x400d794	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d741	      0x3d1f200000	                         cmp eax, 0x201f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d746	     0xf841d090000	                            je 0x400e069	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d74c	      0x3d1f200000	                         cmp eax, 0x201f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d751	            0x7f1b	                            jg 0x400d76e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d753	      0x3d1d200000	                         cmp eax, 0x201d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d758	     0xf84e7080000	                            je 0x400e045	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d75e	      0x3d1e200000	                         cmp eax, 0x201e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d763	     0xf84ee080000	                            je 0x400e057	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d769	      0xe97c0f0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d76e	      0x3d22200000	                         cmp eax, 0x2022	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d773	     0xf84100a0000	                            je 0x400e189	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d779	      0x3d22200000	                         cmp eax, 0x2022	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d77e	     0xf8f170a0000	                            jg 0x400e19b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d784	      0x3d20200000	                         cmp eax, 0x2020	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d789	     0xf84ec080000	                            je 0x400e07b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d78f	      0xe9560f0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d794	      0x3d02400000	                         cmp eax, 0x4002	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d799	     0xf84520b0000	                            je 0x400e2f1	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d79f	      0x3d02400000	                         cmp eax, 0x4002	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7a4	            0x7f26	                            jg 0x400d7cc	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7a6	      0x3d21300000	                         cmp eax, 0x3021	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7ab	     0xf849f070000	                            je 0x400df50	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7b1	      0x3d00400000	                         cmp eax, 0x4000	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7b6	     0xf84ff0a0000	                            je 0x400e2bb	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7bc	      0x3d25200000	                         cmp eax, 0x2025	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7c1	     0xf84140f0000	                            je 0x400e6db	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7c7	      0xe91e0f0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7cc	      0x3d08400000	                         cmp eax, 0x4008	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7d1	     0xf84f60a0000	                            je 0x400e2cd	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7d7	      0x3d08400000	                         cmp eax, 0x4008	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7dc	     0xf8f330b0000	                            jg 0x400e315	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7e2	      0x3d04400000	                         cmp eax, 0x4004	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7e7	     0xf84160b0000	                            je 0x400e303	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7ed	      0xe9f80e0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7f2	      0x3d12400000	                         cmp eax, 0x4012	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7f7	     0xf84840b0000	                            je 0x400e381	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d7fd	      0x3d12400000	                         cmp eax, 0x4012	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d802	            0x7f53	                            jg 0x400d857	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d804	      0x3d0d400000	                         cmp eax, 0x400d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d809	     0xf843c0b0000	                            je 0x400e34b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d80f	      0x3d0d400000	                         cmp eax, 0x400d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d814	            0x7f1b	                            jg 0x400d831	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d816	      0x3d0b400000	                         cmp eax, 0x400b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d81b	     0xf84060b0000	                            je 0x400e327	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d821	      0x3d0c400000	                         cmp eax, 0x400c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d826	     0xf840d0b0000	                            je 0x400e339	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d82c	      0xe9b90e0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d831	      0x3d0f400000	                         cmp eax, 0x400f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d836	     0xf84330b0000	                            je 0x400e36f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d83c	      0x3d0f400000	                         cmp eax, 0x400f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d841	     0xf8c160b0000	                            jl 0x400e35d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d847	      0x3d11400000	                         cmp eax, 0x4011	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d84c	     0xf84410b0000	                            je 0x400e393	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d852	      0xe9930e0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d857	      0x3d1a400000	                         cmp eax, 0x401a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d85c	     0xf848b0b0000	                            je 0x400e3ed	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d862	      0x3d1a400000	                         cmp eax, 0x401a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d867	            0x7f26	                            jg 0x400d88f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d869	      0x3d16400000	                         cmp eax, 0x4016	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d86e	     0xf84430b0000	                            je 0x400e3b7	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d874	      0x3d19400000	                         cmp eax, 0x4019	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d879	     0xf845c0b0000	                            je 0x400e3db	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d87f	      0x3d13400000	                         cmp eax, 0x4013	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d884	     0xf841b0b0000	                            je 0x400e3a5	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d88a	      0xe95b0e0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d88f	      0x3d1d400000	                         cmp eax, 0x401d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d894	     0xf84770b0000	                            je 0x400e411	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d89a	      0x3d20400000	                         cmp eax, 0x4020	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d89f	     0xf84440c0000	                            je 0x400e4e9	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8a5	      0x3d1c400000	                         cmp eax, 0x401c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8aa	     0xf844f0b0000	                            je 0x400e3ff	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8b0	      0xe9350e0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8b5	      0x3d43400000	                         cmp eax, 0x4043	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8ba	     0xf84130d0000	                            je 0x400e5d3	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8c0	      0x3d43400000	                         cmp eax, 0x4043	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8c5	     0xf8f70010000	                            jg 0x400da3b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8cb	      0x3d33400000	                         cmp eax, 0x4033	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8d0	     0xf84490c0000	                            je 0x400e51f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8d6	      0x3d33400000	                         cmp eax, 0x4033	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8db	     0xf8fad000000	                            jg 0x400d98e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8e1	      0x3d28400000	                         cmp eax, 0x4028	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8e6	     0xf84eb0b0000	                            je 0x400e4d7	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8ec	      0x3d28400000	                         cmp eax, 0x4028	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8f1	            0x7f48	                            jg 0x400d93b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8f3	      0x3d24400000	                         cmp eax, 0x4024	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8f8	     0xf84370b0000	                            je 0x400e435	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d8fe	      0x3d24400000	                         cmp eax, 0x4024	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d903	            0x7f1b	                            jg 0x400d920	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d905	      0x3d22400000	                         cmp eax, 0x4022	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d90a	     0xf84490b0000	                            je 0x400e459	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d910	      0x3d23400000	                         cmp eax, 0x4023	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d915	     0xf842c0b0000	                            je 0x400e447	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d91b	      0xe9ca0d0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d920	      0x3d26400000	                         cmp eax, 0x4026	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d925	     0xf84520b0000	                            je 0x400e47d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d92b	      0x3d26400000	                         cmp eax, 0x4026	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d930	     0xf8f8f0b0000	                            jg 0x400e4c5	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d936	      0xe9300b0000	                           jmp 0x400e46b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d93b	      0x3d2c400000	                         cmp eax, 0x402c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d940	     0xf84b50b0000	                            je 0x400e4fb	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d946	      0x3d2c400000	                         cmp eax, 0x402c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d94b	            0x7f1b	                            jg 0x400d968	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d94d	      0x3d2a400000	                         cmp eax, 0x402a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d952	     0xf84370b0000	                            je 0x400e48f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d958	      0x3d2a400000	                         cmp eax, 0x402a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d95d	     0xf8f3e0b0000	                            jg 0x400e4a1	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d963	      0xe94b0b0000	                           jmp 0x400e4b3	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d968	      0x3d2f400000	                         cmp eax, 0x402f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d96d	     0xf849a0b0000	                            je 0x400e50d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d973	      0x3d32400000	                         cmp eax, 0x4032	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d978	     0xf84c50b0000	                            je 0x400e543	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d97e	      0x3d2d400000	                         cmp eax, 0x402d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d983	     0xf84430d0000	                            je 0x400e6cc	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d989	      0xe95c0d0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d98e	      0x3d3b400000	                         cmp eax, 0x403b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d993	     0xf84040c0000	                            je 0x400e59d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d999	      0x3d3b400000	                         cmp eax, 0x403b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d99e	            0x7f53	                            jg 0x400d9f3	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9a0	      0x3d36400000	                         cmp eax, 0x4036	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9a5	     0xf84bc0b0000	                            je 0x400e567	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9ab	      0x3d36400000	                         cmp eax, 0x4036	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9b0	            0x7f1b	                            jg 0x400d9cd	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9b2	      0x3d34400000	                         cmp eax, 0x4034	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9b7	     0xf84980b0000	                            je 0x400e555	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9bd	      0x3d35400000	                         cmp eax, 0x4035	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9c2	     0xf84690b0000	                            je 0x400e531	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9c8	      0xe91d0d0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9cd	      0x3d39400000	                         cmp eax, 0x4039	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9d2	     0xf84a10b0000	                            je 0x400e579	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9d8	      0x3d39400000	                         cmp eax, 0x4039	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9dd	     0xf8fa80b0000	                            jg 0x400e58b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9e3	      0x3d37400000	                         cmp eax, 0x4037	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9e8	     0xf84db090000	                            je 0x400e3c9	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9ee	      0xe9f70c0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9f3	      0x3d3f400000	                         cmp eax, 0x403f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9f8	     0xf841d0c0000	                            je 0x400e61b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400d9fe	      0x3d3f400000	                         cmp eax, 0x403f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da03	            0x7f1b	                            jg 0x400da20	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da05	      0x3d3d400000	                         cmp eax, 0x403d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da0a	     0xf84b10b0000	                            je 0x400e5c1	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da10	      0x3d3d400000	                         cmp eax, 0x403d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da15	     0xf8fee0b0000	                            jg 0x400e609	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da1b	      0xe98f0b0000	                           jmp 0x400e5af	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da20	      0x3d41400000	                         cmp eax, 0x4041	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da25	     0xf84180c0000	                            je 0x400e643	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da2b	      0x3d41400000	                         cmp eax, 0x4041	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da30	     0xf8f230c0000	                            jg 0x400e659	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da36	      0xe9f20b0000	                           jmp 0x400e62d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da3b	      0x3d10500000	                         cmp eax, 0x5010	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da40	     0xf84d6040000	                            je 0x400df1c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da46	      0x3d10500000	                         cmp eax, 0x5010	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da4b	     0xf8fc3000000	                            jg 0x400db14	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da51	      0x3d4c400000	                         cmp eax, 0x404c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da56	     0xf84520c0000	                            je 0x400e6ae	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da5c	      0x3d4c400000	                         cmp eax, 0x404c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da61	            0x7f53	                            jg 0x400dab6	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da63	      0x3d46400000	                         cmp eax, 0x4046	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da68	     0xf84890b0000	                            je 0x400e5f7	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da6e	      0x3d46400000	                         cmp eax, 0x4046	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da73	            0x7f1b	                            jg 0x400da90	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da75	      0x3d44400000	                         cmp eax, 0x4044	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da7a	     0xf84650b0000	                            je 0x400e5e5	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da80	      0x3d45400000	                         cmp eax, 0x4045	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da85	     0xf84e40b0000	                            je 0x400e66f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da8b	      0xe95a0c0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da90	      0x3d4a400000	                         cmp eax, 0x404a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da95	     0xf84f50b0000	                            je 0x400e690	     10595	option.c	FUNCTION_77	SWITCH_1
0x400da9b	      0x3d4a400000	                         cmp eax, 0x404a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400daa0	     0xf8ff90b0000	                            jg 0x400e69f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400daa6	      0x3d49400000	                         cmp eax, 0x4049	     10595	option.c	FUNCTION_77	SWITCH_1
0x400daab	     0xf84d00b0000	                            je 0x400e681	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dab1	      0xe9340c0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dab6	      0x3d03500000	                         cmp eax, 0x5003	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dabb	     0xf8453020000	                            je 0x400dd14	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dac1	      0x3d03500000	                         cmp eax, 0x5003	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dac6	            0x7f26	                            jg 0x400daee	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dac8	      0x3d4f400000	                         cmp eax, 0x404f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dacd	     0xf84d6070000	                            je 0x400e2a9	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dad3	      0x3d01500000	                         cmp eax, 0x5001	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dad8	     0xf849e010000	                            je 0x400dc7c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dade	      0x3d4e400000	                         cmp eax, 0x404e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dae3	     0xf84d40b0000	                            je 0x400e6bd	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dae9	      0xe9fc0b0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400daee	      0x3d06500000	                         cmp eax, 0x5006	     10595	option.c	FUNCTION_77	SWITCH_1
0x400daf3	     0xf8487030000	                            je 0x400de80	     10595	option.c	FUNCTION_77	SWITCH_1
0x400daf9	      0x3d07500000	                         cmp eax, 0x5007	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dafe	     0xf84b0030000	                            je 0x400deb4	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db04	      0x3d05500000	                         cmp eax, 0x5005	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db09	     0xf843d030000	                            je 0x400de4c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db0f	      0xe9d60b0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db14	      0x3d1f500000	                         cmp eax, 0x501f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db19	     0xf84c9030000	                            je 0x400dee8	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db1f	      0x3d1f500000	                         cmp eax, 0x501f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db24	            0x7f53	                            jg 0x400db79	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db26	      0x3d17500000	                         cmp eax, 0x5017	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db2b	     0xf8417020000	                            je 0x400dd48	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db31	      0x3d17500000	                         cmp eax, 0x5017	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db36	            0x7f1b	                            jg 0x400db53	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db38	      0x3d14500000	                         cmp eax, 0x5014	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db3d	     0xf846d020000	                            je 0x400ddb0	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db43	      0x3d15500000	                         cmp eax, 0x5015	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db48	     0xf8496020000	                            je 0x400dde4	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db4e	      0xe9970b0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db53	      0x3d1b500000	                         cmp eax, 0x501b	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db58	     0xf8482000000	                            je 0x400dbe0	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db5e	      0x3d1e500000	                         cmp eax, 0x501e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db63	     0xf84af020000	                            je 0x400de18	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db69	      0x3d18500000	                         cmp eax, 0x5018	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db6e	     0xf8408020000	                            je 0x400dd7c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db74	      0xe9710b0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db79	      0x3d38500000	                         cmp eax, 0x5038	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db7e	     0xf84c4000000	                            je 0x400dc48	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db84	      0x3d38500000	                         cmp eax, 0x5038	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db89	            0x7f22	                            jg 0x400dbad	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db8b	      0x3d30500000	                         cmp eax, 0x5030	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db90	     0xf8423040000	                            je 0x400dfb9	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db96	      0x3d31500000	                         cmp eax, 0x5031	     10595	option.c	FUNCTION_77	SWITCH_1
0x400db9b	     0xf844c040000	                            je 0x400dfed	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dba1	      0x3d2e500000	                         cmp eax, 0x502e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dba6	            0x746c	                            je 0x400dc14	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dba8	      0xe93d0b0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbad	      0x3d48500000	                         cmp eax, 0x5048	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbb2	     0xf8428010000	                            je 0x400dce0	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbb8	      0x3d4d500000	                         cmp eax, 0x504d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbbd	     0xf84c1030000	                            je 0x400df84	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbc3	      0x3d47500000	                         cmp eax, 0x5047	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbc8	     0xf84de000000	                            je 0x400dcac	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbce	      0xe9170b0000	                           jmp 0x400e6ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400dbd3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10597	option.c	FUNCTION_77	SWITCH_1
0x400dbd7	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10597	option.c	FUNCTION_77	SWITCH_1
0x400dbdb	      0xe9290b0000	                           jmp 0x400e709	     10597	option.c	FUNCTION_77	SWITCH_1
0x400dbe0	    0x488b05000000	            mov rax, qword [0x0400dbe7] 	     10600	option.c	FUNCTION_77	SWITCH_1
0x400dbe7	    0x488b80081600	          mov rax, qword [rax + 0x1608] 	     10600	option.c	FUNCTION_77	SWITCH_1
0x400dbee	           0xfb600	                   movzx eax, byte [rax]	     10600	option.c	FUNCTION_77	SWITCH_1
0x400dbf1	            0x84c0	                             test al, al	     10601	option.c	FUNCTION_77	SWITCH_1
0x400dbf3	            0x7412	                            je 0x400dc07	     10601	option.c	FUNCTION_77	SWITCH_1
0x400dbf5	    0x488b05000000	            mov rax, qword [0x0400dbfc] 	     10601	option.c	FUNCTION_77	SWITCH_1
0x400dbfc	    0x480508160000	                         add rax, 0x1608	     10601	option.c	FUNCTION_77	SWITCH_1
0x400dc02	      0xe9020b0000	                           jmp 0x400e709	     10600	option.c	FUNCTION_77	SWITCH_1
0x400dc07	        0x488b45f8	                mov rax, qword [rbp - 8]	     10601	option.c	FUNCTION_77	SWITCH_1
0x400dc0b	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10601	option.c	FUNCTION_77	SWITCH_1
0x400dc0f	      0xe9f50a0000	                           jmp 0x400e709	     10600	option.c	FUNCTION_77	SWITCH_1
0x400dc14	    0x488b05000000	            mov rax, qword [0x0400dc1b] 	     10602	option.c	FUNCTION_77	SWITCH_1
0x400dc1b	    0x488b80181500	          mov rax, qword [rax + 0x1518] 	     10602	option.c	FUNCTION_77	SWITCH_1
0x400dc22	           0xfb600	                   movzx eax, byte [rax]	     10602	option.c	FUNCTION_77	SWITCH_1
0x400dc25	            0x84c0	                             test al, al	     10603	option.c	FUNCTION_77	SWITCH_1
0x400dc27	            0x7412	                            je 0x400dc3b	     10603	option.c	FUNCTION_77	SWITCH_1
0x400dc29	    0x488b05000000	            mov rax, qword [0x0400dc30] 	     10603	option.c	FUNCTION_77	SWITCH_1
0x400dc30	    0x480518150000	                         add rax, 0x1518	     10603	option.c	FUNCTION_77	SWITCH_1
0x400dc36	      0xe9ce0a0000	                           jmp 0x400e709	     10602	option.c	FUNCTION_77	SWITCH_1
0x400dc3b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10603	option.c	FUNCTION_77	SWITCH_1
0x400dc3f	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10603	option.c	FUNCTION_77	SWITCH_1
0x400dc43	      0xe9c10a0000	                           jmp 0x400e709	     10602	option.c	FUNCTION_77	SWITCH_1
0x400dc48	    0x488b05000000	            mov rax, qword [0x0400dc4f] 	     10604	option.c	FUNCTION_77	SWITCH_1
0x400dc4f	    0x488b80101600	          mov rax, qword [rax + 0x1610] 	     10604	option.c	FUNCTION_77	SWITCH_1
0x400dc56	           0xfb600	                   movzx eax, byte [rax]	     10604	option.c	FUNCTION_77	SWITCH_1
0x400dc59	            0x84c0	                             test al, al	     10605	option.c	FUNCTION_77	SWITCH_1
0x400dc5b	            0x7412	                            je 0x400dc6f	     10605	option.c	FUNCTION_77	SWITCH_1
0x400dc5d	    0x488b05000000	            mov rax, qword [0x0400dc64] 	     10605	option.c	FUNCTION_77	SWITCH_1
0x400dc64	    0x480510160000	                         add rax, 0x1610	     10605	option.c	FUNCTION_77	SWITCH_1
0x400dc6a	      0xe99a0a0000	                           jmp 0x400e709	     10604	option.c	FUNCTION_77	SWITCH_1
0x400dc6f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10605	option.c	FUNCTION_77	SWITCH_1
0x400dc73	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10605	option.c	FUNCTION_77	SWITCH_1
0x400dc77	      0xe98d0a0000	                           jmp 0x400e709	     10604	option.c	FUNCTION_77	SWITCH_1
0x400dc7c	    0x488b05000000	            mov rax, qword [0x0400dc83] 	     10606	option.c	FUNCTION_77	SWITCH_1
0x400dc83	    0x8b8018160000	          mov eax, dword [rax + 0x1618] 	     10606	option.c	FUNCTION_77	SWITCH_1
0x400dc89	            0x85c0	                           test eax, eax	     10607	option.c	FUNCTION_77	SWITCH_1
0x400dc8b	            0x7812	                            js 0x400dc9f	     10607	option.c	FUNCTION_77	SWITCH_1
0x400dc8d	    0x488b05000000	            mov rax, qword [0x0400dc94] 	     10607	option.c	FUNCTION_77	SWITCH_1
0x400dc94	    0x480518160000	                         add rax, 0x1618	     10607	option.c	FUNCTION_77	SWITCH_1
0x400dc9a	      0xe96a0a0000	                           jmp 0x400e709	     10606	option.c	FUNCTION_77	SWITCH_1
0x400dc9f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10607	option.c	FUNCTION_77	SWITCH_1
0x400dca3	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10607	option.c	FUNCTION_77	SWITCH_1
0x400dca7	      0xe95d0a0000	                           jmp 0x400e709	     10606	option.c	FUNCTION_77	SWITCH_1
0x400dcac	    0x488b05000000	            mov rax, qword [0x0400dcb3] 	     10608	option.c	FUNCTION_77	SWITCH_1
0x400dcb3	    0x488b80201600	          mov rax, qword [rax + 0x1620] 	     10608	option.c	FUNCTION_77	SWITCH_1
0x400dcba	           0xfb600	                   movzx eax, byte [rax]	     10608	option.c	FUNCTION_77	SWITCH_1
0x400dcbd	            0x84c0	                             test al, al	     10609	option.c	FUNCTION_77	SWITCH_1
0x400dcbf	            0x7412	                            je 0x400dcd3	     10609	option.c	FUNCTION_77	SWITCH_1
0x400dcc1	    0x488b05000000	            mov rax, qword [0x0400dcc8] 	     10609	option.c	FUNCTION_77	SWITCH_1
0x400dcc8	    0x480520160000	                         add rax, 0x1620	     10609	option.c	FUNCTION_77	SWITCH_1
0x400dcce	      0xe9360a0000	                           jmp 0x400e709	     10608	option.c	FUNCTION_77	SWITCH_1
0x400dcd3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10609	option.c	FUNCTION_77	SWITCH_1
0x400dcd7	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10609	option.c	FUNCTION_77	SWITCH_1
0x400dcdb	      0xe9290a0000	                           jmp 0x400e709	     10608	option.c	FUNCTION_77	SWITCH_1
0x400dce0	    0x488b05000000	            mov rax, qword [0x0400dce7] 	     10610	option.c	FUNCTION_77	SWITCH_1
0x400dce7	    0x488b80281600	          mov rax, qword [rax + 0x1628] 	     10610	option.c	FUNCTION_77	SWITCH_1
0x400dcee	           0xfb600	                   movzx eax, byte [rax]	     10610	option.c	FUNCTION_77	SWITCH_1
0x400dcf1	            0x84c0	                             test al, al	     10611	option.c	FUNCTION_77	SWITCH_1
0x400dcf3	            0x7412	                            je 0x400dd07	     10611	option.c	FUNCTION_77	SWITCH_1
0x400dcf5	    0x488b05000000	            mov rax, qword [0x0400dcfc] 	     10611	option.c	FUNCTION_77	SWITCH_1
0x400dcfc	    0x480528160000	                         add rax, 0x1628	     10611	option.c	FUNCTION_77	SWITCH_1
0x400dd02	      0xe9020a0000	                           jmp 0x400e709	     10610	option.c	FUNCTION_77	SWITCH_1
0x400dd07	        0x488b45f8	                mov rax, qword [rbp - 8]	     10611	option.c	FUNCTION_77	SWITCH_1
0x400dd0b	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10611	option.c	FUNCTION_77	SWITCH_1
0x400dd0f	      0xe9f5090000	                           jmp 0x400e709	     10610	option.c	FUNCTION_77	SWITCH_1
0x400dd14	    0x488b05000000	            mov rax, qword [0x0400dd1b] 	     10612	option.c	FUNCTION_77	SWITCH_1
0x400dd1b	    0x488b80f81300	          mov rax, qword [rax + 0x13f8] 	     10612	option.c	FUNCTION_77	SWITCH_1
0x400dd22	           0xfb600	                   movzx eax, byte [rax]	     10612	option.c	FUNCTION_77	SWITCH_1
0x400dd25	            0x84c0	                             test al, al	     10613	option.c	FUNCTION_77	SWITCH_1
0x400dd27	            0x7412	                            je 0x400dd3b	     10613	option.c	FUNCTION_77	SWITCH_1
0x400dd29	    0x488b05000000	            mov rax, qword [0x0400dd30] 	     10613	option.c	FUNCTION_77	SWITCH_1
0x400dd30	    0x4805f8130000	                         add rax, 0x13f8	     10613	option.c	FUNCTION_77	SWITCH_1
0x400dd36	      0xe9ce090000	                           jmp 0x400e709	     10612	option.c	FUNCTION_77	SWITCH_1
0x400dd3b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10613	option.c	FUNCTION_77	SWITCH_1
0x400dd3f	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10613	option.c	FUNCTION_77	SWITCH_1
0x400dd43	      0xe9c1090000	                           jmp 0x400e709	     10612	option.c	FUNCTION_77	SWITCH_1
0x400dd48	    0x488b05000000	            mov rax, qword [0x0400dd4f] 	     10615	option.c	FUNCTION_77	SWITCH_1
0x400dd4f	    0x488b80c01400	          mov rax, qword [rax + 0x14c0] 	     10615	option.c	FUNCTION_77	SWITCH_1
0x400dd56	           0xfb600	                   movzx eax, byte [rax]	     10615	option.c	FUNCTION_77	SWITCH_1
0x400dd59	            0x84c0	                             test al, al	     10616	option.c	FUNCTION_77	SWITCH_1
0x400dd5b	            0x7412	                            je 0x400dd6f	     10616	option.c	FUNCTION_77	SWITCH_1
0x400dd5d	    0x488b05000000	            mov rax, qword [0x0400dd64] 	     10616	option.c	FUNCTION_77	SWITCH_1
0x400dd64	    0x4805c0140000	                         add rax, 0x14c0	     10616	option.c	FUNCTION_77	SWITCH_1
0x400dd6a	      0xe99a090000	                           jmp 0x400e709	     10615	option.c	FUNCTION_77	SWITCH_1
0x400dd6f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10616	option.c	FUNCTION_77	SWITCH_1
0x400dd73	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10616	option.c	FUNCTION_77	SWITCH_1
0x400dd77	      0xe98d090000	                           jmp 0x400e709	     10615	option.c	FUNCTION_77	SWITCH_1
0x400dd7c	    0x488b05000000	            mov rax, qword [0x0400dd83] 	     10617	option.c	FUNCTION_77	SWITCH_1
0x400dd83	    0x488b80c81400	          mov rax, qword [rax + 0x14c8] 	     10617	option.c	FUNCTION_77	SWITCH_1
0x400dd8a	           0xfb600	                   movzx eax, byte [rax]	     10617	option.c	FUNCTION_77	SWITCH_1
0x400dd8d	            0x84c0	                             test al, al	     10618	option.c	FUNCTION_77	SWITCH_1
0x400dd8f	            0x7412	                            je 0x400dda3	     10618	option.c	FUNCTION_77	SWITCH_1
0x400dd91	    0x488b05000000	            mov rax, qword [0x0400dd98] 	     10618	option.c	FUNCTION_77	SWITCH_1
0x400dd98	    0x4805c8140000	                         add rax, 0x14c8	     10618	option.c	FUNCTION_77	SWITCH_1
0x400dd9e	      0xe966090000	                           jmp 0x400e709	     10617	option.c	FUNCTION_77	SWITCH_1
0x400dda3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10618	option.c	FUNCTION_77	SWITCH_1
0x400dda7	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10618	option.c	FUNCTION_77	SWITCH_1
0x400ddab	      0xe959090000	                           jmp 0x400e709	     10617	option.c	FUNCTION_77	SWITCH_1
0x400ddb0	    0x488b05000000	            mov rax, qword [0x0400ddb7] 	     10621	option.c	FUNCTION_77	SWITCH_1
0x400ddb7	    0x488b80381600	          mov rax, qword [rax + 0x1638] 	     10621	option.c	FUNCTION_77	SWITCH_1
0x400ddbe	           0xfb600	                   movzx eax, byte [rax]	     10621	option.c	FUNCTION_77	SWITCH_1
0x400ddc1	            0x84c0	                             test al, al	     10622	option.c	FUNCTION_77	SWITCH_1
0x400ddc3	            0x7412	                            je 0x400ddd7	     10622	option.c	FUNCTION_77	SWITCH_1
0x400ddc5	    0x488b05000000	            mov rax, qword [0x0400ddcc] 	     10622	option.c	FUNCTION_77	SWITCH_1
0x400ddcc	    0x480538160000	                         add rax, 0x1638	     10622	option.c	FUNCTION_77	SWITCH_1
0x400ddd2	      0xe932090000	                           jmp 0x400e709	     10621	option.c	FUNCTION_77	SWITCH_1
0x400ddd7	        0x488b45f8	                mov rax, qword [rbp - 8]	     10622	option.c	FUNCTION_77	SWITCH_1
0x400dddb	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10622	option.c	FUNCTION_77	SWITCH_1
0x400dddf	      0xe925090000	                           jmp 0x400e709	     10621	option.c	FUNCTION_77	SWITCH_1
0x400dde4	    0x488b05000000	            mov rax, qword [0x0400ddeb] 	     10623	option.c	FUNCTION_77	SWITCH_1
0x400ddeb	    0x488b80401600	          mov rax, qword [rax + 0x1640] 	     10623	option.c	FUNCTION_77	SWITCH_1
0x400ddf2	           0xfb600	                   movzx eax, byte [rax]	     10623	option.c	FUNCTION_77	SWITCH_1
0x400ddf5	            0x84c0	                             test al, al	     10624	option.c	FUNCTION_77	SWITCH_1
0x400ddf7	            0x7412	                            je 0x400de0b	     10624	option.c	FUNCTION_77	SWITCH_1
0x400ddf9	    0x488b05000000	            mov rax, qword [0x0400de00] 	     10624	option.c	FUNCTION_77	SWITCH_1
0x400de00	    0x480540160000	                         add rax, 0x1640	     10624	option.c	FUNCTION_77	SWITCH_1
0x400de06	      0xe9fe080000	                           jmp 0x400e709	     10623	option.c	FUNCTION_77	SWITCH_1
0x400de0b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10624	option.c	FUNCTION_77	SWITCH_1
0x400de0f	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10624	option.c	FUNCTION_77	SWITCH_1
0x400de13	      0xe9f1080000	                           jmp 0x400e709	     10623	option.c	FUNCTION_77	SWITCH_1
0x400de18	    0x488b05000000	            mov rax, qword [0x0400de1f] 	     10626	option.c	FUNCTION_77	SWITCH_1
0x400de1f	    0x488b80f81400	          mov rax, qword [rax + 0x14f8] 	     10626	option.c	FUNCTION_77	SWITCH_1
0x400de26	           0xfb600	                   movzx eax, byte [rax]	     10626	option.c	FUNCTION_77	SWITCH_1
0x400de29	            0x84c0	                             test al, al	     10627	option.c	FUNCTION_77	SWITCH_1
0x400de2b	            0x7412	                            je 0x400de3f	     10627	option.c	FUNCTION_77	SWITCH_1
0x400de2d	    0x488b05000000	            mov rax, qword [0x0400de34] 	     10627	option.c	FUNCTION_77	SWITCH_1
0x400de34	    0x4805f8140000	                         add rax, 0x14f8	     10627	option.c	FUNCTION_77	SWITCH_1
0x400de3a	      0xe9ca080000	                           jmp 0x400e709	     10626	option.c	FUNCTION_77	SWITCH_1
0x400de3f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10627	option.c	FUNCTION_77	SWITCH_1
0x400de43	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10627	option.c	FUNCTION_77	SWITCH_1
0x400de47	      0xe9bd080000	                           jmp 0x400e709	     10626	option.c	FUNCTION_77	SWITCH_1
0x400de4c	    0x488b05000000	            mov rax, qword [0x0400de53] 	     10629	option.c	FUNCTION_77	SWITCH_1
0x400de53	    0x488b80001600	          mov rax, qword [rax + 0x1600] 	     10629	option.c	FUNCTION_77	SWITCH_1
0x400de5a	           0xfb600	                   movzx eax, byte [rax]	     10629	option.c	FUNCTION_77	SWITCH_1
0x400de5d	            0x84c0	                             test al, al	     10630	option.c	FUNCTION_77	SWITCH_1
0x400de5f	            0x7412	                            je 0x400de73	     10630	option.c	FUNCTION_77	SWITCH_1
0x400de61	    0x488b05000000	            mov rax, qword [0x0400de68] 	     10630	option.c	FUNCTION_77	SWITCH_1
0x400de68	    0x480500160000	                         add rax, 0x1600	     10630	option.c	FUNCTION_77	SWITCH_1
0x400de6e	      0xe996080000	                           jmp 0x400e709	     10629	option.c	FUNCTION_77	SWITCH_1
0x400de73	        0x488b45f8	                mov rax, qword [rbp - 8]	     10630	option.c	FUNCTION_77	SWITCH_1
0x400de77	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10630	option.c	FUNCTION_77	SWITCH_1
0x400de7b	      0xe989080000	                           jmp 0x400e709	     10629	option.c	FUNCTION_77	SWITCH_1
0x400de80	    0x488b05000000	            mov rax, qword [0x0400de87] 	     10631	option.c	FUNCTION_77	SWITCH_1
0x400de87	    0x488b80f01500	          mov rax, qword [rax + 0x15f0] 	     10631	option.c	FUNCTION_77	SWITCH_1
0x400de8e	           0xfb600	                   movzx eax, byte [rax]	     10631	option.c	FUNCTION_77	SWITCH_1
0x400de91	            0x84c0	                             test al, al	     10632	option.c	FUNCTION_77	SWITCH_1
0x400de93	            0x7412	                            je 0x400dea7	     10632	option.c	FUNCTION_77	SWITCH_1
0x400de95	    0x488b05000000	            mov rax, qword [0x0400de9c] 	     10632	option.c	FUNCTION_77	SWITCH_1
0x400de9c	    0x4805f0150000	                         add rax, 0x15f0	     10632	option.c	FUNCTION_77	SWITCH_1
0x400dea2	      0xe962080000	                           jmp 0x400e709	     10631	option.c	FUNCTION_77	SWITCH_1
0x400dea7	        0x488b45f8	                mov rax, qword [rbp - 8]	     10632	option.c	FUNCTION_77	SWITCH_1
0x400deab	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10632	option.c	FUNCTION_77	SWITCH_1
0x400deaf	      0xe955080000	                           jmp 0x400e709	     10631	option.c	FUNCTION_77	SWITCH_1
0x400deb4	    0x488b05000000	            mov rax, qword [0x0400debb] 	     10633	option.c	FUNCTION_77	SWITCH_1
0x400debb	    0x488b80f81500	          mov rax, qword [rax + 0x15f8] 	     10633	option.c	FUNCTION_77	SWITCH_1
0x400dec2	           0xfb600	                   movzx eax, byte [rax]	     10633	option.c	FUNCTION_77	SWITCH_1
0x400dec5	            0x84c0	                             test al, al	     10634	option.c	FUNCTION_77	SWITCH_1
0x400dec7	            0x7412	                            je 0x400dedb	     10634	option.c	FUNCTION_77	SWITCH_1
0x400dec9	    0x488b05000000	            mov rax, qword [0x0400ded0] 	     10634	option.c	FUNCTION_77	SWITCH_1
0x400ded0	    0x4805f8150000	                         add rax, 0x15f8	     10634	option.c	FUNCTION_77	SWITCH_1
0x400ded6	      0xe92e080000	                           jmp 0x400e709	     10633	option.c	FUNCTION_77	SWITCH_1
0x400dedb	        0x488b45f8	                mov rax, qword [rbp - 8]	     10634	option.c	FUNCTION_77	SWITCH_1
0x400dedf	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10634	option.c	FUNCTION_77	SWITCH_1
0x400dee3	      0xe921080000	                           jmp 0x400e709	     10633	option.c	FUNCTION_77	SWITCH_1
0x400dee8	    0x488b05000000	            mov rax, qword [0x0400deef] 	     10637	option.c	FUNCTION_77	SWITCH_1
0x400deef	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	     10637	option.c	FUNCTION_77	SWITCH_1
0x400def6	           0xfb600	                   movzx eax, byte [rax]	     10637	option.c	FUNCTION_77	SWITCH_1
0x400def9	            0x84c0	                             test al, al	     10638	option.c	FUNCTION_77	SWITCH_1
0x400defb	            0x7412	                            je 0x400df0f	     10638	option.c	FUNCTION_77	SWITCH_1
0x400defd	    0x488b05000000	            mov rax, qword [0x0400df04] 	     10638	option.c	FUNCTION_77	SWITCH_1
0x400df04	    0x480538170000	                         add rax, 0x1738	     10638	option.c	FUNCTION_77	SWITCH_1
0x400df0a	      0xe9fa070000	                           jmp 0x400e709	     10637	option.c	FUNCTION_77	SWITCH_1
0x400df0f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10638	option.c	FUNCTION_77	SWITCH_1
0x400df13	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10638	option.c	FUNCTION_77	SWITCH_1
0x400df17	      0xe9ed070000	                           jmp 0x400e709	     10637	option.c	FUNCTION_77	SWITCH_1
0x400df1c	    0x488b05000000	            mov rax, qword [0x0400df23] 	     10641	option.c	FUNCTION_77	SWITCH_1
0x400df23	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	     10641	option.c	FUNCTION_77	SWITCH_1
0x400df2a	           0xfb600	                   movzx eax, byte [rax]	     10641	option.c	FUNCTION_77	SWITCH_1
0x400df2d	            0x84c0	                             test al, al	     10642	option.c	FUNCTION_77	SWITCH_1
0x400df2f	            0x7412	                            je 0x400df43	     10642	option.c	FUNCTION_77	SWITCH_1
0x400df31	    0x488b05000000	            mov rax, qword [0x0400df38] 	     10642	option.c	FUNCTION_77	SWITCH_1
0x400df38	    0x480548170000	                         add rax, 0x1748	     10642	option.c	FUNCTION_77	SWITCH_1
0x400df3e	      0xe9c6070000	                           jmp 0x400e709	     10641	option.c	FUNCTION_77	SWITCH_1
0x400df43	        0x488b45f8	                mov rax, qword [rbp - 8]	     10642	option.c	FUNCTION_77	SWITCH_1
0x400df47	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10642	option.c	FUNCTION_77	SWITCH_1
0x400df4b	      0xe9b9070000	                           jmp 0x400e709	     10641	option.c	FUNCTION_77	SWITCH_1
0x400df50	    0x488b05000000	            mov rax, qword [0x0400df57] 	     10645	option.c	FUNCTION_77	SWITCH_1
0x400df57	    0x488b80800200	           mov rax, qword [rax + 0x280] 	     10645	option.c	FUNCTION_77	SWITCH_1
0x400df5e	           0xfb600	                   movzx eax, byte [rax]	     10645	option.c	FUNCTION_77	SWITCH_1
0x400df61	            0x84c0	                             test al, al	     10646	option.c	FUNCTION_77	SWITCH_1
0x400df63	            0x7412	                            je 0x400df77	     10646	option.c	FUNCTION_77	SWITCH_1
0x400df65	    0x488b05000000	            mov rax, qword [0x0400df6c] 	     10646	option.c	FUNCTION_77	SWITCH_1
0x400df6c	    0x480580020000	                          add rax, 0x280	     10646	option.c	FUNCTION_77	SWITCH_1
0x400df72	      0xe992070000	                           jmp 0x400e709	     10645	option.c	FUNCTION_77	SWITCH_1
0x400df77	        0x488b45f8	                mov rax, qword [rbp - 8]	     10646	option.c	FUNCTION_77	SWITCH_1
0x400df7b	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10646	option.c	FUNCTION_77	SWITCH_1
0x400df7f	      0xe985070000	                           jmp 0x400e709	     10645	option.c	FUNCTION_77	SWITCH_1
0x400df84	    0x488b05000000	            mov rax, qword [0x0400df8b] 	     10648	option.c	FUNCTION_77	SWITCH_1
0x400df8b	    0x488b80481600	          mov rax, qword [rax + 0x1648] 	     10648	option.c	FUNCTION_77	SWITCH_1
0x400df92	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	     10649	option.c	FUNCTION_77	SWITCH_1
0x400df98	            0x7412	                            je 0x400dfac	     10649	option.c	FUNCTION_77	SWITCH_1
0x400df9a	    0x488b05000000	            mov rax, qword [0x0400dfa1] 	     10649	option.c	FUNCTION_77	SWITCH_1
0x400dfa1	    0x480548160000	                         add rax, 0x1648	     10649	option.c	FUNCTION_77	SWITCH_1
0x400dfa7	      0xe95d070000	                           jmp 0x400e709	     10648	option.c	FUNCTION_77	SWITCH_1
0x400dfac	        0x488b45f8	                mov rax, qword [rbp - 8]	     10649	option.c	FUNCTION_77	SWITCH_1
0x400dfb0	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10649	option.c	FUNCTION_77	SWITCH_1
0x400dfb4	      0xe950070000	                           jmp 0x400e709	     10648	option.c	FUNCTION_77	SWITCH_1
0x400dfb9	    0x488b05000000	            mov rax, qword [0x0400dfc0] 	     10651	option.c	FUNCTION_77	SWITCH_1
0x400dfc0	    0x488b80581600	          mov rax, qword [rax + 0x1658] 	     10651	option.c	FUNCTION_77	SWITCH_1
0x400dfc7	           0xfb600	                   movzx eax, byte [rax]	     10651	option.c	FUNCTION_77	SWITCH_1
0x400dfca	            0x84c0	                             test al, al	     10652	option.c	FUNCTION_77	SWITCH_1
0x400dfcc	            0x7412	                            je 0x400dfe0	     10652	option.c	FUNCTION_77	SWITCH_1
0x400dfce	    0x488b05000000	            mov rax, qword [0x0400dfd5] 	     10652	option.c	FUNCTION_77	SWITCH_1
0x400dfd5	    0x480558160000	                         add rax, 0x1658	     10652	option.c	FUNCTION_77	SWITCH_1
0x400dfdb	      0xe929070000	                           jmp 0x400e709	     10651	option.c	FUNCTION_77	SWITCH_1
0x400dfe0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10652	option.c	FUNCTION_77	SWITCH_1
0x400dfe4	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10652	option.c	FUNCTION_77	SWITCH_1
0x400dfe8	      0xe91c070000	                           jmp 0x400e709	     10651	option.c	FUNCTION_77	SWITCH_1
0x400dfed	    0x488b05000000	            mov rax, qword [0x0400dff4] 	     10655	option.c	FUNCTION_77	SWITCH_1
0x400dff4	    0x488b80281500	          mov rax, qword [rax + 0x1528] 	     10655	option.c	FUNCTION_77	SWITCH_1
0x400dffb	           0xfb600	                   movzx eax, byte [rax]	     10655	option.c	FUNCTION_77	SWITCH_1
0x400dffe	            0x84c0	                             test al, al	     10656	option.c	FUNCTION_77	SWITCH_1
0x400e000	            0x7412	                            je 0x400e014	     10656	option.c	FUNCTION_77	SWITCH_1
0x400e002	    0x488b05000000	            mov rax, qword [0x0400e009] 	     10656	option.c	FUNCTION_77	SWITCH_1
0x400e009	    0x480528150000	                         add rax, 0x1528	     10656	option.c	FUNCTION_77	SWITCH_1
0x400e00f	      0xe9f5060000	                           jmp 0x400e709	     10655	option.c	FUNCTION_77	SWITCH_1
0x400e014	        0x488b45f8	                mov rax, qword [rbp - 8]	     10656	option.c	FUNCTION_77	SWITCH_1
0x400e018	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10656	option.c	FUNCTION_77	SWITCH_1
0x400e01c	      0xe9e8060000	                           jmp 0x400e709	     10655	option.c	FUNCTION_77	SWITCH_1
0x400e021	    0x488b05000000	            mov rax, qword [0x0400e028] 	     10660	option.c	FUNCTION_77	SWITCH_1
0x400e028	    0x4805b0010000	                          add rax, 0x1b0	     10660	option.c	FUNCTION_77	SWITCH_1
0x400e02e	      0xe9d6060000	                           jmp 0x400e709	     10660	option.c	FUNCTION_77	SWITCH_1
0x400e033	    0x488b05000000	            mov rax, qword [0x0400e03a] 	     10662	option.c	FUNCTION_77	SWITCH_1
0x400e03a	    0x480534020000	                          add rax, 0x234	     10662	option.c	FUNCTION_77	SWITCH_1
0x400e040	      0xe9c4060000	                           jmp 0x400e709	     10662	option.c	FUNCTION_77	SWITCH_1
0x400e045	    0x488b05000000	            mov rax, qword [0x0400e04c] 	     10664	option.c	FUNCTION_77	SWITCH_1
0x400e04c	    0x480568020000	                          add rax, 0x268	     10664	option.c	FUNCTION_77	SWITCH_1
0x400e052	      0xe9b2060000	                           jmp 0x400e709	     10664	option.c	FUNCTION_77	SWITCH_1
0x400e057	    0x488b05000000	            mov rax, qword [0x0400e05e] 	     10667	option.c	FUNCTION_77	SWITCH_1
0x400e05e	    0x48056c020000	                          add rax, 0x26c	     10667	option.c	FUNCTION_77	SWITCH_1
0x400e064	      0xe9a0060000	                           jmp 0x400e709	     10667	option.c	FUNCTION_77	SWITCH_1
0x400e069	    0x488b05000000	            mov rax, qword [0x0400e070] 	     10668	option.c	FUNCTION_77	SWITCH_1
0x400e070	    0x480570020000	                          add rax, 0x270	     10668	option.c	FUNCTION_77	SWITCH_1
0x400e076	      0xe98e060000	                           jmp 0x400e709	     10668	option.c	FUNCTION_77	SWITCH_1
0x400e07b	    0x488b05000000	            mov rax, qword [0x0400e082] 	     10669	option.c	FUNCTION_77	SWITCH_1
0x400e082	    0x480578020000	                          add rax, 0x278	     10669	option.c	FUNCTION_77	SWITCH_1
0x400e088	      0xe97c060000	                           jmp 0x400e709	     10669	option.c	FUNCTION_77	SWITCH_1
0x400e08d	    0x488b05000000	            mov rax, qword [0x0400e094] 	     10672	option.c	FUNCTION_77	SWITCH_1
0x400e094	    0x4805c0010000	                          add rax, 0x1c0	     10672	option.c	FUNCTION_77	SWITCH_1
0x400e09a	      0xe96a060000	                           jmp 0x400e709	     10672	option.c	FUNCTION_77	SWITCH_1
0x400e09f	    0x488b05000000	            mov rax, qword [0x0400e0a6] 	     10675	option.c	FUNCTION_77	SWITCH_1
0x400e0a6	    0x4805c8010000	                          add rax, 0x1c8	     10675	option.c	FUNCTION_77	SWITCH_1
0x400e0ac	      0xe958060000	                           jmp 0x400e709	     10675	option.c	FUNCTION_77	SWITCH_1
0x400e0b1	    0x488b05000000	            mov rax, qword [0x0400e0b8] 	     10676	option.c	FUNCTION_77	SWITCH_1
0x400e0b8	    0x4805d4010000	                          add rax, 0x1d4	     10676	option.c	FUNCTION_77	SWITCH_1
0x400e0be	      0xe946060000	                           jmp 0x400e709	     10676	option.c	FUNCTION_77	SWITCH_1
0x400e0c3	    0x488b05000000	            mov rax, qword [0x0400e0ca] 	     10677	option.c	FUNCTION_77	SWITCH_1
0x400e0ca	    0x4805e0010000	                          add rax, 0x1e0	     10677	option.c	FUNCTION_77	SWITCH_1
0x400e0d0	      0xe934060000	                           jmp 0x400e709	     10677	option.c	FUNCTION_77	SWITCH_1
0x400e0d5	    0x488b05000000	            mov rax, qword [0x0400e0dc] 	     10678	option.c	FUNCTION_77	SWITCH_1
0x400e0dc	    0x4805e8010000	                          add rax, 0x1e8	     10678	option.c	FUNCTION_77	SWITCH_1
0x400e0e2	      0xe922060000	                           jmp 0x400e709	     10678	option.c	FUNCTION_77	SWITCH_1
0x400e0e7	    0x488b05000000	            mov rax, qword [0x0400e0ee] 	     10679	option.c	FUNCTION_77	SWITCH_1
0x400e0ee	    0x4805f8010000	                          add rax, 0x1f8	     10679	option.c	FUNCTION_77	SWITCH_1
0x400e0f4	      0xe910060000	                           jmp 0x400e709	     10679	option.c	FUNCTION_77	SWITCH_1
0x400e0f9	    0x488b05000000	            mov rax, qword [0x0400e100] 	     10680	option.c	FUNCTION_77	SWITCH_1
0x400e100	    0x480508020000	                          add rax, 0x208	     10680	option.c	FUNCTION_77	SWITCH_1
0x400e106	      0xe9fe050000	                           jmp 0x400e709	     10680	option.c	FUNCTION_77	SWITCH_1
0x400e10b	    0x488b05000000	            mov rax, qword [0x0400e112] 	     10681	option.c	FUNCTION_77	SWITCH_1
0x400e112	    0x480510020000	                          add rax, 0x210	     10681	option.c	FUNCTION_77	SWITCH_1
0x400e118	      0xe9ec050000	                           jmp 0x400e709	     10681	option.c	FUNCTION_77	SWITCH_1
0x400e11d	    0x488b05000000	            mov rax, qword [0x0400e124] 	     10683	option.c	FUNCTION_77	SWITCH_1
0x400e124	    0x480518020000	                          add rax, 0x218	     10683	option.c	FUNCTION_77	SWITCH_1
0x400e12a	      0xe9da050000	                           jmp 0x400e709	     10683	option.c	FUNCTION_77	SWITCH_1
0x400e12f	    0x488b05000000	            mov rax, qword [0x0400e136] 	     10684	option.c	FUNCTION_77	SWITCH_1
0x400e136	    0x480520020000	                          add rax, 0x220	     10684	option.c	FUNCTION_77	SWITCH_1
0x400e13c	      0xe9c8050000	                           jmp 0x400e709	     10684	option.c	FUNCTION_77	SWITCH_1
0x400e141	    0x488b05000000	            mov rax, qword [0x0400e148] 	     10686	option.c	FUNCTION_77	SWITCH_1
0x400e148	    0x480528020000	                          add rax, 0x228	     10686	option.c	FUNCTION_77	SWITCH_1
0x400e14e	      0xe9b6050000	                           jmp 0x400e709	     10686	option.c	FUNCTION_77	SWITCH_1
0x400e153	    0x488b05000000	            mov rax, qword [0x0400e15a] 	     10688	option.c	FUNCTION_77	SWITCH_1
0x400e15a	    0x480538020000	                          add rax, 0x238	     10688	option.c	FUNCTION_77	SWITCH_1
0x400e160	      0xe9a4050000	                           jmp 0x400e709	     10688	option.c	FUNCTION_77	SWITCH_1
0x400e165	    0x488b05000000	            mov rax, qword [0x0400e16c] 	     10689	option.c	FUNCTION_77	SWITCH_1
0x400e16c	    0x48053c020000	                          add rax, 0x23c	     10689	option.c	FUNCTION_77	SWITCH_1
0x400e172	      0xe992050000	                           jmp 0x400e709	     10689	option.c	FUNCTION_77	SWITCH_1
0x400e177	    0x488b05000000	            mov rax, qword [0x0400e17e] 	     10691	option.c	FUNCTION_77	SWITCH_1
0x400e17e	    0x480540020000	                          add rax, 0x240	     10691	option.c	FUNCTION_77	SWITCH_1
0x400e184	      0xe980050000	                           jmp 0x400e709	     10691	option.c	FUNCTION_77	SWITCH_1
0x400e189	    0x488b05000000	            mov rax, qword [0x0400e190] 	     10693	option.c	FUNCTION_77	SWITCH_1
0x400e190	    0x480548020000	                          add rax, 0x248	     10693	option.c	FUNCTION_77	SWITCH_1
0x400e196	      0xe96e050000	                           jmp 0x400e709	     10693	option.c	FUNCTION_77	SWITCH_1
0x400e19b	    0x488b05000000	            mov rax, qword [0x0400e1a2] 	     10694	option.c	FUNCTION_77	SWITCH_1
0x400e1a2	    0x48054c020000	                          add rax, 0x24c	     10694	option.c	FUNCTION_77	SWITCH_1
0x400e1a8	      0xe95c050000	                           jmp 0x400e709	     10694	option.c	FUNCTION_77	SWITCH_1
0x400e1ad	    0x488b05000000	            mov rax, qword [0x0400e1b4] 	     10696	option.c	FUNCTION_77	SWITCH_1
0x400e1b4	    0x480550020000	                          add rax, 0x250	     10696	option.c	FUNCTION_77	SWITCH_1
0x400e1ba	      0xe94a050000	                           jmp 0x400e709	     10696	option.c	FUNCTION_77	SWITCH_1
0x400e1bf	    0x488b05000000	            mov rax, qword [0x0400e1c6] 	     10699	option.c	FUNCTION_77	SWITCH_1
0x400e1c6	    0x480554020000	                          add rax, 0x254	     10699	option.c	FUNCTION_77	SWITCH_1
0x400e1cc	      0xe938050000	                           jmp 0x400e709	     10699	option.c	FUNCTION_77	SWITCH_1
0x400e1d1	    0x488b05000000	            mov rax, qword [0x0400e1d8] 	     10700	option.c	FUNCTION_77	SWITCH_1
0x400e1d8	    0x480558020000	                          add rax, 0x258	     10700	option.c	FUNCTION_77	SWITCH_1
0x400e1de	      0xe926050000	                           jmp 0x400e709	     10700	option.c	FUNCTION_77	SWITCH_1
0x400e1e3	    0x488b05000000	            mov rax, qword [0x0400e1ea] 	     10702	option.c	FUNCTION_77	SWITCH_1
0x400e1ea	    0x480560020000	                          add rax, 0x260	     10702	option.c	FUNCTION_77	SWITCH_1
0x400e1f0	      0xe914050000	                           jmp 0x400e709	     10702	option.c	FUNCTION_77	SWITCH_1
0x400e1f5	    0x488b05000000	            mov rax, qword [0x0400e1fc] 	     10703	option.c	FUNCTION_77	SWITCH_1
0x400e1fc	    0x480594020000	                          add rax, 0x294	     10703	option.c	FUNCTION_77	SWITCH_1
0x400e202	      0xe902050000	                           jmp 0x400e709	     10703	option.c	FUNCTION_77	SWITCH_1
0x400e207	    0x488b05000000	            mov rax, qword [0x0400e20e] 	     10705	option.c	FUNCTION_77	SWITCH_1
0x400e20e	    0x480530020000	                          add rax, 0x230	     10705	option.c	FUNCTION_77	SWITCH_1
0x400e214	      0xe9f0040000	                           jmp 0x400e709	     10705	option.c	FUNCTION_77	SWITCH_1
0x400e219	    0x488b05000000	            mov rax, qword [0x0400e220] 	     10706	option.c	FUNCTION_77	SWITCH_1
0x400e220	    0x4805b4010000	                          add rax, 0x1b4	     10706	option.c	FUNCTION_77	SWITCH_1
0x400e226	      0xe9de040000	                           jmp 0x400e709	     10706	option.c	FUNCTION_77	SWITCH_1
0x400e22b	    0x488b05000000	            mov rax, qword [0x0400e232] 	     10707	option.c	FUNCTION_77	SWITCH_1
0x400e232	    0x4805b8010000	                          add rax, 0x1b8	     10707	option.c	FUNCTION_77	SWITCH_1
0x400e238	      0xe9cc040000	                           jmp 0x400e709	     10707	option.c	FUNCTION_77	SWITCH_1
0x400e23d	    0x488b05000000	            mov rax, qword [0x0400e244] 	     10709	option.c	FUNCTION_77	SWITCH_1
0x400e244	    0x480588020000	                          add rax, 0x288	     10709	option.c	FUNCTION_77	SWITCH_1
0x400e24a	      0xe9ba040000	                           jmp 0x400e709	     10709	option.c	FUNCTION_77	SWITCH_1
0x400e24f	    0x488b05000000	            mov rax, qword [0x0400e256] 	     10710	option.c	FUNCTION_77	SWITCH_1
0x400e256	    0x4805b0020000	                          add rax, 0x2b0	     10710	option.c	FUNCTION_77	SWITCH_1
0x400e25c	      0xe9a8040000	                           jmp 0x400e709	     10710	option.c	FUNCTION_77	SWITCH_1
0x400e261	    0x488b05000000	            mov rax, qword [0x0400e268] 	     10712	option.c	FUNCTION_77	SWITCH_1
0x400e268	    0x4805a0020000	                          add rax, 0x2a0	     10712	option.c	FUNCTION_77	SWITCH_1
0x400e26e	      0xe996040000	                           jmp 0x400e709	     10712	option.c	FUNCTION_77	SWITCH_1
0x400e273	    0x488b05000000	            mov rax, qword [0x0400e27a] 	     10713	option.c	FUNCTION_77	SWITCH_1
0x400e27a	    0x4805a8020000	                          add rax, 0x2a8	     10713	option.c	FUNCTION_77	SWITCH_1
0x400e280	      0xe984040000	                           jmp 0x400e709	     10713	option.c	FUNCTION_77	SWITCH_1
0x400e285	    0x488b05000000	            mov rax, qword [0x0400e28c] 	     10716	option.c	FUNCTION_77	SWITCH_1
0x400e28c	    0x4805c0020000	                          add rax, 0x2c0	     10716	option.c	FUNCTION_77	SWITCH_1
0x400e292	      0xe972040000	                           jmp 0x400e709	     10716	option.c	FUNCTION_77	SWITCH_1
0x400e297	    0x488b05000000	            mov rax, qword [0x0400e29e] 	     10717	option.c	FUNCTION_77	SWITCH_1
0x400e29e	    0x4805c8020000	                          add rax, 0x2c8	     10717	option.c	FUNCTION_77	SWITCH_1
0x400e2a4	      0xe960040000	                           jmp 0x400e709	     10717	option.c	FUNCTION_77	SWITCH_1
0x400e2a9	    0x488b05000000	            mov rax, qword [0x0400e2b0] 	     10718	option.c	FUNCTION_77	SWITCH_1
0x400e2b0	    0x480560160000	                         add rax, 0x1660	     10718	option.c	FUNCTION_77	SWITCH_1
0x400e2b6	      0xe94e040000	                           jmp 0x400e709	     10718	option.c	FUNCTION_77	SWITCH_1
0x400e2bb	    0x488b05000000	            mov rax, qword [0x0400e2c2] 	     10721	option.c	FUNCTION_77	SWITCH_1
0x400e2c2	    0x4805ec130000	                         add rax, 0x13ec	     10721	option.c	FUNCTION_77	SWITCH_1
0x400e2c8	      0xe93c040000	                           jmp 0x400e709	     10721	option.c	FUNCTION_77	SWITCH_1
0x400e2cd	    0x488b05000000	            mov rax, qword [0x0400e2d4] 	     10722	option.c	FUNCTION_77	SWITCH_1
0x400e2d4	    0x480508140000	                         add rax, 0x1408	     10722	option.c	FUNCTION_77	SWITCH_1
0x400e2da	      0xe92a040000	                           jmp 0x400e709	     10722	option.c	FUNCTION_77	SWITCH_1
0x400e2df	    0x488b05000000	            mov rax, qword [0x0400e2e6] 	     10724	option.c	FUNCTION_77	SWITCH_1
0x400e2e6	    0x48050c140000	                         add rax, 0x140c	     10724	option.c	FUNCTION_77	SWITCH_1
0x400e2ec	      0xe918040000	                           jmp 0x400e709	     10724	option.c	FUNCTION_77	SWITCH_1
0x400e2f1	    0x488b05000000	            mov rax, qword [0x0400e2f8] 	     10726	option.c	FUNCTION_77	SWITCH_1
0x400e2f8	    0x480510140000	                         add rax, 0x1410	     10726	option.c	FUNCTION_77	SWITCH_1
0x400e2fe	      0xe906040000	                           jmp 0x400e709	     10726	option.c	FUNCTION_77	SWITCH_1
0x400e303	    0x488b05000000	            mov rax, qword [0x0400e30a] 	     10727	option.c	FUNCTION_77	SWITCH_1
0x400e30a	    0x480518140000	                         add rax, 0x1418	     10727	option.c	FUNCTION_77	SWITCH_1
0x400e310	      0xe9f4030000	                           jmp 0x400e709	     10727	option.c	FUNCTION_77	SWITCH_1
0x400e315	    0x488b05000000	            mov rax, qword [0x0400e31c] 	     10728	option.c	FUNCTION_77	SWITCH_1
0x400e31c	    0x480524140000	                         add rax, 0x1424	     10728	option.c	FUNCTION_77	SWITCH_1
0x400e322	      0xe9e2030000	                           jmp 0x400e709	     10728	option.c	FUNCTION_77	SWITCH_1
0x400e327	    0x488b05000000	            mov rax, qword [0x0400e32e] 	     10729	option.c	FUNCTION_77	SWITCH_1
0x400e32e	    0x480504140000	                         add rax, 0x1404	     10729	option.c	FUNCTION_77	SWITCH_1
0x400e334	      0xe9d0030000	                           jmp 0x400e709	     10729	option.c	FUNCTION_77	SWITCH_1
0x400e339	    0x488b05000000	            mov rax, qword [0x0400e340] 	     10731	option.c	FUNCTION_77	SWITCH_1
0x400e340	    0x480528140000	                         add rax, 0x1428	     10731	option.c	FUNCTION_77	SWITCH_1
0x400e346	      0xe9be030000	                           jmp 0x400e709	     10731	option.c	FUNCTION_77	SWITCH_1
0x400e34b	    0x488b05000000	            mov rax, qword [0x0400e352] 	     10732	option.c	FUNCTION_77	SWITCH_1
0x400e352	    0x480538140000	                         add rax, 0x1438	     10732	option.c	FUNCTION_77	SWITCH_1
0x400e358	      0xe9ac030000	                           jmp 0x400e709	     10732	option.c	FUNCTION_77	SWITCH_1
0x400e35d	    0x488b05000000	            mov rax, qword [0x0400e364] 	     10733	option.c	FUNCTION_77	SWITCH_1
0x400e364	    0x480530140000	                         add rax, 0x1430	     10733	option.c	FUNCTION_77	SWITCH_1
0x400e36a	      0xe99a030000	                           jmp 0x400e709	     10733	option.c	FUNCTION_77	SWITCH_1
0x400e36f	    0x488b05000000	            mov rax, qword [0x0400e376] 	     10736	option.c	FUNCTION_77	SWITCH_1
0x400e376	    0x480540140000	                         add rax, 0x1440	     10736	option.c	FUNCTION_77	SWITCH_1
0x400e37c	      0xe988030000	                           jmp 0x400e709	     10736	option.c	FUNCTION_77	SWITCH_1
0x400e381	    0x488b05000000	            mov rax, qword [0x0400e388] 	     10739	option.c	FUNCTION_77	SWITCH_1
0x400e388	    0x480548140000	                         add rax, 0x1448	     10739	option.c	FUNCTION_77	SWITCH_1
0x400e38e	      0xe976030000	                           jmp 0x400e709	     10739	option.c	FUNCTION_77	SWITCH_1
0x400e393	    0x488b05000000	            mov rax, qword [0x0400e39a] 	     10742	option.c	FUNCTION_77	SWITCH_1
0x400e39a	    0x480550140000	                         add rax, 0x1450	     10742	option.c	FUNCTION_77	SWITCH_1
0x400e3a0	      0xe964030000	                           jmp 0x400e709	     10742	option.c	FUNCTION_77	SWITCH_1
0x400e3a5	    0x488b05000000	            mov rax, qword [0x0400e3ac] 	     10745	option.c	FUNCTION_77	SWITCH_1
0x400e3ac	    0x480558140000	                         add rax, 0x1458	     10745	option.c	FUNCTION_77	SWITCH_1
0x400e3b2	      0xe952030000	                           jmp 0x400e709	     10745	option.c	FUNCTION_77	SWITCH_1
0x400e3b7	    0x488b05000000	            mov rax, qword [0x0400e3be] 	     10748	option.c	FUNCTION_77	SWITCH_1
0x400e3be	    0x480560140000	                         add rax, 0x1460	     10748	option.c	FUNCTION_77	SWITCH_1
0x400e3c4	      0xe940030000	                           jmp 0x400e709	     10748	option.c	FUNCTION_77	SWITCH_1
0x400e3c9	    0x488b05000000	            mov rax, qword [0x0400e3d0] 	     10749	option.c	FUNCTION_77	SWITCH_1
0x400e3d0	    0x480568140000	                         add rax, 0x1468	     10749	option.c	FUNCTION_77	SWITCH_1
0x400e3d6	      0xe92e030000	                           jmp 0x400e709	     10749	option.c	FUNCTION_77	SWITCH_1
0x400e3db	    0x488b05000000	            mov rax, qword [0x0400e3e2] 	     10751	option.c	FUNCTION_77	SWITCH_1
0x400e3e2	    0x480570140000	                         add rax, 0x1470	     10751	option.c	FUNCTION_77	SWITCH_1
0x400e3e8	      0xe91c030000	                           jmp 0x400e709	     10751	option.c	FUNCTION_77	SWITCH_1
0x400e3ed	    0x488b05000000	            mov rax, qword [0x0400e3f4] 	     10752	option.c	FUNCTION_77	SWITCH_1
0x400e3f4	    0x480574140000	                         add rax, 0x1474	     10752	option.c	FUNCTION_77	SWITCH_1
0x400e3fa	      0xe90a030000	                           jmp 0x400e709	     10752	option.c	FUNCTION_77	SWITCH_1
0x400e3ff	    0x488b05000000	            mov rax, qword [0x0400e406] 	     10753	option.c	FUNCTION_77	SWITCH_1
0x400e406	    0x480578140000	                         add rax, 0x1478	     10753	option.c	FUNCTION_77	SWITCH_1
0x400e40c	      0xe9f8020000	                           jmp 0x400e709	     10753	option.c	FUNCTION_77	SWITCH_1
0x400e411	    0x488b05000000	            mov rax, qword [0x0400e418] 	     10755	option.c	FUNCTION_77	SWITCH_1
0x400e418	    0x480588140000	                         add rax, 0x1488	     10755	option.c	FUNCTION_77	SWITCH_1
0x400e41e	      0xe9e6020000	                           jmp 0x400e709	     10755	option.c	FUNCTION_77	SWITCH_1
0x400e423	    0x488b05000000	            mov rax, qword [0x0400e42a] 	     10757	option.c	FUNCTION_77	SWITCH_1
0x400e42a	    0x480590140000	                         add rax, 0x1490	     10757	option.c	FUNCTION_77	SWITCH_1
0x400e430	      0xe9d4020000	                           jmp 0x400e709	     10757	option.c	FUNCTION_77	SWITCH_1
0x400e435	    0x488b05000000	            mov rax, qword [0x0400e43c] 	     10758	option.c	FUNCTION_77	SWITCH_1
0x400e43c	    0x480598140000	                         add rax, 0x1498	     10758	option.c	FUNCTION_77	SWITCH_1
0x400e442	      0xe9c2020000	                           jmp 0x400e709	     10758	option.c	FUNCTION_77	SWITCH_1
0x400e447	    0x488b05000000	            mov rax, qword [0x0400e44e] 	     10759	option.c	FUNCTION_77	SWITCH_1
0x400e44e	    0x4805a0140000	                         add rax, 0x14a0	     10759	option.c	FUNCTION_77	SWITCH_1
0x400e454	      0xe9b0020000	                           jmp 0x400e709	     10759	option.c	FUNCTION_77	SWITCH_1
0x400e459	    0x488b05000000	            mov rax, qword [0x0400e460] 	     10760	option.c	FUNCTION_77	SWITCH_1
0x400e460	    0x4805a8140000	                         add rax, 0x14a8	     10760	option.c	FUNCTION_77	SWITCH_1
0x400e466	      0xe99e020000	                           jmp 0x400e709	     10760	option.c	FUNCTION_77	SWITCH_1
0x400e46b	    0x488b05000000	            mov rax, qword [0x0400e472] 	     10761	option.c	FUNCTION_77	SWITCH_1
0x400e472	    0x480578120000	                         add rax, 0x1278	     10761	option.c	FUNCTION_77	SWITCH_1
0x400e478	      0xe98c020000	                           jmp 0x400e709	     10761	option.c	FUNCTION_77	SWITCH_1
0x400e47d	    0x488b05000000	            mov rax, qword [0x0400e484] 	     10762	option.c	FUNCTION_77	SWITCH_1
0x400e484	    0x480580120000	                         add rax, 0x1280	     10762	option.c	FUNCTION_77	SWITCH_1
0x400e48a	      0xe97a020000	                           jmp 0x400e709	     10762	option.c	FUNCTION_77	SWITCH_1
0x400e48f	    0x488b05000000	            mov rax, qword [0x0400e496] 	     10763	option.c	FUNCTION_77	SWITCH_1
0x400e496	    0x4805b0140000	                         add rax, 0x14b0	     10763	option.c	FUNCTION_77	SWITCH_1
0x400e49c	      0xe968020000	                           jmp 0x400e709	     10763	option.c	FUNCTION_77	SWITCH_1
0x400e4a1	    0x488b05000000	            mov rax, qword [0x0400e4a8] 	     10764	option.c	FUNCTION_77	SWITCH_1
0x400e4a8	    0x4805b8140000	                         add rax, 0x14b8	     10764	option.c	FUNCTION_77	SWITCH_1
0x400e4ae	      0xe956020000	                           jmp 0x400e709	     10764	option.c	FUNCTION_77	SWITCH_1
0x400e4b3	    0x488b05000000	            mov rax, qword [0x0400e4ba] 	     10767	option.c	FUNCTION_77	SWITCH_1
0x400e4ba	    0x4805d0140000	                         add rax, 0x14d0	     10767	option.c	FUNCTION_77	SWITCH_1
0x400e4c0	      0xe944020000	                           jmp 0x400e709	     10767	option.c	FUNCTION_77	SWITCH_1
0x400e4c5	    0x488b05000000	            mov rax, qword [0x0400e4cc] 	     10771	option.c	FUNCTION_77	SWITCH_1
0x400e4cc	    0x4805e0140000	                         add rax, 0x14e0	     10771	option.c	FUNCTION_77	SWITCH_1
0x400e4d2	      0xe932020000	                           jmp 0x400e709	     10771	option.c	FUNCTION_77	SWITCH_1
0x400e4d7	    0x488b05000000	            mov rax, qword [0x0400e4de] 	     10772	option.c	FUNCTION_77	SWITCH_1
0x400e4de	    0x4805f0140000	                         add rax, 0x14f0	     10772	option.c	FUNCTION_77	SWITCH_1
0x400e4e4	      0xe920020000	                           jmp 0x400e709	     10772	option.c	FUNCTION_77	SWITCH_1
0x400e4e9	    0x488b05000000	            mov rax, qword [0x0400e4f0] 	     10775	option.c	FUNCTION_77	SWITCH_1
0x400e4f0	    0x480500150000	                         add rax, 0x1500	     10775	option.c	FUNCTION_77	SWITCH_1
0x400e4f6	      0xe90e020000	                           jmp 0x400e709	     10775	option.c	FUNCTION_77	SWITCH_1
0x400e4fb	    0x488b05000000	            mov rax, qword [0x0400e502] 	     10778	option.c	FUNCTION_77	SWITCH_1
0x400e502	    0x480510150000	                         add rax, 0x1510	     10778	option.c	FUNCTION_77	SWITCH_1
0x400e508	      0xe9fc010000	                           jmp 0x400e709	     10778	option.c	FUNCTION_77	SWITCH_1
0x400e50d	    0x488b05000000	            mov rax, qword [0x0400e514] 	     10781	option.c	FUNCTION_77	SWITCH_1
0x400e514	    0x480520150000	                         add rax, 0x1520	     10781	option.c	FUNCTION_77	SWITCH_1
0x400e51a	      0xe9ea010000	                           jmp 0x400e709	     10781	option.c	FUNCTION_77	SWITCH_1
0x400e51f	    0x488b05000000	            mov rax, qword [0x0400e526] 	     10783	option.c	FUNCTION_77	SWITCH_1
0x400e526	    0x480538150000	                         add rax, 0x1538	     10783	option.c	FUNCTION_77	SWITCH_1
0x400e52c	      0xe9d8010000	                           jmp 0x400e709	     10783	option.c	FUNCTION_77	SWITCH_1
0x400e531	    0x488b05000000	            mov rax, qword [0x0400e538] 	     10784	option.c	FUNCTION_77	SWITCH_1
0x400e538	    0x480530150000	                         add rax, 0x1530	     10784	option.c	FUNCTION_77	SWITCH_1
0x400e53e	      0xe9c6010000	                           jmp 0x400e709	     10784	option.c	FUNCTION_77	SWITCH_1
0x400e543	    0x488b05000000	            mov rax, qword [0x0400e54a] 	     10785	option.c	FUNCTION_77	SWITCH_1
0x400e54a	    0x480540150000	                         add rax, 0x1540	     10785	option.c	FUNCTION_77	SWITCH_1
0x400e550	      0xe9b4010000	                           jmp 0x400e709	     10785	option.c	FUNCTION_77	SWITCH_1
0x400e555	    0x488b05000000	            mov rax, qword [0x0400e55c] 	     10786	option.c	FUNCTION_77	SWITCH_1
0x400e55c	    0x4805c8000000	                           add rax, 0xc8	     10786	option.c	FUNCTION_77	SWITCH_1
0x400e562	      0xe9a2010000	                           jmp 0x400e709	     10786	option.c	FUNCTION_77	SWITCH_1
0x400e567	    0x488b05000000	            mov rax, qword [0x0400e56e] 	     10787	option.c	FUNCTION_77	SWITCH_1
0x400e56e	    0x480548150000	                         add rax, 0x1548	     10787	option.c	FUNCTION_77	SWITCH_1
0x400e574	      0xe990010000	                           jmp 0x400e709	     10787	option.c	FUNCTION_77	SWITCH_1
0x400e579	    0x488b05000000	            mov rax, qword [0x0400e580] 	     10788	option.c	FUNCTION_77	SWITCH_1
0x400e580	    0x480550150000	                         add rax, 0x1550	     10788	option.c	FUNCTION_77	SWITCH_1
0x400e586	      0xe97e010000	                           jmp 0x400e709	     10788	option.c	FUNCTION_77	SWITCH_1
0x400e58b	    0x488b05000000	            mov rax, qword [0x0400e592] 	     10790	option.c	FUNCTION_77	SWITCH_1
0x400e592	    0x480558150000	                         add rax, 0x1558	     10790	option.c	FUNCTION_77	SWITCH_1
0x400e598	      0xe96c010000	                           jmp 0x400e709	     10790	option.c	FUNCTION_77	SWITCH_1
0x400e59d	    0x488b05000000	            mov rax, qword [0x0400e5a4] 	     10792	option.c	FUNCTION_77	SWITCH_1
0x400e5a4	    0x480560150000	                         add rax, 0x1560	     10792	option.c	FUNCTION_77	SWITCH_1
0x400e5aa	      0xe95a010000	                           jmp 0x400e709	     10792	option.c	FUNCTION_77	SWITCH_1
0x400e5af	    0x488b05000000	            mov rax, qword [0x0400e5b6] 	     10794	option.c	FUNCTION_77	SWITCH_1
0x400e5b6	    0x480574150000	                         add rax, 0x1574	     10794	option.c	FUNCTION_77	SWITCH_1
0x400e5bc	      0xe948010000	                           jmp 0x400e709	     10794	option.c	FUNCTION_77	SWITCH_1
0x400e5c1	    0x488b05000000	            mov rax, qword [0x0400e5c8] 	     10796	option.c	FUNCTION_77	SWITCH_1
0x400e5c8	    0x480570150000	                         add rax, 0x1570	     10796	option.c	FUNCTION_77	SWITCH_1
0x400e5ce	      0xe936010000	                           jmp 0x400e709	     10796	option.c	FUNCTION_77	SWITCH_1
0x400e5d3	    0x488b05000000	            mov rax, qword [0x0400e5da] 	     10797	option.c	FUNCTION_77	SWITCH_1
0x400e5da	    0x480578150000	                         add rax, 0x1578	     10797	option.c	FUNCTION_77	SWITCH_1
0x400e5e0	      0xe924010000	                           jmp 0x400e709	     10797	option.c	FUNCTION_77	SWITCH_1
0x400e5e5	    0x488b05000000	            mov rax, qword [0x0400e5ec] 	     10799	option.c	FUNCTION_77	SWITCH_1
0x400e5ec	    0x480588150000	                         add rax, 0x1588	     10799	option.c	FUNCTION_77	SWITCH_1
0x400e5f2	      0xe912010000	                           jmp 0x400e709	     10799	option.c	FUNCTION_77	SWITCH_1
0x400e5f7	    0x488b05000000	            mov rax, qword [0x0400e5fe] 	     10801	option.c	FUNCTION_77	SWITCH_1
0x400e5fe	    0x480590150000	                         add rax, 0x1590	     10801	option.c	FUNCTION_77	SWITCH_1
0x400e604	      0xe900010000	                           jmp 0x400e709	     10801	option.c	FUNCTION_77	SWITCH_1
0x400e609	    0x488b05000000	            mov rax, qword [0x0400e610] 	     10803	option.c	FUNCTION_77	SWITCH_1
0x400e610	    0x480598150000	                         add rax, 0x1598	     10803	option.c	FUNCTION_77	SWITCH_1
0x400e616	      0xe9ee000000	                           jmp 0x400e709	     10803	option.c	FUNCTION_77	SWITCH_1
0x400e61b	    0x488b05000000	            mov rax, qword [0x0400e622] 	     10804	option.c	FUNCTION_77	SWITCH_1
0x400e622	    0x4805a0150000	                         add rax, 0x15a0	     10804	option.c	FUNCTION_77	SWITCH_1
0x400e628	      0xe9dc000000	                           jmp 0x400e709	     10804	option.c	FUNCTION_77	SWITCH_1
0x400e62d	    0x488b05000000	            mov rax, qword [0x0400e634] 	     10807	option.c	FUNCTION_77	SWITCH_1
0x400e634	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10807	option.c	FUNCTION_77	SWITCH_1
0x400e638	    0x480568040000	                          add rax, 0x468	     10807	option.c	FUNCTION_77	SWITCH_1
0x400e63e	      0xe9c6000000	                           jmp 0x400e709	     10807	option.c	FUNCTION_77	SWITCH_1
0x400e643	    0x488b05000000	            mov rax, qword [0x0400e64a] 	     10808	option.c	FUNCTION_77	SWITCH_1
0x400e64a	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10808	option.c	FUNCTION_77	SWITCH_1
0x400e64e	    0x480578040000	                          add rax, 0x478	     10808	option.c	FUNCTION_77	SWITCH_1
0x400e654	      0xe9b0000000	                           jmp 0x400e709	     10808	option.c	FUNCTION_77	SWITCH_1
0x400e659	    0x488b05000000	            mov rax, qword [0x0400e660] 	     10809	option.c	FUNCTION_77	SWITCH_1
0x400e660	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10809	option.c	FUNCTION_77	SWITCH_1
0x400e664	    0x480580040000	                          add rax, 0x480	     10809	option.c	FUNCTION_77	SWITCH_1
0x400e66a	      0xe99a000000	                           jmp 0x400e709	     10809	option.c	FUNCTION_77	SWITCH_1
0x400e66f	    0x488b05000000	            mov rax, qword [0x0400e676] 	     10811	option.c	FUNCTION_77	SWITCH_1
0x400e676	    0x480568150000	                         add rax, 0x1568	     10811	option.c	FUNCTION_77	SWITCH_1
0x400e67c	      0xe988000000	                           jmp 0x400e709	     10811	option.c	FUNCTION_77	SWITCH_1
0x400e681	    0x488b05000000	            mov rax, qword [0x0400e688] 	     10812	option.c	FUNCTION_77	SWITCH_1
0x400e688	    0x4805a8150000	                         add rax, 0x15a8	     10812	option.c	FUNCTION_77	SWITCH_1
0x400e68e	            0xeb79	                           jmp 0x400e709	     10812	option.c	FUNCTION_77	SWITCH_1
0x400e690	    0x488b05000000	            mov rax, qword [0x0400e697] 	     10813	option.c	FUNCTION_77	SWITCH_1
0x400e697	    0x4805b8150000	                         add rax, 0x15b8	     10813	option.c	FUNCTION_77	SWITCH_1
0x400e69d	            0xeb6a	                           jmp 0x400e709	     10813	option.c	FUNCTION_77	SWITCH_1
0x400e69f	    0x488b05000000	            mov rax, qword [0x0400e6a6] 	     10814	option.c	FUNCTION_77	SWITCH_1
0x400e6a6	    0x4805b0150000	                         add rax, 0x15b0	     10814	option.c	FUNCTION_77	SWITCH_1
0x400e6ac	            0xeb5b	                           jmp 0x400e709	     10814	option.c	FUNCTION_77	SWITCH_1
0x400e6ae	    0x488b05000000	            mov rax, qword [0x0400e6b5] 	     10816	option.c	FUNCTION_77	SWITCH_1
0x400e6b5	    0x480550160000	                         add rax, 0x1650	     10816	option.c	FUNCTION_77	SWITCH_1
0x400e6bb	            0xeb4c	                           jmp 0x400e709	     10816	option.c	FUNCTION_77	SWITCH_1
0x400e6bd	    0x488b05000000	            mov rax, qword [0x0400e6c4] 	     10818	option.c	FUNCTION_77	SWITCH_1
0x400e6c4	    0x4805d0150000	                         add rax, 0x15d0	     10818	option.c	FUNCTION_77	SWITCH_1
0x400e6ca	            0xeb3d	                           jmp 0x400e709	     10818	option.c	FUNCTION_77	SWITCH_1
0x400e6cc	    0x488b05000000	            mov rax, qword [0x0400e6d3] 	     10820	option.c	FUNCTION_77	SWITCH_1
0x400e6d3	    0x4805e8150000	                         add rax, 0x15e8	     10820	option.c	FUNCTION_77	SWITCH_1
0x400e6d9	            0xeb2e	                           jmp 0x400e709	     10820	option.c	FUNCTION_77	SWITCH_1
0x400e6db	    0x488b05000000	            mov rax, qword [0x0400e6e2] 	     10823	option.c	FUNCTION_77	SWITCH_1
0x400e6e2	    0x4805b8020000	                          add rax, 0x2b8	     10823	option.c	FUNCTION_77	SWITCH_1
0x400e6e8	            0xeb1f	                           jmp 0x400e709	     10823	option.c	FUNCTION_77	SWITCH_1
0x400e6ea	      0xbf00000000	                              mov edi, 0	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x400e6ef	      0xe800000000	                          call 0x400e6f4	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x400e6f4	          0x4889c7	                            mov rdi, rax	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x400e6f7	      0xe800000000	                          call 0x400e6fc	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x400e6fc	    0x488b05000000	            mov rax, qword [0x0400e703] 	     10828	option.c	FUNCTION_77
0x400e703	    0x4805d0150000	                         add rax, 0x15d0	     10828	option.c	FUNCTION_77
0x400e709	              0xc9	                                   leave	     10829	option.c	FUNCTION_77
0x400e70a	              0xc3	                                     ret	     10829	option.c	FUNCTION_77
check_opt_strings	ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	15
0x4011333	              0x55	                                push rbp	     12338	option.c	FUNCTION_106
0x4011334	          0x4889e5	                            mov rbp, rsp	     12338	option.c	FUNCTION_106
0x4011337	        0x4883ec20	                           sub rsp, 0x20	     12338	option.c	FUNCTION_106
0x401133b	        0x48897df8	                mov qword [rbp - 8], rdi	     12338	option.c	FUNCTION_106
0x401133f	        0x488975f0	             mov qword [rbp - 0x10], rsi	     12338	option.c	FUNCTION_106
0x4011343	          0x8955ec	             mov dword [rbp - 0x14], edx	     12338	option.c	FUNCTION_106
0x4011346	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     12339	option.c	FUNCTION_106	CALL_1
0x4011349	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     12339	option.c	FUNCTION_106	CALL_1
0x401134d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12339	option.c	FUNCTION_106	CALL_1
0x4011351	            0x89d1	                            mov ecx, edx	     12339	option.c	FUNCTION_106	CALL_1
0x4011353	      0xba00000000	                              mov edx, 0	     12339	option.c	FUNCTION_106	CALL_1
0x4011358	          0x4889c7	                            mov rdi, rax	     12339	option.c	FUNCTION_106	CALL_1
0x401135b	      0xe802000000	              call sym.opt_strings_flags	     12339	option.c	FUNCTION_106	CALL_1
0x4011360	              0xc9	                                   leave	     12340	option.c	FUNCTION_106
0x4011361	              0xc3	                                     ret	     12340	option.c	FUNCTION_106
get_encoding_default	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	17
0x400bd20	              0x55	                                push rbp	      9817	option.c	FUNCTION_59
0x400bd21	          0x4889e5	                            mov rbp, rsp	      9817	option.c	FUNCTION_59
0x400bd24	        0x4883ec10	                           sub rsp, 0x10	      9817	option.c	FUNCTION_59
0x400bd28	      0xbf00000000	                              mov edi, 0	      9820	option.c	FUNCTION_59	CALL_1
0x400bd2d	      0xe872f8ffff	                     call sym.findoption	      9820	option.c	FUNCTION_59	CALL_1
0x400bd32	          0x8945fc	                mov dword [rbp - 4], eax	      9820	option.c	FUNCTION_59	CALL_1
0x400bd35	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9821	option.c	FUNCTION_59	IF_1
0x400bd39	            0x7814	                            js 0x400bd4f	      9821	option.c	FUNCTION_59	IF_1
0x400bd3b	          0x8b45fc	                mov eax, dword [rbp - 4]	      9822	option.c	FUNCTION_59	IF_1
0x400bd3e	            0x4898	                                    cdqe	      9822	option.c	FUNCTION_59	IF_1
0x400bd40	        0x48c1e006	                              shl rax, 6	      9822	option.c	FUNCTION_59	IF_1
0x400bd44	    0x480500000000	                              add rax, 0	      9822	option.c	FUNCTION_59	IF_1
0x400bd4a	          0x488b00	                    mov rax, qword [rax]	      9822	option.c	FUNCTION_59	IF_1
0x400bd4d	            0xeb05	                           jmp 0x400bd54	      9822	option.c	FUNCTION_59	IF_1
0x400bd4f	      0xb800000000	                              mov eax, 0	      9823	option.c	FUNCTION_59
0x400bd54	              0xc9	                                   leave	      9824	option.c	FUNCTION_59
0x400bd55	              0xc3	                                     ret	      9824	option.c	FUNCTION_59
int_cmp	ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	12
0x4008503	              0x55	                                push rbp	      7670	option.c	FUNCTION_41
0x4008504	          0x4889e5	                            mov rbp, rsp	      7670	option.c	FUNCTION_41
0x4008507	        0x48897df8	                mov qword [rbp - 8], rdi	      7670	option.c	FUNCTION_41
0x400850b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      7670	option.c	FUNCTION_41
0x400850f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7671	option.c	FUNCTION_41
0x4008513	            0x8b10	                    mov edx, dword [rax]	      7671	option.c	FUNCTION_41
0x4008515	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7671	option.c	FUNCTION_41
0x4008519	            0x8b00	                    mov eax, dword [rax]	      7671	option.c	FUNCTION_41
0x400851b	            0x29c2	                            sub edx, eax	      7671	option.c	FUNCTION_41
0x400851d	            0x89d0	                            mov eax, edx	      7671	option.c	FUNCTION_41
0x400851f	              0x5d	                                 pop rbp	      7672	option.c	FUNCTION_41
0x4008520	              0xc3	                                     ret	      7672	option.c	FUNCTION_41
get_term_code	ELSE,0:IF,3:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	51
0x400bc45	              0x55	                                push rbp	      9786	option.c	FUNCTION_57
0x400bc46	          0x4889e5	                            mov rbp, rsp	      9786	option.c	FUNCTION_57
0x400bc49	        0x4883ec20	                           sub rsp, 0x20	      9786	option.c	FUNCTION_57
0x400bc4d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9786	option.c	FUNCTION_57
0x400bc51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9790	option.c	FUNCTION_57	IF_1
0x400bc55	           0xfb600	                   movzx eax, byte [rax]	      9790	option.c	FUNCTION_57	IF_1
0x400bc58	            0x3c74	                            cmp al, 0x74	      9790	option.c	FUNCTION_57	IF_1
0x400bc5a	            0x752d	                           jne 0x400bc89	      9790	option.c	FUNCTION_57	IF_1
0x400bc5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9790	option.c	FUNCTION_57	IF_1
0x400bc60	        0x4883c001	                              add rax, 1	      9790	option.c	FUNCTION_57	IF_1
0x400bc64	           0xfb600	                   movzx eax, byte [rax]	      9790	option.c	FUNCTION_57	IF_1
0x400bc67	            0x3c5f	                            cmp al, 0x5f	      9790	option.c	FUNCTION_57	IF_1
0x400bc69	            0x751e	                           jne 0x400bc89	      9790	option.c	FUNCTION_57	IF_1
0x400bc6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9791	option.c	FUNCTION_57	IF_1
0x400bc6f	        0x4883c002	                              add rax, 2	      9791	option.c	FUNCTION_57	IF_1
0x400bc73	           0xfb600	                   movzx eax, byte [rax]	      9791	option.c	FUNCTION_57	IF_1
0x400bc76	            0x84c0	                             test al, al	      9790	option.c	FUNCTION_57	IF_1
0x400bc78	            0x740f	                            je 0x400bc89	      9790	option.c	FUNCTION_57	IF_1
0x400bc7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9791	option.c	FUNCTION_57	IF_1
0x400bc7e	        0x4883c003	                              add rax, 3	      9791	option.c	FUNCTION_57	IF_1
0x400bc82	           0xfb600	                   movzx eax, byte [rax]	      9791	option.c	FUNCTION_57	IF_1
0x400bc85	            0x84c0	                             test al, al	      9791	option.c	FUNCTION_57	IF_1
0x400bc87	            0x7507	                           jne 0x400bc90	      9791	option.c	FUNCTION_57	IF_1
0x400bc89	      0xb800000000	                              mov eax, 0	      9792	option.c	FUNCTION_57	IF_1
0x400bc8e	            0xeb58	                           jmp 0x400bce8	      9792	option.c	FUNCTION_57	IF_1
0x400bc90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x400bc94	          0x4889c7	                            mov rdi, rax	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x400bc97	      0xe808f9ffff	                     call sym.findoption	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x400bc9c	          0x8945f4	              mov dword [rbp - 0xc], eax	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x400bc9f	        0x837df400	                cmp dword [rbp - 0xc], 0	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x400bca3	            0x7833	                            js 0x400bcd8	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x400bca5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400bca8	            0x4898	                                    cdqe	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400bcaa	        0x48c1e006	                              shl rax, 6	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400bcae	    0x480500000000	                              add rax, 0	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400bcb4	          0x4889c7	                            mov rdi, rax	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400bcb7	      0xe8b0180000	                       call sym.get_varp	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400bcbc	        0x488945f8	                mov qword [rbp - 8], rax	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400bcc0	      0x48837df800	                  cmp qword [rbp - 8], 0	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x400bcc5	            0x740b	                            je 0x400bcd2	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x400bcc7	        0x488b45f8	                mov rax, qword [rbp - 8]	      9797	option.c	FUNCTION_57	IF_2	IF_3
0x400bccb	          0x488b00	                    mov rax, qword [rax]	      9797	option.c	FUNCTION_57	IF_2	IF_3
0x400bcce	        0x488945f8	                mov qword [rbp - 8], rax	      9797	option.c	FUNCTION_57	IF_2	IF_3
0x400bcd2	        0x488b45f8	                mov rax, qword [rbp - 8]	      9798	option.c	FUNCTION_57	IF_2
0x400bcd6	            0xeb10	                           jmp 0x400bce8	      9798	option.c	FUNCTION_57	IF_2
0x400bcd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9800	option.c	FUNCTION_57	CALL_3
0x400bcdc	        0x4883c002	                              add rax, 2	      9800	option.c	FUNCTION_57	CALL_3
0x400bce0	          0x4889c7	                            mov rdi, rax	      9800	option.c	FUNCTION_57	CALL_3
0x400bce3	      0xe800000000	                          call 0x400bce8	      9800	option.c	FUNCTION_57	CALL_3
0x400bce8	              0xc9	                                   leave	      9801	option.c	FUNCTION_57
0x400bce9	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
check_clipboard_option	ELSE,8:IF,11:SWITCH,0:CALL,12:DO,0:WHILE,0:functions,0:FOR,1	194
0x4008d89	              0x55	                                push rbp	      7948	option.c	FUNCTION_45
0x4008d8a	          0x4889e5	                            mov rbp, rsp	      7948	option.c	FUNCTION_45
0x4008d8d	        0x4883ec30	                           sub rsp, 0x30	      7948	option.c	FUNCTION_45
0x4008d91	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      7949	option.c	FUNCTION_45
0x4008d98	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      7950	option.c	FUNCTION_45
0x4008d9f	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      7951	option.c	FUNCTION_45
0x4008da6	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      7952	option.c	FUNCTION_45
0x4008dad	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7953	option.c	FUNCTION_45
0x4008db4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7954	option.c	FUNCTION_45
0x4008dbc	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7955	option.c	FUNCTION_45
0x4008dc4	    0x488b05000000	            mov rax, qword [0x04008dcb] 	      7958	option.c	FUNCTION_45	FOR_1
0x4008dcb	        0x488945f8	                mov qword [rbp - 8], rax	      7958	option.c	FUNCTION_45	FOR_1
0x4008dcf	      0xe913020000	                           jmp 0x4008fe7	      7958	option.c	FUNCTION_45	FOR_1
0x4008dd4	        0x488b45f8	                mov rax, qword [rbp - 8]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008dd8	      0xba07000000	                              mov edx, 7	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008ddd	      0xbe00000000	                              mov esi, 0	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008de2	          0x4889c7	                            mov rdi, rax	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008de5	      0xe800000000	                          call 0x4008dea	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008dea	            0x85c0	                           test eax, eax	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008dec	            0x752c	                           jne 0x4008e1a	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008dee	        0x488b45f8	                mov rax, qword [rbp - 8]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008df2	        0x4883c007	                              add rax, 7	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008df6	           0xfb600	                   movzx eax, byte [rax]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008df9	            0x3c2c	                            cmp al, 0x2c	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008dfb	            0x740f	                            je 0x4008e0c	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008dfd	        0x488b45f8	                mov rax, qword [rbp - 8]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008e01	        0x4883c007	                              add rax, 7	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008e05	           0xfb600	                   movzx eax, byte [rax]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008e08	            0x84c0	                             test al, al	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008e0a	            0x750e	                           jne 0x4008e1a	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4008e0c	        0x834dd401	                or dword [rbp - 0x2c], 1	      7962	option.c	FUNCTION_45	FOR_1	IF_1
0x4008e10	      0x488345f807	                  add qword [rbp - 8], 7	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x4008e15	      0xe9bd010000	                           jmp 0x4008fd7	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x4008e1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4008e1e	      0xba0b000000	                            mov edx, 0xb	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4008e23	      0xbe00000000	                              mov esi, 0	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4008e28	          0x4889c7	                            mov rdi, rax	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4008e2b	      0xe800000000	                          call 0x4008e30	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4008e30	            0x85c0	                           test eax, eax	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4008e32	            0x752c	                           jne 0x4008e60	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4008e34	        0x488b45f8	                mov rax, qword [rbp - 8]	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e38	        0x4883c00b	                            add rax, 0xb	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e3c	           0xfb600	                   movzx eax, byte [rax]	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e3f	            0x3c2c	                            cmp al, 0x2c	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e41	            0x740f	                            je 0x4008e52	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e43	        0x488b45f8	                mov rax, qword [rbp - 8]	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e47	        0x4883c00b	                            add rax, 0xb	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e4b	           0xfb600	                   movzx eax, byte [rax]	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e4e	            0x84c0	                             test al, al	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e50	            0x750e	                           jne 0x4008e60	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e52	        0x834dd402	                or dword [rbp - 0x2c], 2	      7968	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e56	      0x488345f80b	                add qword [rbp - 8], 0xb	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e5b	      0xe977010000	                           jmp 0x4008fd7	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4008e60	        0x488b45f8	                mov rax, qword [rbp - 8]	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4008e64	      0xba0a000000	                            mov edx, 0xa	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4008e69	      0xbe00000000	                              mov esi, 0	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4008e6e	          0x4889c7	                            mov rdi, rax	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4008e71	      0xe800000000	                          call 0x4008e76	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4008e76	            0x85c0	                           test eax, eax	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4008e78	            0x752f	                           jne 0x4008ea9	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4008e7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e7e	        0x4883c00a	                            add rax, 0xa	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e82	           0xfb600	                   movzx eax, byte [rax]	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e85	            0x3c2c	                            cmp al, 0x2c	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e87	            0x740f	                            je 0x4008e98	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e89	        0x488b45f8	                mov rax, qword [rbp - 8]	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e8d	        0x4883c00a	                            add rax, 0xa	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e91	           0xfb600	                   movzx eax, byte [rax]	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e94	            0x84c0	                             test al, al	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e96	            0x7511	                           jne 0x4008ea9	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e98	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7974	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008e9f	      0x488345f80a	                add qword [rbp - 8], 0xa	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008ea4	      0xe92e010000	                           jmp 0x4008fd7	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4008ea9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4008ead	      0xba0e000000	                            mov edx, 0xe	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4008eb2	      0xbe00000000	                              mov esi, 0	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4008eb7	          0x4889c7	                            mov rdi, rax	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4008eba	      0xe800000000	                          call 0x4008ebf	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4008ebf	            0x85c0	                           test eax, eax	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4008ec1	            0x752f	                           jne 0x4008ef2	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4008ec3	        0x488b45f8	                mov rax, qword [rbp - 8]	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ec7	        0x4883c00e	                            add rax, 0xe	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ecb	           0xfb600	                   movzx eax, byte [rax]	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ece	            0x3c2c	                            cmp al, 0x2c	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ed0	            0x740f	                            je 0x4008ee1	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ed2	        0x488b45f8	                mov rax, qword [rbp - 8]	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ed6	        0x4883c00e	                            add rax, 0xe	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008eda	           0xfb600	                   movzx eax, byte [rax]	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008edd	            0x84c0	                             test al, al	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008edf	            0x7511	                           jne 0x4008ef2	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ee1	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      7980	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ee8	      0x488345f80e	                add qword [rbp - 8], 0xe	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008eed	      0xe9e5000000	                           jmp 0x4008fd7	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4008ef2	        0x488b45f8	                mov rax, qword [rbp - 8]	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4008ef6	      0xba0c000000	                            mov edx, 0xc	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4008efb	      0xbe00000000	                              mov esi, 0	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4008f00	          0x4889c7	                            mov rdi, rax	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4008f03	      0xe800000000	                          call 0x4008f08	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4008f08	            0x85c0	                           test eax, eax	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4008f0a	            0x752f	                           jne 0x4008f3b	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4008f0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f10	        0x4883c00c	                            add rax, 0xc	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f14	           0xfb600	                   movzx eax, byte [rax]	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f17	            0x3c2c	                            cmp al, 0x2c	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f19	            0x740f	                            je 0x4008f2a	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f1f	        0x4883c00c	                            add rax, 0xc	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f23	           0xfb600	                   movzx eax, byte [rax]	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f26	            0x84c0	                             test al, al	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f28	            0x7511	                           jne 0x4008f3b	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f2a	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      7986	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f31	      0x488345f80c	                add qword [rbp - 8], 0xc	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f36	      0xe99c000000	                           jmp 0x4008fd7	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4008f3b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f3f	      0xba04000000	                              mov edx, 4	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f44	      0xbe00000000	                              mov esi, 0	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f49	          0x4889c7	                            mov rdi, rax	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f4c	      0xe800000000	                          call 0x4008f51	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f51	            0x85c0	                           test eax, eax	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f53	            0x752c	                           jne 0x4008f81	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f55	        0x488b45f8	                mov rax, qword [rbp - 8]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f59	        0x4883c004	                              add rax, 4	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f5d	           0xfb600	                   movzx eax, byte [rax]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f60	            0x3c2c	                            cmp al, 0x2c	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f62	            0x740f	                            je 0x4008f73	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f64	        0x488b45f8	                mov rax, qword [rbp - 8]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f68	        0x4883c004	                              add rax, 4	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f6c	           0xfb600	                   movzx eax, byte [rax]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f6f	            0x84c0	                             test al, al	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f71	            0x750e	                           jne 0x4008f81	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4008f73	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      7991	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x4008f7a	      0x488345f804	                  add qword [rbp - 8], 4	      7992	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x4008f7f	            0xeb56	                           jmp 0x4008fd7	      7992	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x4008f81	        0x488b45f8	                mov rax, qword [rbp - 8]	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008f85	      0xba08000000	                              mov edx, 8	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008f8a	      0xbe00000000	                              mov esi, 0	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008f8f	          0x4889c7	                            mov rdi, rax	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008f92	      0xe800000000	                          call 0x4008f97	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008f97	            0x85c0	                           test eax, eax	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008f99	            0x7532	                           jne 0x4008fcd	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008f9b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008fa0	            0x752b	                           jne 0x4008fcd	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4008fa2	      0x488345f808	                  add qword [rbp - 8], 8	      7996	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7
0x4008fa7	        0x488b45f8	                mov rax, qword [rbp - 8]	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4008fab	      0xbe01000000	                              mov esi, 1	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4008fb0	          0x4889c7	                            mov rdi, rax	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4008fb3	      0xe800000000	                          call 0x4008fb8	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4008fb8	        0x488945e8	             mov qword [rbp - 0x18], rax	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4008fbc	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x4008fc1	            0x7535	                           jne 0x4008ff8	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x4008fc3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7999	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x4008fcb	            0xeb2b	                           jmp 0x4008ff8	      8000	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7
0x4008fcd	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      8004	option.c	FUNCTION_45	FOR_1	ELSE_7
0x4008fd5	            0xeb22	                           jmp 0x4008ff9	      8005	option.c	FUNCTION_45	FOR_1	ELSE_7
0x4008fd7	        0x488b45f8	                mov rax, qword [rbp - 8]	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x4008fdb	           0xfb600	                   movzx eax, byte [rax]	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x4008fde	            0x3c2c	                            cmp al, 0x2c	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x4008fe0	            0x7505	                           jne 0x4008fe7	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x4008fe2	      0x488345f801	                  add qword [rbp - 8], 1	      8008	option.c	FUNCTION_45	FOR_1	IF_9
0x4008fe7	        0x488b45f8	                mov rax, qword [rbp - 8]	      7958	option.c	FUNCTION_45	FOR_1
0x4008feb	           0xfb600	                   movzx eax, byte [rax]	      7958	option.c	FUNCTION_45	FOR_1
0x4008fee	            0x84c0	                             test al, al	      7958	option.c	FUNCTION_45	FOR_1
0x4008ff0	     0xf85defdffff	                           jne 0x4008dd4	      7958	option.c	FUNCTION_45	FOR_1
0x4008ff6	            0xeb01	                           jmp 0x4008ff9	      7958	option.c	FUNCTION_45	FOR_1
0x4008ff8	              0x90	                                     nop	      8000	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7
0x4008ff9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8010	option.c	FUNCTION_45	IF_10
0x4008ffe	            0x755d	                           jne 0x400905d	      8010	option.c	FUNCTION_45	IF_10
0x4009000	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      8012	option.c	FUNCTION_45	IF_10
0x4009003	    0x890500000000	            mov dword [0x04009009], eax 	      8012	option.c	FUNCTION_45	IF_10
0x4009009	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      8013	option.c	FUNCTION_45	IF_10
0x400900c	    0x890500000000	            mov dword [0x04009012], eax 	      8013	option.c	FUNCTION_45	IF_10
0x4009012	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      8014	option.c	FUNCTION_45	IF_10
0x4009015	    0x890500000000	            mov dword [0x0400901b], eax 	      8014	option.c	FUNCTION_45	IF_10
0x400901b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8015	option.c	FUNCTION_45	IF_10
0x400901e	    0x890500000000	            mov dword [0x04009024], eax 	      8015	option.c	FUNCTION_45	IF_10
0x4009024	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8016	option.c	FUNCTION_45	IF_10
0x4009027	    0x890500000000	            mov dword [0x0400902d], eax 	      8016	option.c	FUNCTION_45	IF_10
0x400902d	    0x488b05000000	            mov rax, qword [0x04009034] 	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x4009034	          0x4889c7	                            mov rdi, rax	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x4009037	      0xe800000000	                          call 0x400903c	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x400903c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8018	option.c	FUNCTION_45	IF_10
0x4009040	    0x488905000000	            mov qword [0x04009047], rax 	      8018	option.c	FUNCTION_45	IF_10
0x4009047	    0x8b0500000000	            mov eax, dword [0x0400904d] 	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400904d	            0x85c0	                           test eax, eax	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400904f	            0x7418	                            je 0x4009069	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x4009051	      0xe800000000	                          call 0x4009056	      8022	option.c	FUNCTION_45	IF_10	IF_11	CALL_10
0x4009056	      0xe800000000	                          call 0x400905b	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x400905b	            0xeb0c	                           jmp 0x4009069	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x400905d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8028	option.c	FUNCTION_45	CALL_12
0x4009061	          0x4889c7	                            mov rdi, rax	      8028	option.c	FUNCTION_45	CALL_12
0x4009064	      0xe800000000	                          call 0x4009069	      8028	option.c	FUNCTION_45	CALL_12
0x4009069	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8030	option.c	FUNCTION_45
0x400906d	              0xc9	                                   leave	      8031	option.c	FUNCTION_45
0x400906e	              0xc3	                                     ret	      8031	option.c	FUNCTION_45
free_string_option	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	13
0x4004736	              0x55	                                push rbp	      5755	option.c	FUNCTION_30
0x4004737	          0x4889e5	                            mov rbp, rsp	      5755	option.c	FUNCTION_30
0x400473a	        0x4883ec10	                           sub rsp, 0x10	      5755	option.c	FUNCTION_30
0x400473e	        0x48897df8	                mov qword [rbp - 8], rdi	      5755	option.c	FUNCTION_30
0x4004742	    0x488b05000000	            mov rax, qword [0x04004749] 	      5756	option.c	FUNCTION_30	IF_1
0x4004749	        0x483945f8	                cmp qword [rbp - 8], rax	      5756	option.c	FUNCTION_30	IF_1
0x400474d	            0x740c	                            je 0x400475b	      5756	option.c	FUNCTION_30	IF_1
0x400474f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5757	option.c	FUNCTION_30	CALL_1
0x4004753	          0x4889c7	                            mov rdi, rax	      5757	option.c	FUNCTION_30	CALL_1
0x4004756	      0xe800000000	                          call 0x400475b	      5757	option.c	FUNCTION_30	CALL_1
0x400475b	              0x90	                                     nop	      5758	option.c	FUNCTION_30
0x400475c	              0xc9	                                   leave	      5758	option.c	FUNCTION_30
0x400475d	              0xc3	                                     ret	      5758	option.c	FUNCTION_30
istermoption	ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	19
0x400cd71	              0x55	                                push rbp	     10374	option.c	FUNCTION_73
0x400cd72	          0x4889e5	                            mov rbp, rsp	     10374	option.c	FUNCTION_73
0x400cd75	        0x48897df8	                mov qword [rbp - 8], rdi	     10374	option.c	FUNCTION_73
0x400cd79	        0x488b45f8	                mov rax, qword [rbp - 8]	     10375	option.c	FUNCTION_73
0x400cd7d	          0x488b00	                    mov rax, qword [rax]	     10375	option.c	FUNCTION_73
0x400cd80	           0xfb600	                   movzx eax, byte [rax]	     10375	option.c	FUNCTION_73
0x400cd83	            0x3c74	                            cmp al, 0x74	     10375	option.c	FUNCTION_73
0x400cd85	            0x7519	                           jne 0x400cda0	     10375	option.c	FUNCTION_73
0x400cd87	        0x488b45f8	                mov rax, qword [rbp - 8]	     10375	option.c	FUNCTION_73
0x400cd8b	          0x488b00	                    mov rax, qword [rax]	     10375	option.c	FUNCTION_73
0x400cd8e	        0x4883c001	                              add rax, 1	     10375	option.c	FUNCTION_73
0x400cd92	           0xfb600	                   movzx eax, byte [rax]	     10375	option.c	FUNCTION_73
0x400cd95	            0x3c5f	                            cmp al, 0x5f	     10375	option.c	FUNCTION_73
0x400cd97	            0x7507	                           jne 0x400cda0	     10375	option.c	FUNCTION_73
0x400cd99	      0xb801000000	                              mov eax, 1	     10375	option.c	FUNCTION_73
0x400cd9e	            0xeb05	                           jmp 0x400cda5	     10375	option.c	FUNCTION_73
0x400cda0	      0xb800000000	                              mov eax, 0	     10375	option.c	FUNCTION_73
0x400cda5	              0x5d	                                 pop rbp	     10376	option.c	FUNCTION_73
0x400cda6	              0xc3	                                     ret	     10376	option.c	FUNCTION_73
didset_options2	ELSE,0:IF,0:SWITCH,0:CALL,5:DO,0:WHILE,0:functions,0:FOR,0	12
0x4004300	              0x55	                                push rbp	      5612	option.c	FUNCTION_27
0x4004301	          0x4889e5	                            mov rbp, rsp	      5612	option.c	FUNCTION_27
0x4004304	      0xe800000000	                          call 0x4004309	      5614	option.c	FUNCTION_27	CALL_1
0x4004309	      0xe889d10000	                  call sym.check_opt_wim	      5617	option.c	FUNCTION_27	CALL_2
0x400430e	      0xbf00000000	                              mov edi, 0	      5619	option.c	FUNCTION_27	CALL_3
0x4004313	      0xe885450000	               call sym.set_chars_option	      5619	option.c	FUNCTION_27	CALL_3
0x4004318	      0xbf00000000	                              mov edi, 0	      5621	option.c	FUNCTION_27	CALL_4
0x400431d	      0xe87b450000	               call sym.set_chars_option	      5621	option.c	FUNCTION_27	CALL_4
0x4004322	      0xe8624a0000	         call sym.check_clipboard_option	      5625	option.c	FUNCTION_27	CALL_5
0x4004327	              0x90	                                     nop	      5627	option.c	FUNCTION_27
0x4004328	              0x5d	                                 pop rbp	      5627	option.c	FUNCTION_27
0x4004329	              0xc3	                                     ret	      5627	option.c	FUNCTION_27
buf_copy_options	ELSE,2:IF,10:SWITCH,1:CALL,37:DO,0:WHILE,0:functions,0:FOR,0	505
0x400edac	              0x55	                                push rbp	     11046	option.c	FUNCTION_84
0x400edad	          0x4889e5	                            mov rbp, rsp	     11046	option.c	FUNCTION_84
0x400edb0	        0x4883ec30	                           sub rsp, 0x30	     11046	option.c	FUNCTION_84
0x400edb4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     11046	option.c	FUNCTION_84
0x400edb8	          0x8975d4	             mov dword [rbp - 0x2c], esi	     11046	option.c	FUNCTION_84
0x400edbb	    0xc745ec010000	               mov dword [rbp - 0x14], 1	     11047	option.c	FUNCTION_84
0x400edc2	    0x48c745f80000	                  mov qword [rbp - 8], 0	     11048	option.c	FUNCTION_84
0x400edca	    0xc745f0000000	               mov dword [rbp - 0x10], 0	     11050	option.c	FUNCTION_84
0x400edd1	    0x488b05000000	            mov rax, qword [0x0400edd8] 	     11056	option.c	FUNCTION_84	IF_1
0x400edd8	          0x4885c0	                           test rax, rax	     11056	option.c	FUNCTION_84	IF_1
0x400eddb	     0xf845a090000	                            je 0x400f73b	     11056	option.c	FUNCTION_84	IF_1
0x400ede1	    0x488b05000000	            mov rax, qword [0x0400ede8] 	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400ede8	      0xbe53000000	                           mov esi, 0x53	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400eded	          0x4889c7	                            mov rdi, rax	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400edf0	      0xe800000000	                          call 0x400edf5	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400edf5	          0x4885c0	                           test rax, rax	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400edf8	            0x740a	                            je 0x400ee04	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400edfa	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400edfd	          0x83e001	                              and eax, 1	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400ee00	            0x85c0	                           test eax, eax	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400ee02	            0x7538	                           jne 0x400ee3c	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400ee04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400ee08	    0x8b80a8120000	          mov eax, dword [rax + 0x12a8] 	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400ee0e	            0x85c0	                           test eax, eax	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400ee10	            0x7523	                           jne 0x400ee35	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400ee12	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400ee15	          0x83e001	                              and eax, 1	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400ee18	            0x85c0	                           test eax, eax	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400ee1a	            0x7520	                           jne 0x400ee3c	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400ee1c	    0x488b05000000	            mov rax, qword [0x0400ee23] 	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400ee23	      0xbe73000000	                           mov esi, 0x73	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400ee28	          0x4889c7	                            mov rdi, rax	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400ee2b	      0xe800000000	                          call 0x400ee30	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400ee30	          0x4885c0	                           test rax, rax	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400ee33	            0x7407	                            je 0x400ee3c	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400ee35	    0xc745ec000000	               mov dword [rbp - 0x14], 0	     11074	option.c	FUNCTION_84	IF_1	IF_2
0x400ee3c	        0x837dec00	               cmp dword [rbp - 0x14], 0	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400ee40	            0x750e	                           jne 0x400ee50	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400ee42	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400ee45	          0x83e002	                              and eax, 2	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400ee48	            0x85c0	                           test eax, eax	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400ee4a	     0xf84d7080000	                            je 0x400f727	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400ee50	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400ee53	          0x83e004	                              and eax, 4	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400ee56	            0x85c0	                           test eax, eax	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee58	            0x740e	                            je 0x400ee68	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400ee5e	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400ee64	            0x85c0	                           test eax, eax	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400ee66	            0x750e	                           jne 0x400ee76	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400ee68	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee6c	    0x8b80a8120000	          mov eax, dword [rax + 0x12a8] 	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee72	            0x85c0	                           test eax, eax	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee74	            0x7407	                            je 0x400ee7d	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee76	      0xb801000000	                              mov eax, 1	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee7b	            0xeb05	                           jmp 0x400ee82	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee7d	      0xb800000000	                              mov eax, 0	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400ee82	          0x8945f4	              mov dword [rbp - 0xc], eax	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400ee85	        0x837df400	                cmp dword [rbp - 0xc], 0	     11083	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400ee89	            0x741e	                            je 0x400eea9	     11083	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400ee8b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400ee8f	    0x488b80b81400	          mov rax, qword [rax + 0x14b8] 	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400ee96	        0x488945f8	                mov qword [rbp - 8], rax	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400ee9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11086	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400ee9e	    0x48c780b81400	            mov qword [rax + 0x14b8], 0 	     11086	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400eea9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eead	    0x8b80a8120000	          mov eax, dword [rax + 0x12a8] 	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eeb3	            0x85c0	                           test eax, eax	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eeb5	     0xf8526010000	                           jne 0x400efe1	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eebb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400eebf	      0xbe01000000	                              mov esi, 1	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400eec4	          0x4889c7	                            mov rdi, rax	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400eec7	      0xe800000000	                          call 0x400eecc	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400eecc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11095	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eed0	    0xc78060150000	            mov dword [rax + 0x1560], 0 	     11095	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eeda	    0x8b1500000000	            mov edx, dword [0x0400eee0] 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eee0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eee4	    0x8990b0150000	          mov dword [rax + 0x15b0], edx 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400eeea	    0x488b05000000	            mov rax, qword [0x0400eef1] 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400eef1	          0x4889c7	                            mov rdi, rax	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400eef4	      0xe800000000	                          call 0x400eef9	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400eef9	          0x4889c2	                            mov rdx, rax	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400eefc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400ef00	    0x488990881400	          mov qword [rax + 0x1488], rdx 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400ef07	    0x488b05000000	            mov rax, qword [0x0400ef0e] 	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef0e	           0xfb600	                   movzx eax, byte [rax]	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef11	           0xfb6c0	                           movzx eax, al	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef14	          0x83f86d	                           cmp eax, 0x6d	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef17	            0x740c	                            je 0x400ef25	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef19	          0x83f875	                           cmp eax, 0x75	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef1c	            0x743b	                            je 0x400ef59	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef1e	          0x83f864	                           cmp eax, 0x64	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef21	            0x741c	                            je 0x400ef3f	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef23	            0xeb4e	                           jmp 0x400ef73	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400ef25	      0xbf00000000	                              mov edi, 0	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400ef2a	      0xe800000000	                          call 0x400ef2f	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400ef2f	          0x4889c2	                            mov rdx, rax	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400ef32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400ef36	    0x488990901400	          mov qword [rax + 0x1490], rdx 	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400ef3d	            0xeb51	                           jmp 0x400ef90	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400ef3f	      0xbf00000000	                              mov edi, 0	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400ef44	      0xe800000000	                          call 0x400ef49	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400ef49	          0x4889c2	                            mov rdx, rax	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400ef4c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400ef50	    0x488990901400	          mov qword [rax + 0x1490], rdx 	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400ef57	            0xeb37	                           jmp 0x400ef90	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400ef59	      0xbf00000000	                              mov edi, 0	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400ef5e	      0xe800000000	                          call 0x400ef63	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400ef63	          0x4889c2	                            mov rdx, rax	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400ef66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400ef6a	    0x488990901400	          mov qword [rax + 0x1490], rdx 	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400ef71	            0xeb1d	                           jmp 0x400ef90	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400ef73	    0x488b05000000	            mov rax, qword [0x0400ef7a] 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400ef7a	          0x4889c7	                            mov rdi, rax	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400ef7d	      0xe800000000	                          call 0x400ef82	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400ef82	          0x4889c2	                            mov rdx, rax	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400ef85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400ef89	    0x488990901400	          mov qword [rax + 0x1490], rdx 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400ef90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400ef94	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400ef9b	          0x4885c0	                           test rax, rax	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400ef9e	            0x741b	                            je 0x400efbb	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400efa0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400efa4	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400efab	           0xfb600	                   movzx eax, byte [rax]	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400efae	           0xfb6d0	                           movzx edx, al	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400efb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400efb5	    0x899004170000	          mov dword [rax + 0x1704], edx 	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400efbb	    0x488b15000000	            mov rdx, qword [0x0400efc2] 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400efc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400efc6	    0x488990101400	          mov qword [rax + 0x1410], rdx 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400efcd	    0x488b15000000	            mov rdx, qword [0x0400efd4] 	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400efd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400efd8	    0x488990181400	          mov qword [rax + 0x1418], rdx 	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400efdf	            0xeb11	                           jmp 0x400eff2	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400efe1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400efe5	      0xbe00000000	                              mov esi, 0	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400efea	          0x4889c7	                            mov rdi, rax	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400efed	      0xe800000000	                          call 0x400eff2	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400eff2	    0x8b1500000000	            mov edx, dword [0x0400eff8] 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x400eff8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x400effc	    0x8990ec130000	          mov dword [rax + 0x13ec], edx 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x400f002	    0x8b1500000000	            mov edx, dword [0x0400f008] 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x400f008	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x400f00c	    0x8990f0130000	          mov dword [rax + 0x13f0], edx 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x400f012	    0x488b15000000	            mov rdx, qword [0x0400f019] 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400f019	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400f01d	    0x488990681500	          mov qword [rax + 0x1568], rdx 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400f024	    0x488b15000000	            mov rdx, qword [0x0400f02b] 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400f02b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400f02f	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400f036	    0x488b15000000	            mov rdx, qword [0x0400f03d] 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400f03d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400f041	    0x488990c81500	          mov qword [rax + 0x15c8], rdx 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400f048	    0x488b15000000	            mov rdx, qword [0x0400f04f] 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x400f04f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x400f053	    0x488990c01500	          mov qword [rax + 0x15c0], rdx 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x400f05a	    0x488b15000000	            mov rdx, qword [0x0400f061] 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400f061	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400f065	    0x488990d01500	          mov qword [rax + 0x15d0], rdx 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400f06c	    0x488b15000000	            mov rdx, qword [0x0400f073] 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400f073	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400f077	    0x488990e01500	          mov qword [rax + 0x15e0], rdx 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400f07e	    0x488b15000000	            mov rdx, qword [0x0400f085] 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400f085	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400f089	    0x488990d81500	          mov qword [rax + 0x15d8], rdx 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400f090	    0x8b1500000000	            mov edx, dword [0x0400f096] 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x400f096	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x400f09a	    0x899008140000	          mov dword [rax + 0x1408], edx 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x400f0a0	    0x8b1500000000	            mov edx, dword [0x0400f0a6] 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400f0a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400f0aa	    0x89900c140000	          mov dword [rax + 0x140c], edx 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400f0b0	    0x8b1500000000	            mov edx, dword [0x0400f0b6] 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400f0b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400f0ba	    0x899074140000	          mov dword [rax + 0x1474], edx 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400f0c0	    0x8b1500000000	            mov edx, dword [0x0400f0c6] 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400f0c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400f0ca	    0x899078140000	          mov dword [rax + 0x1478], edx 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400f0d0	    0x8b1500000000	            mov edx, dword [0x0400f0d6] 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x400f0d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x400f0da	    0x89907c140000	          mov dword [rax + 0x147c], edx 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x400f0e0	    0x8b1500000000	            mov edx, dword [0x0400f0e6] 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x400f0e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x400f0ea	    0x899080140000	          mov dword [rax + 0x1480], edx 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x400f0f0	    0x8b1500000000	            mov edx, dword [0x0400f0f6] 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x400f0f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x400f0fa	    0x899038150000	          mov dword [rax + 0x1538], edx 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x400f100	    0x8b1500000000	            mov edx, dword [0x0400f106] 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x400f106	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x400f10a	    0x89903c150000	          mov dword [rax + 0x153c], edx 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x400f110	    0x8b1500000000	            mov edx, dword [0x0400f116] 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x400f116	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x400f11a	    0x8990b0140000	          mov dword [rax + 0x14b0], edx 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x400f120	    0x8b0500000000	            mov eax, dword [0x0400f126] 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f126	            0x85c0	                           test eax, eax	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f128	            0x7508	                           jne 0x400f132	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f12a	    0x8b0500000000	            mov eax, dword [0x0400f130] 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f130	            0xeb05	                           jmp 0x400f137	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f132	      0xb800000000	                              mov eax, 0	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f137	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f13b	    0x898290150000	          mov dword [rdx + 0x1590], eax 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400f141	    0x488b05000000	            mov rax, qword [0x0400f148] 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400f148	          0x4889c7	                            mov rdi, rax	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400f14b	      0xe800000000	                          call 0x400f150	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400f150	          0x4889c2	                            mov rdx, rax	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400f153	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400f157	    0x488990581400	          mov qword [rax + 0x1458], rdx 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400f15e	    0x488b05000000	            mov rax, qword [0x0400f165] 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400f165	          0x4889c7	                            mov rdi, rax	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400f168	      0xe800000000	                          call 0x400f16d	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400f16d	          0x4889c2	                            mov rdx, rax	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400f170	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400f174	    0x488990601400	          mov qword [rax + 0x1460], rdx 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400f17b	    0x488b05000000	            mov rax, qword [0x0400f182] 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400f182	          0x4889c7	                            mov rdi, rax	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400f185	      0xe800000000	                          call 0x400f18a	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400f18a	          0x4889c2	                            mov rdx, rax	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400f18d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400f191	    0x488990681400	          mov qword [rax + 0x1468], rdx 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400f198	    0x488b15000000	            mov rdx, qword [0x0400f19f] 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400f19f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400f1a3	    0x488990781500	          mov qword [rax + 0x1578], rdx 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400f1aa	    0x488b15000000	            mov rdx, qword [0x0400f1b1] 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400f1b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400f1b5	    0x488990801500	          mov qword [rax + 0x1580], rdx 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400f1bc	    0x8b1500000000	            mov edx, dword [0x0400f1c2] 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400f1c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400f1c6	    0x899070150000	          mov dword [rax + 0x1570], edx 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400f1cc	    0x488b05000000	            mov rax, qword [0x0400f1d3] 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400f1d3	          0x4889c7	                            mov rdi, rax	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400f1d6	      0xe800000000	                          call 0x400f1db	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400f1db	          0x4889c2	                            mov rdx, rax	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400f1de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400f1e2	    0x488990481400	          mov qword [rax + 0x1448], rdx 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400f1e9	    0x488b05000000	            mov rax, qword [0x0400f1f0] 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400f1f0	          0x4889c7	                            mov rdi, rax	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400f1f3	      0xe800000000	                          call 0x400f1f8	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400f1f8	          0x4889c2	                            mov rdx, rax	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400f1fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400f1ff	    0x488990501400	          mov qword [rax + 0x1450], rdx 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400f206	    0x488b05000000	            mov rax, qword [0x0400f20d] 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400f20d	          0x4889c7	                            mov rdi, rax	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400f210	      0xe800000000	                          call 0x400f215	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400f215	          0x4889c2	                            mov rdx, rax	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400f218	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400f21c	    0x488990a01400	          mov qword [rax + 0x14a0], rdx 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400f223	    0x488b05000000	            mov rax, qword [0x0400f22a] 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400f22a	          0x4889c7	                            mov rdi, rax	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400f22d	      0xe800000000	                          call 0x400f232	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400f232	          0x4889c2	                            mov rdx, rax	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400f235	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400f239	    0x488990a81400	          mov qword [rax + 0x14a8], rdx 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400f240	    0x488b05000000	            mov rax, qword [0x0400f247] 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400f247	          0x4889c7	                            mov rdi, rax	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400f24a	      0xe800000000	                          call 0x400f24f	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400f24f	          0x4889c2	                            mov rdx, rax	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400f252	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400f256	    0x488990481500	          mov qword [rax + 0x1548], rdx 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400f25d	    0x488b05000000	            mov rax, qword [0x0400f264] 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400f264	          0x4889c7	                            mov rdi, rax	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400f267	      0xe800000000	                          call 0x400f26c	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400f26c	          0x4889c2	                            mov rdx, rax	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400f26f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400f273	    0x488990301500	          mov qword [rax + 0x1530], rdx 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400f27a	    0x8b1500000000	            mov edx, dword [0x0400f280] 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x400f280	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x400f284	    0x899074150000	          mov dword [rax + 0x1574], edx 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x400f28a	    0x8b1500000000	            mov edx, dword [0x0400f290] 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x400f290	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x400f294	    0x899004140000	          mov dword [rax + 0x1404], edx 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x400f29a	    0x8b1500000000	            mov edx, dword [0x0400f2a0] 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x400f2a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x400f2a4	    0x899028140000	          mov dword [rax + 0x1428], edx 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x400f2aa	    0x488b05000000	            mov rax, qword [0x0400f2b1] 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400f2b1	          0x4889c7	                            mov rdi, rax	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400f2b4	      0xe800000000	                          call 0x400f2b9	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400f2b9	          0x4889c2	                            mov rdx, rax	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400f2bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400f2c0	    0x488990381400	          mov qword [rax + 0x1438], rdx 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400f2c7	    0x488b05000000	            mov rax, qword [0x0400f2ce] 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400f2ce	          0x4889c7	                            mov rdi, rax	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400f2d1	      0xe800000000	                          call 0x400f2d6	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400f2d6	          0x4889c2	                            mov rdx, rax	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400f2d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400f2dd	    0x488990301400	          mov qword [rax + 0x1430], rdx 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400f2e4	    0x488b15000000	            mov rdx, qword [0x0400f2eb] 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400f2eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400f2ef	    0x488990981400	          mov qword [rax + 0x1498], rdx 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400f2f6	    0x8b1500000000	            mov edx, dword [0x0400f2fc] 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x400f2fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x400f300	    0x899050150000	          mov dword [rax + 0x1550], edx 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x400f306	    0x488b05000000	            mov rax, qword [0x0400f30d] 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400f30d	          0x4889c7	                            mov rdi, rax	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400f310	      0xe800000000	                          call 0x400f315	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400f315	          0x4889c2	                            mov rdx, rax	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400f318	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400f31c	    0x488990401400	          mov qword [rax + 0x1440], rdx 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400f323	    0x8b1500000000	            mov edx, dword [0x0400f329] 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400f329	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400f32d	    0x899020150000	          mov dword [rax + 0x1520], edx 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400f333	    0x488b15000000	            mov rdx, qword [0x0400f33a] 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400f33a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400f33e	    0x488990a01500	          mov qword [rax + 0x15a0], rdx 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400f345	    0x488b15000000	            mov rdx, qword [0x0400f34c] 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400f34c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400f350	    0x488990981500	          mov qword [rax + 0x1598], rdx 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400f357	    0x488b15000000	            mov rdx, qword [0x0400f35e] 	     11182	option.c	FUNCTION_84	IF_1	IF_3
0x400f35e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11182	option.c	FUNCTION_84	IF_1	IF_3
0x400f362	    0x488990181c00	          mov qword [rax + 0x1c18], rdx 	     11182	option.c	FUNCTION_84	IF_1	IF_3
0x400f369	    0x488b05000000	            mov rax, qword [0x0400f370] 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400f370	          0x4889c7	                            mov rdi, rax	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400f373	      0xe800000000	                          call 0x400f378	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400f378	          0x4889c2	                            mov rdx, rax	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400f37b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400f37f	    0x488990d01b00	          mov qword [rax + 0x1bd0], rdx 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400f386	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x400f38a	    0x480568170000	                         add rax, 0x1768	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x400f390	          0x4889c7	                            mov rdi, rax	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x400f393	      0xe8b29dffff	               call sym.compile_cap_prog	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x400f398	    0x488b05000000	            mov rax, qword [0x0400f39f] 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400f39f	          0x4889c7	                            mov rdi, rax	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400f3a2	      0xe800000000	                          call 0x400f3a7	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400f3a7	          0x4889c2	                            mov rdx, rax	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400f3aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400f3ae	    0x488990e01b00	          mov qword [rax + 0x1be0], rdx 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400f3b5	    0x488b05000000	            mov rax, qword [0x0400f3bc] 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400f3bc	          0x4889c7	                            mov rdi, rax	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400f3bf	      0xe800000000	                          call 0x400f3c4	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400f3c4	          0x4889c2	                            mov rdx, rax	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400f3c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400f3cb	    0x488990e81b00	          mov qword [rax + 0x1be8], rdx 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400f3d2	    0x488b05000000	            mov rax, qword [0x0400f3d9] 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400f3d9	          0x4889c7	                            mov rdi, rax	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400f3dc	      0xe800000000	                          call 0x400f3e1	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400f3e1	          0x4889c2	                            mov rdx, rax	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400f3e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400f3e8	    0x488990e01400	          mov qword [rax + 0x14e0], rdx 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400f3ef	    0x488b05000000	            mov rax, qword [0x0400f3f6] 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400f3f6	          0x4889c7	                            mov rdi, rax	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400f3f9	      0xe800000000	                          call 0x400f3fe	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400f3fe	          0x4889c2	                            mov rdx, rax	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400f401	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400f405	    0x488990f01400	          mov qword [rax + 0x14f0], rdx 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400f40c	    0x488b15000000	            mov rdx, qword [0x0400f413] 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x400f413	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x400f417	    0x488990f81400	          mov qword [rax + 0x14f8], rdx 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x400f41e	    0x488b05000000	            mov rax, qword [0x0400f425] 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400f425	          0x4889c7	                            mov rdi, rax	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400f428	      0xe800000000	                          call 0x400f42d	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400f42d	          0x4889c2	                            mov rdx, rax	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400f430	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400f434	    0x488990001500	          mov qword [rax + 0x1500], rdx 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400f43b	    0x488b05000000	            mov rax, qword [0x0400f442] 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400f442	          0x4889c7	                            mov rdi, rax	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400f445	      0xe800000000	                          call 0x400f44a	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400f44a	          0x4889c2	                            mov rdx, rax	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400f44d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400f451	    0x488990101500	          mov qword [rax + 0x1510], rdx 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400f458	    0x488b05000000	            mov rax, qword [0x0400f45f] 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400f45f	          0x4889c7	                            mov rdi, rax	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400f462	      0xe800000000	                          call 0x400f467	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400f467	          0x4889c2	                            mov rdx, rax	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400f46a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400f46e	    0x488990881500	          mov qword [rax + 0x1588], rdx 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400f475	    0x488b05000000	            mov rax, qword [0x0400f47c] 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400f47c	          0x4889c7	                            mov rdi, rax	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400f47f	      0xe800000000	                          call 0x400f484	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400f484	          0x4889c2	                            mov rdx, rax	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400f487	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400f48b	    0x488990e81500	          mov qword [rax + 0x15e8], rdx 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400f492	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400f496	     0xfb780881200	         movzx eax, word [rax + 0x1288] 	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400f49d	          0x83c801	                               or eax, 1	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400f4a0	            0x89c2	                            mov edx, eax	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400f4a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400f4a6	    0x668990881200	            mov word [rax + 0x1288], dx 	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400f4ad	    0x488b15000000	            mov rdx, qword [0x0400f4b4] 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400f4b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400f4b8	    0x488990601600	          mov qword [rax + 0x1660], rdx 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400f4bf	    0x488b15000000	            mov rdx, qword [0x0400f4c6] 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400f4c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400f4ca	    0x488990781200	          mov qword [rax + 0x1278], rdx 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400f4d1	    0x488b15000000	            mov rdx, qword [0x0400f4d8] 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400f4d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400f4dc	    0x488990801200	          mov qword [rax + 0x1280], rdx 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400f4e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11218	option.c	FUNCTION_84	IF_1	IF_3
0x400f4e7	    0xc78018160000	   mov dword [rax + 0x1618], 0xffffffff 	     11218	option.c	FUNCTION_84	IF_1	IF_3
0x400f4f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11219	option.c	FUNCTION_84	IF_1	IF_3
0x400f4f5	    0x48c780481600	mov qword [rax + 0x1648], 0xfffffffffffe1dc0 	     11219	option.c	FUNCTION_84	IF_1	IF_3
0x400f500	    0x488b15000000	            mov rdx, qword [0x0400f507] 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400f507	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400f50b	    0x488990f81300	          mov qword [rax + 0x13f8], rdx 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400f512	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11221	option.c	FUNCTION_84	IF_1	IF_3
0x400f516	    0xc78000140000	            mov dword [rax + 0x1400], 0 	     11221	option.c	FUNCTION_84	IF_1	IF_3
0x400f520	    0x488b15000000	            mov rdx, qword [0x0400f527] 	     11223	option.c	FUNCTION_84	IF_1	IF_3
0x400f527	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11223	option.c	FUNCTION_84	IF_1	IF_3
0x400f52b	    0x488990f01500	          mov qword [rax + 0x15f0], rdx 	     11223	option.c	FUNCTION_84	IF_1	IF_3
0x400f532	    0x488b15000000	            mov rdx, qword [0x0400f539] 	     11224	option.c	FUNCTION_84	IF_1	IF_3
0x400f539	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11224	option.c	FUNCTION_84	IF_1	IF_3
0x400f53d	    0x488990f81500	          mov qword [rax + 0x15f8], rdx 	     11224	option.c	FUNCTION_84	IF_1	IF_3
0x400f544	    0x488b15000000	            mov rdx, qword [0x0400f54b] 	     11225	option.c	FUNCTION_84	IF_1	IF_3
0x400f54b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11225	option.c	FUNCTION_84	IF_1	IF_3
0x400f54f	    0x488990001600	          mov qword [rax + 0x1600], rdx 	     11225	option.c	FUNCTION_84	IF_1	IF_3
0x400f556	    0x488b15000000	            mov rdx, qword [0x0400f55d] 	     11227	option.c	FUNCTION_84	IF_1	IF_3
0x400f55d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11227	option.c	FUNCTION_84	IF_1	IF_3
0x400f561	    0x488990081600	          mov qword [rax + 0x1608], rdx 	     11227	option.c	FUNCTION_84	IF_1	IF_3
0x400f568	    0x488b15000000	            mov rdx, qword [0x0400f56f] 	     11228	option.c	FUNCTION_84	IF_1	IF_3
0x400f56f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11228	option.c	FUNCTION_84	IF_1	IF_3
0x400f573	    0x488990181500	          mov qword [rax + 0x1518], rdx 	     11228	option.c	FUNCTION_84	IF_1	IF_3
0x400f57a	    0x488b15000000	            mov rdx, qword [0x0400f581] 	     11229	option.c	FUNCTION_84	IF_1	IF_3
0x400f581	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11229	option.c	FUNCTION_84	IF_1	IF_3
0x400f585	    0x488990101600	          mov qword [rax + 0x1610], rdx 	     11229	option.c	FUNCTION_84	IF_1	IF_3
0x400f58c	    0x488b15000000	            mov rdx, qword [0x0400f593] 	     11230	option.c	FUNCTION_84	IF_1	IF_3
0x400f593	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11230	option.c	FUNCTION_84	IF_1	IF_3
0x400f597	    0x488990201600	          mov qword [rax + 0x1620], rdx 	     11230	option.c	FUNCTION_84	IF_1	IF_3
0x400f59e	    0x488b15000000	            mov rdx, qword [0x0400f5a5] 	     11231	option.c	FUNCTION_84	IF_1	IF_3
0x400f5a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11231	option.c	FUNCTION_84	IF_1	IF_3
0x400f5a9	    0x488990281600	          mov qword [rax + 0x1628], rdx 	     11231	option.c	FUNCTION_84	IF_1	IF_3
0x400f5b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11232	option.c	FUNCTION_84	IF_1	IF_3
0x400f5b4	    0xc78030160000	            mov dword [rax + 0x1630], 0 	     11232	option.c	FUNCTION_84	IF_1	IF_3
0x400f5be	    0x488b15000000	            mov rdx, qword [0x0400f5c5] 	     11234	option.c	FUNCTION_84	IF_1	IF_3
0x400f5c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11234	option.c	FUNCTION_84	IF_1	IF_3
0x400f5c9	    0x488990c01400	          mov qword [rax + 0x14c0], rdx 	     11234	option.c	FUNCTION_84	IF_1	IF_3
0x400f5d0	    0x488b15000000	            mov rdx, qword [0x0400f5d7] 	     11235	option.c	FUNCTION_84	IF_1	IF_3
0x400f5d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11235	option.c	FUNCTION_84	IF_1	IF_3
0x400f5db	    0x488990c81400	          mov qword [rax + 0x14c8], rdx 	     11235	option.c	FUNCTION_84	IF_1	IF_3
0x400f5e2	    0x488b05000000	            mov rax, qword [0x0400f5e9] 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400f5e9	          0x4889c7	                            mov rdi, rax	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400f5ec	      0xe800000000	                          call 0x400f5f1	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400f5f1	          0x4889c2	                            mov rdx, rax	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400f5f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400f5f8	    0x488990d01400	          mov qword [rax + 0x14d0], rdx 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400f5ff	    0x488b15000000	            mov rdx, qword [0x0400f606] 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x400f606	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x400f60a	    0x488990381600	          mov qword [rax + 0x1638], rdx 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x400f611	    0x488b15000000	            mov rdx, qword [0x0400f618] 	     11242	option.c	FUNCTION_84	IF_1	IF_3
0x400f618	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11242	option.c	FUNCTION_84	IF_1	IF_3
0x400f61c	    0x488990401600	          mov qword [rax + 0x1640], rdx 	     11242	option.c	FUNCTION_84	IF_1	IF_3
0x400f623	    0x488b05000000	            mov rax, qword [0x0400f62a] 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400f62a	          0x4889c7	                            mov rdi, rax	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400f62d	      0xe800000000	                          call 0x400f632	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400f632	          0x4889c2	                            mov rdx, rax	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400f635	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400f639	    0x488990581500	          mov qword [rax + 0x1558], rdx 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400f640	    0x488b15000000	            mov rdx, qword [0x0400f647] 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400f647	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400f64b	    0x488990381700	          mov qword [rax + 0x1738], rdx 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400f652	    0x488b15000000	            mov rdx, qword [0x0400f659] 	     11251	option.c	FUNCTION_84	IF_1	IF_3
0x400f659	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11251	option.c	FUNCTION_84	IF_1	IF_3
0x400f65d	    0x488990481700	          mov qword [rax + 0x1748], rdx 	     11251	option.c	FUNCTION_84	IF_1	IF_3
0x400f664	    0x8b1500000000	            mov edx, dword [0x0400f66a] 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x400f66a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x400f66e	    0x899050160000	          mov dword [rax + 0x1650], edx 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x400f674	    0x488b15000000	            mov rdx, qword [0x0400f67b] 	     11257	option.c	FUNCTION_84	IF_1	IF_3
0x400f67b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11257	option.c	FUNCTION_84	IF_1	IF_3
0x400f67f	    0x488990581600	          mov qword [rax + 0x1658], rdx 	     11257	option.c	FUNCTION_84	IF_1	IF_3
0x400f686	    0x488b15000000	            mov rdx, qword [0x0400f68d] 	     11260	option.c	FUNCTION_84	IF_1	IF_3
0x400f68d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11260	option.c	FUNCTION_84	IF_1	IF_3
0x400f691	    0x488990281500	          mov qword [rax + 0x1528], rdx 	     11260	option.c	FUNCTION_84	IF_1	IF_3
0x400f698	        0x837df400	                cmp dword [rbp - 0xc], 0	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400f69c	            0x7411	                            je 0x400f6af	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400f69e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11270	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400f6a2	        0x488b55f8	                mov rdx, qword [rbp - 8]	     11270	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400f6a6	    0x488990b81400	          mov qword [rax + 0x14b8], rdx 	     11270	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400f6ad	            0xeb78	                           jmp 0x400f727	     11270	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400f6af	    0x488b05000000	            mov rax, qword [0x0400f6b6] 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400f6b6	          0x4889c7	                            mov rdi, rax	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400f6b9	      0xe800000000	                          call 0x400f6be	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400f6be	          0x4889c2	                            mov rdx, rax	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400f6c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400f6c5	    0x488990b81400	          mov qword [rax + 0x14b8], rdx 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400f6cc	    0xc745f0010000	               mov dword [rbp - 0x10], 1	     11274	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f6d3	    0x488b15000000	            mov rdx, qword [0x0400f6da] 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f6da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f6de	    0x488990a81500	          mov qword [rax + 0x15a8], rdx 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f6e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11276	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f6e9	    0xc78058170000	            mov dword [rax + 0x1758], 0 	     11276	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f6f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400f6f7	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400f6fe	           0xfb600	                   movzx eax, byte [rax]	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400f701	            0x3c68	                            cmp al, 0x68	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400f703	            0x7512	                           jne 0x400f717	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400f705	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11278	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_35
0x400f709	    0x480518140000	                         add rax, 0x1418	     11278	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_35
0x400f70f	          0x4889c7	                            mov rdi, rax	     11278	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_35
0x400f712	      0xe800000000	                          call 0x400f717	     11278	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_35
0x400f717	    0x8b1500000000	            mov edx, dword [0x0400f71d] 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f71d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f721	    0x899040150000	          mov dword [rax + 0x1540], edx 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400f727	        0x837dec00	               cmp dword [rbp - 0x14], 0	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400f72b	            0x740e	                            je 0x400f73b	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400f72d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11288	option.c	FUNCTION_84	IF_1	IF_9
0x400f731	    0xc780a8120000	            mov dword [rax + 0x12a8], 1 	     11288	option.c	FUNCTION_84	IF_1	IF_9
0x400f73b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11291	option.c	FUNCTION_84	CALL_36
0x400f73f	          0x4889c7	                            mov rdi, rax	     11291	option.c	FUNCTION_84	CALL_36
0x400f742	      0xe800000000	                          call 0x400f747	     11291	option.c	FUNCTION_84	CALL_36
0x400f747	        0x837df000	               cmp dword [rbp - 0x10], 0	     11292	option.c	FUNCTION_84	IF_10
0x400f74b	            0x7411	                            je 0x400f75e	     11292	option.c	FUNCTION_84	IF_10
0x400f74d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11293	option.c	FUNCTION_84	CALL_37
0x400f751	      0xbe00000000	                              mov esi, 0	     11293	option.c	FUNCTION_84	CALL_37
0x400f756	          0x4889c7	                            mov rdi, rax	     11293	option.c	FUNCTION_84	CALL_37
0x400f759	      0xe800000000	                          call 0x400f75e	     11293	option.c	FUNCTION_84	CALL_37
0x400f75e	              0x90	                                     nop	     11294	option.c	FUNCTION_84
0x400f75f	              0xc9	                                   leave	     11294	option.c	FUNCTION_84
0x400f760	              0xc3	                                     ret	     11294	option.c	FUNCTION_84
clear_string_option	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	19
0x400475e	              0x55	                                push rbp	      5762	option.c	FUNCTION_31
0x400475f	          0x4889e5	                            mov rbp, rsp	      5762	option.c	FUNCTION_31
0x4004762	        0x4883ec10	                           sub rsp, 0x10	      5762	option.c	FUNCTION_31
0x4004766	        0x48897df8	                mov qword [rbp - 8], rdi	      5762	option.c	FUNCTION_31
0x400476a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5763	option.c	FUNCTION_31	IF_1
0x400476e	          0x488b10	                    mov rdx, qword [rax]	      5763	option.c	FUNCTION_31	IF_1
0x4004771	    0x488b05000000	            mov rax, qword [0x04004778] 	      5763	option.c	FUNCTION_31	IF_1
0x4004778	          0x4839c2	                            cmp rdx, rax	      5763	option.c	FUNCTION_31	IF_1
0x400477b	            0x740f	                            je 0x400478c	      5763	option.c	FUNCTION_31	IF_1
0x400477d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5764	option.c	FUNCTION_31	CALL_1
0x4004781	          0x488b00	                    mov rax, qword [rax]	      5764	option.c	FUNCTION_31	CALL_1
0x4004784	          0x4889c7	                            mov rdi, rax	      5764	option.c	FUNCTION_31	CALL_1
0x4004787	      0xe800000000	                          call 0x400478c	      5764	option.c	FUNCTION_31	CALL_1
0x400478c	    0x488b15000000	            mov rdx, qword [0x04004793] 	      5765	option.c	FUNCTION_31
0x4004793	        0x488b45f8	                mov rax, qword [rbp - 8]	      5765	option.c	FUNCTION_31
0x4004797	          0x488910	                    mov qword [rax], rdx	      5765	option.c	FUNCTION_31
0x400479a	              0x90	                                     nop	      5766	option.c	FUNCTION_31
0x400479b	              0xc9	                                   leave	      5766	option.c	FUNCTION_31
0x400479c	              0xc3	                                     ret	      5766	option.c	FUNCTION_31
put_setnum	ELSE,1:IF,5:SWITCH,0:CALL,6:DO,0:WHILE,0:functions,0:FOR,0	66
0x400c9aa	              0x55	                                push rbp	     10238	option.c	FUNCTION_67
0x400c9ab	          0x4889e5	                            mov rbp, rsp	     10238	option.c	FUNCTION_67
0x400c9ae	        0x4883ec30	                           sub rsp, 0x30	     10238	option.c	FUNCTION_67
0x400c9b2	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10238	option.c	FUNCTION_67
0x400c9b6	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10238	option.c	FUNCTION_67
0x400c9ba	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10238	option.c	FUNCTION_67
0x400c9be	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10238	option.c	FUNCTION_67
0x400c9c2	    0x64488b042528	                mov rax, qword fs:[0x28]	     10238	option.c	FUNCTION_67
0x400c9cb	        0x488945f8	                mov qword [rbp - 8], rax	     10238	option.c	FUNCTION_67
0x400c9cf	            0x31c0	                            xor eax, eax	     10238	option.c	FUNCTION_67
0x400c9d1	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9d5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9dd	      0xbe00000000	                              mov esi, 0	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9e2	          0x4889c7	                            mov rdi, rax	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9e5	      0xb800000000	                              mov eax, 0	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9ea	      0xe800000000	                          call 0x400c9ef	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9ef	            0x85c0	                           test eax, eax	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9f1	            0x790a	                           jns 0x400c9fd	     10241	option.c	FUNCTION_67	IF_1	CALL_1
0x400c9f3	      0xb800000000	                              mov eax, 0	     10242	option.c	FUNCTION_67	IF_1
0x400c9f8	      0xe988000000	                           jmp 0x400ca85	     10242	option.c	FUNCTION_67	IF_1
0x400c9fd	        0x488d55f0	                   lea rdx, [rbp - 0x10]	     10243	option.c	FUNCTION_67	IF_2	CALL_2
0x400ca01	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10243	option.c	FUNCTION_67	IF_2	CALL_2
0x400ca05	          0x4889d6	                            mov rsi, rdx	     10243	option.c	FUNCTION_67	IF_2	CALL_2
0x400ca08	          0x4889c7	                            mov rdi, rax	     10243	option.c	FUNCTION_67	IF_2	CALL_2
0x400ca0b	      0xe8f83c0000	                 call sym.wc_use_keyname	     10243	option.c	FUNCTION_67	IF_2	CALL_2
0x400ca10	            0x85c0	                           test eax, eax	     10243	option.c	FUNCTION_67	IF_2	CALL_2
0x400ca12	            0x742d	                            je 0x400ca41	     10243	option.c	FUNCTION_67	IF_2	CALL_2
0x400ca14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca18	      0xbe00000000	                              mov esi, 0	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca1d	            0x89c7	                            mov edi, eax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca1f	      0xe800000000	                          call 0x400ca24	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca24	          0x4889c2	                            mov rdx, rax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca2b	          0x4889c6	                            mov rsi, rax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca2e	          0x4889d7	                            mov rdi, rdx	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca31	      0xe800000000	                          call 0x400ca36	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca36	            0x85c0	                           test eax, eax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca38	            0x792f	                           jns 0x400ca69	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_4
0x400ca3a	      0xb800000000	                              mov eax, 0	     10247	option.c	FUNCTION_67	IF_2	IF_3
0x400ca3f	            0xeb44	                           jmp 0x400ca85	     10247	option.c	FUNCTION_67	IF_2	IF_3
0x400ca41	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca45	          0x488b10	                    mov rdx, qword [rax]	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca4c	      0xbe00000000	                              mov esi, 0	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca51	          0x4889c7	                            mov rdi, rax	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca54	      0xb800000000	                              mov eax, 0	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca59	      0xe800000000	                          call 0x400ca5e	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca5e	            0x85c0	                           test eax, eax	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca60	            0x7907	                           jns 0x400ca69	     10249	option.c	FUNCTION_67	ELSE_1	IF_4	CALL_5
0x400ca62	      0xb800000000	                              mov eax, 0	     10250	option.c	FUNCTION_67	ELSE_1	IF_4
0x400ca67	            0xeb1c	                           jmp 0x400ca85	     10250	option.c	FUNCTION_67	ELSE_1	IF_4
0x400ca69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10251	option.c	FUNCTION_67	IF_5	CALL_6
0x400ca6d	          0x4889c7	                            mov rdi, rax	     10251	option.c	FUNCTION_67	IF_5	CALL_6
0x400ca70	      0xe800000000	                          call 0x400ca75	     10251	option.c	FUNCTION_67	IF_5	CALL_6
0x400ca75	            0x85c0	                           test eax, eax	     10251	option.c	FUNCTION_67	IF_5	CALL_6
0x400ca77	            0x7907	                           jns 0x400ca80	     10251	option.c	FUNCTION_67	IF_5	CALL_6
0x400ca79	      0xb800000000	                              mov eax, 0	     10252	option.c	FUNCTION_67	IF_5
0x400ca7e	            0xeb05	                           jmp 0x400ca85	     10252	option.c	FUNCTION_67	IF_5
0x400ca80	      0xb801000000	                              mov eax, 1	     10253	option.c	FUNCTION_67
0x400ca85	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10254	option.c	FUNCTION_67
0x400ca89	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10254	option.c	FUNCTION_67
0x400ca92	            0x7405	                            je 0x400ca99	     10254	option.c	FUNCTION_67
0x400ca94	      0xe800000000	                          call 0x400ca99	     10254	option.c	FUNCTION_67
0x400ca99	              0xc9	                                   leave	     10254	option.c	FUNCTION_67
0x400ca9a	              0xc3	                                     ret	     10254	option.c	FUNCTION_67
check_options	ELSE,0:IF,1:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,1	39
0x400432a	              0x55	                                push rbp	      5634	option.c	FUNCTION_28
0x400432b	          0x4889e5	                            mov rbp, rsp	      5634	option.c	FUNCTION_28
0x400432e	        0x4883ec10	                           sub rsp, 0x10	      5634	option.c	FUNCTION_28
0x4004332	    0xc745fc000000	                  mov dword [rbp - 4], 0	      5637	option.c	FUNCTION_28	FOR_1
0x4004339	            0xeb54	                           jmp 0x400438f	      5637	option.c	FUNCTION_28	FOR_1
0x400433b	          0x8b45fc	                mov eax, dword [rbp - 4]	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x400433e	            0x4898	                                    cdqe	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004340	        0x48c1e006	                              shl rax, 6	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004344	    0x480500000000	                              add rax, 0	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x400434a	          0x488b00	                    mov rax, qword [rax]	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x400434d	          0x83e004	                              and eax, 4	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004350	          0x4885c0	                           test rax, rax	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004353	            0x7436	                            je 0x400438b	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004355	          0x8b45fc	                mov eax, dword [rbp - 4]	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004358	            0x4898	                                    cdqe	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x400435a	        0x48c1e006	                              shl rax, 6	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x400435e	    0x480500000000	                              add rax, 0	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004364	          0x488b00	                    mov rax, qword [rax]	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4004367	          0x4885c0	                           test rax, rax	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x400436a	            0x741f	                            je 0x400438b	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x400436c	          0x8b45fc	                mov eax, dword [rbp - 4]	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x400436f	            0x4898	                                    cdqe	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x4004371	        0x48c1e006	                              shl rax, 6	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x4004375	    0x480500000000	                              add rax, 0	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x400437b	          0x4889c7	                            mov rdi, rax	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x400437e	      0xe8e9910000	                       call sym.get_varp	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x4004383	          0x4889c7	                            mov rdi, rax	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x4004386	      0xe812040000	            call sym.check_string_option	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x400438b	        0x8345fc01	                  add dword [rbp - 4], 1	      5637	option.c	FUNCTION_28	FOR_1
0x400438f	          0x8b45fc	                mov eax, dword [rbp - 4]	      5637	option.c	FUNCTION_28	FOR_1
0x4004392	            0x4898	                                    cdqe	      5637	option.c	FUNCTION_28	FOR_1
0x4004394	        0x48c1e006	                              shl rax, 6	      5637	option.c	FUNCTION_28	FOR_1
0x4004398	    0x480500000000	                              add rax, 0	      5637	option.c	FUNCTION_28	FOR_1
0x400439e	          0x488b00	                    mov rax, qword [rax]	      5637	option.c	FUNCTION_28	FOR_1
0x40043a1	          0x4885c0	                           test rax, rax	      5637	option.c	FUNCTION_28	FOR_1
0x40043a4	            0x7595	                           jne 0x400433b	      5637	option.c	FUNCTION_28	FOR_1
0x40043a6	              0x90	                                     nop	      5640	option.c	FUNCTION_28
0x40043a7	              0xc9	                                   leave	      5640	option.c	FUNCTION_28
0x40043a8	              0xc3	                                     ret	      5640	option.c	FUNCTION_28
check_win_options	ELSE,0:IF,0:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	15
0x400eb7f	              0x55	                                push rbp	     10950	option.c	FUNCTION_81
0x400eb80	          0x4889e5	                            mov rbp, rsp	     10950	option.c	FUNCTION_81
0x400eb83	        0x4883ec10	                           sub rsp, 0x10	     10950	option.c	FUNCTION_81
0x400eb87	        0x48897df8	                mov qword [rbp - 8], rdi	     10950	option.c	FUNCTION_81
0x400eb8b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10951	option.c	FUNCTION_81	CALL_1
0x400eb8f	    0x4805b0010000	                          add rax, 0x1b0	     10951	option.c	FUNCTION_81	CALL_1
0x400eb95	          0x4889c7	                            mov rdi, rax	     10951	option.c	FUNCTION_81	CALL_1
0x400eb98	      0xe815000000	                   call sym.check_winopt	     10951	option.c	FUNCTION_81	CALL_1
0x400eb9d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10952	option.c	FUNCTION_81	CALL_2
0x400eba1	    0x480568030000	                          add rax, 0x368	     10952	option.c	FUNCTION_81	CALL_2
0x400eba7	          0x4889c7	                            mov rdi, rax	     10952	option.c	FUNCTION_81	CALL_2
0x400ebaa	      0xe803000000	                   call sym.check_winopt	     10952	option.c	FUNCTION_81	CALL_2
0x400ebaf	              0x90	                                     nop	     10953	option.c	FUNCTION_81
0x400ebb0	              0xc9	                                   leave	     10953	option.c	FUNCTION_81
0x400ebb1	              0xc3	                                     ret	     10953	option.c	FUNCTION_81
free_one_termoption	ELSE,0:IF,2:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,1	39
0x400cc08	              0x55	                                push rbp	     10327	option.c	FUNCTION_71
0x400cc09	          0x4889e5	                            mov rbp, rsp	     10327	option.c	FUNCTION_71
0x400cc0c	        0x4883ec20	                           sub rsp, 0x20	     10327	option.c	FUNCTION_71
0x400cc10	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10327	option.c	FUNCTION_71
0x400cc14	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10330	option.c	FUNCTION_71	FOR_1
0x400cc1c	            0xeb61	                           jmp 0x400cc7f	     10330	option.c	FUNCTION_71	FOR_1
0x400cc1e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc22	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc26	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc2a	            0x754e	                           jne 0x400cc7a	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc2c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x400cc30	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x400cc34	          0x83e008	                              and eax, 8	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x400cc37	          0x4885c0	                           test rax, rax	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x400cc3a	            0x7413	                            je 0x400cc4f	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x400cc3c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400cc40	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400cc44	          0x488b00	                    mov rax, qword [rax]	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400cc47	          0x4889c7	                            mov rdi, rax	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400cc4a	      0xe800000000	                          call 0x400cc4f	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400cc4f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc53	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc57	    0x488b15000000	            mov rdx, qword [0x0400cc5e] 	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc5e	          0x488910	                    mov qword [rax], rdx	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc61	        0x488b45f8	                mov rax, qword [rbp - 8]	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc65	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc69	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc6d	          0x4889c2	                            mov rdx, rax	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc70	        0x488b45f8	                mov rax, qword [rbp - 8]	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc74	        0x48895010	             mov qword [rax + 0x10], rdx	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc78	            0xeb11	                           jmp 0x400cc8b	     10337	option.c	FUNCTION_71	FOR_1	IF_1
0x400cc7a	      0x488345f840	               add qword [rbp - 8], 0x40	     10330	option.c	FUNCTION_71	FOR_1
0x400cc7f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10330	option.c	FUNCTION_71	FOR_1
0x400cc83	          0x488b00	                    mov rax, qword [rax]	     10330	option.c	FUNCTION_71	FOR_1
0x400cc86	          0x4885c0	                           test rax, rax	     10330	option.c	FUNCTION_71	FOR_1
0x400cc89	            0x7593	                           jne 0x400cc1e	     10330	option.c	FUNCTION_71	FOR_1
0x400cc8b	              0x90	                                     nop	     10339	option.c	FUNCTION_71
0x400cc8c	              0xc9	                                   leave	     10339	option.c	FUNCTION_71
0x400cc8d	              0xc3	                                     ret	     10339	option.c	FUNCTION_71
optval_default	ELSE,0:IF,3:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	68
0x400c133	              0x55	                                push rbp	      9969	option.c	FUNCTION_62
0x400c134	          0x4889e5	                            mov rbp, rsp	      9969	option.c	FUNCTION_62
0x400c137	        0x4883ec20	                           sub rsp, 0x20	      9969	option.c	FUNCTION_62
0x400c13b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9969	option.c	FUNCTION_62
0x400c13f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9969	option.c	FUNCTION_62
0x400c143	      0x48837de000	               cmp qword [rbp - 0x20], 0	      9972	option.c	FUNCTION_62	IF_1
0x400c148	            0x750a	                           jne 0x400c154	      9972	option.c	FUNCTION_62	IF_1
0x400c14a	      0xb801000000	                              mov eax, 1	      9973	option.c	FUNCTION_62	IF_1
0x400c14f	      0xe9c0000000	                           jmp 0x400c214	      9973	option.c	FUNCTION_62	IF_1
0x400c154	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9974	option.c	FUNCTION_62
0x400c158	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9974	option.c	FUNCTION_62
0x400c15c	      0x2500040000	                          and eax, 0x400	      9974	option.c	FUNCTION_62
0x400c161	          0x4885c0	                           test rax, rax	      9974	option.c	FUNCTION_62
0x400c164	            0x7511	                           jne 0x400c177	      9974	option.c	FUNCTION_62
0x400c166	    0x8b0500000000	            mov eax, dword [0x0400c16c] 	      9974	option.c	FUNCTION_62
0x400c16c	            0x85c0	                           test eax, eax	      9974	option.c	FUNCTION_62
0x400c16e	            0x7507	                           jne 0x400c177	      9974	option.c	FUNCTION_62
0x400c170	      0xb801000000	                              mov eax, 1	      9974	option.c	FUNCTION_62
0x400c175	            0xeb05	                           jmp 0x400c17c	      9974	option.c	FUNCTION_62
0x400c177	      0xb800000000	                              mov eax, 0	      9974	option.c	FUNCTION_62
0x400c17c	          0x8945fc	                mov dword [rbp - 4], eax	      9974	option.c	FUNCTION_62
0x400c17f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9975	option.c	FUNCTION_62	IF_2
0x400c183	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9975	option.c	FUNCTION_62	IF_2
0x400c187	          0x83e002	                              and eax, 2	      9975	option.c	FUNCTION_62	IF_2
0x400c18a	          0x4885c0	                           test rax, rax	      9975	option.c	FUNCTION_62	IF_2
0x400c18d	            0x7425	                            je 0x400c1b4	      9975	option.c	FUNCTION_62	IF_2
0x400c18f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9976	option.c	FUNCTION_62	IF_2
0x400c193	          0x488b10	                    mov rdx, qword [rax]	      9976	option.c	FUNCTION_62	IF_2
0x400c196	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9976	option.c	FUNCTION_62	IF_2
0x400c19a	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9976	option.c	FUNCTION_62	IF_2
0x400c19d	          0x4863c9	                         movsxd rcx, ecx	      9976	option.c	FUNCTION_62	IF_2
0x400c1a0	        0x4883c104	                              add rcx, 4	      9976	option.c	FUNCTION_62	IF_2
0x400c1a4	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      9976	option.c	FUNCTION_62	IF_2
0x400c1a9	          0x4839c2	                            cmp rdx, rax	      9976	option.c	FUNCTION_62	IF_2
0x400c1ac	           0xf94c0	                                 sete al	      9976	option.c	FUNCTION_62	IF_2
0x400c1af	           0xfb6c0	                           movzx eax, al	      9976	option.c	FUNCTION_62	IF_2
0x400c1b2	            0xeb60	                           jmp 0x400c214	      9976	option.c	FUNCTION_62	IF_2
0x400c1b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9977	option.c	FUNCTION_62	IF_3
0x400c1b8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9977	option.c	FUNCTION_62	IF_3
0x400c1bc	          0x83e001	                              and eax, 1	      9977	option.c	FUNCTION_62	IF_3
0x400c1bf	          0x4885c0	                           test rax, rax	      9977	option.c	FUNCTION_62	IF_3
0x400c1c2	            0x7423	                            je 0x400c1e7	      9977	option.c	FUNCTION_62	IF_3
0x400c1c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9980	option.c	FUNCTION_62	IF_3
0x400c1c8	            0x8b10	                    mov edx, dword [rax]	      9980	option.c	FUNCTION_62	IF_3
0x400c1ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9980	option.c	FUNCTION_62	IF_3
0x400c1ce	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9980	option.c	FUNCTION_62	IF_3
0x400c1d1	          0x4863c9	                         movsxd rcx, ecx	      9980	option.c	FUNCTION_62	IF_3
0x400c1d4	        0x4883c104	                              add rcx, 4	      9980	option.c	FUNCTION_62	IF_3
0x400c1d8	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      9980	option.c	FUNCTION_62	IF_3
0x400c1dd	            0x39c2	                            cmp edx, eax	      9980	option.c	FUNCTION_62	IF_3
0x400c1df	           0xf94c0	                                 sete al	      9980	option.c	FUNCTION_62	IF_3
0x400c1e2	           0xfb6c0	                           movzx eax, al	      9980	option.c	FUNCTION_62	IF_3
0x400c1e5	            0xeb2d	                           jmp 0x400c214	      9980	option.c	FUNCTION_62	IF_3
0x400c1e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9982	option.c	FUNCTION_62	CALL_1
0x400c1eb	          0x8b55fc	                mov edx, dword [rbp - 4]	      9982	option.c	FUNCTION_62	CALL_1
0x400c1ee	          0x4863d2	                         movsxd rdx, edx	      9982	option.c	FUNCTION_62	CALL_1
0x400c1f1	        0x4883c204	                              add rdx, 4	      9982	option.c	FUNCTION_62	CALL_1
0x400c1f5	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      9982	option.c	FUNCTION_62	CALL_1
0x400c1fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9982	option.c	FUNCTION_62	CALL_1
0x400c1fe	          0x488b00	                    mov rax, qword [rax]	      9982	option.c	FUNCTION_62	CALL_1
0x400c201	          0x4889d6	                            mov rsi, rdx	      9982	option.c	FUNCTION_62	CALL_1
0x400c204	          0x4889c7	                            mov rdi, rax	      9982	option.c	FUNCTION_62	CALL_1
0x400c207	      0xe800000000	                          call 0x400c20c	      9982	option.c	FUNCTION_62	CALL_1
0x400c20c	            0x85c0	                           test eax, eax	      9982	option.c	FUNCTION_62	CALL_1
0x400c20e	           0xf94c0	                                 sete al	      9982	option.c	FUNCTION_62	CALL_1
0x400c211	           0xfb6c0	                           movzx eax, al	      9982	option.c	FUNCTION_62	CALL_1
0x400c214	              0xc9	                                   leave	      9983	option.c	FUNCTION_62
0x400c215	              0xc3	                                     ret	      9983	option.c	FUNCTION_62
set_helplang_default	ELSE,1:IF,5:SWITCH,0:CALL,8:DO,0:WHILE,0:functions,0:FOR,0	115
0x40011fb	              0x55	                                push rbp	      4222	option.c	FUNCTION_11
0x40011fc	          0x4889e5	                            mov rbp, rsp	      4222	option.c	FUNCTION_11
0x40011ff	        0x4883ec20	                           sub rsp, 0x20	      4222	option.c	FUNCTION_11
0x4001203	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4222	option.c	FUNCTION_11
0x4001207	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x400120c	     0xf84b7010000	                            je 0x40013c9	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4001212	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4001216	          0x4889c7	                            mov rdi, rax	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4001219	      0xe800000000	                          call 0x400121e	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x400121e	        0x4883f801	                              cmp rax, 1	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4001222	     0xf86a1010000	                           jbe 0x40013c9	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4001228	      0xbf00000000	                              mov edi, 0	      4227	option.c	FUNCTION_11	CALL_2
0x400122d	      0xe872a30000	                     call sym.findoption	      4227	option.c	FUNCTION_11	CALL_2
0x4001232	          0x8945fc	                mov dword [rbp - 4], eax	      4227	option.c	FUNCTION_11	CALL_2
0x4001235	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4228	option.c	FUNCTION_11	IF_2
0x4001239	     0xf888b010000	                            js 0x40013ca	      4228	option.c	FUNCTION_11	IF_2
0x400123f	          0x8b45fc	                mov eax, dword [rbp - 4]	      4228	option.c	FUNCTION_11	IF_2
0x4001242	            0x4898	                                    cdqe	      4228	option.c	FUNCTION_11	IF_2
0x4001244	        0x48c1e006	                              shl rax, 6	      4228	option.c	FUNCTION_11	IF_2
0x4001248	    0x480500000000	                              add rax, 0	      4228	option.c	FUNCTION_11	IF_2
0x400124e	          0x488b00	                    mov rax, qword [rax]	      4228	option.c	FUNCTION_11	IF_2
0x4001251	      0x2500010000	                          and eax, 0x100	      4228	option.c	FUNCTION_11	IF_2
0x4001256	          0x4885c0	                           test rax, rax	      4228	option.c	FUNCTION_11	IF_2
0x4001259	     0xf856b010000	                           jne 0x40013ca	      4228	option.c	FUNCTION_11	IF_2
0x400125f	          0x8b45fc	                mov eax, dword [rbp - 4]	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4001262	            0x4898	                                    cdqe	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4001264	        0x48c1e006	                              shl rax, 6	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4001268	    0x480500000000	                              add rax, 0	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x400126e	          0x488b00	                    mov rax, qword [rax]	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4001271	          0x83e008	                              and eax, 8	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4001274	          0x4885c0	                           test rax, rax	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4001277	            0x740f	                            je 0x4001288	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4001279	    0x488b05000000	            mov rax, qword [0x04001280] 	      4231	option.c	FUNCTION_11	IF_2	CALL_3
0x4001280	          0x4889c7	                            mov rdi, rax	      4231	option.c	FUNCTION_11	IF_2	CALL_3
0x4001283	      0xe800000000	                          call 0x4001288	      4231	option.c	FUNCTION_11	IF_2	CALL_3
0x4001288	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x400128c	          0x4889c7	                            mov rdi, rax	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x400128f	      0xe800000000	                          call 0x4001294	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x4001294	    0x488905000000	            mov qword [0x0400129b], rax 	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x400129b	    0x488b05000000	            mov rax, qword [0x040012a2] 	      4233	option.c	FUNCTION_11	IF_2	IF_4
0x40012a2	          0x4885c0	                           test rax, rax	      4233	option.c	FUNCTION_11	IF_2	IF_4
0x40012a5	            0x7513	                           jne 0x40012ba	      4233	option.c	FUNCTION_11	IF_2	IF_4
0x40012a7	    0x488b05000000	            mov rax, qword [0x040012ae] 	      4234	option.c	FUNCTION_11	IF_2	IF_4
0x40012ae	    0x488905000000	            mov qword [0x040012b5], rax 	      4234	option.c	FUNCTION_11	IF_2	IF_4
0x40012b5	      0xe9e2000000	                           jmp 0x400139c	      4234	option.c	FUNCTION_11	IF_2	IF_4
0x40012ba	    0x488b05000000	            mov rax, qword [0x040012c1] 	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012c1	      0xba03000000	                              mov edx, 3	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012c6	      0xbe00000000	                              mov esi, 0	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012cb	          0x4889c7	                            mov rdi, rax	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012ce	      0xe800000000	                          call 0x40012d3	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012d3	            0x85c0	                           test eax, eax	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012d5	     0xf85b3000000	                           jne 0x400138e	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012db	    0x488b05000000	            mov rax, qword [0x040012e2] 	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012e2	          0x4889c7	                            mov rdi, rax	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012e5	      0xe800000000	                          call 0x40012ea	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012ea	        0x4883f804	                              cmp rax, 4	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012ee	     0xf869a000000	                           jbe 0x400138e	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x40012f4	    0x488b15000000	            mov rdx, qword [0x040012fb] 	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x40012fb	    0x488b05000000	            mov rax, qword [0x04001302] 	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001302	        0x4883c003	                              add rax, 3	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001306	           0xfb600	                   movzx eax, byte [rax]	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001309	            0x3c40	                            cmp al, 0x40	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400130b	            0x7612	                           jbe 0x400131f	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400130d	    0x488b05000000	            mov rax, qword [0x04001314] 	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001314	        0x4883c003	                              add rax, 3	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001318	           0xfb600	                   movzx eax, byte [rax]	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400131b	            0x3c5a	                            cmp al, 0x5a	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400131d	            0x760d	                           jbe 0x400132c	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400131f	    0x488b05000000	            mov rax, qword [0x04001326] 	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001326	         0xfb64003	               movzx eax, byte [rax + 3]	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400132a	            0xeb11	                           jmp 0x400133d	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400132c	    0x488b05000000	            mov rax, qword [0x04001333] 	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001333	        0x4883c003	                              add rax, 3	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4001337	           0xfb600	                   movzx eax, byte [rax]	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400133a	          0x83c020	                           add eax, 0x20	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400133d	            0x8802	                      mov byte [rdx], al	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x400133f	    0x488b05000000	            mov rax, qword [0x04001346] 	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001346	        0x488d5001	                      lea rdx, [rax + 1]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400134a	    0x488b05000000	            mov rax, qword [0x04001351] 	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001351	        0x4883c004	                              add rax, 4	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001355	           0xfb600	                   movzx eax, byte [rax]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001358	            0x3c40	                            cmp al, 0x40	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400135a	            0x7612	                           jbe 0x400136e	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400135c	    0x488b05000000	            mov rax, qword [0x04001363] 	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001363	        0x4883c004	                              add rax, 4	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001367	           0xfb600	                   movzx eax, byte [rax]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400136a	            0x3c5a	                            cmp al, 0x5a	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400136c	            0x760d	                           jbe 0x400137b	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400136e	    0x488b05000000	            mov rax, qword [0x04001375] 	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001375	         0xfb64004	               movzx eax, byte [rax + 4]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001379	            0xeb11	                           jmp 0x400138c	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400137b	    0x488b05000000	            mov rax, qword [0x04001382] 	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001382	        0x4883c004	                              add rax, 4	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001386	           0xfb600	                   movzx eax, byte [rax]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4001389	          0x83c020	                           add eax, 0x20	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400138c	            0x8802	                      mov byte [rdx], al	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x400138e	    0x488b05000000	            mov rax, qword [0x04001395] 	      4243	option.c	FUNCTION_11	IF_2	ELSE_1
0x4001395	        0x4883c002	                              add rax, 2	      4243	option.c	FUNCTION_11	IF_2	ELSE_1
0x4001399	          0xc60000	                       mov byte [rax], 0	      4243	option.c	FUNCTION_11	IF_2	ELSE_1
0x400139c	          0x8b45fc	                mov eax, dword [rbp - 4]	      4245	option.c	FUNCTION_11	IF_2
0x400139f	            0x4898	                                    cdqe	      4245	option.c	FUNCTION_11	IF_2
0x40013a1	        0x48c1e006	                              shl rax, 6	      4245	option.c	FUNCTION_11	IF_2
0x40013a5	    0x480500000000	                              add rax, 0	      4245	option.c	FUNCTION_11	IF_2
0x40013ab	          0x488b00	                    mov rax, qword [rax]	      4245	option.c	FUNCTION_11	IF_2
0x40013ae	        0x4883c808	                               or rax, 8	      4245	option.c	FUNCTION_11	IF_2
0x40013b2	          0x4889c2	                            mov rdx, rax	      4245	option.c	FUNCTION_11	IF_2
0x40013b5	          0x8b45fc	                mov eax, dword [rbp - 4]	      4245	option.c	FUNCTION_11	IF_2
0x40013b8	            0x4898	                                    cdqe	      4245	option.c	FUNCTION_11	IF_2
0x40013ba	        0x48c1e006	                              shl rax, 6	      4245	option.c	FUNCTION_11	IF_2
0x40013be	    0x480500000000	                              add rax, 0	      4245	option.c	FUNCTION_11	IF_2
0x40013c4	          0x488910	                    mov qword [rax], rdx	      4245	option.c	FUNCTION_11	IF_2
0x40013c7	            0xeb01	                           jmp 0x40013ca	      4245	option.c	FUNCTION_11	IF_2
0x40013c9	              0x90	                                     nop	      4226	option.c	FUNCTION_11	IF_1
0x40013ca	              0xc9	                                   leave	      4247	option.c	FUNCTION_11
0x40013cb	              0xc3	                                     ret	      4247	option.c	FUNCTION_11
set_num_option	ELSE,36:IF,99:SWITCH,0:CALL,53:DO,0:WHILE,0:functions,0:FOR,0	881
0x400a2b9	              0x55	                                push rbp	      8764	option.c	FUNCTION_50
0x400a2ba	          0x4889e5	                            mov rbp, rsp	      8764	option.c	FUNCTION_50
0x400a2bd	              0x53	                                push rbx	      8764	option.c	FUNCTION_50
0x400a2be	    0x4881ecb80000	                           sub rsp, 0xb8	      8764	option.c	FUNCTION_50
0x400a2c5	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	      8764	option.c	FUNCTION_50
0x400a2cb	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      8764	option.c	FUNCTION_50
0x400a2d2	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      8764	option.c	FUNCTION_50
0x400a2d9	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      8764	option.c	FUNCTION_50
0x400a2e0	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	      8764	option.c	FUNCTION_50
0x400a2e7	    0x44898d68ffff	             mov dword [rbp - 0x98], r9d	      8764	option.c	FUNCTION_50
0x400a2ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      8764	option.c	FUNCTION_50
0x400a2f7	        0x488945e8	             mov qword [rbp - 0x18], rax	      8764	option.c	FUNCTION_50
0x400a2fb	            0x31c0	                            xor eax, eax	      8764	option.c	FUNCTION_50
0x400a2fd	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8765	option.c	FUNCTION_50
0x400a308	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8766	option.c	FUNCTION_50
0x400a30f	          0x488b00	                    mov rax, qword [rax]	      8766	option.c	FUNCTION_50
0x400a312	        0x48894590	             mov qword [rbp - 0x70], rax	      8766	option.c	FUNCTION_50
0x400a316	    0x488b05000000	            mov rax, qword [0x0400a31d] 	      8767	option.c	FUNCTION_50
0x400a31d	        0x48894598	             mov qword [rbp - 0x68], rax	      8767	option.c	FUNCTION_50
0x400a321	    0x488b05000000	            mov rax, qword [0x0400a328] 	      8768	option.c	FUNCTION_50
0x400a328	        0x488945a0	             mov qword [rbp - 0x60], rax	      8768	option.c	FUNCTION_50
0x400a32c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8769	option.c	FUNCTION_50
0x400a333	        0x488945a8	             mov qword [rbp - 0x58], rax	      8769	option.c	FUNCTION_50
0x400a337	    0x8b0500000000	            mov eax, dword [0x0400a33d] 	      8772	option.c	FUNCTION_50	IF_1
0x400a33d	            0x85c0	                           test eax, eax	      8772	option.c	FUNCTION_50	IF_1
0x400a33f	            0x750a	                           jne 0x400a34b	      8772	option.c	FUNCTION_50	IF_1
0x400a341	    0x8b0500000000	            mov eax, dword [0x0400a347] 	      8774	option.c	FUNCTION_50	IF_1
0x400a347	            0x85c0	                           test eax, eax	      8774	option.c	FUNCTION_50	IF_1
0x400a349	            0x7429	                            je 0x400a374	      8774	option.c	FUNCTION_50	IF_1
0x400a34b	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8776	option.c	FUNCTION_50	IF_1
0x400a351	            0x4898	                                    cdqe	      8776	option.c	FUNCTION_50	IF_1
0x400a353	        0x48c1e006	                              shl rax, 6	      8776	option.c	FUNCTION_50	IF_1
0x400a357	    0x480500000000	                              add rax, 0	      8776	option.c	FUNCTION_50	IF_1
0x400a35d	          0x488b00	                    mov rax, qword [rax]	      8776	option.c	FUNCTION_50	IF_1
0x400a360	      0x2500000800	                        and eax, 0x80000	      8776	option.c	FUNCTION_50	IF_1
0x400a365	          0x4885c0	                           test rax, rax	      8776	option.c	FUNCTION_50	IF_1
0x400a368	            0x740a	                            je 0x400a374	      8776	option.c	FUNCTION_50	IF_1
0x400a36a	      0xb800000000	                              mov eax, 0	      8777	option.c	FUNCTION_50	IF_1
0x400a36f	      0xe933110000	                           jmp 0x400b4a7	      8777	option.c	FUNCTION_50	IF_1
0x400a374	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8779	option.c	FUNCTION_50
0x400a378	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      8779	option.c	FUNCTION_50
0x400a37f	          0x488910	                    mov qword [rax], rdx	      8779	option.c	FUNCTION_50
0x400a382	    0x8b1500000000	            mov edx, dword [0x0400a388] 	      8782	option.c	FUNCTION_50	CALL_1
0x400a388	    0x8b8d68ffffff	             mov ecx, dword [rbp - 0x98]	      8782	option.c	FUNCTION_50	CALL_1
0x400a38e	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8782	option.c	FUNCTION_50	CALL_1
0x400a394	            0x89ce	                            mov esi, ecx	      8782	option.c	FUNCTION_50	CALL_1
0x400a396	            0x89c7	                            mov edi, eax	      8782	option.c	FUNCTION_50	CALL_1
0x400a398	      0xe872eeffff	        call sym.set_option_scriptID_idx	      8782	option.c	FUNCTION_50	CALL_1
0x400a39d	    0xc70500000000	               mov dword [0x0400a3a7], 1	      8785	option.c	FUNCTION_50
0x400a3a7	    0x488b05000000	            mov rax, qword [0x0400a3ae] 	      8788	option.c	FUNCTION_50	IF_2
0x400a3ae	    0x488b80681500	          mov rax, qword [rax + 0x1568] 	      8788	option.c	FUNCTION_50	IF_2
0x400a3b5	          0x4885c0	                           test rax, rax	      8788	option.c	FUNCTION_50	IF_2
0x400a3b8	            0x7927	                           jns 0x400a3e1	      8788	option.c	FUNCTION_50	IF_2
0x400a3ba	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8790	option.c	FUNCTION_50	IF_2
0x400a3c5	    0x488b05000000	            mov rax, qword [0x0400a3cc] 	      8791	option.c	FUNCTION_50	IF_2
0x400a3cc	    0x488b15000000	            mov rdx, qword [0x0400a3d3] 	      8791	option.c	FUNCTION_50	IF_2
0x400a3d3	    0x488b92a81500	          mov rdx, qword [rdx + 0x15a8] 	      8791	option.c	FUNCTION_50	IF_2
0x400a3da	    0x488990681500	          mov qword [rax + 0x1568], rdx 	      8791	option.c	FUNCTION_50	IF_2
0x400a3e1	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8797	option.c	FUNCTION_50	IF_3
0x400a3e9	            0x740e	                            je 0x400a3f9	      8797	option.c	FUNCTION_50	IF_3
0x400a3eb	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8797	option.c	FUNCTION_50	IF_3
0x400a3f3	     0xf8511010000	                           jne 0x400a50a	      8797	option.c	FUNCTION_50	IF_3
0x400a3f9	    0x488b05000000	            mov rax, qword [0x0400a400] 	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x400a400	          0x4885c0	                           test rax, rax	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x400a403	            0x7f16	                            jg 0x400a41b	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x400a405	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x400a410	    0x48c705000000	               mov qword [0x0400a41b], 1	      8802	option.c	FUNCTION_50	IF_3	IF_4
0x400a41b	    0x488b15000000	            mov rdx, qword [0x0400a422] 	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x400a422	    0x488b05000000	            mov rax, qword [0x0400a429] 	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x400a429	          0x4839c2	                            cmp rdx, rax	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x400a42c	            0x7e19	                           jle 0x400a447	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x400a42e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8806	option.c	FUNCTION_50	IF_3	IF_5
0x400a439	    0x488b05000000	            mov rax, qword [0x0400a440] 	      8807	option.c	FUNCTION_50	IF_3	IF_5
0x400a440	    0x488905000000	            mov qword [0x0400a447], rax 	      8807	option.c	FUNCTION_50	IF_3	IF_5
0x400a447	    0x488b05000000	            mov rax, qword [0x0400a44e] 	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x400a44e	          0x4885c0	                           test rax, rax	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x400a451	            0x7916	                           jns 0x400a469	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x400a453	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x400a45e	    0x48c705000000	               mov qword [0x0400a469], 0	      8812	option.c	FUNCTION_50	IF_3	IF_6
0x400a469	    0x488b15000000	            mov rdx, qword [0x0400a470] 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x400a470	    0x488b05000000	            mov rax, qword [0x0400a477] 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x400a477	          0x4839c2	                            cmp rdx, rax	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x400a47a	     0xf8476090000	                            je 0x400adf6	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x400a480	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a488	            0x752a	                           jne 0x400a4b4	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a48a	    0x488b05000000	            mov rax, qword [0x0400a491] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a491	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a497	          0x4863d0	                         movsxd rdx, eax	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a49a	    0x488b05000000	            mov rax, qword [0x0400a4a1] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a4a1	          0x4839c2	                            cmp rdx, rax	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a4a4	            0x7d0e	                           jge 0x400a4b4	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x400a4a6	    0x488b05000000	            mov rax, qword [0x0400a4ad] 	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x400a4ad	            0x89c7	                            mov edi, eax	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x400a4af	      0xe800000000	                          call 0x400a4b4	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x400a4b4	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4bc	     0xf8534090000	                           jne 0x400adf6	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4c2	    0x488b05000000	            mov rax, qword [0x0400a4c9] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4c9	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4cf	            0x85c0	                           test eax, eax	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4d1	     0xf841f090000	                            je 0x400adf6	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4d7	    0x488b05000000	            mov rax, qword [0x0400a4de] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4de	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4e4	          0x4863d0	                         movsxd rdx, eax	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4e7	    0x488b05000000	            mov rax, qword [0x0400a4ee] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4ee	          0x4839c2	                            cmp rdx, rax	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4f1	     0xf8dff080000	                           jge 0x400adf6	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400a4f7	    0x488b05000000	            mov rax, qword [0x0400a4fe] 	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x400a4fe	            0x89c7	                            mov edi, eax	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x400a500	      0xe800000000	                          call 0x400a505	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x400a505	      0xe9ec080000	                           jmp 0x400adf6	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x400a50a	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x400a512	            0x7558	                           jne 0x400a56c	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x400a514	    0x488b05000000	            mov rax, qword [0x0400a51b] 	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400a51b	          0x4885c0	                           test rax, rax	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400a51e	            0x7916	                           jns 0x400a536	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400a520	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400a52b	    0x48c705000000	               mov qword [0x0400a536], 0	      8831	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400a536	    0x488b15000000	            mov rdx, qword [0x0400a53d] 	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400a53d	    0x488b05000000	            mov rax, qword [0x0400a544] 	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400a544	          0x4839c2	                            cmp rdx, rax	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400a547	            0x7e19	                           jle 0x400a562	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400a549	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8835	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400a554	    0x488b05000000	            mov rax, qword [0x0400a55b] 	      8836	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400a55b	    0x488905000000	            mov qword [0x0400a562], rax 	      8836	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400a562	      0xe800000000	                          call 0x400a567	      8838	option.c	FUNCTION_50	ELSE_1	IF_10	CALL_4
0x400a567	      0xe98e080000	                           jmp 0x400adfa	      8838	option.c	FUNCTION_50	ELSE_1	IF_10	CALL_4
0x400a56c	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x400a574	     0xf8598000000	                           jne 0x400a612	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x400a57a	    0x488b05000000	            mov rax, qword [0x0400a581] 	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a581	          0x4885c0	                           test rax, rax	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a584	            0x7f16	                            jg 0x400a59c	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a586	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a591	    0x48c705000000	               mov qword [0x0400a59c], 1	      8845	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a59c	    0x488b15000000	            mov rdx, qword [0x0400a5a3] 	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a5a3	    0x488b05000000	            mov rax, qword [0x0400a5aa] 	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a5aa	          0x4839c2	                            cmp rdx, rax	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a5ad	            0x7e19	                           jle 0x400a5c8	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a5af	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a5ba	    0x488b05000000	            mov rax, qword [0x0400a5c1] 	      8850	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a5c1	    0x488905000000	            mov qword [0x0400a5c8], rax 	      8850	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a5c8	    0x488b15000000	            mov rdx, qword [0x0400a5cf] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5cf	    0x488b05000000	            mov rax, qword [0x0400a5d6] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5d6	          0x4839c2	                            cmp rdx, rax	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5d9	     0xf841b080000	                            je 0x400adfa	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5df	    0x488b05000000	            mov rax, qword [0x0400a5e6] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5e6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5ec	          0x4863d0	                         movsxd rdx, eax	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5ef	    0x488b05000000	            mov rax, qword [0x0400a5f6] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5f6	          0x4839c2	                            cmp rdx, rax	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5f9	     0xf8dfb070000	                           jge 0x400adfa	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a5ff	    0x488b05000000	            mov rax, qword [0x0400a606] 	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x400a606	            0x89c7	                            mov edi, eax	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x400a608	      0xe800000000	                          call 0x400a60d	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x400a60d	      0xe9e8070000	                           jmp 0x400adfa	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x400a612	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x400a61a	            0x7558	                           jne 0x400a674	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x400a61c	    0x488b05000000	            mov rax, qword [0x0400a623] 	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a623	          0x4885c0	                           test rax, rax	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a626	            0x7916	                           jns 0x400a63e	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a628	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8863	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a633	    0x48c705000000	               mov qword [0x0400a63e], 0	      8864	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a63e	    0x488b15000000	            mov rdx, qword [0x0400a645] 	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a645	    0x488b05000000	            mov rax, qword [0x0400a64c] 	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a64c	          0x4839c2	                            cmp rdx, rax	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a64f	            0x7e19	                           jle 0x400a66a	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a651	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a65c	    0x488b05000000	            mov rax, qword [0x0400a663] 	      8869	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a663	    0x488905000000	            mov qword [0x0400a66a], rax 	      8869	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a66a	      0xe800000000	                          call 0x400a66f	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x400a66f	      0xe986070000	                           jmp 0x400adfa	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x400a674	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x400a67c	            0x750f	                           jne 0x400a68d	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x400a67e	      0xbf00000000	                              mov edi, 0	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x400a683	      0xe800000000	                          call 0x400a688	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x400a688	      0xe96d070000	                           jmp 0x400adfa	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x400a68d	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x400a695	            0x750a	                           jne 0x400a6a1	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x400a697	      0xe800000000	                          call 0x400a69c	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x400a69c	      0xe959070000	                           jmp 0x400adfa	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x400a6a1	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x400a6a9	            0x7535	                           jne 0x400a6e0	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x400a6ab	    0x8b0500000000	            mov eax, dword [0x0400a6b1] 	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a6b1	            0x85c0	                           test eax, eax	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a6b3	     0xf8441070000	                            je 0x400adfa	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a6b9	      0xe800000000	                          call 0x400a6be	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a6be	          0x83f801	                              cmp eax, 1	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a6c1	     0xf8533070000	                           jne 0x400adfa	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a6c7	      0xba01000000	                              mov edx, 1	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a6cc	      0xbe00000000	                              mov esi, 0	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a6d1	      0xbf00000000	                              mov edi, 0	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a6d6	      0xe800000000	                          call 0x400a6db	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a6db	      0xe91a070000	                           jmp 0x400adfa	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a6e0	    0x488b05000000	            mov rax, qword [0x0400a6e7] 	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a6e7	    0x4805e8010000	                          add rax, 0x1e8	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a6ed	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a6f1	            0x752f	                           jne 0x400a722	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a6f3	    0x488b05000000	            mov rax, qword [0x0400a6fa] 	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a6fa	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a701	          0x4885c0	                           test rax, rax	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a704	            0x7912	                           jns 0x400a718	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a706	    0x488b05000000	            mov rax, qword [0x0400a70d] 	      8901	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a70d	    0x48c780e80100	              mov qword [rax + 0x1e8], 0	      8901	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a718	      0xe800000000	                          call 0x400a71d	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x400a71d	      0xe9d8060000	                           jmp 0x400adfa	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x400a722	    0x488b05000000	            mov rax, qword [0x0400a729] 	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x400a729	    0x480508020000	                          add rax, 0x208	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x400a72f	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x400a733	            0x7514	                           jne 0x400a749	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x400a735	    0x488b05000000	            mov rax, qword [0x0400a73c] 	      8908	option.c	FUNCTION_50	ELSE_8	IF_26	CALL_12
0x400a73c	          0x4889c7	                            mov rdi, rax	      8908	option.c	FUNCTION_50	ELSE_8	IF_26	CALL_12
0x400a73f	      0xe800000000	                          call 0x400a744	      8908	option.c	FUNCTION_50	ELSE_8	IF_26	CALL_12
0x400a744	      0xe9b1060000	                           jmp 0x400adfa	      8908	option.c	FUNCTION_50	ELSE_8	IF_26	CALL_12
0x400a749	    0x488b05000000	            mov rax, qword [0x0400a750] 	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x400a750	    0x480510020000	                          add rax, 0x210	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x400a756	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x400a75a	            0x753e	                           jne 0x400a79a	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x400a75c	    0x488b05000000	            mov rax, qword [0x0400a763] 	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a763	          0x4889c7	                            mov rdi, rax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a766	      0xe800000000	                          call 0x400a76b	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a76b	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a76d	            0x7517	                           jne 0x400a786	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a76f	    0x488b05000000	            mov rax, qword [0x0400a776] 	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a776	          0x4889c7	                            mov rdi, rax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a779	      0xe800000000	                          call 0x400a77e	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a77e	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a780	     0xf8474060000	                            je 0x400adfa	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a786	    0x488b05000000	            mov rax, qword [0x0400a78d] 	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x400a78d	          0x4889c7	                            mov rdi, rax	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x400a790	      0xe800000000	                          call 0x400a795	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x400a795	      0xe960060000	                           jmp 0x400adfa	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x400a79a	    0x488b05000000	            mov rax, qword [0x0400a7a1] 	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400a7a1	    0x4805c8010000	                          add rax, 0x1c8	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400a7a7	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400a7ab	            0x756f	                           jne 0x400a81c	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400a7ad	    0x488b05000000	            mov rax, qword [0x0400a7b4] 	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7b4	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7bb	          0x4885c0	                           test rax, rax	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7be	            0x7922	                           jns 0x400a7e2	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7c0	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8923	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7cb	    0x488b05000000	            mov rax, qword [0x0400a7d2] 	      8924	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7d2	    0x48c780c80100	              mov qword [rax + 0x1c8], 0	      8924	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7dd	      0xe918060000	                           jmp 0x400adfa	      8924	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a7e2	    0x488b05000000	            mov rax, qword [0x0400a7e9] 	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a7e9	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a7f0	        0x4883f80c	                            cmp rax, 0xc	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a7f4	     0xf8e00060000	                           jle 0x400adfa	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a7fa	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a805	    0x488b05000000	            mov rax, qword [0x0400a80c] 	      8929	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a80c	    0x48c780c80100	           mov qword [rax + 0x1c8], 0xc 	      8929	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a817	      0xe9de050000	                           jmp 0x400adfa	      8929	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a81c	    0x488b05000000	            mov rax, qword [0x0400a823] 	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a823	    0x480568150000	                         add rax, 0x1568	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a829	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a82d	            0x7413	                            je 0x400a842	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a82f	    0x488b05000000	            mov rax, qword [0x0400a836] 	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a836	    0x4805a8150000	                         add rax, 0x15a8	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a83c	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a840	            0x7560	                           jne 0x400a8a2	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a842	    0x488b05000000	            mov rax, qword [0x0400a849] 	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a849	          0x4889c7	                            mov rdi, rax	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a84c	      0xe800000000	                          call 0x400a851	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a851	            0x85c0	                           test eax, eax	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a853	            0x740f	                            je 0x400a864	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a855	    0x488b05000000	            mov rax, qword [0x0400a85c] 	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x400a85c	          0x4889c7	                            mov rdi, rax	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x400a85f	      0xe800000000	                          call 0x400a864	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x400a864	    0x488b05000000	            mov rax, qword [0x0400a86b] 	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a86b	    0x480568150000	                         add rax, 0x1568	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a871	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a875	            0x7417	                            je 0x400a88e	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a877	    0x488b05000000	            mov rax, qword [0x0400a87e] 	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a87e	    0x488b80681500	          mov rax, qword [rax + 0x1568] 	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a885	          0x4885c0	                           test rax, rax	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a888	     0xf856b050000	                           jne 0x400adf9	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a88e	    0x488b05000000	            mov rax, qword [0x0400a895] 	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x400a895	          0x4889c7	                            mov rdi, rax	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x400a898	      0xe800000000	                          call 0x400a89d	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x400a89d	      0xe957050000	                           jmp 0x400adf9	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a8a2	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x400a8aa	            0x753b	                           jne 0x400a8e7	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x400a8ac	    0x488b05000000	            mov rax, qword [0x0400a8b3] 	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a8b3	        0x4883f806	                              cmp rax, 6	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a8b7	            0x7e0d	                           jle 0x400a8c6	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a8b9	    0x48c705000000	               mov qword [0x0400a8c4], 6	      8956	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a8c4	            0xeb17	                           jmp 0x400a8dd	      8956	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a8c6	    0x488b05000000	            mov rax, qword [0x0400a8cd] 	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x400a8cd	          0x4885c0	                           test rax, rax	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x400a8d0	            0x790b	                           jns 0x400a8dd	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x400a8d2	    0x48c705000000	               mov qword [0x0400a8dd], 0	      8958	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x400a8dd	      0xe800000000	                          call 0x400a8e2	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x400a8e2	      0xe913050000	                           jmp 0x400adfa	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x400a8e7	    0x488b05000000	            mov rax, qword [0x0400a8ee] 	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a8ee	    0x480578120000	                         add rax, 0x1278	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a8f4	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a8f8	            0x7572	                           jne 0x400a96c	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a8fa	    0x488b05000000	            mov rax, qword [0x0400a901] 	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a901	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a908	          0x4885c0	                           test rax, rax	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a90b	            0x7814	                            js 0x400a921	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a90d	    0x488b05000000	            mov rax, qword [0x0400a914] 	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a914	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a91b	        0x4883f802	                              cmp rax, 2	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a91f	            0x7e1d	                           jle 0x400a93e	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a921	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8967	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a92c	    0x488b05000000	            mov rax, qword [0x0400a933] 	      8968	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a933	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8968	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a93e	    0x488b05000000	            mov rax, qword [0x0400a945] 	      8970	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a945	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	      8970	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a94c	    0x488905000000	            mov qword [0x0400a953], rax 	      8970	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a953	    0x8b0500000000	            mov eax, dword [0x0400a959] 	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x400a959	            0x85c0	                           test eax, eax	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x400a95b	            0x7405	                            je 0x400a962	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x400a95d	      0xe800000000	                          call 0x400a962	      8972	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_20
0x400a962	      0xe800000000	                          call 0x400a967	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x400a967	      0xe98e040000	                           jmp 0x400adfa	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x400a96c	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x400a974	            0x7531	                           jne 0x400a9a7	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x400a976	    0x488b05000000	            mov rax, qword [0x0400a97d] 	      8983	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a97d	          0x4885c0	                           test rax, rax	      8983	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a980	     0xf8474040000	                            je 0x400adfa	      8983	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a986	    0x488b05000000	            mov rax, qword [0x0400a98d] 	      8983	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a98d	        0x4883f801	                              cmp rax, 1	      8983	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a991	     0xf8463040000	                            je 0x400adfa	      8983	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a997	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a9a2	      0xe953040000	                           jmp 0x400adfa	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a9a7	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x400a9af	            0x754a	                           jne 0x400a9fb	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x400a9b1	    0x488b05000000	            mov rax, qword [0x0400a9b8] 	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a9b8	          0x4885c0	                           test rax, rax	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a9bb	            0x7f10	                            jg 0x400a9cd	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a9bd	    0x48c705000000	               mov qword [0x0400a9c8], 1	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a9c8	      0xe92d040000	                           jmp 0x400adfa	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a9cd	    0x488b15000000	            mov rdx, qword [0x0400a9d4] 	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9d4	    0x488b05000000	            mov rax, qword [0x0400a9db] 	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9db	          0x4839c2	                            cmp rdx, rax	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9de	     0xf8c16040000	                            jl 0x400adfa	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9e4	    0x488b05000000	            mov rax, qword [0x0400a9eb] 	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9eb	        0x4883e801	                              sub rax, 1	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9ef	    0x488905000000	            mov qword [0x0400a9f6], rax 	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9f6	      0xe9ff030000	                           jmp 0x400adfa	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a9fb	    0x488b05000000	            mov rax, qword [0x0400aa02] 	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa02	    0x480580120000	                         add rax, 0x1280	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa08	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa0c	            0x755f	                           jne 0x400aa6d	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa0e	    0x488b05000000	            mov rax, qword [0x0400aa15] 	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa15	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa1c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa20	            0x7c14	                            jl 0x400aa36	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa22	    0x488b05000000	            mov rax, qword [0x0400aa29] 	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa29	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa30	        0x4883f802	                              cmp rax, 2	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa34	            0x7e1d	                           jle 0x400aa53	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa36	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9000	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa41	    0x488b05000000	            mov rax, qword [0x0400aa48] 	      9001	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa48	    0x48c780801200	            mov qword [rax + 0x1280], 0 	      9001	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400aa53	    0x488b05000000	            mov rax, qword [0x0400aa5a] 	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa5a	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa61	    0x488905000000	            mov qword [0x0400aa68], rax 	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa68	      0xe98d030000	                           jmp 0x400adfa	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400aa6d	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x400aa75	            0x7551	                           jne 0x400aac8	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x400aa77	    0x488b05000000	            mov rax, qword [0x0400aa7e] 	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400aa7e	          0x4885c0	                           test rax, rax	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400aa81	            0x7916	                           jns 0x400aa99	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400aa83	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9012	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400aa8e	    0x48c705000000	           mov qword [0x0400aa99], 0x55 	      9013	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400aa99	    0x8b0500000000	            mov eax, dword [0x0400aa9f] 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aa9f	          0x83f802	                              cmp eax, 2	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aaa2	     0xf8452030000	                            je 0x400adfa	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aaa8	    0x488b05000000	            mov rax, qword [0x0400aaaf] 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aaaf	        0x48394590	            cmp qword [rbp - 0x70], rax 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aab3	     0xf8441030000	                            je 0x400adfa	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aab9	    0xc70500000000	               mov dword [0x0400aac3], 1	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aac3	      0xe932030000	                           jmp 0x400adfa	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400aac8	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x400aad0	     0xf859c000000	                           jne 0x400ab72	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x400aad6	    0x488b05000000	            mov rax, qword [0x0400aadd] 	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400aadd	          0x4885c0	                           test rax, rax	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400aae0	            0x7f16	                            jg 0x400aaf8	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400aae2	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9025	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400aaed	    0x48c705000000	               mov qword [0x0400aaf8], 1	      9026	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400aaf8	    0x488b1d000000	            mov rbx, qword [0x0400aaff] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400aaff	      0xe800000000	                          call 0x400ab04	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab04	            0x4898	                                    cdqe	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab06	          0x4829c3	                            sub rbx, rax	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab09	          0x4889d8	                            mov rax, rbx	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab0c	        0x488d5001	                      lea rdx, [rax + 1]	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab10	    0x488b05000000	            mov rax, qword [0x0400ab17] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab17	          0x4839c2	                            cmp rdx, rax	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab1a	            0x7d1f	                           jge 0x400ab3b	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400ab1c	    0x488b1d000000	            mov rbx, qword [0x0400ab23] 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400ab23	      0xe800000000	                          call 0x400ab28	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400ab28	            0x4898	                                    cdqe	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400ab2a	          0x4829c3	                            sub rbx, rax	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400ab2d	          0x4889d8	                            mov rax, rbx	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400ab30	        0x4883c001	                              add rax, 1	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400ab34	    0x488905000000	            mov qword [0x0400ab3b], rax 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400ab3b	    0x488b05000000	            mov rax, qword [0x0400ab42] 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab42	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab46	     0xf84ae020000	                            je 0x400adfa	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab4c	    0x8b0500000000	            mov eax, dword [0x0400ab52] 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab52	            0x85c0	                           test eax, eax	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab54	     0xf84a0020000	                            je 0x400adfa	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab5a	    0x8b0500000000	            mov eax, dword [0x0400ab60] 	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab60	            0x85c0	                           test eax, eax	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab62	     0xf8592020000	                           jne 0x400adfa	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400ab68	      0xe800000000	                          call 0x400ab6d	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x400ab6d	      0xe988020000	                           jmp 0x400adfa	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x400ab72	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x400ab7a	            0x7547	                           jne 0x400abc3	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x400ab7c	    0x488b05000000	            mov rax, qword [0x0400ab83] 	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400ab83	          0x4885c0	                           test rax, rax	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400ab86	            0x7916	                           jns 0x400ab9e	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400ab88	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9046	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400ab93	    0x48c705000000	           mov qword [0x0400ab9e], 0x64 	      9047	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400ab9e	    0x488b05000000	            mov rax, qword [0x0400aba5] 	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400aba5	          0x4885c0	                           test rax, rax	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400aba8	     0xf844c020000	                            je 0x400adfa	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400abae	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400abb3	     0xf8541020000	                           jne 0x400adfa	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400abb9	      0xe800000000	                          call 0x400abbe	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x400abbe	      0xe937020000	                           jmp 0x400adfa	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x400abc3	    0x488b05000000	            mov rax, qword [0x0400abca] 	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400abca	    0x4805a8020000	                          add rax, 0x2a8	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400abd0	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400abd4	            0x756f	                           jne 0x400ac45	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400abd6	    0x488b05000000	            mov rax, qword [0x0400abdd] 	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400abdd	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400abe4	          0x4885c0	                           test rax, rax	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400abe7	            0x7922	                           jns 0x400ac0b	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400abe9	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9057	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400abf4	    0x488b05000000	            mov rax, qword [0x0400abfb] 	      9058	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400abfb	    0x48c780a80200	              mov qword [rax + 0x2a8], 0	      9058	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400ac06	      0xe9ef010000	                           jmp 0x400adfa	      9058	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400ac0b	    0x488b05000000	            mov rax, qword [0x0400ac12] 	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac12	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac19	        0x4883f803	                              cmp rax, 3	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac1d	     0xf8ed7010000	                           jle 0x400adfa	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac23	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9062	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac2e	    0x488b05000000	            mov rax, qword [0x0400ac35] 	      9063	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac35	    0x48c780a80200	              mov qword [rax + 0x2a8], 3	      9063	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac40	      0xe9b5010000	                           jmp 0x400adfa	      9063	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400ac45	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x400ac4d	            0x7528	                           jne 0x400ac77	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x400ac4f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x400ac53	    0x488905000000	            mov qword [0x0400ac5a], rax 	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x400ac5a	      0xbf01000000	                              mov edi, 1	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x400ac5f	      0xe800000000	                          call 0x400ac64	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x400ac64	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x400ac6b	    0x488905000000	            mov qword [0x0400ac72], rax 	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x400ac72	      0xe983010000	                           jmp 0x400adfa	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x400ac77	    0x488b05000000	            mov rax, qword [0x0400ac7e] 	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x400ac7e	    0x480548160000	                         add rax, 0x1648	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x400ac84	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x400ac88	            0x7536	                           jne 0x400acc0	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x400ac8a	    0x488b05000000	            mov rax, qword [0x0400ac91] 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x400ac91	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x400ac95	    0x488990481600	          mov qword [rax + 0x1648], rdx 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x400ac9c	      0xbf01000000	                              mov edi, 1	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x400aca1	      0xe800000000	                          call 0x400aca6	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x400aca6	    0x488b05000000	            mov rax, qword [0x0400acad] 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400acad	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400acb4	    0x488990481600	          mov qword [rax + 0x1648], rdx 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400acbb	      0xe93a010000	                           jmp 0x400adfa	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400acc0	    0x488b05000000	            mov rax, qword [0x0400acc7] 	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x400acc7	    0x480540020000	                          add rax, 0x240	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x400accd	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x400acd1	            0x7578	                           jne 0x400ad4b	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x400acd3	    0x488b05000000	            mov rax, qword [0x0400acda] 	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400acda	    0x488b80400200	           mov rax, qword [rax + 0x240] 	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400ace1	          0x4885c0	                           test rax, rax	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400ace4	            0x7f1d	                            jg 0x400ad03	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400ace6	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9103	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400acf1	    0x488b05000000	            mov rax, qword [0x0400acf8] 	      9104	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400acf8	    0x48c780400200	              mov qword [rax + 0x240], 1	      9104	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400ad03	    0x488b05000000	            mov rax, qword [0x0400ad0a] 	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400ad0a	    0x488b80400200	           mov rax, qword [rax + 0x240] 	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400ad11	        0x4883f80a	                            cmp rax, 0xa	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400ad15	            0x7e1d	                           jle 0x400ad34	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400ad17	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9108	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400ad22	    0x488b05000000	            mov rax, qword [0x0400ad29] 	      9109	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400ad29	    0x48c780400200	            mov qword [rax + 0x240], 0xa	      9109	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400ad34	    0x488b05000000	            mov rax, qword [0x0400ad3b] 	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x400ad3b	    0x48c780301900	            mov qword [rax + 0x1930], 0 	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x400ad46	      0xe9af000000	                           jmp 0x400adfa	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x400ad4b	    0x488b05000000	            mov rax, qword [0x0400ad52] 	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x400ad52	    0x4805b8150000	                         add rax, 0x15b8	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x400ad58	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x400ad5c	     0xf8598000000	                           jne 0x400adfa	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x400ad62	    0x488b05000000	            mov rax, qword [0x0400ad69] 	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400ad69	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400ad70	          0x4885c0	                           test rax, rax	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400ad73	            0x791d	                           jns 0x400ad92	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400ad75	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9119	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400ad80	    0x488b05000000	            mov rax, qword [0x0400ad87] 	      9120	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400ad87	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	      9120	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400ad92	    0x488b05000000	            mov rax, qword [0x0400ad99] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ad99	        0x48894588	             mov qword [rbp - 0x78], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ad9d	            0xeb4e	                           jmp 0x400aded	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ad9f	    0x488b05000000	            mov rax, qword [0x0400ada6] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ada6	        0x48394588	            cmp qword [rbp - 0x78], rax 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adaa	            0x740a	                            je 0x400adb6	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adac	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adb0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adb4	            0xeb07	                           jmp 0x400adbd	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adb6	    0x488b05000000	            mov rax, qword [0x0400adbd] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adbd	        0x48894580	             mov qword [rbp - 0x80], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adc1	            0xeb18	                           jmp 0x400addb	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adc3	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x400adc7	          0x4889c7	                            mov rdi, rax	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x400adca	      0xe800000000	                          call 0x400adcf	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x400adcf	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400add3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400add7	        0x48894580	             mov qword [rbp - 0x80], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400addb	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ade0	            0x75e1	                           jne 0x400adc3	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ade2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ade6	          0x488b00	                    mov rax, qword [rax]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400ade9	        0x48894588	             mov qword [rbp - 0x78], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400aded	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adf2	            0x75ab	                           jne 0x400ad9f	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adf4	            0xeb04	                           jmp 0x400adfa	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400adf6	              0x90	                                     nop	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x400adf7	            0xeb01	                           jmp 0x400adfa	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x400adf9	              0x90	                                     nop	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400adfa	      0xe800000000	                          call 0x400adff	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400adff	          0x4863d0	                         movsxd rdx, eax	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400ae02	    0x488b05000000	            mov rax, qword [0x0400ae09] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400ae09	          0x4839c2	                            cmp rdx, rax	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400ae0c	            0x7e61	                           jle 0x400ae6f	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400ae0e	    0x8b0500000000	            mov eax, dword [0x0400ae14] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400ae14	            0x85c0	                           test eax, eax	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400ae16	            0x7457	                            je 0x400ae6f	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400ae18	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x400ae20	            0x743f	                            je 0x400ae61	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x400ae22	      0xe800000000	                          call 0x400ae27	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae27	            0x89c3	                            mov ebx, eax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae29	      0xbf00000000	                              mov edi, 0	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae2e	      0xe800000000	                          call 0x400ae33	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae33	          0x4889c2	                            mov rdx, rax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae36	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae3d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae44	            0x89d9	                            mov ecx, ebx	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae46	          0x4889c7	                            mov rdi, rax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae49	      0xb800000000	                              mov eax, 0	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae4e	      0xe800000000	                          call 0x400ae53	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400ae53	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9142	option.c	FUNCTION_50	IF_71	IF_72
0x400ae5a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9142	option.c	FUNCTION_50	IF_71	IF_72
0x400ae61	      0xe800000000	                          call 0x400ae66	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x400ae66	            0x4898	                                    cdqe	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x400ae68	    0x488905000000	            mov qword [0x0400ae6f], rax 	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x400ae6f	    0x488b05000000	            mov rax, qword [0x0400ae76] 	      9146	option.c	FUNCTION_50	IF_73
0x400ae76	        0x4883f80b	                            cmp rax, 0xb	      9146	option.c	FUNCTION_50	IF_73
0x400ae7a	            0x7f5a	                            jg 0x400aed6	      9146	option.c	FUNCTION_50	IF_73
0x400ae7c	    0x8b0500000000	            mov eax, dword [0x0400ae82] 	      9146	option.c	FUNCTION_50	IF_73
0x400ae82	            0x85c0	                           test eax, eax	      9146	option.c	FUNCTION_50	IF_73
0x400ae84	            0x7450	                            je 0x400aed6	      9146	option.c	FUNCTION_50	IF_73
0x400ae86	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x400ae8e	            0x743b	                            je 0x400aecb	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x400ae90	      0xbf00000000	                              mov edi, 0	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400ae95	      0xe800000000	                          call 0x400ae9a	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400ae9a	          0x4889c2	                            mov rdx, rax	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400ae9d	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400aea4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400aeab	      0xb90c000000	                            mov ecx, 0xc	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400aeb0	          0x4889c7	                            mov rdi, rax	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400aeb3	      0xb800000000	                              mov eax, 0	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400aeb8	      0xe800000000	                          call 0x400aebd	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400aebd	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9152	option.c	FUNCTION_50	IF_73	IF_74
0x400aec4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9152	option.c	FUNCTION_50	IF_73	IF_74
0x400aecb	    0x48c705000000	            mov qword [0x0400aed6], 0xc 	      9154	option.c	FUNCTION_50	IF_73
0x400aed6	      0xe800000000	                          call 0x400aedb	      9156	option.c	FUNCTION_50	CALL_38
0x400aedb	    0x488b05000000	            mov rax, qword [0x0400aee2] 	      9162	option.c	FUNCTION_50	IF_75
0x400aee2	        0x48394598	            cmp qword [rbp - 0x68], rax 	      9162	option.c	FUNCTION_50	IF_75
0x400aee6	            0x7511	                           jne 0x400aef9	      9162	option.c	FUNCTION_50	IF_75
0x400aee8	    0x488b05000000	            mov rax, qword [0x0400aeef] 	      9162	option.c	FUNCTION_50	IF_75
0x400aeef	        0x483945a0	            cmp qword [rbp - 0x60], rax 	      9162	option.c	FUNCTION_50	IF_75
0x400aef3	     0xf84d4000000	                            je 0x400afcd	      9162	option.c	FUNCTION_50	IF_75
0x400aef9	    0x8b0500000000	            mov eax, dword [0x0400aeff] 	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x400aeff	            0x85c0	                           test eax, eax	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x400af01	            0x7410	                            je 0x400af13	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x400af03	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x400af07	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x400af0b	          0x488910	                    mov qword [rax], rdx	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x400af0e	      0xe987000000	                           jmp 0x400af9a	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x400af13	    0x8b0500000000	            mov eax, dword [0x0400af19] 	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af19	            0x85c0	                           test eax, eax	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af1b	            0x742a	                            je 0x400af47	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af1d	    0x8b0500000000	            mov eax, dword [0x0400af23] 	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af23	            0x85c0	                           test eax, eax	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af25	            0x7520	                           jne 0x400af47	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af27	    0x488b05000000	            mov rax, qword [0x0400af2e] 	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af2e	            0x89c1	                            mov ecx, eax	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af30	    0x488b05000000	            mov rax, qword [0x0400af37] 	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af37	      0xba01000000	                              mov edx, 1	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af3c	            0x89ce	                            mov esi, ecx	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af3e	            0x89c7	                            mov edi, eax	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af40	      0xe800000000	                          call 0x400af45	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af45	            0xeb53	                           jmp 0x400af9a	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400af47	      0xe800000000	                          call 0x400af4c	      9177	option.c	FUNCTION_50	IF_75	ELSE_32	CALL_40
0x400af4c	    0x8b0500000000	            mov eax, dword [0x0400af52] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af52	            0x4898	                                    cdqe	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af54	    0x488b0d000000	            mov rcx, qword [0x0400af5b] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af5b	    0x488b15000000	            mov rdx, qword [0x0400af62] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af62	          0x4829d1	                            sub rcx, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af65	          0x4889ca	                            mov rdx, rcx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af68	          0x4839d0	                            cmp rax, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af6b	            0x7e2d	                           jle 0x400af9a	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af6d	    0x488b15000000	            mov rdx, qword [0x0400af74] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af74	    0x488b05000000	            mov rax, qword [0x0400af7b] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af7b	          0x4839c2	                            cmp rdx, rax	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af7e	            0x7e1a	                           jle 0x400af9a	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af80	    0x488b05000000	            mov rax, qword [0x0400af87] 	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af87	            0x89c2	                            mov edx, eax	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af89	    0x488b05000000	            mov rax, qword [0x0400af90] 	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af90	            0x29c2	                            sub edx, eax	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af92	            0x89d0	                            mov eax, edx	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af94	    0x890500000000	            mov dword [0x0400af9a], eax 	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400af9a	    0x488b15000000	            mov rdx, qword [0x0400afa1] 	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afa1	    0x488b05000000	            mov rax, qword [0x0400afa8] 	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afa8	          0x4839c2	                            cmp rdx, rax	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afab	            0x7d0e	                           jge 0x400afbb	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afad	      0xbf00000000	                              mov edi, 0	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afb2	      0xe800000000	                          call 0x400afb7	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afb7	            0x85c0	                           test eax, eax	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afb9	            0x7512	                           jne 0x400afcd	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400afbb	    0x488b05000000	            mov rax, qword [0x0400afc2] 	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x400afc2	        0x4883e801	                              sub rax, 1	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x400afc6	    0x488905000000	            mov qword [0x0400afcd], rax 	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x400afcd	    0x488b05000000	            mov rax, qword [0x0400afd4] 	      9185	option.c	FUNCTION_50	IF_80
0x400afd4	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      9185	option.c	FUNCTION_50	IF_80
0x400afdb	          0x4885c0	                           test rax, rax	      9185	option.c	FUNCTION_50	IF_80
0x400afde	            0x7f1d	                            jg 0x400affd	      9185	option.c	FUNCTION_50	IF_80
0x400afe0	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9187	option.c	FUNCTION_50	IF_80
0x400afeb	    0x488b05000000	            mov rax, qword [0x0400aff2] 	      9188	option.c	FUNCTION_50	IF_80
0x400aff2	    0x48c780a81500	            mov qword [rax + 0x15a8], 8 	      9188	option.c	FUNCTION_50	IF_80
0x400affd	    0x488b05000000	            mov rax, qword [0x0400b004] 	      9190	option.c	FUNCTION_50	IF_81
0x400b004	          0x4885c0	                           test rax, rax	      9190	option.c	FUNCTION_50	IF_81
0x400b007	            0x7916	                           jns 0x400b01f	      9190	option.c	FUNCTION_50	IF_81
0x400b009	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9192	option.c	FUNCTION_50	IF_81
0x400b014	    0x48c705000000	               mov qword [0x0400b01f], 0	      9193	option.c	FUNCTION_50	IF_81
0x400b01f	    0x488b05000000	            mov rax, qword [0x0400b026] 	      9195	option.c	FUNCTION_50	IF_82
0x400b026	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      9195	option.c	FUNCTION_50	IF_82
0x400b02d	          0x4885c0	                           test rax, rax	      9195	option.c	FUNCTION_50	IF_82
0x400b030	            0x7e3b	                           jle 0x400b06d	      9195	option.c	FUNCTION_50	IF_82
0x400b032	    0x488b05000000	            mov rax, qword [0x0400b039] 	      9196	option.c	FUNCTION_50	IF_82
0x400b039	    0x488b90600200	           mov rdx, qword [rax + 0x260] 	      9196	option.c	FUNCTION_50	IF_82
0x400b040	    0x488b05000000	            mov rax, qword [0x0400b047] 	      9196	option.c	FUNCTION_50	IF_82
0x400b047	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9196	option.c	FUNCTION_50	IF_82
0x400b04d	            0x4898	                                    cdqe	      9196	option.c	FUNCTION_50	IF_82
0x400b04f	          0x4839c2	                            cmp rdx, rax	      9196	option.c	FUNCTION_50	IF_82
0x400b052	     0xf8eaa000000	                           jle 0x400b102	      9196	option.c	FUNCTION_50	IF_82
0x400b058	    0x488b05000000	            mov rax, qword [0x0400b05f] 	      9197	option.c	FUNCTION_50	IF_82
0x400b05f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9197	option.c	FUNCTION_50	IF_82
0x400b065	            0x85c0	                           test eax, eax	      9197	option.c	FUNCTION_50	IF_82
0x400b067	     0xf8e95000000	                           jle 0x400b102	      9197	option.c	FUNCTION_50	IF_82
0x400b06d	    0x8b0500000000	            mov eax, dword [0x0400b073] 	      9198	option.c	FUNCTION_50	IF_82
0x400b073	            0x85c0	                           test eax, eax	      9198	option.c	FUNCTION_50	IF_82
0x400b075	     0xf8487000000	                            je 0x400b102	      9198	option.c	FUNCTION_50	IF_82
0x400b07b	    0x488b05000000	            mov rax, qword [0x0400b082] 	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x400b082	    0x480560020000	                          add rax, 0x260	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x400b088	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x400b08c	            0x752f	                           jne 0x400b0bd	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x400b08e	    0x488b05000000	            mov rax, qword [0x0400b095] 	      9202	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400b095	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      9202	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400b09c	          0x4885c0	                           test rax, rax	      9202	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400b09f	            0x740b	                            je 0x400b0ac	      9202	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400b0a1	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400b0ac	    0x488b05000000	            mov rax, qword [0x0400b0b3] 	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x400b0b3	          0x4889c7	                            mov rdi, rax	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x400b0b6	      0xe800000000	                          call 0x400b0bb	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x400b0bb	            0xeb45	                           jmp 0x400b102	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x400b0bd	    0x488b05000000	            mov rax, qword [0x0400b0c4] 	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400b0c4	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400b0cb	          0x4885c0	                           test rax, rax	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400b0ce	            0x7f14	                            jg 0x400b0e4	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400b0d0	    0x488b05000000	            mov rax, qword [0x0400b0d7] 	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400b0d7	    0x48c780600200	              mov qword [rax + 0x260], 1	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400b0e2	            0xeb1e	                           jmp 0x400b102	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400b0e4	    0x488b05000000	            mov rax, qword [0x0400b0eb] 	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x400b0eb	    0x488b15000000	            mov rdx, qword [0x0400b0f2] 	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x400b0f2	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x400b0f8	          0x4863d2	                         movsxd rdx, edx	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x400b0fb	    0x488990600200	            mov qword [rax + 0x260], rdx	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x400b102	    0x488b05000000	            mov rax, qword [0x0400b109] 	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x400b109	          0x4885c0	                           test rax, rax	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x400b10c	            0x7918	                           jns 0x400b126	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x400b10e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x400b119	    0x48c705000000	               mov qword [0x0400b124], 0	      9216	option.c	FUNCTION_50	ELSE_34	IF_86
0x400b124	            0xeb25	                           jmp 0x400b14b	      9216	option.c	FUNCTION_50	ELSE_34	IF_86
0x400b126	    0x488b05000000	            mov rax, qword [0x0400b12d] 	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x400b12d	    0x483d10270000	                         cmp rax, 0x2710	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x400b133	            0x7e16	                           jle 0x400b14b	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x400b135	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9220	option.c	FUNCTION_50	ELSE_35	IF_87
0x400b140	    0x48c705000000	         mov qword [0x0400b14b], 0x2710 	      9221	option.c	FUNCTION_50	ELSE_35	IF_87
0x400b14b	    0x488b05000000	            mov rax, qword [0x0400b152] 	      9223	option.c	FUNCTION_50	IF_88
0x400b152	          0x4885c0	                           test rax, rax	      9223	option.c	FUNCTION_50	IF_88
0x400b155	            0x780d	                            js 0x400b164	      9223	option.c	FUNCTION_50	IF_88
0x400b157	    0x488b05000000	            mov rax, qword [0x0400b15e] 	      9223	option.c	FUNCTION_50	IF_88
0x400b15e	        0x4883f802	                              cmp rax, 2	      9223	option.c	FUNCTION_50	IF_88
0x400b162	            0x7e16	                           jle 0x400b17a	      9223	option.c	FUNCTION_50	IF_88
0x400b164	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9225	option.c	FUNCTION_50	IF_88
0x400b16f	    0x48c705000000	               mov qword [0x0400b17a], 0	      9226	option.c	FUNCTION_50	IF_88
0x400b17a	    0x488b05000000	            mov rax, qword [0x0400b181] 	      9228	option.c	FUNCTION_50	IF_89
0x400b181	          0x4885c0	                           test rax, rax	      9228	option.c	FUNCTION_50	IF_89
0x400b184	            0x7916	                           jns 0x400b19c	      9228	option.c	FUNCTION_50	IF_89
0x400b186	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9230	option.c	FUNCTION_50	IF_89
0x400b191	    0x48c705000000	               mov qword [0x0400b19c], 1	      9231	option.c	FUNCTION_50	IF_89
0x400b19c	    0x488b05000000	            mov rax, qword [0x0400b1a3] 	      9233	option.c	FUNCTION_50	IF_90
0x400b1a3	        0x4883f89c	             cmp rax, 0xffffffffffffff9c	      9233	option.c	FUNCTION_50	IF_90
0x400b1a7	            0x7c13	                            jl 0x400b1bc	      9233	option.c	FUNCTION_50	IF_90
0x400b1a9	    0x488b15000000	            mov rdx, qword [0x0400b1b0] 	      9233	option.c	FUNCTION_50	IF_90
0x400b1b0	    0x488b05000000	            mov rax, qword [0x0400b1b7] 	      9233	option.c	FUNCTION_50	IF_90
0x400b1b7	          0x4839c2	                            cmp rdx, rax	      9233	option.c	FUNCTION_50	IF_90
0x400b1ba	            0x7c4a	                            jl 0x400b206	      9233	option.c	FUNCTION_50	IF_90
0x400b1bc	    0x8b0500000000	            mov eax, dword [0x0400b1c2] 	      9233	option.c	FUNCTION_50	IF_90
0x400b1c2	            0x85c0	                           test eax, eax	      9233	option.c	FUNCTION_50	IF_90
0x400b1c4	            0x7440	                            je 0x400b206	      9233	option.c	FUNCTION_50	IF_90
0x400b1c6	    0x488b05000000	            mov rax, qword [0x0400b1cd] 	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x400b1cd	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x400b1d1	            0x741d	                            je 0x400b1f0	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x400b1d3	    0x488b05000000	            mov rax, qword [0x0400b1da] 	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400b1da	          0x4889c2	                            mov rdx, rax	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400b1dd	        0x48c1ea3f	                           shr rdx, 0x3f	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400b1e1	          0x4801d0	                            add rax, rdx	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400b1e4	          0x48d1f8	                              sar rax, 1	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400b1e7	    0x488905000000	            mov qword [0x0400b1ee], rax 	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400b1ee	            0xeb16	                           jmp 0x400b206	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400b1f0	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x400b1fb	    0x48c705000000	               mov qword [0x0400b206], 1	      9240	option.c	FUNCTION_50	IF_90	ELSE_36
0x400b206	    0x488b05000000	            mov rax, qword [0x0400b20d] 	      9243	option.c	FUNCTION_50	IF_92
0x400b20d	          0x4885c0	                           test rax, rax	      9243	option.c	FUNCTION_50	IF_92
0x400b210	            0x7920	                           jns 0x400b232	      9243	option.c	FUNCTION_50	IF_92
0x400b212	    0x8b0500000000	            mov eax, dword [0x0400b218] 	      9243	option.c	FUNCTION_50	IF_92
0x400b218	            0x85c0	                           test eax, eax	      9243	option.c	FUNCTION_50	IF_92
0x400b21a	            0x7416	                            je 0x400b232	      9243	option.c	FUNCTION_50	IF_92
0x400b21c	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9245	option.c	FUNCTION_50	IF_92
0x400b227	    0x48c705000000	               mov qword [0x0400b232], 0	      9246	option.c	FUNCTION_50	IF_92
0x400b232	    0x488b05000000	            mov rax, qword [0x0400b239] 	      9248	option.c	FUNCTION_50	IF_93
0x400b239	          0x4885c0	                           test rax, rax	      9248	option.c	FUNCTION_50	IF_93
0x400b23c	            0x7920	                           jns 0x400b25e	      9248	option.c	FUNCTION_50	IF_93
0x400b23e	    0x8b0500000000	            mov eax, dword [0x0400b244] 	      9248	option.c	FUNCTION_50	IF_93
0x400b244	            0x85c0	                           test eax, eax	      9248	option.c	FUNCTION_50	IF_93
0x400b246	            0x7416	                            je 0x400b25e	      9248	option.c	FUNCTION_50	IF_93
0x400b248	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9250	option.c	FUNCTION_50	IF_93
0x400b253	    0x48c705000000	               mov qword [0x0400b25e], 0	      9251	option.c	FUNCTION_50	IF_93
0x400b25e	    0x488b05000000	            mov rax, qword [0x0400b265] 	      9254	option.c	FUNCTION_50	IF_94
0x400b265	          0x4885c0	                           test rax, rax	      9254	option.c	FUNCTION_50	IF_94
0x400b268	            0x7f16	                            jg 0x400b280	      9254	option.c	FUNCTION_50	IF_94
0x400b26a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9256	option.c	FUNCTION_50	IF_94
0x400b275	    0x48c705000000	               mov qword [0x0400b280], 1	      9257	option.c	FUNCTION_50	IF_94
0x400b280	    0x488b05000000	            mov rax, qword [0x0400b287] 	      9260	option.c	FUNCTION_50	IF_95
0x400b287	          0x4885c0	                           test rax, rax	      9260	option.c	FUNCTION_50	IF_95
0x400b28a	            0x7916	                           jns 0x400b2a2	      9260	option.c	FUNCTION_50	IF_95
0x400b28c	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9262	option.c	FUNCTION_50	IF_95
0x400b297	    0x48c705000000	          mov qword [0x0400b2a2], 0x7d0 	      9263	option.c	FUNCTION_50	IF_95
0x400b2a2	    0x488b05000000	            mov rax, qword [0x0400b2a9] 	      9265	option.c	FUNCTION_50	IF_96
0x400b2a9	          0x4885c0	                           test rax, rax	      9265	option.c	FUNCTION_50	IF_96
0x400b2ac	            0x7916	                           jns 0x400b2c4	      9265	option.c	FUNCTION_50	IF_96
0x400b2ae	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9267	option.c	FUNCTION_50	IF_96
0x400b2b9	    0x48c705000000	               mov qword [0x0400b2c4], 0	      9268	option.c	FUNCTION_50	IF_96
0x400b2c4	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9272	option.c	FUNCTION_50	IF_97
0x400b2ca	          0x83e006	                              and eax, 6	      9272	option.c	FUNCTION_50	IF_97
0x400b2cd	            0x85c0	                           test eax, eax	      9272	option.c	FUNCTION_50	IF_97
0x400b2cf	            0x752c	                           jne 0x400b2fd	      9272	option.c	FUNCTION_50	IF_97
0x400b2d1	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9273	option.c	FUNCTION_50	CALL_43
0x400b2d7	            0x4898	                                    cdqe	      9273	option.c	FUNCTION_50	CALL_43
0x400b2d9	        0x48c1e006	                              shl rax, 6	      9273	option.c	FUNCTION_50	CALL_43
0x400b2dd	    0x480500000000	                              add rax, 0	      9273	option.c	FUNCTION_50	CALL_43
0x400b2e3	      0xbe02000000	                              mov esi, 2	      9273	option.c	FUNCTION_50	CALL_43
0x400b2e8	          0x4889c7	                            mov rdi, rax	      9273	option.c	FUNCTION_50	CALL_43
0x400b2eb	      0xe8461f0000	                 call sym.get_varp_scope	      9273	option.c	FUNCTION_50	CALL_43
0x400b2f0	          0x4889c2	                            mov rdx, rax	      9273	option.c	FUNCTION_50	CALL_43
0x400b2f3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9273	option.c	FUNCTION_50	CALL_43
0x400b2f7	          0x488b00	                    mov rax, qword [rax]	      9273	option.c	FUNCTION_50	CALL_43
0x400b2fa	          0x488902	                    mov qword [rdx], rax	      9273	option.c	FUNCTION_50	CALL_43
0x400b2fd	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9275	option.c	FUNCTION_50
0x400b303	            0x4898	                                    cdqe	      9275	option.c	FUNCTION_50
0x400b305	        0x48c1e006	                              shl rax, 6	      9275	option.c	FUNCTION_50
0x400b309	    0x480500000000	                              add rax, 0	      9275	option.c	FUNCTION_50
0x400b30f	          0x488b00	                    mov rax, qword [rax]	      9275	option.c	FUNCTION_50
0x400b312	          0x80cc01	                                or ah, 1	      9275	option.c	FUNCTION_50
0x400b315	          0x4889c2	                            mov rdx, rax	      9275	option.c	FUNCTION_50
0x400b318	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9275	option.c	FUNCTION_50
0x400b31e	            0x4898	                                    cdqe	      9275	option.c	FUNCTION_50
0x400b320	        0x48c1e006	                              shl rax, 6	      9275	option.c	FUNCTION_50
0x400b324	    0x480500000000	                              add rax, 0	      9275	option.c	FUNCTION_50
0x400b32a	          0x488910	                    mov qword [rax], rdx	      9275	option.c	FUNCTION_50
0x400b32d	    0x8b0500000000	            mov eax, dword [0x0400b333] 	      9278	option.c	FUNCTION_50	IF_98
0x400b333	            0x85c0	                           test eax, eax	      9278	option.c	FUNCTION_50	IF_98
0x400b335	     0xf8505010000	                           jne 0x400b440	      9278	option.c	FUNCTION_50	IF_98
0x400b33b	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      9278	option.c	FUNCTION_50	IF_98
0x400b343	     0xf85f7000000	                           jne 0x400b440	      9278	option.c	FUNCTION_50	IF_98
0x400b349	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b34d	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b351	          0x4889d1	                            mov rcx, rdx	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b354	      0xba00000000	                              mov edx, 0	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b359	      0xbe0a000000	                            mov esi, 0xa	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b35e	          0x4889c7	                            mov rdi, rax	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b361	      0xb800000000	                              mov eax, 0	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b366	      0xe800000000	                          call 0x400b36b	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400b36b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b372	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b376	          0x4889d1	                            mov rcx, rdx	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b379	      0xba00000000	                              mov edx, 0	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b37e	      0xbe0a000000	                            mov esi, 0xa	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b383	          0x4889c7	                            mov rdi, rax	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b386	      0xb800000000	                              mov eax, 0	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b38b	      0xe800000000	                          call 0x400b390	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400b390	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b396	          0x83e004	                              and eax, 4	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b399	            0x85c0	                           test eax, eax	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b39b	            0x7407	                            je 0x400b3a4	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b39d	      0xba00000000	                              mov edx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3a2	            0xeb05	                           jmp 0x400b3a9	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3a4	      0xba00000000	                              mov edx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3a9	        0x488d45b0	                   lea rax, [rbp - 0x50]	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3ad	          0x4889d1	                            mov rcx, rdx	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3b0	      0xba00000000	                              mov edx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3b5	      0xbe07000000	                              mov esi, 7	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3ba	          0x4889c7	                            mov rdi, rax	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3bd	      0xb800000000	                              mov eax, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3c2	      0xe800000000	                          call 0x400b3c7	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400b3c7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400b3cb	      0xbaffffffff	                     mov edx, 0xffffffff	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400b3d0	          0x4889c6	                            mov rsi, rax	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400b3d3	      0xbf3d000000	                           mov edi, 0x3d	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400b3d8	      0xe800000000	                          call 0x400b3dd	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400b3dd	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400b3e1	      0xbaffffffff	                     mov edx, 0xffffffff	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400b3e6	          0x4889c6	                            mov rsi, rax	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400b3e9	      0xbf3e000000	                           mov edi, 0x3e	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400b3ee	      0xe800000000	                          call 0x400b3f3	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400b3f3	        0x488d45b0	                   lea rax, [rbp - 0x50]	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400b3f7	      0xbaffffffff	                     mov edx, 0xffffffff	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400b3fc	          0x4889c6	                            mov rsi, rax	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400b3ff	      0xbf3f000000	                           mov edi, 0x3f	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400b404	      0xe800000000	                          call 0x400b409	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400b409	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b40f	            0x4898	                                    cdqe	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b411	        0x48c1e006	                              shl rax, 6	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b415	    0x480500000000	                              add rax, 0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b41b	          0x488b00	                    mov rax, qword [rax]	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b41e	    0x41b800000000	                              mov r8d, 0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b424	      0xb900000000	                              mov ecx, 0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b429	      0xba00000000	                              mov edx, 0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b42e	          0x4889c6	                            mov rsi, rax	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b431	      0xbf3e000000	                           mov edi, 0x3e	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b436	      0xe800000000	                          call 0x400b43b	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400b43b	      0xe800000000	                          call 0x400b440	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x400b440	      0xe800000000	                          call 0x400b445	      9292	option.c	FUNCTION_50	CALL_52
0x400b445	    0x488b05000000	            mov rax, qword [0x0400b44c] 	      9293	option.c	FUNCTION_50	IF_99
0x400b44c	          0x8b4048	            mov eax, dword [rax + 0x48] 	      9293	option.c	FUNCTION_50	IF_99
0x400b44f	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      9293	option.c	FUNCTION_50	IF_99
0x400b454	            0x742d	                            je 0x400b483	      9293	option.c	FUNCTION_50	IF_99
0x400b456	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9294	option.c	FUNCTION_50	IF_99
0x400b45c	            0x4898	                                    cdqe	      9294	option.c	FUNCTION_50	IF_99
0x400b45e	        0x48c1e006	                              shl rax, 6	      9294	option.c	FUNCTION_50	IF_99
0x400b462	    0x480500000000	                              add rax, 0	      9294	option.c	FUNCTION_50	IF_99
0x400b468	          0x488b00	                    mov rax, qword [rax]	      9294	option.c	FUNCTION_50	IF_99
0x400b46b	      0x2500600004	                      and eax, 0x4006000	      9294	option.c	FUNCTION_50	IF_99
0x400b470	          0x4885c0	                           test rax, rax	      9294	option.c	FUNCTION_50	IF_99
0x400b473	            0x740e	                            je 0x400b483	      9294	option.c	FUNCTION_50	IF_99
0x400b475	    0x488b05000000	            mov rax, qword [0x0400b47c] 	      9295	option.c	FUNCTION_50	IF_99
0x400b47c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9295	option.c	FUNCTION_50	IF_99
0x400b483	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9296	option.c	FUNCTION_50	CALL_53
0x400b489	            0x4898	                                    cdqe	      9296	option.c	FUNCTION_50	CALL_53
0x400b48b	        0x48c1e006	                              shl rax, 6	      9296	option.c	FUNCTION_50	CALL_53
0x400b48f	    0x480500000000	                              add rax, 0	      9296	option.c	FUNCTION_50	CALL_53
0x400b495	          0x488b00	                    mov rax, qword [rax]	      9296	option.c	FUNCTION_50	CALL_53
0x400b498	          0x4889c7	                            mov rdi, rax	      9296	option.c	FUNCTION_50	CALL_53
0x400b49b	      0xe825000000	                   call sym.check_redraw	      9296	option.c	FUNCTION_50	CALL_53
0x400b4a0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      9298	option.c	FUNCTION_50
0x400b4a7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      9299	option.c	FUNCTION_50
0x400b4ab	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9299	option.c	FUNCTION_50
0x400b4b4	            0x7405	                            je 0x400b4bb	      9299	option.c	FUNCTION_50
0x400b4b6	      0xe800000000	                          call 0x400b4bb	      9299	option.c	FUNCTION_50
0x400b4bb	    0x4881c4b80000	                           add rsp, 0xb8	      9299	option.c	FUNCTION_50
0x400b4c2	              0x5b	                                 pop rbx	      9299	option.c	FUNCTION_50
0x400b4c3	              0x5d	                                 pop rbp	      9299	option.c	FUNCTION_50
0x400b4c4	              0xc3	                                     ret	      9299	option.c	FUNCTION_50
string_to_key	ELSE,0:IF,3:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	60
0x4003bd2	              0x55	                                push rbp	      5336	option.c	FUNCTION_19
0x4003bd3	          0x4889e5	                            mov rbp, rsp	      5336	option.c	FUNCTION_19
0x4003bd6	        0x4883ec10	                           sub rsp, 0x10	      5336	option.c	FUNCTION_19
0x4003bda	        0x48897df8	                mov qword [rbp - 8], rdi	      5336	option.c	FUNCTION_19
0x4003bde	          0x8975f4	              mov dword [rbp - 0xc], esi	      5336	option.c	FUNCTION_19
0x4003be1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5337	option.c	FUNCTION_19	IF_1
0x4003be5	           0xfb600	                   movzx eax, byte [rax]	      5337	option.c	FUNCTION_19	IF_1
0x4003be8	            0x3c3c	                            cmp al, 0x3c	      5337	option.c	FUNCTION_19	IF_1
0x4003bea	            0x7515	                           jne 0x4003c01	      5337	option.c	FUNCTION_19	IF_1
0x4003bec	        0x488b45f8	                mov rax, qword [rbp - 8]	      5338	option.c	FUNCTION_19	CALL_1
0x4003bf0	        0x4883c001	                              add rax, 1	      5338	option.c	FUNCTION_19	CALL_1
0x4003bf4	          0x4889c7	                            mov rdi, rax	      5338	option.c	FUNCTION_19	CALL_1
0x4003bf7	      0xe85a810000	                call sym.find_key_option	      5338	option.c	FUNCTION_19	CALL_1
0x4003bfc	      0xe98a000000	                           jmp 0x4003c8b	      5338	option.c	FUNCTION_19	CALL_1
0x4003c01	        0x488b45f8	                mov rax, qword [rbp - 8]	      5339	option.c	FUNCTION_19	IF_2
0x4003c05	           0xfb600	                   movzx eax, byte [rax]	      5339	option.c	FUNCTION_19	IF_2
0x4003c08	            0x3c5e	                            cmp al, 0x5e	      5339	option.c	FUNCTION_19	IF_2
0x4003c0a	            0x7547	                           jne 0x4003c53	      5339	option.c	FUNCTION_19	IF_2
0x4003c0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c10	        0x4883c001	                              add rax, 1	      5340	option.c	FUNCTION_19	CALL_2
0x4003c14	           0xfb600	                   movzx eax, byte [rax]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c17	            0x3c60	                            cmp al, 0x60	      5340	option.c	FUNCTION_19	CALL_2
0x4003c19	            0x760f	                           jbe 0x4003c2a	      5340	option.c	FUNCTION_19	CALL_2
0x4003c1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c1f	        0x4883c001	                              add rax, 1	      5340	option.c	FUNCTION_19	CALL_2
0x4003c23	           0xfb600	                   movzx eax, byte [rax]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c26	            0x3c7a	                            cmp al, 0x7a	      5340	option.c	FUNCTION_19	CALL_2
0x4003c28	            0x7613	                           jbe 0x4003c3d	      5340	option.c	FUNCTION_19	CALL_2
0x4003c2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c2e	        0x4883c001	                              add rax, 1	      5340	option.c	FUNCTION_19	CALL_2
0x4003c32	           0xfb600	                   movzx eax, byte [rax]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c35	          0x83f040	                           xor eax, 0x40	      5340	option.c	FUNCTION_19	CALL_2
0x4003c38	           0xfb6c0	                           movzx eax, al	      5340	option.c	FUNCTION_19	CALL_2
0x4003c3b	            0xeb4e	                           jmp 0x4003c8b	      5340	option.c	FUNCTION_19	CALL_2
0x4003c3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c41	        0x4883c001	                              add rax, 1	      5340	option.c	FUNCTION_19	CALL_2
0x4003c45	           0xfb600	                   movzx eax, byte [rax]	      5340	option.c	FUNCTION_19	CALL_2
0x4003c48	           0xfb6c0	                           movzx eax, al	      5340	option.c	FUNCTION_19	CALL_2
0x4003c4b	          0x83e820	                           sub eax, 0x20	      5340	option.c	FUNCTION_19	CALL_2
0x4003c4e	          0x83f040	                           xor eax, 0x40	      5340	option.c	FUNCTION_19	CALL_2
0x4003c51	            0xeb38	                           jmp 0x4003c8b	      5340	option.c	FUNCTION_19	CALL_2
0x4003c53	        0x837df400	                cmp dword [rbp - 0xc], 0	      5341	option.c	FUNCTION_19	IF_3
0x4003c57	            0x7428	                            je 0x4003c81	      5341	option.c	FUNCTION_19	IF_3
0x4003c59	    0x8b0500000000	            mov eax, dword [0x04003c5f] 	      5342	option.c	FUNCTION_19	CALL_3
0x4003c5f	            0x85c0	                           test eax, eax	      5342	option.c	FUNCTION_19	CALL_3
0x4003c61	            0x7412	                            je 0x4003c75	      5342	option.c	FUNCTION_19	CALL_3
0x4003c63	    0x488b05000000	            mov rax, qword [0x04003c6a] 	      5342	option.c	FUNCTION_19	CALL_3
0x4003c6a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5342	option.c	FUNCTION_19	CALL_3
0x4003c6e	          0x4889d7	                            mov rdi, rdx	      5342	option.c	FUNCTION_19	CALL_3
0x4003c71	            0xffd0	                                call rax	      5342	option.c	FUNCTION_19	CALL_3
0x4003c73	            0xeb16	                           jmp 0x4003c8b	      5342	option.c	FUNCTION_19	CALL_3
0x4003c75	        0x488b45f8	                mov rax, qword [rbp - 8]	      5342	option.c	FUNCTION_19	CALL_3
0x4003c79	           0xfb600	                   movzx eax, byte [rax]	      5342	option.c	FUNCTION_19	CALL_3
0x4003c7c	           0xfb6c0	                           movzx eax, al	      5342	option.c	FUNCTION_19	CALL_3
0x4003c7f	            0xeb0a	                           jmp 0x4003c8b	      5342	option.c	FUNCTION_19	CALL_3
0x4003c81	        0x488b45f8	                mov rax, qword [rbp - 8]	      5343	option.c	FUNCTION_19
0x4003c85	           0xfb600	                   movzx eax, byte [rax]	      5343	option.c	FUNCTION_19
0x4003c88	           0xfb6c0	                           movzx eax, al	      5343	option.c	FUNCTION_19
0x4003c8b	              0xc9	                                   leave	      5344	option.c	FUNCTION_19
0x4003c8c	              0xc3	                                     ret	      5344	option.c	FUNCTION_19
find_key_option	ELSE,1:IF,2:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	62
0x400bd56	              0x55	                                push rbp	      9832	option.c	FUNCTION_60
0x400bd57	          0x4889e5	                            mov rbp, rsp	      9832	option.c	FUNCTION_60
0x400bd5a	        0x4883ec20	                           sub rsp, 0x20	      9832	option.c	FUNCTION_60
0x400bd5e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9832	option.c	FUNCTION_60
0x400bd62	    0x64488b042528	                mov rax, qword fs:[0x28]	      9832	option.c	FUNCTION_60
0x400bd6b	        0x488945f8	                mov qword [rbp - 8], rax	      9832	option.c	FUNCTION_60
0x400bd6f	            0x31c0	                            xor eax, eax	      9832	option.c	FUNCTION_60
0x400bd71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9840	option.c	FUNCTION_60	IF_1
0x400bd75	           0xfb600	                   movzx eax, byte [rax]	      9840	option.c	FUNCTION_60	IF_1
0x400bd78	            0x3c74	                            cmp al, 0x74	      9840	option.c	FUNCTION_60	IF_1
0x400bd7a	            0x7555	                           jne 0x400bdd1	      9840	option.c	FUNCTION_60	IF_1
0x400bd7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9840	option.c	FUNCTION_60	IF_1
0x400bd80	        0x4883c001	                              add rax, 1	      9840	option.c	FUNCTION_60	IF_1
0x400bd84	           0xfb600	                   movzx eax, byte [rax]	      9840	option.c	FUNCTION_60	IF_1
0x400bd87	            0x3c5f	                            cmp al, 0x5f	      9840	option.c	FUNCTION_60	IF_1
0x400bd89	            0x7546	                           jne 0x400bdd1	      9840	option.c	FUNCTION_60	IF_1
0x400bd8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9840	option.c	FUNCTION_60	IF_1
0x400bd8f	        0x4883c002	                              add rax, 2	      9840	option.c	FUNCTION_60	IF_1
0x400bd93	           0xfb600	                   movzx eax, byte [rax]	      9840	option.c	FUNCTION_60	IF_1
0x400bd96	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x400bd98	            0x7437	                            je 0x400bdd1	      9840	option.c	FUNCTION_60	IF_1
0x400bd9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9840	option.c	FUNCTION_60	IF_1
0x400bd9e	        0x4883c003	                              add rax, 3	      9840	option.c	FUNCTION_60	IF_1
0x400bda2	           0xfb600	                   movzx eax, byte [rax]	      9840	option.c	FUNCTION_60	IF_1
0x400bda5	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x400bda7	            0x7428	                            je 0x400bdd1	      9840	option.c	FUNCTION_60	IF_1
0x400bda9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9841	option.c	FUNCTION_60	CALL_1
0x400bdad	        0x4883c002	                              add rax, 2	      9841	option.c	FUNCTION_60	CALL_1
0x400bdb1	           0xfb600	                   movzx eax, byte [rax]	      9841	option.c	FUNCTION_60	CALL_1
0x400bdb4	           0xfb6c0	                           movzx eax, al	      9841	option.c	FUNCTION_60	CALL_1
0x400bdb7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9841	option.c	FUNCTION_60	CALL_1
0x400bdbb	        0x4883c203	                              add rdx, 3	      9841	option.c	FUNCTION_60	CALL_1
0x400bdbf	           0xfb612	                   movzx edx, byte [rdx]	      9841	option.c	FUNCTION_60	CALL_1
0x400bdc2	           0xfb6d2	                           movzx edx, dl	      9841	option.c	FUNCTION_60	CALL_1
0x400bdc5	          0xc1e208	                              shl edx, 8	      9841	option.c	FUNCTION_60	CALL_1
0x400bdc8	             0x1d0	                            add eax, edx	      9841	option.c	FUNCTION_60	CALL_1
0x400bdca	            0xf7d8	                                 neg eax	      9841	option.c	FUNCTION_60	CALL_1
0x400bdcc	          0x8945f4	              mov dword [rbp - 0xc], eax	      9841	option.c	FUNCTION_60	CALL_1
0x400bdcf	            0xeb44	                           jmp 0x400be15	      9841	option.c	FUNCTION_60	CALL_1
0x400bdd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9844	option.c	FUNCTION_60	ELSE_1
0x400bdd5	        0x4883e801	                              sub rax, 1	      9844	option.c	FUNCTION_60	ELSE_1
0x400bdd9	        0x488945e8	             mov qword [rbp - 0x18], rax	      9844	option.c	FUNCTION_60	ELSE_1
0x400bddd	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x400bde4	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400bde8	        0x488d45e8	                   lea rax, [rbp - 0x18]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400bdec	    0x41b800000000	                              mov r8d, 0	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400bdf2	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400bdf7	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400bdfc	          0x4889c7	                            mov rdi, rax	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400bdff	      0xe800000000	                          call 0x400be04	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400be04	          0x8945f4	              mov dword [rbp - 0xc], eax	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400be07	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400be0a	            0x85c0	                           test eax, eax	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400be0c	            0x7407	                            je 0x400be15	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400be0e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400be15	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9850	option.c	FUNCTION_60
0x400be18	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9851	option.c	FUNCTION_60
0x400be1c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9851	option.c	FUNCTION_60
0x400be25	            0x7405	                            je 0x400be2c	      9851	option.c	FUNCTION_60
0x400be27	      0xe800000000	                          call 0x400be2c	      9851	option.c	FUNCTION_60
0x400be2c	              0xc9	                                   leave	      9851	option.c	FUNCTION_60
0x400be2d	              0xc3	                                     ret	      9851	option.c	FUNCTION_60
put_setbool	ELSE,0:IF,2:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	37
0x400ca9b	              0x55	                                push rbp	     10262	option.c	FUNCTION_68
0x400ca9c	          0x4889e5	                            mov rbp, rsp	     10262	option.c	FUNCTION_68
0x400ca9f	        0x4883ec20	                           sub rsp, 0x20	     10262	option.c	FUNCTION_68
0x400caa3	        0x48897df8	                mov qword [rbp - 8], rdi	     10262	option.c	FUNCTION_68
0x400caa7	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10262	option.c	FUNCTION_68
0x400caab	        0x488955e8	             mov qword [rbp - 0x18], rdx	     10262	option.c	FUNCTION_68
0x400caaf	          0x894de4	             mov dword [rbp - 0x1c], ecx	     10262	option.c	FUNCTION_68
0x400cab2	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10263	option.c	FUNCTION_68	IF_1
0x400cab6	            0x7907	                           jns 0x400cabf	     10263	option.c	FUNCTION_68	IF_1
0x400cab8	      0xb801000000	                              mov eax, 1	     10264	option.c	FUNCTION_68	IF_1
0x400cabd	            0xeb56	                           jmp 0x400cb15	     10264	option.c	FUNCTION_68	IF_1
0x400cabf	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cac3	            0x7407	                            je 0x400cacc	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cac5	      0xbe00000000	                              mov esi, 0	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400caca	            0xeb05	                           jmp 0x400cad1	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cacc	      0xbe00000000	                              mov esi, 0	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cad1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cad5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cad9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cadd	          0x4989c8	                             mov r8, rcx	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cae0	          0x4889f1	                            mov rcx, rsi	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cae3	      0xbe00000000	                              mov esi, 0	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400cae8	          0x4889c7	                            mov rdi, rax	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400caeb	      0xb800000000	                              mov eax, 0	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400caf0	      0xe800000000	                          call 0x400caf5	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400caf5	            0x85c0	                           test eax, eax	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400caf7	            0x7810	                            js 0x400cb09	     10265	option.c	FUNCTION_68	IF_2	CALL_1
0x400caf9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10266	option.c	FUNCTION_68	IF_2	CALL_2
0x400cafd	          0x4889c7	                            mov rdi, rax	     10266	option.c	FUNCTION_68	IF_2	CALL_2
0x400cb00	      0xe800000000	                          call 0x400cb05	     10266	option.c	FUNCTION_68	IF_2	CALL_2
0x400cb05	            0x85c0	                           test eax, eax	     10266	option.c	FUNCTION_68	IF_2	CALL_2
0x400cb07	            0x7907	                           jns 0x400cb10	     10266	option.c	FUNCTION_68	IF_2	CALL_2
0x400cb09	      0xb800000000	                              mov eax, 0	     10267	option.c	FUNCTION_68	IF_2
0x400cb0e	            0xeb05	                           jmp 0x400cb15	     10267	option.c	FUNCTION_68	IF_2
0x400cb10	      0xb801000000	                              mov eax, 1	     10268	option.c	FUNCTION_68
0x400cb15	              0xc9	                                   leave	     10269	option.c	FUNCTION_68
0x400cb16	              0xc3	                                     ret	     10269	option.c	FUNCTION_68
unset_global_local_option	ELSE,0:IF,1:SWITCH,1:CALL,20:DO,0:WHILE,0:functions,0:FOR,0	193
0x400cecc	              0x55	                                push rbp	     10429	option.c	FUNCTION_75
0x400cecd	          0x4889e5	                            mov rbp, rsp	     10429	option.c	FUNCTION_75
0x400ced0	        0x4883ec30	                           sub rsp, 0x30	     10429	option.c	FUNCTION_75
0x400ced4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     10429	option.c	FUNCTION_75
0x400ced8	        0x488975d0	             mov qword [rbp - 0x30], rsi	     10429	option.c	FUNCTION_75
0x400cedc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10432	option.c	FUNCTION_75
0x400cee0	        0x488945f0	             mov qword [rbp - 0x10], rax	     10432	option.c	FUNCTION_75
0x400cee4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10434	option.c	FUNCTION_75	CALL_1
0x400cee8	          0x4889c7	                            mov rdi, rax	     10434	option.c	FUNCTION_75	CALL_1
0x400ceeb	      0xe8b4e6ffff	                     call sym.findoption	     10434	option.c	FUNCTION_75	CALL_1
0x400cef0	          0x8945ec	             mov dword [rbp - 0x14], eax	     10434	option.c	FUNCTION_75	CALL_1
0x400cef3	        0x837dec00	               cmp dword [rbp - 0x14], 0	     10435	option.c	FUNCTION_75	IF_1
0x400cef7	     0xf8836030000	                            js 0x400d233	     10435	option.c	FUNCTION_75	IF_1
0x400cefd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10437	option.c	FUNCTION_75
0x400cf00	            0x4898	                                    cdqe	     10437	option.c	FUNCTION_75
0x400cf02	        0x48c1e006	                              shl rax, 6	     10437	option.c	FUNCTION_75
0x400cf06	    0x480500000000	                              add rax, 0	     10437	option.c	FUNCTION_75
0x400cf0c	        0x488945f8	                mov qword [rbp - 8], rax	     10437	option.c	FUNCTION_75
0x400cf10	        0x488b45f8	                mov rax, qword [rbp - 8]	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf14	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf17	      0x3d18500000	                         cmp eax, 0x5018	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf1c	     0xf84fd010000	                            je 0x400d11f	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf22	      0x3d18500000	                         cmp eax, 0x5018	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf27	     0xf8f97000000	                            jg 0x400cfc4	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf2d	      0x3d06500000	                         cmp eax, 0x5006	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf32	     0xf845a020000	                            je 0x400d192	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf38	      0x3d06500000	                         cmp eax, 0x5006	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf3d	            0x7f3d	                            jg 0x400cf7c	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf3f	      0x3d01500000	                         cmp eax, 0x5001	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf44	     0xf844a010000	                            je 0x400d094	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf4a	      0x3d01500000	                         cmp eax, 0x5001	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf4f	            0x7f10	                            jg 0x400cf61	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf51	      0x3d21300000	                         cmp eax, 0x3021	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf56	     0xf8489020000	                            je 0x400d1e5	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf5c	      0xe9d3020000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf61	      0x3d03500000	                         cmp eax, 0x5003	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf66	     0xf843b010000	                            je 0x400d0a7	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf6c	      0x3d05500000	                         cmp eax, 0x5005	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf71	     0xf8404020000	                            je 0x400d17b	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf77	      0xe9b8020000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf7c	      0x3d14500000	                         cmp eax, 0x5014	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf81	     0xf84af010000	                            je 0x400d136	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf87	      0x3d14500000	                         cmp eax, 0x5014	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf8c	            0x7f1b	                            jg 0x400cfa9	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf8e	      0x3d07500000	                         cmp eax, 0x5007	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf93	     0xf8410020000	                            je 0x400d1a9	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf99	      0x3d10500000	                         cmp eax, 0x5010	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cf9e	     0xf842d020000	                            je 0x400d1d1	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfa4	      0xe98b020000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfa9	      0x3d15500000	                         cmp eax, 0x5015	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfae	     0xf8499010000	                            je 0x400d14d	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfb4	      0x3d17500000	                         cmp eax, 0x5017	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfb9	     0xf8449010000	                            je 0x400d108	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfbf	      0xe970020000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfc4	      0x3d30500000	                         cmp eax, 0x5030	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfc9	     0xf843b020000	                            je 0x400d20a	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfcf	      0x3d30500000	                         cmp eax, 0x5030	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfd4	            0x7f35	                            jg 0x400d00b	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfd6	      0x3d1e500000	                         cmp eax, 0x501e	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfdb	     0xf8483010000	                            je 0x400d164	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfe1	      0x3d1e500000	                         cmp eax, 0x501e	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfe6	            0x7f0c	                            jg 0x400cff4	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfe8	      0x3d1b500000	                         cmp eax, 0x501b	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfed	            0x7460	                            je 0x400d04f	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfef	      0xe940020000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cff4	      0x3d1f500000	                         cmp eax, 0x501f	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cff9	     0xf84be010000	                            je 0x400d1bd	     10439	option.c	FUNCTION_75	SWITCH_1
0x400cfff	      0x3d2e500000	                         cmp eax, 0x502e	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d004	            0x7460	                            je 0x400d066	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d006	      0xe929020000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d00b	      0x3d47500000	                         cmp eax, 0x5047	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d010	     0xf84b6000000	                            je 0x400d0cc	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d016	      0x3d47500000	                         cmp eax, 0x5047	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d01b	            0x7f17	                            jg 0x400d034	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d01d	      0x3d31500000	                         cmp eax, 0x5031	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d022	     0xf84f6010000	                            je 0x400d21e	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d028	      0x3d38500000	                         cmp eax, 0x5038	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d02d	            0x744e	                            je 0x400d07d	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d02f	      0xe900020000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d034	      0x3d48500000	                         cmp eax, 0x5048	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d039	     0xf84a4000000	                            je 0x400d0e3	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d03f	      0x3d4d500000	                         cmp eax, 0x504d	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d044	     0xf84af010000	                            je 0x400d1f9	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d04a	      0xe9e5010000	                           jmp 0x400d234	     10439	option.c	FUNCTION_75	SWITCH_1
0x400d04f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10443	option.c	FUNCTION_75	SWITCH_1	CALL_2
0x400d053	    0x480508160000	                         add rax, 0x1608	     10443	option.c	FUNCTION_75	SWITCH_1	CALL_2
0x400d059	          0x4889c7	                            mov rdi, rax	     10443	option.c	FUNCTION_75	SWITCH_1	CALL_2
0x400d05c	      0xe800000000	                          call 0x400d061	     10443	option.c	FUNCTION_75	SWITCH_1	CALL_2
0x400d061	      0xe9ce010000	                           jmp 0x400d234	     10444	option.c	FUNCTION_75	SWITCH_1
0x400d066	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10446	option.c	FUNCTION_75	SWITCH_1	CALL_3
0x400d06a	    0x480518150000	                         add rax, 0x1518	     10446	option.c	FUNCTION_75	SWITCH_1	CALL_3
0x400d070	          0x4889c7	                            mov rdi, rax	     10446	option.c	FUNCTION_75	SWITCH_1	CALL_3
0x400d073	      0xe800000000	                          call 0x400d078	     10446	option.c	FUNCTION_75	SWITCH_1	CALL_3
0x400d078	      0xe9b7010000	                           jmp 0x400d234	     10447	option.c	FUNCTION_75	SWITCH_1
0x400d07d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10449	option.c	FUNCTION_75	SWITCH_1	CALL_4
0x400d081	    0x480510160000	                         add rax, 0x1610	     10449	option.c	FUNCTION_75	SWITCH_1	CALL_4
0x400d087	          0x4889c7	                            mov rdi, rax	     10449	option.c	FUNCTION_75	SWITCH_1	CALL_4
0x400d08a	      0xe800000000	                          call 0x400d08f	     10449	option.c	FUNCTION_75	SWITCH_1	CALL_4
0x400d08f	      0xe9a0010000	                           jmp 0x400d234	     10450	option.c	FUNCTION_75	SWITCH_1
0x400d094	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10452	option.c	FUNCTION_75	SWITCH_1
0x400d098	    0xc78018160000	   mov dword [rax + 0x1618], 0xffffffff 	     10452	option.c	FUNCTION_75	SWITCH_1
0x400d0a2	      0xe98d010000	                           jmp 0x400d234	     10453	option.c	FUNCTION_75	SWITCH_1
0x400d0a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10455	option.c	FUNCTION_75	SWITCH_1	CALL_5
0x400d0ab	    0x4805f8130000	                         add rax, 0x13f8	     10455	option.c	FUNCTION_75	SWITCH_1	CALL_5
0x400d0b1	          0x4889c7	                            mov rdi, rax	     10455	option.c	FUNCTION_75	SWITCH_1	CALL_5
0x400d0b4	      0xe800000000	                          call 0x400d0b9	     10455	option.c	FUNCTION_75	SWITCH_1	CALL_5
0x400d0b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10456	option.c	FUNCTION_75	SWITCH_1
0x400d0bd	    0xc78000140000	            mov dword [rax + 0x1400], 0 	     10456	option.c	FUNCTION_75	SWITCH_1
0x400d0c7	      0xe968010000	                           jmp 0x400d234	     10457	option.c	FUNCTION_75	SWITCH_1
0x400d0cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10459	option.c	FUNCTION_75	SWITCH_1	CALL_6
0x400d0d0	    0x480520160000	                         add rax, 0x1620	     10459	option.c	FUNCTION_75	SWITCH_1	CALL_6
0x400d0d6	          0x4889c7	                            mov rdi, rax	     10459	option.c	FUNCTION_75	SWITCH_1	CALL_6
0x400d0d9	      0xe800000000	                          call 0x400d0de	     10459	option.c	FUNCTION_75	SWITCH_1	CALL_6
0x400d0de	      0xe951010000	                           jmp 0x400d234	     10460	option.c	FUNCTION_75	SWITCH_1
0x400d0e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10462	option.c	FUNCTION_75	SWITCH_1	CALL_7
0x400d0e7	    0x480528160000	                         add rax, 0x1628	     10462	option.c	FUNCTION_75	SWITCH_1	CALL_7
0x400d0ed	          0x4889c7	                            mov rdi, rax	     10462	option.c	FUNCTION_75	SWITCH_1	CALL_7
0x400d0f0	      0xe800000000	                          call 0x400d0f5	     10462	option.c	FUNCTION_75	SWITCH_1	CALL_7
0x400d0f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10463	option.c	FUNCTION_75	SWITCH_1
0x400d0f9	    0xc78030160000	            mov dword [rax + 0x1630], 0 	     10463	option.c	FUNCTION_75	SWITCH_1
0x400d103	      0xe92c010000	                           jmp 0x400d234	     10464	option.c	FUNCTION_75	SWITCH_1
0x400d108	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10467	option.c	FUNCTION_75	SWITCH_1	CALL_8
0x400d10c	    0x4805c0140000	                         add rax, 0x14c0	     10467	option.c	FUNCTION_75	SWITCH_1	CALL_8
0x400d112	          0x4889c7	                            mov rdi, rax	     10467	option.c	FUNCTION_75	SWITCH_1	CALL_8
0x400d115	      0xe800000000	                          call 0x400d11a	     10467	option.c	FUNCTION_75	SWITCH_1	CALL_8
0x400d11a	      0xe915010000	                           jmp 0x400d234	     10468	option.c	FUNCTION_75	SWITCH_1
0x400d11f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10470	option.c	FUNCTION_75	SWITCH_1	CALL_9
0x400d123	    0x4805c8140000	                         add rax, 0x14c8	     10470	option.c	FUNCTION_75	SWITCH_1	CALL_9
0x400d129	          0x4889c7	                            mov rdi, rax	     10470	option.c	FUNCTION_75	SWITCH_1	CALL_9
0x400d12c	      0xe800000000	                          call 0x400d131	     10470	option.c	FUNCTION_75	SWITCH_1	CALL_9
0x400d131	      0xe9fe000000	                           jmp 0x400d234	     10471	option.c	FUNCTION_75	SWITCH_1
0x400d136	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10475	option.c	FUNCTION_75	SWITCH_1	CALL_10
0x400d13a	    0x480538160000	                         add rax, 0x1638	     10475	option.c	FUNCTION_75	SWITCH_1	CALL_10
0x400d140	          0x4889c7	                            mov rdi, rax	     10475	option.c	FUNCTION_75	SWITCH_1	CALL_10
0x400d143	      0xe800000000	                          call 0x400d148	     10475	option.c	FUNCTION_75	SWITCH_1	CALL_10
0x400d148	      0xe9e7000000	                           jmp 0x400d234	     10476	option.c	FUNCTION_75	SWITCH_1
0x400d14d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10478	option.c	FUNCTION_75	SWITCH_1	CALL_11
0x400d151	    0x480540160000	                         add rax, 0x1640	     10478	option.c	FUNCTION_75	SWITCH_1	CALL_11
0x400d157	          0x4889c7	                            mov rdi, rax	     10478	option.c	FUNCTION_75	SWITCH_1	CALL_11
0x400d15a	      0xe800000000	                          call 0x400d15f	     10478	option.c	FUNCTION_75	SWITCH_1	CALL_11
0x400d15f	      0xe9d0000000	                           jmp 0x400d234	     10479	option.c	FUNCTION_75	SWITCH_1
0x400d164	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10482	option.c	FUNCTION_75	SWITCH_1	CALL_12
0x400d168	    0x4805f8140000	                         add rax, 0x14f8	     10482	option.c	FUNCTION_75	SWITCH_1	CALL_12
0x400d16e	          0x4889c7	                            mov rdi, rax	     10482	option.c	FUNCTION_75	SWITCH_1	CALL_12
0x400d171	      0xe800000000	                          call 0x400d176	     10482	option.c	FUNCTION_75	SWITCH_1	CALL_12
0x400d176	      0xe9b9000000	                           jmp 0x400d234	     10483	option.c	FUNCTION_75	SWITCH_1
0x400d17b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10486	option.c	FUNCTION_75	SWITCH_1	CALL_13
0x400d17f	    0x480500160000	                         add rax, 0x1600	     10486	option.c	FUNCTION_75	SWITCH_1	CALL_13
0x400d185	          0x4889c7	                            mov rdi, rax	     10486	option.c	FUNCTION_75	SWITCH_1	CALL_13
0x400d188	      0xe800000000	                          call 0x400d18d	     10486	option.c	FUNCTION_75	SWITCH_1	CALL_13
0x400d18d	      0xe9a2000000	                           jmp 0x400d234	     10487	option.c	FUNCTION_75	SWITCH_1
0x400d192	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10489	option.c	FUNCTION_75	SWITCH_1	CALL_14
0x400d196	    0x4805f0150000	                         add rax, 0x15f0	     10489	option.c	FUNCTION_75	SWITCH_1	CALL_14
0x400d19c	          0x4889c7	                            mov rdi, rax	     10489	option.c	FUNCTION_75	SWITCH_1	CALL_14
0x400d19f	      0xe800000000	                          call 0x400d1a4	     10489	option.c	FUNCTION_75	SWITCH_1	CALL_14
0x400d1a4	      0xe98b000000	                           jmp 0x400d234	     10490	option.c	FUNCTION_75	SWITCH_1
0x400d1a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10492	option.c	FUNCTION_75	SWITCH_1	CALL_15
0x400d1ad	    0x4805f8150000	                         add rax, 0x15f8	     10492	option.c	FUNCTION_75	SWITCH_1	CALL_15
0x400d1b3	          0x4889c7	                            mov rdi, rax	     10492	option.c	FUNCTION_75	SWITCH_1	CALL_15
0x400d1b6	      0xe800000000	                          call 0x400d1bb	     10492	option.c	FUNCTION_75	SWITCH_1	CALL_15
0x400d1bb	            0xeb77	                           jmp 0x400d234	     10493	option.c	FUNCTION_75	SWITCH_1
0x400d1bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10497	option.c	FUNCTION_75	SWITCH_1	CALL_16
0x400d1c1	    0x480538170000	                         add rax, 0x1738	     10497	option.c	FUNCTION_75	SWITCH_1	CALL_16
0x400d1c7	          0x4889c7	                            mov rdi, rax	     10497	option.c	FUNCTION_75	SWITCH_1	CALL_16
0x400d1ca	      0xe800000000	                          call 0x400d1cf	     10497	option.c	FUNCTION_75	SWITCH_1	CALL_16
0x400d1cf	            0xeb63	                           jmp 0x400d234	     10498	option.c	FUNCTION_75	SWITCH_1
0x400d1d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10502	option.c	FUNCTION_75	SWITCH_1	CALL_17
0x400d1d5	    0x480548170000	                         add rax, 0x1748	     10502	option.c	FUNCTION_75	SWITCH_1	CALL_17
0x400d1db	          0x4889c7	                            mov rdi, rax	     10502	option.c	FUNCTION_75	SWITCH_1	CALL_17
0x400d1de	      0xe800000000	                          call 0x400d1e3	     10502	option.c	FUNCTION_75	SWITCH_1	CALL_17
0x400d1e3	            0xeb4f	                           jmp 0x400d234	     10503	option.c	FUNCTION_75	SWITCH_1
0x400d1e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10507	option.c	FUNCTION_75	SWITCH_1	CALL_18
0x400d1e9	    0x480580020000	                          add rax, 0x280	     10507	option.c	FUNCTION_75	SWITCH_1	CALL_18
0x400d1ef	          0x4889c7	                            mov rdi, rax	     10507	option.c	FUNCTION_75	SWITCH_1	CALL_18
0x400d1f2	      0xe800000000	                          call 0x400d1f7	     10507	option.c	FUNCTION_75	SWITCH_1	CALL_18
0x400d1f7	            0xeb3b	                           jmp 0x400d234	     10508	option.c	FUNCTION_75	SWITCH_1
0x400d1f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10511	option.c	FUNCTION_75	SWITCH_1
0x400d1fd	    0x48c780481600	mov qword [rax + 0x1648], 0xfffffffffffe1dc0 	     10511	option.c	FUNCTION_75	SWITCH_1
0x400d208	            0xeb2a	                           jmp 0x400d234	     10512	option.c	FUNCTION_75	SWITCH_1
0x400d20a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10515	option.c	FUNCTION_75	SWITCH_1	CALL_19
0x400d20e	    0x480558160000	                         add rax, 0x1658	     10515	option.c	FUNCTION_75	SWITCH_1	CALL_19
0x400d214	          0x4889c7	                            mov rdi, rax	     10515	option.c	FUNCTION_75	SWITCH_1	CALL_19
0x400d217	      0xe800000000	                          call 0x400d21c	     10515	option.c	FUNCTION_75	SWITCH_1	CALL_19
0x400d21c	            0xeb16	                           jmp 0x400d234	     10516	option.c	FUNCTION_75	SWITCH_1
0x400d21e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10520	option.c	FUNCTION_75	SWITCH_1	CALL_20
0x400d222	    0x480528150000	                         add rax, 0x1528	     10520	option.c	FUNCTION_75	SWITCH_1	CALL_20
0x400d228	          0x4889c7	                            mov rdi, rax	     10520	option.c	FUNCTION_75	SWITCH_1	CALL_20
0x400d22b	      0xe800000000	                          call 0x400d230	     10520	option.c	FUNCTION_75	SWITCH_1	CALL_20
0x400d230	              0x90	                                     nop	     10521	option.c	FUNCTION_75	SWITCH_1
0x400d231	            0xeb01	                           jmp 0x400d234	     10521	option.c	FUNCTION_75	SWITCH_1
0x400d233	              0x90	                                     nop	     10436	option.c	FUNCTION_75	IF_1
0x400d234	              0xc9	                                   leave	     10524	option.c	FUNCTION_75
0x400d235	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
did_set_option	ELSE,1:IF,2:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	52
0x4003ad3	              0x55	                                push rbp	      5300	option.c	FUNCTION_17
0x4003ad4	          0x4889e5	                            mov rbp, rsp	      5300	option.c	FUNCTION_17
0x4003ad7	        0x4883ec20	                           sub rsp, 0x20	      5300	option.c	FUNCTION_17
0x4003adb	          0x897dec	             mov dword [rbp - 0x14], edi	      5300	option.c	FUNCTION_17
0x4003ade	          0x8975e8	             mov dword [rbp - 0x18], esi	      5300	option.c	FUNCTION_17
0x4003ae1	          0x8955e4	             mov dword [rbp - 0x1c], edx	      5300	option.c	FUNCTION_17
0x4003ae4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5303	option.c	FUNCTION_17
0x4003ae7	            0x4898	                                    cdqe	      5303	option.c	FUNCTION_17
0x4003ae9	        0x48c1e006	                              shl rax, 6	      5303	option.c	FUNCTION_17
0x4003aed	    0x480500000000	                              add rax, 0	      5303	option.c	FUNCTION_17
0x4003af3	          0x488b00	                    mov rax, qword [rax]	      5303	option.c	FUNCTION_17
0x4003af6	          0x80cc01	                                or ah, 1	      5303	option.c	FUNCTION_17
0x4003af9	          0x4889c2	                            mov rdx, rax	      5303	option.c	FUNCTION_17
0x4003afc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5303	option.c	FUNCTION_17
0x4003aff	            0x4898	                                    cdqe	      5303	option.c	FUNCTION_17
0x4003b01	        0x48c1e006	                              shl rax, 6	      5303	option.c	FUNCTION_17
0x4003b05	    0x480500000000	                              add rax, 0	      5303	option.c	FUNCTION_17
0x4003b0b	          0x488910	                    mov qword [rax], rdx	      5303	option.c	FUNCTION_17
0x4003b0e	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      5308	option.c	FUNCTION_17
0x4003b11	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5308	option.c	FUNCTION_17
0x4003b14	            0x89d6	                            mov esi, edx	      5308	option.c	FUNCTION_17
0x4003b16	            0x89c7	                            mov edi, eax	      5308	option.c	FUNCTION_17
0x4003b18	      0xe8780d0000	                  call sym.insecure_flag	      5308	option.c	FUNCTION_17
0x4003b1d	        0x488945f8	                mov qword [rbp - 8], rax	      5308	option.c	FUNCTION_17
0x4003b21	    0x8b0500000000	            mov eax, dword [0x04003b27] 	      5309	option.c	FUNCTION_17	IF_1
0x4003b27	            0x85c0	                           test eax, eax	      5309	option.c	FUNCTION_17	IF_1
0x4003b29	            0x7514	                           jne 0x4003b3f	      5309	option.c	FUNCTION_17	IF_1
0x4003b2b	    0x8b0500000000	            mov eax, dword [0x04003b31] 	      5311	option.c	FUNCTION_17	IF_1
0x4003b31	            0x85c0	                           test eax, eax	      5311	option.c	FUNCTION_17	IF_1
0x4003b33	            0x750a	                           jne 0x4003b3f	      5311	option.c	FUNCTION_17	IF_1
0x4003b35	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5313	option.c	FUNCTION_17	IF_1
0x4003b38	          0x83e008	                              and eax, 8	      5313	option.c	FUNCTION_17	IF_1
0x4003b3b	            0x85c0	                           test eax, eax	      5313	option.c	FUNCTION_17	IF_1
0x4003b3d	            0x7419	                            je 0x4003b58	      5313	option.c	FUNCTION_17	IF_1
0x4003b3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5314	option.c	FUNCTION_17	IF_1
0x4003b43	          0x488b00	                    mov rax, qword [rax]	      5314	option.c	FUNCTION_17	IF_1
0x4003b46	    0x480d00008000	                        or rax, 0x800000	      5314	option.c	FUNCTION_17	IF_1
0x4003b4c	          0x4889c2	                            mov rdx, rax	      5314	option.c	FUNCTION_17	IF_1
0x4003b4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5314	option.c	FUNCTION_17	IF_1
0x4003b53	          0x488910	                    mov qword [rax], rdx	      5314	option.c	FUNCTION_17	IF_1
0x4003b56	            0xeb1d	                           jmp 0x4003b75	      5317	option.c	FUNCTION_17
0x4003b58	        0x837de400	               cmp dword [rbp - 0x1c], 0	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b5c	            0x7417	                            je 0x4003b75	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b62	          0x488b00	                    mov rax, qword [rax]	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b65	    0x4825ffff7fff	             and rax, 0xffffffffff7fffff	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b6b	          0x4889c2	                            mov rdx, rax	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b72	          0x488910	                    mov qword [rax], rdx	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4003b75	              0x90	                                     nop	      5317	option.c	FUNCTION_17
0x4003b76	              0xc9	                                   leave	      5317	option.c	FUNCTION_17
0x4003b77	              0xc3	                                     ret	      5317	option.c	FUNCTION_17
check_opt_wim	ELSE,3:IF,7:SWITCH,0:CALL,4:DO,0:WHILE,1:functions,0:FOR,4	170
0x4011497	              0x55	                                push rbp	     12388	option.c	FUNCTION_108
0x4011498	          0x4889e5	                            mov rbp, rsp	     12388	option.c	FUNCTION_108
0x401149b	        0x4883ec20	                           sub rsp, 0x20	     12388	option.c	FUNCTION_108
0x401149f	    0x64488b042528	                mov rax, qword fs:[0x28]	     12388	option.c	FUNCTION_108
0x40114a8	        0x488945f8	                mov qword [rbp - 8], rax	     12388	option.c	FUNCTION_108
0x40114ac	            0x31c0	                            xor eax, eax	     12388	option.c	FUNCTION_108
0x40114ae	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     12392	option.c	FUNCTION_108
0x40114b5	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12394	option.c	FUNCTION_108	FOR_1
0x40114bc	            0xeb0e	                           jmp 0x40114cc	     12394	option.c	FUNCTION_108	FOR_1
0x40114be	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12395	option.c	FUNCTION_108	FOR_1
0x40114c1	            0x4898	                                    cdqe	     12395	option.c	FUNCTION_108	FOR_1
0x40114c3	      0xc64405f000	          mov byte [rbp + rax - 0x10], 0	     12395	option.c	FUNCTION_108	FOR_1
0x40114c8	        0x8345e001	               add dword [rbp - 0x20], 1	     12394	option.c	FUNCTION_108	FOR_1
0x40114cc	        0x837de003	               cmp dword [rbp - 0x20], 3	     12394	option.c	FUNCTION_108	FOR_1
0x40114d0	            0x7eec	                           jle 0x40114be	     12394	option.c	FUNCTION_108	FOR_1
0x40114d2	    0x488b05000000	            mov rax, qword [0x040114d9] 	     12397	option.c	FUNCTION_108	FOR_2
0x40114d9	        0x488945e8	             mov qword [rbp - 0x18], rax	     12397	option.c	FUNCTION_108	FOR_2
0x40114dd	      0xe976010000	                           jmp 0x4011658	     12397	option.c	FUNCTION_108	FOR_2
0x40114e2	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114e9	            0xeb04	                           jmp 0x40114ef	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114eb	        0x8345e001	               add dword [rbp - 0x20], 1	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114ef	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114f2	          0x4863d0	                         movsxd rdx, eax	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114f9	          0x4801d0	                            add rax, rdx	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114fc	           0xfb600	                   movzx eax, byte [rax]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40114ff	           0xfb6c0	                           movzx eax, al	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011502	          0x83e841	                           sub eax, 0x41	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011505	          0x83f819	                           cmp eax, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011508	            0x76e1	                           jbe 0x40114eb	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x401150a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x401150d	          0x4863d0	                         movsxd rdx, eax	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011510	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011514	          0x4801d0	                            add rax, rdx	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011517	           0xfb600	                   movzx eax, byte [rax]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x401151a	           0xfb6c0	                           movzx eax, al	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x401151d	          0x83e861	                           sub eax, 0x61	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011520	          0x83f819	                           cmp eax, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011523	            0x76c6	                           jbe 0x40114eb	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4011525	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011528	          0x4863d0	                         movsxd rdx, eax	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401152b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401152f	          0x4801d0	                            add rax, rdx	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011532	           0xfb600	                   movzx eax, byte [rax]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011535	            0x84c0	                             test al, al	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011537	            0x7432	                            je 0x401156b	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011539	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401153c	          0x4863d0	                         movsxd rdx, eax	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401153f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011543	          0x4801d0	                            add rax, rdx	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011546	           0xfb600	                   movzx eax, byte [rax]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011549	            0x3c2c	                            cmp al, 0x2c	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401154b	            0x741e	                            je 0x401156b	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401154d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011550	          0x4863d0	                         movsxd rdx, eax	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011553	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011557	          0x4801d0	                            add rax, rdx	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401155a	           0xfb600	                   movzx eax, byte [rax]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401155d	            0x3c3a	                            cmp al, 0x3a	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x401155f	            0x740a	                            je 0x401156b	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4011561	      0xb800000000	                              mov eax, 0	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x4011566	      0xe94f010000	                           jmp 0x40116ba	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x401156b	        0x837de007	               cmp dword [rbp - 0x20], 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x401156f	            0x7534	                           jne 0x40115a5	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4011571	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4011575	      0xba07000000	                              mov edx, 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x401157a	      0xbe00000000	                              mov esi, 0	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x401157f	          0x4889c7	                            mov rdi, rax	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4011582	      0xe800000000	                          call 0x4011587	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4011587	            0x85c0	                           test eax, eax	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4011589	            0x751a	                           jne 0x40115a5	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x401158b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x401158e	            0x4898	                                    cdqe	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4011590	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4011595	          0x83c802	                               or eax, 2	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4011598	            0x89c2	                            mov edx, eax	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x401159a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x401159d	            0x4898	                                    cdqe	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x401159f	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x40115a3	            0xeb7e	                           jmp 0x4011623	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x40115a5	        0x837de004	               cmp dword [rbp - 0x20], 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115a9	            0x7534	                           jne 0x40115df	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115af	      0xba04000000	                              mov edx, 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115b4	      0xbe00000000	                              mov esi, 0	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115b9	          0x4889c7	                            mov rdi, rax	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115bc	      0xe800000000	                          call 0x40115c1	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115c1	            0x85c0	                           test eax, eax	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115c3	            0x751a	                           jne 0x40115df	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40115c5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115c8	            0x4898	                                    cdqe	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115ca	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115cf	          0x83c801	                               or eax, 1	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115d2	            0x89c2	                            mov edx, eax	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115d4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115d7	            0x4898	                                    cdqe	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115d9	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115dd	            0xeb44	                           jmp 0x4011623	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40115df	        0x837de004	               cmp dword [rbp - 0x20], 4	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115e3	            0x7534	                           jne 0x4011619	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115e9	      0xba04000000	                              mov edx, 4	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115ee	      0xbe00000000	                              mov esi, 0	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115f3	          0x4889c7	                            mov rdi, rax	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115f6	      0xe800000000	                          call 0x40115fb	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115fb	            0x85c0	                           test eax, eax	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115fd	            0x751a	                           jne 0x4011619	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x40115ff	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4011602	            0x4898	                                    cdqe	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4011604	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4011609	          0x83c804	                               or eax, 4	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x401160c	            0x89c2	                            mov edx, eax	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x401160e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4011611	            0x4898	                                    cdqe	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4011613	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4011617	            0xeb0a	                           jmp 0x4011623	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4011619	      0xb800000000	                              mov eax, 0	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x401161e	      0xe997000000	                           jmp 0x40116ba	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x4011623	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12411	option.c	FUNCTION_108	FOR_2
0x4011626	            0x4898	                                    cdqe	     12411	option.c	FUNCTION_108	FOR_2
0x4011628	        0x480145e8	            add qword [rbp - 0x18], rax 	     12411	option.c	FUNCTION_108	FOR_2
0x401162c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4011630	           0xfb600	                   movzx eax, byte [rax]	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4011633	            0x84c0	                             test al, al	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4011635	            0x7432	                            je 0x4011669	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4011637	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x401163b	           0xfb600	                   movzx eax, byte [rax]	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x401163e	            0x3c2c	                            cmp al, 0x2c	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x4011640	            0x7511	                           jne 0x4011653	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x4011642	        0x837de403	               cmp dword [rbp - 0x1c], 3	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4011646	            0x7507	                           jne 0x401164f	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4011648	      0xb800000000	                              mov eax, 0	     12417	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x401164d	            0xeb6b	                           jmp 0x40116ba	     12417	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x401164f	        0x8345e401	               add dword [rbp - 0x1c], 1	     12418	option.c	FUNCTION_108	FOR_2	IF_6
0x4011653	      0x488345e801	               add qword [rbp - 0x18], 1	     12397	option.c	FUNCTION_108	FOR_2
0x4011658	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12397	option.c	FUNCTION_108	FOR_2
0x401165c	           0xfb600	                   movzx eax, byte [rax]	     12397	option.c	FUNCTION_108	FOR_2
0x401165f	            0x84c0	                             test al, al	     12397	option.c	FUNCTION_108	FOR_2
0x4011661	     0xf857bfeffff	                           jne 0x40114e2	     12397	option.c	FUNCTION_108	FOR_2
0x4011667	            0xeb1e	                           jmp 0x4011687	     12397	option.c	FUNCTION_108	FOR_2
0x4011669	              0x90	                                     nop	     12413	option.c	FUNCTION_108	FOR_2	IF_5
0x401166a	            0xeb1b	                           jmp 0x4011687	     12423	option.c	FUNCTION_108	WHILE_1
0x401166c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12425	option.c	FUNCTION_108	WHILE_1
0x401166f	          0x8d4801	                      lea ecx, [rax + 1]	     12425	option.c	FUNCTION_108	WHILE_1
0x4011672	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12425	option.c	FUNCTION_108	WHILE_1
0x4011675	            0x4898	                                    cdqe	     12425	option.c	FUNCTION_108	WHILE_1
0x4011677	       0xfb65405f0	      movzx edx, byte [rbp + rax - 0x10]	     12425	option.c	FUNCTION_108	WHILE_1
0x401167c	          0x4863c1	                         movsxd rax, ecx	     12425	option.c	FUNCTION_108	WHILE_1
0x401167f	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12425	option.c	FUNCTION_108	WHILE_1
0x4011683	        0x8345e401	               add dword [rbp - 0x1c], 1	     12426	option.c	FUNCTION_108	WHILE_1
0x4011687	        0x837de402	               cmp dword [rbp - 0x1c], 2	     12423	option.c	FUNCTION_108	WHILE_1
0x401168b	            0x7edf	                           jle 0x401166c	     12423	option.c	FUNCTION_108	WHILE_1
0x401168d	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12430	option.c	FUNCTION_108	FOR_4
0x4011694	            0xeb19	                           jmp 0x40116af	     12430	option.c	FUNCTION_108	FOR_4
0x4011696	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12431	option.c	FUNCTION_108	FOR_4
0x4011699	            0x4898	                                    cdqe	     12431	option.c	FUNCTION_108	FOR_4
0x401169b	       0xfb65405f0	      movzx edx, byte [rbp + rax - 0x10]	     12431	option.c	FUNCTION_108	FOR_4
0x40116a0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12431	option.c	FUNCTION_108	FOR_4
0x40116a3	            0x4898	                                    cdqe	     12431	option.c	FUNCTION_108	FOR_4
0x40116a5	    0x889000000000	                      mov byte [rax], dl	     12431	option.c	FUNCTION_108	FOR_4
0x40116ab	        0x8345e001	               add dword [rbp - 0x20], 1	     12430	option.c	FUNCTION_108	FOR_4
0x40116af	        0x837de003	               cmp dword [rbp - 0x20], 3	     12430	option.c	FUNCTION_108	FOR_4
0x40116b3	            0x7ee1	                           jle 0x4011696	     12430	option.c	FUNCTION_108	FOR_4
0x40116b5	      0xb801000000	                              mov eax, 1	     12432	option.c	FUNCTION_108
0x40116ba	        0x488b4df8	                mov rcx, qword [rbp - 8]	     12433	option.c	FUNCTION_108
0x40116be	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     12433	option.c	FUNCTION_108
0x40116c7	            0x7405	                            je 0x40116ce	     12433	option.c	FUNCTION_108
0x40116c9	      0xe800000000	                          call 0x40116ce	     12433	option.c	FUNCTION_108
0x40116ce	              0xc9	                                   leave	     12433	option.c	FUNCTION_108
0x40116cf	              0xc3	                                     ret	     12433	option.c	FUNCTION_108
langmap_set_entry	ELSE,1:IF,3:SWITCH,0:CALL,2:DO,0:WHILE,1:functions,0:FOR,0	82
0x4010766	              0x55	                                push rbp	     11855	option.c	FUNCTION_93
0x4010767	          0x4889e5	                            mov rbp, rsp	     11855	option.c	FUNCTION_93
0x401076a	        0x4883ec30	                           sub rsp, 0x30	     11855	option.c	FUNCTION_93
0x401076e	          0x897ddc	             mov dword [rbp - 0x24], edi	     11855	option.c	FUNCTION_93
0x4010771	          0x8975d8	             mov dword [rbp - 0x28], esi	     11855	option.c	FUNCTION_93
0x4010774	    0x488b05000000	            mov rax, qword [0x0401077b] 	     11856	option.c	FUNCTION_93
0x401077b	        0x488945f8	                mov qword [rbp - 8], rax	     11856	option.c	FUNCTION_93
0x401077f	    0xc745e8000000	               mov dword [rbp - 0x18], 0	     11857	option.c	FUNCTION_93
0x4010786	    0x8b0500000000	            mov eax, dword [0x0401078c] 	     11858	option.c	FUNCTION_93
0x401078c	          0x8945ec	             mov dword [rbp - 0x14], eax	     11858	option.c	FUNCTION_93
0x401078f	            0xeb6c	                           jmp 0x40107fd	     11861	option.c	FUNCTION_93	WHILE_1
0x4010791	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     11863	option.c	FUNCTION_93	WHILE_1
0x4010794	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     11863	option.c	FUNCTION_93	WHILE_1
0x4010797	             0x1d0	                            add eax, edx	     11863	option.c	FUNCTION_93	WHILE_1
0x4010799	            0x89c2	                            mov edx, eax	     11863	option.c	FUNCTION_93	WHILE_1
0x401079b	          0xc1ea1f	                           shr edx, 0x1f	     11863	option.c	FUNCTION_93	WHILE_1
0x401079e	             0x1d0	                            add eax, edx	     11863	option.c	FUNCTION_93	WHILE_1
0x40107a0	            0xd1f8	                              sar eax, 1	     11863	option.c	FUNCTION_93	WHILE_1
0x40107a2	          0x8945f0	             mov dword [rbp - 0x10], eax	     11863	option.c	FUNCTION_93	WHILE_1
0x40107a5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11864	option.c	FUNCTION_93	WHILE_1
0x40107a8	            0x4898	                                    cdqe	     11864	option.c	FUNCTION_93	WHILE_1
0x40107aa	    0x488d14c50000	                        lea rdx, [rax*8]	     11864	option.c	FUNCTION_93	WHILE_1
0x40107b2	        0x488b45f8	                mov rax, qword [rbp - 8]	     11864	option.c	FUNCTION_93	WHILE_1
0x40107b6	          0x4801d0	                            add rax, rdx	     11864	option.c	FUNCTION_93	WHILE_1
0x40107b9	            0x8b00	                    mov eax, dword [rax]	     11864	option.c	FUNCTION_93	WHILE_1
0x40107bb	          0x2b45dc	             sub eax, dword [rbp - 0x24]	     11864	option.c	FUNCTION_93	WHILE_1
0x40107be	          0x8945f4	              mov dword [rbp - 0xc], eax	     11864	option.c	FUNCTION_93	WHILE_1
0x40107c1	        0x837df400	                cmp dword [rbp - 0xc], 0	     11866	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107c5	            0x751f	                           jne 0x40107e6	     11866	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107c7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11868	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107ca	            0x4898	                                    cdqe	     11868	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107cc	    0x488d14c50000	                        lea rdx, [rax*8]	     11868	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107d4	        0x488b45f8	                mov rax, qword [rbp - 8]	     11868	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107d8	          0x4801c2	                            add rdx, rax	     11868	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107db	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     11868	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107de	          0x894204	                mov dword [rdx + 4], eax	     11868	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107e1	      0xe99a000000	                           jmp 0x4010880	     11869	option.c	FUNCTION_93	WHILE_1	IF_1
0x40107e6	        0x837df400	                cmp dword [rbp - 0xc], 0	     11871	option.c	FUNCTION_93	WHILE_1	IF_2
0x40107ea	            0x790b	                           jns 0x40107f7	     11871	option.c	FUNCTION_93	WHILE_1	IF_2
0x40107ec	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11872	option.c	FUNCTION_93	WHILE_1	IF_2
0x40107ef	          0x83c001	                              add eax, 1	     11872	option.c	FUNCTION_93	WHILE_1	IF_2
0x40107f2	          0x8945e8	             mov dword [rbp - 0x18], eax	     11872	option.c	FUNCTION_93	WHILE_1	IF_2
0x40107f5	            0xeb06	                           jmp 0x40107fd	     11872	option.c	FUNCTION_93	WHILE_1	IF_2
0x40107f7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11874	option.c	FUNCTION_93	WHILE_1	ELSE_1
0x40107fa	          0x8945ec	             mov dword [rbp - 0x14], eax	     11874	option.c	FUNCTION_93	WHILE_1	ELSE_1
0x40107fd	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     11861	option.c	FUNCTION_93	WHILE_1
0x4010800	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	     11861	option.c	FUNCTION_93	WHILE_1
0x4010803	            0x758c	                           jne 0x4010791	     11861	option.c	FUNCTION_93	WHILE_1
0x4010805	      0xbe01000000	                              mov esi, 1	     11877	option.c	FUNCTION_93	IF_3	CALL_1
0x401080a	      0xbf00000000	                              mov edi, 0	     11877	option.c	FUNCTION_93	IF_3	CALL_1
0x401080f	      0xe800000000	                          call 0x4010814	     11877	option.c	FUNCTION_93	IF_3	CALL_1
0x4010814	          0x83f801	                              cmp eax, 1	     11877	option.c	FUNCTION_93	IF_3	CALL_1
0x4010817	            0x7566	                           jne 0x401087f	     11877	option.c	FUNCTION_93	IF_3	CALL_1
0x4010819	    0x488b05000000	            mov rax, qword [0x04010820] 	     11881	option.c	FUNCTION_93
0x4010820	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     11881	option.c	FUNCTION_93
0x4010823	          0x4863d2	                         movsxd rdx, edx	     11881	option.c	FUNCTION_93
0x4010826	        0x48c1e203	                              shl rdx, 3	     11881	option.c	FUNCTION_93
0x401082a	          0x4801d0	                            add rax, rdx	     11881	option.c	FUNCTION_93
0x401082d	        0x488945f8	                mov qword [rbp - 8], rax	     11881	option.c	FUNCTION_93
0x4010831	    0x8b0500000000	            mov eax, dword [0x04010837] 	     11882	option.c	FUNCTION_93	CALL_2
0x4010837	          0x2b45e8	             sub eax, dword [rbp - 0x18]	     11882	option.c	FUNCTION_93	CALL_2
0x401083a	            0x4898	                                    cdqe	     11882	option.c	FUNCTION_93	CALL_2
0x401083c	    0x488d14c50000	                        lea rdx, [rax*8]	     11882	option.c	FUNCTION_93	CALL_2
0x4010844	        0x488b45f8	                mov rax, qword [rbp - 8]	     11882	option.c	FUNCTION_93	CALL_2
0x4010848	        0x488d4808	                      lea rcx, [rax + 8]	     11882	option.c	FUNCTION_93	CALL_2
0x401084c	        0x488b45f8	                mov rax, qword [rbp - 8]	     11882	option.c	FUNCTION_93	CALL_2
0x4010850	          0x4889c6	                            mov rsi, rax	     11882	option.c	FUNCTION_93	CALL_2
0x4010853	          0x4889cf	                            mov rdi, rcx	     11882	option.c	FUNCTION_93	CALL_2
0x4010856	      0xe800000000	                          call 0x401085b	     11882	option.c	FUNCTION_93	CALL_2
0x401085b	    0x8b0500000000	            mov eax, dword [0x04010861] 	     11884	option.c	FUNCTION_93
0x4010861	          0x83c001	                              add eax, 1	     11884	option.c	FUNCTION_93
0x4010864	    0x890500000000	            mov dword [0x0401086a], eax 	     11884	option.c	FUNCTION_93
0x401086a	        0x488b45f8	                mov rax, qword [rbp - 8]	     11885	option.c	FUNCTION_93
0x401086e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     11885	option.c	FUNCTION_93
0x4010871	            0x8910	                    mov dword [rax], edx	     11885	option.c	FUNCTION_93
0x4010873	        0x488b45f8	                mov rax, qword [rbp - 8]	     11886	option.c	FUNCTION_93
0x4010877	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     11886	option.c	FUNCTION_93
0x401087a	          0x895004	                mov dword [rax + 4], edx	     11886	option.c	FUNCTION_93
0x401087d	            0xeb01	                           jmp 0x4010880	     11886	option.c	FUNCTION_93
0x401087f	              0x90	                                     nop	     11878	option.c	FUNCTION_93	IF_3
0x4010880	              0xc9	                                   leave	     11887	option.c	FUNCTION_93
0x4010881	              0xc3	                                     ret	     11887	option.c	FUNCTION_93
did_set_spell_option	ELSE,0:IF,4:SWITCH,0:CALL,4:DO,0:WHILE,0:functions,0:FOR,0	57
0x400906f	              0x55	                                push rbp	      8037	option.c	FUNCTION_46
0x4009070	          0x4889e5	                            mov rbp, rsp	      8037	option.c	FUNCTION_46
0x4009073	        0x4883ec30	                           sub rsp, 0x30	      8037	option.c	FUNCTION_46
0x4009077	          0x897ddc	             mov dword [rbp - 0x24], edi	      8037	option.c	FUNCTION_46
0x400907a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      8038	option.c	FUNCTION_46
0x4009082	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      8042	option.c	FUNCTION_46	IF_1
0x4009086	            0x7461	                            je 0x40090e9	      8042	option.c	FUNCTION_46	IF_1
0x4009088	    0x488b05000000	            mov rax, qword [0x0400908f] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x400908f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4009093	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x400909a	          0x4889c7	                            mov rdi, rax	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x400909d	      0xe800000000	                          call 0x40090a2	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x40090a2	          0x8945ec	             mov dword [rbp - 0x14], eax	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x40090a5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40090a9	            0x7e3e	                           jle 0x40090e9	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40090ab	        0x837dec03	               cmp dword [rbp - 0x14], 3	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40090af	            0x7e30	                           jle 0x40090e1	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40090b1	    0x488b05000000	            mov rax, qword [0x040090b8] 	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090b8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090bc	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090c3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090c6	          0x4863d2	                         movsxd rdx, edx	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090c9	        0x4883ea04	                              sub rdx, 4	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090cd	          0x4801d0	                            add rax, rdx	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090d0	      0xbe00000000	                              mov esi, 0	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090d5	          0x4889c7	                            mov rdi, rax	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090d8	      0xe800000000	                          call 0x40090dd	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090dd	            0x85c0	                           test eax, eax	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090df	            0x7408	                            je 0x40090e9	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40090e1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      8047	option.c	FUNCTION_46	IF_1	IF_2
0x40090e9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8050	option.c	FUNCTION_46	IF_3
0x40090ee	            0x7554	                           jne 0x4009144	      8050	option.c	FUNCTION_46	IF_3
0x40090f0	    0x488b05000000	            mov rax, qword [0x040090f7] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40090f7	        0x488945f8	                mov qword [rbp - 8], rax	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40090fb	            0xeb40	                           jmp 0x400913d	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40090fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4009101	        0x488b5008	                mov rdx, qword [rax + 8]	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4009105	    0x488b05000000	            mov rax, qword [0x0400910c] 	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x400910c	          0x4839c2	                            cmp rdx, rax	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x400910f	            0x7520	                           jne 0x4009131	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4009111	        0x488b45f8	                mov rax, qword [rbp - 8]	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4009115	    0x8b8068020000	           mov eax, dword [rax + 0x268] 	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x400911b	            0x85c0	                           test eax, eax	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x400911d	            0x7412	                            je 0x4009131	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x400911f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x4009123	          0x4889c7	                            mov rdi, rax	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x4009126	      0xe800000000	                          call 0x400912b	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x400912b	        0x488945f0	             mov qword [rbp - 0x10], rax	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x400912f	            0xeb13	                           jmp 0x4009144	      8056	option.c	FUNCTION_46	IF_3	IF_4
0x4009131	        0x488b45f8	                mov rax, qword [rbp - 8]	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4009135	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4009139	        0x488945f8	                mov qword [rbp - 8], rax	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x400913d	      0x48837df800	                  cmp qword [rbp - 8], 0	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4009142	            0x75b9	                           jne 0x40090fd	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4009144	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8059	option.c	FUNCTION_46
0x4009148	              0xc9	                                   leave	      8060	option.c	FUNCTION_46
0x4009149	              0xc3	                                     ret	      8060	option.c	FUNCTION_46
set_number_default	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	20
0x4000cfb	              0x55	                                push rbp	      3907	option.c	FUNCTION_6
0x4000cfc	          0x4889e5	                            mov rbp, rsp	      3907	option.c	FUNCTION_6
0x4000cff	        0x4883ec20	                           sub rsp, 0x20	      3907	option.c	FUNCTION_6
0x4000d03	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3907	option.c	FUNCTION_6
0x4000d07	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3907	option.c	FUNCTION_6
0x4000d0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3910	option.c	FUNCTION_6	CALL_1
0x4000d0f	          0x4889c7	                            mov rdi, rax	      3910	option.c	FUNCTION_6	CALL_1
0x4000d12	      0xe88da80000	                     call sym.findoption	      3910	option.c	FUNCTION_6	CALL_1
0x4000d17	          0x8945fc	                mov dword [rbp - 4], eax	      3910	option.c	FUNCTION_6	CALL_1
0x4000d1a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3911	option.c	FUNCTION_6	IF_1
0x4000d1e	            0x7818	                            js 0x4000d38	      3911	option.c	FUNCTION_6	IF_1
0x4000d20	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3912	option.c	FUNCTION_6	IF_1
0x4000d24	          0x8b55fc	                mov edx, dword [rbp - 4]	      3912	option.c	FUNCTION_6	IF_1
0x4000d27	          0x4863d2	                         movsxd rdx, edx	      3912	option.c	FUNCTION_6	IF_1
0x4000d2a	        0x48c1e206	                              shl rdx, 6	      3912	option.c	FUNCTION_6	IF_1
0x4000d2e	    0x4881c2000000	                              add rdx, 0	      3912	option.c	FUNCTION_6	IF_1
0x4000d35	          0x488902	                    mov qword [rdx], rax	      3912	option.c	FUNCTION_6	IF_1
0x4000d38	              0x90	                                     nop	      3913	option.c	FUNCTION_6
0x4000d39	              0xc9	                                   leave	      3913	option.c	FUNCTION_6
0x4000d3a	              0xc3	                                     ret	      3913	option.c	FUNCTION_6
reset_modifiable	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	19
0x400f761	              0x55	                                push rbp	     11301	option.c	FUNCTION_85
0x400f762	          0x4889e5	                            mov rbp, rsp	     11301	option.c	FUNCTION_85
0x400f765	        0x4883ec10	                           sub rsp, 0x10	     11301	option.c	FUNCTION_85
0x400f769	    0x488b05000000	            mov rax, qword [0x0400f770] 	     11304	option.c	FUNCTION_85
0x400f770	    0xc78040150000	            mov dword [rax + 0x1540], 0 	     11304	option.c	FUNCTION_85
0x400f77a	    0xc70500000000	               mov dword [0x0400f784], 0	     11305	option.c	FUNCTION_85
0x400f784	      0xbf00000000	                              mov edi, 0	     11306	option.c	FUNCTION_85	CALL_1
0x400f789	      0xe816beffff	                     call sym.findoption	     11306	option.c	FUNCTION_85	CALL_1
0x400f78e	          0x8945fc	                mov dword [rbp - 4], eax	     11306	option.c	FUNCTION_85	CALL_1
0x400f791	        0x837dfc00	                  cmp dword [rbp - 4], 0	     11307	option.c	FUNCTION_85	IF_1
0x400f795	            0x7816	                            js 0x400f7ad	     11307	option.c	FUNCTION_85	IF_1
0x400f797	          0x8b45fc	                mov eax, dword [rbp - 4]	     11308	option.c	FUNCTION_85	IF_1
0x400f79a	            0x4898	                                    cdqe	     11308	option.c	FUNCTION_85	IF_1
0x400f79c	        0x48c1e006	                              shl rax, 6	     11308	option.c	FUNCTION_85	IF_1
0x400f7a0	    0x480500000000	                              add rax, 0	     11308	option.c	FUNCTION_85	IF_1
0x400f7a6	    0x48c700000000	                      mov qword [rax], 0	     11308	option.c	FUNCTION_85	IF_1
0x400f7ad	              0x90	                                     nop	     11309	option.c	FUNCTION_85
0x400f7ae	              0xc9	                                   leave	     11309	option.c	FUNCTION_85
0x400f7af	              0xc3	                                     ret	     11309	option.c	FUNCTION_85
gui_bg_default	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	12
0x40013cc	              0x55	                                push rbp	      4255	option.c	FUNCTION_12
0x40013cd	          0x4889e5	                            mov rbp, rsp	      4255	option.c	FUNCTION_12
0x40013d0	    0x488b05000000	            mov rax, qword [0x040013d7] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x40013d7	          0x4889c7	                            mov rdi, rax	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x40013da	      0xe800000000	                          call 0x40013df	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x40013df	          0x83f87e	                           cmp eax, 0x7e	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x40013e2	            0x7f07	                            jg 0x40013eb	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x40013e4	      0xb800000000	                              mov eax, 0	      4257	option.c	FUNCTION_12	IF_1
0x40013e9	            0xeb05	                           jmp 0x40013f0	      4257	option.c	FUNCTION_12	IF_1
0x40013eb	      0xb800000000	                              mov eax, 0	      4258	option.c	FUNCTION_12
0x40013f0	              0x5d	                                 pop rbp	      4259	option.c	FUNCTION_12
0x40013f1	              0xc3	                                     ret	      4259	option.c	FUNCTION_12
clear_winopt	ELSE,0:IF,0:SWITCH,0:CALL,14:DO,0:WHILE,0:functions,0:FOR,0	63
0x400ecaf	              0x55	                                push rbp	     11000	option.c	FUNCTION_83
0x400ecb0	          0x4889e5	                            mov rbp, rsp	     11000	option.c	FUNCTION_83
0x400ecb3	        0x4883ec10	                           sub rsp, 0x10	     11000	option.c	FUNCTION_83
0x400ecb7	        0x48897df8	                mov qword [rbp - 8], rdi	     11000	option.c	FUNCTION_83
0x400ecbb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11002	option.c	FUNCTION_83	CALL_1
0x400ecbf	        0x4883c030	                           add rax, 0x30	     11002	option.c	FUNCTION_83	CALL_1
0x400ecc3	          0x4889c7	                            mov rdi, rax	     11002	option.c	FUNCTION_83	CALL_1
0x400ecc6	      0xe800000000	                          call 0x400eccb	     11002	option.c	FUNCTION_83	CALL_1
0x400eccb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11003	option.c	FUNCTION_83	CALL_2
0x400eccf	        0x4883c048	                           add rax, 0x48	     11003	option.c	FUNCTION_83	CALL_2
0x400ecd3	          0x4889c7	                            mov rdi, rax	     11003	option.c	FUNCTION_83	CALL_2
0x400ecd6	      0xe800000000	                          call 0x400ecdb	     11003	option.c	FUNCTION_83	CALL_2
0x400ecdb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11004	option.c	FUNCTION_83	CALL_3
0x400ecdf	        0x4883c050	                           add rax, 0x50	     11004	option.c	FUNCTION_83	CALL_3
0x400ece3	          0x4889c7	                            mov rdi, rax	     11004	option.c	FUNCTION_83	CALL_3
0x400ece6	      0xe800000000	                          call 0x400eceb	     11004	option.c	FUNCTION_83	CALL_3
0x400eceb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11006	option.c	FUNCTION_83	CALL_4
0x400ecef	        0x4883c068	                           add rax, 0x68	     11006	option.c	FUNCTION_83	CALL_4
0x400ecf3	          0x4889c7	                            mov rdi, rax	     11006	option.c	FUNCTION_83	CALL_4
0x400ecf6	      0xe800000000	                          call 0x400ecfb	     11006	option.c	FUNCTION_83	CALL_4
0x400ecfb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11007	option.c	FUNCTION_83	CALL_5
0x400ecff	        0x4883c070	                           add rax, 0x70	     11007	option.c	FUNCTION_83	CALL_5
0x400ed03	          0x4889c7	                            mov rdi, rax	     11007	option.c	FUNCTION_83	CALL_5
0x400ed06	      0xe800000000	                          call 0x400ed0b	     11007	option.c	FUNCTION_83	CALL_5
0x400ed0b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11009	option.c	FUNCTION_83	CALL_6
0x400ed0f	        0x4883c078	                           add rax, 0x78	     11009	option.c	FUNCTION_83	CALL_6
0x400ed13	          0x4889c7	                            mov rdi, rax	     11009	option.c	FUNCTION_83	CALL_6
0x400ed16	      0xe800000000	                          call 0x400ed1b	     11009	option.c	FUNCTION_83	CALL_6
0x400ed1b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11012	option.c	FUNCTION_83	CALL_7
0x400ed1f	    0x480508010000	                          add rax, 0x108	     11012	option.c	FUNCTION_83	CALL_7
0x400ed25	          0x4889c7	                            mov rdi, rax	     11012	option.c	FUNCTION_83	CALL_7
0x400ed28	      0xe800000000	                          call 0x400ed2d	     11012	option.c	FUNCTION_83	CALL_7
0x400ed2d	        0x488b45f8	                mov rax, qword [rbp - 8]	     11015	option.c	FUNCTION_83	CALL_8
0x400ed31	        0x4883c008	                              add rax, 8	     11015	option.c	FUNCTION_83	CALL_8
0x400ed35	          0x4889c7	                            mov rdi, rax	     11015	option.c	FUNCTION_83	CALL_8
0x400ed38	      0xe800000000	                          call 0x400ed3d	     11015	option.c	FUNCTION_83	CALL_8
0x400ed3d	        0x488b45f8	                mov rax, qword [rbp - 8]	     11018	option.c	FUNCTION_83	CALL_9
0x400ed41	    0x4805a8000000	                           add rax, 0xa8	     11018	option.c	FUNCTION_83	CALL_9
0x400ed47	          0x4889c7	                            mov rdi, rax	     11018	option.c	FUNCTION_83	CALL_9
0x400ed4a	      0xe800000000	                          call 0x400ed4f	     11018	option.c	FUNCTION_83	CALL_9
0x400ed4f	        0x488b45f8	                mov rax, qword [rbp - 8]	     11021	option.c	FUNCTION_83	CALL_10
0x400ed53	    0x4805d0000000	                           add rax, 0xd0	     11021	option.c	FUNCTION_83	CALL_10
0x400ed59	          0x4889c7	                            mov rdi, rax	     11021	option.c	FUNCTION_83	CALL_10
0x400ed5c	      0xe800000000	                          call 0x400ed61	     11021	option.c	FUNCTION_83	CALL_10
0x400ed61	        0x488b45f8	                mov rax, qword [rbp - 8]	     11024	option.c	FUNCTION_83	CALL_11
0x400ed65	    0x4805c8000000	                           add rax, 0xc8	     11024	option.c	FUNCTION_83	CALL_11
0x400ed6b	          0x4889c7	                            mov rdi, rax	     11024	option.c	FUNCTION_83	CALL_11
0x400ed6e	      0xe800000000	                          call 0x400ed73	     11024	option.c	FUNCTION_83	CALL_11
0x400ed73	        0x488b45f8	                mov rax, qword [rbp - 8]	     11027	option.c	FUNCTION_83	CALL_12
0x400ed77	    0x4805f0000000	                           add rax, 0xf0	     11027	option.c	FUNCTION_83	CALL_12
0x400ed7d	          0x4889c7	                            mov rdi, rax	     11027	option.c	FUNCTION_83	CALL_12
0x400ed80	      0xe800000000	                          call 0x400ed85	     11027	option.c	FUNCTION_83	CALL_12
0x400ed85	        0x488b45f8	                mov rax, qword [rbp - 8]	     11030	option.c	FUNCTION_83	CALL_13
0x400ed89	    0x480510010000	                          add rax, 0x110	     11030	option.c	FUNCTION_83	CALL_13
0x400ed8f	          0x4889c7	                            mov rdi, rax	     11030	option.c	FUNCTION_83	CALL_13
0x400ed92	      0xe800000000	                          call 0x400ed97	     11030	option.c	FUNCTION_83	CALL_13
0x400ed97	        0x488b45f8	                mov rax, qword [rbp - 8]	     11031	option.c	FUNCTION_83	CALL_14
0x400ed9b	    0x480518010000	                          add rax, 0x118	     11031	option.c	FUNCTION_83	CALL_14
0x400eda1	          0x4889c7	                            mov rdi, rax	     11031	option.c	FUNCTION_83	CALL_14
0x400eda4	      0xe800000000	                          call 0x400eda9	     11031	option.c	FUNCTION_83	CALL_14
0x400eda9	              0x90	                                     nop	     11033	option.c	FUNCTION_83
0x400edaa	              0xc9	                                   leave	     11033	option.c	FUNCTION_83
0x400edab	              0xc3	                                     ret	     11033	option.c	FUNCTION_83
set_iminsert_global	ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	8
0x400f7b0	              0x55	                                push rbp	     11316	option.c	FUNCTION_86
0x400f7b1	          0x4889e5	                            mov rbp, rsp	     11316	option.c	FUNCTION_86
0x400f7b4	    0x488b05000000	            mov rax, qword [0x0400f7bb] 	     11317	option.c	FUNCTION_86
0x400f7bb	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	     11317	option.c	FUNCTION_86
0x400f7c2	    0x488905000000	            mov qword [0x0400f7c9], rax 	     11317	option.c	FUNCTION_86
0x400f7c9	              0x90	                                     nop	     11318	option.c	FUNCTION_86
0x400f7ca	              0x5d	                                 pop rbp	     11318	option.c	FUNCTION_86
0x400f7cb	              0xc3	                                     ret	     11318	option.c	FUNCTION_86
set_init_2	ELSE,0:IF,3:SWITCH,0:CALL,11:DO,0:WHILE,0:functions,0:FOR,0	78
0x4000d3b	              0x55	                                push rbp	      3949	option.c	FUNCTION_8
0x4000d3c	          0x4889e5	                            mov rbp, rsp	      3949	option.c	FUNCTION_8
0x4000d3f	        0x4883ec10	                           sub rsp, 0x10	      3949	option.c	FUNCTION_8
0x4000d43	      0xbf00000000	                              mov edi, 0	      3956	option.c	FUNCTION_8	CALL_1
0x4000d48	      0xe857a80000	                     call sym.findoption	      3956	option.c	FUNCTION_8	CALL_1
0x4000d4d	          0x8945fc	                mov dword [rbp - 4], eax	      3956	option.c	FUNCTION_8	CALL_1
0x4000d50	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3957	option.c	FUNCTION_8	IF_1
0x4000d54	            0x7831	                            js 0x4000d87	      3957	option.c	FUNCTION_8	IF_1
0x4000d56	          0x8b45fc	                mov eax, dword [rbp - 4]	      3957	option.c	FUNCTION_8	IF_1
0x4000d59	            0x4898	                                    cdqe	      3957	option.c	FUNCTION_8	IF_1
0x4000d5b	        0x48c1e006	                              shl rax, 6	      3957	option.c	FUNCTION_8	IF_1
0x4000d5f	    0x480500000000	                              add rax, 0	      3957	option.c	FUNCTION_8	IF_1
0x4000d65	          0x488b00	                    mov rax, qword [rax]	      3957	option.c	FUNCTION_8	IF_1
0x4000d68	      0x2500010000	                          and eax, 0x100	      3957	option.c	FUNCTION_8	IF_1
0x4000d6d	          0x4885c0	                           test rax, rax	      3957	option.c	FUNCTION_8	IF_1
0x4000d70	            0x7515	                           jne 0x4000d87	      3957	option.c	FUNCTION_8	IF_1
0x4000d72	    0x8b1500000000	            mov edx, dword [0x04000d78] 	      3958	option.c	FUNCTION_8	CALL_2
0x4000d78	          0x8b45fc	                mov eax, dword [rbp - 4]	      3958	option.c	FUNCTION_8	CALL_2
0x4000d7b	      0xbe04000000	                              mov esi, 4	      3958	option.c	FUNCTION_8	CALL_2
0x4000d80	            0x89c7	                            mov edi, eax	      3958	option.c	FUNCTION_8	CALL_2
0x4000d82	      0xe861faffff	             call sym.set_option_default	      3958	option.c	FUNCTION_8	CALL_2
0x4000d87	      0xe800000000	                          call 0x4000d8c	      3959	option.c	FUNCTION_8	CALL_3
0x4000d8c	      0xbf00000000	                              mov edi, 0	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4000d91	      0xe800000000	                          call 0x4000d96	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4000d96	            0x85c0	                           test eax, eax	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4000d98	            0x7512	                           jne 0x4000dac	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4000d9a	    0x488b05000000	            mov rax, qword [0x04000da1] 	      3966	option.c	FUNCTION_8	IF_2
0x4000da1	        0x4883e801	                              sub rax, 1	      3966	option.c	FUNCTION_8	IF_2
0x4000da5	    0x488905000000	            mov qword [0x04000dac], rax 	      3966	option.c	FUNCTION_8	IF_2
0x4000dac	    0x488b05000000	            mov rax, qword [0x04000db3] 	      3967	option.c	FUNCTION_8	CALL_5
0x4000db3	        0x4883e801	                              sub rax, 1	      3967	option.c	FUNCTION_8	CALL_5
0x4000db7	          0x4889c6	                            mov rsi, rax	      3967	option.c	FUNCTION_8	CALL_5
0x4000dba	      0xbf00000000	                              mov edi, 0	      3967	option.c	FUNCTION_8	CALL_5
0x4000dbf	      0xe800000000	                          call 0x4000dc4	      3967	option.c	FUNCTION_8	CALL_5
0x4000dc4	      0xbf00000000	                              mov edi, 0	      3976	option.c	FUNCTION_8	CALL_6
0x4000dc9	      0xe8d6a70000	                     call sym.findoption	      3976	option.c	FUNCTION_8	CALL_6
0x4000dce	          0x8945fc	                mov dword [rbp - 4], eax	      3976	option.c	FUNCTION_8	CALL_6
0x4000dd1	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3977	option.c	FUNCTION_8	IF_3
0x4000dd5	            0x7871	                            js 0x4000e48	      3977	option.c	FUNCTION_8	IF_3
0x4000dd7	          0x8b45fc	                mov eax, dword [rbp - 4]	      3977	option.c	FUNCTION_8	IF_3
0x4000dda	            0x4898	                                    cdqe	      3977	option.c	FUNCTION_8	IF_3
0x4000ddc	        0x48c1e006	                              shl rax, 6	      3977	option.c	FUNCTION_8	IF_3
0x4000de0	    0x480500000000	                              add rax, 0	      3977	option.c	FUNCTION_8	IF_3
0x4000de6	          0x488b00	                    mov rax, qword [rax]	      3977	option.c	FUNCTION_8	IF_3
0x4000de9	      0x2500010000	                          and eax, 0x100	      3977	option.c	FUNCTION_8	IF_3
0x4000dee	          0x4885c0	                           test rax, rax	      3977	option.c	FUNCTION_8	IF_3
0x4000df1	            0x7555	                           jne 0x4000e48	      3977	option.c	FUNCTION_8	IF_3
0x4000df3	      0xe86c000000	                call sym.term_bg_default	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4000df8	           0xfb600	                   movzx eax, byte [rax]	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4000dfb	            0x3c64	                            cmp al, 0x64	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4000dfd	            0x7549	                           jne 0x4000e48	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4000dff	          0x8b45fc	                mov eax, dword [rbp - 4]	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4000e02	    0x41b800000000	                              mov r8d, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4000e08	      0xb901000000	                              mov ecx, 1	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4000e0d	      0xba00000000	                              mov edx, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4000e12	            0x89c6	                            mov esi, eax	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4000e14	      0xbf00000000	                              mov edi, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4000e19	      0xe800000000	                          call 0x4000e1e	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4000e1e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3983	option.c	FUNCTION_8	IF_3
0x4000e21	            0x4898	                                    cdqe	      3983	option.c	FUNCTION_8	IF_3
0x4000e23	        0x48c1e006	                              shl rax, 6	      3983	option.c	FUNCTION_8	IF_3
0x4000e27	    0x480500000000	                              add rax, 0	      3983	option.c	FUNCTION_8	IF_3
0x4000e2d	          0x488b00	                    mov rax, qword [rax]	      3983	option.c	FUNCTION_8	IF_3
0x4000e30	          0x80e4fe	                            and ah, 0xfe	      3983	option.c	FUNCTION_8	IF_3
0x4000e33	          0x4889c2	                            mov rdx, rax	      3983	option.c	FUNCTION_8	IF_3
0x4000e36	          0x8b45fc	                mov eax, dword [rbp - 4]	      3983	option.c	FUNCTION_8	IF_3
0x4000e39	            0x4898	                                    cdqe	      3983	option.c	FUNCTION_8	IF_3
0x4000e3b	        0x48c1e006	                              shl rax, 6	      3983	option.c	FUNCTION_8	IF_3
0x4000e3f	    0x480500000000	                              add rax, 0	      3983	option.c	FUNCTION_8	IF_3
0x4000e45	          0x488910	                    mov qword [rax], rdx	      3983	option.c	FUNCTION_8	IF_3
0x4000e48	      0xbf02000000	                              mov edi, 2	      3988	option.c	FUNCTION_8	CALL_9
0x4000e4d	      0xe800000000	                          call 0x4000e52	      3988	option.c	FUNCTION_8	CALL_9
0x4000e52	      0xbf01000000	                              mov edi, 1	      3991	option.c	FUNCTION_8	CALL_10
0x4000e57	      0xe800000000	                          call 0x4000e5c	      3991	option.c	FUNCTION_8	CALL_10
0x4000e5c	      0xe800000000	                          call 0x4000e61	      3994	option.c	FUNCTION_8	CALL_11
0x4000e61	              0x90	                                     nop	      3996	option.c	FUNCTION_8
0x4000e62	              0xc9	                                   leave	      3996	option.c	FUNCTION_8
0x4000e63	              0xc3	                                     ret	      3996	option.c	FUNCTION_8
makeset	ELSE,3:IF,19:SWITCH,0:CALL,12:DO,0:WHILE,0:functions,0:FOR,3	225
0x400c32a	              0x55	                                push rbp	     10047	option.c	FUNCTION_64
0x400c32b	          0x4889e5	                            mov rbp, rsp	     10047	option.c	FUNCTION_64
0x400c32e	        0x4883ec50	                           sub rsp, 0x50	     10047	option.c	FUNCTION_64
0x400c332	        0x48897db8	             mov qword [rbp - 0x48], rdi	     10047	option.c	FUNCTION_64
0x400c336	          0x8975b4	             mov dword [rbp - 0x4c], esi	     10047	option.c	FUNCTION_64
0x400c339	          0x8955b0	             mov dword [rbp - 0x50], edx	     10047	option.c	FUNCTION_64
0x400c33c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     10051	option.c	FUNCTION_64
0x400c344	    0xc745d0010000	               mov dword [rbp - 0x30], 1	     10062	option.c	FUNCTION_64	FOR_1
0x400c34b	      0xe910030000	                           jmp 0x400c660	     10062	option.c	FUNCTION_64	FOR_1
0x400c350	    0x48c745d80000	               mov qword [rbp - 0x28], 0	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c358	      0xe9eb020000	                           jmp 0x400c648	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c35d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c361	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c365	      0x2500020000	                          and eax, 0x200	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c36a	          0x4885c0	                           test rax, rax	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c36d	     0xf85d0020000	                           jne 0x400c643	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c373	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10066	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_2
0x400c377	          0x4889c7	                            mov rdi, rax	     10066	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_2
0x400c37a	      0xe8f2090000	                   call sym.istermoption	     10066	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_2
0x400c37f	            0x85c0	                           test eax, eax	     10066	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_2
0x400c381	     0xf85bc020000	                           jne 0x400c643	     10066	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_2
0x400c387	        0x837dd001	               cmp dword [rbp - 0x30], 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c38b	           0xf95c2	                                setne dl	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c38e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c392	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c396	      0x2500000001	                      and eax, 0x1000000	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c39b	          0x4885c0	                           test rax, rax	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c39e	           0xf95c0	                                setne al	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c3a1	            0x31d0	                            xor eax, edx	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c3a3	            0x84c0	                             test al, al	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c3a5	     0xf8498020000	                            je 0x400c643	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c3ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3af	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3b2	            0x85c0	                           test eax, eax	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3b4	            0x750e	                           jne 0x400c3c4	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3b6	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3b9	          0x83e002	                              and eax, 2	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3bc	            0x85c0	                           test eax, eax	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3be	     0xf8475020000	                            je 0x400c639	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c3c4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3c7	          0x83e002	                              and eax, 2	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3ca	            0x85c0	                           test eax, eax	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3cc	            0x7416	                            je 0x400c3e4	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3d2	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3d6	      0x2500002000	                       and eax, 0x200000	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3db	          0x4885c0	                           test rax, rax	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3de	     0xf8558020000	                           jne 0x400c63c	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c3e4	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400c3e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400c3eb	            0x89d6	                            mov esi, edx	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400c3ed	          0x4889c7	                            mov rdi, rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400c3f0	      0xe8410e0000	                 call sym.get_varp_scope	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400c3f5	        0x488945e0	             mov qword [rbp - 0x20], rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400c3f9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c3fc	          0x83e002	                              and eax, 2	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c3ff	            0x85c0	                           test eax, eax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c401	            0x741b	                            je 0x400c41e	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c403	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c407	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c40b	          0x4889d6	                            mov rsi, rdx	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c40e	          0x4889c7	                            mov rdi, rax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c411	      0xe81dfdffff	                 call sym.optval_default	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c416	            0x85c0	                           test eax, eax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c418	     0xf8521020000	                           jne 0x400c63f	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400c41e	    0xc745cc020000	               mov dword [rbp - 0x34], 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400c425	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x400c429	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x400c42c	            0x85c0	                           test eax, eax	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x400c42e	     0xf84f9010000	                            je 0x400c62d	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x400c434	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x400c438	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x400c43c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x400c440	     0xf85e7010000	                           jne 0x400c62d	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x400c446	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x400c449	          0x83e004	                              and eax, 4	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x400c44c	            0x85c0	                           test eax, eax	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x400c44e	     0xf84ee010000	                            je 0x400c642	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x400c454	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x400c457	          0x83e002	                              and eax, 2	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x400c45a	            0x85c0	                           test eax, eax	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x400c45c	     0xf85cb010000	                           jne 0x400c62d	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x400c462	        0x837db000	               cmp dword [rbp - 0x50], 0	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x400c466	     0xf85c1010000	                           jne 0x400c62d	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x400c46c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400c470	      0xbe02000000	                              mov esi, 2	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400c475	          0x4889c7	                            mov rdi, rax	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400c478	      0xe8b90d0000	                 call sym.get_varp_scope	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400c47d	        0x488945f8	                mov qword [rbp - 8], rax	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400c481	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x400c485	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x400c489	          0x4889d6	                            mov rsi, rdx	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x400c48c	          0x4889c7	                            mov rdi, rax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x400c48f	      0xe89ffcffff	                 call sym.optval_default	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x400c494	            0x85c0	                           test eax, eax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x400c496	     0xf8591010000	                           jne 0x400c62d	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x400c49c	    0xc745cc010000	               mov dword [rbp - 0x34], 1	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400c4a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10099	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400c4a7	        0x488945e8	             mov qword [rbp - 0x18], rax	     10099	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400c4ab	        0x488b45f8	                mov rax, qword [rbp - 8]	     10100	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400c4af	        0x488945e0	             mov qword [rbp - 0x20], rax	     10100	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400c4b3	      0xe975010000	                           jmp 0x400c62d	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x400c4b8	        0x837dcc01	               cmp dword [rbp - 0x34], 1	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4bc	            0x740a	                            je 0x400c4c8	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4be	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4c1	          0x83e002	                              and eax, 2	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4c4	            0x85c0	                           test eax, eax	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4c6	            0x740a	                            je 0x400c4d2	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4c8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4d0	            0xeb08	                           jmp 0x400c4da	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400c4d2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x400c4da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x400c4de	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x400c4e2	          0x83e001	                              and eax, 1	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x400c4e5	          0x4885c0	                           test rax, rax	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x400c4e8	            0x742f	                            je 0x400c519	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x400c4ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c4ee	            0x8b08	                    mov ecx, dword [rax]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c4f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c4f4	          0x488b10	                    mov rdx, qword [rax]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c4f7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c4fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c4ff	          0x4889c7	                            mov rdi, rax	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c502	      0xe894050000	                    call sym.put_setbool	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c507	            0x85c0	                           test eax, eax	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c509	     0xf8512010000	                           jne 0x400c621	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400c50f	      0xb800000000	                              mov eax, 0	     10118	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12
0x400c514	      0xe956010000	                           jmp 0x400c66f	     10118	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12
0x400c519	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x400c51d	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x400c521	          0x83e002	                              and eax, 2	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x400c524	          0x4885c0	                           test rax, rax	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x400c527	            0x742d	                            je 0x400c556	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x400c529	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c52d	          0x488b10	                    mov rdx, qword [rax]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c530	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c534	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c538	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c53c	          0x4889c7	                            mov rdi, rax	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c53f	      0xe866040000	                     call sym.put_setnum	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c544	            0x85c0	                           test eax, eax	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c546	     0xf85d5000000	                           jne 0x400c621	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400c54c	      0xb800000000	                              mov eax, 0	     10123	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14
0x400c551	      0xe919010000	                           jmp 0x400c66f	     10123	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14
0x400c556	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	     10127	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3
0x400c55d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10133	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c561	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10133	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c564	      0x3d3f400000	                         cmp eax, 0x403f	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c569	            0x740e	                            je 0x400c579	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c56b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10135	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c56f	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10135	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c572	      0x3d24400000	                         cmp eax, 0x4024	     10133	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c577	            0x7549	                           jne 0x400c5c2	     10133	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c579	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c57d	          0x488b08	                    mov rcx, qword [rax]	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c580	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c584	          0x488b10	                    mov rdx, qword [rax]	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c587	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c58b	      0xbe00000000	                              mov esi, 0	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c590	          0x4889c7	                            mov rdi, rax	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c593	      0xb800000000	                              mov eax, 0	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c598	      0xe800000000	                          call 0x400c59d	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c59d	            0x85c0	                           test eax, eax	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c59f	            0x7810	                            js 0x400c5b1	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400c5a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0x400c5a5	          0x4889c7	                            mov rdi, rax	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0x400c5a8	      0xe800000000	                          call 0x400c5ad	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0x400c5ad	            0x85c0	                           test eax, eax	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0x400c5af	            0x790a	                           jns 0x400c5bb	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0x400c5b1	      0xb800000000	                              mov eax, 0	     10140	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x400c5b6	      0xe9b4000000	                           jmp 0x400c66f	     10140	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x400c5bb	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	     10141	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400c5c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10144	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0x400c5c6	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10144	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0x400c5ca	          0x83e010	                           and eax, 0x10	     10144	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0x400c5cd	          0x4885c0	                           test rax, rax	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5d0	           0xf95c0	                                setne al	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5d3	           0xfb6f8	                           movzx edi, al	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5da	          0x488b10	                    mov rdx, qword [rax]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5dd	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5e1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5e5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5e9	          0x4189f8	                            mov r8d, edi	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5ec	          0x4889c7	                            mov rdi, rax	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5ef	      0xe815020000	                  call sym.put_setstring	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5f4	            0x85c0	                           test eax, eax	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5f6	            0x7507	                           jne 0x400c5ff	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0x400c5f8	      0xb800000000	                              mov eax, 0	     10145	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0x400c5fd	            0xeb70	                           jmp 0x400c66f	     10145	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0x400c5ff	        0x837dd400	               cmp dword [rbp - 0x2c], 0	     10146	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18
0x400c603	            0x741c	                            je 0x400c621	     10146	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18
0x400c605	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0x400c609	      0xbe00000000	                              mov esi, 0	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0x400c60e	          0x4889c7	                            mov rdi, rax	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0x400c611	      0xe800000000	                          call 0x400c616	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0x400c616	            0x85c0	                           test eax, eax	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0x400c618	            0x7507	                           jne 0x400c621	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0x400c61a	      0xb800000000	                              mov eax, 0	     10149	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19
0x400c61f	            0xeb4e	                           jmp 0x400c66f	     10149	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19
0x400c621	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x400c625	        0x488945e0	             mov qword [rbp - 0x20], rax	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x400c629	        0x8345cc01	               add dword [rbp - 0x34], 1	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x400c62d	        0x837dcc02	               cmp dword [rbp - 0x34], 2	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x400c631	     0xf8e81feffff	                           jle 0x400c4b8	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x400c637	            0xeb0a	                           jmp 0x400c643	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x400c639	              0x90	                                     nop	     10071	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c63a	            0xeb07	                           jmp 0x400c643	     10071	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400c63c	              0x90	                                     nop	     10076	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c63d	            0xeb04	                           jmp 0x400c643	     10076	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400c63f	              0x90	                                     nop	     10081	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4
0x400c640	            0xeb01	                           jmp 0x400c643	     10081	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4
0x400c642	              0x90	                                     nop	     10090	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x400c643	      0x488345d840	           add qword [rbp - 0x28], 0x40 	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c648	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c64c	          0x4889c7	                            mov rdi, rax	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c64f	      0xe81d070000	                   call sym.istermoption	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c654	            0x85c0	                           test eax, eax	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c656	     0xf8401fdffff	                            je 0x400c35d	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x400c65c	        0x836dd001	               sub dword [rbp - 0x30], 1	     10062	option.c	FUNCTION_64	FOR_1
0x400c660	        0x837dd000	               cmp dword [rbp - 0x30], 0	     10062	option.c	FUNCTION_64	FOR_1
0x400c664	     0xf89e6fcffff	                           jns 0x400c350	     10062	option.c	FUNCTION_64	FOR_1
0x400c66a	      0xb801000000	                              mov eax, 1	     10155	option.c	FUNCTION_64
0x400c66f	              0xc9	                                   leave	     10156	option.c	FUNCTION_64
0x400c670	              0xc3	                                     ret	     10156	option.c	FUNCTION_64
find_mps_values	ELSE,5:IF,10:SWITCH,0:CALL,10:DO,0:WHILE,1:functions,0:FOR,0	192
0x40119ce	              0x55	                                push rbp	     12549	option.c	FUNCTION_115
0x40119cf	          0x4889e5	                            mov rbp, rsp	     12549	option.c	FUNCTION_115
0x40119d2	              0x53	                                push rbx	     12549	option.c	FUNCTION_115
0x40119d3	        0x4883ec38	                           sub rsp, 0x38	     12549	option.c	FUNCTION_115
0x40119d7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     12549	option.c	FUNCTION_115
0x40119db	        0x488975d0	             mov qword [rbp - 0x30], rsi	     12549	option.c	FUNCTION_115
0x40119df	        0x488955c8	             mov qword [rbp - 0x38], rdx	     12549	option.c	FUNCTION_115
0x40119e3	          0x894dc4	             mov dword [rbp - 0x3c], ecx	     12549	option.c	FUNCTION_115
0x40119e6	    0x488b05000000	            mov rax, qword [0x040119ed] 	     12552	option.c	FUNCTION_115
0x40119ed	    0x488b80301500	          mov rax, qword [rax + 0x1530] 	     12552	option.c	FUNCTION_115
0x40119f4	        0x488945e0	             mov qword [rbp - 0x20], rax	     12552	option.c	FUNCTION_115
0x40119f8	      0xe964020000	                           jmp 0x4011c61	     12553	option.c	FUNCTION_115	WHILE_1
0x40119fd	    0x8b0500000000	            mov eax, dword [0x04011a03] 	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x4011a03	            0x85c0	                           test eax, eax	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x4011a05	     0xf846a010000	                            je 0x4011b75	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x4011a0b	    0x488b05000000	            mov rax, qword [0x04011a12] 	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a12	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a16	          0x4889d7	                            mov rdi, rdx	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a19	            0xffd0	                                call rax	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a1b	            0x89c2	                            mov edx, eax	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a21	            0x8b00	                    mov eax, dword [rax]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a23	            0x39c2	                            cmp edx, eax	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a25	     0xf8592000000	                           jne 0x4011abd	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4011a2b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a2f	            0x744c	                            je 0x4011a7d	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12564	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a35	            0x8b10	                    mov edx, dword [rax]	     12564	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12564	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a3b	            0x8910	                    mov dword [rax], edx	     12564	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a3d	    0x488b1d000000	            mov rbx, qword [0x04011a44] 	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a44	    0x488b05000000	            mov rax, qword [0x04011a4b] 	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a4b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a4f	          0x4889d7	                            mov rdi, rdx	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a52	            0xffd0	                                call rax	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a54	            0x4898	                                    cdqe	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a56	        0x488d5001	                      lea rdx, [rax + 1]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a5e	          0x4801d0	                            add rax, rdx	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a61	          0x4889c7	                            mov rdi, rax	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a64	            0xffd3	                                call rbx	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a66	            0x89c2	                            mov edx, eax	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a68	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a6c	            0x8910	                    mov dword [rax], edx	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x4011a6e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a72	    0xc70001000000	                      mov dword [rax], 1	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4011a78	      0xe9f3010000	                           jmp 0x4011c70	     12573	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2
0x4011a7d	    0x488b1d000000	            mov rbx, qword [0x04011a84] 	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a84	    0x488b05000000	            mov rax, qword [0x04011a8b] 	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a8b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a8f	          0x4889d7	                            mov rdi, rdx	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a92	            0xffd0	                                call rax	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a94	            0x4898	                                    cdqe	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a96	        0x488d5001	                      lea rdx, [rax + 1]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a9a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011a9e	          0x4801d0	                            add rax, rdx	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011aa1	          0x4889c7	                            mov rdi, rax	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011aa4	            0xffd3	                                call rbx	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011aa6	            0x89c2	                            mov edx, eax	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011aa8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011aac	            0x8910	                    mov dword [rax], edx	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4011aae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
0x4011ab2	    0xc70000000000	                      mov dword [rax], 0	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
0x4011ab8	      0xe9b3010000	                           jmp 0x4011c70	     12573	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2
0x4011abd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12575	option.c	FUNCTION_115	WHILE_1	IF_1
0x4011ac1	        0x488945e8	             mov qword [rbp - 0x18], rax	     12575	option.c	FUNCTION_115	WHILE_1	IF_1
0x4011ac5	    0x488b05000000	            mov rax, qword [0x04011acc] 	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4011acc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4011ad0	          0x4889d7	                            mov rdi, rdx	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4011ad3	            0xffd0	                                call rax	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4011ad5	          0x83c001	                              add eax, 1	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4011ad8	            0x4898	                                    cdqe	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4011ada	        0x480145e0	            add qword [rbp - 0x20], rax 	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4011ade	    0x488b05000000	            mov rax, qword [0x04011ae5] 	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011ae5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011ae9	          0x4889d7	                            mov rdi, rdx	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011aec	            0xffd0	                                call rax	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011aee	            0x89c2	                            mov edx, eax	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011af0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011af4	            0x8b00	                    mov eax, dword [rax]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011af6	            0x39c2	                            cmp edx, eax	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011af8	            0x7560	                           jne 0x4011b5a	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4011afa	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011afe	            0x7433	                            je 0x4011b33	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011b00	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12581	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011b04	            0x8b10	                    mov edx, dword [rax]	     12581	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011b06	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12581	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011b0a	            0x8910	                    mov dword [rax], edx	     12581	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011b0c	    0x488b05000000	            mov rax, qword [0x04011b13] 	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4011b13	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4011b17	          0x4889d7	                            mov rdi, rdx	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4011b1a	            0xffd0	                                call rax	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4011b1c	            0x89c2	                            mov edx, eax	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4011b1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4011b22	            0x8910	                    mov dword [rax], edx	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4011b24	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011b28	    0xc70000000000	                      mov dword [rax], 0	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4011b2e	      0xe93d010000	                           jmp 0x4011c70	     12590	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4
0x4011b33	    0x488b05000000	            mov rax, qword [0x04011b3a] 	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4011b3a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4011b3e	          0x4889d7	                            mov rdi, rdx	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4011b41	            0xffd0	                                call rax	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4011b43	            0x89c2	                            mov edx, eax	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4011b45	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4011b49	            0x8910	                    mov dword [rax], edx	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4011b4b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x4011b4f	    0xc70001000000	                      mov dword [rax], 1	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x4011b55	      0xe916010000	                           jmp 0x4011c70	     12590	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4
0x4011b5a	    0x488b05000000	            mov rax, qword [0x04011b61] 	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4011b61	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4011b65	          0x4889d7	                            mov rdi, rdx	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4011b68	            0xffd0	                                call rax	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4011b6a	            0x4898	                                    cdqe	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4011b6c	        0x480145e0	            add qword [rbp - 0x20], rax 	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4011b70	      0xe9dc000000	                           jmp 0x4011c51	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4011b75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011b79	           0xfb600	                   movzx eax, byte [rax]	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011b7c	           0xfb6d0	                           movzx edx, al	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011b7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011b83	            0x8b00	                    mov eax, dword [rax]	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011b85	            0x39c2	                            cmp edx, eax	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011b87	            0x7558	                           jne 0x4011be1	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011b89	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011b8d	            0x742f	                            je 0x4011bbe	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011b8f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12601	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011b93	    0xc70001000000	                      mov dword [rax], 1	     12601	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011b99	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011b9d	            0x8b10	                    mov edx, dword [rax]	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011b9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011ba3	            0x8910	                    mov dword [rax], edx	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011ba5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011ba9	        0x4883c002	                              add rax, 2	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011bad	           0xfb600	                   movzx eax, byte [rax]	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011bb0	           0xfb6d0	                           movzx edx, al	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011bb3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011bb7	            0x8910	                    mov dword [rax], edx	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4011bb9	      0xe9b2000000	                           jmp 0x4011c70	     12610	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011bbe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12607	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bc2	    0xc70000000000	                      mov dword [rax], 0	     12607	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bc8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bcc	        0x4883c002	                              add rax, 2	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bd0	           0xfb600	                   movzx eax, byte [rax]	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bd3	           0xfb6d0	                           movzx edx, al	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bd6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bda	            0x8910	                    mov dword [rax], edx	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x4011bdc	      0xe98f000000	                           jmp 0x4011c70	     12610	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x4011be1	      0x488345e002	               add qword [rbp - 0x20], 2	     12612	option.c	FUNCTION_115	WHILE_1	ELSE_3
0x4011be6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011bea	           0xfb600	                   movzx eax, byte [rax]	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011bed	           0xfb6d0	                           movzx edx, al	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011bf0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011bf4	            0x8b00	                    mov eax, dword [rax]	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011bf6	            0x39c2	                            cmp edx, eax	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011bf8	            0x7552	                           jne 0x4011c4c	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011bfa	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011bfe	            0x742c	                            je 0x4011c2c	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12617	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c04	    0xc70000000000	                      mov dword [rax], 0	     12617	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c0e	            0x8b10	                    mov edx, dword [rax]	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c10	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c14	            0x8910	                    mov dword [rax], edx	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c1a	        0x4883e802	                              sub rax, 2	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c1e	           0xfb600	                   movzx eax, byte [rax]	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c21	           0xfb6d0	                           movzx edx, al	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c28	            0x8910	                    mov dword [rax], edx	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4011c2a	            0xeb44	                           jmp 0x4011c70	     12626	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011c2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12623	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c30	    0xc70001000000	                      mov dword [rax], 1	     12623	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c3a	        0x4883e802	                              sub rax, 2	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c3e	           0xfb600	                   movzx eax, byte [rax]	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c41	           0xfb6d0	                           movzx edx, al	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c48	            0x8910	                    mov dword [rax], edx	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x4011c4a	            0xeb24	                           jmp 0x4011c70	     12626	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x4011c4c	      0x488345e001	               add qword [rbp - 0x20], 1	     12628	option.c	FUNCTION_115	WHILE_1	ELSE_3
0x4011c51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x4011c55	           0xfb600	                   movzx eax, byte [rax]	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x4011c58	            0x3c2c	                            cmp al, 0x2c	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x4011c5a	            0x7505	                           jne 0x4011c61	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x4011c5c	      0x488345e001	               add qword [rbp - 0x20], 1	     12631	option.c	FUNCTION_115	WHILE_1	IF_10
0x4011c61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12553	option.c	FUNCTION_115	WHILE_1
0x4011c65	           0xfb600	                   movzx eax, byte [rax]	     12553	option.c	FUNCTION_115	WHILE_1
0x4011c68	            0x84c0	                             test al, al	     12553	option.c	FUNCTION_115	WHILE_1
0x4011c6a	     0xf858dfdffff	                           jne 0x40119fd	     12553	option.c	FUNCTION_115	WHILE_1
0x4011c70	        0x4883c438	                           add rsp, 0x38	     12633	option.c	FUNCTION_115
0x4011c74	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x4011c75	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x4011c76	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
check_cedit	ELSE,1:IF,2:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	26
0x4003c8d	              0x55	                                push rbp	      5353	option.c	FUNCTION_20
0x4003c8e	          0x4889e5	                            mov rbp, rsp	      5353	option.c	FUNCTION_20
0x4003c91	        0x4883ec10	                           sub rsp, 0x10	      5353	option.c	FUNCTION_20
0x4003c95	    0x488b05000000	            mov rax, qword [0x04003c9c] 	      5356	option.c	FUNCTION_20	IF_1
0x4003c9c	           0xfb600	                   movzx eax, byte [rax]	      5356	option.c	FUNCTION_20	IF_1
0x4003c9f	            0x84c0	                             test al, al	      5356	option.c	FUNCTION_20	IF_1
0x4003ca1	            0x750c	                           jne 0x4003caf	      5356	option.c	FUNCTION_20	IF_1
0x4003ca3	    0xc70500000000	     mov dword [0x04003cad], 0xffffffff 	      5357	option.c	FUNCTION_20	IF_1
0x4003cad	            0xeb35	                           jmp 0x4003ce4	      5357	option.c	FUNCTION_20	IF_1
0x4003caf	    0x488b05000000	            mov rax, qword [0x04003cb6] 	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003cb6	      0xbe00000000	                              mov esi, 0	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003cbb	          0x4889c7	                            mov rdi, rax	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003cbe	      0xe800000000	                          call 0x4003cc3	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003cc3	          0x8945fc	                mov dword [rbp - 4], eax	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003cc6	          0x8b45fc	                mov eax, dword [rbp - 4]	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003cc9	            0x89c7	                            mov edi, eax	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003ccb	      0xe800000000	                          call 0x4003cd0	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003cd0	            0x85c0	                           test eax, eax	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003cd2	            0x7407	                            je 0x4003cdb	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003cd4	      0xb800000000	                              mov eax, 0	      5362	option.c	FUNCTION_20	ELSE_1	IF_2
0x4003cd9	            0xeb0e	                           jmp 0x4003ce9	      5362	option.c	FUNCTION_20	ELSE_1	IF_2
0x4003cdb	          0x8b45fc	                mov eax, dword [rbp - 4]	      5363	option.c	FUNCTION_20	ELSE_1
0x4003cde	    0x890500000000	            mov dword [0x04003ce4], eax 	      5363	option.c	FUNCTION_20	ELSE_1
0x4003ce4	      0xb800000000	                              mov eax, 0	      5365	option.c	FUNCTION_20
0x4003ce9	              0xc9	                                   leave	      5366	option.c	FUNCTION_20
0x4003cea	              0xc3	                                     ret	      5366	option.c	FUNCTION_20
has_format_option	ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	20
0x4010c13	              0x55	                                push rbp	     12042	option.c	FUNCTION_97
0x4010c14	          0x4889e5	                            mov rbp, rsp	     12042	option.c	FUNCTION_97
0x4010c17	        0x4883ec10	                           sub rsp, 0x10	     12042	option.c	FUNCTION_97
0x4010c1b	          0x897dfc	                mov dword [rbp - 4], edi	     12042	option.c	FUNCTION_97
0x4010c1e	    0x8b0500000000	            mov eax, dword [0x04010c24] 	     12043	option.c	FUNCTION_97	IF_1
0x4010c24	            0x85c0	                           test eax, eax	     12043	option.c	FUNCTION_97	IF_1
0x4010c26	            0x7407	                            je 0x4010c2f	     12043	option.c	FUNCTION_97	IF_1
0x4010c28	      0xb800000000	                              mov eax, 0	     12044	option.c	FUNCTION_97	IF_1
0x4010c2d	            0xeb24	                           jmp 0x4010c53	     12044	option.c	FUNCTION_97	IF_1
0x4010c2f	    0x488b05000000	            mov rax, qword [0x04010c36] 	     12045	option.c	FUNCTION_97	CALL_1
0x4010c36	    0x488b80a01400	          mov rax, qword [rax + 0x14a0] 	     12045	option.c	FUNCTION_97	CALL_1
0x4010c3d	          0x8b55fc	                mov edx, dword [rbp - 4]	     12045	option.c	FUNCTION_97	CALL_1
0x4010c40	            0x89d6	                            mov esi, edx	     12045	option.c	FUNCTION_97	CALL_1
0x4010c42	          0x4889c7	                            mov rdi, rax	     12045	option.c	FUNCTION_97	CALL_1
0x4010c45	      0xe800000000	                          call 0x4010c4a	     12045	option.c	FUNCTION_97	CALL_1
0x4010c4a	          0x4885c0	                           test rax, rax	     12045	option.c	FUNCTION_97	CALL_1
0x4010c4d	           0xf95c0	                                setne al	     12045	option.c	FUNCTION_97	CALL_1
0x4010c50	           0xfb6c0	                           movzx eax, al	     12045	option.c	FUNCTION_97	CALL_1
0x4010c53	              0xc9	                                   leave	     12046	option.c	FUNCTION_97
0x4010c54	              0xc3	                                     ret	     12046	option.c	FUNCTION_97
compile_cap_prog	ELSE,1:IF,3:SWITCH,0:CALL,4:DO,0:WHILE,0:functions,0:FOR,0	48
0x400914a	              0x55	                                push rbp	      8068	option.c	FUNCTION_47
0x400914b	          0x4889e5	                            mov rbp, rsp	      8068	option.c	FUNCTION_47
0x400914e	        0x4883ec20	                           sub rsp, 0x20	      8068	option.c	FUNCTION_47
0x4009152	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8068	option.c	FUNCTION_47
0x4009156	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8069	option.c	FUNCTION_47
0x400915a	    0x488b80700400	           mov rax, qword [rax + 0x470] 	      8069	option.c	FUNCTION_47
0x4009161	        0x488945f0	             mov qword [rbp - 0x10], rax	      8069	option.c	FUNCTION_47
0x4009165	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8072	option.c	FUNCTION_47	IF_1
0x4009169	    0x488b80680400	           mov rax, qword [rax + 0x468] 	      8072	option.c	FUNCTION_47	IF_1
0x4009170	           0xfb600	                   movzx eax, byte [rax]	      8072	option.c	FUNCTION_47	IF_1
0x4009173	            0x84c0	                             test al, al	      8072	option.c	FUNCTION_47	IF_1
0x4009175	            0x7511	                           jne 0x4009188	      8072	option.c	FUNCTION_47	IF_1
0x4009177	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8073	option.c	FUNCTION_47	IF_1
0x400917b	    0x48c780700400	              mov qword [rax + 0x470], 0	      8073	option.c	FUNCTION_47	IF_1
0x4009186	            0xeb74	                           jmp 0x40091fc	      8073	option.c	FUNCTION_47	IF_1
0x4009188	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x400918c	    0x488b80680400	           mov rax, qword [rax + 0x468] 	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x4009193	          0x4889c6	                            mov rsi, rax	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x4009196	      0xbf00000000	                              mov edi, 0	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x400919b	      0xe800000000	                          call 0x40091a0	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x40091a0	        0x488945f8	                mov qword [rbp - 8], rax	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x40091a4	      0x48837df800	                  cmp qword [rbp - 8], 0	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x40091a9	            0x7451	                            je 0x40091fc	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x40091ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40091af	      0xbe01000000	                              mov esi, 1	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40091b4	          0x4889c7	                            mov rdi, rax	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40091b7	      0xe800000000	                          call 0x40091bc	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40091bc	          0x4889c2	                            mov rdx, rax	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40091bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40091c3	    0x488990700400	            mov qword [rax + 0x470], rdx	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40091ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x40091ce	          0x4889c7	                            mov rdi, rax	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x40091d1	      0xe800000000	                          call 0x40091d6	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x40091d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091da	    0x488b80700400	           mov rax, qword [rax + 0x470] 	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091e1	          0x4885c0	                           test rax, rax	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091e4	            0x7516	                           jne 0x40091fc	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8084	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091ea	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      8084	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091ee	    0x488990700400	            mov qword [rax + 0x470], rdx	      8084	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091f5	      0xb800000000	                              mov eax, 0	      8085	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091fa	            0xeb11	                           jmp 0x400920d	      8085	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x40091fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8090	option.c	FUNCTION_47	CALL_4
0x4009200	          0x4889c7	                            mov rdi, rax	      8090	option.c	FUNCTION_47	CALL_4
0x4009203	      0xe800000000	                          call 0x4009208	      8090	option.c	FUNCTION_47	CALL_4
0x4009208	      0xb800000000	                              mov eax, 0	      8091	option.c	FUNCTION_47
0x400920d	              0xc9	                                   leave	      8092	option.c	FUNCTION_47
0x400920e	              0xc3	                                     ret	      8092	option.c	FUNCTION_47
set_term_defaults	ELSE,0:IF,3:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,1	62
0x400cc8e	              0x55	                                push rbp	     10347	option.c	FUNCTION_72
0x400cc8f	          0x4889e5	                            mov rbp, rsp	     10347	option.c	FUNCTION_72
0x400cc92	        0x4883ec10	                           sub rsp, 0x10	     10347	option.c	FUNCTION_72
0x400cc96	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10350	option.c	FUNCTION_72	FOR_1
0x400cc9e	      0xe9bb000000	                           jmp 0x400cd5e	     10350	option.c	FUNCTION_72	FOR_1
0x400cca3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400cca7	          0x4889c7	                            mov rdi, rax	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccaa	      0xe8c2000000	                   call sym.istermoption	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccaf	            0x85c0	                           test eax, eax	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccb1	     0xf84a2000000	                            je 0x400cd59	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccb7	        0x488b45f8	                mov rax, qword [rbp - 8]	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccbb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccbf	        0x488b45f8	                mov rax, qword [rbp - 8]	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccc3	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccc7	          0x488b00	                    mov rax, qword [rax]	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccca	          0x4839c2	                            cmp rdx, rax	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400cccd	     0xf8486000000	                            je 0x400cd59	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400ccd3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400ccd7	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400ccdb	      0x2580000000	                           and eax, 0x80	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400cce0	          0x4885c0	                           test rax, rax	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400cce3	            0x7425	                            je 0x400cd0a	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400cce5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10356	option.c	FUNCTION_72	FOR_1	IF_1	IF_2	CALL_2
0x400cce9	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10356	option.c	FUNCTION_72	FOR_1	IF_1	IF_2	CALL_2
0x400cced	          0x4889c7	                            mov rdi, rax	     10356	option.c	FUNCTION_72	FOR_1	IF_1	IF_2	CALL_2
0x400ccf0	      0xe800000000	                          call 0x400ccf5	     10356	option.c	FUNCTION_72	FOR_1	IF_1	IF_2	CALL_2
0x400ccf5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400ccf9	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400ccfd	            0x247f	                            and al, 0x7f	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400ccff	          0x4889c2	                            mov rdx, rax	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400cd02	        0x488b45f8	                mov rax, qword [rbp - 8]	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400cd06	        0x48895010	             mov qword [rax + 0x10], rdx	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x400cd0a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x400cd0e	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x400cd12	          0x488b10	                    mov rdx, qword [rax]	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x400cd15	        0x488b45f8	                mov rax, qword [rbp - 8]	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x400cd19	        0x48895028	             mov qword [rax + 0x28], rdx	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x400cd1d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd21	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd25	          0x83e008	                              and eax, 8	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd28	          0x4885c0	                           test rax, rax	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd2b	            0x742c	                            je 0x400cd59	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd2d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10362	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd31	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10362	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd35	             0xc80	                             or al, 0x80	     10362	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd37	          0x4889c2	                            mov rdx, rax	     10362	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd3a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10362	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd3e	        0x48895010	             mov qword [rax + 0x10], rdx	     10362	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd42	        0x488b45f8	                mov rax, qword [rbp - 8]	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd46	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd4a	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd4e	          0x4889c2	                            mov rdx, rax	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd51	        0x488b45f8	                mov rax, qword [rbp - 8]	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd55	        0x48895010	             mov qword [rax + 0x10], rdx	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400cd59	      0x488345f840	               add qword [rbp - 8], 0x40	     10350	option.c	FUNCTION_72	FOR_1
0x400cd5e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10350	option.c	FUNCTION_72	FOR_1
0x400cd62	          0x488b00	                    mov rax, qword [rax]	     10350	option.c	FUNCTION_72	FOR_1
0x400cd65	          0x4885c0	                           test rax, rax	     10350	option.c	FUNCTION_72	FOR_1
0x400cd68	     0xf8535ffffff	                           jne 0x400cca3	     10350	option.c	FUNCTION_72	FOR_1
0x400cd6e	              0x90	                                     nop	     10367	option.c	FUNCTION_72
0x400cd6f	              0xc9	                                   leave	     10367	option.c	FUNCTION_72
0x400cd70	              0xc3	                                     ret	     10367	option.c	FUNCTION_72
showoneopt	ELSE,2:IF,3:SWITCH,0:CALL,9:DO,0:WHILE,0:functions,0:FOR,0	74
0x400c216	              0x55	                                push rbp	      9993	option.c	FUNCTION_63
0x400c217	          0x4889e5	                            mov rbp, rsp	      9993	option.c	FUNCTION_63
0x400c21a	        0x4883ec20	                           sub rsp, 0x20	      9993	option.c	FUNCTION_63
0x400c21e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9993	option.c	FUNCTION_63
0x400c222	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9993	option.c	FUNCTION_63
0x400c225	    0x8b0500000000	            mov eax, dword [0x0400c22b] 	      9995	option.c	FUNCTION_63
0x400c22b	          0x8945f4	              mov dword [rbp - 0xc], eax	      9995	option.c	FUNCTION_63
0x400c22e	    0xc70500000000	               mov dword [0x0400c238], 0	      9997	option.c	FUNCTION_63
0x400c238	    0xc70500000000	               mov dword [0x0400c242], 1	      9998	option.c	FUNCTION_63
0x400c242	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     10000	option.c	FUNCTION_63	CALL_1
0x400c245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10000	option.c	FUNCTION_63	CALL_1
0x400c249	            0x89d6	                            mov esi, edx	     10000	option.c	FUNCTION_63	CALL_1
0x400c24b	          0x4889c7	                            mov rdi, rax	     10000	option.c	FUNCTION_63	CALL_1
0x400c24e	      0xe8e30f0000	                 call sym.get_varp_scope	     10000	option.c	FUNCTION_63	CALL_1
0x400c253	        0x488945f8	                mov qword [rbp - 8], rax	     10000	option.c	FUNCTION_63	CALL_1
0x400c257	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10003	option.c	FUNCTION_63	IF_1
0x400c25b	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10003	option.c	FUNCTION_63	IF_1
0x400c25f	          0x83e001	                              and eax, 1	     10003	option.c	FUNCTION_63	IF_1
0x400c262	          0x4885c0	                           test rax, rax	     10003	option.c	FUNCTION_63	IF_1
0x400c265	            0x7434	                            je 0x400c29b	     10003	option.c	FUNCTION_63	IF_1
0x400c267	    0x488b05000000	            mov rax, qword [0x0400c26e] 	     10003	option.c	FUNCTION_63	IF_1
0x400c26e	    0x4805c8000000	                           add rax, 0xc8	     10003	option.c	FUNCTION_63	IF_1
0x400c274	        0x483b45f8	                cmp rax, qword [rbp - 8]	     10003	option.c	FUNCTION_63	IF_1
0x400c278	            0x750b	                           jne 0x400c285	     10003	option.c	FUNCTION_63	IF_1
0x400c27a	      0xe800000000	                          call 0x400c27f	     10004	option.c	FUNCTION_63	IF_1	CALL_2
0x400c27f	            0x85c0	                           test eax, eax	     10003	option.c	FUNCTION_63	IF_1
0x400c281	            0x740c	                            je 0x400c28f	     10003	option.c	FUNCTION_63	IF_1
0x400c283	            0xeb16	                           jmp 0x400c29b	     10003	option.c	FUNCTION_63	IF_1
0x400c285	        0x488b45f8	                mov rax, qword [rbp - 8]	     10004	option.c	FUNCTION_63	IF_1	CALL_2
0x400c289	            0x8b00	                    mov eax, dword [rax]	     10004	option.c	FUNCTION_63	IF_1	CALL_2
0x400c28b	            0x85c0	                           test eax, eax	     10003	option.c	FUNCTION_63	IF_1
0x400c28d	            0x750c	                           jne 0x400c29b	     10003	option.c	FUNCTION_63	IF_1
0x400c28f	      0xbf00000000	                              mov edi, 0	     10005	option.c	FUNCTION_63	CALL_3
0x400c294	      0xe800000000	                          call 0x400c299	     10005	option.c	FUNCTION_63	CALL_3
0x400c299	            0xeb30	                           jmp 0x400c2cb	     10005	option.c	FUNCTION_63	CALL_3
0x400c29b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c29f	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2a3	          0x83e001	                              and eax, 1	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2a6	          0x4885c0	                           test rax, rax	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2a9	            0x7416	                            je 0x400c2c1	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2ab	        0x488b45f8	                mov rax, qword [rbp - 8]	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2af	            0x8b00	                    mov eax, dword [rax]	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2b1	            0x85c0	                           test eax, eax	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2b3	            0x790c	                           jns 0x400c2c1	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2b5	      0xbf00000000	                              mov edi, 0	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2ba	      0xe800000000	                          call 0x400c2bf	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2bf	            0xeb0a	                           jmp 0x400c2cb	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x400c2c1	      0xbf00000000	                              mov edi, 0	     10009	option.c	FUNCTION_63	CALL_5
0x400c2c6	      0xe800000000	                          call 0x400c2cb	     10009	option.c	FUNCTION_63	CALL_5
0x400c2cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10010	option.c	FUNCTION_63	CALL_6
0x400c2cf	          0x488b00	                    mov rax, qword [rax]	     10010	option.c	FUNCTION_63	CALL_6
0x400c2d2	          0x4889c7	                            mov rdi, rax	     10010	option.c	FUNCTION_63	CALL_6
0x400c2d5	      0xe800000000	                          call 0x400c2da	     10010	option.c	FUNCTION_63	CALL_6
0x400c2da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10011	option.c	FUNCTION_63	IF_3
0x400c2de	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10011	option.c	FUNCTION_63	IF_3
0x400c2e2	          0x83e001	                              and eax, 1	     10011	option.c	FUNCTION_63	IF_3
0x400c2e5	          0x4885c0	                           test rax, rax	     10011	option.c	FUNCTION_63	IF_3
0x400c2e8	            0x752a	                           jne 0x400c314	     10011	option.c	FUNCTION_63	IF_3
0x400c2ea	      0xbf3d000000	                           mov edi, 0x3d	     10013	option.c	FUNCTION_63	IF_3	CALL_7
0x400c2ef	      0xe800000000	                          call 0x400c2f4	     10013	option.c	FUNCTION_63	IF_3	CALL_7
0x400c2f4	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x400c2f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x400c2fb	            0x89d6	                            mov esi, edx	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x400c2fd	          0x4889c7	                            mov rdi, rax	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x400c300	      0xe835420000	            call sym.option_value2string	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x400c305	    0x488b05000000	            mov rax, qword [0x0400c30c] 	     10016	option.c	FUNCTION_63	IF_3	CALL_9
0x400c30c	          0x4889c7	                            mov rdi, rax	     10016	option.c	FUNCTION_63	IF_3	CALL_9
0x400c30f	      0xe800000000	                          call 0x400c314	     10016	option.c	FUNCTION_63	IF_3	CALL_9
0x400c314	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10019	option.c	FUNCTION_63
0x400c317	    0x890500000000	            mov dword [0x0400c31d], eax 	     10019	option.c	FUNCTION_63
0x400c31d	    0xc70500000000	               mov dword [0x0400c327], 0	     10020	option.c	FUNCTION_63
0x400c327	              0x90	                                     nop	     10021	option.c	FUNCTION_63
0x400c328	              0xc9	                                   leave	     10021	option.c	FUNCTION_63
0x400c329	              0xc3	                                     ret	     10021	option.c	FUNCTION_63
check_stl_option	ELSE,0:IF,14:SWITCH,0:CALL,7:DO,0:WHILE,5:functions,0:FOR,0	151
0x4008ba7	              0x55	                                push rbp	      7877	option.c	FUNCTION_44
0x4008ba8	          0x4889e5	                            mov rbp, rsp	      7877	option.c	FUNCTION_44
0x4008bab	        0x4883ec20	                           sub rsp, 0x20	      7877	option.c	FUNCTION_44
0x4008baf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7877	option.c	FUNCTION_44
0x4008bb3	    0xc745f8000000	                  mov dword [rbp - 8], 0	      7878	option.c	FUNCTION_44
0x4008bba	    0xc745fc000000	                  mov dword [rbp - 4], 0	      7879	option.c	FUNCTION_44
0x4008bc1	      0xe987010000	                           jmp 0x4008d4d	      7882	option.c	FUNCTION_44	WHILE_1
0x4008bc6	      0x488345e801	               add qword [rbp - 0x18], 1	      7886	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bcb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bcf	           0xfb600	                   movzx eax, byte [rax]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bd2	            0x84c0	                             test al, al	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bd4	            0x740b	                            je 0x4008be1	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bda	           0xfb600	                   movzx eax, byte [rax]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bdd	            0x3c25	                            cmp al, 0x25	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008bdf	            0x75e5	                           jne 0x4008bc6	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4008be1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x4008be5	           0xfb600	                   movzx eax, byte [rax]	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x4008be8	            0x84c0	                             test al, al	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x4008bea	     0xf8474010000	                            je 0x4008d64	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x4008bf0	      0x488345e801	               add qword [rbp - 0x18], 1	      7889	option.c	FUNCTION_44	WHILE_1
0x4008bf5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008bf9	           0xfb600	                   movzx eax, byte [rax]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008bfc	            0x3c25	                            cmp al, 0x25	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008bfe	            0x740f	                            je 0x4008c0f	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008c00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008c04	           0xfb600	                   movzx eax, byte [rax]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008c07	            0x3c29	                            cmp al, 0x29	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008c09	            0x7404	                            je 0x4008c0f	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008c0b	        0x8345f801	                  add dword [rbp - 8], 1	      7891	option.c	FUNCTION_44	WHILE_1	IF_2
0x4008c0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c13	           0xfb600	                   movzx eax, byte [rax]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c16	            0x3c25	                            cmp al, 0x25	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c18	            0x7416	                            je 0x4008c30	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c1e	           0xfb600	                   movzx eax, byte [rax]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c21	            0x3c3c	                            cmp al, 0x3c	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c23	            0x740b	                            je 0x4008c30	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c29	           0xfb600	                   movzx eax, byte [rax]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c2c	            0x3c3d	                            cmp al, 0x3d	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c2e	            0x750a	                           jne 0x4008c3a	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c30	      0x488345e801	               add qword [rbp - 0x18], 1	      7894	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c35	      0xe913010000	                           jmp 0x4008d4d	      7895	option.c	FUNCTION_44	WHILE_1	IF_3
0x4008c3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4008c3e	           0xfb600	                   movzx eax, byte [rax]	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4008c41	            0x3c29	                            cmp al, 0x29	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4008c43	            0x7518	                           jne 0x4008c5d	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4008c45	      0x488345e801	               add qword [rbp - 0x18], 1	      7899	option.c	FUNCTION_44	WHILE_1	IF_4
0x4008c4a	        0x836dfc01	                  sub dword [rbp - 4], 1	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4008c4e	        0x837dfc00	                  cmp dword [rbp - 4], 0	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4008c52	     0xf880f010000	                            js 0x4008d67	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4008c58	      0xe9f0000000	                           jmp 0x4008d4d	      7902	option.c	FUNCTION_44	WHILE_1	IF_4
0x4008c5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x4008c61	           0xfb600	                   movzx eax, byte [rax]	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x4008c64	            0x3c2d	                            cmp al, 0x2d	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x4008c66	            0x750c	                           jne 0x4008c74	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x4008c68	      0x488345e801	               add qword [rbp - 0x18], 1	      7905	option.c	FUNCTION_44	WHILE_1	IF_6
0x4008c6d	            0xeb05	                           jmp 0x4008c74	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4008c6f	      0x488345e801	               add qword [rbp - 0x18], 1	      7907	option.c	FUNCTION_44	WHILE_1	WHILE_3
0x4008c74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4008c78	           0xfb600	                   movzx eax, byte [rax]	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4008c7b	           0xfb6c0	                           movzx eax, al	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4008c7e	          0x83e830	                           sub eax, 0x30	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4008c81	          0x83f809	                              cmp eax, 9	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4008c84	            0x76e9	                           jbe 0x4008c6f	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4008c86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4008c8a	           0xfb600	                   movzx eax, byte [rax]	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4008c8d	            0x3c2a	                            cmp al, 0x2a	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4008c8f	            0x7505	                           jne 0x4008c96	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4008c91	      0xe9b7000000	                           jmp 0x4008d4d	      7909	option.c	FUNCTION_44	WHILE_1	IF_7
0x4008c96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4008c9a	           0xfb600	                   movzx eax, byte [rax]	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4008c9d	            0x3c2e	                            cmp al, 0x2e	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4008c9f	            0x7529	                           jne 0x4008cca	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4008ca1	      0x488345e801	               add qword [rbp - 0x18], 1	      7912	option.c	FUNCTION_44	WHILE_1	IF_8
0x4008ca6	            0xeb05	                           jmp 0x4008cad	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008ca8	      0x488345e801	               add qword [rbp - 0x18], 1	      7914	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4
0x4008cad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cb1	           0xfb600	                   movzx eax, byte [rax]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cb4	            0x84c0	                             test al, al	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cb6	            0x7412	                            je 0x4008cca	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cbc	           0xfb600	                   movzx eax, byte [rax]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cbf	           0xfb6c0	                           movzx eax, al	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cc2	          0x83e830	                           sub eax, 0x30	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cc5	          0x83f809	                              cmp eax, 9	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cc8	            0x76de	                           jbe 0x4008ca8	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4008cca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x4008cce	           0xfb600	                   movzx eax, byte [rax]	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x4008cd1	            0x3c28	                            cmp al, 0x28	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x4008cd3	            0x7506	                           jne 0x4008cdb	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x4008cd5	        0x8345fc01	                  add dword [rbp - 4], 1	      7918	option.c	FUNCTION_44	WHILE_1	IF_9
0x4008cd9	            0xeb72	                           jmp 0x4008d4d	      7919	option.c	FUNCTION_44	WHILE_1	IF_9
0x4008cdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008cdf	           0xfb600	                   movzx eax, byte [rax]	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008ce2	           0xfb6c0	                           movzx eax, al	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008ce5	            0x89c6	                            mov esi, eax	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008ce7	      0xbf00000000	                              mov edi, 0	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008cec	      0xe800000000	                          call 0x4008cf1	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008cf1	          0x4885c0	                           test rax, rax	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008cf4	            0x7518	                           jne 0x4008d0e	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4008cf6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4008cfa	           0xfb600	                   movzx eax, byte [rax]	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4008cfd	           0xfb6c0	                           movzx eax, al	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4008d00	            0x89c6	                            mov esi, eax	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4008d02	      0xbf00000000	                              mov edi, 0	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4008d07	      0xe86caeffff	                   call sym.illegal_char	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4008d0c	            0xeb79	                           jmp 0x4008d87	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4008d0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4008d12	           0xfb600	                   movzx eax, byte [rax]	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4008d15	            0x3c7b	                            cmp al, 0x7b	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4008d17	            0x7534	                           jne 0x4008d4d	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4008d19	      0x488345e801	               add qword [rbp - 0x18], 1	      7927	option.c	FUNCTION_44	WHILE_1	IF_11
0x4008d1e	            0xeb05	                           jmp 0x4008d25	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d20	      0x488345e801	               add qword [rbp - 0x18], 1	      7929	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d29	           0xfb600	                   movzx eax, byte [rax]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d2c	            0x3c7d	                            cmp al, 0x7d	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d2e	            0x740b	                            je 0x4008d3b	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d34	           0xfb600	                   movzx eax, byte [rax]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d37	            0x84c0	                             test al, al	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d39	            0x75e5	                           jne 0x4008d20	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4008d3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4008d3f	           0xfb600	                   movzx eax, byte [rax]	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4008d42	            0x3c7d	                            cmp al, 0x7d	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4008d44	            0x7407	                            je 0x4008d4d	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4008d46	      0xb800000000	                              mov eax, 0	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x4008d4b	            0xeb3a	                           jmp 0x4008d87	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x4008d4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7882	option.c	FUNCTION_44	WHILE_1
0x4008d51	           0xfb600	                   movzx eax, byte [rax]	      7882	option.c	FUNCTION_44	WHILE_1
0x4008d54	            0x84c0	                             test al, al	      7882	option.c	FUNCTION_44	WHILE_1
0x4008d56	            0x7410	                            je 0x4008d68	      7882	option.c	FUNCTION_44	WHILE_1
0x4008d58	        0x837df84f	               cmp dword [rbp - 8], 0x4f	      7882	option.c	FUNCTION_44	WHILE_1
0x4008d5c	     0xf8e69feffff	                           jle 0x4008bcb	      7882	option.c	FUNCTION_44	WHILE_1
0x4008d62	            0xeb04	                           jmp 0x4008d68	      7882	option.c	FUNCTION_44	WHILE_1
0x4008d64	              0x90	                                     nop	      7888	option.c	FUNCTION_44	WHILE_1	IF_1
0x4008d65	            0xeb01	                           jmp 0x4008d68	      7888	option.c	FUNCTION_44	WHILE_1	IF_1
0x4008d67	              0x90	                                     nop	      7901	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4008d68	        0x837df84f	               cmp dword [rbp - 8], 0x4f	      7934	option.c	FUNCTION_44	IF_13
0x4008d6c	            0x7e07	                           jle 0x4008d75	      7934	option.c	FUNCTION_44	IF_13
0x4008d6e	      0xb800000000	                              mov eax, 0	      7935	option.c	FUNCTION_44	CALL_6
0x4008d73	            0xeb12	                           jmp 0x4008d87	      7935	option.c	FUNCTION_44	CALL_6
0x4008d75	        0x837dfc00	                  cmp dword [rbp - 4], 0	      7936	option.c	FUNCTION_44	IF_14
0x4008d79	            0x7407	                            je 0x4008d82	      7936	option.c	FUNCTION_44	IF_14
0x4008d7b	      0xb800000000	                              mov eax, 0	      7937	option.c	FUNCTION_44	CALL_7
0x4008d80	            0xeb05	                           jmp 0x4008d87	      7937	option.c	FUNCTION_44	CALL_7
0x4008d82	      0xb800000000	                              mov eax, 0	      7938	option.c	FUNCTION_44
0x4008d87	              0xc9	                                   leave	      7939	option.c	FUNCTION_44
0x4008d88	              0xc3	                                     ret	      7939	option.c	FUNCTION_44
check_string_option	ELSE,0:IF,1:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	13
0x400479d	              0x55	                                push rbp	      5770	option.c	FUNCTION_32
0x400479e	          0x4889e5	                            mov rbp, rsp	      5770	option.c	FUNCTION_32
0x40047a1	        0x48897df8	                mov qword [rbp - 8], rdi	      5770	option.c	FUNCTION_32
0x40047a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5771	option.c	FUNCTION_32	IF_1
0x40047a9	          0x488b00	                    mov rax, qword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40047ac	          0x4885c0	                           test rax, rax	      5771	option.c	FUNCTION_32	IF_1
0x40047af	            0x750e	                           jne 0x40047bf	      5771	option.c	FUNCTION_32	IF_1
0x40047b1	    0x488b15000000	            mov rdx, qword [0x040047b8] 	      5772	option.c	FUNCTION_32	IF_1
0x40047b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5772	option.c	FUNCTION_32	IF_1
0x40047bc	          0x488910	                    mov qword [rax], rdx	      5772	option.c	FUNCTION_32	IF_1
0x40047bf	              0x90	                                     nop	      5773	option.c	FUNCTION_32
0x40047c0	              0x5d	                                 pop rbp	      5773	option.c	FUNCTION_32
0x40047c1	              0xc3	                                     ret	      5773	option.c	FUNCTION_32
file_ff_differs	ELSE,0:IF,6:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	94
0x40117ed	              0x55	                                push rbp	     12484	option.c	FUNCTION_111
0x40117ee	          0x4889e5	                            mov rbp, rsp	     12484	option.c	FUNCTION_111
0x40117f1	        0x4883ec10	                           sub rsp, 0x10	     12484	option.c	FUNCTION_111
0x40117f5	        0x48897df8	                mov qword [rbp - 8], rdi	     12484	option.c	FUNCTION_111
0x40117f9	          0x8975f4	              mov dword [rbp - 0xc], esi	     12484	option.c	FUNCTION_111
0x40117fc	        0x488b45f8	                mov rax, qword [rbp - 8]	     12486	option.c	FUNCTION_111	IF_1
0x4011800	          0x8b407c	            mov eax, dword [rax + 0x7c] 	     12486	option.c	FUNCTION_111	IF_1
0x4011803	          0x83e004	                              and eax, 4	     12486	option.c	FUNCTION_111	IF_1
0x4011806	            0x85c0	                           test eax, eax	     12486	option.c	FUNCTION_111	IF_1
0x4011808	            0x740a	                            je 0x4011814	     12486	option.c	FUNCTION_111	IF_1
0x401180a	      0xb800000000	                              mov eax, 0	     12487	option.c	FUNCTION_111	IF_1
0x401180f	      0xe92a010000	                           jmp 0x401193e	     12487	option.c	FUNCTION_111	IF_1
0x4011814	        0x837df400	                cmp dword [rbp - 0xc], 0	     12488	option.c	FUNCTION_111	IF_2
0x4011818	            0x7442	                            je 0x401185c	     12488	option.c	FUNCTION_111	IF_2
0x401181a	        0x488b45f8	                mov rax, qword [rbp - 8]	     12489	option.c	FUNCTION_111	IF_2
0x401181e	          0x8b407c	            mov eax, dword [rax + 0x7c] 	     12489	option.c	FUNCTION_111	IF_2
0x4011821	          0x83e010	                           and eax, 0x10	     12489	option.c	FUNCTION_111	IF_2
0x4011824	            0x85c0	                           test eax, eax	     12489	option.c	FUNCTION_111	IF_2
0x4011826	            0x7434	                            je 0x401185c	     12489	option.c	FUNCTION_111	IF_2
0x4011828	        0x488b45f8	                mov rax, qword [rbp - 8]	     12490	option.c	FUNCTION_111	IF_2
0x401182c	          0x488b00	                    mov rax, qword [rax]	     12490	option.c	FUNCTION_111	IF_2
0x401182f	        0x4883f801	                              cmp rax, 1	     12490	option.c	FUNCTION_111	IF_2
0x4011833	            0x7527	                           jne 0x401185c	     12490	option.c	FUNCTION_111	IF_2
0x4011835	        0x488b45f8	                mov rax, qword [rbp - 8]	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4011839	      0xba00000000	                              mov edx, 0	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x401183e	      0xbe01000000	                              mov esi, 1	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4011843	          0x4889c7	                            mov rdi, rax	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4011846	      0xe800000000	                          call 0x401184b	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x401184b	           0xfb600	                   movzx eax, byte [rax]	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x401184e	            0x84c0	                             test al, al	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4011850	            0x750a	                           jne 0x401185c	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4011852	      0xb800000000	                              mov eax, 0	     12492	option.c	FUNCTION_111	IF_2
0x4011857	      0xe9e2000000	                           jmp 0x401193e	     12492	option.c	FUNCTION_111	IF_2
0x401185c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12493	option.c	FUNCTION_111	IF_3
0x4011860	    0x8b9004170000	          mov edx, dword [rax + 0x1704] 	     12493	option.c	FUNCTION_111	IF_3
0x4011866	        0x488b45f8	                mov rax, qword [rbp - 8]	     12493	option.c	FUNCTION_111	IF_3
0x401186a	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	     12493	option.c	FUNCTION_111	IF_3
0x4011871	           0xfb600	                   movzx eax, byte [rax]	     12493	option.c	FUNCTION_111	IF_3
0x4011874	           0xfb6c0	                           movzx eax, al	     12493	option.c	FUNCTION_111	IF_3
0x4011877	            0x39c2	                            cmp edx, eax	     12493	option.c	FUNCTION_111	IF_3
0x4011879	            0x740a	                            je 0x4011885	     12493	option.c	FUNCTION_111	IF_3
0x401187b	      0xb801000000	                              mov eax, 1	     12494	option.c	FUNCTION_111	IF_3
0x4011880	      0xe9b9000000	                           jmp 0x401193e	     12494	option.c	FUNCTION_111	IF_3
0x4011885	        0x488b45f8	                mov rax, qword [rbp - 8]	     12495	option.c	FUNCTION_111	IF_4
0x4011889	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	     12495	option.c	FUNCTION_111	IF_4
0x401188f	            0x85c0	                           test eax, eax	     12495	option.c	FUNCTION_111	IF_4
0x4011891	            0x750e	                           jne 0x40118a1	     12495	option.c	FUNCTION_111	IF_4
0x4011893	        0x488b45f8	                mov rax, qword [rbp - 8]	     12495	option.c	FUNCTION_111	IF_4
0x4011897	    0x8b8074140000	          mov eax, dword [rax + 0x1474] 	     12495	option.c	FUNCTION_111	IF_4
0x401189d	            0x85c0	                           test eax, eax	     12495	option.c	FUNCTION_111	IF_4
0x401189f	            0x751f	                           jne 0x40118c0	     12495	option.c	FUNCTION_111	IF_4
0x40118a1	        0x488b45f8	                mov rax, qword [rbp - 8]	     12495	option.c	FUNCTION_111	IF_4
0x40118a5	    0x8b9000170000	          mov edx, dword [rax + 0x1700] 	     12495	option.c	FUNCTION_111	IF_4
0x40118ab	        0x488b45f8	                mov rax, qword [rbp - 8]	     12495	option.c	FUNCTION_111	IF_4
0x40118af	    0x8b8070140000	          mov eax, dword [rax + 0x1470] 	     12495	option.c	FUNCTION_111	IF_4
0x40118b5	            0x39c2	                            cmp edx, eax	     12495	option.c	FUNCTION_111	IF_4
0x40118b7	            0x7407	                            je 0x40118c0	     12495	option.c	FUNCTION_111	IF_4
0x40118b9	      0xb801000000	                              mov eax, 1	     12496	option.c	FUNCTION_111	IF_4
0x40118be	            0xeb7e	                           jmp 0x401193e	     12496	option.c	FUNCTION_111	IF_4
0x40118c0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12498	option.c	FUNCTION_111	IF_5
0x40118c4	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	     12498	option.c	FUNCTION_111	IF_5
0x40118ca	            0x85c0	                           test eax, eax	     12498	option.c	FUNCTION_111	IF_5
0x40118cc	            0x751f	                           jne 0x40118ed	     12498	option.c	FUNCTION_111	IF_5
0x40118ce	        0x488b45f8	                mov rax, qword [rbp - 8]	     12498	option.c	FUNCTION_111	IF_5
0x40118d2	    0x8b9014170000	          mov edx, dword [rax + 0x1714] 	     12498	option.c	FUNCTION_111	IF_5
0x40118d8	        0x488b45f8	                mov rax, qword [rbp - 8]	     12498	option.c	FUNCTION_111	IF_5
0x40118dc	    0x8b800c140000	          mov eax, dword [rax + 0x140c] 	     12498	option.c	FUNCTION_111	IF_5
0x40118e2	            0x39c2	                            cmp edx, eax	     12498	option.c	FUNCTION_111	IF_5
0x40118e4	            0x7407	                            je 0x40118ed	     12498	option.c	FUNCTION_111	IF_5
0x40118e6	      0xb801000000	                              mov eax, 1	     12499	option.c	FUNCTION_111	IF_5
0x40118eb	            0xeb51	                           jmp 0x401193e	     12499	option.c	FUNCTION_111	IF_5
0x40118ed	        0x488b45f8	                mov rax, qword [rbp - 8]	     12500	option.c	FUNCTION_111	IF_6
0x40118f1	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	     12500	option.c	FUNCTION_111	IF_6
0x40118f8	          0x4885c0	                           test rax, rax	     12500	option.c	FUNCTION_111	IF_6
0x40118fb	            0x7518	                           jne 0x4011915	     12500	option.c	FUNCTION_111	IF_6
0x40118fd	        0x488b45f8	                mov rax, qword [rbp - 8]	     12501	option.c	FUNCTION_111	IF_6
0x4011901	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	     12501	option.c	FUNCTION_111	IF_6
0x4011908	           0xfb600	                   movzx eax, byte [rax]	     12501	option.c	FUNCTION_111	IF_6
0x401190b	            0x84c0	                             test al, al	     12501	option.c	FUNCTION_111	IF_6
0x401190d	           0xf95c0	                                setne al	     12501	option.c	FUNCTION_111	IF_6
0x4011910	           0xfb6c0	                           movzx eax, al	     12501	option.c	FUNCTION_111	IF_6
0x4011913	            0xeb29	                           jmp 0x401193e	     12501	option.c	FUNCTION_111	IF_6
0x4011915	        0x488b45f8	                mov rax, qword [rbp - 8]	     12502	option.c	FUNCTION_111	CALL_2
0x4011919	    0x488b90881400	          mov rdx, qword [rax + 0x1488] 	     12502	option.c	FUNCTION_111	CALL_2
0x4011920	        0x488b45f8	                mov rax, qword [rbp - 8]	     12502	option.c	FUNCTION_111	CALL_2
0x4011924	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	     12502	option.c	FUNCTION_111	CALL_2
0x401192b	          0x4889d6	                            mov rsi, rdx	     12502	option.c	FUNCTION_111	CALL_2
0x401192e	          0x4889c7	                            mov rdi, rax	     12502	option.c	FUNCTION_111	CALL_2
0x4011931	      0xe800000000	                          call 0x4011936	     12502	option.c	FUNCTION_111	CALL_2
0x4011936	            0x85c0	                           test eax, eax	     12502	option.c	FUNCTION_111	CALL_2
0x4011938	           0xf95c0	                                setne al	     12502	option.c	FUNCTION_111	CALL_2
0x401193b	           0xfb6c0	                           movzx eax, al	     12502	option.c	FUNCTION_111	CALL_2
0x401193e	              0xc9	                                   leave	     12506	option.c	FUNCTION_111
0x401193f	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
get_winbuf_options	ELSE,2:IF,5:SWITCH,0:CALL,6:DO,0:WHILE,0:functions,0:FOR,1	87
0x4011eca	              0x55	                                push rbp	     12715	option.c	FUNCTION_119
0x4011ecb	          0x4889e5	                            mov rbp, rsp	     12715	option.c	FUNCTION_119
0x4011ece	        0x4883ec30	                           sub rsp, 0x30	     12715	option.c	FUNCTION_119
0x4011ed2	          0x897ddc	             mov dword [rbp - 0x24], edi	     12715	option.c	FUNCTION_119
0x4011ed5	      0xe800000000	                          call 0x4011eda	     12719	option.c	FUNCTION_119	CALL_1
0x4011eda	        0x488945e8	             mov qword [rbp - 0x18], rax	     12719	option.c	FUNCTION_119	CALL_1
0x4011ede	      0x48837de800	               cmp qword [rbp - 0x18], 0	     12720	option.c	FUNCTION_119	IF_1
0x4011ee3	            0x750a	                           jne 0x4011eef	     12720	option.c	FUNCTION_119	IF_1
0x4011ee5	      0xb800000000	                              mov eax, 0	     12721	option.c	FUNCTION_119	IF_1
0x4011eea	      0xe91b010000	                           jmp 0x401200a	     12721	option.c	FUNCTION_119	IF_1
0x4011eef	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011ef6	      0xe9ec000000	                           jmp 0x4011fe7	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011efb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12725	option.c	FUNCTION_119	FOR_1
0x4011efe	            0x4898	                                    cdqe	     12725	option.c	FUNCTION_119	FOR_1
0x4011f00	        0x48c1e006	                              shl rax, 6	     12725	option.c	FUNCTION_119	FOR_1
0x4011f04	    0x480500000000	                              add rax, 0	     12725	option.c	FUNCTION_119	FOR_1
0x4011f0a	        0x488945f0	             mov qword [rbp - 0x10], rax	     12725	option.c	FUNCTION_119	FOR_1
0x4011f0e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f12	            0x7410	                            je 0x4011f24	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f18	          0x8b4020	            mov eax, dword [rax + 0x20] 	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f1b	      0x2500400000	                         and eax, 0x4000	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f20	            0x85c0	                           test eax, eax	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f22	            0x751e	                           jne 0x4011f42	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f24	        0x837ddc00	               cmp dword [rbp - 0x24], 0	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f28	     0xf85b5000000	                           jne 0x4011fe3	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f32	          0x8b4020	            mov eax, dword [rax + 0x20] 	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f35	      0x2500200000	                         and eax, 0x2000	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f3a	            0x85c0	                           test eax, eax	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f3c	     0xf84a1000000	                            je 0x4011fe3	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4011f42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x4011f46	          0x4889c7	                            mov rdi, rax	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x4011f49	      0xe81eb6ffff	                       call sym.get_varp	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x4011f4e	        0x488945f8	                mov qword [rbp - 8], rax	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x4011f52	      0x48837df800	                  cmp qword [rbp - 8], 0	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x4011f57	     0xf8486000000	                            je 0x4011fe3	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x4011f5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4011f61	        0x488b4010	            mov rax, qword [rax + 0x10] 	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4011f65	          0x83e004	                              and eax, 4	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4011f68	          0x4885c0	                           test rax, rax	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4011f6b	            0x7424	                            je 0x4011f91	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4011f6d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f71	          0x488b10	                    mov rdx, qword [rax]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f74	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f78	          0x488b30	                    mov rsi, qword [rax]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f7f	          0x4889d1	                            mov rcx, rdx	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f82	      0xba00000000	                              mov edx, 0	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f87	          0x4889c7	                            mov rdi, rax	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f8a	      0xe800000000	                          call 0x4011f8f	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f8f	            0xeb52	                           jmp 0x4011fe3	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x4011f91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011f95	        0x488b4010	            mov rax, qword [rax + 0x10] 	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011f99	          0x83e002	                              and eax, 2	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011f9c	          0x4885c0	                           test rax, rax	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011f9f	            0x7421	                            je 0x4011fc2	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fa1	        0x488b45f8	                mov rax, qword [rbp - 8]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fa5	          0x488b10	                    mov rdx, qword [rax]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fac	          0x488b30	                    mov rsi, qword [rax]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011faf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fb3	      0xb900000000	                              mov ecx, 0	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fb8	          0x4889c7	                            mov rdi, rax	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fbb	      0xe800000000	                          call 0x4011fc0	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fc0	            0xeb21	                           jmp 0x4011fe3	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4011fc2	        0x488b45f8	                mov rax, qword [rbp - 8]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fc6	            0x8b00	                    mov eax, dword [rax]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fc8	          0x4863d0	                         movsxd rdx, eax	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fcb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fcf	          0x488b30	                    mov rsi, qword [rax]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fd6	      0xb900000000	                              mov ecx, 0	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fdb	          0x4889c7	                            mov rdi, rax	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fde	      0xe800000000	                          call 0x4011fe3	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x4011fe3	        0x8345e401	               add dword [rbp - 0x1c], 1	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011fe7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011fea	            0x4898	                                    cdqe	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011fec	        0x48c1e006	                              shl rax, 6	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011ff0	    0x480500000000	                              add rax, 0	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011ff6	          0x4889c7	                            mov rdi, rax	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011ff9	      0xe873adffff	                   call sym.istermoption	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4011ffe	            0x85c0	                           test eax, eax	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4012000	     0xf84f5feffff	                            je 0x4011efb	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4012006	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12744	option.c	FUNCTION_119
0x401200a	              0xc9	                                   leave	     12745	option.c	FUNCTION_119
0x401200b	              0xc3	                                     ret	     12745	option.c	FUNCTION_119
init_gui_options	ELSE,0:IF,1:SWITCH,0:CALL,6:DO,0:WHILE,0:functions,0:FOR,0	24
0x40013f2	              0x55	                                push rbp	      4266	option.c	FUNCTION_13
0x40013f3	          0x4889e5	                            mov rbp, rsp	      4266	option.c	FUNCTION_13
0x40013f6	      0xbf00000000	                              mov edi, 0	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x40013fb	      0xe800000000	                          call 0x4001400	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001400	            0x85c0	                           test eax, eax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001402	            0x753f	                           jne 0x4001443	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001404	      0xe8c3ffffff	                 call sym.gui_bg_default	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001409	          0x4889c2	                            mov rdx, rax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400140c	    0x488b05000000	            mov rax, qword [0x04001413] 	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001413	          0x4889d6	                            mov rsi, rdx	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001416	          0x4889c7	                            mov rdi, rax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001419	      0xe800000000	                          call 0x400141e	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400141e	            0x85c0	                           test eax, eax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001420	            0x7421	                            je 0x4001443	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4001422	      0xe8a5ffffff	                 call sym.gui_bg_default	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x4001427	      0xb900000000	                              mov ecx, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400142c	          0x4889c2	                            mov rdx, rax	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400142f	      0xbe00000000	                              mov esi, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x4001434	      0xbf00000000	                              mov edi, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x4001439	      0xe800000000	                          call 0x400143e	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400143e	      0xe800000000	                          call 0x4001443	      4272	option.c	FUNCTION_13	IF_1	CALL_6
0x4001443	              0x90	                                     nop	      4274	option.c	FUNCTION_13
0x4001444	              0x5d	                                 pop rbp	      4274	option.c	FUNCTION_13
0x4001445	              0xc3	                                     ret	      4274	option.c	FUNCTION_13
check_colorcolumn	ELSE,3:IF,12:SWITCH,0:CALL,7:DO,0:WHILE,0:functions,0:FOR,2	192
0x4008521	              0x55	                                push rbp	      7680	option.c	FUNCTION_42
0x4008522	          0x4889e5	                            mov rbp, rsp	      7680	option.c	FUNCTION_42
0x4008525	    0x4881ec400400	                          sub rsp, 0x440	      7680	option.c	FUNCTION_42
0x400852c	    0x4889bdc8fbff	            mov qword [rbp - 0x438], rdi	      7680	option.c	FUNCTION_42
0x4008533	    0x64488b042528	                mov rax, qword fs:[0x28]	      7680	option.c	FUNCTION_42
0x400853c	        0x488945f8	                mov qword [rbp - 8], rax	      7680	option.c	FUNCTION_42
0x4008540	            0x31c0	                            xor eax, eax	      7680	option.c	FUNCTION_42
0x4008542	    0xc785dcfbffff	              mov dword [rbp - 0x424], 0	      7683	option.c	FUNCTION_42
0x400854c	    0xc785e4fbffff	              mov dword [rbp - 0x41c], 0	      7686	option.c	FUNCTION_42
0x4008556	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7688	option.c	FUNCTION_42	IF_1
0x400855d	        0x488b4008	                mov rax, qword [rax + 8]	      7688	option.c	FUNCTION_42	IF_1
0x4008561	          0x4885c0	                           test rax, rax	      7688	option.c	FUNCTION_42	IF_1
0x4008564	            0x750a	                           jne 0x4008570	      7688	option.c	FUNCTION_42	IF_1
0x4008566	      0xb800000000	                              mov eax, 0	      7689	option.c	FUNCTION_42	IF_1
0x400856b	      0xe917030000	                           jmp 0x4008887	      7689	option.c	FUNCTION_42	IF_1
0x4008570	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7691	option.c	FUNCTION_42	FOR_1
0x4008577	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      7691	option.c	FUNCTION_42	FOR_1
0x400857e	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      7691	option.c	FUNCTION_42	FOR_1
0x4008585	      0xe983010000	                           jmp 0x400870d	      7691	option.c	FUNCTION_42	FOR_1
0x400858a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4008591	           0xfb600	                   movzx eax, byte [rax]	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4008594	            0x3c2d	                            cmp al, 0x2d	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4008596	            0x7412	                            je 0x40085aa	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4008598	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x400859f	           0xfb600	                   movzx eax, byte [rax]	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x40085a2	            0x3c2b	                            cmp al, 0x2b	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x40085a4	     0xf85b9000000	                           jne 0x4008663	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x40085aa	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085b1	           0xfb600	                   movzx eax, byte [rax]	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085b4	            0x3c2d	                            cmp al, 0x2d	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085b6	            0x7507	                           jne 0x40085bf	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085b8	      0xb8ffffffff	                     mov eax, 0xffffffff	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085bd	            0xeb05	                           jmp 0x40085c4	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085bf	      0xb801000000	                              mov eax, 1	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085c4	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40085ca	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x40085d1	        0x4883c001	                              add rax, 1	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x40085d5	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x40085dc	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40085e3	           0xfb600	                   movzx eax, byte [rax]	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40085e6	           0xfb6c0	                           movzx eax, al	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40085e9	          0x83e830	                           sub eax, 0x30	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40085ec	          0x83f809	                              cmp eax, 9	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40085ef	            0x760a	                           jbe 0x40085fb	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40085f1	      0xb800000000	                              mov eax, 0	      7699	option.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x40085f6	      0xe98c020000	                           jmp 0x4008887	      7699	option.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x40085fb	    0x488d85e8fbff	                  lea rax, [rbp - 0x418]	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x4008602	          0x4889c7	                            mov rdi, rax	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x4008605	      0xe800000000	                          call 0x400860a	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x400860a	            0x89c2	                            mov edx, eax	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x400860c	    0x8b85d8fbffff	            mov eax, dword [rbp - 0x428]	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x4008612	           0xfafc2	                           imul eax, edx	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x4008615	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x400861b	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x4008622	        0x488b4008	                mov rax, qword [rax + 8]	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x4008626	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x400862d	          0x4885c0	                           test rax, rax	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x4008630	     0xf8486000000	                            je 0x40086bc	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x4008636	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x400863d	        0x488b4008	                mov rax, qword [rax + 8]	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x4008641	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x4008648	            0x89c2	                            mov edx, eax	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x400864a	    0x8b85d8fbffff	            mov eax, dword [rbp - 0x428]	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x4008650	             0x1d0	                            add eax, edx	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x4008652	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x4008658	    0x83bdd8fbffff	              cmp dword [rbp - 0x428], 0	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x400865f	            0x7938	                           jns 0x4008699	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x4008661	            0xeb5a	                           jmp 0x40086bd	      7705	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x4008663	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x400866a	           0xfb600	                   movzx eax, byte [rax]	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x400866d	           0xfb6c0	                           movzx eax, al	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x4008670	          0x83e830	                           sub eax, 0x30	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x4008673	          0x83f809	                              cmp eax, 9	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x4008676	            0x7717	                            ja 0x400868f	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x4008678	    0x488d85e8fbff	                  lea rax, [rbp - 0x418]	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x400867f	          0x4889c7	                            mov rdi, rax	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4008682	      0xe800000000	                          call 0x4008687	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4008687	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x400868d	            0xeb0a	                           jmp 0x4008699	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x400868f	      0xb800000000	                              mov eax, 0	      7710	option.c	FUNCTION_42	FOR_1	ELSE_2
0x4008694	      0xe9ee010000	                           jmp 0x4008887	      7710	option.c	FUNCTION_42	FOR_1	ELSE_2
0x4008699	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      7711	option.c	FUNCTION_42	FOR_1
0x400869f	          0x8d5001	                      lea edx, [rax + 1]	      7711	option.c	FUNCTION_42	FOR_1
0x40086a2	    0x8995dcfbffff	            mov dword [rbp - 0x424], edx	      7711	option.c	FUNCTION_42	FOR_1
0x40086a8	    0x8b95d8fbffff	            mov edx, dword [rbp - 0x428]	      7711	option.c	FUNCTION_42	FOR_1
0x40086ae	          0x83ea01	                              sub edx, 1	      7711	option.c	FUNCTION_42	FOR_1
0x40086b1	            0x4898	                                    cdqe	      7711	option.c	FUNCTION_42	FOR_1
0x40086b3	    0x899485f0fbff	    mov dword [rbp + rax*4 - 0x410], edx	      7711	option.c	FUNCTION_42	FOR_1
0x40086ba	            0xeb01	                           jmp 0x40086bd	      7711	option.c	FUNCTION_42	FOR_1
0x40086bc	              0x90	                                     nop	      7702	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40086bd	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40086c4	           0xfb600	                   movzx eax, byte [rax]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40086c7	            0x84c0	                             test al, al	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40086c9	            0x7462	                            je 0x400872d	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40086cb	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40086d2	           0xfb600	                   movzx eax, byte [rax]	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40086d5	            0x3c2c	                            cmp al, 0x2c	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40086d7	            0x740a	                            je 0x40086e3	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40086d9	      0xb800000000	                              mov eax, 0	      7716	option.c	FUNCTION_42	FOR_1	IF_8
0x40086de	      0xe9a4010000	                           jmp 0x4008887	      7716	option.c	FUNCTION_42	FOR_1	IF_8
0x40086e3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40086ea	        0x4883c001	                              add rax, 1	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40086ee	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40086f5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40086fc	           0xfb600	                   movzx eax, byte [rax]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40086ff	            0x84c0	                             test al, al	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x4008701	            0x750a	                           jne 0x400870d	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x4008703	      0xb800000000	                              mov eax, 0	      7718	option.c	FUNCTION_42	FOR_1	IF_9
0x4008708	      0xe97a010000	                           jmp 0x4008887	      7718	option.c	FUNCTION_42	FOR_1	IF_9
0x400870d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7691	option.c	FUNCTION_42	FOR_1
0x4008714	           0xfb600	                   movzx eax, byte [rax]	      7691	option.c	FUNCTION_42	FOR_1
0x4008717	            0x84c0	                             test al, al	      7691	option.c	FUNCTION_42	FOR_1
0x4008719	            0x7413	                            je 0x400872e	      7691	option.c	FUNCTION_42	FOR_1
0x400871b	    0x81bddcfbffff	          cmp dword [rbp - 0x424], 0xfe 	      7691	option.c	FUNCTION_42	FOR_1
0x4008725	     0xf8e5ffeffff	                           jle 0x400858a	      7691	option.c	FUNCTION_42	FOR_1
0x400872b	            0xeb01	                           jmp 0x400872e	      7691	option.c	FUNCTION_42	FOR_1
0x400872d	              0x90	                                     nop	      7714	option.c	FUNCTION_42	FOR_1	IF_7
0x400872e	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7721	option.c	FUNCTION_42	CALL_5
0x4008735	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7721	option.c	FUNCTION_42	CALL_5
0x400873c	          0x4889c7	                            mov rdi, rax	      7721	option.c	FUNCTION_42	CALL_5
0x400873f	      0xe800000000	                          call 0x4008744	      7721	option.c	FUNCTION_42	CALL_5
0x4008744	    0x83bddcfbffff	              cmp dword [rbp - 0x424], 0	      7722	option.c	FUNCTION_42	IF_10
0x400874b	            0x7517	                           jne 0x4008764	      7722	option.c	FUNCTION_42	IF_10
0x400874d	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7723	option.c	FUNCTION_42	IF_10
0x4008754	    0x48c780380500	              mov qword [rax + 0x538], 0	      7723	option.c	FUNCTION_42	IF_10
0x400875f	      0xe91e010000	                           jmp 0x4008882	      7723	option.c	FUNCTION_42	IF_10
0x4008764	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x400876a	          0x83c001	                              add eax, 1	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x400876d	          0xc1e002	                              shl eax, 2	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4008770	            0x89c7	                            mov edi, eax	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4008772	      0xe800000000	                          call 0x4008777	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4008777	          0x4889c2	                            mov rdx, rax	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x400877a	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4008781	    0x488990380500	            mov qword [rax + 0x538], rdx	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4008788	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x400878f	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x4008796	          0x4885c0	                           test rax, rax	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x4008799	     0xf84e3000000	                            je 0x4008882	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x400879f	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40087a5	          0x4863f0	                         movsxd rsi, eax	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40087a8	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40087af	      0xb900000000	                              mov ecx, 0	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40087b4	      0xba04000000	                              mov edx, 4	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40087b9	          0x4889c7	                            mov rdi, rax	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40087bc	      0xe800000000	                          call 0x40087c1	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40087c1	    0xc785e0fbffff	              mov dword [rbp - 0x420], 0	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x40087cb	            0xeb7f	                           jmp 0x400884c	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x40087cd	    0x83bde4fbffff	              cmp dword [rbp - 0x41c], 0	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087d4	            0x7437	                            je 0x400880d	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087d6	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087dd	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087e4	    0x8b95e4fbffff	            mov edx, dword [rbp - 0x41c]	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087ea	          0x4863d2	                         movsxd rdx, edx	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087ed	        0x48c1e202	                              shl rdx, 2	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087f1	        0x4883ea04	                              sub rdx, 4	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087f5	          0x4801d0	                            add rax, rdx	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087f8	            0x8b10	                    mov edx, dword [rax]	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40087fa	    0x8b85e0fbffff	            mov eax, dword [rbp - 0x420]	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008800	            0x4898	                                    cdqe	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008802	    0x8b8485f0fbff	    mov eax, dword [rbp + rax*4 - 0x410]	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008809	            0x39c2	                            cmp edx, eax	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400880b	            0x7438	                            je 0x4008845	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400880d	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008814	    0x488b88380500	           mov rcx, qword [rax + 0x538] 	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400881b	    0x8b85e4fbffff	            mov eax, dword [rbp - 0x41c]	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008821	          0x8d5001	                      lea edx, [rax + 1]	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008824	    0x8995e4fbffff	            mov dword [rbp - 0x41c], edx	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400882a	            0x4898	                                    cdqe	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400882c	        0x48c1e002	                              shl rax, 2	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008830	        0x488d1401	                    lea rdx, [rcx + rax]	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008834	    0x8b85e0fbffff	            mov eax, dword [rbp - 0x420]	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400883a	            0x4898	                                    cdqe	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400883c	    0x8b8485f0fbff	    mov eax, dword [rbp + rax*4 - 0x410]	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008843	            0x8902	                    mov dword [rdx], eax	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4008845	    0x8385e0fbffff	              add dword [rbp - 0x420], 1	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x400884c	    0x8b85e0fbffff	            mov eax, dword [rbp - 0x420]	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x4008852	    0x3b85dcfbffff	            cmp eax, dword [rbp - 0x424]	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x4008858	     0xf8c6fffffff	                            jl 0x40087cd	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x400885e	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x4008865	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x400886c	    0x8b95e4fbffff	            mov edx, dword [rbp - 0x41c]	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x4008872	          0x4863d2	                         movsxd rdx, edx	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x4008875	        0x48c1e202	                              shl rdx, 2	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x4008879	          0x4801d0	                            add rax, rdx	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x400887c	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x4008882	      0xb800000000	                              mov eax, 0	      7741	option.c	FUNCTION_42
0x4008887	        0x488b4df8	                mov rcx, qword [rbp - 8]	      7742	option.c	FUNCTION_42
0x400888b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7742	option.c	FUNCTION_42
0x4008894	            0x7405	                            je 0x400889b	      7742	option.c	FUNCTION_42
0x4008896	      0xe800000000	                          call 0x400889b	      7742	option.c	FUNCTION_42
0x400889b	              0xc9	                                   leave	      7742	option.c	FUNCTION_42
0x400889c	              0xc3	                                     ret	      7742	option.c	FUNCTION_42
langmap_set	ELSE,3:IF,15:SWITCH,0:CALL,12:DO,0:WHILE,1:functions,0:FOR,2	203
0x401095e	              0x55	                                push rbp	     11933	option.c	FUNCTION_96
0x401095f	          0x4889e5	                            mov rbp, rsp	     11933	option.c	FUNCTION_96
0x4010962	              0x53	                                push rbx	     11933	option.c	FUNCTION_96
0x4010963	        0x4883ec28	                           sub rsp, 0x28	     11933	option.c	FUNCTION_96
0x4010967	      0xbf00000000	                              mov edi, 0	     11939	option.c	FUNCTION_96	CALL_1
0x401096c	      0xe800000000	                          call 0x4010971	     11939	option.c	FUNCTION_96	CALL_1
0x4010971	      0xe8a3ffffff	                   call sym.langmap_init	     11941	option.c	FUNCTION_96	CALL_2
0x4010976	    0x488b05000000	            mov rax, qword [0x0401097d] 	     11943	option.c	FUNCTION_96	FOR_1
0x401097d	        0x488945e0	             mov qword [rbp - 0x20], rax	     11943	option.c	FUNCTION_96	FOR_1
0x4010981	      0xe977020000	                           jmp 0x4010bfd	     11943	option.c	FUNCTION_96	FOR_1
0x4010986	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x401098a	        0x488945e8	             mov qword [rbp - 0x18], rax	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x401098e	            0xeb46	                           jmp 0x40109d6	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x4010990	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x4010994	           0xfb600	                   movzx eax, byte [rax]	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x4010997	            0x3c5c	                            cmp al, 0x5c	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x4010999	            0x7514	                           jne 0x40109af	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x401099b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x401099f	        0x4883c001	                              add rax, 1	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x40109a3	           0xfb600	                   movzx eax, byte [rax]	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x40109a6	            0x84c0	                             test al, al	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x40109a8	            0x7405	                            je 0x40109af	     11948	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x40109aa	      0x488345e801	               add qword [rbp - 0x18], 1	     11949	option.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x40109af	    0x8b0500000000	            mov eax, dword [0x040109b5] 	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109b5	            0x85c0	                           test eax, eax	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109b7	            0x7412	                            je 0x40109cb	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109b9	    0x488b05000000	            mov rax, qword [0x040109c0] 	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109c0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109c4	          0x4889d7	                            mov rdi, rdx	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109c7	            0xffd0	                                call rax	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109c9	            0xeb05	                           jmp 0x40109d0	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109cb	      0xb801000000	                              mov eax, 1	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109d0	            0x4898	                                    cdqe	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109d2	        0x480145e8	            add qword [rbp - 0x18], rax 	     11946	option.c	FUNCTION_96	FOR_1	FOR_2	CALL_3
0x40109d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109da	           0xfb600	                   movzx eax, byte [rax]	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109dd	            0x84c0	                             test al, al	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109df	            0x7416	                            je 0x40109f7	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109e5	           0xfb600	                   movzx eax, byte [rax]	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109e8	            0x3c2c	                            cmp al, 0x2c	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109ea	            0x740b	                            je 0x40109f7	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109f0	           0xfb600	                   movzx eax, byte [rax]	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109f3	            0x3c3b	                            cmp al, 0x3b	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109f5	            0x7599	                           jne 0x4010990	     11945	option.c	FUNCTION_96	FOR_1	FOR_2
0x40109f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11951	option.c	FUNCTION_96	FOR_1	IF_2
0x40109fb	           0xfb600	                   movzx eax, byte [rax]	     11951	option.c	FUNCTION_96	FOR_1	IF_2
0x40109fe	            0x3c3b	                            cmp al, 0x3b	     11951	option.c	FUNCTION_96	FOR_1	IF_2
0x4010a00	            0x750a	                           jne 0x4010a0c	     11951	option.c	FUNCTION_96	FOR_1	IF_2
0x4010a02	      0x488345e801	               add qword [rbp - 0x18], 1	     11952	option.c	FUNCTION_96	FOR_1	IF_2
0x4010a07	      0xe9e2010000	                           jmp 0x4010bee	     11952	option.c	FUNCTION_96	FOR_1	IF_2
0x4010a0c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11954	option.c	FUNCTION_96	FOR_1	ELSE_1
0x4010a14	      0xe9d5010000	                           jmp 0x4010bee	     11955	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010a19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11957	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_3
0x4010a1d	           0xfb600	                   movzx eax, byte [rax]	     11957	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_3
0x4010a20	            0x3c2c	                            cmp al, 0x2c	     11957	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_3
0x4010a22	            0x750a	                           jne 0x4010a2e	     11957	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_3
0x4010a24	      0x488345e001	               add qword [rbp - 0x20], 1	     11959	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_3
0x4010a29	      0xe9cf010000	                           jmp 0x4010bfd	     11960	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_3
0x4010a2e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a32	           0xfb600	                   movzx eax, byte [rax]	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a35	            0x3c5c	                            cmp al, 0x5c	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a37	            0x7514	                           jne 0x4010a4d	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a39	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a3d	        0x4883c001	                              add rax, 1	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a41	           0xfb600	                   movzx eax, byte [rax]	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a44	            0x84c0	                             test al, al	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a46	            0x7405	                            je 0x4010a4d	     11962	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a48	      0x488345e001	               add qword [rbp - 0x20], 1	     11963	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_4
0x4010a4d	    0x488b05000000	            mov rax, qword [0x04010a54] 	     11965	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010a54	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     11965	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010a58	          0x4889d7	                            mov rdi, rdx	     11965	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010a5b	            0xffd0	                                call rax	     11965	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010a5d	          0x8945dc	             mov dword [rbp - 0x24], eax	     11965	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010a60	    0xc745d8000000	               mov dword [rbp - 0x28], 0	     11969	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010a67	      0x48837de800	               cmp qword [rbp - 0x18], 0	     11970	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5
0x4010a6c	            0x7557	                           jne 0x4010ac5	     11970	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5
0x4010a6e	    0x8b0500000000	            mov eax, dword [0x04010a74] 	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a74	            0x85c0	                           test eax, eax	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a76	            0x7412	                            je 0x4010a8a	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a78	    0x488b05000000	            mov rax, qword [0x04010a7f] 	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a7f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a83	          0x4889d7	                            mov rdi, rdx	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a86	            0xffd0	                                call rax	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a88	            0xeb05	                           jmp 0x4010a8f	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a8a	      0xb801000000	                              mov eax, 1	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a8f	            0x4898	                                    cdqe	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a91	        0x480145e0	            add qword [rbp - 0x20], rax 	     11972	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x4010a95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11973	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010a99	           0xfb600	                   movzx eax, byte [rax]	     11973	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010a9c	            0x3c2c	                            cmp al, 0x2c	     11973	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010a9e	            0x7453	                            je 0x4010af3	     11973	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010aa0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11975	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x4010aa4	           0xfb600	                   movzx eax, byte [rax]	     11975	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x4010aa7	            0x3c5c	                            cmp al, 0x5c	     11975	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x4010aa9	            0x7505	                           jne 0x4010ab0	     11975	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x4010aab	      0x488345e001	               add qword [rbp - 0x20], 1	     11976	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x4010ab0	    0x488b05000000	            mov rax, qword [0x04010ab7] 	     11978	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010ab7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     11978	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010abb	          0x4889d7	                            mov rdi, rdx	     11978	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010abe	            0xffd0	                                call rax	     11978	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010ac0	          0x8945d8	             mov dword [rbp - 0x28], eax	     11978	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010ac3	            0xeb2e	                           jmp 0x4010af3	     11978	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x4010ac5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11986	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010ac9	           0xfb600	                   movzx eax, byte [rax]	     11986	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010acc	            0x3c2c	                            cmp al, 0x2c	     11986	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010ace	            0x7423	                            je 0x4010af3	     11986	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010ad0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11988	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x4010ad4	           0xfb600	                   movzx eax, byte [rax]	     11988	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x4010ad7	            0x3c5c	                            cmp al, 0x5c	     11988	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x4010ad9	            0x7505	                           jne 0x4010ae0	     11988	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x4010adb	      0x488345e801	               add qword [rbp - 0x18], 1	     11989	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x4010ae0	    0x488b05000000	            mov rax, qword [0x04010ae7] 	     11991	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010ae7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11991	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010aeb	          0x4889d7	                            mov rdi, rdx	     11991	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010aee	            0xffd0	                                call rax	     11991	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010af0	          0x8945d8	             mov dword [rbp - 0x28], eax	     11991	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x4010af3	        0x837dd800	               cmp dword [rbp - 0x28], 0	     11997	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10
0x4010af7	            0x7527	                           jne 0x4010b20	     11997	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10
0x4010af9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010afc	            0x89c7	                            mov edi, eax	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010afe	      0xe800000000	                          call 0x4010b03	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010b03	          0x4889c3	                            mov rbx, rax	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010b06	      0xbf00000000	                              mov edi, 0	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010b0b	      0xe800000000	                          call 0x4010b10	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010b10	          0x4889de	                            mov rsi, rbx	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010b13	          0x4889c7	                            mov rdi, rax	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010b16	      0xe800000000	                          call 0x4010b1b	     11999	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x4010b1b	      0xe9ec000000	                           jmp 0x4010c0c	     12001	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_10
0x4010b20	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	     12005	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_11
0x4010b27	            0x7e11	                           jle 0x4010b3a	     12005	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_11
0x4010b29	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     12006	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_8
0x4010b2c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     12006	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_8
0x4010b2f	            0x89d6	                            mov esi, edx	     12006	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_8
0x4010b31	            0x89c7	                            mov edi, eax	     12006	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_8
0x4010b33	      0xe82efcffff	              call sym.langmap_set_entry	     12006	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_8
0x4010b38	            0xeb11	                           jmp 0x4010b4b	     12006	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_8
0x4010b3a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     12009	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x4010b3d	           0xfb6c0	                           movzx eax, al	     12009	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x4010b40	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     12009	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x4010b43	            0x4898	                                    cdqe	     12009	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x4010b45	    0x889000000000	                      mov byte [rax], dl	     12009	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x4010b4b	    0x8b0500000000	            mov eax, dword [0x04010b51] 	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b51	            0x85c0	                           test eax, eax	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b53	            0x7412	                            je 0x4010b67	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b55	    0x488b05000000	            mov rax, qword [0x04010b5c] 	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b5c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b60	          0x4889d7	                            mov rdi, rdx	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b63	            0xffd0	                                call rax	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b65	            0xeb05	                           jmp 0x4010b6c	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b67	      0xb801000000	                              mov eax, 1	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b6c	            0x4898	                                    cdqe	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b6e	        0x480145e0	            add qword [rbp - 0x20], rax 	     12012	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	CALL_9
0x4010b72	      0x48837de800	               cmp qword [rbp - 0x18], 0	     12013	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12
0x4010b77	            0x7475	                            je 0x4010bee	     12013	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12
0x4010b79	    0x8b0500000000	            mov eax, dword [0x04010b7f] 	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b7f	            0x85c0	                           test eax, eax	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b81	            0x7412	                            je 0x4010b95	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b83	    0x488b05000000	            mov rax, qword [0x04010b8a] 	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b8a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b8e	          0x4889d7	                            mov rdi, rdx	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b91	            0xffd0	                                call rax	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b93	            0xeb05	                           jmp 0x4010b9a	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b95	      0xb801000000	                              mov eax, 1	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b9a	            0x4898	                                    cdqe	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010b9c	        0x480145e8	            add qword [rbp - 0x18], rax 	     12015	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x4010ba0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12016	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x4010ba4	           0xfb600	                   movzx eax, byte [rax]	     12016	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x4010ba7	            0x3c3b	                            cmp al, 0x3b	     12016	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x4010ba9	            0x7543	                           jne 0x4010bee	     12016	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x4010bab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12018	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x4010baf	        0x488945e0	             mov qword [rbp - 0x20], rax	     12018	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x4010bb3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12019	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x4010bb7	           0xfb600	                   movzx eax, byte [rax]	     12019	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x4010bba	            0x84c0	                             test al, al	     12019	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x4010bbc	            0x743f	                            je 0x4010bfd	     12019	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x4010bbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12021	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x4010bc2	           0xfb600	                   movzx eax, byte [rax]	     12021	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x4010bc5	            0x3c2c	                            cmp al, 0x2c	     12021	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x4010bc7	            0x741e	                            je 0x4010be7	     12021	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x4010bc9	      0xbf00000000	                              mov edi, 0	     12023	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x4010bce	      0xe800000000	                          call 0x4010bd3	     12023	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x4010bd3	          0x4889c2	                            mov rdx, rax	     12023	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x4010bd6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12023	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x4010bda	          0x4889c6	                            mov rsi, rax	     12023	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x4010bdd	          0x4889d7	                            mov rdi, rdx	     12023	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x4010be0	      0xe800000000	                          call 0x4010be5	     12023	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x4010be5	            0xeb25	                           jmp 0x4010c0c	     12024	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x4010be7	      0x488345e001	               add qword [rbp - 0x20], 1	     12026	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x4010bec	            0xeb0f	                           jmp 0x4010bfd	     12028	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x4010bee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11955	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010bf2	           0xfb600	                   movzx eax, byte [rax]	     11955	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010bf5	            0x84c0	                             test al, al	     11955	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010bf7	     0xf851cfeffff	                           jne 0x4010a19	     11955	option.c	FUNCTION_96	FOR_1	ELSE_1	WHILE_1
0x4010bfd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11943	option.c	FUNCTION_96	FOR_1
0x4010c01	           0xfb600	                   movzx eax, byte [rax]	     11943	option.c	FUNCTION_96	FOR_1
0x4010c04	            0x84c0	                             test al, al	     11943	option.c	FUNCTION_96	FOR_1
0x4010c06	     0xf857afdffff	                           jne 0x4010986	     11943	option.c	FUNCTION_96	FOR_1
0x4010c0c	        0x4883c428	                           add rsp, 0x28	     12033	option.c	FUNCTION_96
0x4010c10	              0x5b	                                 pop rbx	     12033	option.c	FUNCTION_96
0x4010c11	              0x5d	                                 pop rbp	     12033	option.c	FUNCTION_96
0x4010c12	              0xc3	                                     ret	     12033	option.c	FUNCTION_96
option_value2string	ELSE,7:IF,7:SWITCH,0:CALL,11:DO,0:WHILE,0:functions,0:FOR,0	114
0x401053a	              0x55	                                push rbp	     11769	option.c	FUNCTION_91
0x401053b	          0x4889e5	                            mov rbp, rsp	     11769	option.c	FUNCTION_91
0x401053e	        0x4883ec30	                           sub rsp, 0x30	     11769	option.c	FUNCTION_91
0x4010542	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     11769	option.c	FUNCTION_91
0x4010546	          0x8975d4	             mov dword [rbp - 0x2c], esi	     11769	option.c	FUNCTION_91
0x4010549	    0x64488b042528	                mov rax, qword fs:[0x28]	     11769	option.c	FUNCTION_91
0x4010552	        0x488945f8	                mov qword [rbp - 8], rax	     11769	option.c	FUNCTION_91
0x4010556	            0x31c0	                            xor eax, eax	     11769	option.c	FUNCTION_91
0x4010558	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	     11772	option.c	FUNCTION_91	CALL_1
0x401055b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11772	option.c	FUNCTION_91	CALL_1
0x401055f	            0x89d6	                            mov esi, edx	     11772	option.c	FUNCTION_91	CALL_1
0x4010561	          0x4889c7	                            mov rdi, rax	     11772	option.c	FUNCTION_91	CALL_1
0x4010564	      0xe8cdccffff	                 call sym.get_varp_scope	     11772	option.c	FUNCTION_91	CALL_1
0x4010569	        0x488945f0	             mov qword [rbp - 0x10], rax	     11772	option.c	FUNCTION_91	CALL_1
0x401056d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11774	option.c	FUNCTION_91	IF_1
0x4010571	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11774	option.c	FUNCTION_91	IF_1
0x4010575	          0x83e002	                              and eax, 2	     11774	option.c	FUNCTION_91	IF_1
0x4010578	          0x4885c0	                           test rax, rax	     11774	option.c	FUNCTION_91	IF_1
0x401057b	     0xf849c000000	                            je 0x401061d	     11774	option.c	FUNCTION_91	IF_1
0x4010581	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11776	option.c	FUNCTION_91	IF_1
0x4010589	        0x488d55e8	                   lea rdx, [rbp - 0x18]	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x401058d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x4010591	          0x4889d6	                            mov rsi, rdx	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x4010594	          0x4889c7	                            mov rdi, rax	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x4010597	      0xe86c010000	                 call sym.wc_use_keyname	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x401059c	            0x85c0	                           test eax, eax	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x401059e	            0x742a	                            je 0x40105ca	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x40105a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105a4	      0xbe00000000	                              mov esi, 0	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105a9	            0x89c7	                            mov edi, eax	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105ab	      0xe800000000	                          call 0x40105b0	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105b0	          0x4889c2	                            mov rdx, rax	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105b3	    0x488b05000000	            mov rax, qword [0x040105ba] 	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105ba	          0x4889d6	                            mov rsi, rdx	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105bd	          0x4889c7	                            mov rdi, rax	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105c0	      0xe800000000	                          call 0x40105c5	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40105c5	      0xe927010000	                           jmp 0x40106f1	     11803	option.c	FUNCTION_91
0x40105ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105ce	          0x4885c0	                           test rax, rax	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105d1	            0x7425	                            je 0x40105f8	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105d7	            0x89c7	                            mov edi, eax	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105d9	      0xe800000000	                          call 0x40105de	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105de	          0x4889c2	                            mov rdx, rax	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105e1	    0x488b05000000	            mov rax, qword [0x040105e8] 	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105e8	          0x4889d6	                            mov rsi, rdx	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105eb	          0x4889c7	                            mov rdi, rax	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105ee	      0xe800000000	                          call 0x40105f3	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40105f3	      0xe9f9000000	                           jmp 0x40106f1	     11803	option.c	FUNCTION_91
0x40105f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11783	option.c	FUNCTION_91	IF_1	CALL_7
0x40105fc	          0x488b10	                    mov rdx, qword [rax]	     11783	option.c	FUNCTION_91	IF_1	CALL_7
0x40105ff	    0x488b05000000	            mov rax, qword [0x04010606] 	     11783	option.c	FUNCTION_91	IF_1	CALL_7
0x4010606	      0xbe00000000	                              mov esi, 0	     11783	option.c	FUNCTION_91	IF_1	CALL_7
0x401060b	          0x4889c7	                            mov rdi, rax	     11783	option.c	FUNCTION_91	IF_1	CALL_7
0x401060e	      0xb800000000	                              mov eax, 0	     11783	option.c	FUNCTION_91	IF_1	CALL_7
0x4010613	      0xe800000000	                          call 0x4010618	     11783	option.c	FUNCTION_91	IF_1	CALL_7
0x4010618	      0xe9d4000000	                           jmp 0x40106f1	     11803	option.c	FUNCTION_91
0x401061d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11787	option.c	FUNCTION_91	ELSE_3
0x4010621	          0x488b00	                    mov rax, qword [rax]	     11787	option.c	FUNCTION_91	ELSE_3
0x4010624	        0x488945f0	             mov qword [rbp - 0x10], rax	     11787	option.c	FUNCTION_91	ELSE_3
0x4010628	      0x48837df000	               cmp qword [rbp - 0x10], 0	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x401062d	            0x750f	                           jne 0x401063e	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x401062f	    0x488b05000000	            mov rax, qword [0x04010636] 	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x4010636	          0xc60000	                       mov byte [rax], 0	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x4010639	      0xe9b3000000	                           jmp 0x40106f1	     11803	option.c	FUNCTION_91
0x401063e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010642	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010646	    0x483d00000000	                              cmp rax, 0	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x401064c	            0x7523	                           jne 0x4010671	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x401064e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010652	           0xfb600	                   movzx eax, byte [rax]	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010655	            0x84c0	                             test al, al	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010657	            0x7418	                            je 0x4010671	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010659	    0x488b05000000	            mov rax, qword [0x04010660] 	     11793	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010660	    0xc7002a2a2a2a	            mov dword [rax], 0x2a2a2a2a 	     11793	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4010666	    0x66c740042a00	                mov word [rax + 4], 0x2a	     11793	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x401066c	      0xe980000000	                           jmp 0x40106f1	     11803	option.c	FUNCTION_91
0x4010671	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4010675	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4010679	          0x83e010	                           and eax, 0x10	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x401067c	          0x4885c0	                           test rax, rax	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x401067f	            0x7425	                            je 0x40106a6	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4010681	    0x488b15000000	            mov rdx, qword [0x04010688] 	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4010688	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x401068c	    0x41b800000000	                              mov r8d, 0	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4010692	      0xb900100000	                         mov ecx, 0x1000	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4010697	          0x4889c6	                            mov rsi, rax	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x401069a	      0xbf00000000	                              mov edi, 0	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x401069f	      0xe800000000	                          call 0x40106a4	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x40106a4	            0xeb4b	                           jmp 0x40106f1	     11803	option.c	FUNCTION_91
0x40106a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106ae	    0x483d00000000	                              cmp rax, 0	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106b4	            0x7520	                           jne 0x40106d6	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106b6	    0x488b0d000000	            mov rcx, qword [0x040106bd] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106bd	    0x488b05000000	            mov rax, qword [0x040106c4] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106c4	      0xba00100000	                         mov edx, 0x1000	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106c9	          0x4889ce	                            mov rsi, rcx	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106cc	          0x4889c7	                            mov rdi, rax	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106cf	      0xe800000000	                          call 0x40106d4	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40106d4	            0xeb1b	                           jmp 0x40106f1	     11803	option.c	FUNCTION_91
0x40106d6	    0x488b05000000	            mov rax, qword [0x040106dd] 	     11801	option.c	FUNCTION_91	ELSE_3	CALL_11
0x40106dd	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	     11801	option.c	FUNCTION_91	ELSE_3	CALL_11
0x40106e1	      0xbaff0f0000	                          mov edx, 0xfff	     11801	option.c	FUNCTION_91	ELSE_3	CALL_11
0x40106e6	          0x4889ce	                            mov rsi, rcx	     11801	option.c	FUNCTION_91	ELSE_3	CALL_11
0x40106e9	          0x4889c7	                            mov rdi, rax	     11801	option.c	FUNCTION_91	ELSE_3	CALL_11
0x40106ec	      0xe800000000	                          call 0x40106f1	     11801	option.c	FUNCTION_91	ELSE_3	CALL_11
0x40106f1	              0x90	                                     nop	     11803	option.c	FUNCTION_91
0x40106f2	        0x488b45f8	                mov rax, qword [rbp - 8]	     11803	option.c	FUNCTION_91
0x40106f6	    0x644833042528	                xor rax, qword fs:[0x28]	     11803	option.c	FUNCTION_91
0x40106ff	            0x7405	                            je 0x4010706	     11803	option.c	FUNCTION_91
0x4010701	      0xe800000000	                          call 0x4010706	     11803	option.c	FUNCTION_91
0x4010706	              0xc9	                                   leave	     11803	option.c	FUNCTION_91
0x4010707	              0xc3	                                     ret	     11803	option.c	FUNCTION_91
set_option_default	ELSE,4:IF,9:SWITCH,0:CALL,8:DO,0:WHILE,0:functions,0:FOR,0	201
0x40007e8	              0x55	                                push rbp	      3764	option.c	FUNCTION_2
0x40007e9	          0x4889e5	                            mov rbp, rsp	      3764	option.c	FUNCTION_2
0x40007ec	        0x4883ec30	                           sub rsp, 0x30	      3764	option.c	FUNCTION_2
0x40007f0	          0x897ddc	             mov dword [rbp - 0x24], edi	      3764	option.c	FUNCTION_2
0x40007f3	          0x8975d8	             mov dword [rbp - 0x28], esi	      3764	option.c	FUNCTION_2
0x40007f6	          0x8955d4	             mov dword [rbp - 0x2c], edx	      3764	option.c	FUNCTION_2
0x40007f9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3769	option.c	FUNCTION_2
0x40007fc	          0x83e006	                              and eax, 6	      3769	option.c	FUNCTION_2
0x40007ff	            0x85c0	                           test eax, eax	      3769	option.c	FUNCTION_2
0x4000801	           0xf94c0	                                 sete al	      3769	option.c	FUNCTION_2
0x4000804	           0xfb6c0	                           movzx eax, al	      3769	option.c	FUNCTION_2
0x4000807	          0x8945e0	             mov dword [rbp - 0x20], eax	      3769	option.c	FUNCTION_2
0x400080a	        0x837de000	               cmp dword [rbp - 0x20], 0	      3771	option.c	FUNCTION_2	CALL_1
0x400080e	            0x7505	                           jne 0x4000815	      3771	option.c	FUNCTION_2	CALL_1
0x4000810	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3771	option.c	FUNCTION_2	CALL_1
0x4000813	            0xeb05	                           jmp 0x400081a	      3771	option.c	FUNCTION_2	CALL_1
0x4000815	      0xb804000000	                              mov eax, 4	      3771	option.c	FUNCTION_2	CALL_1
0x400081a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3771	option.c	FUNCTION_2	CALL_1
0x400081d	          0x4863d2	                         movsxd rdx, edx	      3771	option.c	FUNCTION_2	CALL_1
0x4000820	        0x48c1e206	                              shl rdx, 6	      3771	option.c	FUNCTION_2	CALL_1
0x4000824	    0x4881c2000000	                              add rdx, 0	      3771	option.c	FUNCTION_2	CALL_1
0x400082b	            0x89c6	                            mov esi, eax	      3771	option.c	FUNCTION_2	CALL_1
0x400082d	          0x4889d7	                            mov rdi, rdx	      3771	option.c	FUNCTION_2	CALL_1
0x4000830	      0xe801ca0000	                 call sym.get_varp_scope	      3771	option.c	FUNCTION_2	CALL_1
0x4000835	        0x488945e8	             mov qword [rbp - 0x18], rax	      3771	option.c	FUNCTION_2	CALL_1
0x4000839	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3772	option.c	FUNCTION_2
0x400083c	            0x4898	                                    cdqe	      3772	option.c	FUNCTION_2
0x400083e	        0x48c1e006	                              shl rax, 6	      3772	option.c	FUNCTION_2
0x4000842	    0x480500000000	                              add rax, 0	      3772	option.c	FUNCTION_2
0x4000848	          0x488b00	                    mov rax, qword [rax]	      3772	option.c	FUNCTION_2
0x400084b	        0x488945f0	             mov qword [rbp - 0x10], rax	      3772	option.c	FUNCTION_2
0x400084f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3773	option.c	FUNCTION_2	IF_1
0x4000854	     0xf843e020000	                            je 0x4000a98	      3773	option.c	FUNCTION_2	IF_1
0x400085a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3775	option.c	FUNCTION_2	IF_1
0x400085e	      0x2500040000	                          and eax, 0x400	      3775	option.c	FUNCTION_2	IF_1
0x4000863	          0x4885c0	                           test rax, rax	      3775	option.c	FUNCTION_2	IF_1
0x4000866	            0x750d	                           jne 0x4000875	      3775	option.c	FUNCTION_2	IF_1
0x4000868	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3775	option.c	FUNCTION_2	IF_1
0x400086c	            0x7507	                           jne 0x4000875	      3775	option.c	FUNCTION_2	IF_1
0x400086e	      0xb801000000	                              mov eax, 1	      3775	option.c	FUNCTION_2	IF_1
0x4000873	            0xeb05	                           jmp 0x400087a	      3775	option.c	FUNCTION_2	IF_1
0x4000875	      0xb800000000	                              mov eax, 0	      3775	option.c	FUNCTION_2	IF_1
0x400087a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3775	option.c	FUNCTION_2	IF_1
0x400087d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4000881	          0x83e004	                              and eax, 4	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4000884	          0x4885c0	                           test rax, rax	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4000887	     0xf84ca000000	                            je 0x4000957	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x400088d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4000890	            0x4898	                                    cdqe	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4000892	        0x48c1e006	                              shl rax, 6	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4000896	    0x480500000000	                              add rax, 0	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x400089c	            0x8b00	                    mov eax, dword [rax]	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x400089e	            0x85c0	                           test eax, eax	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40008a0	            0x743b	                            je 0x40008dd	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40008a2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008a5	            0x4898	                                    cdqe	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008a7	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008aa	          0x4863d2	                         movsxd rdx, edx	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008ad	        0x48c1e203	                              shl rdx, 3	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008b1	          0x4801d0	                            add rax, rdx	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008b4	        0x4883c004	                              add rax, 4	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008b8	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008c0	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008c3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008c6	    0x41b800000000	                              mov r8d, 0	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008cc	            0x89c6	                            mov esi, eax	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008ce	      0xbf00000000	                              mov edi, 0	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008d3	      0xe800000000	                          call 0x40008d8	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008d8	      0xe991010000	                           jmp 0x4000a6e	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40008dd	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008e0	          0x83e001	                              and eax, 1	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008e3	            0x85c0	                           test eax, eax	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008e5	            0x741b	                            je 0x4000902	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008eb	          0x83e008	                              and eax, 8	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008ee	          0x4885c0	                           test rax, rax	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008f1	            0x740f	                            je 0x4000902	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40008f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x40008f7	          0x488b00	                    mov rax, qword [rax]	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x40008fa	          0x4889c7	                            mov rdi, rax	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x40008fd	      0xe800000000	                          call 0x4000902	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x4000902	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000905	            0x4898	                                    cdqe	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000907	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400090a	          0x4863d2	                         movsxd rdx, edx	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400090d	        0x48c1e203	                              shl rdx, 3	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000911	          0x4801d0	                            add rax, rdx	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000914	        0x4883c004	                              add rax, 4	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000918	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000920	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000924	          0x488910	                    mov qword [rax], rdx	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000927	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400092a	            0x4898	                                    cdqe	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400092c	        0x48c1e006	                              shl rax, 6	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000930	    0x480500000000	                              add rax, 0	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000936	          0x488b00	                    mov rax, qword [rax]	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000939	        0x4883e0f7	             and rax, 0xfffffffffffffff7	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400093d	          0x4889c2	                            mov rdx, rax	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000940	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000943	            0x4898	                                    cdqe	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000945	        0x48c1e006	                              shl rax, 6	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000949	    0x480500000000	                              add rax, 0	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400094f	          0x488910	                    mov qword [rax], rdx	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000952	      0xe917010000	                           jmp 0x4000a6e	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4000957	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x400095b	          0x83e002	                              and eax, 2	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x400095e	          0x4885c0	                           test rax, rax	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4000961	     0xf8489000000	                            je 0x40009f0	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4000967	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400096a	            0x4898	                                    cdqe	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400096c	        0x48c1e006	                              shl rax, 6	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4000970	    0x480500000000	                              add rax, 0	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4000976	            0x8b00	                    mov eax, dword [rax]	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4000978	      0x3d1c200000	                         cmp eax, 0x201c	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400097d	            0x7514	                           jne 0x4000993	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400097f	    0x488b05000000	            mov rax, qword [0x04000986] 	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4000986	          0x4889c7	                            mov rdi, rax	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4000989	      0xe800000000	                          call 0x400098e	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x400098e	      0xe9db000000	                           jmp 0x4000a6e	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4000993	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4000996	            0x4898	                                    cdqe	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4000998	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400099b	          0x4863d2	                         movsxd rdx, edx	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400099e	        0x48c1e203	                              shl rdx, 3	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x40009a2	          0x4801d0	                            add rax, rdx	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x40009a5	        0x4883c004	                              add rax, 4	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x40009a9	    0x488b04c50000	                  mov rax, qword [rax*8]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x40009b1	          0x4889c2	                            mov rdx, rax	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x40009b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x40009b8	          0x488910	                    mov qword [rax], rdx	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x40009bb	        0x837de000	               cmp dword [rbp - 0x20], 0	      3799	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40009bf	     0xf84a9000000	                            je 0x4000a6e	      3799	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40009c5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009c8	            0x4898	                                    cdqe	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009ca	        0x48c1e006	                              shl rax, 6	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009ce	    0x480500000000	                              add rax, 0	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009d4	      0xbe02000000	                              mov esi, 2	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009d9	          0x4889c7	                            mov rdi, rax	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009dc	      0xe855c80000	                 call sym.get_varp_scope	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009e1	          0x4889c2	                            mov rdx, rax	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3801	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40009e8	          0x488b00	                    mov rax, qword [rax]	      3801	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40009eb	          0x488902	                    mov qword [rdx], rax	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009ee	            0xeb7e	                           jmp 0x4000a6e	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x40009f0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40009f3	            0x4898	                                    cdqe	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40009f5	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40009f8	          0x4863d2	                         movsxd rdx, edx	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40009fb	        0x48c1e203	                              shl rdx, 3	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40009ff	          0x4801d0	                            add rax, rdx	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4000a02	        0x4883c004	                              add rax, 4	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4000a06	    0x488b04c50000	                  mov rax, qword [rax*8]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4000a0e	            0x89c2	                            mov edx, eax	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4000a10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4000a14	            0x8910	                    mov dword [rax], edx	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4000a16	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a19	            0x4898	                                    cdqe	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a1b	        0x48c1e006	                              shl rax, 6	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a1f	    0x480500000000	                              add rax, 0	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a25	            0x8b00	                    mov eax, dword [rax]	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a27	      0x3d33400000	                         cmp eax, 0x4033	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a2c	            0x7513	                           jne 0x4000a41	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a2e	      0xe800000000	                          call 0x4000a33	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a33	            0x85c0	                           test eax, eax	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a35	            0x750a	                           jne 0x4000a41	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4000a37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4000a3b	    0xc70000000000	                      mov dword [rax], 0	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4000a41	        0x837de000	               cmp dword [rbp - 0x20], 0	      3815	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4000a45	            0x7427	                            je 0x4000a6e	      3815	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4000a47	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a4a	            0x4898	                                    cdqe	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a4c	        0x48c1e006	                              shl rax, 6	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a50	    0x480500000000	                              add rax, 0	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a56	      0xbe02000000	                              mov esi, 2	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a5b	          0x4889c7	                            mov rdi, rax	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a5e	      0xe8d3c70000	                 call sym.get_varp_scope	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a63	          0x4889c2	                            mov rdx, rax	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3817	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4000a6a	            0x8b00	                    mov eax, dword [rax]	      3817	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4000a6c	            0x8902	                    mov dword [rdx], eax	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4000a6e	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      3821	option.c	FUNCTION_2	IF_1
0x4000a71	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3821	option.c	FUNCTION_2	IF_1
0x4000a74	            0x89d6	                            mov esi, edx	      3821	option.c	FUNCTION_2	IF_1
0x4000a76	            0x89c7	                            mov edi, eax	      3821	option.c	FUNCTION_2	IF_1
0x4000a78	      0xe8183e0000	                  call sym.insecure_flag	      3821	option.c	FUNCTION_2	IF_1
0x4000a7d	        0x488945f8	                mov qword [rbp - 8], rax	      3821	option.c	FUNCTION_2	IF_1
0x4000a81	        0x488b45f8	                mov rax, qword [rbp - 8]	      3822	option.c	FUNCTION_2	IF_1
0x4000a85	          0x488b00	                    mov rax, qword [rax]	      3822	option.c	FUNCTION_2	IF_1
0x4000a88	    0x4825ffff7fff	             and rax, 0xffffffffff7fffff	      3822	option.c	FUNCTION_2	IF_1
0x4000a8e	          0x4889c2	                            mov rdx, rax	      3822	option.c	FUNCTION_2	IF_1
0x4000a91	        0x488b45f8	                mov rax, qword [rbp - 8]	      3822	option.c	FUNCTION_2	IF_1
0x4000a95	          0x488910	                    mov qword [rax], rdx	      3822	option.c	FUNCTION_2	IF_1
0x4000a98	    0x8b1500000000	            mov edx, dword [0x04000a9e] 	      3826	option.c	FUNCTION_2	CALL_8
0x4000a9e	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      3826	option.c	FUNCTION_2	CALL_8
0x4000aa1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3826	option.c	FUNCTION_2	CALL_8
0x4000aa4	            0x89ce	                            mov esi, ecx	      3826	option.c	FUNCTION_2	CALL_8
0x4000aa6	            0x89c7	                            mov edi, eax	      3826	option.c	FUNCTION_2	CALL_8
0x4000aa8	      0xe862870000	        call sym.set_option_scriptID_idx	      3826	option.c	FUNCTION_2	CALL_8
0x4000aad	              0x90	                                     nop	      3828	option.c	FUNCTION_2
0x4000aae	              0xc9	                                   leave	      3828	option.c	FUNCTION_2
0x4000aaf	              0xc3	                                     ret	      3828	option.c	FUNCTION_2
set_option_value	ELSE,4:IF,10:SWITCH,0:CALL,18:DO,0:WHILE,0:functions,0:FOR,1	177
0x400b9c3	              0x55	                                push rbp	      9697	option.c	FUNCTION_56
0x400b9c4	          0x4889e5	                            mov rbp, rsp	      9697	option.c	FUNCTION_56
0x400b9c7	        0x4883ec50	                           sub rsp, 0x50	      9697	option.c	FUNCTION_56
0x400b9cb	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9697	option.c	FUNCTION_56
0x400b9cf	        0x488975c0	             mov qword [rbp - 0x40], rsi	      9697	option.c	FUNCTION_56
0x400b9d3	        0x488955b8	             mov qword [rbp - 0x48], rdx	      9697	option.c	FUNCTION_56
0x400b9d7	          0x894db4	             mov dword [rbp - 0x4c], ecx	      9697	option.c	FUNCTION_56
0x400b9da	    0x64488b042528	                mov rax, qword fs:[0x28]	      9697	option.c	FUNCTION_56
0x400b9e3	        0x488945f8	                mov qword [rbp - 8], rax	      9697	option.c	FUNCTION_56
0x400b9e7	            0x31c0	                            xor eax, eax	      9697	option.c	FUNCTION_56
0x400b9e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9702	option.c	FUNCTION_56	CALL_1
0x400b9ed	          0x4889c7	                            mov rdi, rax	      9702	option.c	FUNCTION_56	CALL_1
0x400b9f0	      0xe8affbffff	                     call sym.findoption	      9702	option.c	FUNCTION_56	CALL_1
0x400b9f5	          0x8945d8	             mov dword [rbp - 0x28], eax	      9702	option.c	FUNCTION_56	CALL_1
0x400b9f8	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9703	option.c	FUNCTION_56	IF_1
0x400b9fc	     0xf89cf000000	                           jns 0x400bad1	      9703	option.c	FUNCTION_56	IF_1
0x400ba02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba06	          0x4889c7	                            mov rdi, rax	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba09	      0xe800000000	                          call 0x400ba0e	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba0e	        0x4883f804	                              cmp rax, 4	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba12	     0xf8598000000	                           jne 0x400bab0	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba18	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba1c	           0xfb600	                   movzx eax, byte [rax]	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba1f	            0x3c74	                            cmp al, 0x74	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba21	     0xf8589000000	                           jne 0x400bab0	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba2b	        0x4883c001	                              add rax, 1	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba2f	           0xfb600	                   movzx eax, byte [rax]	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba32	            0x3c5f	                            cmp al, 0x5f	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba34	            0x757a	                           jne 0x400bab0	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400ba36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400ba3a	          0x4889c7	                            mov rdi, rax	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400ba3d	      0xe814030000	                call sym.find_key_option	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400ba42	          0x8945dc	             mov dword [rbp - 0x24], eax	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400ba45	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400ba49	            0x7465	                            je 0x400bab0	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400ba4b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9712	option.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400ba4f	            0x7915	                           jns 0x400ba66	      9712	option.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400ba51	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400ba54	            0xf7d8	                                 neg eax	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400ba56	          0x8845f0	               mov byte [rbp - 0x10], al	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400ba59	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400ba5c	            0xf7d8	                                 neg eax	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400ba5e	          0xc1e808	                              shr eax, 8	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400ba61	          0x8845f1	                mov byte [rbp - 0xf], al	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400ba64	            0xeb0a	                           jmp 0x400ba70	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400ba66	        0xc645f0f2	            mov byte [rbp - 0x10], 0xf2 	      9719	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x400ba6a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9720	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x400ba6d	          0x8845f1	                mov byte [rbp - 0xf], al	      9720	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x400ba70	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400ba74	        0x488d45f0	                   lea rax, [rbp - 0x10]	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400ba78	      0xba00000000	                              mov edx, 0	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400ba7d	          0x4889ce	                            mov rsi, rcx	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400ba80	          0x4889c7	                            mov rdi, rax	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400ba83	      0xe800000000	                          call 0x400ba88	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400ba88	    0x8b0500000000	            mov eax, dword [0x0400ba8e] 	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400ba8e	            0x85c0	                           test eax, eax	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400ba90	            0x740a	                            je 0x400ba9c	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400ba92	      0xbf00000000	                              mov edi, 0	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x400ba97	      0xe800000000	                          call 0x400ba9c	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x400ba9c	      0xbf32000000	                           mov edi, 0x32	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x400baa1	      0xe800000000	                          call 0x400baa6	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x400baa6	      0xb800000000	                              mov eax, 0	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x400baab	      0xe97f010000	                           jmp 0x400bc2f	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x400bab0	      0xbf00000000	                              mov edi, 0	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400bab5	      0xe800000000	                          call 0x400baba	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400baba	          0x4889c2	                            mov rdx, rax	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400babd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400bac1	          0x4889c6	                            mov rsi, rax	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400bac4	          0x4889d7	                            mov rdi, rdx	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400bac7	      0xe800000000	                          call 0x400bacc	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400bacc	      0xe959010000	                           jmp 0x400bc2a	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400bad1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9733	option.c	FUNCTION_56	ELSE_2
0x400bad4	            0x4898	                                    cdqe	      9733	option.c	FUNCTION_56	ELSE_2
0x400bad6	        0x48c1e006	                              shl rax, 6	      9733	option.c	FUNCTION_56	ELSE_2
0x400bada	    0x480500000000	                              add rax, 0	      9733	option.c	FUNCTION_56	ELSE_2
0x400bae0	          0x488b00	                    mov rax, qword [rax]	      9733	option.c	FUNCTION_56	ELSE_2
0x400bae3	        0x488945e0	             mov qword [rbp - 0x20], rax	      9733	option.c	FUNCTION_56	ELSE_2
0x400bae7	    0x8b0500000000	            mov eax, dword [0x0400baed] 	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400baed	            0x85c0	                           test eax, eax	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400baef	            0x7e2a	                           jle 0x400bb1b	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400baf1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400baf5	      0x2500000800	                        and eax, 0x80000	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400bafa	          0x4885c0	                           test rax, rax	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400bafd	            0x741c	                            je 0x400bb1b	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400baff	      0xbf00000000	                              mov edi, 0	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400bb04	      0xe800000000	                          call 0x400bb09	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400bb09	          0x4889c7	                            mov rdi, rax	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400bb0c	      0xe800000000	                          call 0x400bb11	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400bb11	      0xb800000000	                              mov eax, 0	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x400bb16	      0xe914010000	                           jmp 0x400bc2f	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x400bb1b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400bb1f	          0x83e004	                              and eax, 4	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400bb22	          0x4885c0	                           test rax, rax	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400bb25	            0x7419	                            je 0x400bb40	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400bb27	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      9743	option.c	FUNCTION_56	ELSE_2	CALL_13
0x400bb2a	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      9743	option.c	FUNCTION_56	ELSE_2	CALL_13
0x400bb2e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9743	option.c	FUNCTION_56	ELSE_2	CALL_13
0x400bb31	          0x4889ce	                            mov rsi, rcx	      9743	option.c	FUNCTION_56	ELSE_2	CALL_13
0x400bb34	            0x89c7	                            mov edi, eax	      9743	option.c	FUNCTION_56	ELSE_2	CALL_13
0x400bb36	      0xe8d390ffff	              call sym.set_string_option	      9743	option.c	FUNCTION_56	ELSE_2	CALL_13
0x400bb3b	      0xe9ef000000	                           jmp 0x400bc2f	      9743	option.c	FUNCTION_56	ELSE_2	CALL_13
0x400bb40	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb43	            0x4898	                                    cdqe	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb45	        0x48c1e006	                              shl rax, 6	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb49	    0x488d90000000	                          lea rdx, [rax]	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb50	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb53	            0x89c6	                            mov esi, eax	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb55	          0x4889d7	                            mov rdi, rdx	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb58	      0xe8d9160000	                 call sym.get_varp_scope	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb5d	        0x488945e8	             mov qword [rbp - 0x18], rax	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400bb61	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x400bb66	     0xf84be000000	                            je 0x400bc2a	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x400bb6c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400bb71	            0x7569	                           jne 0x400bbdc	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400bb73	      0x48837db800	               cmp qword [rbp - 0x48], 0	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400bb78	            0x7462	                            je 0x400bbdc	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400bb7a	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb81	            0xeb04	                           jmp 0x400bb87	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb83	        0x8345d401	               add dword [rbp - 0x2c], 1	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb87	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb8a	          0x4863d0	                         movsxd rdx, eax	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb91	          0x4801d0	                            add rax, rdx	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb94	           0xfb600	                   movzx eax, byte [rax]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb97	            0x3c30	                            cmp al, 0x30	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb99	            0x74e8	                            je 0x400bb83	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400bb9b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bb9e	          0x4863d0	                         movsxd rdx, eax	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bba1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bba5	          0x4801d0	                            add rax, rdx	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bba8	           0xfb600	                   movzx eax, byte [rax]	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bbab	            0x84c0	                             test al, al	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bbad	            0x7506	                           jne 0x400bbb5	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bbaf	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bbb3	            0x7527	                           jne 0x400bbdc	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bbb5	      0xbf00000000	                              mov edi, 0	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbba	      0xe800000000	                          call 0x400bbbf	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbbf	          0x4889c1	                            mov rcx, rax	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbc2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbc6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbca	          0x4889c6	                            mov rsi, rax	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbcd	          0x4889cf	                            mov rdi, rcx	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbd0	      0xe800000000	                          call 0x400bbd5	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400bbd5	      0xb800000000	                              mov eax, 0	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bbda	            0xeb53	                           jmp 0x400bc2f	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400bbdc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400bbe0	          0x83e002	                              and eax, 2	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400bbe3	          0x4885c0	                           test rax, rax	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400bbe6	            0x7425	                            je 0x400bc0d	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400bbe8	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bbeb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bbef	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bbf3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bbf6	          0x4189c9	                            mov r9d, ecx	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bbf9	    0x41b800000000	                              mov r8d, 0	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bbff	      0xb900000000	                              mov ecx, 0	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bc04	            0x89c7	                            mov edi, eax	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bc06	      0xe8aee6ffff	                 call sym.set_num_option	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bc0b	            0xeb22	                           jmp 0x400bc2f	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400bc0d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc11	            0x89c7	                            mov edi, eax	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc13	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc16	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc1a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc1d	            0x89d1	                            mov ecx, edx	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc1f	            0x89fa	                            mov edx, edi	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc21	            0x89c7	                            mov edi, eax	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc23	      0xe8b8d6ffff	                call sym.set_bool_option	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc28	            0xeb05	                           jmp 0x400bc2f	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400bc2a	      0xb800000000	                              mov eax, 0	      9777	option.c	FUNCTION_56
0x400bc2f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9778	option.c	FUNCTION_56
0x400bc33	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9778	option.c	FUNCTION_56
0x400bc3c	            0x7405	                            je 0x400bc43	      9778	option.c	FUNCTION_56
0x400bc3e	      0xe800000000	                          call 0x400bc43	      9778	option.c	FUNCTION_56
0x400bc43	              0xc9	                                   leave	      9778	option.c	FUNCTION_56
0x400bc44	              0xc3	                                     ret	      9778	option.c	FUNCTION_56
change_compatible	ELSE,0:IF,2:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	30
0x401112c	              0x55	                                push rbp	     12234	option.c	FUNCTION_101
0x401112d	          0x4889e5	                            mov rbp, rsp	     12234	option.c	FUNCTION_101
0x4011130	        0x4883ec20	                           sub rsp, 0x20	     12234	option.c	FUNCTION_101
0x4011134	          0x897dec	             mov dword [rbp - 0x14], edi	     12234	option.c	FUNCTION_101
0x4011137	    0x8b0500000000	            mov eax, dword [0x0401113d] 	     12237	option.c	FUNCTION_101	IF_1
0x401113d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	     12237	option.c	FUNCTION_101	IF_1
0x4011140	            0x740e	                            je 0x4011150	     12237	option.c	FUNCTION_101	IF_1
0x4011142	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12239	option.c	FUNCTION_101	IF_1
0x4011145	    0x890500000000	            mov dword [0x0401114b], eax 	     12239	option.c	FUNCTION_101	IF_1
0x401114b	      0xe8e0000000	                 call sym.compatible_set	     12240	option.c	FUNCTION_101	IF_1	CALL_1
0x4011150	      0xbf00000000	                              mov edi, 0	     12242	option.c	FUNCTION_101	CALL_2
0x4011155	      0xe84aa4ffff	                     call sym.findoption	     12242	option.c	FUNCTION_101	CALL_2
0x401115a	          0x8945fc	                mov dword [rbp - 4], eax	     12242	option.c	FUNCTION_101	CALL_2
0x401115d	        0x837dfc00	                  cmp dword [rbp - 4], 0	     12243	option.c	FUNCTION_101	IF_2
0x4011161	            0x782a	                            js 0x401118d	     12243	option.c	FUNCTION_101	IF_2
0x4011163	          0x8b45fc	                mov eax, dword [rbp - 4]	     12244	option.c	FUNCTION_101	IF_2
0x4011166	            0x4898	                                    cdqe	     12244	option.c	FUNCTION_101	IF_2
0x4011168	        0x48c1e006	                              shl rax, 6	     12244	option.c	FUNCTION_101	IF_2
0x401116c	    0x480500000000	                              add rax, 0	     12244	option.c	FUNCTION_101	IF_2
0x4011172	          0x488b00	                    mov rax, qword [rax]	     12244	option.c	FUNCTION_101	IF_2
0x4011175	          0x80cc01	                                or ah, 1	     12244	option.c	FUNCTION_101	IF_2
0x4011178	          0x4889c2	                            mov rdx, rax	     12244	option.c	FUNCTION_101	IF_2
0x401117b	          0x8b45fc	                mov eax, dword [rbp - 4]	     12244	option.c	FUNCTION_101	IF_2
0x401117e	            0x4898	                                    cdqe	     12244	option.c	FUNCTION_101	IF_2
0x4011180	        0x48c1e006	                              shl rax, 6	     12244	option.c	FUNCTION_101	IF_2
0x4011184	    0x480500000000	                              add rax, 0	     12244	option.c	FUNCTION_101	IF_2
0x401118a	          0x488910	                    mov qword [rax], rdx	     12244	option.c	FUNCTION_101	IF_2
0x401118d	              0x90	                                     nop	     12245	option.c	FUNCTION_101
0x401118e	              0xc9	                                   leave	     12245	option.c	FUNCTION_101
0x401118f	              0xc3	                                     ret	     12245	option.c	FUNCTION_101
didset_options	ELSE,0:IF,0:SWITCH,0:CALL,20:DO,0:WHILE,0:functions,0:FOR,0	91
0x400414c	              0x55	                                push rbp	      5557	option.c	FUNCTION_26
0x400414d	          0x4889e5	                            mov rbp, rsp	      5557	option.c	FUNCTION_26
0x4004150	      0xe800000000	                          call 0x4004155	      5559	option.c	FUNCTION_26	CALL_1
0x4004155	    0x488b05000000	            mov rax, qword [0x0400415c] 	      5562	option.c	FUNCTION_26	CALL_2
0x400415c	      0xb901000000	                              mov ecx, 1	      5562	option.c	FUNCTION_26	CALL_2
0x4004161	      0xba00000000	                              mov edx, 0	      5562	option.c	FUNCTION_26	CALL_2
0x4004166	      0xbe00000000	                              mov esi, 0	      5562	option.c	FUNCTION_26	CALL_2
0x400416b	          0x4889c7	                            mov rdi, rax	      5562	option.c	FUNCTION_26	CALL_2
0x400416e	      0xe8efd10000	              call sym.opt_strings_flags	      5562	option.c	FUNCTION_26	CALL_2
0x4004173	    0x488b05000000	            mov rax, qword [0x0400417a] 	      5564	option.c	FUNCTION_26	CALL_3
0x400417a	      0xb901000000	                              mov ecx, 1	      5564	option.c	FUNCTION_26	CALL_3
0x400417f	      0xba00000000	                              mov edx, 0	      5564	option.c	FUNCTION_26	CALL_3
0x4004184	      0xbe00000000	                              mov esi, 0	      5564	option.c	FUNCTION_26	CALL_3
0x4004189	          0x4889c7	                            mov rdi, rax	      5564	option.c	FUNCTION_26	CALL_3
0x400418c	      0xe8d1d10000	              call sym.opt_strings_flags	      5564	option.c	FUNCTION_26	CALL_3
0x4004191	    0x488b05000000	            mov rax, qword [0x04004198] 	      5565	option.c	FUNCTION_26	CALL_4
0x4004198	      0xb901000000	                              mov ecx, 1	      5565	option.c	FUNCTION_26	CALL_4
0x400419d	      0xba00000000	                              mov edx, 0	      5565	option.c	FUNCTION_26	CALL_4
0x40041a2	      0xbe00000000	                              mov esi, 0	      5565	option.c	FUNCTION_26	CALL_4
0x40041a7	          0x4889c7	                            mov rdi, rax	      5565	option.c	FUNCTION_26	CALL_4
0x40041aa	      0xe8b3d10000	              call sym.opt_strings_flags	      5565	option.c	FUNCTION_26	CALL_4
0x40041af	    0x488b05000000	            mov rax, qword [0x040041b6] 	      5567	option.c	FUNCTION_26	CALL_5
0x40041b6	      0xb901000000	                              mov ecx, 1	      5567	option.c	FUNCTION_26	CALL_5
0x40041bb	      0xba00000000	                              mov edx, 0	      5567	option.c	FUNCTION_26	CALL_5
0x40041c0	      0xbe00000000	                              mov esi, 0	      5567	option.c	FUNCTION_26	CALL_5
0x40041c5	          0x4889c7	                            mov rdi, rax	      5567	option.c	FUNCTION_26	CALL_5
0x40041c8	      0xe895d10000	              call sym.opt_strings_flags	      5567	option.c	FUNCTION_26	CALL_5
0x40041cd	    0x488b05000000	            mov rax, qword [0x040041d4] 	      5568	option.c	FUNCTION_26	CALL_6
0x40041d4	      0xb901000000	                              mov ecx, 1	      5568	option.c	FUNCTION_26	CALL_6
0x40041d9	      0xba00000000	                              mov edx, 0	      5568	option.c	FUNCTION_26	CALL_6
0x40041de	      0xbe00000000	                              mov esi, 0	      5568	option.c	FUNCTION_26	CALL_6
0x40041e3	          0x4889c7	                            mov rdi, rax	      5568	option.c	FUNCTION_26	CALL_6
0x40041e6	      0xe877d10000	              call sym.opt_strings_flags	      5568	option.c	FUNCTION_26	CALL_6
0x40041eb	    0x488b05000000	            mov rax, qword [0x040041f2] 	      5571	option.c	FUNCTION_26	CALL_7
0x40041f2	      0xb901000000	                              mov ecx, 1	      5571	option.c	FUNCTION_26	CALL_7
0x40041f7	      0xba00000000	                              mov edx, 0	      5571	option.c	FUNCTION_26	CALL_7
0x40041fc	      0xbe00000000	                              mov esi, 0	      5571	option.c	FUNCTION_26	CALL_7
0x4004201	          0x4889c7	                            mov rdi, rax	      5571	option.c	FUNCTION_26	CALL_7
0x4004204	      0xe859d10000	              call sym.opt_strings_flags	      5571	option.c	FUNCTION_26	CALL_7
0x4004209	    0x488b05000000	            mov rax, qword [0x04004210] 	      5573	option.c	FUNCTION_26	CALL_8
0x4004210	      0xb901000000	                              mov ecx, 1	      5573	option.c	FUNCTION_26	CALL_8
0x4004215	      0xba00000000	                              mov edx, 0	      5573	option.c	FUNCTION_26	CALL_8
0x400421a	      0xbe00000000	                              mov esi, 0	      5573	option.c	FUNCTION_26	CALL_8
0x400421f	          0x4889c7	                            mov rdi, rax	      5573	option.c	FUNCTION_26	CALL_8
0x4004222	      0xe83bd10000	              call sym.opt_strings_flags	      5573	option.c	FUNCTION_26	CALL_8
0x4004227	    0x488b05000000	            mov rax, qword [0x0400422e] 	      5574	option.c	FUNCTION_26	CALL_9
0x400422e	      0xb900000000	                              mov ecx, 0	      5574	option.c	FUNCTION_26	CALL_9
0x4004233	      0xba00000000	                              mov edx, 0	      5574	option.c	FUNCTION_26	CALL_9
0x4004238	      0xbe00000000	                              mov esi, 0	      5574	option.c	FUNCTION_26	CALL_9
0x400423d	          0x4889c7	                            mov rdi, rax	      5574	option.c	FUNCTION_26	CALL_9
0x4004240	      0xe81dd10000	              call sym.opt_strings_flags	      5574	option.c	FUNCTION_26	CALL_9
0x4004245	    0x488b05000000	            mov rax, qword [0x0400424c] 	      5576	option.c	FUNCTION_26	CALL_10
0x400424c	      0xb901000000	                              mov ecx, 1	      5576	option.c	FUNCTION_26	CALL_10
0x4004251	      0xba00000000	                              mov edx, 0	      5576	option.c	FUNCTION_26	CALL_10
0x4004256	      0xbe00000000	                              mov esi, 0	      5576	option.c	FUNCTION_26	CALL_10
0x400425b	          0x4889c7	                            mov rdi, rax	      5576	option.c	FUNCTION_26	CALL_10
0x400425e	      0xe8ffd00000	              call sym.opt_strings_flags	      5576	option.c	FUNCTION_26	CALL_10
0x4004263	    0x488b05000000	            mov rax, qword [0x0400426a] 	      5579	option.c	FUNCTION_26	CALL_11
0x400426a	      0xb900000000	                              mov ecx, 0	      5579	option.c	FUNCTION_26	CALL_11
0x400426f	      0xba00000000	                              mov edx, 0	      5579	option.c	FUNCTION_26	CALL_11
0x4004274	      0xbe00000000	                              mov esi, 0	      5579	option.c	FUNCTION_26	CALL_11
0x4004279	          0x4889c7	                            mov rdi, rax	      5579	option.c	FUNCTION_26	CALL_11
0x400427c	      0xe8e1d00000	              call sym.opt_strings_flags	      5579	option.c	FUNCTION_26	CALL_11
0x4004281	      0xe800000000	                          call 0x4004286	      5582	option.c	FUNCTION_26	CALL_12
0x4004286	      0xe800000000	                          call 0x400428b	      5583	option.c	FUNCTION_26	CALL_13
0x400428b	    0x488b05000000	            mov rax, qword [0x04004292] 	      5584	option.c	FUNCTION_26	CALL_14
0x4004292	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5584	option.c	FUNCTION_26	CALL_14
0x4004296	          0x4889c7	                            mov rdi, rax	      5584	option.c	FUNCTION_26	CALL_14
0x4004299	      0xe8ac4e0000	               call sym.compile_cap_prog	      5584	option.c	FUNCTION_26	CALL_14
0x400429e	      0xbf01000000	                              mov edi, 1	      5585	option.c	FUNCTION_26	CALL_15
0x40042a3	      0xe8c74d0000	           call sym.did_set_spell_option	      5585	option.c	FUNCTION_26	CALL_15
0x40042a8	    0x488b05000000	            mov rax, qword [0x040042af] 	      5588	option.c	FUNCTION_26	CALL_16
0x40042af	      0xb901000000	                              mov ecx, 1	      5588	option.c	FUNCTION_26	CALL_16
0x40042b4	      0xba00000000	                              mov edx, 0	      5588	option.c	FUNCTION_26	CALL_16
0x40042b9	      0xbe00000000	                              mov esi, 0	      5588	option.c	FUNCTION_26	CALL_16
0x40042be	          0x4889c7	                            mov rdi, rax	      5588	option.c	FUNCTION_26	CALL_16
0x40042c1	      0xe89cd00000	              call sym.opt_strings_flags	      5588	option.c	FUNCTION_26	CALL_16
0x40042c6	    0x488b05000000	            mov rax, qword [0x040042cd] 	      5591	option.c	FUNCTION_26	CALL_17
0x40042cd	      0xb900000000	                              mov ecx, 0	      5591	option.c	FUNCTION_26	CALL_17
0x40042d2	      0xba00000000	                              mov edx, 0	      5591	option.c	FUNCTION_26	CALL_17
0x40042d7	      0xbe00000000	                              mov esi, 0	      5591	option.c	FUNCTION_26	CALL_17
0x40042dc	          0x4889c7	                            mov rdi, rax	      5591	option.c	FUNCTION_26	CALL_17
0x40042df	      0xe87ed00000	              call sym.opt_strings_flags	      5591	option.c	FUNCTION_26	CALL_17
0x40042e4	      0xe8a4f9ffff	                    call sym.check_cedit	      5595	option.c	FUNCTION_26	CALL_18
0x40042e9	    0x488b05000000	            mov rax, qword [0x040042f0] 	      5598	option.c	FUNCTION_26	CALL_19
0x40042f0	          0x4889c7	                            mov rdi, rax	      5598	option.c	FUNCTION_26	CALL_19
0x40042f3	      0xe87fd90000	                   call sym.briopt_check	      5598	option.c	FUNCTION_26	CALL_19
0x40042f8	      0xe8d1cf0000	             call sym.fill_breakat_flags	      5602	option.c	FUNCTION_26	CALL_20
0x40042fd	              0x90	                                     nop	      5605	option.c	FUNCTION_26
0x40042fe	              0x5d	                                 pop rbp	      5605	option.c	FUNCTION_26
0x40042ff	              0xc3	                                     ret	      5605	option.c	FUNCTION_26
wc_use_keyname	ELSE,0:IF,2:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	28
0x4010708	              0x55	                                push rbp	     11812	option.c	FUNCTION_92
0x4010709	          0x4889e5	                            mov rbp, rsp	     11812	option.c	FUNCTION_92
0x401070c	        0x4883ec10	                           sub rsp, 0x10	     11812	option.c	FUNCTION_92
0x4010710	        0x48897df8	                mov qword [rbp - 8], rdi	     11812	option.c	FUNCTION_92
0x4010714	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11812	option.c	FUNCTION_92
0x4010718	    0x48817df80000	                  cmp qword [rbp - 8], 0	     11813	option.c	FUNCTION_92	IF_1
0x4010720	            0x740a	                            je 0x401072c	     11813	option.c	FUNCTION_92	IF_1
0x4010722	    0x48817df80000	                  cmp qword [rbp - 8], 0	     11813	option.c	FUNCTION_92	IF_1
0x401072a	            0x7533	                           jne 0x401075f	     11813	option.c	FUNCTION_92	IF_1
0x401072c	        0x488b45f8	                mov rax, qword [rbp - 8]	     11815	option.c	FUNCTION_92	IF_1
0x4010730	          0x488b10	                    mov rdx, qword [rax]	     11815	option.c	FUNCTION_92	IF_1
0x4010733	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11815	option.c	FUNCTION_92	IF_1
0x4010737	          0x488910	                    mov qword [rax], rdx	     11815	option.c	FUNCTION_92	IF_1
0x401073a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x401073e	          0x488b00	                    mov rax, qword [rax]	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4010741	          0x4885c0	                           test rax, rax	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4010744	            0x7812	                            js 0x4010758	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4010746	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x401074a	          0x488b00	                    mov rax, qword [rax]	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x401074d	            0x89c7	                            mov edi, eax	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x401074f	      0xe800000000	                          call 0x4010754	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4010754	            0x85c0	                           test eax, eax	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4010756	            0x7807	                            js 0x401075f	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4010758	      0xb801000000	                              mov eax, 1	     11817	option.c	FUNCTION_92	IF_1	IF_2
0x401075d	            0xeb05	                           jmp 0x4010764	     11817	option.c	FUNCTION_92	IF_1	IF_2
0x401075f	      0xb800000000	                              mov eax, 0	     11819	option.c	FUNCTION_92
0x4010764	              0xc9	                                   leave	     11820	option.c	FUNCTION_92
0x4010765	              0xc3	                                     ret	     11820	option.c	FUNCTION_92
set_string_default	ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	14
0x4000cd0	              0x55	                                push rbp	      3897	option.c	FUNCTION_5
0x4000cd1	          0x4889e5	                            mov rbp, rsp	      3897	option.c	FUNCTION_5
0x4000cd4	        0x4883ec10	                           sub rsp, 0x10	      3897	option.c	FUNCTION_5
0x4000cd8	        0x48897df8	                mov qword [rbp - 8], rdi	      3897	option.c	FUNCTION_5
0x4000cdc	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3897	option.c	FUNCTION_5
0x4000ce0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3898	option.c	FUNCTION_5	CALL_1
0x4000ce4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3898	option.c	FUNCTION_5	CALL_1
0x4000ce8	      0xba00000000	                              mov edx, 0	      3898	option.c	FUNCTION_5	CALL_1
0x4000ced	          0x4889ce	                            mov rsi, rcx	      3898	option.c	FUNCTION_5	CALL_1
0x4000cf0	          0x4889c7	                            mov rdi, rax	      3898	option.c	FUNCTION_5	CALL_1
0x4000cf3	      0xe8e9feffff	         call sym.set_string_default_esc	      3898	option.c	FUNCTION_5	CALL_1
0x4000cf8	              0x90	                                     nop	      3899	option.c	FUNCTION_5
0x4000cf9	              0xc9	                                   leave	      3899	option.c	FUNCTION_5
0x4000cfa	              0xc3	                                     ret	      3899	option.c	FUNCTION_5
get_viminfo_parameter	ELSE,0:IF,1:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	23
0x4003f70	              0x55	                                push rbp	      5479	option.c	FUNCTION_23
0x4003f71	          0x4889e5	                            mov rbp, rsp	      5479	option.c	FUNCTION_23
0x4003f74	        0x4883ec20	                           sub rsp, 0x20	      5479	option.c	FUNCTION_23
0x4003f78	          0x897dec	             mov dword [rbp - 0x14], edi	      5479	option.c	FUNCTION_23
0x4003f7b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5482	option.c	FUNCTION_23	CALL_1
0x4003f7e	            0x89c7	                            mov edi, eax	      5482	option.c	FUNCTION_23	CALL_1
0x4003f80	      0xe800000000	                          call 0x4003f85	      5482	option.c	FUNCTION_23	CALL_1
0x4003f85	        0x488945f8	                mov qword [rbp - 8], rax	      5482	option.c	FUNCTION_23	CALL_1
0x4003f89	      0x48837df800	                  cmp qword [rbp - 8], 0	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003f8e	            0x7420	                            je 0x4003fb0	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003f90	        0x488b45f8	                mov rax, qword [rbp - 8]	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003f94	           0xfb600	                   movzx eax, byte [rax]	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003f97	           0xfb6c0	                           movzx eax, al	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003f9a	          0x83e830	                           sub eax, 0x30	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003f9d	          0x83f809	                              cmp eax, 9	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003fa0	            0x770e	                            ja 0x4003fb0	      5483	option.c	FUNCTION_23	IF_1	CALL_2
0x4003fa2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5484	option.c	FUNCTION_23	CALL_3
0x4003fa6	          0x4889c7	                            mov rdi, rax	      5484	option.c	FUNCTION_23	CALL_3
0x4003fa9	      0xe800000000	                          call 0x4003fae	      5484	option.c	FUNCTION_23	CALL_3
0x4003fae	            0xeb05	                           jmp 0x4003fb5	      5484	option.c	FUNCTION_23	CALL_3
0x4003fb0	      0xb8ffffffff	                     mov eax, 0xffffffff	      5485	option.c	FUNCTION_23
0x4003fb5	              0xc9	                                   leave	      5486	option.c	FUNCTION_23
0x4003fb6	              0xc3	                                     ret	      5486	option.c	FUNCTION_23
comp_col	ELSE,0:IF,6:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	70
0x400cda7	              0x55	                                push rbp	     10389	option.c	FUNCTION_74
0x400cda8	          0x4889e5	                            mov rbp, rsp	     10389	option.c	FUNCTION_74
0x400cdab	    0x488b05000000	            mov rax, qword [0x0400cdb2] 	     10391	option.c	FUNCTION_74
0x400cdb2	        0x4883f802	                              cmp rax, 2	     10391	option.c	FUNCTION_74
0x400cdb6	            0x7420	                            je 0x400cdd8	     10391	option.c	FUNCTION_74
0x400cdb8	    0x488b05000000	            mov rax, qword [0x0400cdbf] 	     10391	option.c	FUNCTION_74
0x400cdbf	        0x4883f801	                              cmp rax, 1	     10391	option.c	FUNCTION_74
0x400cdc3	            0x751a	                           jne 0x400cddf	     10391	option.c	FUNCTION_74
0x400cdc5	    0x488b15000000	            mov rdx, qword [0x0400cdcc] 	     10391	option.c	FUNCTION_74
0x400cdcc	    0x488b05000000	            mov rax, qword [0x0400cdd3] 	     10391	option.c	FUNCTION_74
0x400cdd3	          0x4839c2	                            cmp rdx, rax	     10391	option.c	FUNCTION_74
0x400cdd6	            0x7407	                            je 0x400cddf	     10391	option.c	FUNCTION_74
0x400cdd8	      0xb801000000	                              mov eax, 1	     10391	option.c	FUNCTION_74
0x400cddd	            0xeb05	                           jmp 0x400cde4	     10391	option.c	FUNCTION_74
0x400cddf	      0xb800000000	                              mov eax, 0	     10391	option.c	FUNCTION_74
0x400cde4	          0x8945fc	                mov dword [rbp - 4], eax	     10391	option.c	FUNCTION_74
0x400cde7	    0xc70500000000	               mov dword [0x0400cdf1], 0	     10393	option.c	FUNCTION_74
0x400cdf1	    0xc70500000000	               mov dword [0x0400cdfb], 0	     10394	option.c	FUNCTION_74
0x400cdfb	    0x8b0500000000	            mov eax, dword [0x0400ce01] 	     10395	option.c	FUNCTION_74	IF_1
0x400ce01	            0x85c0	                           test eax, eax	     10395	option.c	FUNCTION_74	IF_1
0x400ce03	            0x7432	                            je 0x400ce37	     10395	option.c	FUNCTION_74	IF_1
0x400ce05	    0x8b0500000000	            mov eax, dword [0x0400ce0b] 	     10398	option.c	FUNCTION_74	IF_1
0x400ce0b	            0x85c0	                           test eax, eax	     10398	option.c	FUNCTION_74	IF_1
0x400ce0d	            0x740b	                            je 0x400ce1a	     10398	option.c	FUNCTION_74	IF_1
0x400ce0f	    0x8b0500000000	            mov eax, dword [0x0400ce15] 	     10398	option.c	FUNCTION_74	IF_1
0x400ce15	          0x83c001	                              add eax, 1	     10398	option.c	FUNCTION_74	IF_1
0x400ce18	            0xeb05	                           jmp 0x400ce1f	     10398	option.c	FUNCTION_74	IF_1
0x400ce1a	      0xb812000000	                           mov eax, 0x12	     10398	option.c	FUNCTION_74	IF_1
0x400ce1f	    0x890500000000	            mov dword [0x0400ce25], eax 	     10398	option.c	FUNCTION_74	IF_1
0x400ce25	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x400ce29	            0x750c	                           jne 0x400ce37	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x400ce2b	    0x8b0500000000	            mov eax, dword [0x0400ce31] 	     10404	option.c	FUNCTION_74	IF_1	IF_2
0x400ce31	    0x890500000000	            mov dword [0x0400ce37], eax 	     10404	option.c	FUNCTION_74	IF_1	IF_2
0x400ce37	    0x8b0500000000	            mov eax, dword [0x0400ce3d] 	     10406	option.c	FUNCTION_74	IF_3
0x400ce3d	            0x85c0	                           test eax, eax	     10406	option.c	FUNCTION_74	IF_3
0x400ce3f	            0x742e	                            je 0x400ce6f	     10406	option.c	FUNCTION_74	IF_3
0x400ce41	    0x8b0500000000	            mov eax, dword [0x0400ce47] 	     10408	option.c	FUNCTION_74	IF_3
0x400ce47	          0x83c00a	                            add eax, 0xa	     10408	option.c	FUNCTION_74	IF_3
0x400ce4a	    0x890500000000	            mov dword [0x0400ce50], eax 	     10408	option.c	FUNCTION_74	IF_3
0x400ce50	    0x8b0500000000	            mov eax, dword [0x0400ce56] 	     10409	option.c	FUNCTION_74	IF_3	IF_4
0x400ce56	            0x85c0	                           test eax, eax	     10409	option.c	FUNCTION_74	IF_3	IF_4
0x400ce58	            0x7406	                            je 0x400ce60	     10409	option.c	FUNCTION_74	IF_3	IF_4
0x400ce5a	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10409	option.c	FUNCTION_74	IF_3	IF_4
0x400ce5e	            0x740f	                            je 0x400ce6f	     10409	option.c	FUNCTION_74	IF_3	IF_4
0x400ce60	    0x8b0500000000	            mov eax, dword [0x0400ce66] 	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x400ce66	          0x83c001	                              add eax, 1	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x400ce69	    0x890500000000	            mov dword [0x0400ce6f], eax 	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x400ce6f	    0x488b05000000	            mov rax, qword [0x0400ce76] 	     10412	option.c	FUNCTION_74
0x400ce76	            0x89c2	                            mov edx, eax	     10412	option.c	FUNCTION_74
0x400ce78	    0x8b0500000000	            mov eax, dword [0x0400ce7e] 	     10412	option.c	FUNCTION_74
0x400ce7e	            0x29c2	                            sub edx, eax	     10412	option.c	FUNCTION_74
0x400ce80	            0x89d0	                            mov eax, edx	     10412	option.c	FUNCTION_74
0x400ce82	    0x890500000000	            mov dword [0x0400ce88], eax 	     10412	option.c	FUNCTION_74
0x400ce88	    0x488b05000000	            mov rax, qword [0x0400ce8f] 	     10413	option.c	FUNCTION_74
0x400ce8f	            0x89c2	                            mov edx, eax	     10413	option.c	FUNCTION_74
0x400ce91	    0x8b0500000000	            mov eax, dword [0x0400ce97] 	     10413	option.c	FUNCTION_74
0x400ce97	            0x29c2	                            sub edx, eax	     10413	option.c	FUNCTION_74
0x400ce99	            0x89d0	                            mov eax, edx	     10413	option.c	FUNCTION_74
0x400ce9b	    0x890500000000	            mov dword [0x0400cea1], eax 	     10413	option.c	FUNCTION_74
0x400cea1	    0x8b0500000000	            mov eax, dword [0x0400cea7] 	     10414	option.c	FUNCTION_74	IF_5
0x400cea7	            0x85c0	                           test eax, eax	     10414	option.c	FUNCTION_74	IF_5
0x400cea9	            0x7f0a	                            jg 0x400ceb5	     10414	option.c	FUNCTION_74	IF_5
0x400ceab	    0xc70500000000	               mov dword [0x0400ceb5], 1	     10415	option.c	FUNCTION_74	IF_5
0x400ceb5	    0x8b0500000000	            mov eax, dword [0x0400cebb] 	     10416	option.c	FUNCTION_74	IF_6
0x400cebb	            0x85c0	                           test eax, eax	     10416	option.c	FUNCTION_74	IF_6
0x400cebd	            0x7f0a	                            jg 0x400cec9	     10416	option.c	FUNCTION_74	IF_6
0x400cebf	    0xc70500000000	               mov dword [0x0400cec9], 1	     10417	option.c	FUNCTION_74	IF_6
0x400cec9	              0x90	                                     nop	     10422	option.c	FUNCTION_74
0x400ceca	              0x5d	                                 pop rbp	     10422	option.c	FUNCTION_74
0x400cecb	              0xc3	                                     ret	     10422	option.c	FUNCTION_74
check_winopt	ELSE,0:IF,0:SWITCH,0:CALL,14:DO,0:WHILE,0:functions,0:FOR,0	63
0x400ebb2	              0x55	                                push rbp	     10960	option.c	FUNCTION_82
0x400ebb3	          0x4889e5	                            mov rbp, rsp	     10960	option.c	FUNCTION_82
0x400ebb6	        0x4883ec08	                              sub rsp, 8	     10960	option.c	FUNCTION_82
0x400ebba	        0x48897df8	                mov qword [rbp - 8], rdi	     10960	option.c	FUNCTION_82
0x400ebbe	        0x488b45f8	                mov rax, qword [rbp - 8]	     10962	option.c	FUNCTION_82	CALL_1
0x400ebc2	        0x4883c030	                           add rax, 0x30	     10962	option.c	FUNCTION_82	CALL_1
0x400ebc6	          0x4889c7	                            mov rdi, rax	     10962	option.c	FUNCTION_82	CALL_1
0x400ebc9	      0xe8cf5bffff	            call sym.check_string_option	     10962	option.c	FUNCTION_82	CALL_1
0x400ebce	        0x488b45f8	                mov rax, qword [rbp - 8]	     10963	option.c	FUNCTION_82	CALL_2
0x400ebd2	        0x4883c048	                           add rax, 0x48	     10963	option.c	FUNCTION_82	CALL_2
0x400ebd6	          0x4889c7	                            mov rdi, rax	     10963	option.c	FUNCTION_82	CALL_2
0x400ebd9	      0xe8bf5bffff	            call sym.check_string_option	     10963	option.c	FUNCTION_82	CALL_2
0x400ebde	        0x488b45f8	                mov rax, qword [rbp - 8]	     10964	option.c	FUNCTION_82	CALL_3
0x400ebe2	        0x4883c050	                           add rax, 0x50	     10964	option.c	FUNCTION_82	CALL_3
0x400ebe6	          0x4889c7	                            mov rdi, rax	     10964	option.c	FUNCTION_82	CALL_3
0x400ebe9	      0xe8af5bffff	            call sym.check_string_option	     10964	option.c	FUNCTION_82	CALL_3
0x400ebee	        0x488b45f8	                mov rax, qword [rbp - 8]	     10966	option.c	FUNCTION_82	CALL_4
0x400ebf2	        0x4883c068	                           add rax, 0x68	     10966	option.c	FUNCTION_82	CALL_4
0x400ebf6	          0x4889c7	                            mov rdi, rax	     10966	option.c	FUNCTION_82	CALL_4
0x400ebf9	      0xe89f5bffff	            call sym.check_string_option	     10966	option.c	FUNCTION_82	CALL_4
0x400ebfe	        0x488b45f8	                mov rax, qword [rbp - 8]	     10967	option.c	FUNCTION_82	CALL_5
0x400ec02	        0x4883c070	                           add rax, 0x70	     10967	option.c	FUNCTION_82	CALL_5
0x400ec06	          0x4889c7	                            mov rdi, rax	     10967	option.c	FUNCTION_82	CALL_5
0x400ec09	      0xe88f5bffff	            call sym.check_string_option	     10967	option.c	FUNCTION_82	CALL_5
0x400ec0e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10969	option.c	FUNCTION_82	CALL_6
0x400ec12	        0x4883c078	                           add rax, 0x78	     10969	option.c	FUNCTION_82	CALL_6
0x400ec16	          0x4889c7	                            mov rdi, rax	     10969	option.c	FUNCTION_82	CALL_6
0x400ec19	      0xe87f5bffff	            call sym.check_string_option	     10969	option.c	FUNCTION_82	CALL_6
0x400ec1e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10972	option.c	FUNCTION_82	CALL_7
0x400ec22	    0x480508010000	                          add rax, 0x108	     10972	option.c	FUNCTION_82	CALL_7
0x400ec28	          0x4889c7	                            mov rdi, rax	     10972	option.c	FUNCTION_82	CALL_7
0x400ec2b	      0xe86d5bffff	            call sym.check_string_option	     10972	option.c	FUNCTION_82	CALL_7
0x400ec30	        0x488b45f8	                mov rax, qword [rbp - 8]	     10975	option.c	FUNCTION_82	CALL_8
0x400ec34	    0x4805a8000000	                           add rax, 0xa8	     10975	option.c	FUNCTION_82	CALL_8
0x400ec3a	          0x4889c7	                            mov rdi, rax	     10975	option.c	FUNCTION_82	CALL_8
0x400ec3d	      0xe85b5bffff	            call sym.check_string_option	     10975	option.c	FUNCTION_82	CALL_8
0x400ec42	        0x488b45f8	                mov rax, qword [rbp - 8]	     10978	option.c	FUNCTION_82	CALL_9
0x400ec46	    0x4805d0000000	                           add rax, 0xd0	     10978	option.c	FUNCTION_82	CALL_9
0x400ec4c	          0x4889c7	                            mov rdi, rax	     10978	option.c	FUNCTION_82	CALL_9
0x400ec4f	      0xe8495bffff	            call sym.check_string_option	     10978	option.c	FUNCTION_82	CALL_9
0x400ec54	        0x488b45f8	                mov rax, qword [rbp - 8]	     10981	option.c	FUNCTION_82	CALL_10
0x400ec58	    0x4805c8000000	                           add rax, 0xc8	     10981	option.c	FUNCTION_82	CALL_10
0x400ec5e	          0x4889c7	                            mov rdi, rax	     10981	option.c	FUNCTION_82	CALL_10
0x400ec61	      0xe8375bffff	            call sym.check_string_option	     10981	option.c	FUNCTION_82	CALL_10
0x400ec66	        0x488b45f8	                mov rax, qword [rbp - 8]	     10984	option.c	FUNCTION_82	CALL_11
0x400ec6a	    0x4805f0000000	                           add rax, 0xf0	     10984	option.c	FUNCTION_82	CALL_11
0x400ec70	          0x4889c7	                            mov rdi, rax	     10984	option.c	FUNCTION_82	CALL_11
0x400ec73	      0xe8255bffff	            call sym.check_string_option	     10984	option.c	FUNCTION_82	CALL_11
0x400ec78	        0x488b45f8	                mov rax, qword [rbp - 8]	     10987	option.c	FUNCTION_82	CALL_12
0x400ec7c	    0x480510010000	                          add rax, 0x110	     10987	option.c	FUNCTION_82	CALL_12
0x400ec82	          0x4889c7	                            mov rdi, rax	     10987	option.c	FUNCTION_82	CALL_12
0x400ec85	      0xe8135bffff	            call sym.check_string_option	     10987	option.c	FUNCTION_82	CALL_12
0x400ec8a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10988	option.c	FUNCTION_82	CALL_13
0x400ec8e	    0x480518010000	                          add rax, 0x118	     10988	option.c	FUNCTION_82	CALL_13
0x400ec94	          0x4889c7	                            mov rdi, rax	     10988	option.c	FUNCTION_82	CALL_13
0x400ec97	      0xe8015bffff	            call sym.check_string_option	     10988	option.c	FUNCTION_82	CALL_13
0x400ec9c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10991	option.c	FUNCTION_82	CALL_14
0x400eca0	        0x4883c008	                              add rax, 8	     10991	option.c	FUNCTION_82	CALL_14
0x400eca4	          0x4889c7	                            mov rdi, rax	     10991	option.c	FUNCTION_82	CALL_14
0x400eca7	      0xe8f15affff	            call sym.check_string_option	     10991	option.c	FUNCTION_82	CALL_14
0x400ecac	              0x90	                                     nop	     10993	option.c	FUNCTION_82
0x400ecad	              0xc9	                                   leave	     10993	option.c	FUNCTION_82
0x400ecae	              0xc3	                                     ret	     10993	option.c	FUNCTION_82
compatible_set	ELSE,0:IF,1:SWITCH,0:CALL,4:DO,0:WHILE,0:functions,0:FOR,1	46
0x4011230	              0x55	                                push rbp	     12286	option.c	FUNCTION_104
0x4011231	          0x4889e5	                            mov rbp, rsp	     12286	option.c	FUNCTION_104
0x4011234	        0x4883ec10	                           sub rsp, 0x10	     12286	option.c	FUNCTION_104
0x4011238	    0xc745fc000000	                  mov dword [rbp - 4], 0	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x401123f	            0xeb65	                           jmp 0x40112a6	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4011241	          0x8b45fc	                mov eax, dword [rbp - 4]	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011244	            0x4898	                                    cdqe	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011246	        0x48c1e006	                              shl rax, 6	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x401124a	    0x480500000000	                              add rax, 0	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011250	          0x488b00	                    mov rax, qword [rax]	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011253	      0x2500080000	                          and eax, 0x800	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011258	          0x4885c0	                           test rax, rax	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x401125b	            0x740a	                            je 0x4011267	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x401125d	    0x8b0500000000	            mov eax, dword [0x04011263] 	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011263	            0x85c0	                           test eax, eax	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011265	            0x7526	                           jne 0x401128d	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4011267	          0x8b45fc	                mov eax, dword [rbp - 4]	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x401126a	            0x4898	                                    cdqe	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x401126c	        0x48c1e006	                              shl rax, 6	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4011270	    0x480500000000	                              add rax, 0	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4011276	          0x488b00	                    mov rax, qword [rax]	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4011279	      0x2500040000	                          and eax, 0x400	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x401127e	          0x4885c0	                           test rax, rax	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4011281	            0x751f	                           jne 0x40112a2	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4011283	    0x8b0500000000	            mov eax, dword [0x04011289] 	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4011289	            0x85c0	                           test eax, eax	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x401128b	            0x7515	                           jne 0x40112a2	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x401128d	    0x8b1500000000	            mov edx, dword [0x04011293] 	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x4011293	          0x8b45fc	                mov eax, dword [rbp - 4]	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x4011296	      0xbe01000000	                              mov esi, 1	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x401129b	            0x89c7	                            mov edi, eax	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x401129d	      0xe846f5feff	             call sym.set_option_default	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40112a2	        0x8345fc01	                  add dword [rbp - 4], 1	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112a6	          0x8b45fc	                mov eax, dword [rbp - 4]	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112a9	            0x4898	                                    cdqe	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112ab	        0x48c1e006	                              shl rax, 6	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112af	    0x480500000000	                              add rax, 0	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112b5	          0x4889c7	                            mov rdi, rax	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112b8	      0xe8b4baffff	                   call sym.istermoption	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112bd	            0x85c0	                           test eax, eax	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112bf	            0x7480	                            je 0x4011241	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40112c1	      0xe8862effff	                 call sym.didset_options	     12293	option.c	FUNCTION_104	CALL_3
0x40112c6	      0xe83530ffff	                call sym.didset_options2	     12294	option.c	FUNCTION_104	CALL_4
0x40112cb	              0x90	                                     nop	     12295	option.c	FUNCTION_104
0x40112cc	              0xc9	                                   leave	     12295	option.c	FUNCTION_104
0x40112cd	              0xc3	                                     ret	     12295	option.c	FUNCTION_104
do_set	ELSE,45:IF,120:SWITCH,1:CALL,129:DO,0:WHILE,6:functions,0:FOR,4	2051
0x4001632	              0x55	                                push rbp	      4366	option.c	FUNCTION_16
0x4001633	          0x4889e5	                            mov rbp, rsp	      4366	option.c	FUNCTION_16
0x4001636	    0x4881ec300100	                          sub rsp, 0x130	      4366	option.c	FUNCTION_16
0x400163d	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	      4366	option.c	FUNCTION_16
0x4001644	    0x89b5d4feffff	            mov dword [rbp - 0x12c], esi	      4366	option.c	FUNCTION_16
0x400164a	    0x64488b042528	                mov rax, qword fs:[0x28]	      4366	option.c	FUNCTION_16
0x4001653	        0x488945f8	                mov qword [rbp - 8], rax	      4366	option.c	FUNCTION_16
0x4001657	            0x31c0	                            xor eax, eax	      4366	option.c	FUNCTION_16
0x4001659	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      4379	option.c	FUNCTION_16
0x4001664	    0xc785f4feffff	              mov dword [rbp - 0x10c], 0	      4380	option.c	FUNCTION_16
0x400166e	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      4384	option.c	FUNCTION_16
0x4001678	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4387	option.c	FUNCTION_16	IF_1
0x400167f	           0xfb600	                   movzx eax, byte [rax]	      4387	option.c	FUNCTION_16	IF_1
0x4001682	            0x84c0	                             test al, al	      4387	option.c	FUNCTION_16	IF_1
0x4001684	     0xf85c7230000	                           jne 0x4003a51	      4387	option.c	FUNCTION_16	IF_1
0x400168a	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x4001690	            0x89c6	                            mov esi, eax	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x4001692	      0xbf00000000	                              mov edi, 0	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x4001697	      0xe892a70000	                    call sym.showoptions	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x400169c	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4390	option.c	FUNCTION_16	IF_1
0x40016a6	      0xe9be230000	                           jmp 0x4003a69	      4391	option.c	FUNCTION_16	IF_1
0x40016ab	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4396	option.c	FUNCTION_16	WHILE_1
0x40016b6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4397	option.c	FUNCTION_16	WHILE_1
0x40016bd	        0x48894580	             mov qword [rbp - 0x80], rax	      4397	option.c	FUNCTION_16	WHILE_1
0x40016c1	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016c8	      0xba03000000	                              mov edx, 3	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016cd	      0xbe00000000	                              mov esi, 0	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016d2	          0x4889c7	                            mov rdi, rax	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016d5	      0xe800000000	                          call 0x40016da	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016da	            0x85c0	                           test eax, eax	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016dc	     0xf85bb000000	                           jne 0x400179d	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016e2	      0xe800000000	                          call 0x40016e7	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016e7	          0x488b00	                    mov rax, qword [rax]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016ea	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016f1	        0x4883c203	                              add rdx, 3	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016f5	           0xfb612	                   movzx edx, byte [rdx]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016f8	           0xfb6d2	                           movzx edx, dl	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016fb	          0x4801d2	                            add rdx, rdx	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x40016fe	          0x4801d0	                            add rax, rdx	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x4001701	           0xfb700	                   movzx eax, word [rax]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x4001704	           0xfb7c0	                           movzx eax, ax	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x4001707	      0x2500040000	                          and eax, 0x400	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400170c	            0x85c0	                           test eax, eax	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400170e	     0xf8589000000	                           jne 0x400179d	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x4001714	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400171a	          0x83e008	                              and eax, 8	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400171d	            0x85c0	                           test eax, eax	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400171f	            0x757c	                           jne 0x400179d	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x4001721	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x4001728	        0x4883c003	                              add rax, 3	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x400172c	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x4001733	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400173a	           0xfb600	                   movzx eax, byte [rax]	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400173d	            0x3c26	                            cmp al, 0x26	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400173f	            0x753b	                           jne 0x400177c	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x4001741	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x4001748	        0x4883c001	                              add rax, 1	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400174c	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x4001753	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x4001759	          0x83c801	                               or eax, 1	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400175c	            0x89c7	                            mov edi, eax	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400175e	      0xe84df3ffff	            call sym.set_options_default	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x4001763	      0xe8e4290000	                 call sym.didset_options	      4412	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_5
0x4001768	      0xe8932b0000	                call sym.didset_options2	      4413	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_6
0x400176d	      0xbf32000000	                           mov edi, 0x32	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x4001772	      0xe800000000	                          call 0x4001777	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x4001777	      0xe95d210000	                           jmp 0x40038d9	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400177c	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x4001782	            0x89c6	                            mov esi, eax	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x4001784	      0xbf01000000	                              mov edi, 1	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x4001789	      0xe8a0a60000	                    call sym.showoptions	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400178e	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x4001798	      0xe93c210000	                           jmp 0x40038d9	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400179d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017a4	      0xba07000000	                              mov edx, 7	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017a9	      0xbe00000000	                              mov esi, 0	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017ae	          0x4889c7	                            mov rdi, rax	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017b1	      0xe800000000	                          call 0x40017b6	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017b6	            0x85c0	                           test eax, eax	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017b8	            0x7545	                           jne 0x40017ff	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017ba	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017c0	          0x83e008	                              and eax, 8	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017c3	            0x85c0	                           test eax, eax	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017c5	            0x7538	                           jne 0x40017ff	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x40017c7	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x40017cd	            0x89c6	                            mov esi, eax	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x40017cf	      0xbf02000000	                              mov edi, 2	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x40017d4	      0xe855a60000	                    call sym.showoptions	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x40017d9	      0xe800000000	                          call 0x40017de	      4425	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_11
0x40017de	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4426	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x40017e8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x40017ef	        0x4883c007	                              add rax, 7	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x40017f3	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x40017fa	      0xe9da200000	                           jmp 0x40038d9	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x40017ff	    0xc785e8feffff	              mov dword [rbp - 0x118], 1	      4431	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001809	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001810	      0xba02000000	                              mov edx, 2	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001815	      0xbe00000000	                              mov esi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400181a	          0x4889c7	                            mov rdi, rax	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400181d	      0xe800000000	                          call 0x4001822	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001822	            0x85c0	                           test eax, eax	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001824	            0x753b	                           jne 0x4001861	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001826	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400182d	      0xba06000000	                              mov edx, 6	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001832	      0xbe00000000	                              mov esi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001837	          0x4889c7	                            mov rdi, rax	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400183a	      0xe800000000	                          call 0x400183f	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400183f	            0x85c0	                           test eax, eax	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001841	            0x741e	                            je 0x4001861	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x4001843	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	      4434	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400184d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x4001854	        0x4883c002	                              add rax, 2	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x4001858	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400185f	            0xeb39	                           jmp 0x400189a	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x4001861	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x4001868	      0xba03000000	                              mov edx, 3	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400186d	      0xbe00000000	                              mov esi, 0	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x4001872	          0x4889c7	                            mov rdi, rax	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x4001875	      0xe800000000	                          call 0x400187a	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400187a	            0x85c0	                           test eax, eax	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400187c	            0x751c	                           jne 0x400189a	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400187e	    0xc785e8feffff	              mov dword [rbp - 0x118], 2	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x4001888	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400188f	        0x4883c003	                              add rax, 3	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x4001893	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400189a	    0xc785f0feffff	              mov dword [rbp - 0x110], 0	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x40018a4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40018ab	           0xfb600	                   movzx eax, byte [rax]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40018ae	            0x3c3c	                            cmp al, 0x3c	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40018b0	     0xf8571010000	                           jne 0x4001a27	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40018b6	    0xc78514ffffff	               mov dword [rbp - 0xec], 0	      4447	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40018c0	    0xc785e4feffff	    mov dword [rbp - 0x11c], 0xffffffff 	      4448	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40018ca	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018d1	        0x4883c001	                              add rax, 1	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018d5	           0xfb600	                   movzx eax, byte [rax]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018d8	            0x3c74	                            cmp al, 0x74	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018da	            0x7542	                           jne 0x400191e	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018dc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018e3	        0x4883c002	                              add rax, 2	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018e7	           0xfb600	                   movzx eax, byte [rax]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018ea	            0x3c5f	                            cmp al, 0x5f	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018ec	            0x7530	                           jne 0x400191e	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018ee	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018f5	        0x4883c003	                              add rax, 3	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018f9	           0xfb600	                   movzx eax, byte [rax]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018fc	            0x84c0	                             test al, al	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x40018fe	            0x741e	                            je 0x400191e	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x4001900	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x4001907	        0x4883c004	                              add rax, 4	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400190b	           0xfb600	                   movzx eax, byte [rax]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400190e	            0x84c0	                             test al, al	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x4001910	            0x740c	                            je 0x400191e	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x4001912	    0xc785ecfeffff	              mov dword [rbp - 0x114], 5	      4451	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400191c	            0xeb45	                           jmp 0x4001963	      4451	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400191e	    0xc785ecfeffff	              mov dword [rbp - 0x114], 1	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5
0x4001928	            0xeb07	                           jmp 0x4001931	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400192a	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4456	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001931	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001938	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400193e	            0x4898	                                    cdqe	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001940	          0x4801d0	                            add rax, rdx	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001943	           0xfb600	                   movzx eax, byte [rax]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001946	            0x84c0	                             test al, al	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001948	            0x7419	                            je 0x4001963	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400194a	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001951	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001957	            0x4898	                                    cdqe	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001959	          0x4801d0	                            add rax, rdx	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400195c	           0xfb600	                   movzx eax, byte [rax]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400195f	            0x3c3e	                            cmp al, 0x3e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001961	            0x75c7	                           jne 0x400192a	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x4001963	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400196a	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x4001970	            0x4898	                                    cdqe	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x4001972	          0x4801d0	                            add rax, rdx	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x4001975	           0xfb600	                   movzx eax, byte [rax]	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x4001978	            0x3c3e	                            cmp al, 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400197a	            0x7410	                            je 0x400198c	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400197c	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x4001987	      0xe99a1e0000	                           jmp 0x4003826	      4461	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400198c	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x4001993	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x4001999	            0x4898	                                    cdqe	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400199b	          0x4801d0	                            add rax, rdx	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400199e	          0xc60000	                       mov byte [rax], 0	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019a1	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019a8	        0x4883c001	                              add rax, 1	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019ac	           0xfb600	                   movzx eax, byte [rax]	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019af	            0x3c74	                            cmp al, 0x74	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019b1	            0x752b	                           jne 0x40019de	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019b3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019ba	        0x4883c002	                              add rax, 2	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019be	           0xfb600	                   movzx eax, byte [rax]	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019c1	            0x3c5f	                            cmp al, 0x5f	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019c3	            0x7519	                           jne 0x40019de	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x40019c5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x40019cc	        0x4883c001	                              add rax, 1	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x40019d0	          0x4889c7	                            mov rdi, rax	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x40019d3	      0xe8cc9b0000	                     call sym.findoption	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x40019d8	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x40019de	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019e5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019eb	          0x8d5001	                      lea edx, [rax + 1]	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019ee	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019f4	            0x4898	                                    cdqe	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019f6	          0x4801c8	                            add rax, rcx	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019f9	          0xc6003e	                    mov byte [rax], 0x3e	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x40019fc	    0x83bde4feffff	cmp dword [rbp - 0x11c], 0xffffffffffffffff	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x4001a03	     0xf857b010000	                           jne 0x4001b84	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x4001a09	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x4001a10	        0x4883c001	                              add rax, 1	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x4001a14	          0x4889c7	                            mov rdi, rax	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x4001a17	      0xe83aa30000	                call sym.find_key_option	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x4001a1c	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x4001a22	      0xe95d010000	                           jmp 0x4001b84	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x4001a27	    0xc785ecfeffff	              mov dword [rbp - 0x114], 0	      4472	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001a31	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a38	           0xfb600	                   movzx eax, byte [rax]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a3b	            0x3c74	                            cmp al, 0x74	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a3d	            0x754c	                           jne 0x4001a8b	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a3f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a46	        0x4883c001	                              add rax, 1	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a4a	           0xfb600	                   movzx eax, byte [rax]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a4d	            0x3c5f	                            cmp al, 0x5f	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a4f	            0x753a	                           jne 0x4001a8b	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a51	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a58	        0x4883c002	                              add rax, 2	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a5c	           0xfb600	                   movzx eax, byte [rax]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a5f	            0x84c0	                             test al, al	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a61	            0x7428	                            je 0x4001a8b	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a63	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a6a	        0x4883c003	                              add rax, 3	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a6e	           0xfb600	                   movzx eax, byte [rax]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a71	            0x84c0	                             test al, al	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a73	            0x7416	                            je 0x4001a8b	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a75	    0xc785ecfeffff	              mov dword [rbp - 0x114], 4	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a7f	      0xe980000000	                           jmp 0x4001b04	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x4001a84	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4480	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3
0x4001a8b	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001a92	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001a98	            0x4898	                                    cdqe	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001a9a	          0x4801d0	                            add rax, rdx	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001a9d	           0xfb600	                   movzx eax, byte [rax]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001aa0	           0xfb6c0	                           movzx eax, al	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001aa3	          0x83e841	                           sub eax, 0x41	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001aa6	          0x83f819	                           cmp eax, 0x19	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001aa9	            0x76d9	                           jbe 0x4001a84	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001aab	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ab2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ab8	            0x4898	                                    cdqe	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001aba	          0x4801d0	                            add rax, rdx	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001abd	           0xfb600	                   movzx eax, byte [rax]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ac0	           0xfb6c0	                           movzx eax, al	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ac3	          0x83e861	                           sub eax, 0x61	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ac6	          0x83f819	                           cmp eax, 0x19	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ac9	            0x76b9	                           jbe 0x4001a84	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001acb	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ad2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ad8	            0x4898	                                    cdqe	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ada	          0x4801d0	                            add rax, rdx	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001add	           0xfb600	                   movzx eax, byte [rax]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ae0	           0xfb6c0	                           movzx eax, al	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ae3	          0x83e830	                           sub eax, 0x30	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ae6	          0x83f809	                              cmp eax, 9	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001ae9	            0x7699	                           jbe 0x4001a84	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001aeb	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001af2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001af8	            0x4898	                                    cdqe	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001afa	          0x4801d0	                            add rax, rdx	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001afd	           0xfb600	                   movzx eax, byte [rax]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001b00	            0x3c5f	                            cmp al, 0x5f	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001b02	            0x7480	                            je 0x4001a84	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x4001b04	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b0b	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b11	            0x4898	                                    cdqe	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b13	          0x4801d0	                            add rax, rdx	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b16	           0xfb600	                   movzx eax, byte [rax]	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b19	           0xfb6c0	                           movzx eax, al	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b1c	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b22	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b29	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b2f	            0x4898	                                    cdqe	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b31	          0x4801d0	                            add rax, rdx	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b34	          0xc60000	                       mov byte [rax], 0	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b37	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x4001b3e	          0x4889c7	                            mov rdi, rax	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x4001b41	      0xe85e9a0000	                     call sym.findoption	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x4001b46	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x4001b4c	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b53	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b59	            0x4898	                                    cdqe	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b5b	          0x4801d0	                            add rax, rdx	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b5e	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b64	            0x8810	                      mov byte [rax], dl	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x4001b66	    0x83bde4feffff	cmp dword [rbp - 0x11c], 0xffffffffffffffff	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x4001b6d	            0x7515	                           jne 0x4001b84	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x4001b6f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x4001b76	          0x4889c7	                            mov rdi, rax	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x4001b79	      0xe8d8a10000	                call sym.find_key_option	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x4001b7e	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x4001b84	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001b8b	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001b91	            0x4898	                                    cdqe	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001b93	          0x4801d0	                            add rax, rdx	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001b96	           0xfb600	                   movzx eax, byte [rax]	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001b99	           0xfb6c0	                           movzx eax, al	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001b9c	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001ba2	            0xeb07	                           jmp 0x4001bab	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001ba4	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4494	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4
0x4001bab	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bb2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bb8	            0x4898	                                    cdqe	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bba	          0x4801d0	                            add rax, rdx	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bbd	           0xfb600	                   movzx eax, byte [rax]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bc0	            0x3c20	                            cmp al, 0x20	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bc2	            0x74e0	                            je 0x4001ba4	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bc4	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bcb	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bd1	            0x4898	                                    cdqe	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bd3	          0x4801d0	                            add rax, rdx	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bd6	           0xfb600	                   movzx eax, byte [rax]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bd9	            0x3c09	                               cmp al, 9	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bdb	            0x74c7	                            je 0x4001ba4	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x4001bdd	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001be7	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001bf1	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001bfb	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c02	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c08	            0x4898	                                    cdqe	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c0a	          0x4801d0	                            add rax, rdx	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c0d	           0xfb600	                   movzx eax, byte [rax]	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c10	            0x84c0	                             test al, al	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c12	     0xf84a4000000	                            je 0x4001cbc	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c18	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c1f	    0x8b95ecfeffff	            mov edx, dword [rbp - 0x114]	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c25	          0x4863d2	                         movsxd rdx, edx	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c28	        0x4883c201	                              add rdx, 1	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c2c	          0x4801d0	                            add rax, rdx	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c2f	           0xfb600	                   movzx eax, byte [rax]	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c32	            0x3c3d	                            cmp al, 0x3d	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c34	     0xf8582000000	                           jne 0x4001cbc	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x4001c3a	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c41	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c47	            0x4898	                                    cdqe	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c49	          0x4801d0	                            add rax, rdx	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c4c	           0xfb600	                   movzx eax, byte [rax]	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c4f	            0x3c2b	                            cmp al, 0x2b	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c51	            0x7513	                           jne 0x4001c66	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c53	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c5d	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4504	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c64	            0xeb56	                           jmp 0x4001cbc	      4504	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x4001c66	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c6d	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c73	            0x4898	                                    cdqe	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c75	          0x4801d0	                            add rax, rdx	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c78	           0xfb600	                   movzx eax, byte [rax]	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c7b	            0x3c5e	                            cmp al, 0x5e	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c7d	            0x7513	                           jne 0x4001c92	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c7f	    0xc785fcfeffff	              mov dword [rbp - 0x104], 1	      4508	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c89	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4509	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c90	            0xeb2a	                           jmp 0x4001cbc	      4509	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x4001c92	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001c99	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001c9f	            0x4898	                                    cdqe	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001ca1	          0x4801d0	                            add rax, rdx	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001ca4	           0xfb600	                   movzx eax, byte [rax]	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001ca7	            0x3c2d	                            cmp al, 0x2d	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001ca9	            0x7511	                           jne 0x4001cbc	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001cab	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	      4513	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001cb5	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4514	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x4001cbc	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001cc3	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001cc9	            0x4898	                                    cdqe	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001ccb	          0x4801d0	                            add rax, rdx	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001cce	           0xfb600	                   movzx eax, byte [rax]	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001cd1	           0xfb6c0	                           movzx eax, al	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001cd4	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4001cda	    0x83bde4feffff	cmp dword [rbp - 0x11c], 0xffffffffffffffff	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x4001ce1	            0x7519	                           jne 0x4001cfc	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x4001ce3	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x4001cea	            0x7510	                           jne 0x4001cfc	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x4001cec	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4521	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18	CALL_21
0x4001cf7	      0xe92a1b0000	                           jmp 0x4003826	      4522	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x4001cfc	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d03	     0xf88b7000000	                            js 0x4001dc0	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d09	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d0f	            0x4898	                                    cdqe	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d11	        0x48c1e006	                              shl rax, 6	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d15	    0x480500000000	                              add rax, 0	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d1b	          0x488b00	                    mov rax, qword [rax]	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d1e	          0x4885c0	                           test rax, rax	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d21	            0x7555	                           jne 0x4001d78	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d23	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x4001d29	            0x89c6	                            mov esi, eax	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x4001d2b	      0xbf00000000	                              mov edi, 0	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x4001d30	      0xe800000000	                          call 0x4001d35	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x4001d35	          0x4885c0	                           test rax, rax	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x4001d38	     0xf85e11a0000	                           jne 0x400381f	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x4001d3e	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d44	            0x4898	                                    cdqe	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d46	        0x48c1e006	                              shl rax, 6	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d4a	    0x480500000000	                              add rax, 0	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d50	          0x488b00	                    mov rax, qword [rax]	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d53	          0x83e001	                              and eax, 1	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d56	          0x4885c0	                           test rax, rax	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d59	            0x740d	                            je 0x4001d68	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d5b	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3f 	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d62	     0xf85b71a0000	                           jne 0x400381f	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x4001d68	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x4001d73	      0xe9a71a0000	                           jmp 0x400381f	      4535	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4001d78	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d7e	            0x4898	                                    cdqe	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d80	        0x48c1e006	                              shl rax, 6	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d84	    0x480500000000	                              add rax, 0	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d8a	          0x488b00	                    mov rax, qword [rax]	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d8d	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x4001d94	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001d9a	            0x4898	                                    cdqe	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001d9c	        0x48c1e006	                              shl rax, 6	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001da0	    0x488d90000000	                          lea rdx, [rax]	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001da7	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001dad	            0x89c6	                            mov esi, eax	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001daf	          0x4889d7	                            mov rdi, rdx	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001db2	      0xe87fb40000	                 call sym.get_varp_scope	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001db7	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001dbe	            0xeb3c	                           jmp 0x4001dfc	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x4001dc0	    0x48c78530ffff	               mov qword [rbp - 0xd0], 4	      4543	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10
0x4001dcb	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x4001dd2	            0x791b	                           jns 0x4001def	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x4001dd4	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x4001dda	            0xf7d8	                                 neg eax	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x4001ddc	          0x884590	               mov byte [rbp - 0x70], al	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x4001ddf	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x4001de5	            0xf7d8	                                 neg eax	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x4001de7	          0xc1e808	                              shr eax, 8	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x4001dea	          0x884591	               mov byte [rbp - 0x6f], al	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x4001ded	            0xeb0d	                           jmp 0x4001dfc	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x4001def	        0xc64590f2	            mov byte [rbp - 0x70], 0xf2 	      4551	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x4001df3	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      4552	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x4001df9	          0x884591	               mov byte [rbp - 0x6f], al	      4552	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x4001dfc	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e02	          0x83e010	                           and eax, 0x10	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e05	            0x85c0	                           test eax, eax	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e07	            0x742c	                            je 0x4001e35	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e09	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e10	     0xf88101a0000	                            js 0x4003826	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e16	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e1c	            0x4898	                                    cdqe	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e1e	        0x48c1e006	                              shl rax, 6	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e22	    0x480500000000	                              add rax, 0	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e28	          0x488b00	                    mov rax, qword [rax]	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e2b	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e2f	     0xf85f1190000	                           jne 0x4003826	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x4001e35	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e3b	          0x83e020	                           and eax, 0x20	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e3e	            0x85c0	                           test eax, eax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e40	            0x7428	                            je 0x4001e6a	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e42	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e49	            0x781f	                            js 0x4001e6a	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e4b	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e51	            0x4898	                                    cdqe	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e53	        0x48c1e006	                              shl rax, 6	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e57	    0x480500000000	                              add rax, 0	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e5d	          0x488b00	                    mov rax, qword [rax]	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e60	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e64	     0xf84b8190000	                            je 0x4003822	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4001e6a	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x4001e70	          0x83e008	                              and eax, 8	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x4001e73	            0x85c0	                           test eax, eax	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x4001e75	            0x747f	                            je 0x4001ef6	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x4001e77	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x4001e7e	      0x2500000802	                      and eax, 0x2080000	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x4001e83	          0x4885c0	                           test rax, rax	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x4001e86	            0x7416	                            je 0x4001e9e	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x4001e88	      0xbf00000000	                              mov edi, 0	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x4001e8d	      0xe800000000	                          call 0x4001e92	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x4001e92	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x4001e99	      0xe988190000	                           jmp 0x4003826	      4573	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x4001e9e	    0x488b05000000	            mov rax, qword [0x04001ea5] 	      4579	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ea5	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4579	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001eab	            0x85c0	                           test eax, eax	      4579	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ead	            0x7447	                            je 0x4001ef6	      4579	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001eaf	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001eb6	            0x783e	                            js 0x4001ef6	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001eb8	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ebe	            0x4898	                                    cdqe	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ec0	        0x48c1e006	                              shl rax, 6	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ec4	    0x480500000000	                              add rax, 0	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001eca	            0x8b00	                    mov eax, dword [rax]	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ecc	      0x3d0e200000	                         cmp eax, 0x200e	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ed1	     0xf844f190000	                            je 0x4003826	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ed7	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4585	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001edd	            0x4898	                                    cdqe	      4585	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001edf	        0x48c1e006	                              shl rax, 6	      4585	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ee3	    0x480500000000	                              add rax, 0	      4585	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ee9	            0x8b00	                    mov eax, dword [rax]	      4585	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001eeb	      0x3d24200000	                         cmp eax, 0x2024	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ef0	     0xf8430190000	                            je 0x4003826	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x4001ef6	    0x8b0500000000	            mov eax, dword [0x04001efc] 	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001efc	            0x85c0	                           test eax, eax	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001efe	            0x7427	                            je 0x4001f27	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001f00	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001f07	      0x2500000800	                        and eax, 0x80000	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001f0c	          0x4885c0	                           test rax, rax	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001f0f	            0x7416	                            je 0x4001f27	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001f11	      0xbf00000000	                              mov edi, 0	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x4001f16	      0xe800000000	                          call 0x4001f1b	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x4001f1b	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x4001f22	      0xe9ff180000	                           jmp 0x4003826	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4001f27	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x4001f2d	            0x89c6	                            mov esi, eax	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x4001f2f	      0xbf00000000	                              mov edi, 0	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x4001f34	      0xe800000000	                          call 0x4001f39	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x4001f39	          0x4885c0	                           test rax, rax	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x4001f3c	     0xf84fb000000	                            je 0x400203d	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x4001f42	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x4001f49	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x4001f4f	            0x4898	                                    cdqe	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x4001f51	          0x4801d0	                            add rax, rdx	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x4001f54	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x4001f5b	    0x8b0500000000	            mov eax, dword [0x04001f61] 	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x4001f61	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x4001f67	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f6e	            0x7570	                           jne 0x4001fe0	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f70	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f77	        0x4883c001	                              add rax, 1	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f7b	           0xfb600	                   movzx eax, byte [rax]	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f7e	            0x3c76	                            cmp al, 0x76	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f80	            0x755e	                           jne 0x4001fe0	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f82	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f89	        0x4883c002	                              add rax, 2	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f8d	           0xfb600	                   movzx eax, byte [rax]	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f90	            0x3c69	                            cmp al, 0x69	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f92	            0x754c	                           jne 0x4001fe0	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x4001f94	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001f9b	        0x4883c003	                              add rax, 3	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001f9f	           0xfb600	                   movzx eax, byte [rax]	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fa2	            0x3c6d	                            cmp al, 0x6d	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fa4	            0x751e	                           jne 0x4001fc4	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fa6	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      4607	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fb0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fb7	        0x4883c003	                              add rax, 3	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fbb	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fc2	            0xeb1c	                           jmp 0x4001fe0	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x4001fc4	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	      4612	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x4001fce	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x4001fd5	        0x4883c002	                              add rax, 2	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x4001fd9	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x4001fe0	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x4001fe6	            0x89c6	                            mov esi, eax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x4001fe8	      0xbf00000000	                              mov edi, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x4001fed	      0xe800000000	                          call 0x4001ff2	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x4001ff2	          0x4885c0	                           test rax, rax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x4001ff5	            0x7446	                            je 0x400203d	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x4001ff7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4001ffe	        0x4883c001	                              add rax, 1	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002002	           0xfb600	                   movzx eax, byte [rax]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002005	            0x84c0	                             test al, al	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002007	            0x7434	                            je 0x400203d	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002009	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002010	        0x4883c001	                              add rax, 1	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002014	           0xfb600	                   movzx eax, byte [rax]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002017	            0x3c20	                            cmp al, 0x20	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002019	            0x7422	                            je 0x400203d	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400201b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002022	        0x4883c001	                              add rax, 1	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002026	           0xfb600	                   movzx eax, byte [rax]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x4002029	            0x3c09	                               cmp al, 9	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400202b	            0x7410	                            je 0x400203d	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400202d	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x4002038	      0xe9e9170000	                           jmp 0x4003826	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x400203d	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3f 	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4002044	            0x743b	                            je 0x4002081	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4002046	    0x83bde8feffff	              cmp dword [rbp - 0x118], 1	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400204d	     0xf8508020000	                           jne 0x400225b	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4002053	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x4002059	            0x89c6	                            mov esi, eax	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400205b	      0xbf00000000	                              mov edi, 0	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x4002060	      0xe800000000	                          call 0x4002065	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x4002065	          0x4885c0	                           test rax, rax	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x4002068	     0xf85ed010000	                           jne 0x400225b	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400206e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4002075	          0x83e001	                              and eax, 1	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4002078	          0x4885c0	                           test rax, rax	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400207b	     0xf85da010000	                           jne 0x400225b	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4002081	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x4002088	            0x740c	                            je 0x4002096	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x400208a	      0xbf0a000000	                            mov edi, 0xa	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x400208f	      0xe800000000	                          call 0x4002094	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x4002094	            0xeb14	                           jmp 0x40020aa	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x4002096	      0xbf01000000	                              mov edi, 1	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x400209b	      0xe800000000	                          call 0x40020a0	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x40020a0	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4641	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13
0x40020aa	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x40020b1	     0xf8821010000	                            js 0x40021d8	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x40020b7	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020bd	            0x4898	                                    cdqe	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020bf	        0x48c1e006	                              shl rax, 6	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020c3	    0x488d90000000	                          lea rdx, [rax]	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020ca	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020d0	            0x89c6	                            mov esi, eax	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020d2	          0x4889d7	                            mov rdi, rdx	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020d5	      0xe83ca10000	                     call sym.showoneopt	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x40020da	    0x488b05000000	            mov rax, qword [0x040020e1] 	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x40020e1	          0x4885c0	                           test rax, rax	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x40020e4	     0xf8e2d010000	                           jle 0x4002217	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x40020ea	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x40020f0	            0x4898	                                    cdqe	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x40020f2	        0x48c1e006	                              shl rax, 6	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x40020f6	    0x480500000000	                              add rax, 0	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x40020fc	          0x488b00	                    mov rax, qword [rax]	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x40020ff	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x4002106	            0x7520	                           jne 0x4002128	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x4002108	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400210e	            0x4898	                                    cdqe	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x4002110	        0x48c1e006	                              shl rax, 6	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x4002114	    0x480500000000	                              add rax, 0	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400211a	            0x8b00	                    mov eax, dword [rax]	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400211c	            0x89c7	                            mov edi, eax	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400211e	      0xe800000000	                          call 0x4002123	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x4002123	      0xe9ef000000	                           jmp 0x4002217	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x4002128	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400212e	            0x4898	                                    cdqe	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002130	        0x48c1e006	                              shl rax, 6	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002134	    0x480500000000	                              add rax, 0	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400213a	            0x8b00	                    mov eax, dword [rax]	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400213c	      0x2500200000	                         and eax, 0x2000	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002141	            0x85c0	                           test eax, eax	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002143	            0x743c	                            je 0x4002181	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002145	    0x488b05000000	            mov rax, qword [0x0400214c] 	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400214c	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4654	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002152	          0x4863d2	                         movsxd rdx, edx	      4654	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002155	        0x48c1e206	                              shl rdx, 6	      4654	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002159	    0x4881c2000000	                              add rdx, 0	      4654	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002160	            0x8b12	                    mov edx, dword [rdx]	      4654	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002162	    0x81e2ff0f0000	                          and edx, 0xfff	      4654	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4002168	          0x4863d2	                         movsxd rdx, edx	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400216b	    0x4881c2b40000	                           add rdx, 0xb4	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x4002172	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x4002175	            0x89c7	                            mov edi, eax	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x4002177	      0xe800000000	                          call 0x400217c	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400217c	      0xe996000000	                           jmp 0x4002217	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x4002181	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x4002187	            0x4898	                                    cdqe	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x4002189	        0x48c1e006	                              shl rax, 6	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400218d	    0x480500000000	                              add rax, 0	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x4002193	            0x8b00	                    mov eax, dword [rax]	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x4002195	      0x2500400000	                         and eax, 0x4000	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400219a	            0x85c0	                           test eax, eax	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400219c	            0x7479	                            je 0x4002217	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400219e	    0x488b05000000	            mov rax, qword [0x040021a5] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40021a5	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x40021ab	          0x4863d2	                         movsxd rdx, edx	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x40021ae	        0x48c1e206	                              shl rdx, 6	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x40021b2	    0x4881c2000000	                              add rdx, 0	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x40021b9	            0x8b12	                    mov edx, dword [rdx]	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x40021bb	    0x81e2ff0f0000	                          and edx, 0xfff	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x40021c1	          0x4863d2	                         movsxd rdx, edx	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40021c4	    0x4881c2a80400	                          add rdx, 0x4a8	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40021cb	        0x8b44900c	     mov eax, dword [rax + rdx*4 + 0xc] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40021cf	            0x89c7	                            mov edi, eax	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40021d1	      0xe800000000	                          call 0x40021d6	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40021d6	            0xeb3f	                           jmp 0x4002217	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40021d8	        0x488d4590	                   lea rax, [rbp - 0x70]	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x40021dc	          0x4889c7	                            mov rdi, rax	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x40021df	      0xe800000000	                          call 0x40021e4	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x40021e4	        0x48894588	             mov qword [rbp - 0x78], rax	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x40021e8	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x40021ed	            0x7510	                           jne 0x40021ff	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x40021ef	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x40021fa	      0xe927160000	                           jmp 0x4003826	      4669	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x40021ff	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x4002203	        0x488d4590	                   lea rax, [rbp - 0x70]	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x4002207	      0xba01000000	                              mov edx, 1	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400220c	          0x4889ce	                            mov rsi, rcx	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400220f	          0x4889c7	                            mov rdi, rax	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x4002212	      0xe800000000	                          call 0x4002217	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x4002217	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3f 	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400221e	     0xf8401160000	                            je 0x4003825	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x4002224	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400222b	     0xf84f4150000	                            je 0x4003825	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x4002231	    0x83bd18ffffff	           cmp dword [rbp - 0xe8], 0x20 	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x4002238	     0xf84e7150000	                            je 0x4003825	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400223e	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 9	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x4002245	     0xf84da150000	                            je 0x4003825	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400224b	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4676	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x4002256	      0xe9ca150000	                           jmp 0x4003825	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400225b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x4002262	          0x83e001	                              and eax, 1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x4002265	          0x4885c0	                           test rax, rax	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x4002268	     0xf8491010000	                            je 0x40023ff	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400226e	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3d 	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x4002275	            0x7409	                            je 0x4002280	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x4002277	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3a 	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400227e	            0x7510	                           jne 0x4002290	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x4002280	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4684	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400228b	      0xe996150000	                           jmp 0x4003826	      4685	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x4002290	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x21 	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x4002297	            0x751a	                           jne 0x40022b3	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x4002299	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x40022a0	            0x8b00	                    mov eax, dword [rax]	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x40022a2	          0x83f001	                              xor eax, 1	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x40022a5	            0x4898	                                    cdqe	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x40022a7	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x40022ae	      0xe919010000	                           jmp 0x40023cc	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x40022b3	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022ba	            0x7552	                           jne 0x400230e	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022bc	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4697	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022c3	      0x2500040000	                          and eax, 0x400	      4697	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022c8	          0x4885c0	                           test rax, rax	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022cb	            0x7510	                           jne 0x40022dd	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022cd	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022d4	            0x7507	                           jne 0x40022dd	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022d6	      0xb801000000	                              mov eax, 1	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022db	            0xeb05	                           jmp 0x40022e2	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022dd	      0xb800000000	                              mov eax, 0	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022e2	            0x4898	                                    cdqe	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022e4	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022ea	          0x4863d2	                         movsxd rdx, edx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022ed	        0x48c1e203	                              shl rdx, 3	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022f1	          0x4801d0	                            add rax, rdx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022f4	        0x4883c004	                              add rax, 4	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40022f8	    0x488b04c50000	                  mov rax, qword [rax*8]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4002300	            0x4898	                                    cdqe	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4002302	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4002309	      0xe9be000000	                           jmp 0x40023cc	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400230e	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3c 	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x4002315	            0x755b	                           jne 0x4002372	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x4002317	    0x488b05000000	            mov rax, qword [0x0400231e] 	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400231e	    0x480518160000	                         add rax, 0x1618	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4002324	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400232b	            0x7519	                           jne 0x4002346	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400232d	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 4	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4002334	            0x7510	                           jne 0x4002346	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4002336	    0x48c78520ffff	mov qword [rbp - 0xe0], 0xffffffffffffffff	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4002341	      0xe986000000	                           jmp 0x40023cc	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4002346	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400234c	            0x4898	                                    cdqe	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400234e	        0x48c1e006	                              shl rax, 6	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002352	    0x480500000000	                              add rax, 0	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002358	      0xbe02000000	                              mov esi, 2	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400235d	          0x4889c7	                            mov rdi, rax	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002360	      0xe8d1ae0000	                 call sym.get_varp_scope	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002365	            0x8b00	                    mov eax, dword [rax]	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002367	            0x4898	                                    cdqe	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002369	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002370	            0xeb5a	                           jmp 0x40023cc	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4002372	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x4002379	            0x7422	                            je 0x400239d	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400237b	    0x83bd18ffffff	           cmp dword [rbp - 0xe8], 0x20 	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x4002382	            0x7419	                            je 0x400239d	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x4002384	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 9	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400238b	            0x7410	                            je 0x400239d	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400238d	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x4002398	      0xe989140000	                           jmp 0x4003826	      4718	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400239d	    0x83bde8feffff	              cmp dword [rbp - 0x118], 2	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023a4	            0x7517	                           jne 0x40023bd	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023a6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023ad	            0x8b00	                    mov eax, dword [rax]	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023af	          0x83f001	                              xor eax, 1	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023b2	            0x4898	                                    cdqe	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023b4	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023bb	            0xeb0f	                           jmp 0x40023cc	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x40023bd	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x40023c3	            0x4898	                                    cdqe	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x40023c5	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x40023cc	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023d3	            0x89c7	                            mov edi, eax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023d5	    0x8b95d4feffff	            mov edx, dword [rbp - 0x12c]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023db	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023e2	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023e8	            0x89d1	                            mov ecx, edx	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023ea	            0x89fa	                            mov edx, edi	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023ec	            0x89c7	                            mov edi, eax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023ee	      0xe8ed6e0000	                call sym.set_bool_option	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023f3	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023fa	      0xe9d9130000	                           jmp 0x40037d8	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x40023ff	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x4002405	            0x89c6	                            mov esi, eax	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x4002407	      0xbf00000000	                              mov edi, 0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400240c	      0xe800000000	                          call 0x4002411	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x4002411	          0x4885c0	                           test rax, rax	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x4002414	            0x7409	                            je 0x400241f	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x4002416	    0x83bde8feffff	              cmp dword [rbp - 0x118], 1	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400241d	            0x7410	                            je 0x400242f	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400241f	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400242a	      0xe9f7130000	                           jmp 0x4003826	      4735	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400242f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x4002436	          0x83e002	                              and eax, 2	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x4002439	          0x4885c0	                           test rax, rax	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400243c	     0xf8430030000	                            je 0x4002772	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x4002442	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x4002449	        0x4883c001	                              add rax, 1	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400244d	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x4002454	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400245b	            0x7550	                           jne 0x40024ad	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400245d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4752	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002464	      0x2500040000	                          and eax, 0x400	      4752	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002469	          0x4885c0	                           test rax, rax	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400246c	            0x7510	                           jne 0x400247e	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400246e	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002475	            0x7507	                           jne 0x400247e	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002477	      0xb801000000	                              mov eax, 1	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400247c	            0xeb05	                           jmp 0x4002483	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400247e	      0xb800000000	                              mov eax, 0	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002483	            0x4898	                                    cdqe	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002485	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400248b	          0x4863d2	                         movsxd rdx, edx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400248e	        0x48c1e203	                              shl rdx, 3	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002492	          0x4801d0	                            add rax, rdx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002495	        0x4883c004	                              add rax, 4	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4002499	    0x488b04c50000	                  mov rax, qword [rax*8]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x40024a1	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x40024a8	      0xe91b020000	                           jmp 0x40026c8	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x40024ad	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3c 	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x40024b4	            0x755d	                           jne 0x4002513	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x40024b6	    0x488b05000000	            mov rax, qword [0x040024bd] 	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024bd	    0x480548160000	                         add rax, 0x1648	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024c3	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024ca	            0x7519	                           jne 0x40024e5	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024cc	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 4	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024d3	            0x7510	                           jne 0x40024e5	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024d5	    0x48c78520ffff	mov qword [rbp - 0xe0], 0xfffffffffffe1dc0	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024e0	      0xe9e3010000	                           jmp 0x40026c8	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x40024e5	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x40024eb	            0x4898	                                    cdqe	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x40024ed	        0x48c1e006	                              shl rax, 6	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x40024f1	    0x480500000000	                              add rax, 0	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x40024f7	      0xbe02000000	                              mov esi, 2	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x40024fc	          0x4889c7	                            mov rdi, rax	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x40024ff	      0xe832ad0000	                 call sym.get_varp_scope	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4002504	          0x488b00	                    mov rax, qword [rax]	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4002507	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400250e	      0xe9b5010000	                           jmp 0x40026c8	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4002513	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4765	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400251e	            0x7411	                            je 0x4002531	      4765	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002520	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400252b	     0xf85c7000000	                           jne 0x40025f8	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002531	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002538	           0xfb600	                   movzx eax, byte [rax]	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400253b	            0x3c3c	                            cmp al, 0x3c	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400253d	            0x746b	                            je 0x40025aa	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400253f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002546	           0xfb600	                   movzx eax, byte [rax]	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002549	            0x3c5e	                            cmp al, 0x5e	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400254b	            0x745d	                            je 0x40025aa	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400254d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002554	           0xfb600	                   movzx eax, byte [rax]	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002557	            0x84c0	                             test al, al	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4002559	     0xf8499000000	                            je 0x40025f8	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400255f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002566	        0x4883c001	                              add rax, 1	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400256a	           0xfb600	                   movzx eax, byte [rax]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400256d	            0x84c0	                             test al, al	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400256f	            0x7424	                            je 0x4002595	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002571	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002578	        0x4883c001	                              add rax, 1	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400257c	           0xfb600	                   movzx eax, byte [rax]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400257f	            0x3c20	                            cmp al, 0x20	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002581	            0x7412	                            je 0x4002595	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002583	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400258a	        0x4883c001	                              add rax, 1	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400258e	           0xfb600	                   movzx eax, byte [rax]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002591	            0x3c09	                               cmp al, 9	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002593	            0x7563	                           jne 0x40025f8	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x4002595	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400259c	           0xfb600	                   movzx eax, byte [rax]	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400259f	           0xfb6c0	                           movzx eax, al	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40025a2	          0x83e830	                           sub eax, 0x30	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40025a5	          0x83f809	                              cmp eax, 9	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40025a8	            0x764e	                           jbe 0x40025f8	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40025aa	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40025b1	      0xbe00000000	                              mov esi, 0	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40025b6	          0x4889c7	                            mov rdi, rax	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40025b9	      0xe800000000	                          call 0x40025be	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40025be	            0x4898	                                    cdqe	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40025c0	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40025c7	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40025ce	          0x4885c0	                           test rax, rax	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40025d1	     0xf85ed000000	                           jne 0x40026c4	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40025d7	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40025e2	     0xf84dc000000	                            je 0x40026c4	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40025e8	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40025f3	      0xe92e120000	                           jmp 0x4003826	      4777	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40025f8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x40025ff	           0xfb600	                   movzx eax, byte [rax]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4002602	            0x3c2d	                            cmp al, 0x2d	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4002604	            0x7419	                            je 0x400261f	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4002606	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400260d	           0xfb600	                   movzx eax, byte [rax]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4002610	           0xfb6c0	                           movzx eax, al	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4002613	          0x83e830	                           sub eax, 0x30	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4002616	          0x83f809	                              cmp eax, 9	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4002619	     0xf8795000000	                            ja 0x40026b4	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400261f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002626	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400262d	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002634	        0x4883ec08	                              sub rsp, 8	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002638	            0x6a00	                                  push 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400263a	    0x41b900000000	                              mov r9d, 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002640	          0x4989c8	                             mov r8, rcx	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002643	      0xb907000000	                              mov ecx, 7	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002648	      0xbe00000000	                              mov esi, 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400264d	          0x4889c7	                            mov rdi, rax	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002650	      0xe800000000	                          call 0x4002655	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002655	        0x4883c410	                           add rsp, 0x10	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x4002659	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002660	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002666	            0x4898	                                    cdqe	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002668	          0x4801d0	                            add rax, rdx	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400266b	           0xfb600	                   movzx eax, byte [rax]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400266e	            0x84c0	                             test al, al	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002670	            0x7455	                            je 0x40026c7	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002672	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002679	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400267f	            0x4898	                                    cdqe	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002681	          0x4801d0	                            add rax, rdx	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002684	           0xfb600	                   movzx eax, byte [rax]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002687	            0x3c20	                            cmp al, 0x20	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002689	            0x743c	                            je 0x40026c7	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400268b	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002692	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4002698	            0x4898	                                    cdqe	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400269a	          0x4801d0	                            add rax, rdx	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400269d	           0xfb600	                   movzx eax, byte [rax]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40026a0	            0x3c09	                               cmp al, 9	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40026a2	            0x7423	                            je 0x40026c7	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40026a4	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4788	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58
0x40026af	      0xe972110000	                           jmp 0x4003826	      4789	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58
0x40026b4	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x40026bf	      0xe962110000	                           jmp 0x4003826	      4795	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29
0x40026c4	              0x90	                                     nop	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40026c5	            0xeb01	                           jmp 0x40026c8	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40026c7	              0x90	                                     nop	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40026c8	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40026cf	            0x741b	                            je 0x40026ec	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40026d1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40026d8	          0x488b10	                    mov rdx, qword [rax]	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40026db	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40026e2	          0x4801d0	                            add rax, rdx	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40026e5	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40026ec	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x40026f3	            0x741c	                            je 0x4002711	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x40026f5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x40026fc	          0x488b10	                    mov rdx, qword [rax]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x40026ff	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x4002706	        0x480fafc2	                           imul rax, rdx	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400270a	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x4002711	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4002718	            0x741e	                            je 0x4002738	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400271a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4002721	          0x488b10	                    mov rdx, qword [rax]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4002724	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400272b	          0x4829c2	                            sub rdx, rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400272e	          0x4889d0	                            mov rax, rdx	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4002731	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4002738	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400273f	    0x8bbdd4feffff	            mov edi, dword [rbp - 0x12c]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002745	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002749	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002750	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002756	          0x4189f9	                            mov r9d, edi	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002759	    0x41b850000000	                           mov r8d, 0x50	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400275f	            0x89c7	                            mov edi, eax	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002761	      0xe8537b0000	                 call sym.set_num_option	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002766	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400276d	      0xe966100000	                           jmp 0x40037d8	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4002772	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4002779	     0xf88440f0000	                            js 0x40036c3	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400277f	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400278a	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4002795	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4811	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x40027a0	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4813	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x40027ab	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      4815	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x40027b6	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      4816	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x40027c1	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027c7	          0x83e006	                              and eax, 6	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027ca	            0x85c0	                           test eax, eax	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027cc	            0x7539	                           jne 0x4002807	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027ce	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027d4	            0x4898	                                    cdqe	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027d6	        0x48c1e006	                              shl rax, 6	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027da	    0x480500000000	                              add rax, 0	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027e0	            0x8b00	                    mov eax, dword [rax]	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027e2	      0x2500100000	                         and eax, 0x1000	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027e7	            0x85c0	                           test eax, eax	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027e9	            0x741c	                            je 0x4002807	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027eb	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027f1	            0x4898	                                    cdqe	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027f3	        0x48c1e006	                              shl rax, 6	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027f7	    0x480500000000	                              add rax, 0	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x40027fd	          0x488b00	                    mov rax, qword [rax]	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x4002800	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x4002807	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400280e	          0x488b00	                    mov rax, qword [rax]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4002811	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4002818	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400281e	            0x4898	                                    cdqe	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4002820	        0x48c1e006	                              shl rax, 6	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4002824	    0x480500000000	                              add rax, 0	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400282a	            0x8b00	                    mov eax, dword [rax]	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400282c	      0x2500100000	                         and eax, 0x1000	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4002831	            0x85c0	                           test eax, eax	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4002833	            0x7433	                            je 0x4002868	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4002835	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400283b	          0x83e004	                              and eax, 4	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400283e	            0x85c0	                           test eax, eax	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4002840	            0x7426	                            je 0x4002868	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4002842	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x4002848	            0x4898	                                    cdqe	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400284a	        0x48c1e006	                              shl rax, 6	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400284e	    0x480500000000	                              add rax, 0	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x4002854	          0x4889c7	                            mov rdi, rax	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x4002857	      0xe810ad0000	                       call sym.get_varp	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400285c	          0x488b00	                    mov rax, qword [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400285f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x4002866	            0xeb0e	                           jmp 0x4002876	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x4002868	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4842	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31
0x400286f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4842	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31
0x4002876	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400287d	     0xf85f1000000	                           jne 0x4002974	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4002883	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4847	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400288a	      0x2500040000	                          and eax, 0x400	      4847	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400288f	          0x4885c0	                           test rax, rax	      4848	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4002892	            0x7510	                           jne 0x40028a4	      4848	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4002894	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      4848	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400289b	            0x7507	                           jne 0x40028a4	      4848	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400289d	      0xb801000000	                              mov eax, 1	      4848	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028a2	            0xeb05	                           jmp 0x40028a9	      4848	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028a4	      0xb800000000	                              mov eax, 0	      4848	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028a9	            0x4898	                                    cdqe	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028ab	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028b1	          0x4863d2	                         movsxd rdx, edx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028b4	        0x48c1e203	                              shl rdx, 3	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028b8	          0x4801d0	                            add rax, rdx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028bb	        0x4883c004	                              add rax, 4	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028bf	    0x488b04c50000	                  mov rax, qword [rax*8]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028c7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x40028ce	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x40028d9	            0x7524	                           jne 0x40028ff	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x40028db	    0x8b0500000000	            mov eax, dword [0x040028e1] 	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x40028e1	            0x85c0	                           test eax, eax	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x40028e3	            0x740e	                            je 0x40028f3	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x40028e5	      0xe8e2eaffff	                 call sym.gui_bg_default	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_57
0x40028ea	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_57
0x40028f1	            0xeb0c	                           jmp 0x40028ff	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_57
0x40028f3	      0xe86ce5ffff	                call sym.term_bg_default	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x40028f8	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x40028ff	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4002907	            0x7510	                           jne 0x4002919	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4002909	    0x488b05000000	            mov rax, qword [0x04002910] 	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4002910	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4002917	            0xeb4c	                           jmp 0x4002965	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4002919	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4002920	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4002926	          0x4889d6	                            mov rsi, rdx	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4002929	            0x89c7	                            mov edi, eax	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x400292b	      0xe8fc160000	                  call sym.option_expand	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4002930	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4002937	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x400293f	            0x750e	                           jne 0x400294f	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x4002941	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4870	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x4002948	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4870	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x400294f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x4002956	          0x4889c7	                            mov rdi, rax	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x4002959	      0xe800000000	                          call 0x400295e	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400295e	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x4002965	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	      4873	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400296f	      0xe9440c0000	                           jmp 0x40035b8	      4873	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4002974	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3c 	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400297b	            0x7540	                           jne 0x40029bd	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400297d	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4002983	            0x4898	                                    cdqe	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4002985	        0x48c1e006	                              shl rax, 6	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4002989	    0x480500000000	                              add rax, 0	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400298f	      0xbe02000000	                              mov esi, 2	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4002994	          0x4889c7	                            mov rdi, rax	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4002997	      0xe89aa80000	                 call sym.get_varp_scope	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400299c	          0x488b00	                    mov rax, qword [rax]	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400299f	          0x4889c7	                            mov rdi, rax	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x40029a2	      0xe800000000	                          call 0x40029a7	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x40029a7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x40029ae	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	      4879	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x40029b8	      0xe9fb0b0000	                           jmp 0x40035b8	      4879	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x40029bd	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x40029c4	        0x4883c001	                              add rax, 1	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x40029c8	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x40029cf	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029da	            0x754a	                           jne 0x4002a26	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029dc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029e3	           0xfb600	                   movzx eax, byte [rax]	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029e6	            0x84c0	                             test al, al	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029e8	            0x740e	                            je 0x40029f8	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029ea	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029f1	           0xfb600	                   movzx eax, byte [rax]	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029f4	            0x3c20	                            cmp al, 0x20	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029f6	            0x752e	                           jne 0x4002a26	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x40029f8	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4893	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71	CALL_63
0x40029fc	    0xc7003a68656c	            mov dword [rax], 0x6c65683a 	      4893	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71	CALL_63
0x4002a02	    0x66c740047000	                mov word [rax + 4], 0x70	      4893	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71	CALL_63
0x4002a08	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4002a0f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4002a16	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4002a1a	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4002a21	      0xe9d3020000	                           jmp 0x4002cf9	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4002a26	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x4002a31	     0xf85cf000000	                           jne 0x4002b06	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x4002a37	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x4002a3e	          0x488b00	                    mov rax, qword [rax]	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x4002a41	           0xfb600	                   movzx eax, byte [rax]	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x4002a44	           0xfb6c0	                           movzx eax, al	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x4002a47	          0x83e830	                           sub eax, 0x30	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x4002a4a	          0x83f809	                              cmp eax, 9	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x4002a4d	     0xf87b3000000	                            ja 0x4002b06	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x4002a53	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x4002a5a	          0x4889c7	                            mov rdi, rax	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x4002a5d	      0xe800000000	                          call 0x4002a62	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x4002a62	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x4002a68	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a6e	          0x83f801	                              cmp eax, 1	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a71	            0x741c	                            je 0x4002a8f	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a73	          0x83f802	                              cmp eax, 2	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a76	            0x7430	                            je 0x4002aa8	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a78	            0x85c0	                           test eax, eax	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a7a	            0x7544	                           jne 0x4002ac0	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a7c	    0x488b15000000	            mov rdx, qword [0x04002a83] 	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a83	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a8a	          0x488910	                    mov qword [rax], rdx	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a8d	            0xeb31	                           jmp 0x4002ac0	      4909	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002a8f	      0xbf00000000	                              mov edi, 0	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4002a94	      0xe800000000	                          call 0x4002a99	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4002a99	          0x4889c2	                            mov rdx, rax	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4002a9c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4002aa3	          0x488910	                    mov qword [rax], rdx	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4002aa6	            0xeb18	                           jmp 0x4002ac0	      4913	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002aa8	      0xbf00000000	                              mov edi, 0	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4002aad	      0xe800000000	                          call 0x4002ab2	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4002ab2	          0x4889c2	                            mov rdx, rax	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4002ab5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4002abc	          0x488910	                    mov qword [rax], rdx	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4002abf	              0x90	                                     nop	      4917	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4002ac0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x4002ac7	          0x4889c7	                            mov rdi, rax	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x4002aca	      0xe800000000	                          call 0x4002acf	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x4002acf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4002ad6	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4002add	            0x7511	                           jne 0x4002af0	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4002adf	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4002ae6	          0x488b00	                    mov rax, qword [rax]	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4002ae9	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4002af0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x4002af7	          0x488b00	                    mov rax, qword [rax]	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x4002afa	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x4002b01	      0xe9f3010000	                           jmp 0x4002cf9	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x4002b06	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002b11	     0xf85a8010000	                           jne 0x4002cbf	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002b17	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4002b1e	           0xfb600	                   movzx eax, byte [rax]	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4002b21	           0xfb6c0	                           movzx eax, al	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4002b24	          0x83e830	                           sub eax, 0x30	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4002b27	          0x83f809	                              cmp eax, 9	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4002b2a	     0xf878f010000	                            ja 0x4002cbf	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4002b30	        0xc645a000	                mov byte [rbp - 0x60], 0	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002b34	    0x488d85d8feff	                  lea rax, [rbp - 0x128]	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x4002b3b	          0x4889c7	                            mov rdi, rax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x4002b3e	      0xe800000000	                          call 0x4002b43	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x4002b43	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x4002b49	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x4002b4f	          0x83e001	                              and eax, 1	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x4002b52	            0x85c0	                           test eax, eax	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x4002b54	            0x7432	                            je 0x4002b88	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x4002b56	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b5a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b61	          0x4889c2	                            mov rdx, rax	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b64	      0xb800000000	                              mov eax, 0	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b69	          0x4889d7	                            mov rdi, rdx	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b6c	            0xf2ae	              repne scasb al, byte [rdi]	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b6e	          0x4889c8	                            mov rax, rcx	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b71	          0x48f7d0	                                 not rax	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b74	        0x488d50ff	                      lea rdx, [rax - 1]	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b78	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b7c	          0x4801d0	                            add rax, rdx	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b7f	      0x66c700622c	                  mov word [rax], 0x2c62	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b84	        0xc6400200	                   mov byte [rax + 2], 0	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x4002b88	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x4002b8e	          0x83e002	                              and eax, 2	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x4002b91	            0x85c0	                           test eax, eax	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x4002b93	            0x7432	                            je 0x4002bc7	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x4002b95	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002b99	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002ba0	          0x4889c2	                            mov rdx, rax	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002ba3	      0xb800000000	                              mov eax, 0	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002ba8	          0x4889d7	                            mov rdi, rdx	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bab	            0xf2ae	              repne scasb al, byte [rdi]	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bad	          0x4889c8	                            mov rax, rcx	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bb0	          0x48f7d0	                                 not rax	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bb3	        0x488d50ff	                      lea rdx, [rax - 1]	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bb7	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bbb	          0x4801d0	                            add rax, rdx	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bbe	      0x66c700732c	                  mov word [rax], 0x2c73	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bc3	        0xc6400200	                   mov byte [rax + 2], 0	      4937	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x4002bc7	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x4002bcd	          0x83e004	                              and eax, 4	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x4002bd0	            0x85c0	                           test eax, eax	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x4002bd2	            0x7433	                            je 0x4002c07	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x4002bd4	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bd8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bdf	          0x4889c2	                            mov rdx, rax	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002be2	      0xb800000000	                              mov eax, 0	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002be7	          0x4889d7	                            mov rdi, rdx	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bea	            0xf2ae	              repne scasb al, byte [rdi]	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bec	          0x4889c8	                            mov rax, rcx	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bef	          0x48f7d0	                                 not rax	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bf2	        0x488d50ff	                      lea rdx, [rax - 1]	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bf6	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bfa	          0x4801d0	                            add rax, rdx	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002bfd	    0xc700682c6c2c	            mov dword [rax], 0x2c6c2c68 	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002c03	        0xc6400400	                   mov byte [rax + 4], 0	      4939	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x4002c07	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x4002c0d	          0x83e008	                              and eax, 8	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x4002c10	            0x85c0	                           test eax, eax	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x4002c12	            0x7433	                            je 0x4002c47	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x4002c14	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c18	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c1f	          0x4889c2	                            mov rdx, rax	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c22	      0xb800000000	                              mov eax, 0	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c27	          0x4889d7	                            mov rdi, rdx	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c2a	            0xf2ae	              repne scasb al, byte [rdi]	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c2c	          0x4889c8	                            mov rax, rcx	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c2f	          0x48f7d0	                                 not rax	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c32	        0x488d50ff	                      lea rdx, [rax - 1]	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c36	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c3a	          0x4801d0	                            add rax, rdx	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c3d	    0xc7003c2c3e2c	            mov dword [rax], 0x2c3e2c3c 	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c43	        0xc6400400	                   mov byte [rax + 4], 0	      4941	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x4002c47	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x4002c4d	          0x83e010	                           and eax, 0x10	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x4002c50	            0x85c0	                           test eax, eax	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x4002c52	            0x7433	                            je 0x4002c87	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x4002c54	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c58	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c5f	          0x4889c2	                            mov rdx, rax	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c62	      0xb800000000	                              mov eax, 0	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c67	          0x4889d7	                            mov rdi, rdx	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c6a	            0xf2ae	              repne scasb al, byte [rdi]	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c6c	          0x4889c8	                            mov rax, rcx	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c6f	          0x48f7d0	                                 not rax	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c72	        0x488d50ff	                      lea rdx, [rax - 1]	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c76	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c7a	          0x4801d0	                            add rax, rdx	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c7d	    0xc7005b2c5d2c	            mov dword [rax], 0x2c5d2c5b 	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c83	        0xc6400400	                   mov byte [rax + 4], 0	      4943	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x4002c87	         0xfb645a0	            movzx eax, byte [rbp - 0x60]	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x4002c8b	            0x84c0	                             test al, al	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x4002c8d	            0x7415	                            je 0x4002ca4	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x4002c8f	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4002c93	          0x4889c7	                            mov rdi, rax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4002c96	      0xe800000000	                          call 0x4002c9b	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4002c9b	        0x4883e801	                              sub rax, 1	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4002c9f	      0xc64405a000	          mov byte [rbp + rax - 0x60], 0	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4002ca4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002cab	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002cb2	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002cb6	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002cbd	            0xeb3a	                           jmp 0x4002cf9	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x4002cbf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002cc6	           0xfb600	                   movzx eax, byte [rax]	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002cc9	            0x3c3e	                            cmp al, 0x3e	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002ccb	            0x752c	                           jne 0x4002cf9	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002ccd	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4954	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002cd8	            0x740d	                            je 0x4002ce7	      4954	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002cda	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002ce5	            0x7512	                           jne 0x4002cf9	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002ce7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002cee	        0x4883c001	                              add rax, 1	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002cf2	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4002cf9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x4002d00	          0x4889c7	                            mov rdi, rax	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x4002d03	      0xe800000000	                          call 0x4002d08	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x4002d08	          0x83c001	                              add eax, 1	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x4002d0b	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x4002d11	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x4002d18	            0x7512	                           jne 0x4002d2c	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x4002d1a	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x4002d21	            0x7509	                           jne 0x4002d2c	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x4002d23	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x4002d2a	            0x7422	                            je 0x4002d4e	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x4002d2c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d33	          0x4889c7	                            mov rdi, rax	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d36	      0xe800000000	                          call 0x4002d3b	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d3b	            0x89c2	                            mov edx, eax	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d3d	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d43	             0x1d0	                            add eax, edx	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d45	          0x83c001	                              add eax, 1	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d48	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x4002d4e	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x4002d54	            0x89c7	                            mov edi, eax	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x4002d56	      0xe800000000	                          call 0x4002d5b	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x4002d5b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x4002d62	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x4002d6a	     0xf84f50c0000	                            je 0x4003a65	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x4002d70	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4972	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x4002d77	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4972	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x4002d7e	      0xe9d5000000	                           jmp 0x4002e58	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002d83	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002d8a	           0xfb600	                   movzx eax, byte [rax]	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002d8d	            0x3c5c	                            cmp al, 0x5c	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002d8f	            0x7524	                           jne 0x4002db5	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002d91	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002d98	        0x4883c001	                              add rax, 1	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002d9c	           0xfb600	                   movzx eax, byte [rax]	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002d9f	            0x84c0	                             test al, al	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002da1	            0x7412	                            je 0x4002db5	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002da3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002daa	        0x4883c001	                              add rax, 1	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002dae	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4002db5	    0x8b0500000000	            mov eax, dword [0x04002dbb] 	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dbb	            0x85c0	                           test eax, eax	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dbd	            0x7470	                            je 0x4002e2f	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dbf	    0x488b05000000	            mov rax, qword [0x04002dc6] 	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dc6	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dcd	          0x4889d7	                            mov rdi, rdx	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dd0	            0xffd0	                                call rax	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dd2	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dd8	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002dde	          0x83f801	                              cmp eax, 1	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002de1	            0x7e4c	                           jle 0x4002e2f	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002de3	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4999	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x4002de9	          0x4863d0	                         movsxd rdx, eax	      4999	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x4002dec	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      4999	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x4002df3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4999	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x4002dfa	          0x4889ce	                            mov rsi, rcx	      4999	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x4002dfd	          0x4889c7	                            mov rdi, rax	      4999	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x4002e00	      0xe800000000	                          call 0x4002e05	      4999	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x4002e05	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e0c	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e12	            0x4898	                                    cdqe	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e14	          0x4801d0	                            add rax, rdx	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e17	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e1e	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e24	            0x4898	                                    cdqe	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e26	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e2d	            0xeb29	                           jmp 0x4002e58	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4002e2f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e36	        0x488d5001	                      lea rdx, [rax + 1]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e3a	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e41	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e48	        0x488d4a01	                      lea rcx, [rdx + 1]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e4c	    0x48898dd8feff	            mov qword [rbp - 0x128], rcx	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e53	           0xfb612	                   movzx edx, byte [rdx]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e56	            0x8810	                      mov byte [rax], dl	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x4002e58	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e5f	           0xfb600	                   movzx eax, byte [rax]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e62	            0x84c0	                             test al, al	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e64	            0x7420	                            je 0x4002e86	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e66	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e6d	           0xfb600	                   movzx eax, byte [rax]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e70	            0x3c20	                            cmp al, 0x20	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e72	            0x7412	                            je 0x4002e86	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e74	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e7b	           0xfb600	                   movzx eax, byte [rax]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e7e	            0x3c09	                               cmp al, 9	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e80	     0xf85fdfeffff	                           jne 0x4002d83	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x4002e86	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39
0x4002e8d	          0xc60000	                       mov byte [rax], 0	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39
0x4002e90	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002e97	            0x7512	                           jne 0x4002eab	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002e99	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002ea0	            0x7509	                           jne 0x4002eab	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002ea2	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002ea9	            0x7415	                            je 0x4002ec0	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002eab	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002eb2	      0x2500800000	                         and eax, 0x8000	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002eb7	          0x4885c0	                           test rax, rax	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002eba	     0xf84cb000000	                            je 0x4002f8b	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x4002ec0	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x4002ec7	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x4002ecd	          0x4889d6	                            mov rsi, rdx	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x4002ed0	            0x89c7	                            mov edi, eax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x4002ed2	      0xe855110000	                  call sym.option_expand	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x4002ed7	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x4002ede	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x4002ee6	     0xf849f000000	                            je 0x4002f8b	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x4002eec	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x4002ef3	          0x4889c7	                            mov rdi, rax	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x4002ef6	      0xe800000000	                          call 0x4002efb	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x4002efb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x4002f02	          0x4889c7	                            mov rdi, rax	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x4002f05	      0xe800000000	                          call 0x4002f0a	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x4002f0a	          0x83c001	                              add eax, 1	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x4002f0d	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x4002f13	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x4002f1a	            0x7512	                           jne 0x4002f2e	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x4002f1c	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x4002f23	            0x7509	                           jne 0x4002f2e	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x4002f25	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x4002f2c	            0x7422	                            je 0x4002f50	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x4002f2e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f35	          0x4889c7	                            mov rdi, rax	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f38	      0xe800000000	                          call 0x4002f3d	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f3d	            0x89c2	                            mov edx, eax	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f3f	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f45	             0x1d0	                            add eax, edx	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f47	          0x83c001	                              add eax, 1	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f4a	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x4002f50	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x4002f56	            0x89c7	                            mov edi, eax	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x4002f58	      0xe800000000	                          call 0x4002f5d	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x4002f5d	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x4002f64	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x4002f6c	     0xf84f60a0000	                            je 0x4003a68	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x4002f72	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      5027	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x4002f79	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5027	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x4002f80	          0x4889d6	                            mov rsi, rdx	      5027	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x4002f83	          0x4889c7	                            mov rdi, rax	      5027	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x4002f86	      0xe800000000	                          call 0x4002f8b	      5027	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x4002f8b	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      5033	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x4002f95	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x4002f9c	            0x7515	                           jne 0x4002fb3	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x4002f9e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x4002fa5	      0x2500000200	                        and eax, 0x20000	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x4002faa	          0x4885c0	                           test rax, rax	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x4002fad	     0xf84c5010000	                            je 0x4003178	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x4002fb3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x4002fba	          0x4889c7	                            mov rdi, rax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x4002fbd	      0xe800000000	                          call 0x4002fc2	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x4002fc2	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x4002fc8	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      5037	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x4002fd2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4002fd9	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4002fe0	      0xe934010000	                           jmp 0x4003119	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4002fe5	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4002fec	      0x2500800000	                         and eax, 0x8000	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4002ff1	          0x4885c0	                           test rax, rax	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4002ff4	            0x7433	                            je 0x4003029	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4002ff6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4002ffd	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003004	            0x7423	                            je 0x4003029	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003006	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400300d	        0x4883e801	                              sub rax, 1	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003011	           0xfb600	                   movzx eax, byte [rax]	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003014	            0x3c2c	                            cmp al, 0x2c	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003016	     0xf8584000000	                           jne 0x40030a0	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400301c	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003022	          0x83e001	                              and eax, 1	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003025	            0x85c0	                           test eax, eax	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003027	            0x7577	                           jne 0x40030a0	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003029	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400302f	          0x4863d0	                         movsxd rdx, eax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4003032	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4003039	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4003040	          0x4889ce	                            mov rsi, rcx	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4003043	          0x4889c7	                            mov rdi, rax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4003046	      0xe800000000	                          call 0x400304b	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400304b	            0x85c0	                           test eax, eax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400304d	            0x7551	                           jne 0x40030a0	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400304f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003056	      0x2500800000	                         and eax, 0x8000	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400305b	          0x4885c0	                           test rax, rax	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400305e	     0xf84c7000000	                            je 0x400312b	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003064	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400306a	          0x4863d0	                         movsxd rdx, eax	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400306d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003074	          0x4801d0	                            add rax, rdx	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003077	           0xfb600	                   movzx eax, byte [rax]	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400307a	            0x3c2c	                            cmp al, 0x2c	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400307c	     0xf84a9000000	                            je 0x400312b	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003082	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003088	          0x4863d0	                         movsxd rdx, eax	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400308b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003092	          0x4801d0	                            add rax, rdx	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003095	           0xfb600	                   movzx eax, byte [rax]	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4003098	            0x84c0	                             test al, al	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400309a	     0xf848b000000	                            je 0x400312b	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x40030a0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030a7	        0x4883c001	                              add rax, 1	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030ab	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030b2	            0x7324	                           jae 0x40030d8	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030b4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030bb	        0x4883e801	                              sub rax, 1	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030bf	           0xfb600	                   movzx eax, byte [rax]	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030c2	            0x3c5c	                            cmp al, 0x5c	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030c4	            0x7512	                           jne 0x40030d8	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030c6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030cd	        0x4883e802	                              sub rax, 2	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030d1	           0xfb600	                   movzx eax, byte [rax]	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030d4	            0x3c2c	                            cmp al, 0x2c	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030d6	            0x7526	                           jne 0x40030fe	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030d8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030df	        0x4883c001	                              add rax, 1	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030e3	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030ea	            0x751b	                           jne 0x4003107	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030ec	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030f3	        0x4883e801	                              sub rax, 1	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030f7	           0xfb600	                   movzx eax, byte [rax]	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030fa	            0x3c5c	                            cmp al, 0x5c	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030fc	            0x7509	                           jne 0x4003107	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x40030fe	    0x83850cffffff	               add dword [rbp - 0xf4], 1	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4003105	            0xeb0a	                           jmp 0x4003111	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4003107	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x4003111	    0x48838548ffff	               add qword [rbp - 0xb8], 1	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4003119	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4003120	           0xfb600	                   movzx eax, byte [rax]	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4003123	            0x84c0	                             test al, al	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4003125	     0xf85bafeffff	                           jne 0x4002fe5	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400312b	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4003132	            0x7509	                           jne 0x400313d	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4003134	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400313b	            0x743b	                            je 0x4003178	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400313d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4003144	           0xfb600	                   movzx eax, byte [rax]	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4003147	            0x84c0	                             test al, al	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4003149	            0x742d	                            je 0x4003178	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400314b	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      5066	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4003155	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      5067	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400315f	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x4003166	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x400316d	          0x4889d6	                            mov rsi, rdx	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x4003170	          0x4889c7	                            mov rdi, rax	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x4003173	      0xe800000000	                          call 0x4003178	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x4003178	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400317f	            0x750d	                           jne 0x400318e	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4003181	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4003188	     0xf84b0010000	                            je 0x400333e	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400318e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4003195	      0x2500800000	                         and eax, 0x8000	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400319a	          0x4885c0	                           test rax, rax	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400319d	            0x7423	                            je 0x40031c2	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400319f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031a6	           0xfb600	                   movzx eax, byte [rax]	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031a9	            0x84c0	                             test al, al	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031ab	            0x7415	                            je 0x40031c2	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031ad	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031b4	           0xfb600	                   movzx eax, byte [rax]	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031b7	            0x84c0	                             test al, al	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031b9	            0x7407	                            je 0x40031c2	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031bb	      0xb801000000	                              mov eax, 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031c0	            0xeb05	                           jmp 0x40031c7	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031c2	      0xb800000000	                              mov eax, 0	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031c7	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40031cd	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x40031d4	     0xf84ed000000	                            je 0x40032c7	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x40031da	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40031e1	          0x4889c7	                            mov rdi, rax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40031e4	      0xe800000000	                          call 0x40031e9	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40031e9	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40031ef	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40031f6	            0x7468	                            je 0x4003260	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40031f8	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40031fe	          0x83f801	                              cmp eax, 1	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003201	            0x7e5d	                           jle 0x4003260	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003203	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400320a	      0x2500800100	                        and eax, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400320f	    0x483d00800100	                        cmp rax, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003215	            0x7549	                           jne 0x4003260	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003217	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400321d	            0x4898	                                    cdqe	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400321f	        0x488d50ff	                      lea rdx, [rax - 1]	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003223	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400322a	          0x4801d0	                            add rax, rdx	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400322d	           0xfb600	                   movzx eax, byte [rax]	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003230	            0x3c2c	                            cmp al, 0x2c	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003232	            0x752c	                           jne 0x4003260	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003234	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400323a	            0x4898	                                    cdqe	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400323c	        0x488d50fe	                      lea rdx, [rax - 2]	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003240	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003247	          0x4801d0	                            add rax, rdx	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400324a	           0xfb600	                   movzx eax, byte [rax]	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400324d	            0x3c5c	                            cmp al, 0x5c	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400324f	            0x740f	                            je 0x4003260	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003251	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003257	          0x83e801	                              sub eax, 1	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400325a	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4003260	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003267	          0x4889c7	                            mov rdi, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400326a	      0xe800000000	                          call 0x400326f	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400326f	        0x488d5001	                      lea rdx, [rax + 1]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003273	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003279	          0x4863c8	                         movsxd rcx, eax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400327c	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003282	            0x4898	                                    cdqe	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003284	          0x4801c1	                            add rcx, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003287	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400328e	          0x4801c1	                            add rcx, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003291	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x4003298	          0x4889c6	                            mov rsi, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400329b	          0x4889cf	                            mov rdi, rcx	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400329e	      0xe800000000	                          call 0x40032a3	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x40032a3	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032a9	          0x4863d0	                         movsxd rdx, eax	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032ac	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032b3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032ba	          0x4889ce	                            mov rsi, rcx	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032bd	          0x4889c7	                            mov rdi, rax	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032c0	      0xe800000000	                          call 0x40032c5	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032c5	            0xeb58	                           jmp 0x400331f	      5089	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x40032c7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x40032ce	          0x4889c7	                            mov rdi, rax	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x40032d1	      0xe800000000	                          call 0x40032d6	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x40032d6	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x40032dc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x40032e3	          0x4889c7	                            mov rdi, rax	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x40032e6	      0xe800000000	                          call 0x40032eb	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x40032eb	        0x488d5001	                      lea rdx, [rax + 1]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x40032ef	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x40032f5	          0x4863c8	                         movsxd rcx, eax	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x40032f8	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x40032fe	            0x4898	                                    cdqe	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x4003300	          0x4801c1	                            add rcx, rax	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x4003303	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400330a	          0x4801c1	                            add rcx, rax	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400330d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x4003314	          0x4889c6	                            mov rsi, rax	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x4003317	          0x4889cf	                            mov rdi, rcx	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400331a	      0xe800000000	                          call 0x400331f	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400331f	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4003326	            0x7416	                            je 0x400333e	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4003328	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400332e	          0x4863d0	                         movsxd rdx, eax	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4003331	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4003338	          0x4801d0	                            add rax, rdx	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400333b	          0xc6002c	                    mov byte [rax], 0x2c	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400333e	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x4003345	     0xf84ec000000	                            je 0x4003437	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x400334b	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      5104	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x4003352	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5104	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x4003359	          0x4889d6	                            mov rsi, rdx	      5104	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x400335c	          0x4889c7	                            mov rdi, rax	      5104	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x400335f	      0xe800000000	                          call 0x4003364	      5104	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x4003364	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x400336b	           0xfb600	                   movzx eax, byte [rax]	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x400336e	            0x84c0	                             test al, al	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x4003370	     0xf84c1000000	                            je 0x4003437	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x4003376	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x400337d	      0x2500800000	                         and eax, 0x8000	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x4003382	          0x4885c0	                           test rax, rax	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x4003385	            0x7452	                            je 0x40033d9	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x4003387	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x400338e	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x4003395	            0x752b	                           jne 0x40033c2	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x4003397	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400339d	          0x4863d0	                         movsxd rdx, eax	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033a0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033a7	          0x4801d0	                            add rax, rdx	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033aa	           0xfb600	                   movzx eax, byte [rax]	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033ad	            0x3c2c	                            cmp al, 0x2c	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033af	            0x7528	                           jne 0x40033d9	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033b1	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033b7	          0x83c001	                              add eax, 1	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033ba	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033c0	            0xeb17	                           jmp 0x40033d9	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x40033c2	    0x4883ad48ffff	               sub qword [rbp - 0xb8], 1	      5119	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x40033ca	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x40033d0	          0x83c001	                              add eax, 1	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x40033d3	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x40033d9	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033df	          0x4863d0	                         movsxd rdx, eax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033e2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033e9	          0x4801d0	                            add rax, rdx	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033ec	          0x4889c7	                            mov rdi, rax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033ef	      0xe800000000	                          call 0x40033f4	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033f4	        0x488d5001	                      lea rdx, [rax + 1]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033f8	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x40033fe	          0x4863c8	                         movsxd rcx, eax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003401	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003408	          0x4801c1	                            add rcx, rax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400340b	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003412	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003419	          0x4829c6	                            sub rsi, rax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400341c	          0x4889f0	                            mov rax, rsi	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400341f	          0x4889c6	                            mov rsi, rax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003422	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003429	          0x4801f0	                            add rax, rsi	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400342c	          0x4889ce	                            mov rsi, rcx	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400342f	          0x4889c7	                            mov rdi, rax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003432	      0xe800000000	                          call 0x4003437	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4003437	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400343e	      0x2500000400	                        and eax, 0x40000	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x4003443	          0x4885c0	                           test rax, rax	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x4003446	     0xf844a010000	                            je 0x4003596	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400344c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x4003453	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400345a	      0xe925010000	                           jmp 0x4003584	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400345f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4003466	      0x2500800100	                        and eax, 0x18000	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400346b	          0x4885c0	                           test rax, rax	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400346e	     0xf848c000000	                            je 0x4003500	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4003474	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400347b	           0xfb600	                   movzx eax, byte [rax]	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400347e	            0x3c2c	                            cmp al, 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4003480	     0xf84f6000000	                            je 0x400357c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4003486	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400348d	        0x4883c001	                              add rax, 1	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4003491	           0xfb600	                   movzx eax, byte [rax]	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4003494	            0x3c2c	                            cmp al, 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4003496	     0xf85e0000000	                           jne 0x400357c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400349c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034a3	           0xfb600	                   movzx eax, byte [rax]	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034a6	           0xfb6c0	                           movzx eax, al	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034a9	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034b0	        0x4883c202	                              add rdx, 2	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034b4	            0x89c6	                            mov esi, eax	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034b6	          0x4889d7	                            mov rdi, rdx	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034b9	      0xe800000000	                          call 0x40034be	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034be	          0x4885c0	                           test rax, rax	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034c1	     0xf84b5000000	                            je 0x400357c	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x40034c7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034ce	        0x4883c002	                              add rax, 2	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034d2	          0x4889c7	                            mov rdi, rax	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034d5	      0xe800000000	                          call 0x40034da	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034da	        0x488d5001	                      lea rdx, [rax + 1]	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034e5	        0x488d4802	                      lea rcx, [rax + 2]	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034e9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034f0	          0x4889ce	                            mov rsi, rcx	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034f3	          0x4889c7	                            mov rdi, rax	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034f6	      0xe800000000	                          call 0x40034fb	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x40034fb	      0xe984000000	                           jmp 0x4003584	      5142	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4003500	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4003507	      0x2500800000	                         and eax, 0x8000	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400350c	          0x4885c0	                           test rax, rax	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400350f	            0x740e	                            je 0x400351f	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4003511	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4003518	           0xfb600	                   movzx eax, byte [rax]	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400351b	            0x3c2c	                            cmp al, 0x2c	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400351d	            0x745d	                            je 0x400357c	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400351f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003526	           0xfb600	                   movzx eax, byte [rax]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003529	           0xfb6c0	                           movzx eax, al	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400352c	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003533	        0x4883c201	                              add rdx, 1	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003537	            0x89c6	                            mov esi, eax	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003539	          0x4889d7	                            mov rdi, rdx	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400353c	      0xe800000000	                          call 0x4003541	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003541	          0x4885c0	                           test rax, rax	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003544	            0x7436	                            je 0x400357c	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4003546	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400354d	        0x4883c001	                              add rax, 1	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4003551	          0x4889c7	                            mov rdi, rax	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4003554	      0xe800000000	                          call 0x4003559	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4003559	        0x488d5001	                      lea rdx, [rax + 1]	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400355d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4003564	        0x488d4801	                      lea rcx, [rax + 1]	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4003568	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400356f	          0x4889ce	                            mov rsi, rcx	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4003572	          0x4889c7	                            mov rdi, rax	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4003575	      0xe800000000	                          call 0x400357a	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400357a	            0xeb08	                           jmp 0x4003584	      5151	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400357c	    0x48838548ffff	               add qword [rbp - 0xb8], 1	      5154	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x4003584	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400358b	           0xfb600	                   movzx eax, byte [rax]	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400358e	            0x84c0	                             test al, al	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x4003590	     0xf85c9feffff	                           jne 0x400345f	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x4003596	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400359e	            0x740e	                            je 0x40035ae	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x40035a0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x40035a7	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x40035ae	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	      5160	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x40035b8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5166	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x40035bf	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5166	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x40035c6	          0x488910	                    mov qword [rax], rdx	      5166	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x40035c9	    0x8b0500000000	            mov eax, dword [0x040035cf] 	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035cf	            0x85c0	                           test eax, eax	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035d1	            0x755b	                           jne 0x400362e	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035d3	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035d9	            0x4898	                                    cdqe	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035db	        0x48c1e006	                              shl rax, 6	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035df	    0x480500000000	                              add rax, 0	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035e5	            0x8b00	                    mov eax, dword [rax]	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035e7	      0x3d2c400000	                         cmp eax, 0x402c	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035ec	            0x7440	                            je 0x400362e	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035ee	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035f6	            0x7436	                            je 0x400362e	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x40035f8	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4003600	            0x742c	                            je 0x400362e	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4003602	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x4003609	          0x4889c7	                            mov rdi, rax	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x400360c	      0xe800000000	                          call 0x4003611	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x4003611	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x4003618	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400361f	          0x4889c7	                            mov rdi, rax	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x4003622	      0xe800000000	                          call 0x4003627	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x4003627	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400362e	    0x448b85d4feff	            mov r8d, dword [rbp - 0x12c]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003635	        0x488d7da0	                   lea rdi, [rbp - 0x60]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003639	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003640	    0x8b9510ffffff	             mov edx, dword [rbp - 0xf0]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003646	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400364d	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003653	          0x4589c1	                            mov r9d, r8d	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003656	          0x4989f8	                             mov r8, rdi	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003659	            0x89c7	                            mov edi, eax	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400365b	      0xe8c4170000	          call sym.did_set_string_option	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003660	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4003667	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400366f	            0x7521	                           jne 0x4003692	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4003671	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x4003678	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400367f	    0x8bb5d4feffff	            mov esi, dword [rbp - 0x12c]	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x4003685	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400368b	            0x89c7	                            mov edi, eax	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400368d	      0xe8b3deffff	      call sym.trigger_optionsset_string	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x4003692	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x4003699	          0x4889c7	                            mov rdi, rax	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400369c	      0xe800000000	                          call 0x40036a1	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x40036a1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x40036a8	          0x4889c7	                            mov rdi, rax	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x40036ab	      0xe800000000	                          call 0x40036b0	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x40036b0	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      5199	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_110
0x40036b8	     0xf841a010000	                            je 0x40037d8	      5199	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_110
0x40036be	      0xe963010000	                           jmp 0x4003826	      5200	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_110
0x40036c3	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x40036ca	            0x7529	                           jne 0x40036f5	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x40036cc	        0x488d4590	                   lea rax, [rbp - 0x70]	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x40036d0	      0xbe01000000	                              mov esi, 1	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x40036d5	          0x4889c7	                            mov rdi, rax	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x40036d8	      0xe800000000	                          call 0x40036dd	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x40036dd	            0x85c0	                           test eax, eax	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x40036df	     0xf85d5000000	                           jne 0x40037ba	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x40036e5	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x40036f0	      0xe9c5000000	                           jmp 0x40037ba	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x40036f5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x40036fc	        0x4883c001	                              add rax, 1	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x4003700	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x4003707	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400370e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003715	            0xeb30	                           jmp 0x4003747	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003717	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400371e	           0xfb600	                   movzx eax, byte [rax]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4003721	            0x3c5c	                            cmp al, 0x5c	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4003723	            0x751a	                           jne 0x400373f	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4003725	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400372c	        0x4883c001	                              add rax, 1	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4003730	           0xfb600	                   movzx eax, byte [rax]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4003733	            0x84c0	                             test al, al	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4003735	            0x7408	                            je 0x400373f	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4003737	    0x48838578ffff	               add qword [rbp - 0x88], 1	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400373f	    0x48838578ffff	               add qword [rbp - 0x88], 1	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003747	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400374e	           0xfb600	                   movzx eax, byte [rax]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003751	            0x84c0	                             test al, al	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003753	            0x741c	                            je 0x4003771	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003755	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400375c	           0xfb600	                   movzx eax, byte [rax]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400375f	            0x3c20	                            cmp al, 0x20	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003761	            0x740e	                            je 0x4003771	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003763	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400376a	           0xfb600	                   movzx eax, byte [rax]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400376d	            0x3c09	                               cmp al, 9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400376f	            0x75a6	                           jne 0x4003717	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4003771	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5217	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x4003778	           0xfb600	                   movzx eax, byte [rax]	      5217	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400377b	           0xfb6c0	                           movzx eax, al	      5217	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400377e	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5217	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x4003784	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5218	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400378b	          0xc60000	                       mov byte [rax], 0	      5218	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400378e	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x4003795	        0x488d4590	                   lea rax, [rbp - 0x70]	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x4003799	      0xba00000000	                              mov edx, 0	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400379e	          0x4889ce	                            mov rsi, rcx	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x40037a1	          0x4889c7	                            mov rdi, rax	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x40037a4	      0xe800000000	                          call 0x40037a9	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x40037a9	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5220	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x40037af	            0x89c2	                            mov edx, eax	      5220	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x40037b1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5220	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x40037b8	            0x8810	                      mov byte [rax], dl	      5220	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x40037ba	    0x8b0500000000	            mov eax, dword [0x040037c0] 	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x40037c0	            0x85c0	                           test eax, eax	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x40037c2	            0x740a	                            je 0x40037ce	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x40037c4	      0xbf00000000	                              mov edi, 0	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x40037c9	      0xe800000000	                          call 0x40037ce	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x40037ce	      0xbf32000000	                           mov edi, 0x32	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x40037d3	      0xe800000000	                          call 0x40037d8	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x40037d8	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x40037df	            0x7845	                            js 0x4003826	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x40037e1	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x40037e8	            0x7519	                           jne 0x4003803	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x40037ea	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5230	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x40037f1	            0x7510	                           jne 0x4003803	      5230	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x40037f3	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x40037fa	            0x7507	                           jne 0x4003803	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x40037fc	      0xba01000000	                              mov edx, 1	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4003801	            0xeb05	                           jmp 0x4003808	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4003803	      0xba00000000	                              mov edx, 0	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4003808	    0x8b8dd4feffff	            mov ecx, dword [rbp - 0x12c]	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400380e	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4003814	            0x89ce	                            mov esi, ecx	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4003816	            0x89c7	                            mov edi, eax	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4003818	      0xe8b6020000	                 call sym.did_set_option	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400381d	            0xeb07	                           jmp 0x4003826	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400381f	              0x90	                                     nop	      4535	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4003820	            0xeb04	                           jmp 0x4003826	      4535	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x4003822	              0x90	                                     nop	      4565	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4003823	            0xeb01	                           jmp 0x4003826	      4565	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4003825	              0x90	                                     nop	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x4003826	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x4003830	      0xe996000000	                           jmp 0x40038cb	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x4003835	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400383c	        0x488d5001	                      lea rdx, [rax + 1]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x4003840	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x4003847	           0xfb600	                   movzx eax, byte [rax]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400384a	            0x3c5c	                            cmp al, 0x5c	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400384c	            0x7520	                           jne 0x400386e	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400384e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x4003855	           0xfb600	                   movzx eax, byte [rax]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x4003858	            0x84c0	                             test al, al	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400385a	            0x7412	                            je 0x400386e	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400385c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x4003863	        0x4883c001	                              add rax, 1	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x4003867	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400386e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003875	           0xfb600	                   movzx eax, byte [rax]	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003878	            0x84c0	                             test al, al	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400387a	            0x741c	                            je 0x4003898	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400387c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003883	           0xfb600	                   movzx eax, byte [rax]	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003886	            0x3c20	                            cmp al, 0x20	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003888	            0x740e	                            je 0x4003898	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400388a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003891	           0xfb600	                   movzx eax, byte [rax]	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003894	            0x3c09	                               cmp al, 9	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003896	            0x759d	                           jne 0x4003835	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x4003898	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400389f	          0x4889c7	                            mov rdi, rax	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x40038a2	      0xe800000000	                          call 0x40038a7	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x40038a7	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x40038ae	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x40038b5	           0xfb600	                   movzx eax, byte [rax]	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x40038b8	            0x3c3d	                            cmp al, 0x3d	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x40038ba	            0x751c	                           jne 0x40038d8	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x40038bc	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x40038c2	          0x83c001	                              add eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x40038c5	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x40038cb	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x40038d1	          0x83f801	                              cmp eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x40038d4	            0x7e98	                           jle 0x400386e	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x40038d6	            0xeb01	                           jmp 0x40038d9	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x40038d8	              0x90	                                     nop	      5247	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x40038d9	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x40038e1	     0xf8454010000	                            je 0x4003a3b	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x40038e7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x40038ee	          0x4889c7	                            mov rdi, rax	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x40038f1	      0xe800000000	                          call 0x40038f6	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x40038f6	          0x4889c1	                            mov rcx, rax	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x40038f9	    0x488b05000000	            mov rax, qword [0x04003900] 	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x4003900	      0xba00040000	                          mov edx, 0x400	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x4003905	          0x4889ce	                            mov rsi, rcx	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x4003908	          0x4889c7	                            mov rdi, rax	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400390b	      0xe800000000	                          call 0x4003910	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x4003910	    0x488b05000000	            mov rax, qword [0x04003917] 	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x4003917	          0x4889c7	                            mov rdi, rax	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400391a	      0xe800000000	                          call 0x400391f	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400391f	          0x83c002	                              add eax, 2	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x4003922	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x4003928	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400392e	            0x4898	                                    cdqe	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x4003930	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x4003937	          0x4889d1	                            mov rcx, rdx	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400393a	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400393e	          0x4829d1	                            sub rcx, rdx	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x4003941	          0x4889ca	                            mov rdx, rcx	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x4003944	          0x4801d0	                            add rax, rdx	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x4003947	    0x483d00040000	                          cmp rax, 0x400	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400394d	     0xf8f9d000000	                            jg 0x40039f0	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x4003953	    0x488b15000000	            mov rdx, qword [0x0400395a] 	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x400395a	          0x4889d0	                            mov rax, rdx	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x400395d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x4003964	          0x4889c6	                            mov rsi, rax	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x4003967	      0xb800000000	                              mov eax, 0	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x400396c	          0x4889f7	                            mov rdi, rsi	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x400396f	            0xf2ae	              repne scasb al, byte [rdi]	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x4003971	          0x4889c8	                            mov rax, rcx	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x4003974	          0x48f7d0	                                 not rax	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x4003977	        0x4883e801	                              sub rax, 1	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x400397b	          0x4801d0	                            add rax, rdx	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x400397e	      0x66c7003a20	                  mov word [rax], 0x203a	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x4003983	        0xc6400200	                   mov byte [rax + 2], 0	      5258	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x4003987	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x400398e	          0x4889c2	                            mov rdx, rax	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x4003991	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x4003995	          0x4829c2	                            sub rdx, rax	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x4003998	          0x4889d0	                            mov rax, rdx	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x400399b	          0x4889c6	                            mov rsi, rax	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x400399e	    0x488b15000000	            mov rdx, qword [0x040039a5] 	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039a5	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039ab	            0x4898	                                    cdqe	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039ad	        0x488d0c02	                    lea rcx, [rdx + rax]	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039b1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039b5	          0x4889f2	                            mov rdx, rsi	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039b8	          0x4889c6	                            mov rsi, rax	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039bb	          0x4889cf	                            mov rdi, rcx	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039be	      0xe800000000	                          call 0x40039c3	      5259	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x40039c3	    0x488b05000000	            mov rax, qword [0x040039ca] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039ca	    0x8b95e0feffff	            mov edx, dword [rbp - 0x120]	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039d0	          0x4863d2	                         movsxd rdx, edx	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039d3	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039da	          0x4889ce	                            mov rsi, rcx	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039dd	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039e1	          0x4829ce	                            sub rsi, rcx	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039e4	          0x4889f1	                            mov rcx, rsi	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039e7	          0x4801ca	                            add rdx, rcx	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039ea	          0x4801d0	                            add rax, rdx	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039ed	          0xc60000	                       mov byte [rax], 0	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x40039f0	    0x488b05000000	            mov rax, qword [0x040039f7] 	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x40039f7	      0xbe01040000	                          mov esi, 0x401	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x40039fc	          0x4889c7	                            mov rdi, rax	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x40039ff	      0xe800000000	                          call 0x4003a04	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x4003a04	    0x8b0500000000	            mov eax, dword [0x04003a0a] 	      5265	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a0a	          0x83c001	                              add eax, 1	      5265	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a0d	    0x890500000000	            mov dword [0x04003a13], eax 	      5265	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a13	    0x488b05000000	            mov rax, qword [0x04003a1a] 	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x4003a1a	          0x4889c7	                            mov rdi, rax	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x4003a1d	      0xe800000000	                          call 0x4003a22	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x4003a22	    0x8b0500000000	            mov eax, dword [0x04003a28] 	      5267	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a28	          0x83e801	                              sub eax, 1	      5267	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a2b	    0x890500000000	            mov dword [0x04003a31], eax 	      5267	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a31	      0xb800000000	                              mov eax, 0	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a36	      0xe982000000	                           jmp 0x4003abd	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x4003a3b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x4003a42	          0x4889c7	                            mov rdi, rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x4003a45	      0xe800000000	                          call 0x4003a4a	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x4003a4a	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x4003a51	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4394	option.c	FUNCTION_16	WHILE_1
0x4003a58	           0xfb600	                   movzx eax, byte [rax]	      4394	option.c	FUNCTION_16	WHILE_1
0x4003a5b	            0x84c0	                             test al, al	      4394	option.c	FUNCTION_16	WHILE_1
0x4003a5d	     0xf8548dcffff	                           jne 0x40016ab	      4394	option.c	FUNCTION_16	WHILE_1
0x4003a63	            0xeb04	                           jmp 0x4003a69	      4394	option.c	FUNCTION_16	WHILE_1
0x4003a65	              0x90	                                     nop	      4971	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x4003a66	            0xeb01	                           jmp 0x4003a69	      4971	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x4003a68	              0x90	                                     nop	      5026	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x4003a69	    0x8b0500000000	            mov eax, dword [0x04003a6f] 	      5276	option.c	FUNCTION_16	IF_120
0x4003a6f	            0x85c0	                           test eax, eax	      5276	option.c	FUNCTION_16	IF_120
0x4003a71	            0x7445	                            je 0x4003ab8	      5276	option.c	FUNCTION_16	IF_120
0x4003a73	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      5276	option.c	FUNCTION_16	IF_120
0x4003a7a	            0x743c	                            je 0x4003ab8	      5276	option.c	FUNCTION_16	IF_120
0x4003a7c	    0xc70500000000	               mov dword [0x04003a86], 0	      5279	option.c	FUNCTION_16	IF_120
0x4003a86	    0xc70500000000	               mov dword [0x04003a90], 1	      5280	option.c	FUNCTION_16	IF_120
0x4003a90	      0xbf0a000000	                            mov edi, 0xa	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x4003a95	      0xe800000000	                          call 0x4003a9a	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x4003a9a	      0xe800000000	                          call 0x4003a9f	      5282	option.c	FUNCTION_16	IF_120	CALL_128
0x4003a9f	      0xe800000000	                          call 0x4003aa4	      5283	option.c	FUNCTION_16	IF_120	CALL_129
0x4003aa4	    0xc70500000000	               mov dword [0x04003aae], 1	      5284	option.c	FUNCTION_16	IF_120
0x4003aae	    0xc70500000000	               mov dword [0x04003ab8], 0	      5285	option.c	FUNCTION_16	IF_120
0x4003ab8	      0xb801000000	                              mov eax, 1	      5288	option.c	FUNCTION_16
0x4003abd	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5289	option.c	FUNCTION_16
0x4003ac1	    0x644833342528	                xor rsi, qword fs:[0x28]	      5289	option.c	FUNCTION_16
0x4003aca	            0x7405	                            je 0x4003ad1	      5289	option.c	FUNCTION_16
0x4003acc	      0xe800000000	                          call 0x4003ad1	      5289	option.c	FUNCTION_16
0x4003ad1	              0xc9	                                   leave	      5289	option.c	FUNCTION_16
0x4003ad2	              0xc3	                                     ret	      5289	option.c	FUNCTION_16
showoptions	ELSE,6:IF,12:SWITCH,0:CALL,21:DO,0:WHILE,0:functions,0:FOR,4	213
0x400be2e	              0x55	                                push rbp	      9862	option.c	FUNCTION_61
0x400be2f	          0x4889e5	                            mov rbp, rsp	      9862	option.c	FUNCTION_61
0x400be32	              0x53	                                push rbx	      9862	option.c	FUNCTION_61
0x400be33	        0x4883ec58	                           sub rsp, 0x58	      9862	option.c	FUNCTION_61
0x400be37	          0x897dac	             mov dword [rbp - 0x54], edi	      9862	option.c	FUNCTION_61
0x400be3a	          0x8975a8	             mov dword [rbp - 0x58], esi	      9862	option.c	FUNCTION_61
0x400be3d	      0xbf200f0000	                          mov edi, 0xf20	      9878	option.c	FUNCTION_61	CALL_1
0x400be42	      0xe800000000	                          call 0x400be47	      9878	option.c	FUNCTION_61	CALL_1
0x400be47	        0x488945e8	             mov qword [rbp - 0x18], rax	      9878	option.c	FUNCTION_61	CALL_1
0x400be4b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9880	option.c	FUNCTION_61	IF_1
0x400be50	     0xf84d5020000	                            je 0x400c12b	      9880	option.c	FUNCTION_61	IF_1
0x400be56	        0x837dac02	               cmp dword [rbp - 0x54], 2	      9884	option.c	FUNCTION_61	IF_2
0x400be5a	            0x7514	                           jne 0x400be70	      9884	option.c	FUNCTION_61	IF_2
0x400be5c	      0xbf00000000	                              mov edi, 0	      9885	option.c	FUNCTION_61	CALL_3
0x400be61	      0xe800000000	                          call 0x400be66	      9885	option.c	FUNCTION_61	CALL_3
0x400be66	          0x4889c7	                            mov rdi, rax	      9885	option.c	FUNCTION_61	CALL_3
0x400be69	      0xe800000000	                          call 0x400be6e	      9885	option.c	FUNCTION_61	CALL_3
0x400be6e	            0xeb4e	                           jmp 0x400bebe	      9885	option.c	FUNCTION_61	CALL_3
0x400be70	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be73	          0x83e002	                              and eax, 2	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be76	            0x85c0	                           test eax, eax	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be78	            0x7414	                            je 0x400be8e	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be7a	      0xbf00000000	                              mov edi, 0	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be7f	      0xe800000000	                          call 0x400be84	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be84	          0x4889c7	                            mov rdi, rax	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be87	      0xe800000000	                          call 0x400be8c	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be8c	            0xeb30	                           jmp 0x400bebe	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400be8e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x400be91	          0x83e004	                              and eax, 4	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x400be94	            0x85c0	                           test eax, eax	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x400be96	            0x7414	                            je 0x400beac	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x400be98	      0xbf00000000	                              mov edi, 0	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400be9d	      0xe800000000	                          call 0x400bea2	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400bea2	          0x4889c7	                            mov rdi, rax	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400bea5	      0xe800000000	                          call 0x400beaa	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400beaa	            0xeb12	                           jmp 0x400bebe	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400beac	      0xbf00000000	                              mov edi, 0	      9891	option.c	FUNCTION_61	CALL_9
0x400beb1	      0xe800000000	                          call 0x400beb6	      9891	option.c	FUNCTION_61	CALL_9
0x400beb6	          0x4889c7	                            mov rdi, rax	      9891	option.c	FUNCTION_61	CALL_9
0x400beb9	      0xe800000000	                          call 0x400bebe	      9891	option.c	FUNCTION_61	CALL_9
0x400bebe	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      9898	option.c	FUNCTION_61	FOR_1
0x400bec5	      0xe93f020000	                           jmp 0x400c109	      9898	option.c	FUNCTION_61	FOR_1
0x400beca	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      9903	option.c	FUNCTION_61	FOR_1
0x400bed1	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400bed9	      0xe92d010000	                           jmp 0x400c00b	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400bede	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      9906	option.c	FUNCTION_61	FOR_1	FOR_2
0x400bee6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9907	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_10
0x400beea	          0x4889c7	                            mov rdi, rax	      9907	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_10
0x400beed	      0xe87f0e0000	                   call sym.istermoption	      9907	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_10
0x400bef2	          0x8945d4	             mov dword [rbp - 0x2c], eax	      9907	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_10
0x400bef5	        0x837da800	               cmp dword [rbp - 0x58], 0	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400bef9	            0x7428	                            je 0x400bf23	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400befb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400beff	          0x8b4020	            mov eax, dword [rax + 0x20] 	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400bf02	            0x85c0	                           test eax, eax	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400bf04	            0x742d	                            je 0x400bf33	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400bf06	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400bf0a	            0x7527	                           jne 0x400bf33	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400bf0c	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400bf0f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400bf13	            0x89d6	                            mov esi, edx	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400bf15	          0x4889c7	                            mov rdi, rax	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400bf18	      0xe819130000	                 call sym.get_varp_scope	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400bf1d	        0x488945e0	             mov qword [rbp - 0x20], rax	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400bf21	            0xeb10	                           jmp 0x400bf33	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400bf23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400bf27	          0x4889c7	                            mov rdi, rax	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400bf2a	      0xe83d160000	                       call sym.get_varp	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400bf2f	        0x488945e0	             mov qword [rbp - 0x20], rax	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400bf33	      0x48837de000	               cmp qword [rbp - 0x20], 0	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf38	     0xf84c8000000	                            je 0x400c006	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf3e	        0x837dac02	               cmp dword [rbp - 0x54], 2	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf42	            0x7506	                           jne 0x400bf4a	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf44	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf48	            0x7531	                           jne 0x400bf7b	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf4a	        0x837dac01	               cmp dword [rbp - 0x54], 1	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf4e	            0x7506	                           jne 0x400bf56	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf50	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf54	            0x7425	                            je 0x400bf7b	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400bf56	        0x837dac00	               cmp dword [rbp - 0x54], 0	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf5a	     0xf85a6000000	                           jne 0x400c006	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf60	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf68	          0x4889d6	                            mov rsi, rdx	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf6b	          0x4889c7	                            mov rdi, rax	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf6e	      0xe8c0010000	                 call sym.optval_default	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf73	            0x85c0	                           test eax, eax	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf75	     0xf858b000000	                           jne 0x400c006	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x400bf7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400bf7f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400bf83	          0x83e001	                              and eax, 1	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400bf86	          0x4885c0	                           test rax, rax	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400bf89	            0x7409	                            je 0x400bf94	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400bf8b	    0xc745d0010000	               mov dword [rbp - 0x30], 1	      9921	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400bf92	            0xeb39	                           jmp 0x400bfcd	      9921	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400bf94	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400bf97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400bf9b	            0x89d6	                            mov esi, edx	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400bf9d	          0x4889c7	                            mov rdi, rax	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400bfa0	      0xe895450000	            call sym.option_value2string	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400bfa5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfa9	          0x488b00	                    mov rax, qword [rax]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfac	          0x4889c7	                            mov rdi, rax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfaf	      0xe800000000	                          call 0x400bfb4	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfb4	            0x89c3	                            mov ebx, eax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfb6	    0x488b05000000	            mov rax, qword [0x0400bfbd] 	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfbd	          0x4889c7	                            mov rdi, rax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfc0	      0xe800000000	                          call 0x400bfc5	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfc5	             0x1d8	                            add eax, ebx	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfc7	          0x83c001	                              add eax, 1	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfca	          0x8945d0	             mov dword [rbp - 0x30], eax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400bfcd	        0x837dd011	           cmp dword [rbp - 0x30], 0x11 	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfd1	            0x7f06	                            jg 0x400bfd9	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfd3	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfd7	            0x740c	                            je 0x400bfe5	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfd9	        0x837dd011	           cmp dword [rbp - 0x30], 0x11 	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfdd	            0x7e27	                           jle 0x400c006	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfdf	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9928	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfe3	            0x7521	                           jne 0x400c006	      9928	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfe5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfe8	          0x8d5001	                      lea edx, [rax + 1]	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfeb	          0x8955b8	             mov dword [rbp - 0x48], edx	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfee	            0x4898	                                    cdqe	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bff0	    0x488d14c50000	                        lea rdx, [rax*8]	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bff8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bffc	          0x4801c2	                            add rdx, rax	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400bfff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400c003	          0x488902	                    mov qword [rdx], rax	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400c006	      0x488345d840	           add qword [rbp - 0x28], 0x40 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400c00b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400c00f	          0x488b00	                    mov rax, qword [rax]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400c012	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400c015	     0xf85c3feffff	                           jne 0x400bede	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400c01b	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400c01f	            0x754c	                           jne 0x400c06d	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400c021	    0x488b0d000000	            mov rcx, qword [0x0400c028] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c028	    0x48ba67666666	          movabs rdx, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c032	          0x4889c8	                            mov rax, rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c035	          0x48f7ea	                                imul rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c038	        0x48c1fa03	                              sar rdx, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c03c	          0x4889c8	                            mov rax, rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c03f	        0x48c1f83f	                           sar rax, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c043	          0x4829c2	                            sub rdx, rax	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c046	          0x4889d0	                            mov rax, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c049	          0x8945c8	             mov dword [rbp - 0x38], eax	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400c04c	        0x837dc800	               cmp dword [rbp - 0x38], 0	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x400c050	            0x7507	                           jne 0x400c059	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x400c052	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x400c059	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c05c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c05f	             0x1d0	                            add eax, edx	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c061	          0x83e801	                              sub eax, 1	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c064	              0x99	                                     cdq	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c065	          0xf77dc8	                 idiv dword [rbp - 0x38]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c068	          0x8945c4	             mov dword [rbp - 0x3c], eax	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c06b	            0xeb06	                           jmp 0x400c073	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400c06d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9944	option.c	FUNCTION_61	FOR_1	ELSE_6
0x400c070	          0x8945c4	             mov dword [rbp - 0x3c], eax	      9944	option.c	FUNCTION_61	FOR_1	ELSE_6
0x400c073	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c07a	            0xeb70	                           jmp 0x400c0ec	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c07c	      0xbf0a000000	                            mov edi, 0xa	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x400c081	      0xe800000000	                          call 0x400c086	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x400c086	    0x8b0500000000	            mov eax, dword [0x0400c08c] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400c08c	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400c08e	            0x7574	                           jne 0x400c104	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400c090	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      9950	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c097	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c09a	          0x8945cc	             mov dword [rbp - 0x34], eax	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c09d	            0xeb37	                           jmp 0x400c0d6	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c09f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      9953	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0a2	    0x890500000000	            mov dword [0x0400c0a8], eax 	      9953	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0a8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0ab	            0x4898	                                    cdqe	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0ad	    0x488d14c50000	                        lea rdx, [rax*8]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0b9	          0x4801d0	                            add rax, rdx	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0bc	          0x488b00	                    mov rax, qword [rax]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0bf	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0c2	            0x89d6	                            mov esi, edx	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0c4	          0x4889c7	                            mov rdi, rax	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0c7	      0xe84a010000	                     call sym.showoneopt	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400c0cc	        0x8345b414	            add dword [rbp - 0x4c], 0x14	      9955	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0d0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0d3	           0x145cc	             add dword [rbp - 0x34], eax	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0d6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0d9	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0dc	            0x7cc1	                            jl 0x400c09f	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400c0de	      0xe800000000	                          call 0x400c0e3	      9957	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_19
0x400c0e3	      0xe800000000	                          call 0x400c0e8	      9958	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_20
0x400c0e8	        0x8345c001	               add dword [rbp - 0x40], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c0ec	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c0ef	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c0f2	            0x7d11	                           jge 0x400c105	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c0f4	    0x8b0500000000	            mov eax, dword [0x0400c0fa] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c0fa	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c0fc	     0xf847affffff	                            je 0x400c07c	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c102	            0xeb01	                           jmp 0x400c105	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400c104	              0x90	                                     nop	      9949	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400c105	        0x8345bc01	               add dword [rbp - 0x44], 1	      9898	option.c	FUNCTION_61	FOR_1
0x400c109	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9898	option.c	FUNCTION_61	FOR_1
0x400c10d	            0x7f0e	                            jg 0x400c11d	      9898	option.c	FUNCTION_61	FOR_1
0x400c10f	    0x8b0500000000	            mov eax, dword [0x0400c115] 	      9898	option.c	FUNCTION_61	FOR_1
0x400c115	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x400c117	     0xf84adfdffff	                            je 0x400beca	      9898	option.c	FUNCTION_61	FOR_1
0x400c11d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9961	option.c	FUNCTION_61	CALL_21
0x400c121	          0x4889c7	                            mov rdi, rax	      9961	option.c	FUNCTION_61	CALL_21
0x400c124	      0xe800000000	                          call 0x400c129	      9961	option.c	FUNCTION_61	CALL_21
0x400c129	            0xeb01	                           jmp 0x400c12c	      9961	option.c	FUNCTION_61	CALL_21
0x400c12b	              0x90	                                     nop	      9881	option.c	FUNCTION_61	IF_1
0x400c12c	        0x4883c458	                           add rsp, 0x58	      9962	option.c	FUNCTION_61
0x400c130	              0x5b	                                 pop rbx	      9962	option.c	FUNCTION_61
0x400c131	              0x5d	                                 pop rbp	      9962	option.c	FUNCTION_61
0x400c132	              0xc3	                                     ret	      9962	option.c	FUNCTION_61
set_title_defaults	ELSE,2:IF,4:SWITCH,0:CALL,4:DO,0:WHILE,0:functions,0:FOR,0	70
0x4001446	              0x55	                                push rbp	      4287	option.c	FUNCTION_14
0x4001447	          0x4889e5	                            mov rbp, rsp	      4287	option.c	FUNCTION_14
0x400144a	        0x4883ec10	                           sub rsp, 0x10	      4287	option.c	FUNCTION_14
0x400144e	      0xbf00000000	                              mov edi, 0	      4296	option.c	FUNCTION_14	CALL_1
0x4001453	      0xe84ca10000	                     call sym.findoption	      4296	option.c	FUNCTION_14	CALL_1
0x4001458	          0x8945f4	              mov dword [rbp - 0xc], eax	      4296	option.c	FUNCTION_14	CALL_1
0x400145b	        0x837df400	                cmp dword [rbp - 0xc], 0	      4297	option.c	FUNCTION_14	IF_1
0x400145f	            0x7867	                            js 0x40014c8	      4297	option.c	FUNCTION_14	IF_1
0x4001461	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4297	option.c	FUNCTION_14	IF_1
0x4001464	            0x4898	                                    cdqe	      4297	option.c	FUNCTION_14	IF_1
0x4001466	        0x48c1e006	                              shl rax, 6	      4297	option.c	FUNCTION_14	IF_1
0x400146a	    0x480500000000	                              add rax, 0	      4297	option.c	FUNCTION_14	IF_1
0x4001470	          0x488b00	                    mov rax, qword [rax]	      4297	option.c	FUNCTION_14	IF_1
0x4001473	      0x2500010000	                          and eax, 0x100	      4297	option.c	FUNCTION_14	IF_1
0x4001478	          0x4885c0	                           test rax, rax	      4297	option.c	FUNCTION_14	IF_1
0x400147b	            0x754b	                           jne 0x40014c8	      4297	option.c	FUNCTION_14	IF_1
0x400147d	    0x8b0500000000	            mov eax, dword [0x04001483] 	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4001483	            0x85c0	                           test eax, eax	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4001485	            0x750a	                           jne 0x4001491	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4001487	    0x8b0500000000	            mov eax, dword [0x0400148d] 	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x400148d	            0x85c0	                           test eax, eax	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x400148f	            0x740a	                            je 0x400149b	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4001491	    0x48c745f80100	                  mov qword [rbp - 8], 1	      4301	option.c	FUNCTION_14	IF_1	IF_2
0x4001499	            0xeb0b	                           jmp 0x40014a6	      4301	option.c	FUNCTION_14	IF_1	IF_2
0x400149b	      0xe800000000	                          call 0x40014a0	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x40014a0	            0x4898	                                    cdqe	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x40014a2	        0x488945f8	                mov qword [rbp - 8], rax	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x40014a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4305	option.c	FUNCTION_14	IF_1
0x40014aa	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4305	option.c	FUNCTION_14	IF_1
0x40014ad	          0x4863d2	                         movsxd rdx, edx	      4305	option.c	FUNCTION_14	IF_1
0x40014b0	        0x48c1e206	                              shl rdx, 6	      4305	option.c	FUNCTION_14	IF_1
0x40014b4	    0x4881c2000000	                              add rdx, 0	      4305	option.c	FUNCTION_14	IF_1
0x40014bb	          0x488902	                    mov qword [rdx], rax	      4305	option.c	FUNCTION_14	IF_1
0x40014be	        0x488b45f8	                mov rax, qword [rbp - 8]	      4306	option.c	FUNCTION_14	IF_1
0x40014c2	    0x890500000000	            mov dword [0x040014c8], eax 	      4306	option.c	FUNCTION_14	IF_1
0x40014c8	      0xbf00000000	                              mov edi, 0	      4308	option.c	FUNCTION_14	CALL_3
0x40014cd	      0xe8d2a00000	                     call sym.findoption	      4308	option.c	FUNCTION_14	CALL_3
0x40014d2	          0x8945f4	              mov dword [rbp - 0xc], eax	      4308	option.c	FUNCTION_14	CALL_3
0x40014d5	        0x837df400	                cmp dword [rbp - 0xc], 0	      4309	option.c	FUNCTION_14	IF_3
0x40014d9	            0x7867	                            js 0x4001542	      4309	option.c	FUNCTION_14	IF_3
0x40014db	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4309	option.c	FUNCTION_14	IF_3
0x40014de	            0x4898	                                    cdqe	      4309	option.c	FUNCTION_14	IF_3
0x40014e0	        0x48c1e006	                              shl rax, 6	      4309	option.c	FUNCTION_14	IF_3
0x40014e4	    0x480500000000	                              add rax, 0	      4309	option.c	FUNCTION_14	IF_3
0x40014ea	          0x488b00	                    mov rax, qword [rax]	      4309	option.c	FUNCTION_14	IF_3
0x40014ed	      0x2500010000	                          and eax, 0x100	      4309	option.c	FUNCTION_14	IF_3
0x40014f2	          0x4885c0	                           test rax, rax	      4309	option.c	FUNCTION_14	IF_3
0x40014f5	            0x754b	                           jne 0x4001542	      4309	option.c	FUNCTION_14	IF_3
0x40014f7	    0x8b0500000000	            mov eax, dword [0x040014fd] 	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40014fd	            0x85c0	                           test eax, eax	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40014ff	            0x750a	                           jne 0x400150b	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4001501	    0x8b0500000000	            mov eax, dword [0x04001507] 	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4001507	            0x85c0	                           test eax, eax	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4001509	            0x740a	                            je 0x4001515	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x400150b	    0x48c745f80100	                  mov qword [rbp - 8], 1	      4313	option.c	FUNCTION_14	IF_3	IF_4
0x4001513	            0xeb0b	                           jmp 0x4001520	      4313	option.c	FUNCTION_14	IF_3	IF_4
0x4001515	      0xe800000000	                          call 0x400151a	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x400151a	            0x4898	                                    cdqe	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x400151c	        0x488945f8	                mov qword [rbp - 8], rax	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x4001520	        0x488b45f8	                mov rax, qword [rbp - 8]	      4317	option.c	FUNCTION_14	IF_3
0x4001524	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4317	option.c	FUNCTION_14	IF_3
0x4001527	          0x4863d2	                         movsxd rdx, edx	      4317	option.c	FUNCTION_14	IF_3
0x400152a	        0x48c1e206	                              shl rdx, 6	      4317	option.c	FUNCTION_14	IF_3
0x400152e	    0x4881c2000000	                              add rdx, 0	      4317	option.c	FUNCTION_14	IF_3
0x4001535	          0x488902	                    mov qword [rdx], rax	      4317	option.c	FUNCTION_14	IF_3
0x4001538	        0x488b45f8	                mov rax, qword [rbp - 8]	      4318	option.c	FUNCTION_14	IF_3
0x400153c	    0x890500000000	            mov dword [0x04001542], eax 	      4318	option.c	FUNCTION_14	IF_3
0x4001542	              0x90	                                     nop	      4320	option.c	FUNCTION_14
0x4001543	              0xc9	                                   leave	      4320	option.c	FUNCTION_14
0x4001544	              0xc3	                                     ret	      4320	option.c	FUNCTION_14
clear_termoptions	ELSE,0:IF,1:SWITCH,0:CALL,5:DO,0:WHILE,0:functions,0:FOR,0	15
0x400cb17	              0x55	                                push rbp	     10278	option.c	FUNCTION_69
0x400cb18	          0x4889e5	                            mov rbp, rsp	     10278	option.c	FUNCTION_69
0x400cb1b	      0xbf00000000	                              mov edi, 0	     10285	option.c	FUNCTION_69	CALL_1
0x400cb20	      0xe800000000	                          call 0x400cb25	     10285	option.c	FUNCTION_69	CALL_1
0x400cb25	      0xbf03000000	                              mov edi, 3	     10288	option.c	FUNCTION_69	CALL_2
0x400cb2a	      0xe800000000	                          call 0x400cb2f	     10288	option.c	FUNCTION_69	CALL_2
0x400cb2f	    0x8b0500000000	            mov eax, dword [0x0400cb35] 	     10293	option.c	FUNCTION_69	IF_1
0x400cb35	            0x85c0	                           test eax, eax	     10293	option.c	FUNCTION_69	IF_1
0x400cb37	            0x7405	                            je 0x400cb3e	     10293	option.c	FUNCTION_69	IF_1
0x400cb39	      0xe800000000	                          call 0x400cb3e	     10294	option.c	FUNCTION_69	CALL_3
0x400cb3e	      0xe800000000	                          call 0x400cb43	     10296	option.c	FUNCTION_69	CALL_4
0x400cb43	      0xe800000000	                          call 0x400cb48	     10298	option.c	FUNCTION_69	CALL_5
0x400cb48	              0x90	                                     nop	     10299	option.c	FUNCTION_69
0x400cb49	              0x5d	                                 pop rbp	     10299	option.c	FUNCTION_69
0x400cb4a	              0xc3	                                     ret	     10299	option.c	FUNCTION_69
check_ff_value	ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	11
0x4011940	              0x55	                                push rbp	     12513	option.c	FUNCTION_112
0x4011941	          0x4889e5	                            mov rbp, rsp	     12513	option.c	FUNCTION_112
0x4011944	        0x4883ec10	                           sub rsp, 0x10	     12513	option.c	FUNCTION_112
0x4011948	        0x48897df8	                mov qword [rbp - 8], rdi	     12513	option.c	FUNCTION_112
0x401194c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12514	option.c	FUNCTION_112	CALL_1
0x4011950	      0xba00000000	                              mov edx, 0	     12514	option.c	FUNCTION_112	CALL_1
0x4011955	      0xbe00000000	                              mov esi, 0	     12514	option.c	FUNCTION_112	CALL_1
0x401195a	          0x4889c7	                            mov rdi, rax	     12514	option.c	FUNCTION_112	CALL_1
0x401195d	      0xe8d1f9ffff	              call sym.check_opt_strings	     12514	option.c	FUNCTION_112	CALL_1
0x4011962	              0xc9	                                   leave	     12515	option.c	FUNCTION_112
0x4011963	              0xc3	                                     ret	     12515	option.c	FUNCTION_112
set_init_3	ELSE,4:IF,17:SWITCH,0:CALL,38:DO,0:WHILE,0:functions,0:FOR,0	171
0x4000f5d	              0x55	                                push rbp	      4037	option.c	FUNCTION_10
0x4000f5e	          0x4889e5	                            mov rbp, rsp	      4037	option.c	FUNCTION_10
0x4000f61	        0x4883ec20	                           sub rsp, 0x20	      4037	option.c	FUNCTION_10
0x4000f65	      0xbf00000000	                              mov edi, 0	      4052	option.c	FUNCTION_10	CALL_1
0x4000f6a	      0xe835a60000	                     call sym.findoption	      4052	option.c	FUNCTION_10	CALL_1
0x4000f6f	          0x8945ec	             mov dword [rbp - 0x14], eax	      4052	option.c	FUNCTION_10	CALL_1
0x4000f72	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4053	option.c	FUNCTION_10	IF_1
0x4000f76	            0x7909	                           jns 0x4000f81	      4053	option.c	FUNCTION_10	IF_1
0x4000f78	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4054	option.c	FUNCTION_10	IF_1
0x4000f7f	            0xeb23	                           jmp 0x4000fa4	      4054	option.c	FUNCTION_10	IF_1
0x4000f81	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f84	            0x4898	                                    cdqe	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f86	        0x48c1e006	                              shl rax, 6	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f8a	    0x480500000000	                              add rax, 0	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f90	          0x488b00	                    mov rax, qword [rax]	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f93	      0x2500010000	                          and eax, 0x100	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f98	          0x4885c0	                           test rax, rax	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f9b	           0xf94c0	                                 sete al	      4056	option.c	FUNCTION_10	ELSE_1
0x4000f9e	           0xfb6c0	                           movzx eax, al	      4056	option.c	FUNCTION_10	ELSE_1
0x4000fa1	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4056	option.c	FUNCTION_10	ELSE_1
0x4000fa4	      0xbf00000000	                              mov edi, 0	      4058	option.c	FUNCTION_10	CALL_2
0x4000fa9	      0xe8f6a50000	                     call sym.findoption	      4058	option.c	FUNCTION_10	CALL_2
0x4000fae	          0x8945f0	             mov dword [rbp - 0x10], eax	      4058	option.c	FUNCTION_10	CALL_2
0x4000fb1	        0x837df000	               cmp dword [rbp - 0x10], 0	      4059	option.c	FUNCTION_10	IF_2
0x4000fb5	            0x7909	                           jns 0x4000fc0	      4059	option.c	FUNCTION_10	IF_2
0x4000fb7	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      4060	option.c	FUNCTION_10	IF_2
0x4000fbe	            0xeb23	                           jmp 0x4000fe3	      4060	option.c	FUNCTION_10	IF_2
0x4000fc0	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fc3	            0x4898	                                    cdqe	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fc5	        0x48c1e006	                              shl rax, 6	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fc9	    0x480500000000	                              add rax, 0	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fcf	          0x488b00	                    mov rax, qword [rax]	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fd2	      0x2500010000	                          and eax, 0x100	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fd7	          0x4885c0	                           test rax, rax	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fda	           0xf94c0	                                 sete al	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fdd	           0xfb6c0	                           movzx eax, al	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fe0	          0x8945e8	             mov dword [rbp - 0x18], eax	      4062	option.c	FUNCTION_10	ELSE_2
0x4000fe3	      0xe800000000	                          call 0x4000fe8	      4064	option.c	FUNCTION_10	CALL_3
0x4000fe8	        0x488945f8	                mov qword [rbp - 8], rax	      4064	option.c	FUNCTION_10	CALL_3
0x4000fec	      0x48837df800	                  cmp qword [rbp - 8], 0	      4065	option.c	FUNCTION_10	IF_3
0x4000ff1	     0xf849b010000	                            je 0x4001192	      4065	option.c	FUNCTION_10	IF_3
0x4000ff7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000ffb	      0xbe00000000	                              mov esi, 0	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001000	          0x4889c7	                            mov rdi, rax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001003	      0xe800000000	                          call 0x4001008	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001008	            0x85c0	                           test eax, eax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400100a	            0x7415	                            je 0x4001021	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400100c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4001010	      0xbe00000000	                              mov esi, 0	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4001015	          0x4889c7	                            mov rdi, rax	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4001018	      0xe800000000	                          call 0x400101d	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x400101d	            0x85c0	                           test eax, eax	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x400101f	            0x7561	                           jne 0x4001082	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4001021	        0x837de800	               cmp dword [rbp - 0x18], 0	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4001025	            0x7426	                            je 0x400104d	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4001027	    0x48c705000000	               mov qword [0x04001032], 0	      4085	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4001032	    0x488b05000000	            mov rax, qword [0x04001039] 	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4001039	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400103c	          0x4863d2	                         movsxd rdx, edx	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400103f	        0x48c1e206	                              shl rdx, 6	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4001043	    0x4881c2000000	                              add rdx, 0	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400104a	          0x488902	                    mov qword [rdx], rax	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400104d	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4001051	     0xf842f010000	                            je 0x4001186	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4001057	    0x48c705000000	               mov qword [0x04001062], 0	      4092	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4001062	    0x488b05000000	            mov rax, qword [0x04001069] 	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4001069	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400106c	          0x4863d2	                         movsxd rdx, edx	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400106f	        0x48c1e206	                              shl rdx, 6	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4001073	    0x4881c2000000	                              add rdx, 0	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400107a	          0x488902	                    mov qword [rdx], rax	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400107d	      0xe904010000	                           jmp 0x4001186	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4001082	        0x488b45f8	                mov rax, qword [rbp - 8]	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x4001086	      0xbe00000000	                              mov esi, 0	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x400108b	          0x4889c7	                            mov rdi, rax	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x400108e	      0xe800000000	                          call 0x4001093	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x4001093	            0x85c0	                           test eax, eax	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x4001095	     0xf8493000000	                            je 0x400112e	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x400109b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x400109f	      0xbe00000000	                              mov esi, 0	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40010a4	          0x4889c7	                            mov rdi, rax	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40010a7	      0xe800000000	                          call 0x40010ac	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40010ac	            0x85c0	                           test eax, eax	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40010ae	            0x747e	                            je 0x400112e	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40010b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40010b4	      0xbe00000000	                              mov esi, 0	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40010b9	          0x4889c7	                            mov rdi, rax	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40010bc	      0xe800000000	                          call 0x40010c1	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40010c1	            0x85c0	                           test eax, eax	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40010c3	            0x7469	                            je 0x400112e	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40010c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40010c9	      0xbe00000000	                              mov esi, 0	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40010ce	          0x4889c7	                            mov rdi, rax	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40010d1	      0xe800000000	                          call 0x40010d6	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40010d6	            0x85c0	                           test eax, eax	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40010d8	            0x7454	                            je 0x400112e	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40010da	        0x488b45f8	                mov rax, qword [rbp - 8]	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40010de	      0xbe00000000	                              mov esi, 0	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40010e3	          0x4889c7	                            mov rdi, rax	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40010e6	      0xe800000000	                          call 0x40010eb	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40010eb	            0x85c0	                           test eax, eax	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40010ed	            0x743f	                            je 0x400112e	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40010ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40010f3	      0xbe00000000	                              mov esi, 0	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40010f8	          0x4889c7	                            mov rdi, rax	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40010fb	      0xe800000000	                          call 0x4001100	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4001100	            0x85c0	                           test eax, eax	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4001102	            0x742a	                            je 0x400112e	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4001104	        0x488b45f8	                mov rax, qword [rbp - 8]	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x4001108	      0xbe00000000	                              mov esi, 0	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x400110d	          0x4889c7	                            mov rdi, rax	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x4001110	      0xe800000000	                          call 0x4001115	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x4001115	            0x85c0	                           test eax, eax	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x4001117	            0x7415	                            je 0x400112e	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x4001119	        0x488b45f8	                mov rax, qword [rbp - 8]	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x400111d	      0xbe00000000	                              mov esi, 0	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x4001122	          0x4889c7	                            mov rdi, rax	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x4001125	      0xe800000000	                          call 0x400112a	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x400112a	            0x85c0	                           test eax, eax	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x400112c	            0x7558	                           jne 0x4001186	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x400112e	        0x837de800	               cmp dword [rbp - 0x18], 0	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4001132	            0x7426	                            je 0x400115a	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4001134	    0x48c705000000	               mov qword [0x0400113f], 0	      4125	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x400113f	    0x488b05000000	            mov rax, qword [0x04001146] 	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4001146	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4001149	          0x4863d2	                         movsxd rdx, edx	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x400114c	        0x48c1e206	                              shl rdx, 6	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4001150	    0x4881c2000000	                              add rdx, 0	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4001157	          0x488902	                    mov qword [rdx], rax	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x400115a	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x400115e	            0x7426	                            je 0x4001186	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4001160	    0x48c705000000	               mov qword [0x0400116b], 0	      4132	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x400116b	    0x488b05000000	            mov rax, qword [0x04001172] 	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4001172	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4001175	          0x4863d2	                         movsxd rdx, edx	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4001178	        0x48c1e206	                              shl rdx, 6	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x400117c	    0x4881c2000000	                              add rdx, 0	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4001183	          0x488902	                    mov qword [rdx], rax	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4001186	        0x488b45f8	                mov rax, qword [rbp - 8]	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x400118a	          0x4889c7	                            mov rdi, rax	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x400118d	      0xe800000000	                          call 0x4001192	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x4001192	    0x488b05000000	            mov rax, qword [0x04001199] 	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x4001199	          0x488b00	                    mov rax, qword [rax]	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x400119c	        0x4883f801	                              cmp rax, 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40011a0	            0x7551	                           jne 0x40011f3	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40011a2	      0xbf01000000	                              mov edi, 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40011a7	      0xe800000000	                          call 0x40011ac	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40011ac	           0xfb600	                   movzx eax, byte [rax]	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40011af	            0x84c0	                             test al, al	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40011b1	            0x7540	                           jne 0x40011f3	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40011b3	      0xbf00000000	                              mov edi, 0	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x40011b8	      0xe8e7a30000	                     call sym.findoption	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x40011bd	          0x8945f4	              mov dword [rbp - 0xc], eax	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x40011c0	        0x837df400	                cmp dword [rbp - 0xc], 0	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011c4	            0x782d	                            js 0x40011f3	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011c6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011c9	            0x4898	                                    cdqe	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011cb	        0x48c1e006	                              shl rax, 6	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011cf	    0x480500000000	                              add rax, 0	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011d5	          0x488b00	                    mov rax, qword [rax]	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011d8	      0x2500010000	                          and eax, 0x100	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011dd	          0x4885c0	                           test rax, rax	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011e0	            0x7411	                            je 0x40011f3	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40011e2	      0xe800000000	                          call 0x40011e7	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40011e7	      0xbe04000000	                              mov esi, 4	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40011ec	            0x89c7	                            mov edi, eax	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40011ee	      0xe800000000	                          call 0x40011f3	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40011f3	      0xe800000000	                          call 0x40011f8	      4211	option.c	FUNCTION_10	CALL_38
0x40011f8	              0x90	                                     nop	      4213	option.c	FUNCTION_10
0x40011f9	              0xc9	                                   leave	      4213	option.c	FUNCTION_10
0x40011fa	              0xc3	                                     ret	      4213	option.c	FUNCTION_10
did_set_title	ELSE,1:IF,4:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	27
0x4003ceb	              0x55	                                push rbp	      5379	option.c	FUNCTION_21
0x4003cec	          0x4889e5	                            mov rbp, rsp	      5379	option.c	FUNCTION_21
0x4003cef	        0x4883ec10	                           sub rsp, 0x10	      5379	option.c	FUNCTION_21
0x4003cf3	          0x897dfc	                mov dword [rbp - 4], edi	      5379	option.c	FUNCTION_21
0x4003cf6	    0x8b0500000000	            mov eax, dword [0x04003cfc] 	      5380	option.c	FUNCTION_21	IF_1
0x4003cfc	          0x83f802	                              cmp eax, 2	      5380	option.c	FUNCTION_21	IF_1
0x4003cff	            0x743f	                            je 0x4003d40	      5380	option.c	FUNCTION_21	IF_1
0x4003d01	    0x8b0500000000	            mov eax, dword [0x04003d07] 	      5382	option.c	FUNCTION_21	IF_1
0x4003d07	            0x85c0	                           test eax, eax	      5382	option.c	FUNCTION_21	IF_1
0x4003d09	            0x7535	                           jne 0x4003d40	      5382	option.c	FUNCTION_21	IF_1
0x4003d0b	      0xe800000000	                          call 0x4003d10	      5386	option.c	FUNCTION_21	IF_1	CALL_1
0x4003d10	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5387	option.c	FUNCTION_21	IF_1	IF_2
0x4003d14	            0x7416	                            je 0x4003d2c	      5387	option.c	FUNCTION_21	IF_1	IF_2
0x4003d16	    0x8b0500000000	            mov eax, dword [0x04003d1c] 	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4003d1c	            0x85c0	                           test eax, eax	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4003d1e	            0x7520	                           jne 0x4003d40	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4003d20	      0xbf02000000	                              mov edi, 2	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4003d25	      0xe800000000	                          call 0x4003d2a	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4003d2a	            0xeb14	                           jmp 0x4003d40	      5398	option.c	FUNCTION_21
0x4003d2c	    0x8b0500000000	            mov eax, dword [0x04003d32] 	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x4003d32	            0x85c0	                           test eax, eax	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x4003d34	            0x750a	                           jne 0x4003d40	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x4003d36	      0xbf01000000	                              mov edi, 1	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x4003d3b	      0xe800000000	                          call 0x4003d40	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x4003d40	              0x90	                                     nop	      5398	option.c	FUNCTION_21
0x4003d41	              0xc9	                                   leave	      5398	option.c	FUNCTION_21
0x4003d42	              0xc3	                                     ret	      5398	option.c	FUNCTION_21
set_options_default	ELSE,0:IF,1:SWITCH,0:CALL,5:DO,0:WHILE,0:functions,0:FOR,1	83
0x4000ab0	              0x55	                                push rbp	      3837	option.c	FUNCTION_3
0x4000ab1	          0x4889e5	                            mov rbp, rsp	      3837	option.c	FUNCTION_3
0x4000ab4	        0x4883ec30	                           sub rsp, 0x30	      3837	option.c	FUNCTION_3
0x4000ab8	          0x897ddc	             mov dword [rbp - 0x24], edi	      3837	option.c	FUNCTION_3
0x4000abb	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000ac2	      0xe987000000	                           jmp 0x4000b4e	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000ac7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000aca	            0x4898	                                    cdqe	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000acc	        0x48c1e006	                              shl rax, 6	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000ad0	    0x480500000000	                              add rax, 0	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000ad6	          0x488b00	                    mov rax, qword [rax]	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000ad9	          0x83e040	                           and eax, 0x40	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000adc	          0x4885c0	                           test rax, rax	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000adf	            0x7569	                           jne 0x4000b4a	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4000ae1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3845	option.c	FUNCTION_3	FOR_1	IF_1
0x4000ae5	            0x744e	                            je 0x4000b35	      3845	option.c	FUNCTION_3	FOR_1	IF_1
0x4000ae7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x4000aea	            0x4898	                                    cdqe	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x4000aec	        0x48c1e006	                              shl rax, 6	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x4000af0	    0x480500000000	                              add rax, 0	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x4000af6	          0x488b00	                    mov rax, qword [rax]	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x4000af9	    0x483d00000000	                              cmp rax, 0	      3846	option.c	FUNCTION_3	FOR_1	IF_1
0x4000aff	            0x7449	                            je 0x4000b4a	      3846	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b01	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3851	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b04	            0x4898	                                    cdqe	      3851	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b06	        0x48c1e006	                              shl rax, 6	      3851	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b0a	    0x480500000000	                              add rax, 0	      3851	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b10	          0x488b00	                    mov rax, qword [rax]	      3851	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b13	    0x483d00000000	                              cmp rax, 0	      3851	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b19	            0x742f	                            je 0x4000b4a	      3851	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b1b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b1e	            0x4898	                                    cdqe	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b20	        0x48c1e006	                              shl rax, 6	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b24	    0x480500000000	                              add rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b2a	          0x488b00	                    mov rax, qword [rax]	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b2d	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b33	            0x7415	                            je 0x4000b4a	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b35	    0x8b1500000000	            mov edx, dword [0x04000b3b] 	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b3b	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b3e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b41	            0x89ce	                            mov esi, ecx	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b43	            0x89c7	                            mov edi, eax	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b45	      0xe89efcffff	             call sym.set_option_default	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4000b4a	        0x8345ec01	               add dword [rbp - 0x14], 1	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b4e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b51	            0x4898	                                    cdqe	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b53	        0x48c1e006	                              shl rax, 6	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b57	    0x480500000000	                              add rax, 0	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b5d	          0x4889c7	                            mov rdi, rax	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b60	      0xe80cc20000	                   call sym.istermoption	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b65	            0x85c0	                           test eax, eax	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b67	     0xf845affffff	                            je 0x4000ac7	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4000b6d	    0x488b05000000	            mov rax, qword [0x04000b74] 	      3860	option.c	FUNCTION_3	CALL_3
0x4000b74	        0x488945f8	                mov qword [rbp - 8], rax	      3860	option.c	FUNCTION_3	CALL_3
0x4000b78	            0xeb4e	                           jmp 0x4000bc8	      3860	option.c	FUNCTION_3	CALL_3
0x4000b7a	    0x488b05000000	            mov rax, qword [0x04000b81] 	      3860	option.c	FUNCTION_3	CALL_3
0x4000b81	        0x483945f8	                cmp qword [rbp - 8], rax	      3860	option.c	FUNCTION_3	CALL_3
0x4000b85	            0x740a	                            je 0x4000b91	      3860	option.c	FUNCTION_3	CALL_3
0x4000b87	        0x488b45f8	                mov rax, qword [rbp - 8]	      3860	option.c	FUNCTION_3	CALL_3
0x4000b8b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x4000b8f	            0xeb07	                           jmp 0x4000b98	      3860	option.c	FUNCTION_3	CALL_3
0x4000b91	    0x488b05000000	            mov rax, qword [0x04000b98] 	      3860	option.c	FUNCTION_3	CALL_3
0x4000b98	        0x488945f0	             mov qword [rbp - 0x10], rax	      3860	option.c	FUNCTION_3	CALL_3
0x4000b9c	            0xeb18	                           jmp 0x4000bb6	      3860	option.c	FUNCTION_3	CALL_3
0x4000b9e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3861	option.c	FUNCTION_3	CALL_4
0x4000ba2	          0x4889c7	                            mov rdi, rax	      3861	option.c	FUNCTION_3	CALL_4
0x4000ba5	      0xe800000000	                          call 0x4000baa	      3861	option.c	FUNCTION_3	CALL_4
0x4000baa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3860	option.c	FUNCTION_3	CALL_3
0x4000bae	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x4000bb2	        0x488945f0	             mov qword [rbp - 0x10], rax	      3860	option.c	FUNCTION_3	CALL_3
0x4000bb6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3860	option.c	FUNCTION_3	CALL_3
0x4000bbb	            0x75e1	                           jne 0x4000b9e	      3860	option.c	FUNCTION_3	CALL_3
0x4000bbd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3860	option.c	FUNCTION_3	CALL_3
0x4000bc1	          0x488b00	                    mov rax, qword [rax]	      3860	option.c	FUNCTION_3	CALL_3
0x4000bc4	        0x488945f8	                mov qword [rbp - 8], rax	      3860	option.c	FUNCTION_3	CALL_3
0x4000bc8	      0x48837df800	                  cmp qword [rbp - 8], 0	      3860	option.c	FUNCTION_3	CALL_3
0x4000bcd	            0x75ab	                           jne 0x4000b7a	      3860	option.c	FUNCTION_3	CALL_3
0x4000bcf	    0x488b05000000	            mov rax, qword [0x04000bd6] 	      3863	option.c	FUNCTION_3	CALL_5
0x4000bd6	          0x4889c7	                            mov rdi, rax	      3863	option.c	FUNCTION_3	CALL_5
0x4000bd9	      0xe800000000	                          call 0x4000bde	      3863	option.c	FUNCTION_3	CALL_5
0x4000bde	              0x90	                                     nop	      3865	option.c	FUNCTION_3
0x4000bdf	              0xc9	                                   leave	      3865	option.c	FUNCTION_3
0x4000be0	              0xc3	                                     ret	      3865	option.c	FUNCTION_3
save_file_ff	ELSE,0:IF,1:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	45
0x4011732	              0x55	                                push rbp	     12457	option.c	FUNCTION_110
0x4011733	          0x4889e5	                            mov rbp, rsp	     12457	option.c	FUNCTION_110
0x4011736	        0x4883ec10	                           sub rsp, 0x10	     12457	option.c	FUNCTION_110
0x401173a	        0x48897df8	                mov qword [rbp - 8], rdi	     12457	option.c	FUNCTION_110
0x401173e	        0x488b45f8	                mov rax, qword [rbp - 8]	     12458	option.c	FUNCTION_110
0x4011742	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	     12458	option.c	FUNCTION_110
0x4011749	           0xfb600	                   movzx eax, byte [rax]	     12458	option.c	FUNCTION_110
0x401174c	           0xfb6d0	                           movzx edx, al	     12458	option.c	FUNCTION_110
0x401174f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12458	option.c	FUNCTION_110
0x4011753	    0x899004170000	          mov dword [rax + 0x1704], edx 	     12458	option.c	FUNCTION_110
0x4011759	        0x488b45f8	                mov rax, qword [rbp - 8]	     12459	option.c	FUNCTION_110
0x401175d	    0x8b9070140000	          mov edx, dword [rax + 0x1470] 	     12459	option.c	FUNCTION_110
0x4011763	        0x488b45f8	                mov rax, qword [rbp - 8]	     12459	option.c	FUNCTION_110
0x4011767	    0x899000170000	          mov dword [rax + 0x1700], edx 	     12459	option.c	FUNCTION_110
0x401176d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12461	option.c	FUNCTION_110
0x4011771	    0x8b900c140000	          mov edx, dword [rax + 0x140c] 	     12461	option.c	FUNCTION_110
0x4011777	        0x488b45f8	                mov rax, qword [rbp - 8]	     12461	option.c	FUNCTION_110
0x401177b	    0x899014170000	          mov dword [rax + 0x1714], edx 	     12461	option.c	FUNCTION_110
0x4011781	        0x488b45f8	                mov rax, qword [rbp - 8]	     12464	option.c	FUNCTION_110	IF_1
0x4011785	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	     12464	option.c	FUNCTION_110	IF_1
0x401178c	          0x4885c0	                           test rax, rax	     12464	option.c	FUNCTION_110	IF_1
0x401178f	            0x7425	                            je 0x40117b6	     12464	option.c	FUNCTION_110	IF_1
0x4011791	        0x488b45f8	                mov rax, qword [rbp - 8]	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x4011795	    0x488b90881400	          mov rdx, qword [rax + 0x1488] 	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x401179c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x40117a0	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x40117a7	          0x4889d6	                            mov rsi, rdx	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x40117aa	          0x4889c7	                            mov rdi, rax	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x40117ad	      0xe800000000	                          call 0x40117b2	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x40117b2	            0x85c0	                           test eax, eax	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x40117b4	            0x7434	                            je 0x40117ea	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x40117b6	        0x488b45f8	                mov rax, qword [rbp - 8]	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x40117ba	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x40117c1	          0x4889c7	                            mov rdi, rax	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x40117c4	      0xe800000000	                          call 0x40117c9	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x40117c9	        0x488b45f8	                mov rax, qword [rbp - 8]	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x40117cd	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x40117d4	          0x4889c7	                            mov rdi, rax	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x40117d7	      0xe800000000	                          call 0x40117dc	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x40117dc	          0x4889c2	                            mov rdx, rax	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x40117df	        0x488b45f8	                mov rax, qword [rbp - 8]	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x40117e3	    0x488990081700	          mov qword [rax + 0x1708], rdx 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x40117ea	              0x90	                                     nop	     12471	option.c	FUNCTION_110
0x40117eb	              0xc9	                                   leave	     12471	option.c	FUNCTION_110
0x40117ec	              0xc3	                                     ret	     12471	option.c	FUNCTION_110
free_termoptions	ELSE,0:IF,3:SWITCH,0:CALL,4:DO,0:WHILE,0:functions,0:FOR,1	51
0x400cb4b	              0x55	                                push rbp	     10303	option.c	FUNCTION_70
0x400cb4c	          0x4889e5	                            mov rbp, rsp	     10303	option.c	FUNCTION_70
0x400cb4f	        0x4883ec10	                           sub rsp, 0x10	     10303	option.c	FUNCTION_70
0x400cb53	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10306	option.c	FUNCTION_70	FOR_1
0x400cb5b	      0xe990000000	                           jmp 0x400cbf0	     10306	option.c	FUNCTION_70	FOR_1
0x400cb60	        0x488b45f8	                mov rax, qword [rbp - 8]	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400cb64	          0x4889c7	                            mov rdi, rax	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400cb67	      0xe805020000	                   call sym.istermoption	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400cb6c	            0x85c0	                           test eax, eax	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400cb6e	            0x747b	                            je 0x400cbeb	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x400cb70	        0x488b45f8	                mov rax, qword [rbp - 8]	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x400cb74	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x400cb78	          0x83e008	                              and eax, 8	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x400cb7b	          0x4885c0	                           test rax, rax	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x400cb7e	            0x7413	                            je 0x400cb93	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x400cb80	        0x488b45f8	                mov rax, qword [rbp - 8]	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x400cb84	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x400cb88	          0x488b00	                    mov rax, qword [rax]	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x400cb8b	          0x4889c7	                            mov rdi, rax	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x400cb8e	      0xe800000000	                          call 0x400cb93	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x400cb93	        0x488b45f8	                mov rax, qword [rbp - 8]	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x400cb97	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x400cb9b	      0x2580000000	                           and eax, 0x80	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x400cba0	          0x4885c0	                           test rax, rax	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x400cba3	            0x7410	                            je 0x400cbb5	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x400cba5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x400cba9	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x400cbad	          0x4889c7	                            mov rdi, rax	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x400cbb0	      0xe800000000	                          call 0x400cbb5	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x400cbb5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbb9	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbbd	    0x488b15000000	            mov rdx, qword [0x0400cbc4] 	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbc4	          0x488910	                    mov qword [rax], rdx	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbc7	    0x488b15000000	            mov rdx, qword [0x0400cbce] 	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbce	        0x488b45f8	                mov rax, qword [rbp - 8]	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbd2	        0x48895028	             mov qword [rax + 0x28], rdx	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbd6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbda	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbde	            0x2477	                            and al, 0x77	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbe0	          0x4889c2	                            mov rdx, rax	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbe3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbe7	        0x48895010	             mov qword [rax + 0x10], rdx	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400cbeb	      0x488345f840	               add qword [rbp - 8], 0x40	     10306	option.c	FUNCTION_70	FOR_1
0x400cbf0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10306	option.c	FUNCTION_70	FOR_1
0x400cbf4	          0x488b00	                    mov rax, qword [rax]	     10306	option.c	FUNCTION_70	FOR_1
0x400cbf7	          0x4885c0	                           test rax, rax	     10306	option.c	FUNCTION_70	FOR_1
0x400cbfa	     0xf8560ffffff	                           jne 0x400cb60	     10306	option.c	FUNCTION_70	FOR_1
0x400cc00	      0xe800000000	                          call 0x400cc05	     10317	option.c	FUNCTION_70	CALL_4
0x400cc05	              0x90	                                     nop	     10318	option.c	FUNCTION_70
0x400cc06	              0xc9	                                   leave	     10318	option.c	FUNCTION_70
0x400cc07	              0xc3	                                     ret	     10318	option.c	FUNCTION_70
set_chars_option	ELSE,3:IF,15:SWITCH,0:CALL,6:DO,0:WHILE,1:functions,0:FOR,3	215
0x400889d	              0x55	                                push rbp	      7751	option.c	FUNCTION_43
0x400889e	          0x4889e5	                            mov rbp, rsp	      7751	option.c	FUNCTION_43
0x40088a1	        0x4883ec50	                           sub rsp, 0x50	      7751	option.c	FUNCTION_43
0x40088a5	        0x48897db8	             mov qword [rbp - 0x48], rdi	      7751	option.c	FUNCTION_43
0x40088a9	    0x64488b042528	                mov rax, qword fs:[0x28]	      7751	option.c	FUNCTION_43
0x40088b2	        0x488945f8	                mov qword [rbp - 8], rax	      7751	option.c	FUNCTION_43
0x40088b6	            0x31c0	                            xor eax, eax	      7751	option.c	FUNCTION_43
0x40088b8	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      7754	option.c	FUNCTION_43
0x40088bf	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      7785	option.c	FUNCTION_43	IF_1
0x40088c7	            0x7511	                           jne 0x40088da	      7785	option.c	FUNCTION_43	IF_1
0x40088c9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7787	option.c	FUNCTION_43	IF_1
0x40088d1	    0xc745d0080000	               mov dword [rbp - 0x30], 8	      7788	option.c	FUNCTION_43	IF_1
0x40088d8	            0xeb0f	                           jmp 0x40088e9	      7788	option.c	FUNCTION_43	IF_1
0x40088da	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7792	option.c	FUNCTION_43	ELSE_1
0x40088e2	    0xc745d0050000	               mov dword [rbp - 0x30], 5	      7793	option.c	FUNCTION_43	ELSE_1
0x40088e9	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      7797	option.c	FUNCTION_43	FOR_1
0x40088f0	      0xe98d020000	                           jmp 0x4008b82	      7797	option.c	FUNCTION_43	FOR_1
0x40088f5	        0x837dc800	               cmp dword [rbp - 0x38], 0	      7799	option.c	FUNCTION_43	FOR_1	IF_2
0x40088f9	            0x7e7e	                           jle 0x4008979	      7799	option.c	FUNCTION_43	FOR_1	IF_2
0x40088fb	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4008902	            0xeb4d	                           jmp 0x4008951	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4008904	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008907	            0x4898	                                    cdqe	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008909	        0x48c1e004	                              shl rax, 4	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400890d	          0x4889c2	                            mov rdx, rax	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008910	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008914	          0x4801d0	                            add rax, rdx	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008917	          0x488b00	                    mov rax, qword [rax]	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400891a	          0x4885c0	                           test rax, rax	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400891d	            0x742e	                            je 0x400894d	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400891f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008922	            0x4898	                                    cdqe	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008924	        0x48c1e004	                              shl rax, 4	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008928	          0x4889c2	                            mov rdx, rax	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400892b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400892f	          0x4801d0	                            add rax, rdx	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008932	          0x488b00	                    mov rax, qword [rax]	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008935	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400893d	            0x7507	                           jne 0x4008946	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400893f	      0xba00000000	                              mov edx, 0	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008944	            0xeb05	                           jmp 0x400894b	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4008946	      0xba20000000	                           mov edx, 0x20	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400894b	            0x8910	                    mov dword [rax], edx	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x400894d	        0x8345cc01	               add dword [rbp - 0x34], 1	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4008951	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4008954	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4008957	            0x7cab	                            jl 0x4008904	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4008959	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      7806	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x4008961	            0x750c	                           jne 0x400896f	      7806	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x4008963	    0xc70500000000	               mov dword [0x0400896d], 0	      7807	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x400896d	            0xeb0a	                           jmp 0x4008979	      7807	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x400896f	    0xc70500000000	           mov dword [0x04008979], 0x2d 	      7809	option.c	FUNCTION_43	FOR_1	IF_2	ELSE_2
0x4008979	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x400897d	          0x488b00	                    mov rax, qword [rax]	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x4008980	        0x488945e8	             mov qword [rbp - 0x18], rax	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x4008984	      0xe9e6010000	                           jmp 0x4008b6f	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4008989	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4008990	      0xe9af010000	                           jmp 0x4008b44	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4008995	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x4008998	            0x4898	                                    cdqe	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x400899a	        0x48c1e004	                              shl rax, 4	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x400899e	          0x4889c2	                            mov rdx, rax	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40089a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40089a5	          0x4801d0	                            add rax, rdx	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40089a8	        0x488b4008	                mov rax, qword [rax + 8]	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40089ac	          0x4889c7	                            mov rdi, rax	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40089af	      0xe800000000	                          call 0x40089b4	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40089b4	          0x8945d8	             mov dword [rbp - 0x28], eax	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40089b7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089ba	          0x4863d0	                         movsxd rdx, eax	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089bd	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089c0	            0x4898	                                    cdqe	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089c2	        0x48c1e004	                              shl rax, 4	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089c6	          0x4889c1	                            mov rcx, rax	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089cd	          0x4801c8	                            add rax, rcx	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089d0	        0x488b4808	                mov rcx, qword [rax + 8]	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089d8	          0x4889ce	                            mov rsi, rcx	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089db	          0x4889c7	                            mov rdi, rax	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089de	      0xe800000000	                          call 0x40089e3	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089e3	            0x85c0	                           test eax, eax	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089e5	     0xf8555010000	                           jne 0x4008b40	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x40089eb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x40089ee	          0x4863d0	                         movsxd rdx, eax	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x40089f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x40089f5	          0x4801d0	                            add rax, rdx	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x40089f8	           0xfb600	                   movzx eax, byte [rax]	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x40089fb	            0x3c3a	                            cmp al, 0x3a	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x40089fd	     0xf853d010000	                           jne 0x4008b40	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a03	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a06	            0x4898	                                    cdqe	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a08	        0x488d5001	                      lea rdx, [rax + 1]	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a10	          0x4801d0	                            add rax, rdx	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a13	           0xfb600	                   movzx eax, byte [rax]	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a16	            0x84c0	                             test al, al	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a18	     0xf8422010000	                            je 0x4008b40	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a1e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a21	            0x4898	                                    cdqe	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a23	        0x488d5001	                      lea rdx, [rax + 1]	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a2b	          0x4801d0	                            add rax, rdx	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a2e	        0x488945e0	             mov qword [rbp - 0x20], rax	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4008a32	        0x488d45e0	                   lea rax, [rbp - 0x20]	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4008a36	          0x4889c7	                            mov rdi, rax	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4008a39	      0xe800000000	                          call 0x4008a3e	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4008a3e	          0x8945dc	             mov dword [rbp - 0x24], eax	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4008a41	    0x488b05000000	            mov rax, qword [0x04008a48] 	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4008a48	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4008a4b	            0x89d7	                            mov edi, edx	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4008a4d	            0xffd0	                                call rax	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4008a4f	          0x83f801	                              cmp eax, 1	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4008a52	     0xf8fe1000000	                            jg 0x4008b39	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4008a58	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a5b	            0x4898	                                    cdqe	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a5d	        0x48c1e004	                              shl rax, 4	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a61	          0x4889c2	                            mov rdx, rax	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a68	          0x4801d0	                            add rax, rdx	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a6b	          0x488b00	                    mov rax, qword [rax]	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a6e	    0x483d00000000	                              cmp rax, 0	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a74	            0x7535	                           jne 0x4008aab	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4008a76	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4008a7a	           0xfb600	                   movzx eax, byte [rax]	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4008a7d	            0x84c0	                             test al, al	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4008a7f	     0xf84b7000000	                            je 0x4008b3c	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4008a85	        0x488d45e0	                   lea rax, [rbp - 0x20]	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4008a89	          0x4889c7	                            mov rdi, rax	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4008a8c	      0xe800000000	                          call 0x4008a91	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4008a91	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4008a94	    0x488b05000000	            mov rax, qword [0x04008a9b] 	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4008a9b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4008a9e	            0x89d7	                            mov edi, edx	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4008aa0	            0xffd0	                                call rax	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4008aa2	          0x83f801	                              cmp eax, 1	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4008aa5	     0xf8f94000000	                            jg 0x4008b3f	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4008aab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008aaf	           0xfb600	                   movzx eax, byte [rax]	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008ab2	            0x3c2c	                            cmp al, 0x2c	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008ab4	            0x740b	                            je 0x4008ac1	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008ab6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008aba	           0xfb600	                   movzx eax, byte [rax]	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008abd	            0x84c0	                             test al, al	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008abf	            0x757f	                           jne 0x4008b40	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008ac1	        0x837dc800	               cmp dword [rbp - 0x38], 0	      7843	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x4008ac5	            0x7468	                            je 0x4008b2f	      7843	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x4008ac7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008aca	            0x4898	                                    cdqe	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008acc	        0x48c1e004	                              shl rax, 4	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008ad0	          0x4889c2	                            mov rdx, rax	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008ad3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008ad7	          0x4801d0	                            add rax, rdx	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008ada	          0x488b00	                    mov rax, qword [rax]	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008add	    0x483d00000000	                              cmp rax, 0	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008ae3	            0x7514	                           jne 0x4008af9	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008ae5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7847	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008ae8	    0x890500000000	            mov dword [0x04008aee], eax 	      7847	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008aee	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008af1	    0x890500000000	            mov dword [0x04008af7], eax 	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008af7	            0xeb36	                           jmp 0x4008b2f	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4008af9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008afc	            0x4898	                                    cdqe	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008afe	        0x48c1e004	                              shl rax, 4	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b02	          0x4889c2	                            mov rdx, rax	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b09	          0x4801d0	                            add rax, rdx	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b0c	          0x488b00	                    mov rax, qword [rax]	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b0f	          0x4885c0	                           test rax, rax	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b12	            0x741b	                            je 0x4008b2f	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b14	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b17	            0x4898	                                    cdqe	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b19	        0x48c1e004	                              shl rax, 4	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b1d	          0x4889c2	                            mov rdx, rax	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b24	          0x4801d0	                            add rax, rdx	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b27	          0x488b00	                    mov rax, qword [rax]	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b2a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b2d	            0x8910	                    mov dword [rax], edx	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4008b2f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7854	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008b33	        0x488945e8	             mov qword [rbp - 0x18], rax	      7854	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008b37	            0xeb17	                           jmp 0x4008b50	      7855	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4008b39	              0x90	                                     nop	      7825	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6
0x4008b3a	            0xeb04	                           jmp 0x4008b40	      7825	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6
0x4008b3c	              0x90	                                     nop	      7832	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4008b3d	            0xeb01	                           jmp 0x4008b40	      7832	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4008b3f	              0x90	                                     nop	      7836	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9
0x4008b40	        0x8345cc01	               add dword [rbp - 0x34], 1	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4008b44	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4008b47	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4008b4a	     0xf8c45feffff	                            jl 0x4008995	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4008b50	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7860	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4008b53	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      7860	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4008b56	            0x7507	                           jne 0x4008b5f	      7860	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4008b58	      0xb800000000	                              mov eax, 0	      7861	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4008b5d	            0xeb32	                           jmp 0x4008b91	      7861	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4008b5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7862	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4008b63	           0xfb600	                   movzx eax, byte [rax]	      7862	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4008b66	            0x3c2c	                            cmp al, 0x2c	      7862	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4008b68	            0x7505	                           jne 0x4008b6f	      7862	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4008b6a	      0x488345e801	               add qword [rbp - 0x18], 1	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4008b6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4008b73	           0xfb600	                   movzx eax, byte [rax]	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4008b76	            0x84c0	                             test al, al	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4008b78	     0xf850bfeffff	                           jne 0x4008989	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4008b7e	        0x8345c801	               add dword [rbp - 0x38], 1	      7797	option.c	FUNCTION_43	FOR_1
0x4008b82	        0x837dc801	               cmp dword [rbp - 0x38], 1	      7797	option.c	FUNCTION_43	FOR_1
0x4008b86	     0xf8e69fdffff	                           jle 0x40088f5	      7797	option.c	FUNCTION_43	FOR_1
0x4008b8c	      0xb800000000	                              mov eax, 0	      7867	option.c	FUNCTION_43
0x4008b91	        0x488b75f8	                mov rsi, qword [rbp - 8]	      7868	option.c	FUNCTION_43
0x4008b95	    0x644833342528	                xor rsi, qword fs:[0x28]	      7868	option.c	FUNCTION_43
0x4008b9e	            0x7405	                            je 0x4008ba5	      7868	option.c	FUNCTION_43
0x4008ba0	      0xe800000000	                          call 0x4008ba5	      7868	option.c	FUNCTION_43
0x4008ba5	              0xc9	                                   leave	      7868	option.c	FUNCTION_43
0x4008ba6	              0xc3	                                     ret	      7868	option.c	FUNCTION_43
set_string_default_esc	ELSE,1:IF,4:SWITCH,0:CALL,5:DO,0:WHILE,0:functions,0:FOR,0	68
0x4000be1	              0x55	                                push rbp	      3874	option.c	FUNCTION_4
0x4000be2	          0x4889e5	                            mov rbp, rsp	      3874	option.c	FUNCTION_4
0x4000be5	        0x4883ec30	                           sub rsp, 0x30	      3874	option.c	FUNCTION_4
0x4000be9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3874	option.c	FUNCTION_4
0x4000bed	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3874	option.c	FUNCTION_4
0x4000bf1	          0x8955dc	             mov dword [rbp - 0x24], edx	      3874	option.c	FUNCTION_4
0x4000bf4	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000bf8	            0x742d	                            je 0x4000c27	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000bfa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000bfe	      0xbe20000000	                           mov esi, 0x20	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000c03	          0x4889c7	                            mov rdi, rax	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000c06	      0xe800000000	                          call 0x4000c0b	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000c0b	          0x4885c0	                           test rax, rax	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000c0e	            0x7417	                            je 0x4000c27	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000c10	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3879	option.c	FUNCTION_4	CALL_2
0x4000c14	      0xbe00000000	                              mov esi, 0	      3879	option.c	FUNCTION_4	CALL_2
0x4000c19	          0x4889c7	                            mov rdi, rax	      3879	option.c	FUNCTION_4	CALL_2
0x4000c1c	      0xe800000000	                          call 0x4000c21	      3879	option.c	FUNCTION_4	CALL_2
0x4000c21	        0x488945f8	                mov qword [rbp - 8], rax	      3879	option.c	FUNCTION_4	CALL_2
0x4000c25	            0xeb10	                           jmp 0x4000c37	      3879	option.c	FUNCTION_4	CALL_2
0x4000c27	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3881	option.c	FUNCTION_4	CALL_3
0x4000c2b	          0x4889c7	                            mov rdi, rax	      3881	option.c	FUNCTION_4	CALL_3
0x4000c2e	      0xe800000000	                          call 0x4000c33	      3881	option.c	FUNCTION_4	CALL_3
0x4000c33	        0x488945f8	                mov qword [rbp - 8], rax	      3881	option.c	FUNCTION_4	CALL_3
0x4000c37	      0x48837df800	                  cmp qword [rbp - 8], 0	      3882	option.c	FUNCTION_4	IF_2
0x4000c3c	     0xf848b000000	                            je 0x4000ccd	      3882	option.c	FUNCTION_4	IF_2
0x4000c42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4000c46	          0x4889c7	                            mov rdi, rax	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4000c49	      0xe856a90000	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4000c4e	          0x8945f4	              mov dword [rbp - 0xc], eax	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4000c51	        0x837df400	                cmp dword [rbp - 0xc], 0	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4000c55	            0x7876	                            js 0x4000ccd	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4000c57	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c5a	            0x4898	                                    cdqe	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c5c	        0x48c1e006	                              shl rax, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c60	    0x480500000000	                              add rax, 0	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c66	          0x488b00	                    mov rax, qword [rax]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c69	      0x2580000000	                           and eax, 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c6e	          0x4885c0	                           test rax, rax	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c71	            0x741a	                            je 0x4000c8d	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000c73	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000c76	            0x4898	                                    cdqe	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000c78	        0x48c1e006	                              shl rax, 6	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000c7c	    0x480500000000	                              add rax, 0	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000c82	          0x488b00	                    mov rax, qword [rax]	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000c85	          0x4889c7	                            mov rdi, rax	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000c88	      0xe800000000	                          call 0x4000c8d	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000c8d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000c90	            0x4898	                                    cdqe	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000c92	        0x48c1e006	                              shl rax, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000c96	    0x488d90000000	                          lea rdx, [rax]	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000c9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000ca1	          0x488902	                    mov qword [rdx], rax	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000ca4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000ca7	            0x4898	                                    cdqe	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000ca9	        0x48c1e006	                              shl rax, 6	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cad	    0x480500000000	                              add rax, 0	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cb3	          0x488b00	                    mov rax, qword [rax]	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cb6	             0xc80	                             or al, 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cb8	          0x4889c2	                            mov rdx, rax	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cbb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cbe	            0x4898	                                    cdqe	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cc0	        0x48c1e006	                              shl rax, 6	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cc4	    0x480500000000	                              add rax, 0	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000cca	          0x488910	                    mov qword [rax], rdx	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000ccd	              0x90	                                     nop	      3893	option.c	FUNCTION_4
0x4000cce	              0xc9	                                   leave	      3893	option.c	FUNCTION_4
0x4000ccf	              0xc3	                                     ret	      3893	option.c	FUNCTION_4
set_options_bin	ELSE,1:IF,9:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	100
0x4003d43	              0x55	                                push rbp	      5409	option.c	FUNCTION_22
0x4003d44	          0x4889e5	                            mov rbp, rsp	      5409	option.c	FUNCTION_22
0x4003d47	          0x897dfc	                mov dword [rbp - 4], edi	      5409	option.c	FUNCTION_22
0x4003d4a	          0x8975f8	                mov dword [rbp - 8], esi	      5409	option.c	FUNCTION_22
0x4003d4d	          0x8955f4	              mov dword [rbp - 0xc], edx	      5409	option.c	FUNCTION_22
0x4003d50	        0x837df800	                  cmp dword [rbp - 8], 0	      5414	option.c	FUNCTION_22	IF_1
0x4003d54	     0xf8455010000	                            je 0x4003eaf	      5414	option.c	FUNCTION_22	IF_1
0x4003d5a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5416	option.c	FUNCTION_22	IF_1	IF_2
0x4003d5e	     0xf85b4000000	                           jne 0x4003e18	      5416	option.c	FUNCTION_22	IF_1	IF_2
0x4003d64	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5418	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d67	          0x83e002	                              and eax, 2	      5418	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d6a	            0x85c0	                           test eax, eax	      5418	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d6c	            0x756c	                           jne 0x4003dda	      5418	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d6e	    0x488b05000000	            mov rax, qword [0x04003d75] 	      5420	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d75	    0x488b15000000	            mov rdx, qword [0x04003d7c] 	      5420	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d7c	    0x488b92b81500	          mov rdx, qword [rdx + 0x15b8] 	      5420	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d83	    0x488990c01500	          mov qword [rax + 0x15c0], rdx 	      5420	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d8a	    0x488b05000000	            mov rax, qword [0x04003d91] 	      5421	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d91	    0x488b15000000	            mov rdx, qword [0x04003d98] 	      5421	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d98	    0x488b92d01500	          mov rdx, qword [rdx + 0x15d0] 	      5421	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003d9f	    0x488990d81500	          mov qword [rax + 0x15d8], rdx 	      5421	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003da6	    0x488b05000000	            mov rax, qword [0x04003dad] 	      5422	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003dad	    0x488b15000000	            mov rdx, qword [0x04003db4] 	      5422	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003db4	    0x8b9238150000	          mov edx, dword [rdx + 0x1538] 	      5422	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003dba	    0x89903c150000	          mov dword [rax + 0x153c], edx 	      5422	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003dc0	    0x488b05000000	            mov rax, qword [0x04003dc7] 	      5423	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003dc7	    0x488b15000000	            mov rdx, qword [0x04003dce] 	      5423	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003dce	    0x8b9278140000	          mov edx, dword [rdx + 0x1478] 	      5423	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003dd4	    0x89907c140000	          mov dword [rax + 0x147c], edx 	      5423	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003dda	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003ddd	          0x83e004	                              and eax, 4	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003de0	            0x85c0	                           test eax, eax	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003de2	            0x7534	                           jne 0x4003e18	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003de4	    0x488b05000000	            mov rax, qword [0x04003deb] 	      5427	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003deb	    0x488905000000	            mov qword [0x04003df2], rax 	      5427	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003df2	    0x488b05000000	            mov rax, qword [0x04003df9] 	      5428	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003df9	    0x488905000000	            mov qword [0x04003e00], rax 	      5428	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003e00	    0x8b0500000000	            mov eax, dword [0x04003e06] 	      5429	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003e06	    0x890500000000	            mov dword [0x04003e0c], eax 	      5429	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003e0c	    0x8b0500000000	            mov eax, dword [0x04003e12] 	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003e12	    0x890500000000	            mov dword [0x04003e18], eax 	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003e18	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003e1b	          0x83e002	                              and eax, 2	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003e1e	            0x85c0	                           test eax, eax	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003e20	            0x7546	                           jne 0x4003e68	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003e22	    0x488b05000000	            mov rax, qword [0x04003e29] 	      5436	option.c	FUNCTION_22	IF_1	IF_5
0x4003e29	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	      5436	option.c	FUNCTION_22	IF_1	IF_5
0x4003e34	    0x488b05000000	            mov rax, qword [0x04003e3b] 	      5437	option.c	FUNCTION_22	IF_1	IF_5
0x4003e3b	    0x48c780d01500	            mov qword [rax + 0x15d0], 0 	      5437	option.c	FUNCTION_22	IF_1	IF_5
0x4003e46	    0x488b05000000	            mov rax, qword [0x04003e4d] 	      5438	option.c	FUNCTION_22	IF_1	IF_5
0x4003e4d	    0xc78038150000	            mov dword [rax + 0x1538], 0 	      5438	option.c	FUNCTION_22	IF_1	IF_5
0x4003e57	    0x488b05000000	            mov rax, qword [0x04003e5e] 	      5439	option.c	FUNCTION_22	IF_1	IF_5
0x4003e5e	    0xc78078140000	            mov dword [rax + 0x1478], 0 	      5439	option.c	FUNCTION_22	IF_1	IF_5
0x4003e68	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5441	option.c	FUNCTION_22	IF_1	IF_6
0x4003e6b	          0x83e004	                              and eax, 4	      5441	option.c	FUNCTION_22	IF_1	IF_6
0x4003e6e	            0x85c0	                           test eax, eax	      5441	option.c	FUNCTION_22	IF_1	IF_6
0x4003e70	     0xf85f7000000	                           jne 0x4003f6d	      5441	option.c	FUNCTION_22	IF_1	IF_6
0x4003e76	    0x48c705000000	               mov qword [0x04003e81], 0	      5443	option.c	FUNCTION_22	IF_1	IF_6
0x4003e81	    0x48c705000000	               mov qword [0x04003e8c], 0	      5444	option.c	FUNCTION_22	IF_1	IF_6
0x4003e8c	    0xc70500000000	               mov dword [0x04003e96], 0	      5445	option.c	FUNCTION_22	IF_1	IF_6
0x4003e96	    0xc70500000000	               mov dword [0x04003ea0], 0	      5446	option.c	FUNCTION_22	IF_1	IF_6
0x4003ea0	    0xc70500000000	               mov dword [0x04003eaa], 1	      5447	option.c	FUNCTION_22	IF_1	IF_6
0x4003eaa	      0xe9be000000	                           jmp 0x4003f6d	      5467	option.c	FUNCTION_22
0x4003eaf	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5450	option.c	FUNCTION_22	ELSE_1	IF_7
0x4003eb3	     0xf84b4000000	                            je 0x4003f6d	      5450	option.c	FUNCTION_22	ELSE_1	IF_7
0x4003eb9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5452	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ebc	          0x83e002	                              and eax, 2	      5452	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ebf	            0x85c0	                           test eax, eax	      5452	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ec1	            0x756c	                           jne 0x4003f2f	      5452	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ec3	    0x488b05000000	            mov rax, qword [0x04003eca] 	      5454	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003eca	    0x488b15000000	            mov rdx, qword [0x04003ed1] 	      5454	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ed1	    0x488b92c01500	          mov rdx, qword [rdx + 0x15c0] 	      5454	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ed8	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	      5454	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003edf	    0x488b05000000	            mov rax, qword [0x04003ee6] 	      5455	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ee6	    0x488b15000000	            mov rdx, qword [0x04003eed] 	      5455	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003eed	    0x488b92d81500	          mov rdx, qword [rdx + 0x15d8] 	      5455	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003ef4	    0x488990d01500	          mov qword [rax + 0x15d0], rdx 	      5455	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003efb	    0x488b05000000	            mov rax, qword [0x04003f02] 	      5456	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f02	    0x488b15000000	            mov rdx, qword [0x04003f09] 	      5456	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f09	    0x8b923c150000	          mov edx, dword [rdx + 0x153c] 	      5456	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f0f	    0x899038150000	          mov dword [rax + 0x1538], edx 	      5456	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f15	    0x488b05000000	            mov rax, qword [0x04003f1c] 	      5457	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f1c	    0x488b15000000	            mov rdx, qword [0x04003f23] 	      5457	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f23	    0x8b927c140000	          mov edx, dword [rdx + 0x147c] 	      5457	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f29	    0x899078140000	          mov dword [rax + 0x1478], edx 	      5457	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003f2f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5459	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f32	          0x83e004	                              and eax, 4	      5459	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f35	            0x85c0	                           test eax, eax	      5459	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f37	            0x7534	                           jne 0x4003f6d	      5459	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f39	    0x488b05000000	            mov rax, qword [0x04003f40] 	      5461	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f40	    0x488905000000	            mov qword [0x04003f47], rax 	      5461	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f47	    0x488b05000000	            mov rax, qword [0x04003f4e] 	      5462	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f4e	    0x488905000000	            mov qword [0x04003f55], rax 	      5462	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f55	    0x8b0500000000	            mov eax, dword [0x04003f5b] 	      5463	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f5b	    0x890500000000	            mov dword [0x04003f61], eax 	      5463	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f61	    0x8b0500000000	            mov eax, dword [0x04003f67] 	      5464	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f67	    0x890500000000	            mov dword [0x04003f6d], eax 	      5464	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003f6d	              0x90	                                     nop	      5467	option.c	FUNCTION_22
0x4003f6e	              0x5d	                                 pop rbp	      5467	option.c	FUNCTION_22
0x4003f6f	              0xc3	                                     ret	      5467	option.c	FUNCTION_22
get_bkc_value	ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	13
0x4011e31	              0x55	                                push rbp	     12686	option.c	FUNCTION_117
0x4011e32	          0x4889e5	                            mov rbp, rsp	     12686	option.c	FUNCTION_117
0x4011e35	        0x48897df8	                mov qword [rbp - 8], rdi	     12686	option.c	FUNCTION_117
0x4011e39	        0x488b45f8	                mov rax, qword [rbp - 8]	     12687	option.c	FUNCTION_117
0x4011e3d	    0x8b8000140000	          mov eax, dword [rax + 0x1400] 	     12687	option.c	FUNCTION_117
0x4011e43	            0x85c0	                           test eax, eax	     12687	option.c	FUNCTION_117
0x4011e45	            0x740c	                            je 0x4011e53	     12687	option.c	FUNCTION_117
0x4011e47	        0x488b45f8	                mov rax, qword [rbp - 8]	     12687	option.c	FUNCTION_117
0x4011e4b	    0x8b8000140000	          mov eax, dword [rax + 0x1400] 	     12687	option.c	FUNCTION_117
0x4011e51	            0xeb06	                           jmp 0x4011e59	     12687	option.c	FUNCTION_117
0x4011e53	    0x8b0500000000	            mov eax, dword [0x04011e59] 	     12687	option.c	FUNCTION_117
0x4011e59	              0x5d	                                 pop rbp	     12688	option.c	FUNCTION_117
0x4011e5a	              0xc3	                                     ret	     12688	option.c	FUNCTION_117
set_context_in_set_cmd	ELSE,6:IF,27:SWITCH,0:CALL,11:DO,0:WHILE,5:functions,0:FOR,1	453
0x400f7e8	              0x55	                                push rbp	     11339	option.c	FUNCTION_88
0x400f7e9	          0x4889e5	                            mov rbp, rsp	     11339	option.c	FUNCTION_88
0x400f7ec	        0x4883ec50	                           sub rsp, 0x50	     11339	option.c	FUNCTION_88
0x400f7f0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	     11339	option.c	FUNCTION_88
0x400f7f4	        0x488975c0	             mov qword [rbp - 0x40], rsi	     11339	option.c	FUNCTION_88
0x400f7f8	          0x8955bc	             mov dword [rbp - 0x44], edx	     11339	option.c	FUNCTION_88
0x400f7fb	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11341	option.c	FUNCTION_88
0x400f803	    0xc745dc000000	               mov dword [rbp - 0x24], 0	     11342	option.c	FUNCTION_88
0x400f80a	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     11345	option.c	FUNCTION_88
0x400f811	          0x8b45bc	             mov eax, dword [rbp - 0x44]	     11348	option.c	FUNCTION_88
0x400f814	    0x890500000000	            mov dword [0x0400f81a], eax 	     11348	option.c	FUNCTION_88
0x400f81a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11350	option.c	FUNCTION_88
0x400f81e	    0xc70004000000	                      mov dword [rax], 4	     11350	option.c	FUNCTION_88
0x400f824	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11351	option.c	FUNCTION_88	IF_1
0x400f828	           0xfb600	                   movzx eax, byte [rax]	     11351	option.c	FUNCTION_88	IF_1
0x400f82b	            0x84c0	                             test al, al	     11351	option.c	FUNCTION_88	IF_1
0x400f82d	            0x7511	                           jne 0x400f840	     11351	option.c	FUNCTION_88	IF_1
0x400f82f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11353	option.c	FUNCTION_88	IF_1
0x400f833	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     11353	option.c	FUNCTION_88	IF_1
0x400f837	        0x48895008	                mov qword [rax + 8], rdx	     11353	option.c	FUNCTION_88	IF_1
0x400f83b	      0xe923060000	                           jmp 0x400fe63	     11354	option.c	FUNCTION_88	IF_1
0x400f840	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11356	option.c	FUNCTION_88	CALL_1
0x400f844	          0x4889c7	                            mov rdi, rax	     11356	option.c	FUNCTION_88	CALL_1
0x400f847	      0xe800000000	                          call 0x400f84c	     11356	option.c	FUNCTION_88	CALL_1
0x400f84c	        0x488d50ff	                      lea rdx, [rax - 1]	     11356	option.c	FUNCTION_88	CALL_1
0x400f850	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11356	option.c	FUNCTION_88	CALL_1
0x400f854	          0x4801d0	                            add rax, rdx	     11356	option.c	FUNCTION_88	CALL_1
0x400f857	        0x488945f0	             mov qword [rbp - 0x10], rax	     11356	option.c	FUNCTION_88	CALL_1
0x400f85b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11357	option.c	FUNCTION_88	IF_2
0x400f85f	           0xfb600	                   movzx eax, byte [rax]	     11357	option.c	FUNCTION_88	IF_2
0x400f862	            0x3c20	                            cmp al, 0x20	     11357	option.c	FUNCTION_88	IF_2
0x400f864	     0xf8593000000	                           jne 0x400f8fd	     11357	option.c	FUNCTION_88	IF_2
0x400f86a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11357	option.c	FUNCTION_88	IF_2
0x400f86e	        0x4883e801	                              sub rax, 1	     11357	option.c	FUNCTION_88	IF_2
0x400f872	           0xfb600	                   movzx eax, byte [rax]	     11357	option.c	FUNCTION_88	IF_2
0x400f875	            0x3c5c	                            cmp al, 0x5c	     11357	option.c	FUNCTION_88	IF_2
0x400f877	     0xf8480000000	                            je 0x400f8fd	     11357	option.c	FUNCTION_88	IF_2
0x400f87d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11359	option.c	FUNCTION_88	IF_2
0x400f881	        0x488d5001	                      lea rdx, [rax + 1]	     11359	option.c	FUNCTION_88	IF_2
0x400f885	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11359	option.c	FUNCTION_88	IF_2
0x400f889	        0x48895008	                mov qword [rax + 8], rdx	     11359	option.c	FUNCTION_88	IF_2
0x400f88d	      0xe9d1050000	                           jmp 0x400fe63	     11360	option.c	FUNCTION_88	IF_2
0x400f892	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11364	option.c	FUNCTION_88	WHILE_1
0x400f896	        0x488945f8	                mov qword [rbp - 8], rax	     11364	option.c	FUNCTION_88	WHILE_1
0x400f89a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f89e	           0xfb600	                   movzx eax, byte [rax]	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f8a1	            0x3c20	                            cmp al, 0x20	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f8a3	            0x7412	                            je 0x400f8b7	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f8a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f8a9	           0xfb600	                   movzx eax, byte [rax]	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f8ac	            0x3c2c	                            cmp al, 0x2c	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f8ae	            0x7520	                           jne 0x400f8d0	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400f8b0	            0xeb05	                           jmp 0x400f8b7	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8b2	      0x48836df801	                  sub qword [rbp - 8], 1	     11369	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8b7	        0x488b45f8	                mov rax, qword [rbp - 8]	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8bb	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8bf	            0x760f	                           jbe 0x400f8d0	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8c1	        0x488b45f8	                mov rax, qword [rbp - 8]	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8c5	        0x4883e801	                              sub rax, 1	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8c9	           0xfb600	                   movzx eax, byte [rax]	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8cc	            0x3c5c	                            cmp al, 0x5c	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8ce	            0x74e2	                            je 0x400f8b2	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400f8d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8d4	           0xfb600	                   movzx eax, byte [rax]	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8d7	            0x3c20	                            cmp al, 0x20	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8d9	            0x751d	                           jne 0x400f8f8	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8db	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8df	        0x488b45f8	                mov rax, qword [rbp - 8]	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8e3	          0x4829c2	                            sub rdx, rax	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8e6	          0x4889d0	                            mov rax, rdx	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8e9	          0x83e001	                              and eax, 1	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8ec	          0x4885c0	                           test rax, rax	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8ef	            0x7507	                           jne 0x400f8f8	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8f1	      0x488345f001	               add qword [rbp - 0x10], 1	     11374	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8f6	            0xeb0f	                           jmp 0x400f907	     11375	option.c	FUNCTION_88	WHILE_1	IF_4
0x400f8f8	      0x48836df001	               sub qword [rbp - 0x10], 1	     11377	option.c	FUNCTION_88	WHILE_1
0x400f8fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11362	option.c	FUNCTION_88	WHILE_1
0x400f901	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	     11362	option.c	FUNCTION_88	WHILE_1
0x400f905	            0x778b	                            ja 0x400f892	     11362	option.c	FUNCTION_88	WHILE_1
0x400f907	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f90b	      0xba02000000	                              mov edx, 2	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f910	      0xbe00000000	                              mov esi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f915	          0x4889c7	                            mov rdi, rax	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f918	      0xe800000000	                          call 0x400f91d	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f91d	            0x85c0	                           test eax, eax	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f91f	            0x7529	                           jne 0x400f94a	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f921	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f925	      0xba06000000	                              mov edx, 6	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f92a	      0xbe00000000	                              mov esi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f92f	          0x4889c7	                            mov rdi, rax	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f932	      0xe800000000	                          call 0x400f937	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f937	            0x85c0	                           test eax, eax	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f939	            0x740f	                            je 0x400f94a	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400f93b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11381	option.c	FUNCTION_88	IF_5
0x400f93f	    0xc70005000000	                      mov dword [rax], 5	     11381	option.c	FUNCTION_88	IF_5
0x400f945	      0x488345f002	               add qword [rbp - 0x10], 2	     11382	option.c	FUNCTION_88	IF_5
0x400f94a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400f94e	      0xba03000000	                              mov edx, 3	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400f953	      0xbe00000000	                              mov esi, 0	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400f958	          0x4889c7	                            mov rdi, rax	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400f95b	      0xe800000000	                          call 0x400f960	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400f960	            0x85c0	                           test eax, eax	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400f962	            0x750f	                           jne 0x400f973	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400f964	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11386	option.c	FUNCTION_88	IF_6
0x400f968	    0xc70005000000	                      mov dword [rax], 5	     11386	option.c	FUNCTION_88	IF_6
0x400f96e	      0x488345f003	               add qword [rbp - 0x10], 3	     11387	option.c	FUNCTION_88	IF_6
0x400f973	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11389	option.c	FUNCTION_88
0x400f977	        0x488945c0	             mov qword [rbp - 0x40], rax	     11389	option.c	FUNCTION_88
0x400f97b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11389	option.c	FUNCTION_88
0x400f97f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     11389	option.c	FUNCTION_88
0x400f983	        0x48895008	                mov qword [rax + 8], rdx	     11389	option.c	FUNCTION_88
0x400f987	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11390	option.c	FUNCTION_88	IF_7
0x400f98b	           0xfb600	                   movzx eax, byte [rax]	     11390	option.c	FUNCTION_88	IF_7
0x400f98e	            0x3c3c	                            cmp al, 0x3c	     11390	option.c	FUNCTION_88	IF_7
0x400f990	     0xf8583000000	                           jne 0x400fa19	     11390	option.c	FUNCTION_88	IF_7
0x400f996	            0xeb17	                           jmp 0x400f9af	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400f998	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400f99c	        0x488d5001	                      lea rdx, [rax + 1]	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400f9a0	        0x488955f0	             mov qword [rbp - 0x10], rdx	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400f9a4	           0xfb600	                   movzx eax, byte [rax]	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400f9a7	            0x84c0	                             test al, al	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400f9a9	     0xf84aa040000	                            je 0x400fe59	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400f9af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400f9b3	           0xfb600	                   movzx eax, byte [rax]	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400f9b6	            0x3c3e	                            cmp al, 0x3e	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400f9b8	            0x75de	                           jne 0x400f998	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400f9ba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400f9be	        0x4883c001	                              add rax, 1	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400f9c2	          0x4889c7	                            mov rdi, rax	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400f9c5	      0xe800000000	                          call 0x400f9ca	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400f9ca	          0x8945e4	             mov dword [rbp - 0x1c], eax	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400f9cd	        0x837de400	               cmp dword [rbp - 0x1c], 0	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x400f9d1	            0x750f	                           jne 0x400f9e2	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x400f9d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11398	option.c	FUNCTION_88	IF_7	IF_9
0x400f9d7	    0xc70000000000	                      mov dword [rax], 0	     11398	option.c	FUNCTION_88	IF_7	IF_9
0x400f9dd	      0xe981040000	                           jmp 0x400fe63	     11399	option.c	FUNCTION_88	IF_7	IF_9
0x400f9e2	      0x488345f001	               add qword [rbp - 0x10], 1	     11401	option.c	FUNCTION_88	IF_7
0x400f9e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11401	option.c	FUNCTION_88	IF_7
0x400f9eb	           0xfb600	                   movzx eax, byte [rax]	     11401	option.c	FUNCTION_88	IF_7
0x400f9ee	           0xfb6c0	                           movzx eax, al	     11401	option.c	FUNCTION_88	IF_7
0x400f9f1	          0x8945d8	             mov dword [rbp - 0x28], eax	     11401	option.c	FUNCTION_88	IF_7
0x400f9f4	    0xc745e0010000	               mov dword [rbp - 0x20], 1	     11402	option.c	FUNCTION_88	IF_7
0x400f9fb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400f9fe	            0xf7d8	                                 neg eax	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400fa00	    0x880500000000	               mov byte [0x0400fa06], al	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400fa06	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400fa09	            0xf7d8	                                 neg eax	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400fa0b	          0xc1e808	                              shr eax, 8	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400fa0e	    0x880500000000	               mov byte [0x0400fa14], al	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400fa14	      0xe963010000	                           jmp 0x400fb7c	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400fa19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa1d	           0xfb600	                   movzx eax, byte [rax]	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa20	            0x3c74	                            cmp al, 0x74	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa22	            0x7572	                           jne 0x400fa96	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa24	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa28	        0x4883c001	                              add rax, 1	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa2c	           0xfb600	                   movzx eax, byte [rax]	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa2f	            0x3c5f	                            cmp al, 0x5f	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa31	            0x7563	                           jne 0x400fa96	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa33	      0x488345f002	               add qword [rbp - 0x10], 2	     11410	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400fa3c	           0xfb600	                   movzx eax, byte [rax]	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400fa3f	            0x84c0	                             test al, al	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400fa41	            0x7405	                            je 0x400fa48	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400fa43	      0x488345f001	               add qword [rbp - 0x10], 1	     11412	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400fa48	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400fa4c	           0xfb600	                   movzx eax, byte [rax]	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400fa4f	            0x84c0	                             test al, al	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400fa51	     0xf8405040000	                            je 0x400fe5c	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400fa57	      0x488345f001	               add qword [rbp - 0x10], 1	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa5c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa60	           0xfb600	                   movzx eax, byte [rax]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa63	           0xfb6c0	                           movzx eax, al	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa66	          0x8945d8	             mov dword [rbp - 0x28], eax	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa69	    0xc745e0010000	               mov dword [rbp - 0x20], 1	     11416	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa74	         0xfb640fe	               movzx eax, byte [rax - 2]	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa78	    0x880500000000	               mov byte [0x0400fa7e], al	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa82	         0xfb640ff	               movzx eax, byte [rax - 1]	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa86	    0x880500000000	               mov byte [0x0400fa8c], al	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa8c	      0xe9eb000000	                           jmp 0x400fb7c	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400fa91	      0x488345f001	               add qword [rbp - 0x10], 1	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400fa96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fa9a	           0xfb600	                   movzx eax, byte [rax]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fa9d	           0xfb6c0	                           movzx eax, al	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faa0	          0x83e841	                           sub eax, 0x41	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faa3	          0x83f819	                           cmp eax, 0x19	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faa6	            0x76e9	                           jbe 0x400fa91	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faac	           0xfb600	                   movzx eax, byte [rax]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faaf	           0xfb6c0	                           movzx eax, al	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fab2	          0x83e861	                           sub eax, 0x61	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fab5	          0x83f819	                           cmp eax, 0x19	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fab8	            0x76d7	                           jbe 0x400fa91	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fabe	           0xfb600	                   movzx eax, byte [rax]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fac1	           0xfb6c0	                           movzx eax, al	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fac4	          0x83e830	                           sub eax, 0x30	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fac7	          0x83f809	                              cmp eax, 9	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400faca	            0x76c5	                           jbe 0x400fa91	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400facc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fad0	           0xfb600	                   movzx eax, byte [rax]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fad3	            0x3c5f	                            cmp al, 0x5f	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fad5	            0x74ba	                            je 0x400fa91	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fad7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fadb	           0xfb600	                   movzx eax, byte [rax]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fade	            0x3c2a	                            cmp al, 0x2a	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fae0	            0x74af	                            je 0x400fa91	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400fae2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400fae6	           0xfb600	                   movzx eax, byte [rax]	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400fae9	            0x84c0	                             test al, al	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400faeb	     0xf846e030000	                            je 0x400fe5f	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400faf1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11427	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400faf5	           0xfb600	                   movzx eax, byte [rax]	     11427	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400faf8	           0xfb6c0	                           movzx eax, al	     11427	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fafb	          0x8945d8	             mov dword [rbp - 0x28], eax	     11427	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fafe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11428	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb02	          0xc60000	                       mov byte [rax], 0	     11428	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb05	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400fb09	          0x4889c7	                            mov rdi, rax	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400fb0c	      0xe893baffff	                     call sym.findoption	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400fb11	          0x8945dc	             mov dword [rbp - 0x24], eax	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400fb14	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     11430	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb17	            0x89c2	                            mov edx, eax	     11430	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11430	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb1d	            0x8810	                      mov byte [rax], dl	     11430	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb1f	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb23	            0x7417	                            je 0x400fb3c	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb25	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb28	            0x4898	                                    cdqe	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb2a	        0x48c1e006	                              shl rax, 6	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb2e	    0x480500000000	                              add rax, 0	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb34	          0x488b00	                    mov rax, qword [rax]	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb37	          0x4885c0	                           test rax, rax	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb3a	            0x750f	                           jne 0x400fb4b	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb3c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11433	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb40	    0xc70000000000	                      mov dword [rax], 0	     11433	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb46	      0xe918030000	                           jmp 0x400fe63	     11434	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400fb4b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb4e	            0x4898	                                    cdqe	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb50	        0x48c1e006	                              shl rax, 6	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb54	    0x480500000000	                              add rax, 0	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb5a	          0x488b00	                    mov rax, qword [rax]	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb5d	        0x488945e8	             mov qword [rbp - 0x18], rax	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400fb61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400fb65	          0x83e001	                              and eax, 1	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400fb68	          0x4885c0	                           test rax, rax	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400fb6b	            0x740f	                            je 0x400fb7c	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400fb6d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11439	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400fb71	    0xc70000000000	                      mov dword [rax], 0	     11439	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400fb77	      0xe9e7020000	                           jmp 0x400fe63	     11440	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400fb7c	        0x837dd82d	           cmp dword [rbp - 0x28], 0x2d 	     11445	option.c	FUNCTION_88	IF_16
0x400fb80	            0x740c	                            je 0x400fb8e	     11445	option.c	FUNCTION_88	IF_16
0x400fb82	        0x837dd82b	           cmp dword [rbp - 0x28], 0x2b 	     11445	option.c	FUNCTION_88	IF_16
0x400fb86	            0x7406	                            je 0x400fb8e	     11445	option.c	FUNCTION_88	IF_16
0x400fb88	        0x837dd85e	           cmp dword [rbp - 0x28], 0x5e 	     11445	option.c	FUNCTION_88	IF_16
0x400fb8c	            0x751b	                           jne 0x400fba9	     11445	option.c	FUNCTION_88	IF_16
0x400fb8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11445	option.c	FUNCTION_88	IF_16
0x400fb92	        0x4883c001	                              add rax, 1	     11445	option.c	FUNCTION_88	IF_16
0x400fb96	           0xfb600	                   movzx eax, byte [rax]	     11445	option.c	FUNCTION_88	IF_16
0x400fb99	            0x3c3d	                            cmp al, 0x3d	     11445	option.c	FUNCTION_88	IF_16
0x400fb9b	            0x750c	                           jne 0x400fba9	     11445	option.c	FUNCTION_88	IF_16
0x400fb9d	      0x488345f001	               add qword [rbp - 0x10], 1	     11447	option.c	FUNCTION_88	IF_16
0x400fba2	    0xc745d83d0000	           mov dword [rbp - 0x28], 0x3d 	     11448	option.c	FUNCTION_88	IF_16
0x400fba9	        0x837dd83d	           cmp dword [rbp - 0x28], 0x3d 	     11450	option.c	FUNCTION_88	IF_17
0x400fbad	            0x7406	                            je 0x400fbb5	     11450	option.c	FUNCTION_88	IF_17
0x400fbaf	        0x837dd83a	           cmp dword [rbp - 0x28], 0x3a 	     11450	option.c	FUNCTION_88	IF_17
0x400fbb3	            0x750b	                           jne 0x400fbc0	     11450	option.c	FUNCTION_88	IF_17
0x400fbb5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11451	option.c	FUNCTION_88	IF_17
0x400fbb9	            0x8b00	                    mov eax, dword [rax]	     11451	option.c	FUNCTION_88	IF_17
0x400fbbb	          0x83f805	                              cmp eax, 5	     11451	option.c	FUNCTION_88	IF_17
0x400fbbe	            0x750f	                           jne 0x400fbcf	     11451	option.c	FUNCTION_88	IF_17
0x400fbc0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11453	option.c	FUNCTION_88	IF_17
0x400fbc4	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	     11453	option.c	FUNCTION_88	IF_17
0x400fbca	      0xe994020000	                           jmp 0x400fe63	     11454	option.c	FUNCTION_88	IF_17
0x400fbcf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11456	option.c	FUNCTION_88	IF_18
0x400fbd3	            0x8b00	                    mov eax, dword [rax]	     11456	option.c	FUNCTION_88	IF_18
0x400fbd5	          0x83f805	                              cmp eax, 5	     11456	option.c	FUNCTION_88	IF_18
0x400fbd8	            0x7449	                            je 0x400fc23	     11456	option.c	FUNCTION_88	IF_18
0x400fbda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11456	option.c	FUNCTION_88	IF_18
0x400fbde	        0x4883c001	                              add rax, 1	     11456	option.c	FUNCTION_88	IF_18
0x400fbe2	           0xfb600	                   movzx eax, byte [rax]	     11456	option.c	FUNCTION_88	IF_18
0x400fbe5	            0x84c0	                             test al, al	     11456	option.c	FUNCTION_88	IF_18
0x400fbe7	            0x753a	                           jne 0x400fc23	     11456	option.c	FUNCTION_88	IF_18
0x400fbe9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11458	option.c	FUNCTION_88	IF_18
0x400fbed	    0xc70007000000	                      mov dword [rax], 7	     11458	option.c	FUNCTION_88	IF_18
0x400fbf3	        0x837de000	               cmp dword [rbp - 0x20], 0	     11459	option.c	FUNCTION_88	IF_18	IF_19
0x400fbf7	            0x740c	                            je 0x400fc05	     11459	option.c	FUNCTION_88	IF_18	IF_19
0x400fbf9	    0xc70500000000	     mov dword [0x0400fc03], 0xffffffff 	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400fc03	            0xeb09	                           jmp 0x400fc0e	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400fc05	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11462	option.c	FUNCTION_88	IF_18	ELSE_3
0x400fc08	    0x890500000000	            mov dword [0x0400fc0e], eax 	     11462	option.c	FUNCTION_88	IF_18	ELSE_3
0x400fc0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11463	option.c	FUNCTION_88	IF_18
0x400fc12	        0x488d5001	                      lea rdx, [rax + 1]	     11463	option.c	FUNCTION_88	IF_18
0x400fc16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11463	option.c	FUNCTION_88	IF_18
0x400fc1a	        0x48895008	                mov qword [rax + 8], rdx	     11463	option.c	FUNCTION_88	IF_18
0x400fc1e	      0xe940020000	                           jmp 0x400fe63	     11464	option.c	FUNCTION_88	IF_18
0x400fc23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11466	option.c	FUNCTION_88
0x400fc27	    0xc70000000000	                      mov dword [rax], 0	     11466	option.c	FUNCTION_88
0x400fc2d	        0x837de000	               cmp dword [rbp - 0x20], 0	     11467	option.c	FUNCTION_88	IF_20
0x400fc31	     0xf852b020000	                           jne 0x400fe62	     11467	option.c	FUNCTION_88	IF_20
0x400fc37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11467	option.c	FUNCTION_88	IF_20
0x400fc3b	          0x83e002	                              and eax, 2	     11467	option.c	FUNCTION_88	IF_20
0x400fc3e	          0x4885c0	                           test rax, rax	     11467	option.c	FUNCTION_88	IF_20
0x400fc41	     0xf851b020000	                           jne 0x400fe62	     11467	option.c	FUNCTION_88	IF_20
0x400fc47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11470	option.c	FUNCTION_88
0x400fc4b	        0x488d5001	                      lea rdx, [rax + 1]	     11470	option.c	FUNCTION_88
0x400fc4f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11470	option.c	FUNCTION_88
0x400fc53	        0x48895008	                mov qword [rax + 8], rdx	     11470	option.c	FUNCTION_88
0x400fc57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11472	option.c	FUNCTION_88	IF_21
0x400fc5b	          0x83e010	                           and eax, 0x10	     11472	option.c	FUNCTION_88	IF_21
0x400fc5e	          0x4885c0	                           test rax, rax	     11472	option.c	FUNCTION_88	IF_21
0x400fc61	     0xf84c0000000	                            je 0x400fd27	     11472	option.c	FUNCTION_88	IF_21
0x400fc67	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11474	option.c	FUNCTION_88	IF_21
0x400fc6a	            0x4898	                                    cdqe	     11474	option.c	FUNCTION_88	IF_21
0x400fc6c	        0x48c1e006	                              shl rax, 6	     11474	option.c	FUNCTION_88	IF_21
0x400fc70	    0x480500000000	                              add rax, 0	     11474	option.c	FUNCTION_88	IF_21
0x400fc76	          0x488b00	                    mov rax, qword [rax]	     11474	option.c	FUNCTION_88	IF_21
0x400fc79	        0x488945f0	             mov qword [rbp - 0x10], rax	     11474	option.c	FUNCTION_88	IF_21
0x400fc7d	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11475	option.c	FUNCTION_88	IF_21	IF_22
0x400fc85	            0x743c	                            je 0x400fcc3	     11475	option.c	FUNCTION_88	IF_21	IF_22
0x400fc87	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11476	option.c	FUNCTION_88	IF_21	IF_22
0x400fc8f	            0x7432	                            je 0x400fcc3	     11476	option.c	FUNCTION_88	IF_21	IF_22
0x400fc91	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x400fc99	            0x7428	                            je 0x400fcc3	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x400fc9b	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11478	option.c	FUNCTION_88	IF_21	IF_22
0x400fca3	            0x741e	                            je 0x400fcc3	     11478	option.c	FUNCTION_88	IF_21	IF_22
0x400fca5	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11479	option.c	FUNCTION_88	IF_21	IF_22
0x400fcad	            0x7414	                            je 0x400fcc3	     11479	option.c	FUNCTION_88	IF_21	IF_22
0x400fcaf	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x400fcb7	            0x740a	                            je 0x400fcc3	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x400fcb9	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400fcc1	            0x7538	                           jne 0x400fcfb	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400fcc3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11488	option.c	FUNCTION_88	IF_21	IF_22
0x400fcc7	    0xc70003000000	                      mov dword [rax], 3	     11488	option.c	FUNCTION_88	IF_21	IF_22
0x400fccd	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11489	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fcd5	            0x740a	                            je 0x400fce1	     11489	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fcd7	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fcdf	            0x750d	                           jne 0x400fcee	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fce1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fce5	    0xc74024020000	               mov dword [rax + 0x24], 2	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fcec	            0xeb39	                           jmp 0x400fd27	     11489	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fcee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11496	option.c	FUNCTION_88	IF_21	IF_22	ELSE_4
0x400fcf2	    0xc74024010000	               mov dword [rax + 0x24], 1	     11496	option.c	FUNCTION_88	IF_21	IF_22	ELSE_4
0x400fcf9	            0xeb2c	                           jmp 0x400fd27	     11489	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400fcfb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11500	option.c	FUNCTION_88	IF_21	ELSE_5
0x400fcff	    0xc70002000000	                      mov dword [rax], 2	     11500	option.c	FUNCTION_88	IF_21	ELSE_5
0x400fd05	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11502	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400fd0d	            0x750d	                           jne 0x400fd1c	     11502	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400fd0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400fd13	    0xc74024020000	               mov dword [rax + 0x24], 2	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400fd1a	            0xeb0b	                           jmp 0x400fd27	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400fd1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11505	option.c	FUNCTION_88	IF_21	ELSE_5	ELSE_6
0x400fd20	    0xc74024010000	               mov dword [rax + 0x24], 1	     11505	option.c	FUNCTION_88	IF_21	ELSE_5	ELSE_6
0x400fd27	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd2b	          0x4889c7	                            mov rdi, rax	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd2e	      0xe800000000	                          call 0x400fd33	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd33	        0x488d50ff	                      lea rdx, [rax - 1]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd37	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd3b	          0x4801d0	                            add rax, rdx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd3e	        0x488945f0	             mov qword [rbp - 0x10], rax	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd42	      0xe9fd000000	                           jmp 0x400fe44	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fd47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd4b	           0xfb600	                   movzx eax, byte [rax]	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd4e	            0x3c20	                            cmp al, 0x20	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd50	            0x740f	                            je 0x400fd61	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd56	           0xfb600	                   movzx eax, byte [rax]	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd59	            0x3c2c	                            cmp al, 0x2c	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd5b	     0xf8598000000	                           jne 0x400fdf9	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd61	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11516	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd65	        0x488945f8	                mov qword [rbp - 8], rax	     11516	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400fd69	            0xeb05	                           jmp 0x400fd70	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd6b	      0x48836df801	                  sub qword [rbp - 8], 1	     11518	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd70	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd74	        0x488b4008	                mov rax, qword [rax + 8]	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd78	        0x483b45f8	                cmp rax, qword [rbp - 8]	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd7c	            0x730f	                           jae 0x400fd8d	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd7e	        0x488b45f8	                mov rax, qword [rbp - 8]	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd82	        0x4883e801	                              sub rax, 1	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd86	           0xfb600	                   movzx eax, byte [rax]	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd89	            0x3c5c	                            cmp al, 0x5c	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd8b	            0x74de	                            je 0x400fd6b	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400fd8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fd91	           0xfb600	                   movzx eax, byte [rax]	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fd94	            0x3c20	                            cmp al, 0x20	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fd96	            0x7520	                           jne 0x400fdb8	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fd98	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fd9c	          0x8b4024	            mov eax, dword [rax + 0x24] 	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fd9f	          0x83f802	                              cmp eax, 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fda2	            0x7514	                           jne 0x400fdb8	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fda4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fda8	        0x488b45f8	                mov rax, qword [rbp - 8]	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdac	          0x4829c2	                            sub rdx, rax	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdaf	          0x4889d0	                            mov rax, rdx	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdb2	        0x4883f802	                              cmp rax, 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdb6	            0x7e2f	                           jle 0x400fde7	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdbc	           0xfb600	                   movzx eax, byte [rax]	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdbf	            0x3c2c	                            cmp al, 0x2c	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdc1	            0x7536	                           jne 0x400fdf9	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdc7	      0x2500800000	                         and eax, 0x8000	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdcc	          0x4885c0	                           test rax, rax	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdcf	            0x7428	                            je 0x400fdf9	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdd1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdd5	        0x488b45f8	                mov rax, qword [rbp - 8]	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdd9	          0x4829c2	                            sub rdx, rax	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fddc	          0x4889d0	                            mov rax, rdx	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fddf	          0x83e001	                              and eax, 1	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fde2	          0x4885c0	                           test rax, rax	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fde5	            0x7512	                           jne 0x400fdf9	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fde7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdeb	        0x488d5001	                      lea rdx, [rax + 1]	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdf3	        0x48895008	                mov qword [rax + 8], rdx	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdf7	            0xeb5d	                           jmp 0x400fe56	     11523	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400fdf9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fdfc	            0x4898	                                    cdqe	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fdfe	        0x48c1e006	                              shl rax, 6	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe02	    0x480500000000	                              add rax, 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe08	          0x488b00	                    mov rax, qword [rax]	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe0b	    0x483d00000000	                              cmp rax, 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe11	            0x752c	                           jne 0x400fe3f	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400fe17	      0xba05000000	                              mov edx, 5	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400fe1c	      0xbe00000000	                              mov esi, 0	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400fe21	          0x4889c7	                            mov rdi, rax	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400fe24	      0xe800000000	                          call 0x400fe29	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400fe29	            0x85c0	                           test eax, eax	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400fe2b	            0x7512	                           jne 0x400fe3f	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400fe2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe31	        0x488d5005	                      lea rdx, [rax + 5]	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe35	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe39	        0x48895008	                mov qword [rax + 8], rdx	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe3d	            0xeb17	                           jmp 0x400fe56	     11533	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400fe3f	      0x48836df001	               sub qword [rbp - 0x10], 1	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fe44	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fe48	        0x488b4008	                mov rax, qword [rax + 8]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fe4c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fe50	     0xf82f1feffff	                            jb 0x400fd47	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400fe56	              0x90	                                     nop	     11538	option.c	FUNCTION_88
0x400fe57	            0xeb0a	                           jmp 0x400fe63	     11538	option.c	FUNCTION_88
0x400fe59	              0x90	                                     nop	     11394	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400fe5a	            0xeb07	                           jmp 0x400fe63	     11394	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400fe5c	              0x90	                                     nop	     11414	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400fe5d	            0xeb04	                           jmp 0x400fe63	     11414	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400fe5f	              0x90	                                     nop	     11426	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400fe60	            0xeb01	                           jmp 0x400fe63	     11426	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400fe62	              0x90	                                     nop	     11468	option.c	FUNCTION_88	IF_20
0x400fe63	              0xc9	                                   leave	     11539	option.c	FUNCTION_88
0x400fe64	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
signcolumn_on	ELSE,0:IF,2:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	33
0x4011e5b	              0x55	                                push rbp	     12696	option.c	FUNCTION_118
0x4011e5c	          0x4889e5	                            mov rbp, rsp	     12696	option.c	FUNCTION_118
0x4011e5f	        0x48897df8	                mov qword [rbp - 8], rdi	     12696	option.c	FUNCTION_118
0x4011e63	        0x488b45f8	                mov rax, qword [rbp - 8]	     12697	option.c	FUNCTION_118	IF_1
0x4011e67	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	     12697	option.c	FUNCTION_118	IF_1
0x4011e6e	           0xfb600	                   movzx eax, byte [rax]	     12697	option.c	FUNCTION_118	IF_1
0x4011e71	            0x3c6e	                            cmp al, 0x6e	     12697	option.c	FUNCTION_118	IF_1
0x4011e73	            0x7507	                           jne 0x4011e7c	     12697	option.c	FUNCTION_118	IF_1
0x4011e75	      0xb800000000	                              mov eax, 0	     12698	option.c	FUNCTION_118	IF_1
0x4011e7a	            0xeb4c	                           jmp 0x4011ec8	     12698	option.c	FUNCTION_118	IF_1
0x4011e7c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12699	option.c	FUNCTION_118	IF_2
0x4011e80	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	     12699	option.c	FUNCTION_118	IF_2
0x4011e87	           0xfb600	                   movzx eax, byte [rax]	     12699	option.c	FUNCTION_118	IF_2
0x4011e8a	            0x3c79	                            cmp al, 0x79	     12699	option.c	FUNCTION_118	IF_2
0x4011e8c	            0x7507	                           jne 0x4011e95	     12699	option.c	FUNCTION_118	IF_2
0x4011e8e	      0xb801000000	                              mov eax, 1	     12700	option.c	FUNCTION_118	IF_2
0x4011e93	            0xeb33	                           jmp 0x4011ec8	     12700	option.c	FUNCTION_118	IF_2
0x4011e95	        0x488b45f8	                mov rax, qword [rbp - 8]	     12701	option.c	FUNCTION_118
0x4011e99	        0x488b4008	                mov rax, qword [rax + 8]	     12701	option.c	FUNCTION_118
0x4011e9d	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	     12701	option.c	FUNCTION_118
0x4011ea4	          0x4885c0	                           test rax, rax	     12703	option.c	FUNCTION_118
0x4011ea7	            0x7512	                           jne 0x4011ebb	     12703	option.c	FUNCTION_118
0x4011ea9	        0x488b45f8	                mov rax, qword [rbp - 8]	     12703	option.c	FUNCTION_118
0x4011ead	        0x488b4008	                mov rax, qword [rax + 8]	     12703	option.c	FUNCTION_118
0x4011eb1	    0x8b80281c0000	          mov eax, dword [rax + 0x1c28] 	     12703	option.c	FUNCTION_118
0x4011eb7	            0x85c0	                           test eax, eax	     12703	option.c	FUNCTION_118
0x4011eb9	            0x7407	                            je 0x4011ec2	     12703	option.c	FUNCTION_118
0x4011ebb	      0xb801000000	                              mov eax, 1	     12703	option.c	FUNCTION_118
0x4011ec0	            0xeb05	                           jmp 0x4011ec7	     12701	option.c	FUNCTION_118
0x4011ec2	      0xb800000000	                              mov eax, 0	     12703	option.c	FUNCTION_118
0x4011ec7	              0x90	                                     nop	     12701	option.c	FUNCTION_118
0x4011ec8	              0x5d	                                 pop rbp	     12706	option.c	FUNCTION_118
0x4011ec9	              0xc3	                                     ret	     12706	option.c	FUNCTION_118
set_term_option_alloced	ELSE,0:IF,1:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,1	36
0x40047c2	              0x55	                                push rbp	      5780	option.c	FUNCTION_33
0x40047c3	          0x4889e5	                            mov rbp, rsp	      5780	option.c	FUNCTION_33
0x40047c6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5780	option.c	FUNCTION_33
0x40047ca	    0xc745fc010000	                  mov dword [rbp - 4], 1	      5783	option.c	FUNCTION_33	FOR_1
0x40047d1	            0xeb49	                           jmp 0x400481c	      5783	option.c	FUNCTION_33	FOR_1
0x40047d3	          0x8b45fc	                mov eax, dword [rbp - 4]	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40047d6	            0x4898	                                    cdqe	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40047d8	        0x48c1e006	                              shl rax, 6	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40047dc	    0x480500000000	                              add rax, 0	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40047e2	          0x488b00	                    mov rax, qword [rax]	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40047e5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40047e9	            0x752d	                           jne 0x4004818	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40047eb	          0x8b45fc	                mov eax, dword [rbp - 4]	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40047ee	            0x4898	                                    cdqe	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40047f0	        0x48c1e006	                              shl rax, 6	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40047f4	    0x480500000000	                              add rax, 0	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40047fa	          0x488b00	                    mov rax, qword [rax]	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40047fd	        0x4883c808	                               or rax, 8	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004801	          0x4889c2	                            mov rdx, rax	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004804	          0x8b45fc	                mov eax, dword [rbp - 4]	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004807	            0x4898	                                    cdqe	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004809	        0x48c1e006	                              shl rax, 6	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x400480d	    0x480500000000	                              add rax, 0	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004813	          0x488910	                    mov qword [rax], rdx	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004816	            0xeb1c	                           jmp 0x4004834	      5787	option.c	FUNCTION_33	FOR_1	IF_1
0x4004818	        0x8345fc01	                  add dword [rbp - 4], 1	      5783	option.c	FUNCTION_33	FOR_1
0x400481c	          0x8b45fc	                mov eax, dword [rbp - 4]	      5783	option.c	FUNCTION_33	FOR_1
0x400481f	            0x4898	                                    cdqe	      5783	option.c	FUNCTION_33	FOR_1
0x4004821	        0x48c1e006	                              shl rax, 6	      5783	option.c	FUNCTION_33	FOR_1
0x4004825	    0x480500000000	                              add rax, 0	      5783	option.c	FUNCTION_33	FOR_1
0x400482b	          0x488b00	                    mov rax, qword [rax]	      5783	option.c	FUNCTION_33	FOR_1
0x400482e	          0x4885c0	                           test rax, rax	      5783	option.c	FUNCTION_33	FOR_1
0x4004831	            0x75a0	                           jne 0x40047d3	      5783	option.c	FUNCTION_33	FOR_1
0x4004833	              0x90	                                     nop	      5789	option.c	FUNCTION_33
0x4004834	              0x5d	                                 pop rbp	      5790	option.c	FUNCTION_33
0x4004835	              0xc3	                                     ret	      5790	option.c	FUNCTION_33
did_set_string_option	ELSE,166:IF,310:SWITCH,0:CALL,262:DO,0:WHILE,8:functions,0:FOR,10	2824
0x4004e24	              0x55	                                push rbp	      6038	option.c	FUNCTION_40
0x4004e25	          0x4889e5	                            mov rbp, rsp	      6038	option.c	FUNCTION_40
0x4004e28	            0x4154	                                push r12	      6038	option.c	FUNCTION_40
0x4004e2a	              0x53	                                push rbx	      6038	option.c	FUNCTION_40
0x4004e2b	    0x4881ec800100	                          sub rsp, 0x180	      6038	option.c	FUNCTION_40
0x4004e32	    0x89bd9cfeffff	            mov dword [rbp - 0x164], edi	      6038	option.c	FUNCTION_40
0x4004e38	    0x4889b590feff	            mov qword [rbp - 0x170], rsi	      6038	option.c	FUNCTION_40
0x4004e3f	    0x899598feffff	            mov dword [rbp - 0x168], edx	      6038	option.c	FUNCTION_40
0x4004e45	    0x48898d88feff	            mov qword [rbp - 0x178], rcx	      6038	option.c	FUNCTION_40
0x4004e4c	    0x4c898580feff	             mov qword [rbp - 0x180], r8	      6038	option.c	FUNCTION_40
0x4004e53	    0x44898d7cfeff	            mov dword [rbp - 0x184], r9d	      6038	option.c	FUNCTION_40
0x4004e5a	    0x64488b042528	                mov rax, qword fs:[0x28]	      6038	option.c	FUNCTION_40
0x4004e63	        0x488945e8	             mov qword [rbp - 0x18], rax	      6038	option.c	FUNCTION_40
0x4004e67	            0x31c0	                            xor eax, eax	      6038	option.c	FUNCTION_40
0x4004e69	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6039	option.c	FUNCTION_40
0x4004e74	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	      6041	option.c	FUNCTION_40
0x4004e7e	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      6043	option.c	FUNCTION_40
0x4004e84	            0x4898	                                    cdqe	      6043	option.c	FUNCTION_40
0x4004e86	        0x48c1e006	                              shl rax, 6	      6043	option.c	FUNCTION_40
0x4004e8a	    0x480500000000	                              add rax, 0	      6043	option.c	FUNCTION_40
0x4004e90	          0x488b00	                    mov rax, qword [rax]	      6043	option.c	FUNCTION_40
0x4004e93	          0x83e008	                              and eax, 8	      6043	option.c	FUNCTION_40
0x4004e96	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      6043	option.c	FUNCTION_40
0x4004e9d	    0xc785b0feffff	              mov dword [rbp - 0x150], 0	      6046	option.c	FUNCTION_40
0x4004ea7	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	      6048	option.c	FUNCTION_40
0x4004eb1	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      6055	option.c	FUNCTION_40	CALL_1
0x4004eb7	            0x4898	                                    cdqe	      6055	option.c	FUNCTION_40	CALL_1
0x4004eb9	        0x48c1e006	                              shl rax, 6	      6055	option.c	FUNCTION_40	CALL_1
0x4004ebd	    0x480500000000	                              add rax, 0	      6055	option.c	FUNCTION_40	CALL_1
0x4004ec3	      0xbe02000000	                              mov esi, 2	      6055	option.c	FUNCTION_40	CALL_1
0x4004ec8	          0x4889c7	                            mov rdi, rax	      6055	option.c	FUNCTION_40	CALL_1
0x4004ecb	      0xe866830000	                 call sym.get_varp_scope	      6055	option.c	FUNCTION_40	CALL_1
0x4004ed0	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      6055	option.c	FUNCTION_40	CALL_1
0x4004ed7	    0x8b0500000000	            mov eax, dword [0x04004edd] 	      6058	option.c	FUNCTION_40	IF_1
0x4004edd	            0x85c0	                           test eax, eax	      6058	option.c	FUNCTION_40	IF_1
0x4004edf	            0x750a	                           jne 0x4004eeb	      6058	option.c	FUNCTION_40	IF_1
0x4004ee1	    0x8b0500000000	            mov eax, dword [0x04004ee7] 	      6060	option.c	FUNCTION_40	IF_1
0x4004ee7	            0x85c0	                           test eax, eax	      6060	option.c	FUNCTION_40	IF_1
0x4004ee9	            0x742f	                            je 0x4004f1a	      6060	option.c	FUNCTION_40	IF_1
0x4004eeb	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      6062	option.c	FUNCTION_40	IF_1
0x4004ef1	            0x4898	                                    cdqe	      6062	option.c	FUNCTION_40	IF_1
0x4004ef3	        0x48c1e006	                              shl rax, 6	      6062	option.c	FUNCTION_40	IF_1
0x4004ef7	    0x480500000000	                              add rax, 0	      6062	option.c	FUNCTION_40	IF_1
0x4004efd	          0x488b00	                    mov rax, qword [rax]	      6062	option.c	FUNCTION_40	IF_1
0x4004f00	      0x2500000800	                        and eax, 0x80000	      6062	option.c	FUNCTION_40	IF_1
0x4004f05	          0x4885c0	                           test rax, rax	      6062	option.c	FUNCTION_40	IF_1
0x4004f08	            0x7410	                            je 0x4004f1a	      6062	option.c	FUNCTION_40	IF_1
0x4004f0a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6064	option.c	FUNCTION_40	IF_1
0x4004f15	      0xe9a2310000	                           jmp 0x40080bc	      6064	option.c	FUNCTION_40	IF_1
0x4004f1a	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f20	            0x4898	                                    cdqe	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f22	        0x48c1e006	                              shl rax, 6	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f26	    0x480500000000	                              add rax, 0	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f2c	          0x488b00	                    mov rax, qword [rax]	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f2f	      0x2500004000	                       and eax, 0x400000	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f34	          0x4885c0	                           test rax, rax	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f37	            0x7430	                            je 0x4004f69	      6071	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f39	    0x8b0500000000	            mov eax, dword [0x04004f3f] 	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f3f	            0x85c0	                           test eax, eax	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f41	            0x7407	                            je 0x4004f4a	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f43	      0xba00000000	                              mov edx, 0	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f48	            0xeb05	                           jmp 0x4004f4f	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f4a	      0xba00000000	                              mov edx, 0	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f4f	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f56	          0x488b00	                    mov rax, qword [rax]	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f59	          0x4889d6	                            mov rsi, rdx	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f5c	          0x4889c7	                            mov rdi, rax	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f5f	      0xe800000000	                          call 0x4004f64	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f64	          0x4885c0	                           test rax, rax	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f67	            0x753b	                           jne 0x4004fa4	      6072	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x4004f69	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f6f	            0x4898	                                    cdqe	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f71	        0x48c1e006	                              shl rax, 6	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f75	    0x480500000000	                              add rax, 0	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f7b	          0x488b00	                    mov rax, qword [rax]	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f7e	      0x2500000008	                   and eax, section_end.	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f83	          0x4885c0	                           test rax, rax	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f86	            0x742c	                            je 0x4004fb4	      6074	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004f88	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6075	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4004f8f	          0x488b00	                    mov rax, qword [rax]	      6075	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4004f92	      0xbe00000000	                              mov esi, 0	      6075	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4004f97	          0x4889c7	                            mov rdi, rax	      6075	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4004f9a	      0xe800000000	                          call 0x4004f9f	      6075	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4004f9f	          0x4885c0	                           test rax, rax	      6075	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4004fa2	            0x7410	                            je 0x4004fb4	      6075	option.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x4004fa4	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6077	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004faf	      0xe908310000	                           jmp 0x40080bc	      6077	option.c	FUNCTION_40	ELSE_1	IF_2
0x4004fb4	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6081	option.c	FUNCTION_40	ELSE_2	IF_3
0x4004fbf	     0xf85b2000000	                           jne 0x4005077	      6081	option.c	FUNCTION_40	ELSE_2	IF_3
0x4004fc5	    0x488b05000000	            mov rax, qword [0x04004fcc] 	      6083	option.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x4004fcc	           0xfb600	                   movzx eax, byte [rax]	      6083	option.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x4004fcf	            0x84c0	                             test al, al	      6083	option.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x4004fd1	            0x750b	                           jne 0x4004fde	      6083	option.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x4004fd3	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6084	option.c	FUNCTION_40	ELSE_2	IF_3	CALL_4
0x4004fde	    0x8b0500000000	            mov eax, dword [0x04004fe4] 	      6086	option.c	FUNCTION_40	ELSE_2	IF_3	IF_5
0x4004fe4	            0x85c0	                           test eax, eax	      6086	option.c	FUNCTION_40	ELSE_2	IF_3	IF_5
0x4004fe6	            0x7410	                            je 0x4004ff8	      6086	option.c	FUNCTION_40	ELSE_2	IF_3	IF_5
0x4004fe8	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6087	option.c	FUNCTION_40	ELSE_2	IF_3	CALL_5
0x4004ff3	      0xe9c4300000	                           jmp 0x40080bc	      6087	option.c	FUNCTION_40	ELSE_2	IF_3	CALL_5
0x4004ff8	    0x488b05000000	            mov rax, qword [0x04004fff] 	      6088	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_6	CALL_6
0x4004fff	          0x4889c7	                            mov rdi, rax	      6088	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_6	CALL_6
0x4005002	      0xe800000000	                          call 0x4005007	      6088	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_6	CALL_6
0x4005007	            0x85c0	                           test eax, eax	      6088	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_6	CALL_6
0x4005009	            0x7410	                            je 0x400501b	      6088	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_6	CALL_6
0x400500b	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6089	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_6
0x4005016	      0xe9a1300000	                           jmp 0x40080bc	      6089	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_6
0x400501b	    0x488b05000000	            mov rax, qword [0x04005022] 	      6091	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x4005022	          0x4889c7	                            mov rdi, rax	      6091	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x4005025	      0xe800000000	                          call 0x400502a	      6091	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x400502a	            0x85c0	                           test eax, eax	      6091	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x400502c	            0x7510	                           jne 0x400503e	      6091	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x400502e	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6092	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_4	IF_7
0x4005039	      0xe97e300000	                           jmp 0x40080bc	      6092	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_4	IF_7
0x400503e	      0xe800000000	                          call 0x4005043	      6096	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5	CALL_10
0x4005043	      0xbf00000000	                              mov edi, 0	      6100	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5	CALL_11
0x4005048	      0xe857650000	                     call sym.findoption	      6100	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5	CALL_11
0x400504d	    0x89859cfeffff	            mov dword [rbp - 0x164], eax	      6100	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5	CALL_11
0x4005053	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x4005059	            0x4898	                                    cdqe	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x400505b	        0x48c1e006	                              shl rax, 6	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x400505f	    0x480500000000	                              add rax, 0	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x4005065	          0x488b00	                    mov rax, qword [rax]	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x4005068	          0x83e008	                              and eax, 8	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x400506b	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x4005072	      0xe945300000	                           jmp 0x40080bc	      6101	option.c	FUNCTION_40	ELSE_2	IF_3	ELSE_5
0x4005077	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6106	option.c	FUNCTION_40	ELSE_6	IF_8
0x4005082	     0xf8525010000	                           jne 0x40051ad	      6106	option.c	FUNCTION_40	ELSE_6	IF_8
0x4005088	    0x488b05000000	            mov rax, qword [0x0400508f] 	      6108	option.c	FUNCTION_40	ELSE_6	IF_8
0x400508f	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      6108	option.c	FUNCTION_40	ELSE_6	IF_8
0x4005096	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	      6109	option.c	FUNCTION_40	ELSE_6	IF_8
0x40050a1	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6111	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050a7	          0x83e004	                              and eax, 4	      6111	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050aa	            0x85c0	                           test eax, eax	      6111	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050ac	            0x7429	                            je 0x40050d7	      6111	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050ae	    0x488b05000000	            mov rax, qword [0x040050b5] 	      6113	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050b5	    0x488b80f81300	          mov rax, qword [rax + 0x13f8] 	      6113	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050bc	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      6113	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050c3	    0x488b05000000	            mov rax, qword [0x040050ca] 	      6114	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050ca	    0x480500140000	                         add rax, 0x1400	      6114	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050d0	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      6114	option.c	FUNCTION_40	ELSE_6	IF_8	IF_9
0x40050d7	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050dd	          0x83e004	                              and eax, 4	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050e0	            0x85c0	                           test eax, eax	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050e2	            0x7420	                            je 0x4005104	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050e4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050eb	           0xfb600	                   movzx eax, byte [rax]	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050ee	            0x84c0	                             test al, al	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050f0	            0x7512	                           jne 0x4005104	      6117	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050f2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6119	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050f9	    0xc70000000000	                      mov dword [rax], 0	      6119	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x40050ff	      0xe9b82f0000	                           jmp 0x40080bc	      6119	option.c	FUNCTION_40	ELSE_6	IF_8	IF_10
0x4005104	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x400510b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4005112	      0xb901000000	                              mov ecx, 1	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4005117	      0xbe00000000	                              mov esi, 0	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x400511c	          0x4889c7	                            mov rdi, rax	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x400511f	      0xe83ec20000	              call sym.opt_strings_flags	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4005124	          0x83f801	                              cmp eax, 1	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4005127	            0x740b	                            je 0x4005134	      6122	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4005129	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6123	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_11
0x4005134	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400513b	            0x8b00	                    mov eax, dword [rax]	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400513d	          0x83e002	                              and eax, 2	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005140	            0x85c0	                           test eax, eax	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005142	           0xf95c0	                                setne al	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005145	           0xfb6d0	                           movzx edx, al	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005148	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6125	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400514f	            0x8b00	                    mov eax, dword [rax]	      6125	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005151	          0x83e001	                              and eax, 1	      6125	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005154	            0x85c0	                           test eax, eax	      6125	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005156	           0xf95c0	                                setne al	      6125	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005159	           0xfb6c0	                           movzx eax, al	      6125	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400515c	             0x1c2	                            add edx, eax	      6125	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400515e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6126	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005165	            0x8b00	                    mov eax, dword [rax]	      6126	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005167	          0x83e004	                              and eax, 4	      6126	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400516a	            0x85c0	                           test eax, eax	      6126	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400516c	           0xf95c0	                                setne al	      6126	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400516f	           0xfb6c0	                           movzx eax, al	      6126	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005172	             0x1d0	                            add eax, edx	      6126	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005174	          0x83f801	                              cmp eax, 1	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x4005177	     0xf843f2f0000	                            je 0x40080bc	      6124	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x400517d	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      6129	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4005184	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6129	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x400518b	      0xb901000000	                              mov ecx, 1	      6129	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4005190	      0xbe00000000	                              mov esi, 0	      6129	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4005195	          0x4889c7	                            mov rdi, rax	      6129	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4005198	      0xe8c5c10000	              call sym.opt_strings_flags	      6129	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x400519d	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6130	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x40051a8	      0xe90f2f0000	                           jmp 0x40080bc	      6130	option.c	FUNCTION_40	ELSE_6	IF_8	ELSE_7	IF_12
0x40051ad	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6136	option.c	FUNCTION_40	ELSE_8	IF_13
0x40051b8	            0x740d	                            je 0x40051c7	      6136	option.c	FUNCTION_40	ELSE_8	IF_13
0x40051ba	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6136	option.c	FUNCTION_40	ELSE_8	IF_13
0x40051c5	            0x7567	                           jne 0x400522e	      6136	option.c	FUNCTION_40	ELSE_8	IF_13
0x40051c7	    0x488b05000000	            mov rax, qword [0x040051ce] 	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051ce	           0xfb600	                   movzx eax, byte [rax]	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051d1	            0x3c2e	                            cmp al, 0x2e	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051d3	            0x750d	                           jne 0x40051e2	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051d5	    0x488b05000000	            mov rax, qword [0x040051dc] 	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051dc	        0x488d5001	                      lea rdx, [rax + 1]	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051e0	            0xeb07	                           jmp 0x40051e9	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051e2	    0x488b15000000	            mov rdx, qword [0x040051e9] 	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051e9	    0x488b05000000	            mov rax, qword [0x040051f0] 	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051f0	           0xfb600	                   movzx eax, byte [rax]	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051f3	            0x3c2e	                            cmp al, 0x2e	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051f5	            0x750d	                           jne 0x4005204	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051f7	    0x488b05000000	            mov rax, qword [0x040051fe] 	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x40051fe	        0x4883c001	                              add rax, 1	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x4005202	            0xeb07	                           jmp 0x400520b	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x4005204	    0x488b05000000	            mov rax, qword [0x0400520b] 	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x400520b	          0x4889d6	                            mov rsi, rdx	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x400520e	          0x4889c7	                            mov rdi, rax	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x4005211	      0xe800000000	                          call 0x4005216	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x4005216	            0x85c0	                           test eax, eax	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x4005218	     0xf859e2e0000	                           jne 0x40080bc	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x400521e	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6140	option.c	FUNCTION_40	ELSE_8	IF_13	CALL_15
0x4005229	      0xe98e2e0000	                           jmp 0x40080bc	      6138	option.c	FUNCTION_40	ELSE_8	IF_13	IF_14	CALL_14
0x400522e	    0x488b05000000	            mov rax, qword [0x04005235] 	      6144	option.c	FUNCTION_40	ELSE_9	IF_15
0x4005235	    0x4805b8010000	                          add rax, 0x1b8	      6144	option.c	FUNCTION_40	ELSE_9	IF_15
0x400523b	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      6144	option.c	FUNCTION_40	ELSE_9	IF_15
0x4005242	            0x7527	                           jne 0x400526b	      6144	option.c	FUNCTION_40	ELSE_9	IF_15
0x4005244	    0x488b05000000	            mov rax, qword [0x0400524b] 	      6146	option.c	FUNCTION_40	ELSE_9	IF_15	IF_16	CALL_16
0x400524b	          0x4889c7	                            mov rdi, rax	      6146	option.c	FUNCTION_40	ELSE_9	IF_15	IF_16	CALL_16
0x400524e	      0xe824ca0000	                   call sym.briopt_check	      6146	option.c	FUNCTION_40	ELSE_9	IF_15	IF_16	CALL_16
0x4005253	            0x85c0	                           test eax, eax	      6146	option.c	FUNCTION_40	ELSE_9	IF_15	IF_16	CALL_16
0x4005255	     0xf85612e0000	                           jne 0x40080bc	      6146	option.c	FUNCTION_40	ELSE_9	IF_15	IF_16	CALL_16
0x400525b	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6147	option.c	FUNCTION_40	ELSE_9	IF_15	IF_16
0x4005266	      0xe9512e0000	                           jmp 0x40080bc	      6147	option.c	FUNCTION_40	ELSE_9	IF_15	IF_16
0x400526b	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6156	option.c	FUNCTION_40	ELSE_10	IF_17
0x4005276	            0x7430	                            je 0x40052a8	      6156	option.c	FUNCTION_40	ELSE_10	IF_17
0x4005278	    0x488b05000000	            mov rax, qword [0x0400527f] 	      6157	option.c	FUNCTION_40	ELSE_10	IF_17
0x400527f	    0x4805b8140000	                         add rax, 0x14b8	      6157	option.c	FUNCTION_40	ELSE_10	IF_17
0x4005285	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      6157	option.c	FUNCTION_40	ELSE_10	IF_17
0x400528c	            0x741a	                            je 0x40052a8	      6157	option.c	FUNCTION_40	ELSE_10	IF_17
0x400528e	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6158	option.c	FUNCTION_40	ELSE_10	IF_17
0x4005299	            0x740d	                            je 0x40052a8	      6158	option.c	FUNCTION_40	ELSE_10	IF_17
0x400529b	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6159	option.c	FUNCTION_40	ELSE_10	IF_17
0x40052a6	            0x7527	                           jne 0x40052cf	      6159	option.c	FUNCTION_40	ELSE_10	IF_17
0x40052a8	      0xe800000000	                          call 0x40052ad	      6161	option.c	FUNCTION_40	ELSE_10	IF_17	IF_18	CALL_17
0x40052ad	            0x85c0	                           test eax, eax	      6161	option.c	FUNCTION_40	ELSE_10	IF_17	IF_18	CALL_17
0x40052af	     0xf85072e0000	                           jne 0x40080bc	      6161	option.c	FUNCTION_40	ELSE_10	IF_17	IF_18	CALL_17
0x40052b5	    0xc785acfeffff	              mov dword [rbp - 0x154], 1	      6163	option.c	FUNCTION_40	ELSE_10	IF_17	IF_18
0x40052bf	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6164	option.c	FUNCTION_40	ELSE_10	IF_17	IF_18
0x40052ca	      0xe9ed2d0000	                           jmp 0x40080bc	      6161	option.c	FUNCTION_40	ELSE_10	IF_17	IF_18	CALL_17
0x40052cf	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6169	option.c	FUNCTION_40	ELSE_11	IF_19
0x40052da	            0x754f	                           jne 0x400532b	      6169	option.c	FUNCTION_40	ELSE_11	IF_19
0x40052dc	    0x8b0500000000	            mov eax, dword [0x040052e2] 	      6172	option.c	FUNCTION_40	ELSE_11	IF_19	IF_20
0x40052e2	            0x85c0	                           test eax, eax	      6172	option.c	FUNCTION_40	ELSE_11	IF_19	IF_20
0x40052e4	            0x7419	                            je 0x40052ff	      6172	option.c	FUNCTION_40	ELSE_11	IF_19	IF_20
0x40052e6	      0xbe00000000	                              mov esi, 0	      6174	option.c	FUNCTION_40	ELSE_11	IF_19	IF_20	CALL_18
0x40052eb	      0xbf00000000	                              mov edi, 0	      6174	option.c	FUNCTION_40	ELSE_11	IF_19	IF_20	CALL_18
0x40052f0	      0xe800000000	                          call 0x40052f5	      6174	option.c	FUNCTION_40	ELSE_11	IF_19	IF_20	CALL_18
0x40052f5	    0xc70500000000	               mov dword [0x040052ff], 0	      6175	option.c	FUNCTION_40	ELSE_11	IF_19	IF_20
0x40052ff	    0x8b0500000000	            mov eax, dword [0x04005305] 	      6177	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21
0x4005305	            0x85c0	                           test eax, eax	      6177	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21
0x4005307	     0xf84af2d0000	                            je 0x40080bc	      6177	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21
0x400530d	      0xbe00000000	                              mov esi, 0	      6179	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21	CALL_19
0x4005312	      0xbf00000000	                              mov edi, 0	      6179	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21	CALL_19
0x4005317	      0xe800000000	                          call 0x400531c	      6179	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21	CALL_19
0x400531c	    0xc70500000000	               mov dword [0x04005326], 0	      6180	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21
0x4005326	      0xe9912d0000	                           jmp 0x40080bc	      6180	option.c	FUNCTION_40	ELSE_11	IF_19	IF_21
0x400532b	    0x488b05000000	            mov rax, qword [0x04005332] 	      6186	option.c	FUNCTION_40	ELSE_12	IF_22
0x4005332	    0x480578020000	                          add rax, 0x278	      6186	option.c	FUNCTION_40	ELSE_12	IF_22
0x4005338	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      6186	option.c	FUNCTION_40	ELSE_12	IF_22
0x400533f	            0x751b	                           jne 0x400535c	      6186	option.c	FUNCTION_40	ELSE_12	IF_22
0x4005341	    0x488b05000000	            mov rax, qword [0x04005348] 	      6187	option.c	FUNCTION_40	ELSE_12	IF_22
0x4005348	          0x4889c7	                            mov rdi, rax	      6187	option.c	FUNCTION_40	ELSE_12	IF_22
0x400534b	      0xe800000000	                          call 0x4005350	      6187	option.c	FUNCTION_40	ELSE_12	IF_22
0x4005350	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6187	option.c	FUNCTION_40	ELSE_12	IF_22
0x4005357	      0xe9602d0000	                           jmp 0x40080bc	      6187	option.c	FUNCTION_40	ELSE_12	IF_22
0x400535c	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6192	option.c	FUNCTION_40	ELSE_13	IF_23
0x4005367	     0xf85aa000000	                           jne 0x4005417	      6192	option.c	FUNCTION_40	ELSE_13	IF_23
0x400536d	    0x488b05000000	            mov rax, qword [0x04005374] 	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x4005374	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x400537b	      0xe980000000	                           jmp 0x4005400	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x4005380	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x4005387	        0x4883c001	                              add rax, 1	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x400538b	           0xfb600	                   movzx eax, byte [rax]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x400538e	            0x84c0	                             test al, al	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x4005390	            0x7436	                            je 0x40053c8	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x4005392	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x4005399	        0x4883c002	                              add rax, 2	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x400539d	           0xfb600	                   movzx eax, byte [rax]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053a0	            0x3c2c	                            cmp al, 0x2c	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053a2	            0x7512	                           jne 0x40053b6	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053a4	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053ab	        0x4883c003	                              add rax, 3	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053af	           0xfb600	                   movzx eax, byte [rax]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053b2	            0x84c0	                             test al, al	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053b4	            0x7522	                           jne 0x40053d8	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053b6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053bd	        0x4883c002	                              add rax, 2	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053c1	           0xfb600	                   movzx eax, byte [rax]	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053c4	            0x84c0	                             test al, al	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053c6	            0x7410	                            je 0x40053d8	      6197	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053c8	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6199	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053d3	      0xe9e42c0000	                           jmp 0x40080bc	      6200	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_24
0x40053d8	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6202	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_25
0x40053df	        0x4883c002	                              add rax, 2	      6202	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_25
0x40053e3	           0xfb600	                   movzx eax, byte [rax]	      6202	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_25
0x40053e6	            0x84c0	                             test al, al	      6202	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_25
0x40053e8	     0xf84b22c0000	                            je 0x40080a0	      6202	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_25
0x40053ee	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x40053f5	        0x4883c003	                              add rax, 3	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x40053f9	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x4005400	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x4005407	           0xfb600	                   movzx eax, byte [rax]	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x400540a	            0x84c0	                             test al, al	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x400540c	     0xf856effffff	                           jne 0x4005380	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x4005412	      0xe9a52c0000	                           jmp 0x40080bc	      6195	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1
0x4005417	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6209	option.c	FUNCTION_40	ELSE_14	IF_26
0x4005422	            0x751d	                           jne 0x4005441	      6209	option.c	FUNCTION_40	ELSE_14	IF_26
0x4005424	      0xe800000000	                          call 0x4005429	      6211	option.c	FUNCTION_40	ELSE_14	IF_26	IF_27	CALL_21
0x4005429	            0x85c0	                           test eax, eax	      6211	option.c	FUNCTION_40	ELSE_14	IF_26	IF_27	CALL_21
0x400542b	     0xf858b2c0000	                           jne 0x40080bc	      6211	option.c	FUNCTION_40	ELSE_14	IF_26	IF_27	CALL_21
0x4005431	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6212	option.c	FUNCTION_40	ELSE_14	IF_26	IF_27
0x400543c	      0xe97b2c0000	                           jmp 0x40080bc	      6212	option.c	FUNCTION_40	ELSE_14	IF_26	IF_27
0x4005441	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6216	option.c	FUNCTION_40	ELSE_15	IF_28
0x400544c	            0x7535	                           jne 0x4005483	      6216	option.c	FUNCTION_40	ELSE_15	IF_28
0x400544e	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x4005455	          0x488b00	                    mov rax, qword [rax]	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x4005458	      0xba01000000	                              mov edx, 1	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x400545d	      0xbe00000000	                              mov esi, 0	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x4005462	          0x4889c7	                            mov rdi, rax	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x4005465	      0xe8c9be0000	              call sym.check_opt_strings	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x400546a	          0x83f801	                              cmp eax, 1	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x400546d	     0xf84492c0000	                            je 0x40080bc	      6218	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29	CALL_22
0x4005473	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6219	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29
0x400547e	      0xe9392c0000	                           jmp 0x40080bc	      6219	option.c	FUNCTION_40	ELSE_15	IF_28	IF_29
0x4005483	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6224	option.c	FUNCTION_40	ELSE_16	IF_30
0x400548e	     0xf8582000000	                           jne 0x4005516	      6224	option.c	FUNCTION_40	ELSE_16	IF_30
0x4005494	    0x488b05000000	            mov rax, qword [0x0400549b] 	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x400549b	      0xb901000000	                              mov ecx, 1	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x40054a0	      0xba00000000	                              mov edx, 0	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x40054a5	      0xbe00000000	                              mov esi, 0	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x40054aa	          0x4889c7	                            mov rdi, rax	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x40054ad	      0xe8b0be0000	              call sym.opt_strings_flags	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x40054b2	          0x83f801	                              cmp eax, 1	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x40054b5	            0x740b	                            je 0x40054c2	      6226	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31	CALL_23
0x40054b7	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6227	option.c	FUNCTION_40	ELSE_16	IF_30	IF_31
0x40054c2	    0x8b0500000000	            mov eax, dword [0x040054c8] 	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054c8	      0x2500100000	                         and eax, 0x1000	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054cd	            0x85c0	                           test eax, eax	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054cf	     0xf84e72b0000	                            je 0x40080bc	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054d5	    0x8b0500000000	            mov eax, dword [0x040054db] 	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054db	      0x2500080000	                          and eax, 0x800	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054e0	            0x85c0	                           test eax, eax	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054e2	     0xf84d42b0000	                            je 0x40080bc	      6228	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x40054e8	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6231	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32	CALL_24
0x40054ef	      0xb901000000	                              mov ecx, 1	      6231	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32	CALL_24
0x40054f4	      0xba00000000	                              mov edx, 0	      6231	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32	CALL_24
0x40054f9	      0xbe00000000	                              mov esi, 0	      6231	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32	CALL_24
0x40054fe	          0x4889c7	                            mov rdi, rax	      6231	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32	CALL_24
0x4005501	      0xe85cbe0000	              call sym.opt_strings_flags	      6231	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32	CALL_24
0x4005506	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6232	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x4005511	      0xe9a62b0000	                           jmp 0x40080bc	      6232	option.c	FUNCTION_40	ELSE_16	IF_30	IF_32
0x4005516	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6236	option.c	FUNCTION_40	ELSE_17	IF_33
0x4005521	            0x7537	                           jne 0x400555a	      6236	option.c	FUNCTION_40	ELSE_17	IF_33
0x4005523	    0x488b05000000	            mov rax, qword [0x0400552a] 	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x400552a	      0xb901000000	                              mov ecx, 1	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x400552f	      0xba00000000	                              mov edx, 0	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x4005534	      0xbe00000000	                              mov esi, 0	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x4005539	          0x4889c7	                            mov rdi, rax	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x400553c	      0xe821be0000	              call sym.opt_strings_flags	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x4005541	          0x83f801	                              cmp eax, 1	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x4005544	     0xf84722b0000	                            je 0x40080bc	      6238	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34	CALL_25
0x400554a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6239	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34
0x4005555	      0xe9622b0000	                           jmp 0x40080bc	      6239	option.c	FUNCTION_40	ELSE_17	IF_33	IF_34
0x400555a	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6244	option.c	FUNCTION_40	ELSE_18	IF_35
0x4005565	            0x7532	                           jne 0x4005599	      6244	option.c	FUNCTION_40	ELSE_18	IF_35
0x4005567	    0x488b05000000	            mov rax, qword [0x0400556e] 	      6246	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36	CALL_26
0x400556e	      0xba01000000	                              mov edx, 1	      6246	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36	CALL_26
0x4005573	      0xbe00000000	                              mov esi, 0	      6246	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36	CALL_26
0x4005578	          0x4889c7	                            mov rdi, rax	      6246	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36	CALL_26
0x400557b	      0xe8b3bd0000	              call sym.check_opt_strings	      6246	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36	CALL_26
0x4005580	          0x83f801	                              cmp eax, 1	      6246	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36	CALL_26
0x4005583	     0xf84332b0000	                            je 0x40080bc	      6246	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36	CALL_26
0x4005589	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6247	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36
0x4005594	      0xe9232b0000	                           jmp 0x40080bc	      6247	option.c	FUNCTION_40	ELSE_18	IF_35	IF_36
0x4005599	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6252	option.c	FUNCTION_40	ELSE_19	IF_37
0x40055a4	            0x740d	                            je 0x40055b3	      6252	option.c	FUNCTION_40	ELSE_19	IF_37
0x40055a6	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6252	option.c	FUNCTION_40	ELSE_19	IF_37
0x40055b1	            0x757c	                           jne 0x400562f	      6252	option.c	FUNCTION_40	ELSE_19	IF_37
0x40055b3	    0x488b05000000	            mov rax, qword [0x040055ba] 	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055ba	      0xba00000000	                              mov edx, 0	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055bf	      0xbe00000000	                              mov esi, 0	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055c4	          0x4889c7	                            mov rdi, rax	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055c7	      0xe867bd0000	              call sym.check_opt_strings	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055cc	          0x83f801	                              cmp eax, 1	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055cf	            0x7410	                            je 0x40055e1	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055d1	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6255	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38
0x40055dc	      0xe9c22a0000	                           jmp 0x40080a3	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40055e1	      0xbf00000000	                              mov edi, 0	      6256	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x40055e6	      0xe8b2320000	               call sym.set_chars_option	      6256	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x40055eb	          0x4885c0	                           test rax, rax	      6256	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x40055ee	            0x7416	                            je 0x4005606	      6256	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x40055f0	      0xbf00000000	                              mov edi, 0	      6257	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_20	IF_39
0x40055f5	      0xe800000000	                          call 0x40055fa	      6257	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_20	IF_39
0x40055fa	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6257	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_20	IF_39
0x4005601	      0xe99d2a0000	                           jmp 0x40080a3	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x4005606	      0xbf00000000	                              mov edi, 0	      6258	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x400560b	      0xe88d320000	               call sym.set_chars_option	      6258	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x4005610	          0x4885c0	                           test rax, rax	      6258	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x4005613	     0xf848a2a0000	                            je 0x40080a3	      6258	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x4005619	      0xbf00000000	                              mov edi, 0	      6259	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_21	IF_40
0x400561e	      0xe800000000	                          call 0x4005623	      6259	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_21	IF_40
0x4005623	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6259	option.c	FUNCTION_40	ELSE_19	IF_37	ELSE_21	IF_40
0x400562a	      0xe9742a0000	                           jmp 0x40080a3	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x400562f	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6264	option.c	FUNCTION_40	ELSE_22	IF_41
0x400563a	     0xf85ea000000	                           jne 0x400572a	      6264	option.c	FUNCTION_40	ELSE_22	IF_41
0x4005640	    0x488b05000000	            mov rax, qword [0x04005647] 	      6266	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_32
0x4005647	      0xba00000000	                              mov edx, 0	      6266	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_32
0x400564c	      0xbe00000000	                              mov esi, 0	      6266	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_32
0x4005651	          0x4889c7	                            mov rdi, rax	      6266	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_32
0x4005654	      0xe8dabc0000	              call sym.check_opt_strings	      6266	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_32
0x4005659	          0x83f801	                              cmp eax, 1	      6266	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_32
0x400565c	     0xf85b8000000	                           jne 0x400571a	      6266	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_32
0x4005662	    0x488b05000000	            mov rax, qword [0x04005669] 	      6269	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42
0x4005669	           0xfb600	                   movzx eax, byte [rax]	      6269	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42
0x400566c	            0x3c64	                            cmp al, 0x64	      6269	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42
0x400566e	           0xf94c0	                                 sete al	      6269	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42
0x4005671	           0xfb6c0	                           movzx eax, al	      6269	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42
0x4005674	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	      6269	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42
0x400567a	      0xbe00000000	                              mov esi, 0	      6272	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_33
0x400567f	      0xbf00000000	                              mov edi, 0	      6272	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_33
0x4005684	      0xe800000000	                          call 0x4005689	      6272	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	CALL_33
0x4005689	    0x488b05000000	            mov rax, qword [0x04005690] 	      6275	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43
0x4005690	           0xfb600	                   movzx eax, byte [rax]	      6275	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43
0x4005693	            0x3c64	                            cmp al, 0x64	      6275	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43
0x4005695	           0xf94c0	                                 sete al	      6275	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43
0x4005698	           0xfb6c0	                           movzx eax, al	      6275	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43
0x400569b	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      6275	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43
0x40056a1	     0xf84152a0000	                            je 0x40080bc	      6275	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43
0x40056a7	      0xbf00000000	                              mov edi, 0	      6276	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x40056ac	      0xe800000000	                          call 0x40056b1	      6276	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x40056b1	          0x4885c0	                           test rax, rax	      6276	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x40056b4	     0xf84022a0000	                            je 0x40080bc	      6276	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x40056ba	      0xbe01000000	                              mov esi, 1	      6281	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_35
0x40056bf	      0xbf00000000	                              mov edi, 0	      6281	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_35
0x40056c4	      0xe800000000	                          call 0x40056c9	      6281	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_35
0x40056c9	    0x488b05000000	            mov rax, qword [0x040056d0] 	      6282	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_36
0x40056d0	          0x4889c7	                            mov rdi, rax	      6282	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_36
0x40056d3	      0xe800000000	                          call 0x40056d8	      6282	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_36
0x40056d8	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056df	            0x7407	                            je 0x40056e8	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056e1	      0xb800000000	                              mov eax, 0	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056e6	            0xeb05	                           jmp 0x40056ed	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056e8	      0xb800000000	                              mov eax, 0	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056ed	          0x4889c7	                            mov rdi, rax	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056f0	      0xe800000000	                          call 0x40056f5	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056f5	    0x488905000000	            mov qword [0x040056fc], rax 	      6283	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x40056fc	      0xbf00000000	                              mov edi, 0	      6284	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_38
0x4005701	      0xe897f0ffff	            call sym.check_string_option	      6284	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_38
0x4005706	      0xbe00000000	                              mov esi, 0	      6285	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x400570b	      0xbf00000000	                              mov edi, 0	      6285	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x4005710	      0xe800000000	                          call 0x4005715	      6285	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x4005715	      0xe9a2290000	                           jmp 0x40080bc	      6285	option.c	FUNCTION_40	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x400571a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6290	option.c	FUNCTION_40	ELSE_22	IF_41	ELSE_23
0x4005725	      0xe992290000	                           jmp 0x40080bc	      6290	option.c	FUNCTION_40	ELSE_22	IF_41	ELSE_23
0x400572a	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6294	option.c	FUNCTION_40	ELSE_23	ELSE_24	IF_44
0x4005735	            0x751d	                           jne 0x4005754	      6294	option.c	FUNCTION_40	ELSE_23	ELSE_24	IF_44
0x4005737	      0xe85bbd0000	                  call sym.check_opt_wim	      6296	option.c	FUNCTION_40	ELSE_23	ELSE_24	IF_44	IF_45	CALL_40
0x400573c	            0x85c0	                           test eax, eax	      6296	option.c	FUNCTION_40	ELSE_23	ELSE_24	IF_44	IF_45	CALL_40
0x400573e	     0xf8578290000	                           jne 0x40080bc	      6296	option.c	FUNCTION_40	ELSE_23	ELSE_24	IF_44	IF_45	CALL_40
0x4005744	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6297	option.c	FUNCTION_40	ELSE_23	ELSE_24	IF_44	IF_45
0x400574f	      0xe968290000	                           jmp 0x40080bc	      6297	option.c	FUNCTION_40	ELSE_23	ELSE_24	IF_44	IF_45
0x4005754	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6302	option.c	FUNCTION_40	ELSE_25	IF_46
0x400575f	            0x7532	                           jne 0x4005793	      6302	option.c	FUNCTION_40	ELSE_25	IF_46
0x4005761	    0x488b05000000	            mov rax, qword [0x04005768] 	      6304	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47	CALL_41
0x4005768	      0xba01000000	                              mov edx, 1	      6304	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47	CALL_41
0x400576d	      0xbe00000000	                              mov esi, 0	      6304	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47	CALL_41
0x4005772	          0x4889c7	                            mov rdi, rax	      6304	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47	CALL_41
0x4005775	      0xe8b9bb0000	              call sym.check_opt_strings	      6304	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47	CALL_41
0x400577a	          0x83f801	                              cmp eax, 1	      6304	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47	CALL_41
0x400577d	     0xf8439290000	                            je 0x40080bc	      6304	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47	CALL_41
0x4005783	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6305	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47
0x400578e	      0xe929290000	                           jmp 0x40080bc	      6305	option.c	FUNCTION_40	ELSE_25	IF_46	IF_47
0x4005793	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6311	option.c	FUNCTION_40	ELSE_26	IF_48
0x400579e	            0x757e	                           jne 0x400581e	      6311	option.c	FUNCTION_40	ELSE_26	IF_48
0x40057a0	    0x488b05000000	            mov rax, qword [0x040057a7] 	      6313	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49
0x40057a7	           0xfb600	                   movzx eax, byte [rax]	      6313	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49
0x40057aa	            0x84c0	                             test al, al	      6313	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49
0x40057ac	            0x741e	                            je 0x40057cc	      6313	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49
0x40057ae	    0x488b05000000	            mov rax, qword [0x040057b5] 	      6314	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49	CALL_42
0x40057b5	      0xba00000000	                              mov edx, 0	      6314	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49	CALL_42
0x40057ba	      0xbe00000000	                              mov esi, 0	      6314	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49	CALL_42
0x40057bf	          0x4889c7	                            mov rdi, rax	      6314	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49	CALL_42
0x40057c2	      0xe86cbb0000	              call sym.check_opt_strings	      6314	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49	CALL_42
0x40057c7	          0x83f801	                              cmp eax, 1	      6314	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49	CALL_42
0x40057ca	            0x7410	                            je 0x40057dc	      6314	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49	CALL_42
0x40057cc	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6315	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49
0x40057d7	      0xe9e0280000	                           jmp 0x40080bc	      6315	option.c	FUNCTION_40	ELSE_26	IF_48	IF_49
0x40057dc	    0x8b0500000000	            mov eax, dword [0x040057e2] 	      6322	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057e2	            0x85c0	                           test eax, eax	      6322	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057e4	     0xf84d2280000	                            je 0x40080bc	      6322	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057ea	    0x488b05000000	            mov rax, qword [0x040057f1] 	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057f1	           0xfb600	                   movzx eax, byte [rax]	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057f4	            0x3c79	                            cmp al, 0x79	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057f6	            0x740e	                            je 0x4005806	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057f8	    0x488b05000000	            mov rax, qword [0x040057ff] 	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x40057ff	           0xfb600	                   movzx eax, byte [rax]	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x4005802	            0x3c6d	                            cmp al, 0x6d	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x4005804	            0x7507	                           jne 0x400580d	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x4005806	      0xb801000000	                              mov eax, 1	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x400580b	            0xeb05	                           jmp 0x4005812	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x400580d	      0xb800000000	                              mov eax, 0	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x4005812	            0x89c7	                            mov edi, eax	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x4005814	      0xe800000000	                          call 0x4005819	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x4005819	      0xe99e280000	                           jmp 0x40080bc	      6323	option.c	FUNCTION_40	ELSE_26	IF_48	ELSE_28	IF_51
0x400581e	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6331	option.c	FUNCTION_40	ELSE_29	IF_52
0x4005829	            0x751d	                           jne 0x4005848	      6331	option.c	FUNCTION_40	ELSE_29	IF_52
0x400582b	      0xe800000000	                          call 0x4005830	      6333	option.c	FUNCTION_40	ELSE_29	IF_52	IF_53	CALL_45
0x4005830	            0x85c0	                           test eax, eax	      6333	option.c	FUNCTION_40	ELSE_29	IF_52	IF_53	CALL_45
0x4005832	     0xf8584280000	                           jne 0x40080bc	      6333	option.c	FUNCTION_40	ELSE_29	IF_52	IF_53	CALL_45
0x4005838	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6334	option.c	FUNCTION_40	ELSE_29	IF_52	IF_53
0x4005843	      0xe974280000	                           jmp 0x40080bc	      6334	option.c	FUNCTION_40	ELSE_29	IF_52	IF_53
0x4005848	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6339	option.c	FUNCTION_40	ELSE_30	IF_54
0x4005853	            0x742b	                            je 0x4005880	      6339	option.c	FUNCTION_40	ELSE_30	IF_54
0x4005855	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6339	option.c	FUNCTION_40	ELSE_30	IF_54
0x4005860	            0x741e	                            je 0x4005880	      6339	option.c	FUNCTION_40	ELSE_30	IF_54
0x4005862	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6339	option.c	FUNCTION_40	ELSE_30	IF_54
0x400586d	            0x7411	                            je 0x4005880	      6339	option.c	FUNCTION_40	ELSE_30	IF_54
0x400586f	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6340	option.c	FUNCTION_40	ELSE_30	IF_54
0x400587a	     0xf85fe010000	                           jne 0x4005a7e	      6340	option.c	FUNCTION_40	ELSE_30	IF_54
0x4005880	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6342	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55
0x400588b	            0x7564	                           jne 0x40058f1	      6342	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55
0x400588d	    0x488b05000000	            mov rax, qword [0x04005894] 	      6344	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x4005894	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      6344	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x400589a	            0x85c0	                           test eax, eax	      6344	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x400589c	            0x7516	                           jne 0x40058b4	      6344	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x400589e	    0x83bd7cfeffff	              cmp dword [rbp - 0x184], 2	      6344	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x40058a5	            0x740d	                            je 0x40058b4	      6344	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x40058a7	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6345	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x40058b2	            0xeb3d	                           jmp 0x40058f1	      6345	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	IF_56
0x40058b4	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6346	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x40058bb	          0x488b00	                    mov rax, qword [rax]	      6346	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x40058be	      0xbe2c000000	                           mov esi, 0x2c	      6346	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x40058c3	          0x4889c7	                            mov rdi, rax	      6346	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x40058c6	      0xe800000000	                          call 0x40058cb	      6346	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x40058cb	          0x4885c0	                           test rax, rax	      6346	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x40058ce	            0x740d	                            je 0x40058dd	      6346	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x40058d0	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6349	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57
0x40058db	            0xeb14	                           jmp 0x40058f1	      6349	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_31	IF_57
0x40058dd	      0xe89df0ffff	                  call sym.redraw_titles	      6354	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_32	CALL_47
0x40058e2	    0x488b05000000	            mov rax, qword [0x040058e9] 	      6357	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_32	CALL_48
0x40058e9	          0x4889c7	                            mov rdi, rax	      6357	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_32	CALL_48
0x40058ec	      0xe800000000	                          call 0x40058f1	      6357	option.c	FUNCTION_40	ELSE_30	IF_54	IF_55	ELSE_32	CALL_48
0x40058f1	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6360	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58
0x40058f9	            0x7566	                           jne 0x4005961	      6360	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58
0x40058fb	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6363	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	CALL_49
0x4005902	          0x488b00	                    mov rax, qword [rax]	      6363	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	CALL_49
0x4005905	          0x4889c7	                            mov rdi, rax	      6363	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	CALL_49
0x4005908	      0xe800000000	                          call 0x400590d	      6363	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	CALL_49
0x400590d	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6363	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	CALL_49
0x4005914	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6364	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59
0x400591b	          0x4885c0	                           test rax, rax	      6364	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59
0x400591e	            0x7423	                            je 0x4005943	      6364	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59
0x4005920	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6366	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x4005927	          0x488b00	                    mov rax, qword [rax]	      6366	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x400592a	          0x4889c7	                            mov rdi, rax	      6366	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x400592d	      0xe800000000	                          call 0x4005932	      6366	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x4005932	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6367	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59
0x4005939	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6367	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59
0x4005940	          0x488910	                    mov qword [rax], rdx	      6367	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_59
0x4005943	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6369	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_60
0x400594e	            0x7511	                           jne 0x4005961	      6369	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_60
0x4005950	      0xe800000000	                          call 0x4005955	      6371	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_60	CALL_51
0x4005955	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6371	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_60	CALL_51
0x400595c	      0xe81ef0ffff	                  call sym.redraw_titles	      6373	option.c	FUNCTION_40	ELSE_30	IF_54	IF_58	IF_60	CALL_52
0x4005961	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6379	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61
0x4005969	            0x753a	                           jne 0x40059a5	      6379	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61
0x400596b	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6379	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61
0x4005976	            0x752d	                           jne 0x40059a5	      6379	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61
0x4005978	    0x8b0500000000	            mov eax, dword [0x0400597e] 	      6379	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61
0x400597e	            0x85c0	                           test eax, eax	      6379	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61
0x4005980	            0x7423	                            je 0x40059a5	      6379	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61
0x4005982	    0x488b05000000	            mov rax, qword [0x04005989] 	      6382	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61	IF_62	CALL_53
0x4005989	      0xbe00000000	                              mov esi, 0	      6382	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61	IF_62	CALL_53
0x400598e	          0x4889c7	                            mov rdi, rax	      6382	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61	IF_62	CALL_53
0x4005991	      0xe800000000	                          call 0x4005996	      6382	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61	IF_62	CALL_53
0x4005996	            0x85c0	                           test eax, eax	      6382	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61	IF_62	CALL_53
0x4005998	            0x740b	                            je 0x40059a5	      6382	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61	IF_62	CALL_53
0x400599a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6383	option.c	FUNCTION_40	ELSE_30	IF_54	IF_61	CALL_54
0x40059a5	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6387	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63
0x40059ad	     0xf85f3260000	                           jne 0x40080a6	      6387	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63
0x40059b3	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6392	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_64
0x40059be	            0x751a	                           jne 0x40059da	      6392	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_64
0x40059c0	    0x488b05000000	            mov rax, qword [0x040059c7] 	      6392	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_64
0x40059c7	    0x488b80e81500	          mov rax, qword [rax + 0x15e8] 	      6392	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_64
0x40059ce	           0xfb600	                   movzx eax, byte [rax]	      6392	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_64
0x40059d1	            0x84c0	                             test al, al	      6392	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_64
0x40059d3	            0x7405	                            je 0x40059da	      6392	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_64
0x40059d5	      0xe800000000	                          call 0x40059da	      6393	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	CALL_55
0x40059da	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x40059e5	            0x750e	                           jne 0x40059f5	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x40059e7	    0x488b05000000	            mov rax, qword [0x040059ee] 	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x40059ee	           0xfb600	                   movzx eax, byte [rax]	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x40059f1	            0x84c0	                             test al, al	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x40059f3	            0x7511	                           jne 0x4005a06	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x40059f5	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x4005a00	     0xf85a0260000	                           jne 0x40080a6	      6399	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65
0x4005a06	    0x488b15000000	            mov rdx, qword [0x04005a0d] 	      6401	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x4005a0d	    0x488b05000000	            mov rax, qword [0x04005a14] 	      6401	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x4005a14	          0x4889c6	                            mov rsi, rax	      6401	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x4005a17	      0xbf00000000	                              mov edi, 0	      6401	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x4005a1c	      0xe800000000	                          call 0x4005a21	      6401	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x4005a21	            0x85c0	                           test eax, eax	      6401	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x4005a23	            0x7423	                            je 0x4005a48	      6401	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x4005a25	    0x488b15000000	            mov rdx, qword [0x04005a2c] 	      6402	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x4005a2c	    0x488b05000000	            mov rax, qword [0x04005a33] 	      6402	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x4005a33	          0x4889c6	                            mov rsi, rax	      6402	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x4005a36	      0xbf00000000	                              mov edi, 0	      6402	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x4005a3b	      0xe800000000	                          call 0x4005a40	      6402	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x4005a40	            0x85c0	                           test eax, eax	      6402	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x4005a42	     0xf855e260000	                           jne 0x40080a6	      6402	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x4005a48	    0x4c8b25000000	            mov r12, qword [0x04005a4f] 	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a4f	    0x488b1d000000	            mov rbx, qword [0x04005a56] 	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a56	      0xbf00000000	                              mov edi, 0	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a5b	      0xe800000000	                          call 0x4005a60	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a60	          0x4c89e2	                            mov rdx, r12	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a63	          0x4889de	                            mov rsi, rbx	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a66	          0x4889c7	                            mov rdi, rax	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a69	      0xe800000000	                          call 0x4005a6e	      6404	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x4005a6e	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6406	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63	IF_65	IF_66
0x4005a79	      0xe928260000	                           jmp 0x40080a6	      6387	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63
0x4005a7e	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6420	option.c	FUNCTION_40	ELSE_33	IF_68
0x4005a89	     0xf85d1000000	                           jne 0x4005b60	      6420	option.c	FUNCTION_40	ELSE_33	IF_68
0x4005a8f	    0x488b05000000	            mov rax, qword [0x04005a96] 	      6423	option.c	FUNCTION_40	ELSE_33	IF_68	CALL_61
0x4005a96	          0x4889c7	                            mov rdi, rax	      6423	option.c	FUNCTION_40	ELSE_33	IF_68	CALL_61
0x4005a99	      0xe800000000	                          call 0x4005a9e	      6423	option.c	FUNCTION_40	ELSE_33	IF_68	CALL_61
0x4005a9e	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6423	option.c	FUNCTION_40	ELSE_33	IF_68	CALL_61
0x4005aa5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6424	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69
0x4005aac	          0x4885c0	                           test rax, rax	      6424	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69
0x4005aaf	            0x7422	                            je 0x4005ad3	      6424	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69
0x4005ab1	    0x488b05000000	            mov rax, qword [0x04005ab8] 	      6426	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69	CALL_62
0x4005ab8	          0x4889c7	                            mov rdi, rax	      6426	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69	CALL_62
0x4005abb	      0xe800000000	                          call 0x4005ac0	      6426	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69	CALL_62
0x4005ac0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6427	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69
0x4005ac7	    0x488905000000	            mov qword [0x04005ace], rax 	      6427	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69
0x4005ace	      0xe9e9250000	                           jmp 0x40080bc	      6427	option.c	FUNCTION_40	ELSE_33	IF_68	IF_69
0x4005ad3	    0x488b05000000	            mov rax, qword [0x04005ada] 	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005ada	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005ae1	            0xeb6a	                           jmp 0x4005b4d	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005ae3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6434	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x4005aea	           0xfb600	                   movzx eax, byte [rax]	      6434	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x4005aed	            0x3c5f	                            cmp al, 0x5f	      6434	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x4005aef	            0x750c	                           jne 0x4005afd	      6434	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x4005af1	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6435	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x4005af8	          0xc6002d	                    mov byte [rax], 0x2d	      6435	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x4005afb	            0xeb3e	                           jmp 0x4005b3b	      6435	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x4005afd	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b04	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b0b	           0xfb600	                   movzx eax, byte [rax]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b0e	            0x3c40	                            cmp al, 0x40	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b10	            0x760e	                           jbe 0x4005b20	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b12	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b19	           0xfb600	                   movzx eax, byte [rax]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b1c	            0x3c5a	                            cmp al, 0x5a	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b1e	            0x760c	                           jbe 0x4005b2c	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b20	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b27	           0xfb600	                   movzx eax, byte [rax]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b2a	            0xeb0d	                           jmp 0x4005b39	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b2c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b33	           0xfb600	                   movzx eax, byte [rax]	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b36	          0x83c020	                           add eax, 0x20	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b39	            0x8802	                      mov byte [rdx], al	      6437	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x4005b3b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b42	        0x4883c001	                              add rax, 1	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b46	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b4d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b54	           0xfb600	                   movzx eax, byte [rax]	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b57	            0x84c0	                             test al, al	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b59	            0x7588	                           jne 0x4005ae3	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b5b	      0xe95c250000	                           jmp 0x40080bc	      6432	option.c	FUNCTION_40	ELSE_33	IF_68	ELSE_34	FOR_2
0x4005b60	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6444	option.c	FUNCTION_40	ELSE_36	IF_71
0x4005b6b	            0x751d	                           jne 0x4005b8a	      6444	option.c	FUNCTION_40	ELSE_36	IF_71
0x4005b6d	      0xe800000000	                          call 0x4005b72	      6446	option.c	FUNCTION_40	ELSE_36	IF_71	IF_72	CALL_64
0x4005b72	            0x85c0	                           test eax, eax	      6446	option.c	FUNCTION_40	ELSE_36	IF_71	IF_72	CALL_64
0x4005b74	     0xf8542250000	                           jne 0x40080bc	      6446	option.c	FUNCTION_40	ELSE_36	IF_71	IF_72	CALL_64
0x4005b7a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6447	option.c	FUNCTION_40	ELSE_36	IF_71	IF_72
0x4005b85	      0xe932250000	                           jmp 0x40080bc	      6447	option.c	FUNCTION_40	ELSE_36	IF_71	IF_72
0x4005b8a	    0x488b05000000	            mov rax, qword [0x04005b91] 	      6452	option.c	FUNCTION_40	ELSE_37	IF_73
0x4005b91	    0x4805e8150000	                         add rax, 0x15e8	      6452	option.c	FUNCTION_40	ELSE_37	IF_73
0x4005b97	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      6452	option.c	FUNCTION_40	ELSE_37	IF_73
0x4005b9e	     0xf85f9000000	                           jne 0x4005c9d	      6452	option.c	FUNCTION_40	ELSE_37	IF_73
0x4005ba4	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6454	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74	CALL_65
0x4005bab	          0x488b00	                    mov rax, qword [rax]	      6454	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74	CALL_65
0x4005bae	          0x4889c7	                            mov rdi, rax	      6454	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74	CALL_65
0x4005bb1	      0xe8e9f1ffff	                 call sym.valid_filetype	      6454	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74	CALL_65
0x4005bb6	            0x85c0	                           test eax, eax	      6454	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74	CALL_65
0x4005bb8	            0x750d	                           jne 0x4005bc7	      6454	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74	CALL_65
0x4005bba	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6455	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74
0x4005bc5	            0xeb0c	                           jmp 0x4005bd3	      6455	option.c	FUNCTION_40	ELSE_37	IF_73	IF_74
0x4005bc7	      0xe800000000	                          call 0x4005bcc	      6458	option.c	FUNCTION_40	ELSE_37	IF_73	CALL_66
0x4005bcc	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6458	option.c	FUNCTION_40	ELSE_37	IF_73	CALL_66
0x4005bd3	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6460	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75
0x4005bdb	     0xf85db240000	                           jne 0x40080bc	      6460	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75
0x4005be1	    0x488b05000000	            mov rax, qword [0x04005be8] 	      6462	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76
0x4005be8	    0x488b80e81500	          mov rax, qword [rax + 0x15e8] 	      6462	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76
0x4005bef	           0xfb600	                   movzx eax, byte [rax]	      6462	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76
0x4005bf2	            0x84c0	                             test al, al	      6462	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76
0x4005bf4	            0x743a	                            je 0x4005c30	      6462	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76
0x4005bf6	    0x488b05000000	            mov rax, qword [0x04005bfd] 	      6465	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76
0x4005bfd	    0x48c780781200	            mov qword [rax + 0x1278], 1 	      6465	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76
0x4005c08	    0x488b05000000	            mov rax, qword [0x04005c0f] 	      6466	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x4005c0f	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	      6466	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x4005c16	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6466	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x4005c1a	            0x7460	                            je 0x4005c7c	      6466	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x4005c1c	    0x488b05000000	            mov rax, qword [0x04005c23] 	      6467	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x4005c23	    0x48c780801200	            mov qword [rax + 0x1280], 1 	      6467	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x4005c2e	            0xeb4c	                           jmp 0x4005c7c	      6467	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x4005c30	    0x488b05000000	            mov rax, qword [0x04005c37] 	      6472	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x4005c37	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	      6472	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x4005c3e	        0x4883f801	                              cmp rax, 1	      6472	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x4005c42	            0x7512	                           jne 0x4005c56	      6472	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x4005c44	    0x488b05000000	            mov rax, qword [0x04005c4b] 	      6473	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x4005c4b	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      6473	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x4005c56	    0x488b05000000	            mov rax, qword [0x04005c5d] 	      6474	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x4005c5d	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	      6474	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x4005c64	        0x4883f801	                              cmp rax, 1	      6474	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x4005c68	            0x7512	                           jne 0x4005c7c	      6474	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x4005c6a	    0x488b05000000	            mov rax, qword [0x04005c71] 	      6475	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x4005c71	    0x48c780801200	mov qword [rax + 0x1280], 0xffffffffffffffff 	      6475	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x4005c7c	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6477	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_80
0x4005c82	          0x83e004	                              and eax, 4	      6477	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_80
0x4005c85	            0x85c0	                           test eax, eax	      6477	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_80
0x4005c87	            0x750a	                           jne 0x4005c93	      6477	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_80
0x4005c89	      0xe800000000	                          call 0x4005c8e	      6479	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_80	CALL_67
0x4005c8e	      0xe800000000	                          call 0x4005c93	      6480	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	IF_80	CALL_68
0x4005c93	      0xe800000000	                          call 0x4005c98	      6482	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	CALL_69
0x4005c98	      0xe91f240000	                           jmp 0x40080bc	      6482	option.c	FUNCTION_40	ELSE_37	IF_73	IF_75	CALL_69
0x4005c9d	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6488	option.c	FUNCTION_40	ELSE_40	IF_81
0x4005ca8	     0xf85e0000000	                           jne 0x4005d8e	      6488	option.c	FUNCTION_40	ELSE_40	IF_81
0x4005cae	    0x488b05000000	            mov rax, qword [0x04005cb5] 	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cb5	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cbb	            0x85c0	                           test eax, eax	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cbd	            0x751d	                           jne 0x4005cdc	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cbf	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cc5	          0x83e002	                              and eax, 2	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cc8	            0x85c0	                           test eax, eax	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cca	            0x7510	                           jne 0x4005cdc	      6490	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005ccc	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6491	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cd7	      0xe9e0230000	                           jmp 0x40080bc	      6491	option.c	FUNCTION_40	ELSE_40	IF_81	IF_82
0x4005cdc	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005ce3	          0x488b00	                    mov rax, qword [rax]	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005ce6	      0xba00000000	                              mov edx, 0	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005ceb	      0xbe00000000	                              mov esi, 0	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005cf0	          0x4889c7	                            mov rdi, rax	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005cf3	      0xe83bb60000	              call sym.check_opt_strings	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005cf8	          0x83f801	                              cmp eax, 1	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005cfb	            0x7410	                            je 0x4005d0d	      6492	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x4005cfd	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6493	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83
0x4005d08	      0xe9af230000	                           jmp 0x40080bc	      6493	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_41	IF_83
0x4005d0d	    0x488b05000000	            mov rax, qword [0x04005d14] 	      6497	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x4005d14	          0x4889c7	                            mov rdi, rax	      6497	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x4005d17	      0xe800000000	                          call 0x4005d1c	      6497	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x4005d1c	          0x83f801	                              cmp eax, 1	      6497	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x4005d1f	            0x7513	                           jne 0x4005d34	      6497	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x4005d21	    0x488b05000000	            mov rax, qword [0x04005d28] 	      6498	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84
0x4005d28	    0xc780b0150000	            mov dword [rax + 0x15b0], 1 	      6498	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84
0x4005d32	            0xeb11	                           jmp 0x4005d45	      6498	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_84
0x4005d34	    0x488b05000000	            mov rax, qword [0x04005d3b] 	      6500	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	ELSE_43
0x4005d3b	    0xc780b0150000	            mov dword [rax + 0x15b0], 0 	      6500	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	ELSE_43
0x4005d45	      0xe835ecffff	                  call sym.redraw_titles	      6502	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	CALL_72
0x4005d4a	    0x488b05000000	            mov rax, qword [0x04005d51] 	      6505	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	CALL_73
0x4005d51	          0x4889c7	                            mov rdi, rax	      6505	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	CALL_73
0x4005d54	      0xe800000000	                          call 0x4005d59	      6505	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	CALL_73
0x4005d59	    0x488b05000000	            mov rax, qword [0x04005d60] 	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d60	          0x4889c7	                            mov rdi, rax	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d63	      0xe800000000	                          call 0x4005d68	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d68	          0x83f802	                              cmp eax, 2	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d6b	            0x7412	                            je 0x4005d7f	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d6d	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d74	           0xfb600	                   movzx eax, byte [rax]	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d77	            0x3c6d	                            cmp al, 0x6d	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d79	     0xf853d230000	                           jne 0x40080bc	      6508	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x4005d7f	      0xbf28000000	                           mov edi, 0x28	      6509	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	CALL_75
0x4005d84	      0xe800000000	                          call 0x4005d89	      6509	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	CALL_75
0x4005d89	      0xe92e230000	                           jmp 0x40080bc	      6509	option.c	FUNCTION_40	ELSE_40	IF_81	ELSE_42	CALL_75
0x4005d8e	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6514	option.c	FUNCTION_40	ELSE_44	IF_86
0x4005d99	            0x755a	                           jne 0x4005df5	      6514	option.c	FUNCTION_40	ELSE_44	IF_86
0x4005d9b	    0x488b05000000	            mov rax, qword [0x04005da2] 	      6516	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87	CALL_76
0x4005da2	      0xba01000000	                              mov edx, 1	      6516	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87	CALL_76
0x4005da7	      0xbe00000000	                              mov esi, 0	      6516	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87	CALL_76
0x4005dac	          0x4889c7	                            mov rdi, rax	      6516	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87	CALL_76
0x4005daf	      0xe87fb50000	              call sym.check_opt_strings	      6516	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87	CALL_76
0x4005db4	          0x83f801	                              cmp eax, 1	      6516	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87	CALL_76
0x4005db7	            0x7410	                            je 0x4005dc9	      6516	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87	CALL_76
0x4005db9	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6517	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87
0x4005dc4	      0xe9f3220000	                           jmp 0x40080bc	      6517	option.c	FUNCTION_40	ELSE_44	IF_86	IF_87
0x4005dc9	    0x488b05000000	            mov rax, qword [0x04005dd0] 	      6521	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	IF_88
0x4005dd0	           0xfb600	                   movzx eax, byte [rax]	      6521	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	IF_88
0x4005dd3	            0x84c0	                             test al, al	      6521	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	IF_88
0x4005dd5	            0x750f	                           jne 0x4005de6	      6521	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	IF_88
0x4005dd7	    0xc70500000000	               mov dword [0x04005de1], 0	      6522	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	IF_88
0x4005de1	      0xe9d6220000	                           jmp 0x40080bc	      6522	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	IF_88
0x4005de6	    0xc70500000000	               mov dword [0x04005df0], 1	      6524	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	ELSE_46
0x4005df0	      0xe9c7220000	                           jmp 0x40080bc	      6524	option.c	FUNCTION_40	ELSE_44	IF_86	ELSE_45	ELSE_46
0x4005df5	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6530	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89
0x4005e00	            0x7577	                           jne 0x4005e79	      6530	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89
0x4005e02	      0xe800000000	                          call 0x4005e07	      6535	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	CALL_77
0x4005e07	    0x488b05000000	            mov rax, qword [0x04005e0e] 	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e0e	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e15	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e1c	          0x4889d6	                            mov rsi, rdx	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e1f	          0x4889c7	                            mov rdi, rax	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e22	      0xe800000000	                          call 0x4005e27	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e27	            0x85c0	                           test eax, eax	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e29	     0xf848d220000	                            je 0x40080bc	      6537	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x4005e2f	    0x488b05000000	            mov rax, qword [0x04005e36] 	      6540	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90
0x4005e36	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	      6540	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90
0x4005e3d	           0xfb600	                   movzx eax, byte [rax]	      6540	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90
0x4005e40	            0x84c0	                             test al, al	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e42	            0x7410	                            je 0x4005e54	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e44	    0x488b05000000	            mov rax, qword [0x04005e4b] 	      6540	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90
0x4005e4b	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e52	            0xeb07	                           jmp 0x4005e5b	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e54	    0x488b05000000	            mov rax, qword [0x04005e5b] 	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e5b	    0x488b0d000000	            mov rcx, qword [0x04005e62] 	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e62	    0x488bb588feff	            mov rsi, qword [rbp - 0x178]	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e69	          0x4889c2	                            mov rdx, rax	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e6c	          0x4889cf	                            mov rdi, rcx	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e6f	      0xe800000000	                          call 0x4005e74	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e74	      0xe943220000	                           jmp 0x40080bc	      6539	option.c	FUNCTION_40	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x4005e79	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6543	option.c	FUNCTION_40	ELSE_48	IF_91
0x4005e84	     0xf8558020000	                           jne 0x40060e2	      6543	option.c	FUNCTION_40	ELSE_48	IF_91
0x4005e8a	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6545	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005e90	          0x83e004	                              and eax, 4	      6545	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005e93	            0x85c0	                           test eax, eax	      6545	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005e95	            0x7417	                            je 0x4005eae	      6545	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005e97	    0x488b05000000	            mov rax, qword [0x04005e9e] 	      6546	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005e9e	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	      6546	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005ea5	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6546	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005eac	            0xeb0e	                           jmp 0x4005ebc	      6546	option.c	FUNCTION_40	ELSE_48	IF_91	IF_92
0x4005eae	    0x488b05000000	            mov rax, qword [0x04005eb5] 	      6548	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_49
0x4005eb5	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6548	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_49
0x4005ebc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6549	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93	CALL_80
0x4005ec3	      0xba01000000	                              mov edx, 1	      6549	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93	CALL_80
0x4005ec8	      0xbe00000000	                              mov esi, 0	      6549	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93	CALL_80
0x4005ecd	          0x4889c7	                            mov rdi, rax	      6549	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93	CALL_80
0x4005ed0	      0xe85eb40000	              call sym.check_opt_strings	      6549	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93	CALL_80
0x4005ed5	          0x83f801	                              cmp eax, 1	      6549	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93	CALL_80
0x4005ed8	            0x7410	                            je 0x4005eea	      6549	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93	CALL_80
0x4005eda	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6550	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93
0x4005ee5	      0xe9d2210000	                           jmp 0x40080bc	      6550	option.c	FUNCTION_40	ELSE_48	IF_91	IF_93
0x4005eea	      0xe800000000	                          call 0x4005eef	      6551	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_50	IF_94	CALL_81
0x4005eef	            0x85c0	                           test eax, eax	      6551	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_50	IF_94	CALL_81
0x4005ef1	            0x7510	                           jne 0x4005f03	      6551	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_50	IF_94	CALL_81
0x4005ef3	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6552	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_50	IF_94
0x4005efe	      0xe9b9210000	                           jmp 0x40080bc	      6552	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_50	IF_94
0x4005f03	    0x488b05000000	            mov rax, qword [0x04005f0a] 	      6556	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95
0x4005f0a	           0xfb600	                   movzx eax, byte [rax]	      6556	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95
0x4005f0d	            0x84c0	                             test al, al	      6556	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95
0x4005f0f	            0x7533	                           jne 0x4005f44	      6556	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95
0x4005f11	    0x83bd98feffff	              cmp dword [rbp - 0x168], 0	      6558	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	IF_96
0x4005f18	            0x740f	                            je 0x4005f29	      6558	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	IF_96
0x4005f1a	    0x488b05000000	            mov rax, qword [0x04005f21] 	      6559	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	CALL_82
0x4005f21	          0x4889c7	                            mov rdi, rax	      6559	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	CALL_82
0x4005f24	      0xe800000000	                          call 0x4005f29	      6559	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	CALL_82
0x4005f29	      0xbf00000000	                              mov edi, 0	      6560	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	CALL_83
0x4005f2e	      0xe800000000	                          call 0x4005f33	      6560	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	CALL_83
0x4005f33	    0x488905000000	            mov qword [0x04005f3a], rax 	      6560	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95	CALL_83
0x4005f3a	    0xc78598feffff	              mov dword [rbp - 0x168], 1	      6561	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_95
0x4005f44	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6566	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97
0x4005f4a	          0x83e006	                              and eax, 6	      6566	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97
0x4005f4d	            0x85c0	                           test eax, eax	      6566	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97
0x4005f4f	            0x752b	                           jne 0x4005f7c	      6566	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97
0x4005f51	    0x488b05000000	            mov rax, qword [0x04005f58] 	      6568	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x4005f58	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	      6568	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x4005f5f	          0x4889c7	                            mov rdi, rax	      6568	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x4005f62	      0xe800000000	                          call 0x4005f67	      6568	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x4005f67	    0x488b05000000	            mov rax, qword [0x04005f6e] 	      6569	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97
0x4005f6e	    0x488b15000000	            mov rdx, qword [0x04005f75] 	      6569	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97
0x4005f75	    0x488990481700	          mov qword [rax + 0x1748], rdx 	      6569	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_97
0x4005f7c	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f82	          0x83e004	                              and eax, 4	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f85	            0x85c0	                           test eax, eax	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f87	            0x741e	                            je 0x4005fa7	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f89	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f90	           0xfb600	                   movzx eax, byte [rax]	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f93	            0x84c0	                             test al, al	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f95	            0x7510	                           jne 0x4005fa7	      6575	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f97	    0x488b05000000	            mov rax, qword [0x04005f9e] 	      6576	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005f9e	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6576	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005fa5	            0xeb0e	                           jmp 0x4005fb5	      6576	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_98
0x4005fa7	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6578	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	ELSE_52
0x4005fae	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6578	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	ELSE_52
0x4005fb5	    0x488b05000000	            mov rax, qword [0x04005fbc] 	      6579	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fbc	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	      6579	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fc3	           0xfb600	                   movzx eax, byte [rax]	      6579	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fc6	            0x84c0	                             test al, al	      6579	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fc8	            0x7510	                           jne 0x4005fda	      6579	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fca	    0x488b05000000	            mov rax, qword [0x04005fd1] 	      6580	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fd1	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6580	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fd8	            0xeb15	                           jmp 0x4005fef	      6580	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_99
0x4005fda	    0x488b05000000	            mov rax, qword [0x04005fe1] 	      6582	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	ELSE_53
0x4005fe1	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	      6582	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	ELSE_53
0x4005fe8	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6582	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	ELSE_53
0x4005fef	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6583	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x4005ff6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6583	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x4005ffd	          0x4889d6	                            mov rsi, rdx	      6583	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x4006000	          0x4889c7	                            mov rdi, rax	      6583	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x4006003	      0xe800000000	                          call 0x4006008	      6583	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x4006008	            0x85c0	                           test eax, eax	      6583	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x400600a	            0x7427	                            je 0x4006033	      6583	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x400600c	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6584	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	CALL_86
0x4006013	    0x488b05000000	            mov rax, qword [0x0400601a] 	      6584	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	CALL_86
0x400601a	    0x488b88101500	          mov rcx, qword [rax + 0x1510] 	      6584	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	CALL_86
0x4006021	    0x488b05000000	            mov rax, qword [0x04006028] 	      6584	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	CALL_86
0x4006028	          0x4889ce	                            mov rsi, rcx	      6584	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	CALL_86
0x400602b	          0x4889c7	                            mov rdi, rax	      6584	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	CALL_86
0x400602e	      0xe800000000	                          call 0x4006033	      6584	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	CALL_86
0x4006033	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x4006039	          0x83e002	                              and eax, 2	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x400603c	            0x85c0	                           test eax, eax	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x400603e	     0xf8478200000	                            je 0x40080bc	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x4006044	    0x488b05000000	            mov rax, qword [0x0400604b] 	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x400604b	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x4006052	          0x4889d6	                            mov rsi, rdx	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x4006055	          0x4889c7	                            mov rdi, rax	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x4006058	      0xe800000000	                          call 0x400605d	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x400605d	            0x85c0	                           test eax, eax	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x400605f	     0xf8457200000	                            je 0x40080bc	      6588	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x4006065	    0x488b05000000	            mov rax, qword [0x0400606c] 	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x400606c	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x4006073	            0xeb5e	                           jmp 0x40060d3	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x4006075	    0x488b05000000	            mov rax, qword [0x0400607c] 	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x400607c	    0x48398500ffff	           cmp qword [rbp - 0x100], rax 	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x4006083	            0x743c	                            je 0x40060c1	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x4006085	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x400608c	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x4006093	           0xfb600	                   movzx eax, byte [rax]	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x4006096	            0x84c0	                             test al, al	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x4006098	            0x7527	                           jne 0x40060c1	      6593	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x400609a	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6594	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x40060a1	    0x488b88101500	          mov rcx, qword [rax + 0x1510] 	      6594	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x40060a8	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      6594	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x40060af	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6594	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x40060b6	          0x4889ce	                            mov rsi, rcx	      6594	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x40060b9	          0x4889c7	                            mov rdi, rax	      6594	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x40060bc	      0xe800000000	                          call 0x40060c1	      6594	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x40060c1	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x40060c8	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x40060cc	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x40060d3	    0x4883bd00ffff	              cmp qword [rbp - 0x100], 0	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x40060db	            0x7598	                           jne 0x4006075	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x40060dd	      0xe9da1f0000	                           jmp 0x40080bc	      6592	option.c	FUNCTION_40	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x40060e2	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6601	option.c	FUNCTION_40	ELSE_54	IF_103
0x40060ed	     0xf850b020000	                           jne 0x40062fe	      6601	option.c	FUNCTION_40	ELSE_54	IF_103
0x40060f3	    0x8b0500000000	            mov eax, dword [0x040060f9] 	      6604	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104
0x40060f9	            0x85c0	                           test eax, eax	      6604	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104
0x40060fb	     0xf8450010000	                            je 0x4006251	      6604	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104
0x4006101	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006108	          0x488b00	                    mov rax, qword [rax]	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x400610b	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006112	      0xe923010000	                           jmp 0x400623a	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006117	    0xc785b8feffff	    mov dword [rbp - 0x148], 0xffffffff 	      6608	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006121	    0xc785bcfeffff	    mov dword [rbp - 0x144], 0xffffffff 	      6609	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x400612b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6611	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x4006132	           0xfb600	                   movzx eax, byte [rax]	      6611	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x4006135	            0x84c0	                             test al, al	      6611	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x4006137	            0x7426	                            je 0x400615f	      6611	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x4006139	    0x488b05000000	            mov rax, qword [0x04006140] 	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x4006140	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x4006147	          0x4889d7	                            mov rdi, rdx	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x400614a	            0xffd0	                                call rax	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x400614c	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x4006153	            0x4898	                                    cdqe	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x4006155	          0x4801d0	                            add rax, rdx	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x4006158	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6612	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x400615f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6613	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x4006166	           0xfb600	                   movzx eax, byte [rax]	      6613	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x4006169	            0x84c0	                             test al, al	      6613	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x400616b	            0x741e	                            je 0x400618b	      6613	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x400616d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6614	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x4006174	        0x488d5001	                      lea rdx, [rax + 1]	      6614	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x4006178	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      6614	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x400617f	           0xfb600	                   movzx eax, byte [rax]	      6614	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x4006182	           0xfb6c0	                           movzx eax, al	      6614	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x4006185	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      6614	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x400618b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6615	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x4006192	           0xfb600	                   movzx eax, byte [rax]	      6615	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x4006195	            0x84c0	                             test al, al	      6615	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x4006197	            0x743f	                            je 0x40061d8	      6615	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x4006199	    0x488b05000000	            mov rax, qword [0x040061a0] 	      6617	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x40061a0	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6617	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x40061a7	          0x4889d7	                            mov rdi, rdx	      6617	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x40061aa	            0xffd0	                                call rax	      6617	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x40061ac	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	      6617	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x40061b2	    0x488b05000000	            mov rax, qword [0x040061b9] 	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061b9	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061c0	          0x4889d7	                            mov rdi, rdx	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061c3	            0xffd0	                                call rax	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061c5	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061cc	            0x4898	                                    cdqe	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061ce	          0x4801d0	                            add rax, rdx	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061d1	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6618	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x40061d8	    0x83bdb8feffff	          cmp dword [rbp - 0x148], 0x3a 	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061df	            0x7525	                           jne 0x4006206	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061e1	    0x83bdbcfeffff	cmp dword [rbp - 0x144], 0xffffffffffffffff	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061e8	            0x741c	                            je 0x4006206	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061ea	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061f1	           0xfb600	                   movzx eax, byte [rax]	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061f4	            0x84c0	                             test al, al	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061f6	            0x741e	                            je 0x4006216	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061f8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x40061ff	           0xfb600	                   movzx eax, byte [rax]	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x4006202	            0x3c2c	                            cmp al, 0x2c	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x4006204	            0x7410	                            je 0x4006216	      6620	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x4006206	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6622	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x4006211	      0xe9a61e0000	                           jmp 0x40080bc	      6623	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x4006216	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6625	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x400621d	           0xfb600	                   movzx eax, byte [rax]	      6625	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x4006220	            0x84c0	                             test al, al	      6625	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x4006222	     0xf84811e0000	                            je 0x40080a9	      6625	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x4006228	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x400622f	        0x4883c001	                              add rax, 1	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006233	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x400623a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006241	           0xfb600	                   movzx eax, byte [rax]	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006244	            0x84c0	                             test al, al	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006246	     0xf85cbfeffff	                           jne 0x4006117	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x400624c	      0xe96b1e0000	                           jmp 0x40080bc	      6606	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3
0x4006251	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x4006258	          0x488b00	                    mov rax, qword [rax]	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x400625b	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x4006262	      0xe980000000	                           jmp 0x40062e7	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x4006267	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x400626e	        0x4883c001	                              add rax, 1	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006272	           0xfb600	                   movzx eax, byte [rax]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006275	            0x3c3a	                            cmp al, 0x3a	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006277	            0x7536	                           jne 0x40062af	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006279	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006280	        0x4883c002	                              add rax, 2	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006284	           0xfb600	                   movzx eax, byte [rax]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006287	            0x84c0	                             test al, al	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006289	            0x7424	                            je 0x40062af	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x400628b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006292	        0x4883c003	                              add rax, 3	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006296	           0xfb600	                   movzx eax, byte [rax]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x4006299	            0x84c0	                             test al, al	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x400629b	            0x7422	                            je 0x40062bf	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x400629d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x40062a4	        0x4883c003	                              add rax, 3	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x40062a8	           0xfb600	                   movzx eax, byte [rax]	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x40062ab	            0x3c2c	                            cmp al, 0x2c	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x40062ad	            0x7410	                            je 0x40062bf	      6635	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x40062af	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6637	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x40062ba	      0xe9fd1d0000	                           jmp 0x40080bc	      6638	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x40062bf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6640	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x40062c6	        0x4883c003	                              add rax, 3	      6640	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x40062ca	           0xfb600	                   movzx eax, byte [rax]	      6640	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x40062cd	            0x84c0	                             test al, al	      6640	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x40062cf	     0xf84d71d0000	                            je 0x40080ac	      6640	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x40062d5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062dc	        0x4883c004	                              add rax, 4	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062e0	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062e7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062ee	           0xfb600	                   movzx eax, byte [rax]	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062f1	            0x84c0	                             test al, al	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062f3	     0xf856effffff	                           jne 0x4006267	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062f9	      0xe9be1d0000	                           jmp 0x40080bc	      6633	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4
0x40062fe	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6648	option.c	FUNCTION_40	ELSE_56	IF_112
0x4006309	     0xf859a010000	                           jne 0x40064a9	      6648	option.c	FUNCTION_40	ELSE_56	IF_112
0x400630f	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x4006316	          0x488b00	                    mov rax, qword [rax]	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x4006319	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x4006320	      0xe96d010000	                           jmp 0x4006492	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x4006325	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x400632c	           0xfb600	                   movzx eax, byte [rax]	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x400632f	           0xfb6c0	                           movzx eax, al	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x4006332	            0x89c6	                            mov esi, eax	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x4006334	      0xbf00000000	                              mov edi, 0	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x4006339	      0xe800000000	                          call 0x400633e	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x400633e	          0x4885c0	                           test rax, rax	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x4006341	            0x754a	                           jne 0x400638d	      6654	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x4006343	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x400634a	           0xfb600	                   movzx eax, byte [rax]	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x400634d	           0xfb6c0	                           movzx eax, al	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x4006350	          0x83e830	                           sub eax, 0x30	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x4006353	          0x83f809	                              cmp eax, 9	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x4006356	            0x7635	                           jbe 0x400638d	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x4006358	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x400635f	           0xfb600	                   movzx eax, byte [rax]	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x4006362	            0x3c2d	                            cmp al, 0x2d	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x4006364	            0x7427	                            je 0x400638d	      6655	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x4006366	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x400636d	           0xfb600	                   movzx eax, byte [rax]	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x4006370	           0xfb6d0	                           movzx edx, al	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x4006373	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x400637a	            0x89d6	                            mov esi, edx	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x400637c	          0x4889c7	                            mov rdi, rax	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x400637f	      0xe8f4d7ffff	                   call sym.illegal_char	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x4006384	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6657	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x400638b	            0xeb32	                           jmp 0x40063bf	      6658	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113
0x400638d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6660	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x4006394	        0x4883c001	                              add rax, 1	      6660	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x4006398	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6660	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x400639f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063a6	           0xfb600	                   movzx eax, byte [rax]	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063a9	            0x84c0	                             test al, al	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063ab	            0x7412	                            je 0x40063bf	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063ad	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063b4	           0xfb600	                   movzx eax, byte [rax]	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063b7	            0x3c3a	                            cmp al, 0x3a	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063b9	     0xf8566ffffff	                           jne 0x4006325	      6652	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_1
0x40063bf	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6662	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_114
0x40063c6	        0x488d5001	                      lea rdx, [rax + 1]	      6662	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_114
0x40063ca	    0x488995d0feff	            mov qword [rbp - 0x130], rdx	      6662	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_114
0x40063d1	           0xfb600	                   movzx eax, byte [rax]	      6662	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_114
0x40063d4	            0x84c0	                             test al, al	      6662	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_114
0x40063d6	            0x750d	                           jne 0x40063e5	      6662	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_114
0x40063d8	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6663	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	CALL_96
0x40063e3	            0xeb27	                           jmp 0x400640c	      6663	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	CALL_96
0x40063e5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x40063ec	           0xfb600	                   movzx eax, byte [rax]	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x40063ef	            0x3c2c	                            cmp al, 0x2c	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x40063f1	            0x740e	                            je 0x4006401	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x40063f3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x40063fa	           0xfb600	                   movzx eax, byte [rax]	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x40063fd	            0x84c0	                             test al, al	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x40063ff	            0x750b	                           jne 0x400640c	      6664	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x4006401	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6665	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x400640c	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6666	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_116
0x4006414	     0xf85951c0000	                           jne 0x40080af	      6666	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_116
0x400641a	            0xeb44	                           jmp 0x4006460	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x400641c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006423	           0xfb600	                   movzx eax, byte [rax]	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006426	            0x3c5c	                            cmp al, 0x5c	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006428	            0x7524	                           jne 0x400644e	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x400642a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006431	        0x4883c001	                              add rax, 1	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006435	           0xfb600	                   movzx eax, byte [rax]	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006438	            0x84c0	                             test al, al	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x400643a	            0x7412	                            je 0x400644e	      6670	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x400643c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6671	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006443	        0x4883c001	                              add rax, 1	      6671	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x4006447	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6671	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x400644e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6672	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x4006455	        0x4883c001	                              add rax, 1	      6672	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x4006459	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6672	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x4006460	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x4006467	           0xfb600	                   movzx eax, byte [rax]	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x400646a	            0x84c0	                             test al, al	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x400646c	            0x740e	                            je 0x400647c	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x400646e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x4006475	           0xfb600	                   movzx eax, byte [rax]	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x4006478	            0x3c2c	                            cmp al, 0x2c	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x400647a	            0x75a0	                           jne 0x400641c	      6668	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	WHILE_2
0x400647c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6674	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	CALL_98
0x4006483	          0x4889c7	                            mov rdi, rax	      6674	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	CALL_98
0x4006486	      0xe800000000	                          call 0x400648b	      6674	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	CALL_98
0x400648b	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6674	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	CALL_98
0x4006492	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x4006499	           0xfb600	                   movzx eax, byte [rax]	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x400649c	            0x84c0	                             test al, al	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x400649e	     0xf85fbfeffff	                           jne 0x400639f	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x40064a4	      0xe9131c0000	                           jmp 0x40080bc	      6650	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5
0x40064a9	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6680	option.c	FUNCTION_40	ELSE_58	IF_118
0x40064b4	            0x751b	                           jne 0x40064d1	      6680	option.c	FUNCTION_40	ELSE_58	IF_118
0x40064b6	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6682	option.c	FUNCTION_40	ELSE_58	IF_118	CALL_99
0x40064bd	          0x4889c7	                            mov rdi, rax	      6682	option.c	FUNCTION_40	ELSE_58	IF_118	CALL_99
0x40064c0	      0xe8d8230000	               call sym.set_chars_option	      6682	option.c	FUNCTION_40	ELSE_58	IF_118	CALL_99
0x40064c5	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6682	option.c	FUNCTION_40	ELSE_58	IF_118	CALL_99
0x40064cc	      0xe9eb1b0000	                           jmp 0x40080bc	      6682	option.c	FUNCTION_40	ELSE_58	IF_118	CALL_99
0x40064d1	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6686	option.c	FUNCTION_40	ELSE_59	IF_119
0x40064dc	            0x751b	                           jne 0x40064f9	      6686	option.c	FUNCTION_40	ELSE_59	IF_119
0x40064de	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6688	option.c	FUNCTION_40	ELSE_59	IF_119	CALL_100
0x40064e5	          0x4889c7	                            mov rdi, rax	      6688	option.c	FUNCTION_40	ELSE_59	IF_119	CALL_100
0x40064e8	      0xe8b0230000	               call sym.set_chars_option	      6688	option.c	FUNCTION_40	ELSE_59	IF_119	CALL_100
0x40064ed	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6688	option.c	FUNCTION_40	ELSE_59	IF_119	CALL_100
0x40064f4	      0xe9c31b0000	                           jmp 0x40080bc	      6688	option.c	FUNCTION_40	ELSE_59	IF_119	CALL_100
0x40064f9	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6693	option.c	FUNCTION_40	ELSE_60	IF_120
0x4006504	            0x7511	                           jne 0x4006517	      6693	option.c	FUNCTION_40	ELSE_60	IF_120
0x4006506	      0xe882d7ffff	                    call sym.check_cedit	      6695	option.c	FUNCTION_40	ELSE_60	IF_120	CALL_101
0x400650b	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6695	option.c	FUNCTION_40	ELSE_60	IF_120	CALL_101
0x4006512	      0xe9a51b0000	                           jmp 0x40080bc	      6695	option.c	FUNCTION_40	ELSE_60	IF_120	CALL_101
0x4006517	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6700	option.c	FUNCTION_40	ELSE_61	IF_121
0x4006522	            0x7534	                           jne 0x4006558	      6700	option.c	FUNCTION_40	ELSE_61	IF_121
0x4006524	      0xe800000000	                          call 0x4006529	      6702	option.c	FUNCTION_40	ELSE_61	IF_121	CALL_102
0x4006529	    0x488b05000000	            mov rax, qword [0x04006530] 	      6703	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122	CALL_103
0x4006530	           0xfb600	                   movzx eax, byte [rax]	      6703	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122	CALL_103
0x4006533	            0x84c0	                             test al, al	      6703	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122	CALL_103
0x4006535	     0xf84811b0000	                            je 0x40080bc	      6703	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122	CALL_103
0x400653b	      0xe800000000	                          call 0x4006540	      6703	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122	CALL_103
0x4006540	            0x85c0	                           test eax, eax	      6703	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122	CALL_103
0x4006542	     0xf85741b0000	                           jne 0x40080bc	      6703	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122	CALL_103
0x4006548	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6704	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122
0x4006553	      0xe9641b0000	                           jmp 0x40080bc	      6704	option.c	FUNCTION_40	ELSE_61	IF_121	IF_122
0x4006558	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6709	option.c	FUNCTION_40	ELSE_62	IF_123
0x4006563	     0xf858a020000	                           jne 0x40067f3	      6709	option.c	FUNCTION_40	ELSE_62	IF_123
0x4006569	    0x488b05000000	            mov rax, qword [0x04006570] 	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x4006570	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x4006577	      0xe920020000	                           jmp 0x400679c	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x400657c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x4006583	           0xfb600	                   movzx eax, byte [rax]	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x4006586	           0xfb6c0	                           movzx eax, al	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x4006589	            0x89c6	                            mov esi, eax	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x400658b	      0xbf00000000	                              mov edi, 0	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x4006590	      0xe800000000	                          call 0x4006595	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x4006595	          0x4885c0	                           test rax, rax	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x4006598	            0x752a	                           jne 0x40065c4	      6714	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x400659a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065a1	           0xfb600	                   movzx eax, byte [rax]	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065a4	           0xfb6d0	                           movzx edx, al	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065a7	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065ae	            0x89d6	                            mov esi, edx	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065b0	          0x4889c7	                            mov rdi, rax	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065b3	      0xe8c0d5ffff	                   call sym.illegal_char	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065b8	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6716	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x40065bf	      0xe9ed010000	                           jmp 0x40067b1	      6717	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_124
0x40065c4	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6719	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_125
0x40065cb	           0xfb600	                   movzx eax, byte [rax]	      6719	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_125
0x40065ce	            0x3c6e	                            cmp al, 0x6e	      6719	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_125
0x40065d0	     0xf84da010000	                            je 0x40067b0	      6719	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_125
0x40065d6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6723	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x40065dd	           0xfb600	                   movzx eax, byte [rax]	      6723	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x40065e0	            0x3c72	                            cmp al, 0x72	      6723	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x40065e2	            0x7538	                           jne 0x400661c	      6723	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x40065e4	              0x90	                                     nop	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x40065e5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x40065ec	        0x4883c001	                              add rax, 1	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x40065f0	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x40065f7	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x40065fe	           0xfb600	                   movzx eax, byte [rax]	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x4006601	            0x84c0	                             test al, al	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x4006603	     0xf843f010000	                            je 0x4006748	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x4006609	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x4006610	           0xfb600	                   movzx eax, byte [rax]	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x4006613	            0x3c2c	                            cmp al, 0x2c	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x4006615	            0x75ce	                           jne 0x40065e5	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x4006617	      0xe92c010000	                           jmp 0x4006748	      6725	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x400661c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6728	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x4006623	           0xfb600	                   movzx eax, byte [rax]	      6728	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x4006626	            0x3c25	                            cmp al, 0x25	      6728	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x4006628	            0x7530	                           jne 0x400665a	      6728	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x400662a	              0x90	                                     nop	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x400662b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x4006632	        0x4883c001	                              add rax, 1	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x4006636	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x400663d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x4006644	           0xfb600	                   movzx eax, byte [rax]	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x4006647	           0xfb6c0	                           movzx eax, al	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x400664a	            0x89c7	                            mov edi, eax	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x400664c	      0xe800000000	                          call 0x4006651	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x4006651	            0x85c0	                           test eax, eax	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x4006653	            0x75d6	                           jne 0x400662b	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x4006655	      0xe9ee000000	                           jmp 0x4006748	      6731	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x400665a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006661	           0xfb600	                   movzx eax, byte [rax]	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006664	            0x3c21	                            cmp al, 0x21	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006666	            0x741c	                            je 0x4006684	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006668	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x400666f	           0xfb600	                   movzx eax, byte [rax]	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006672	            0x3c68	                            cmp al, 0x68	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006674	            0x740e	                            je 0x4006684	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006676	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x400667d	           0xfb600	                   movzx eax, byte [rax]	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006680	            0x3c63	                            cmp al, 0x63	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006682	            0x7517	                           jne 0x400669b	      6734	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006684	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6735	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x400668b	        0x4883c001	                              add rax, 1	      6735	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x400668f	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6735	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x4006696	      0xe9ad000000	                           jmp 0x4006748	      6735	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x400669b	              0x90	                                     nop	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x400669c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066a3	        0x4883c001	                              add rax, 1	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066a7	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066ae	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066b5	           0xfb600	                   movzx eax, byte [rax]	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066b8	           0xfb6c0	                           movzx eax, al	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066bb	            0x89c7	                            mov edi, eax	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066bd	      0xe800000000	                          call 0x40066c2	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066c2	            0x85c0	                           test eax, eax	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066c4	            0x75d6	                           jne 0x400669c	      6738	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x40066c6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6741	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x40066cd	        0x4883e801	                              sub rax, 1	      6741	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x40066d1	           0xfb600	                   movzx eax, byte [rax]	      6741	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x40066d4	           0xfb6c0	                           movzx eax, al	      6741	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x40066d7	          0x83e830	                           sub eax, 0x30	      6741	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x40066da	          0x83f809	                              cmp eax, 9	      6741	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x40066dd	            0x7669	                           jbe 0x4006748	      6741	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x40066df	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      6743	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x40066e7	            0x7452	                            je 0x400673b	      6743	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x40066e9	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6747	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_111
0x40066f0	        0x4883e801	                              sub rax, 1	      6747	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_111
0x40066f4	           0xfb600	                   movzx eax, byte [rax]	      6747	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_111
0x40066f7	           0xfb6c0	                           movzx eax, al	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x40066fa	            0x89c7	                            mov edi, eax	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x40066fc	      0xe800000000	                          call 0x4006701	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x4006701	          0x4889c3	                            mov rbx, rax	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x4006704	      0xbf00000000	                              mov edi, 0	      6746	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_110
0x4006709	      0xe800000000	                          call 0x400670e	      6746	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_110
0x400670e	          0x4889c1	                            mov rcx, rax	      6746	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_110
0x4006711	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x4006718	          0x4889da	                            mov rdx, rbx	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x400671b	          0x4889ce	                            mov rsi, rcx	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x400671e	          0x4889c7	                            mov rdi, rax	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x4006721	      0xb800000000	                              mov eax, 0	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x4006726	      0xe800000000	                          call 0x400672b	      6745	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x400672b	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      6748	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x4006732	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6748	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x4006739	            0xeb76	                           jmp 0x40067b1	      6752	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129
0x400673b	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6751	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	ELSE_67
0x4006746	            0xeb69	                           jmp 0x40067b1	      6752	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129
0x4006748	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6755	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x400674f	           0xfb600	                   movzx eax, byte [rax]	      6755	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x4006752	            0x3c2c	                            cmp al, 0x2c	      6755	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x4006754	            0x7514	                           jne 0x400676a	      6755	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x4006756	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6756	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x400675d	        0x4883c001	                              add rax, 1	      6756	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x4006761	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6756	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x4006768	            0xeb32	                           jmp 0x400679c	      6756	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_131
0x400676a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6757	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x4006771	           0xfb600	                   movzx eax, byte [rax]	      6757	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x4006774	            0x84c0	                             test al, al	      6757	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x4006776	            0x7424	                            je 0x400679c	      6757	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x4006778	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      6759	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	IF_133
0x4006780	            0x740d	                            je 0x400678f	      6759	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	IF_133
0x4006782	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6760	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	CALL_112
0x400678d	            0xeb22	                           jmp 0x40067b1	      6763	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x400678f	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6762	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	ELSE_69
0x400679a	            0xeb15	                           jmp 0x40067b1	      6763	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x400679c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x40067a3	           0xfb600	                   movzx eax, byte [rax]	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x40067a6	            0x84c0	                             test al, al	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x40067a8	     0xf85cefdffff	                           jne 0x400657c	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x40067ae	            0xeb01	                           jmp 0x40067b1	      6711	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6
0x40067b0	              0x90	                                     nop	      6721	option.c	FUNCTION_40	ELSE_62	IF_123	FOR_6	IF_125
0x40067b1	    0x488b05000000	            mov rax, qword [0x040067b8] 	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067b8	           0xfb600	                   movzx eax, byte [rax]	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067bb	            0x84c0	                             test al, al	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067bd	     0xf84f9180000	                            je 0x40080bc	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067c3	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067cb	     0xf85eb180000	                           jne 0x40080bc	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067d1	      0xbf27000000	                           mov edi, 0x27	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067d6	      0xe800000000	                          call 0x40067db	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067db	            0x85c0	                           test eax, eax	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067dd	     0xf89d9180000	                           jns 0x40080bc	      6766	option.c	FUNCTION_40	ELSE_62	IF_123	IF_134	CALL_113
0x40067e3	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6767	option.c	FUNCTION_40	ELSE_62	IF_123	CALL_114
0x40067ee	      0xe9c9180000	                           jmp 0x40080bc	      6767	option.c	FUNCTION_40	ELSE_62	IF_123	CALL_114
0x40067f3	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x40067f9	            0x4898	                                    cdqe	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x40067fb	        0x48c1e006	                              shl rax, 6	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x40067ff	    0x480500000000	                              add rax, 0	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x4006805	          0x4889c7	                            mov rdi, rax	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x4006808	      0xe864650000	                   call sym.istermoption	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x400680d	            0x85c0	                           test eax, eax	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x400680f	     0xf840f010000	                            je 0x4006924	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x4006815	    0x8b0500000000	            mov eax, dword [0x0400681b] 	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x400681b	            0x85c0	                           test eax, eax	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x400681d	     0xf8401010000	                            je 0x4006924	      6772	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_115
0x4006823	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6775	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136
0x400682e	            0x756f	                           jne 0x400689f	      6775	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136
0x4006830	    0x488b05000000	            mov rax, qword [0x04006837] 	      6777	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	CALL_116
0x4006837	          0x4889c7	                            mov rdi, rax	      6777	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	CALL_116
0x400683a	      0xe800000000	                          call 0x400683f	      6777	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	CALL_116
0x400683f	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      6777	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	CALL_116
0x4006845	    0x8b0500000000	            mov eax, dword [0x0400684b] 	      6782	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137
0x400684b	    0x3985c4feffff	           cmp dword [rbp - 0x13c], eax 	      6782	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137
0x4006851	            0x744c	                            je 0x400689f	      6782	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137
0x4006853	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      6784	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137
0x4006859	    0x890500000000	            mov dword [0x0400685f], eax 	      6784	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137
0x400685f	    0x8b0500000000	            mov eax, dword [0x04006865] 	      6785	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x4006865	          0x83f801	                              cmp eax, 1	      6785	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x4006868	            0x7f26	                            jg 0x4006890	      6785	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x400686a	    0x83bd98feffff	              cmp dword [rbp - 0x168], 0	      6787	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138	IF_139
0x4006871	            0x740f	                            je 0x4006882	      6787	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138	IF_139
0x4006873	    0x488b05000000	            mov rax, qword [0x0400687a] 	      6788	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138	CALL_117
0x400687a	          0x4889c7	                            mov rdi, rax	      6788	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138	CALL_117
0x400687d	      0xe800000000	                          call 0x4006882	      6788	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138	CALL_117
0x4006882	    0x488b05000000	            mov rax, qword [0x04006889] 	      6789	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x4006889	    0x488905000000	            mov qword [0x04006890], rax 	      6789	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x4006890	      0xbe00000000	                              mov esi, 0	      6799	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	CALL_120
0x4006895	      0xbf01000000	                              mov edi, 1	      6799	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	CALL_120
0x400689a	      0xe800000000	                          call 0x400689f	      6799	option.c	FUNCTION_40	ELSE_70	IF_135	IF_136	IF_137	CALL_120
0x400689f	      0xbf00000000	                              mov edi, 0	      6802	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_121
0x40068a4	      0xe800000000	                          call 0x40068a9	      6802	option.c	FUNCTION_40	ELSE_70	IF_135	CALL_121
0x40068a9	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6803	option.c	FUNCTION_40	ELSE_70	IF_135	IF_141
0x40068b4	            0x7519	                           jne 0x40068cf	      6803	option.c	FUNCTION_40	ELSE_70	IF_135	IF_141
0x40068b6	    0x488b05000000	            mov rax, qword [0x040068bd] 	      6805	option.c	FUNCTION_40	ELSE_70	IF_135	IF_141	CALL_122
0x40068bd	          0x4889c7	                            mov rdi, rax	      6805	option.c	FUNCTION_40	ELSE_70	IF_135	IF_141	CALL_122
0x40068c0	      0xe800000000	                          call 0x40068c5	      6805	option.c	FUNCTION_40	ELSE_70	IF_135	IF_141	CALL_122
0x40068c5	      0xbf32000000	                           mov edi, 0x32	      6806	option.c	FUNCTION_40	ELSE_70	IF_135	IF_141	CALL_123
0x40068ca	      0xe800000000	                          call 0x40068cf	      6806	option.c	FUNCTION_40	ELSE_70	IF_135	IF_141	CALL_123
0x40068cf	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x40068da	     0xf85d2170000	                           jne 0x40080b2	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x40068e0	    0x8b0500000000	            mov eax, dword [0x040068e6] 	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x40068e6	            0x85c0	                           test eax, eax	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x40068e8	     0xf84c4170000	                            je 0x40080b2	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x40068ee	    0x488b05000000	            mov rax, qword [0x040068f5] 	      6816	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	IF_143
0x40068f5	           0xfb600	                   movzx eax, byte [rax]	      6816	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	IF_143
0x40068f8	            0x84c0	                             test al, al	      6816	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	IF_143
0x40068fa	            0x7514	                           jne 0x4006910	      6816	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	IF_143
0x40068fc	    0x488b05000000	            mov rax, qword [0x04006903] 	      6819	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	CALL_125
0x4006903	          0x4889c7	                            mov rdi, rax	      6819	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	CALL_125
0x4006906	      0xe800000000	                          call 0x400690b	      6819	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	CALL_125
0x400690b	      0xe9a2170000	                           jmp 0x40080b2	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x4006910	    0x488b05000000	            mov rax, qword [0x04006917] 	      6821	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	CALL_126
0x4006917	          0x4889c7	                            mov rdi, rax	      6821	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	CALL_126
0x400691a	      0xe800000000	                          call 0x400691f	      6821	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142	CALL_126
0x400691f	      0xe98e170000	                           jmp 0x40080b2	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x4006924	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6827	option.c	FUNCTION_40	ELSE_72	IF_144
0x400692f	            0x7579	                           jne 0x40069aa	      6827	option.c	FUNCTION_40	ELSE_72	IF_144
0x4006931	    0x488b05000000	            mov rax, qword [0x04006938] 	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x4006938	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x400693f	            0xeb56	                           jmp 0x4006997	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x4006941	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6831	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	IF_145	CALL_127
0x4006948	          0x4889c7	                            mov rdi, rax	      6831	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	IF_145	CALL_127
0x400694b	      0xe800000000	                          call 0x4006950	      6831	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	IF_145	CALL_127
0x4006950	          0x83f801	                              cmp eax, 1	      6831	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	IF_145	CALL_127
0x4006953	            0x740b	                            je 0x4006960	      6831	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	IF_145	CALL_127
0x4006955	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6832	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_128
0x4006960	    0x8b0500000000	            mov eax, dword [0x04006966] 	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x4006966	            0x85c0	                           test eax, eax	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x4006968	            0x7415	                            je 0x400697f	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x400696a	    0x488b05000000	            mov rax, qword [0x04006971] 	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x4006971	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x4006978	          0x4889d7	                            mov rdi, rdx	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x400697b	            0xffd0	                                call rax	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x400697d	            0xeb05	                           jmp 0x4006984	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x400697f	      0xb801000000	                              mov eax, 1	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x4006984	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x400698b	            0x4898	                                    cdqe	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x400698d	          0x4801d0	                            add rax, rdx	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x4006990	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6833	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7	CALL_129
0x4006997	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x400699e	           0xfb600	                   movzx eax, byte [rax]	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x40069a1	            0x84c0	                             test al, al	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x40069a3	            0x759c	                           jne 0x4006941	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x40069a5	      0xe912170000	                           jmp 0x40080bc	      6829	option.c	FUNCTION_40	ELSE_72	IF_144	FOR_7
0x40069aa	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6840	option.c	FUNCTION_40	ELSE_73	IF_146
0x40069b5	     0xf85d6000000	                           jne 0x4006a91	      6840	option.c	FUNCTION_40	ELSE_73	IF_146
0x40069bb	    0x8b0500000000	            mov eax, dword [0x040069c1] 	      6842	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147
0x40069c1	            0x85c0	                           test eax, eax	      6842	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147
0x40069c3	     0xf84b9000000	                            je 0x4006a82	      6842	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147
0x40069c9	    0x488b05000000	            mov rax, qword [0x040069d0] 	      6844	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147
0x40069d0	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6844	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147
0x40069d7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6851	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_130
0x40069de	      0xbe00000000	                              mov esi, 0	      6851	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_130
0x40069e3	          0x4889c7	                            mov rdi, rax	      6851	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_130
0x40069e6	      0xe800000000	                          call 0x40069eb	      6851	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_130
0x40069eb	            0x85c0	                           test eax, eax	      6851	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_130
0x40069ed	            0x7563	                           jne 0x4006a52	      6851	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_130
0x40069ef	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6853	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_131
0x40069f6	          0x4889c7	                            mov rdi, rax	      6853	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_131
0x40069f9	      0xe800000000	                          call 0x40069fe	      6853	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_131
0x40069fe	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6853	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_131
0x4006a05	    0x83bd98feffff	              cmp dword [rbp - 0x168], 0	      6855	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	IF_149
0x4006a0c	            0x740f	                            je 0x4006a1d	      6855	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	IF_149
0x4006a0e	    0x488b05000000	            mov rax, qword [0x04006a15] 	      6856	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_132
0x4006a15	          0x4889c7	                            mov rdi, rax	      6856	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_132
0x4006a18	      0xe800000000	                          call 0x4006a1d	      6856	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_132
0x4006a1d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a24	          0x4885c0	                           test rax, rax	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a27	            0x7511	                           jne 0x4006a3a	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a29	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a30	          0x4889c7	                            mov rdi, rax	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a33	      0xe800000000	                          call 0x4006a38	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a38	            0xeb07	                           jmp 0x4006a41	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a3a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a41	    0x488905000000	            mov qword [0x04006a48], rax 	      6858	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148	CALL_133
0x4006a48	    0xc78598feffff	              mov dword [rbp - 0x168], 1	      6859	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_148
0x4006a52	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a59	          0x4885c0	                           test rax, rax	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a5c	            0x7424	                            je 0x4006a82	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a5e	    0x488b05000000	            mov rax, qword [0x04006a65] 	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a65	      0xbe00000000	                              mov esi, 0	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a6a	          0x4889c7	                            mov rdi, rax	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a6d	      0xe800000000	                          call 0x4006a72	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a72	          0x83f801	                              cmp eax, 1	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a75	            0x740b	                            je 0x4006a82	      6862	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_134
0x4006a77	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6876	option.c	FUNCTION_40	ELSE_73	IF_146	IF_147	IF_150	CALL_138
0x4006a82	    0xc785b0feffff	              mov dword [rbp - 0x150], 1	      6879	option.c	FUNCTION_40	ELSE_73	IF_146
0x4006a8c	      0xe92b160000	                           jmp 0x40080bc	      6879	option.c	FUNCTION_40	ELSE_73	IF_146
0x4006a91	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6892	option.c	FUNCTION_40	ELSE_77	IF_156
0x4006a9c	            0x7548	                           jne 0x4006ae6	      6892	option.c	FUNCTION_40	ELSE_77	IF_156
0x4006a9e	    0x488b05000000	            mov rax, qword [0x04006aa5] 	      6894	option.c	FUNCTION_40	ELSE_77	IF_156	IF_157	CALL_143
0x4006aa5	      0xbe00000000	                              mov esi, 0	      6894	option.c	FUNCTION_40	ELSE_77	IF_156	IF_157	CALL_143
0x4006aaa	          0x4889c7	                            mov rdi, rax	      6894	option.c	FUNCTION_40	ELSE_77	IF_156	IF_157	CALL_143
0x4006aad	      0xe800000000	                          call 0x4006ab2	      6894	option.c	FUNCTION_40	ELSE_77	IF_156	IF_157	CALL_143
0x4006ab2	            0x85c0	                           test eax, eax	      6894	option.c	FUNCTION_40	ELSE_77	IF_156	IF_157	CALL_143
0x4006ab4	            0x750d	                           jne 0x4006ac3	      6894	option.c	FUNCTION_40	ELSE_77	IF_156	IF_157	CALL_143
0x4006ab6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6895	option.c	FUNCTION_40	ELSE_77	IF_156	CALL_144
0x4006ac1	            0xeb14	                           jmp 0x4006ad7	      6895	option.c	FUNCTION_40	ELSE_77	IF_156	CALL_144
0x4006ac3	      0xe800000000	                          call 0x4006ac8	      6896	option.c	FUNCTION_40	ELSE_77	IF_156	ELSE_78	IF_158	CALL_145
0x4006ac8	            0x85c0	                           test eax, eax	      6896	option.c	FUNCTION_40	ELSE_77	IF_156	ELSE_78	IF_158	CALL_145
0x4006aca	            0x750b	                           jne 0x4006ad7	      6896	option.c	FUNCTION_40	ELSE_77	IF_156	ELSE_78	IF_158	CALL_145
0x4006acc	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6897	option.c	FUNCTION_40	ELSE_77	IF_156	ELSE_78	IF_158
0x4006ad7	    0xc785b0feffff	              mov dword [rbp - 0x150], 1	      6898	option.c	FUNCTION_40	ELSE_77	IF_156
0x4006ae1	      0xe9d6150000	                           jmp 0x40080bc	      6898	option.c	FUNCTION_40	ELSE_77	IF_156
0x4006ae6	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6905	option.c	FUNCTION_40	ELSE_79	IF_159
0x4006af1	            0x7516	                           jne 0x4006b09	      6905	option.c	FUNCTION_40	ELSE_79	IF_159
0x4006af3	      0xbf02000000	                              mov edi, 2	      6906	option.c	FUNCTION_40	ELSE_79	IF_159
0x4006af8	      0xe800000000	                          call 0x4006afd	      6906	option.c	FUNCTION_40	ELSE_79	IF_159
0x4006afd	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6906	option.c	FUNCTION_40	ELSE_79	IF_159
0x4006b04	      0xe9b3150000	                           jmp 0x40080bc	      6906	option.c	FUNCTION_40	ELSE_79	IF_159
0x4006b09	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6911	option.c	FUNCTION_40	ELSE_80	IF_160
0x4006b14	            0x7520	                           jne 0x4006b36	      6911	option.c	FUNCTION_40	ELSE_80	IF_160
0x4006b16	      0xbf01000000	                              mov edi, 1	      6913	option.c	FUNCTION_40	ELSE_80	IF_160	CALL_148
0x4006b1b	      0xe800000000	                          call 0x4006b20	      6913	option.c	FUNCTION_40	ELSE_80	IF_160	CALL_148
0x4006b20	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6913	option.c	FUNCTION_40	ELSE_80	IF_160	CALL_148
0x4006b27	      0xbfffffffff	                     mov edi, 0xffffffff	      6914	option.c	FUNCTION_40	ELSE_80	IF_160	CALL_149
0x4006b2c	      0xe800000000	                          call 0x4006b31	      6914	option.c	FUNCTION_40	ELSE_80	IF_160	CALL_149
0x4006b31	      0xe986150000	                           jmp 0x40080bc	      6914	option.c	FUNCTION_40	ELSE_80	IF_160	CALL_149
0x4006b36	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6919	option.c	FUNCTION_40	ELSE_81	IF_161
0x4006b41	            0x7511	                           jne 0x4006b54	      6919	option.c	FUNCTION_40	ELSE_81	IF_161
0x4006b43	      0xe800000000	                          call 0x4006b48	      6920	option.c	FUNCTION_40	ELSE_81	IF_161
0x4006b48	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6920	option.c	FUNCTION_40	ELSE_81	IF_161
0x4006b4f	      0xe968150000	                           jmp 0x40080bc	      6920	option.c	FUNCTION_40	ELSE_81	IF_161
0x4006b54	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6922	option.c	FUNCTION_40	ELSE_82	IF_162
0x4006b5f	            0x7511	                           jne 0x4006b72	      6922	option.c	FUNCTION_40	ELSE_82	IF_162
0x4006b61	      0xe800000000	                          call 0x4006b66	      6923	option.c	FUNCTION_40	ELSE_82	IF_162
0x4006b66	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6923	option.c	FUNCTION_40	ELSE_82	IF_162
0x4006b6d	      0xe94a150000	                           jmp 0x40080bc	      6923	option.c	FUNCTION_40	ELSE_82	IF_162
0x4006b72	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6929	option.c	FUNCTION_40	ELSE_83	IF_163
0x4006b7d	            0x750a	                           jne 0x4006b89	      6929	option.c	FUNCTION_40	ELSE_83	IF_163
0x4006b7f	      0xe8da9d0000	                    call sym.langmap_set	      6930	option.c	FUNCTION_40	ELSE_83	IF_163
0x4006b84	      0xe933150000	                           jmp 0x40080bc	      6930	option.c	FUNCTION_40	ELSE_83	IF_163
0x4006b89	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6935	option.c	FUNCTION_40	ELSE_84	IF_164
0x4006b94	            0x750a	                           jne 0x4006ba0	      6935	option.c	FUNCTION_40	ELSE_84	IF_164
0x4006b96	      0xe833a70000	             call sym.fill_breakat_flags	      6936	option.c	FUNCTION_40	ELSE_84	IF_164
0x4006b9b	      0xe91c150000	                           jmp 0x40080bc	      6936	option.c	FUNCTION_40	ELSE_84	IF_164
0x4006ba0	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6941	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bab	            0x7411	                            je 0x4006bbe	      6941	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bad	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6941	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bb8	     0xf859b000000	                           jne 0x4006c59	      6941	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bbe	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6944	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bc9	            0x7507	                           jne 0x4006bd2	      6944	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bcb	      0xb802000000	                              mov eax, 2	      6944	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bd0	            0xeb05	                           jmp 0x4006bd7	      6944	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bd2	      0xb801000000	                              mov eax, 1	      6944	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bd7	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      6944	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006bdd	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006be4	          0x488b00	                    mov rax, qword [rax]	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006be7	      0xbe25000000	                           mov esi, 0x25	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006bec	          0x4889c7	                            mov rdi, rax	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006bef	      0xe800000000	                          call 0x4006bf4	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006bf4	          0x4885c0	                           test rax, rax	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006bf7	            0x742b	                            je 0x4006c24	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006bf9	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006c00	          0x488b00	                    mov rax, qword [rax]	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006c03	          0x4889c7	                            mov rdi, rax	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006c06	      0xe800000000	                          call 0x4006c0b	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006c0b	          0x4885c0	                           test rax, rax	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006c0e	            0x7514	                           jne 0x4006c24	      6947	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166	CALL_155
0x4006c10	    0x8b0500000000	            mov eax, dword [0x04006c16] 	      6948	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166
0x4006c16	     0xb85ccfeffff	             or eax, dword [rbp - 0x134]	      6948	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166
0x4006c1c	    0x890500000000	            mov dword [0x04006c22], eax 	      6948	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166
0x4006c22	            0xeb18	                           jmp 0x4006c3c	      6948	option.c	FUNCTION_40	ELSE_85	IF_165	IF_166
0x4006c24	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      6950	option.c	FUNCTION_40	ELSE_85	IF_165	ELSE_86
0x4006c2a	            0xf7d0	                                 not eax	      6950	option.c	FUNCTION_40	ELSE_85	IF_165	ELSE_86
0x4006c2c	            0x89c2	                            mov edx, eax	      6950	option.c	FUNCTION_40	ELSE_85	IF_165	ELSE_86
0x4006c2e	    0x8b0500000000	            mov eax, dword [0x04006c34] 	      6950	option.c	FUNCTION_40	ELSE_85	IF_165	ELSE_86
0x4006c34	            0x21d0	                            and eax, edx	      6950	option.c	FUNCTION_40	ELSE_85	IF_165	ELSE_86
0x4006c36	    0x890500000000	            mov dword [0x04006c3c], eax 	      6950	option.c	FUNCTION_40	ELSE_85	IF_165	ELSE_86
0x4006c3c	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6952	option.c	FUNCTION_40	ELSE_85	IF_165	CALL_156
0x4006c47	           0xf94c0	                                 sete al	      6952	option.c	FUNCTION_40	ELSE_85	IF_165	CALL_156
0x4006c4a	           0xfb6c0	                           movzx eax, al	      6952	option.c	FUNCTION_40	ELSE_85	IF_165	CALL_156
0x4006c4d	            0x89c7	                            mov edi, eax	      6952	option.c	FUNCTION_40	ELSE_85	IF_165	CALL_156
0x4006c4f	      0xe897d0ffff	                  call sym.did_set_title	      6952	option.c	FUNCTION_40	ELSE_85	IF_165	CALL_156
0x4006c54	      0xe963140000	                           jmp 0x40080bc	      6942	option.c	FUNCTION_40	ELSE_85	IF_165
0x4006c59	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6959	option.c	FUNCTION_40	ELSE_87	IF_167
0x4006c64	            0x751e	                           jne 0x4006c84	      6959	option.c	FUNCTION_40	ELSE_87	IF_167
0x4006c66	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      6961	option.c	FUNCTION_40	ELSE_87	IF_167	CALL_157
0x4006c6d	          0x4889c7	                            mov rdi, rax	      6961	option.c	FUNCTION_40	ELSE_87	IF_167	CALL_157
0x4006c70	      0xe800000000	                          call 0x4006c75	      6961	option.c	FUNCTION_40	ELSE_87	IF_167	CALL_157
0x4006c75	    0xc785b0feffff	              mov dword [rbp - 0x150], 1	      6962	option.c	FUNCTION_40	ELSE_87	IF_167
0x4006c7f	      0xe938140000	                           jmp 0x40080bc	      6962	option.c	FUNCTION_40	ELSE_87	IF_167
0x4006c84	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6968	option.c	FUNCTION_40	ELSE_88	IF_168
0x4006c8f	            0x7519	                           jne 0x4006caa	      6968	option.c	FUNCTION_40	ELSE_88	IF_168
0x4006c91	    0xc70500000000	               mov dword [0x04006c9b], 1	      6970	option.c	FUNCTION_40	ELSE_88	IF_168
0x4006c9b	    0xc785b0feffff	              mov dword [rbp - 0x150], 1	      6971	option.c	FUNCTION_40	ELSE_88	IF_168
0x4006ca5	      0xe912140000	                           jmp 0x40080bc	      6971	option.c	FUNCTION_40	ELSE_88	IF_168
0x4006caa	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6974	option.c	FUNCTION_40	ELSE_89	IF_169
0x4006cb5	            0x750f	                           jne 0x4006cc6	      6974	option.c	FUNCTION_40	ELSE_89	IF_169
0x4006cb7	    0xc785b0feffff	              mov dword [rbp - 0x150], 1	      6976	option.c	FUNCTION_40	ELSE_89	IF_169
0x4006cc1	      0xe9f6130000	                           jmp 0x40080bc	      6976	option.c	FUNCTION_40	ELSE_89	IF_169
0x4006cc6	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6982	option.c	FUNCTION_40	ELSE_90	IF_170
0x4006cd1	            0x7557	                           jne 0x4006d2a	      6982	option.c	FUNCTION_40	ELSE_90	IF_170
0x4006cd3	      0xbf00000000	                              mov edi, 0	      6986	option.c	FUNCTION_40	ELSE_90	IF_170	CALL_158
0x4006cd8	      0xe800000000	                          call 0x4006cdd	      6986	option.c	FUNCTION_40	ELSE_90	IF_170	CALL_158
0x4006cdd	    0x488b05000000	            mov rax, qword [0x04006ce4] 	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006ce4	      0xb900000000	                              mov ecx, 0	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006ce9	      0xba00000000	                              mov edx, 0	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006cee	      0xbe00000000	                              mov esi, 0	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006cf3	          0x4889c7	                            mov rdi, rax	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006cf6	      0xe867a60000	              call sym.opt_strings_flags	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006cfb	          0x83f801	                              cmp eax, 1	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006cfe	            0x740d	                            je 0x4006d0d	      6987	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171	CALL_159
0x4006d00	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6988	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171
0x4006d0b	            0xeb05	                           jmp 0x4006d12	      6988	option.c	FUNCTION_40	ELSE_90	IF_170	IF_171
0x4006d0d	      0xe800000000	                          call 0x4006d12	      6990	option.c	FUNCTION_40	ELSE_90	IF_170	CALL_160
0x4006d12	    0x8b0500000000	            mov eax, dword [0x04006d18] 	      6991	option.c	FUNCTION_40	ELSE_90	IF_170	IF_172
0x4006d18	            0x85c0	                           test eax, eax	      6991	option.c	FUNCTION_40	ELSE_90	IF_170	IF_172
0x4006d1a	     0xf849c130000	                            je 0x40080bc	      6991	option.c	FUNCTION_40	ELSE_90	IF_170	IF_172
0x4006d20	      0xe800000000	                          call 0x4006d25	      6992	option.c	FUNCTION_40	ELSE_90	IF_170	CALL_161
0x4006d25	      0xe992130000	                           jmp 0x40080bc	      6992	option.c	FUNCTION_40	ELSE_90	IF_170	CALL_161
0x4006d2a	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      6997	option.c	FUNCTION_40	ELSE_92	IF_173
0x4006d35	            0x7540	                           jne 0x4006d77	      6997	option.c	FUNCTION_40	ELSE_92	IF_173
0x4006d37	    0x488b05000000	            mov rax, qword [0x04006d3e] 	      6999	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174
0x4006d3e	           0xfb600	                   movzx eax, byte [rax]	      6999	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174
0x4006d41	            0x84c0	                             test al, al	      6999	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174
0x4006d43	            0x7422	                            je 0x4006d67	      6999	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174
0x4006d45	    0x488b05000000	            mov rax, qword [0x04006d4c] 	      7000	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174	CALL_162
0x4006d4c	      0xba00000000	                              mov edx, 0	      7000	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174	CALL_162
0x4006d51	      0xbe00000000	                              mov esi, 0	      7000	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174	CALL_162
0x4006d56	          0x4889c7	                            mov rdi, rax	      7000	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174	CALL_162
0x4006d59	      0xe8d5a50000	              call sym.check_opt_strings	      7000	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174	CALL_162
0x4006d5e	          0x83f801	                              cmp eax, 1	      7000	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174	CALL_162
0x4006d61	     0xf8455130000	                            je 0x40080bc	      7000	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174	CALL_162
0x4006d67	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7001	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174
0x4006d72	      0xe945130000	                           jmp 0x40080bc	      7001	option.c	FUNCTION_40	ELSE_92	IF_173	IF_174
0x4006d77	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7005	option.c	FUNCTION_40	ELSE_93	IF_175
0x4006d82	            0x7532	                           jne 0x4006db6	      7005	option.c	FUNCTION_40	ELSE_93	IF_175
0x4006d84	    0x488b05000000	            mov rax, qword [0x04006d8b] 	      7007	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176	CALL_163
0x4006d8b	      0xba01000000	                              mov edx, 1	      7007	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176	CALL_163
0x4006d90	      0xbe00000000	                              mov esi, 0	      7007	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176	CALL_163
0x4006d95	          0x4889c7	                            mov rdi, rax	      7007	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176	CALL_163
0x4006d98	      0xe896a50000	              call sym.check_opt_strings	      7007	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176	CALL_163
0x4006d9d	          0x83f801	                              cmp eax, 1	      7007	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176	CALL_163
0x4006da0	     0xf8416130000	                            je 0x40080bc	      7007	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176	CALL_163
0x4006da6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7008	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176
0x4006db1	      0xe906130000	                           jmp 0x40080bc	      7008	option.c	FUNCTION_40	ELSE_93	IF_175	IF_176
0x4006db6	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7013	option.c	FUNCTION_40	ELSE_94	IF_177
0x4006dc1	            0x7549	                           jne 0x4006e0c	      7013	option.c	FUNCTION_40	ELSE_94	IF_177
0x4006dc3	    0x488b05000000	            mov rax, qword [0x04006dca] 	      7015	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_164
0x4006dca	      0xba00000000	                              mov edx, 0	      7015	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_164
0x4006dcf	      0xbe00000000	                              mov esi, 0	      7015	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_164
0x4006dd4	          0x4889c7	                            mov rdi, rax	      7015	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_164
0x4006dd7	      0xe857a50000	              call sym.check_opt_strings	      7015	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_164
0x4006ddc	          0x83f801	                              cmp eax, 1	      7015	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_164
0x4006ddf	     0xf84d7120000	                            je 0x40080bc	      7015	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_164
0x4006de5	    0x488b05000000	            mov rax, qword [0x04006dec] 	      7016	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_165
0x4006dec	          0x4889c7	                            mov rdi, rax	      7016	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_165
0x4006def	      0xe800000000	                          call 0x4006df4	      7016	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_165
0x4006df4	            0x85c0	                           test eax, eax	      7016	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_165
0x4006df6	     0xf85c0120000	                           jne 0x40080bc	      7016	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178	CALL_165
0x4006dfc	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7017	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178
0x4006e07	      0xe9b0120000	                           jmp 0x40080bc	      7017	option.c	FUNCTION_40	ELSE_94	IF_177	IF_178
0x4006e0c	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7022	option.c	FUNCTION_40	ELSE_95	IF_179
0x4006e17	            0x7579	                           jne 0x4006e92	      7022	option.c	FUNCTION_40	ELSE_95	IF_179
0x4006e19	    0x488b05000000	            mov rax, qword [0x04006e20] 	      7024	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180	CALL_166
0x4006e20	      0xba01000000	                              mov edx, 1	      7024	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180	CALL_166
0x4006e25	      0xbe00000000	                              mov esi, 0	      7024	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180	CALL_166
0x4006e2a	          0x4889c7	                            mov rdi, rax	      7024	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180	CALL_166
0x4006e2d	      0xe801a50000	              call sym.check_opt_strings	      7024	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180	CALL_166
0x4006e32	          0x83f801	                              cmp eax, 1	      7024	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180	CALL_166
0x4006e35	            0x7410	                            je 0x4006e47	      7024	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180	CALL_166
0x4006e37	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7025	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180
0x4006e42	      0xe975120000	                           jmp 0x40080bc	      7025	option.c	FUNCTION_40	ELSE_95	IF_179	IF_180
0x4006e47	    0x488b05000000	            mov rax, qword [0x04006e4e] 	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e4e	      0xbe6f000000	                           mov esi, 0x6f	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e53	          0x4889c7	                            mov rdi, rax	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e56	      0xe800000000	                          call 0x4006e5b	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e5b	          0x4885c0	                           test rax, rax	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e5e	           0xf95c0	                                setne al	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e61	           0xfb6c0	                           movzx eax, al	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e64	    0x890500000000	            mov dword [0x04006e6a], eax 	      7028	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_167
0x4006e6a	    0x488b05000000	            mov rax, qword [0x04006e71] 	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e71	      0xbe61000000	                           mov esi, 0x61	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e76	          0x4889c7	                            mov rdi, rax	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e79	      0xe800000000	                          call 0x4006e7e	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e7e	          0x4885c0	                           test rax, rax	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e81	           0xf95c0	                                setne al	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e84	           0xfb6c0	                           movzx eax, al	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e87	    0x890500000000	            mov dword [0x04006e8d], eax 	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e8d	      0xe92a120000	                           jmp 0x40080bc	      7029	option.c	FUNCTION_40	ELSE_95	IF_179	ELSE_96	CALL_168
0x4006e92	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7034	option.c	FUNCTION_40	ELSE_97	IF_181
0x4006e9d	            0x7532	                           jne 0x4006ed1	      7034	option.c	FUNCTION_40	ELSE_97	IF_181
0x4006e9f	    0x488b05000000	            mov rax, qword [0x04006ea6] 	      7036	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182	CALL_169
0x4006ea6	      0xba00000000	                              mov edx, 0	      7036	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182	CALL_169
0x4006eab	      0xbe00000000	                              mov esi, 0	      7036	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182	CALL_169
0x4006eb0	          0x4889c7	                            mov rdi, rax	      7036	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182	CALL_169
0x4006eb3	      0xe87ba40000	              call sym.check_opt_strings	      7036	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182	CALL_169
0x4006eb8	          0x83f801	                              cmp eax, 1	      7036	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182	CALL_169
0x4006ebb	     0xf84fb110000	                            je 0x40080bc	      7036	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182	CALL_169
0x4006ec1	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7037	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182
0x4006ecc	      0xe9eb110000	                           jmp 0x40080bc	      7037	option.c	FUNCTION_40	ELSE_97	IF_181	IF_182
0x4006ed1	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7047	option.c	FUNCTION_40	ELSE_99	IF_184
0x4006edc	            0x7537	                           jne 0x4006f15	      7047	option.c	FUNCTION_40	ELSE_99	IF_184
0x4006ede	    0x488b05000000	            mov rax, qword [0x04006ee5] 	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006ee5	      0xb901000000	                              mov ecx, 1	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006eea	      0xba00000000	                              mov edx, 0	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006eef	      0xbe00000000	                              mov esi, 0	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006ef4	          0x4889c7	                            mov rdi, rax	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006ef7	      0xe866a40000	              call sym.opt_strings_flags	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006efc	          0x83f801	                              cmp eax, 1	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006eff	     0xf84b7110000	                            je 0x40080bc	      7049	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185	CALL_171
0x4006f05	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7050	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185
0x4006f10	      0xe9a7110000	                           jmp 0x40080bc	      7050	option.c	FUNCTION_40	ELSE_99	IF_184	IF_185
0x4006f15	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7054	option.c	FUNCTION_40	ELSE_100	IF_186
0x4006f20	            0x7532	                           jne 0x4006f54	      7054	option.c	FUNCTION_40	ELSE_100	IF_186
0x4006f22	    0x488b05000000	            mov rax, qword [0x04006f29] 	      7056	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187	CALL_172
0x4006f29	      0xba01000000	                              mov edx, 1	      7056	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187	CALL_172
0x4006f2e	      0xbe00000000	                              mov esi, 0	      7056	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187	CALL_172
0x4006f33	          0x4889c7	                            mov rdi, rax	      7056	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187	CALL_172
0x4006f36	      0xe8f8a30000	              call sym.check_opt_strings	      7056	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187	CALL_172
0x4006f3b	          0x83f801	                              cmp eax, 1	      7056	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187	CALL_172
0x4006f3e	     0xf8478110000	                            je 0x40080bc	      7056	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187	CALL_172
0x4006f44	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7057	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187
0x4006f4f	      0xe968110000	                           jmp 0x40080bc	      7057	option.c	FUNCTION_40	ELSE_100	IF_186	IF_187
0x4006f54	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7061	option.c	FUNCTION_40	ELSE_101	IF_188
0x4006f5f	            0x753d	                           jne 0x4006f9e	      7061	option.c	FUNCTION_40	ELSE_101	IF_188
0x4006f61	    0x488b05000000	            mov rax, qword [0x04006f68] 	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f68	      0xb901000000	                              mov ecx, 1	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f6d	      0xba00000000	                              mov edx, 0	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f72	      0xbe00000000	                              mov esi, 0	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f77	          0x4889c7	                            mov rdi, rax	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f7a	      0xe8e3a30000	              call sym.opt_strings_flags	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f7f	          0x83f801	                              cmp eax, 1	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f82	            0x7410	                            je 0x4006f94	      7063	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189	CALL_173
0x4006f84	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7064	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189
0x4006f8f	      0xe928110000	                           jmp 0x40080bc	      7064	option.c	FUNCTION_40	ELSE_101	IF_188	IF_189
0x4006f94	      0xe800000000	                          call 0x4006f99	      7066	option.c	FUNCTION_40	ELSE_101	IF_188	CALL_174
0x4006f99	      0xe91e110000	                           jmp 0x40080bc	      7066	option.c	FUNCTION_40	ELSE_101	IF_188	CALL_174
0x4006f9e	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7071	option.c	FUNCTION_40	ELSE_103	IF_190
0x4006fa9	            0x7532	                           jne 0x4006fdd	      7071	option.c	FUNCTION_40	ELSE_103	IF_190
0x4006fab	    0x488b05000000	            mov rax, qword [0x04006fb2] 	      7073	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191	CALL_175
0x4006fb2	      0xba00000000	                              mov edx, 0	      7073	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191	CALL_175
0x4006fb7	      0xbe00000000	                              mov esi, 0	      7073	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191	CALL_175
0x4006fbc	          0x4889c7	                            mov rdi, rax	      7073	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191	CALL_175
0x4006fbf	      0xe86fa30000	              call sym.check_opt_strings	      7073	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191	CALL_175
0x4006fc4	          0x83f801	                              cmp eax, 1	      7073	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191	CALL_175
0x4006fc7	     0xf84ef100000	                            je 0x40080bc	      7073	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191	CALL_175
0x4006fcd	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7074	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191
0x4006fd8	      0xe9df100000	                           jmp 0x40080bc	      7074	option.c	FUNCTION_40	ELSE_103	IF_190	IF_191
0x4006fdd	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7079	option.c	FUNCTION_40	ELSE_104	IF_192
0x4006fe8	            0x7511	                           jne 0x4006ffb	      7079	option.c	FUNCTION_40	ELSE_104	IF_192
0x4006fea	      0xe89a1d0000	         call sym.check_clipboard_option	      7080	option.c	FUNCTION_40	ELSE_104	IF_192
0x4006fef	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7080	option.c	FUNCTION_40	ELSE_104	IF_192
0x4006ff6	      0xe9c1100000	                           jmp 0x40080bc	      7080	option.c	FUNCTION_40	ELSE_104	IF_192
0x4006ffb	    0x488b05000000	            mov rax, qword [0x04007002] 	      7086	option.c	FUNCTION_40	ELSE_105	IF_193
0x4007002	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7086	option.c	FUNCTION_40	ELSE_105	IF_193
0x4007006	    0x480580040000	                          add rax, 0x480	      7086	option.c	FUNCTION_40	ELSE_105	IF_193
0x400700c	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7086	option.c	FUNCTION_40	ELSE_105	IF_193
0x4007013	            0x741a	                            je 0x400702f	      7086	option.c	FUNCTION_40	ELSE_105	IF_193
0x4007015	    0x488b05000000	            mov rax, qword [0x0400701c] 	      7087	option.c	FUNCTION_40	ELSE_105	IF_193
0x400701c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7087	option.c	FUNCTION_40	ELSE_105	IF_193
0x4007020	    0x480578040000	                          add rax, 0x478	      7087	option.c	FUNCTION_40	ELSE_105	IF_193
0x4007026	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7087	option.c	FUNCTION_40	ELSE_105	IF_193
0x400702d	            0x7531	                           jne 0x4007060	      7087	option.c	FUNCTION_40	ELSE_105	IF_193
0x400702f	    0x488b05000000	            mov rax, qword [0x04007036] 	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x4007036	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x400703a	    0x480578040000	                          add rax, 0x478	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x4007040	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x4007047	           0xf94c0	                                 sete al	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x400704a	           0xfb6c0	                           movzx eax, al	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x400704d	            0x89c7	                            mov edi, eax	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x400704f	      0xe81b200000	           call sym.did_set_spell_option	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x4007054	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x400705b	      0xe95c100000	                           jmp 0x40080bc	      7089	option.c	FUNCTION_40	ELSE_105	IF_193	CALL_177
0x4007060	    0x488b05000000	            mov rax, qword [0x04007067] 	      7092	option.c	FUNCTION_40	ELSE_106	IF_194
0x4007067	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7092	option.c	FUNCTION_40	ELSE_106	IF_194
0x400706b	    0x480568040000	                          add rax, 0x468	      7092	option.c	FUNCTION_40	ELSE_106	IF_194
0x4007071	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7092	option.c	FUNCTION_40	ELSE_106	IF_194
0x4007078	            0x751f	                           jne 0x4007099	      7092	option.c	FUNCTION_40	ELSE_106	IF_194
0x400707a	    0x488b05000000	            mov rax, qword [0x04007081] 	      7094	option.c	FUNCTION_40	ELSE_106	IF_194	CALL_178
0x4007081	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7094	option.c	FUNCTION_40	ELSE_106	IF_194	CALL_178
0x4007085	          0x4889c7	                            mov rdi, rax	      7094	option.c	FUNCTION_40	ELSE_106	IF_194	CALL_178
0x4007088	      0xe8bd200000	               call sym.compile_cap_prog	      7094	option.c	FUNCTION_40	ELSE_106	IF_194	CALL_178
0x400708d	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7094	option.c	FUNCTION_40	ELSE_106	IF_194	CALL_178
0x4007094	      0xe923100000	                           jmp 0x40080bc	      7094	option.c	FUNCTION_40	ELSE_106	IF_194	CALL_178
0x4007099	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7097	option.c	FUNCTION_40	ELSE_107	IF_195
0x40070a4	            0x751e	                           jne 0x40070c4	      7097	option.c	FUNCTION_40	ELSE_107	IF_195
0x40070a6	      0xe800000000	                          call 0x40070ab	      7099	option.c	FUNCTION_40	ELSE_107	IF_195	IF_196	CALL_179
0x40070ab	          0x83f801	                              cmp eax, 1	      7099	option.c	FUNCTION_40	ELSE_107	IF_195	IF_196	CALL_179
0x40070ae	     0xf8408100000	                            je 0x40080bc	      7099	option.c	FUNCTION_40	ELSE_107	IF_195	IF_196	CALL_179
0x40070b4	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7100	option.c	FUNCTION_40	ELSE_107	IF_195	IF_196
0x40070bf	      0xe9f80f0000	                           jmp 0x40080bc	      7100	option.c	FUNCTION_40	ELSE_107	IF_195	IF_196
0x40070c4	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7103	option.c	FUNCTION_40	ELSE_108	IF_197
0x40070cf	            0x751e	                           jne 0x40070ef	      7103	option.c	FUNCTION_40	ELSE_108	IF_197
0x40070d1	      0xe800000000	                          call 0x40070d6	      7105	option.c	FUNCTION_40	ELSE_108	IF_197	IF_198	CALL_180
0x40070d6	          0x83f801	                              cmp eax, 1	      7105	option.c	FUNCTION_40	ELSE_108	IF_197	IF_198	CALL_180
0x40070d9	     0xf84dd0f0000	                            je 0x40080bc	      7105	option.c	FUNCTION_40	ELSE_108	IF_197	IF_198	CALL_180
0x40070df	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7106	option.c	FUNCTION_40	ELSE_108	IF_197	IF_198
0x40070ea	      0xe9cd0f0000	                           jmp 0x40080bc	      7106	option.c	FUNCTION_40	ELSE_108	IF_197	IF_198
0x40070ef	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7111	option.c	FUNCTION_40	ELSE_109	IF_199
0x40070fa	            0x7539	                           jne 0x4007135	      7111	option.c	FUNCTION_40	ELSE_109	IF_199
0x40070fc	    0x488b05000000	            mov rax, qword [0x04007103] 	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x4007103	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x400710a	      0xba00000000	                              mov edx, 0	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x400710f	      0xbe00000000	                              mov esi, 0	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x4007114	          0x4889c7	                            mov rdi, rax	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x4007117	      0xe817a20000	              call sym.check_opt_strings	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x400711c	          0x83f801	                              cmp eax, 1	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x400711f	     0xf84970f0000	                            je 0x40080bc	      7113	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200	CALL_181
0x4007125	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7114	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200
0x4007130	      0xe9870f0000	                           jmp 0x40080bc	      7114	option.c	FUNCTION_40	ELSE_109	IF_199	IF_200
0x4007135	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7118	option.c	FUNCTION_40	ELSE_110	IF_201
0x4007140	     0xf8592000000	                           jne 0x40071d8	      7118	option.c	FUNCTION_40	ELSE_110	IF_201
0x4007146	    0x488b05000000	            mov rax, qword [0x0400714d] 	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x400714d	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x4007154	      0xba00000000	                              mov edx, 0	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x4007159	      0xbe00000000	                              mov esi, 0	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x400715e	          0x4889c7	                            mov rdi, rax	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x4007161	      0xe8cda10000	              call sym.check_opt_strings	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x4007166	          0x83f801	                              cmp eax, 1	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x4007169	            0x7410	                            je 0x400717b	      7120	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202	CALL_182
0x400716b	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7121	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202
0x4007176	      0xe9410f0000	                           jmp 0x40080bc	      7121	option.c	FUNCTION_40	ELSE_110	IF_201	IF_202
0x400717b	    0x488b05000000	            mov rax, qword [0x04007182] 	      7124	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203
0x4007182	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      7124	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203
0x4007188	            0x85c0	                           test eax, eax	      7124	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203
0x400718a	            0x741b	                            je 0x40071a7	      7124	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203
0x400718c	    0x488b05000000	            mov rax, qword [0x04007193] 	      7126	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203
0x4007193	    0xc78040010000	              mov dword [rax + 0x140], 1	      7126	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203
0x400719d	      0xbf0a000000	                            mov edi, 0xa	      7127	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203	CALL_183
0x40071a2	      0xe800000000	                          call 0x40071a7	      7127	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	IF_203	CALL_183
0x40071a7	    0x488b05000000	            mov rax, qword [0x040071ae] 	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071ae	    0x488b15000000	            mov rdx, qword [0x040071b5] 	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071b5	    0x488b92181400	          mov rdx, qword [rdx + 0x1418] 	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071bc	           0xfb612	                   movzx edx, byte [rdx]	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071bf	          0x80fa68	                            cmp dl, 0x68	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071c2	           0xf94c2	                                 sete dl	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071c5	           0xfb6d2	                           movzx edx, dl	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071c8	    0x899058170000	          mov dword [rax + 0x1758], edx 	      7129	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111
0x40071ce	      0xe8acd7ffff	                  call sym.redraw_titles	      7131	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	CALL_184
0x40071d3	      0xe9e40e0000	                           jmp 0x40080bc	      7131	option.c	FUNCTION_40	ELSE_110	IF_201	ELSE_111	CALL_184
0x40071d8	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7138	option.c	FUNCTION_40	ELSE_112	IF_204
0x40071e3	            0x7411	                            je 0x40071f6	      7138	option.c	FUNCTION_40	ELSE_112	IF_204
0x40071e5	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7138	option.c	FUNCTION_40	ELSE_112	IF_204
0x40071f0	     0xf855b010000	                           jne 0x4007351	      7138	option.c	FUNCTION_40	ELSE_112	IF_204
0x40071f6	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7142	option.c	FUNCTION_40	ELSE_112	IF_204	IF_205
0x4007201	            0x750a	                           jne 0x400720d	      7142	option.c	FUNCTION_40	ELSE_112	IF_204	IF_205
0x4007203	    0xc70500000000	               mov dword [0x0400720d], 0	      7143	option.c	FUNCTION_40	ELSE_112	IF_204	IF_205
0x400720d	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7144	option.c	FUNCTION_40	ELSE_112	IF_204
0x4007214	          0x488b00	                    mov rax, qword [rax]	      7144	option.c	FUNCTION_40	ELSE_112	IF_204
0x4007217	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7144	option.c	FUNCTION_40	ELSE_112	IF_204
0x400721e	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7145	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206
0x4007229	     0xf85b6000000	                           jne 0x40072e5	      7145	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206
0x400722f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7145	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206
0x4007236	           0xfb600	                   movzx eax, byte [rax]	      7145	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206
0x4007239	            0x3c25	                            cmp al, 0x25	      7145	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206
0x400723b	     0xf85a4000000	                           jne 0x40072e5	      7145	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206
0x4007241	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7148	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x4007248	        0x4883c001	                              add rax, 1	      7148	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x400724c	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7148	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x4007253	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7148	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x400725a	           0xfb600	                   movzx eax, byte [rax]	      7148	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x400725d	            0x3c2d	                            cmp al, 0x2d	      7148	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x400725f	            0x7512	                           jne 0x4007273	      7148	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x4007261	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7149	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x4007268	        0x4883c001	                              add rax, 1	      7149	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x400726c	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7149	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_207
0x4007273	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      7150	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_185
0x400727a	          0x4889c7	                            mov rdi, rax	      7150	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_185
0x400727d	      0xe800000000	                          call 0x4007282	      7150	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_185
0x4007282	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      7150	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_185
0x4007288	    0x83bdc8feffff	              cmp dword [rbp - 0x138], 0	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x400728f	            0x743c	                            je 0x40072cd	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x4007291	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x4007298	           0xfb600	                   movzx eax, byte [rax]	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x400729b	            0x3c28	                            cmp al, 0x28	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x400729d	            0x752e	                           jne 0x40072cd	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x400729f	    0x488b05000000	            mov rax, qword [0x040072a6] 	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072a6	          0x4889c7	                            mov rdi, rax	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072a9	      0xe800000000	                          call 0x40072ae	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072ae	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072b5	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072bd	            0x750e	                           jne 0x40072cd	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072bf	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      7152	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208
0x40072c5	    0x890500000000	            mov dword [0x040072cb], eax 	      7152	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208
0x40072cb	            0xeb5b	                           jmp 0x4007328	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072cd	    0x488b05000000	            mov rax, qword [0x040072d4] 	      7154	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_187
0x40072d4	          0x4889c7	                            mov rdi, rax	      7154	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_187
0x40072d7	      0xe800000000	                          call 0x40072dc	      7154	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_187
0x40072dc	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7154	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	CALL_187
0x40072e3	            0xeb43	                           jmp 0x4007328	      7151	option.c	FUNCTION_40	ELSE_112	IF_204	IF_206	IF_208	CALL_186
0x40072e5	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x40072f0	            0x7420	                            je 0x4007312	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x40072f2	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x40072f9	           0xfb600	                   movzx eax, byte [rax]	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x40072fc	            0x3c25	                            cmp al, 0x25	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x40072fe	            0x7512	                           jne 0x4007312	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x4007300	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x4007307	        0x4883c001	                              add rax, 1	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x400730b	           0xfb600	                   movzx eax, byte [rax]	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x400730e	            0x3c21	                            cmp al, 0x21	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x4007310	            0x7416	                            je 0x4007328	      7157	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x4007312	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7158	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x4007319	          0x4889c7	                            mov rdi, rax	      7158	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x400731c	      0xe800000000	                          call 0x4007321	      7158	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x4007321	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7158	option.c	FUNCTION_40	ELSE_112	IF_204	ELSE_114	IF_209
0x4007328	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7159	option.c	FUNCTION_40	ELSE_112	IF_204	IF_210
0x4007333	     0xf857c0d0000	                           jne 0x40080b5	      7159	option.c	FUNCTION_40	ELSE_112	IF_204	IF_210
0x4007339	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      7159	option.c	FUNCTION_40	ELSE_112	IF_204	IF_210
0x4007341	     0xf856e0d0000	                           jne 0x40080b5	      7159	option.c	FUNCTION_40	ELSE_112	IF_204	IF_210
0x4007347	      0xe800000000	                          call 0x400734c	      7160	option.c	FUNCTION_40	ELSE_112	IF_204	CALL_189
0x400734c	      0xe9640d0000	                           jmp 0x40080b5	      7139	option.c	FUNCTION_40	ELSE_112	IF_204
0x4007351	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7166	option.c	FUNCTION_40	ELSE_115	IF_211
0x400735c	     0xf850d020000	                           jne 0x400756f	      7166	option.c	FUNCTION_40	ELSE_115	IF_211
0x4007362	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x4007369	          0x488b00	                    mov rax, qword [rax]	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x400736c	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x4007373	      0xe9e0010000	                           jmp 0x4007558	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x4007378	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7171	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x400737f	        0x4883c001	                              add rax, 1	      7171	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x4007383	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7171	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x400738a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x4007391	           0xfb600	                   movzx eax, byte [rax]	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x4007394	            0x3c2c	                            cmp al, 0x2c	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x4007396	            0x74e0	                            je 0x4007378	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x4007398	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x400739f	           0xfb600	                   movzx eax, byte [rax]	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x40073a2	            0x3c20	                            cmp al, 0x20	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x40073a4	            0x74d2	                            je 0x4007378	      7170	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	WHILE_6
0x40073a6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7172	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_212
0x40073ad	           0xfb600	                   movzx eax, byte [rax]	      7172	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_212
0x40073b0	            0x84c0	                             test al, al	      7172	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_212
0x40073b2	     0xf84000d0000	                            je 0x40080b8	      7172	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_212
0x40073b8	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073bf	           0xfb600	                   movzx eax, byte [rax]	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073c2	           0xfb6c0	                           movzx eax, al	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073c5	            0x89c6	                            mov esi, eax	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073c7	      0xbf00000000	                              mov edi, 0	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073cc	      0xe800000000	                          call 0x40073d1	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073d1	          0x4885c0	                           test rax, rax	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073d4	            0x752a	                           jne 0x4007400	      7174	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_190
0x40073d6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073dd	           0xfb600	                   movzx eax, byte [rax]	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073e0	           0xfb6d0	                           movzx edx, al	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073e3	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073ea	            0x89d6	                            mov esi, edx	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073ec	          0x4889c7	                            mov rdi, rax	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073ef	      0xe884c7ffff	                   call sym.illegal_char	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073f4	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7176	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213	CALL_191
0x40073fb	      0xe9bc0c0000	                           jmp 0x40080bc	      7177	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_213
0x4007400	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007407	        0x4883c001	                              add rax, 1	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x400740b	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007412	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007419	           0xfb600	                   movzx eax, byte [rax]	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x400741c	            0x84c0	                             test al, al	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x400741e	     0xf8434010000	                            je 0x4007558	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007424	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x400742b	           0xfb600	                   movzx eax, byte [rax]	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x400742e	            0x3c2c	                            cmp al, 0x2c	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007430	     0xf8422010000	                            je 0x4007558	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007436	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x400743d	           0xfb600	                   movzx eax, byte [rax]	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007440	            0x3c20	                            cmp al, 0x20	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007442	     0xf8410010000	                            je 0x4007558	      7179	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214
0x4007448	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x400744f	        0x4883e801	                              sub rax, 1	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x4007453	           0xfb600	                   movzx eax, byte [rax]	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x4007456	            0x3c6b	                            cmp al, 0x6b	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x4007458	            0x7458	                            je 0x40074b2	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x400745a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x4007461	        0x4883e801	                              sub rax, 1	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x4007465	           0xfb600	                   movzx eax, byte [rax]	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x4007468	            0x3c73	                            cmp al, 0x73	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x400746a	            0x757a	                           jne 0x40074e6	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x400746c	            0xeb44	                           jmp 0x40074b2	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x400746e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x4007475	           0xfb600	                   movzx eax, byte [rax]	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x4007478	            0x3c5c	                            cmp al, 0x5c	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x400747a	            0x7524	                           jne 0x40074a0	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x400747c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x4007483	        0x4883c001	                              add rax, 1	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x4007487	           0xfb600	                   movzx eax, byte [rax]	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x400748a	            0x84c0	                             test al, al	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x400748c	            0x7412	                            je 0x40074a0	      7186	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x400748e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7187	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x4007495	        0x4883c001	                              add rax, 1	      7187	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x4007499	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7187	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7	IF_216
0x40074a0	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7188	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074a7	        0x4883c001	                              add rax, 1	      7188	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074ab	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7188	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074b2	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074b9	           0xfb600	                   movzx eax, byte [rax]	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074bc	            0x84c0	                             test al, al	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074be	     0xf8494000000	                            je 0x4007558	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074c4	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074cb	           0xfb600	                   movzx eax, byte [rax]	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074ce	            0x3c2c	                            cmp al, 0x2c	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074d0	     0xf8482000000	                            je 0x4007558	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074d6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074dd	           0xfb600	                   movzx eax, byte [rax]	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074e0	            0x3c20	                            cmp al, 0x20	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074e2	            0x758a	                           jne 0x400746e	      7184	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215	WHILE_7
0x40074e4	            0xeb72	                           jmp 0x4007558	      7181	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	IF_215
0x40074e6	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      7193	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x40074ee	            0x7458	                            je 0x4007548	      7193	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x40074f0	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7197	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x40074f7	        0x4883e801	                              sub rax, 1	      7197	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x40074fb	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x4007502	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7197	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x4007509	           0xfb600	                   movzx eax, byte [rax]	      7197	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x400750c	           0xfb6d8	                           movzx ebx, al	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x400750f	      0xbf00000000	                              mov edi, 0	      7196	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_193
0x4007514	      0xe800000000	                          call 0x4007519	      7196	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_193
0x4007519	          0x4889c1	                            mov rcx, rax	      7196	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_193
0x400751c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x4007523	            0x89da	                            mov edx, ebx	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x4007525	          0x4889ce	                            mov rsi, rcx	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x4007528	          0x4889c7	                            mov rdi, rax	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x400752b	      0xb800000000	                              mov eax, 0	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x4007530	      0xe800000000	                          call 0x4007535	      7195	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217	CALL_192
0x4007535	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7198	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x400753c	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7198	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	IF_217
0x4007543	      0xe9740b0000	                           jmp 0x40080bc	      7202	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116
0x4007548	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7201	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116	ELSE_117
0x4007553	      0xe9640b0000	                           jmp 0x40080bc	      7202	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_214	ELSE_116
0x4007558	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x400755f	           0xfb600	                   movzx eax, byte [rax]	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x4007562	            0x84c0	                             test al, al	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x4007564	     0xf8520feffff	                           jne 0x400738a	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x400756a	      0xe94d0b0000	                           jmp 0x40080bc	      7168	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8
0x400756f	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7209	option.c	FUNCTION_40	ELSE_118	IF_218
0x400757a	            0x7538	                           jne 0x40075b4	      7209	option.c	FUNCTION_40	ELSE_118	IF_218
0x400757c	    0x488b05000000	            mov rax, qword [0x04007583] 	      7211	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219	CALL_194
0x4007583	      0xba01000000	                              mov edx, 1	      7211	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219	CALL_194
0x4007588	      0xbe00000000	                              mov esi, 0	      7211	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219	CALL_194
0x400758d	          0x4889c7	                            mov rdi, rax	      7211	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219	CALL_194
0x4007590	      0xe89e9d0000	              call sym.check_opt_strings	      7211	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219	CALL_194
0x4007595	          0x83f801	                              cmp eax, 1	      7211	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219	CALL_194
0x4007598	            0x7410	                            je 0x40075aa	      7211	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219	CALL_194
0x400759a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7212	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219
0x40075a5	      0xe9120b0000	                           jmp 0x40080bc	      7212	option.c	FUNCTION_40	ELSE_118	IF_218	IF_219
0x40075aa	      0xe800000000	                          call 0x40075af	      7214	option.c	FUNCTION_40	ELSE_118	IF_218	CALL_195
0x40075af	      0xe9080b0000	                           jmp 0x40080bc	      7214	option.c	FUNCTION_40	ELSE_118	IF_218	CALL_195
0x40075b4	    0x488b05000000	            mov rax, qword [0x040075bb] 	      7220	option.c	FUNCTION_40	ELSE_120	IF_220
0x40075bb	    0x4805b8020000	                          add rax, 0x2b8	      7220	option.c	FUNCTION_40	ELSE_120	IF_220
0x40075c1	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7220	option.c	FUNCTION_40	ELSE_120	IF_220
0x40075c8	            0x7535	                           jne 0x40075ff	      7220	option.c	FUNCTION_40	ELSE_120	IF_220
0x40075ca	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075d1	          0x488b00	                    mov rax, qword [rax]	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075d4	      0xba00000000	                              mov edx, 0	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075d9	      0xbe00000000	                              mov esi, 0	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075de	          0x4889c7	                            mov rdi, rax	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075e1	      0xe84d9d0000	              call sym.check_opt_strings	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075e6	          0x83f801	                              cmp eax, 1	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075e9	     0xf84cd0a0000	                            je 0x40080bc	      7222	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221	CALL_196
0x40075ef	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7223	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221
0x40075fa	      0xe9bd0a0000	                           jmp 0x40080bc	      7223	option.c	FUNCTION_40	ELSE_120	IF_220	IF_221
0x40075ff	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7230	option.c	FUNCTION_40	ELSE_121	IF_222
0x400760a	            0x7555	                           jne 0x4007661	      7230	option.c	FUNCTION_40	ELSE_121	IF_222
0x400760c	    0x488b05000000	            mov rax, qword [0x04007613] 	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x4007613	      0xb901000000	                              mov ecx, 1	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x4007618	      0xba00000000	                              mov edx, 0	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x400761d	      0xbe00000000	                              mov esi, 0	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x4007622	          0x4889c7	                            mov rdi, rax	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x4007625	      0xe8389d0000	              call sym.opt_strings_flags	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x400762a	          0x83f801	                              cmp eax, 1	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x400762d	            0x7410	                            je 0x400763f	      7232	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223	CALL_197
0x400762f	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7234	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223
0x400763a	      0xe97d0a0000	                           jmp 0x40080bc	      7234	option.c	FUNCTION_40	ELSE_121	IF_222	IF_223
0x400763f	      0xe800000000	                          call 0x4007644	      7237	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_198
0x4007644	    0x8b0500000000	            mov eax, dword [0x0400764a] 	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x400764a	          0x83e003	                              and eax, 3	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x400764d	            0x85c0	                           test eax, eax	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x400764f	           0xf95c0	                                setne al	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x4007652	           0xfb6c0	                           movzx eax, al	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x4007655	            0x89c7	                            mov edi, eax	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x4007657	      0xe800000000	                          call 0x400765c	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x400765c	      0xe95b0a0000	                           jmp 0x40080bc	      7238	option.c	FUNCTION_40	ELSE_121	IF_222	ELSE_122	CALL_199
0x4007661	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7246	option.c	FUNCTION_40	ELSE_123	IF_224
0x400766c	            0x7555	                           jne 0x40076c3	      7246	option.c	FUNCTION_40	ELSE_123	IF_224
0x400766e	    0x488b05000000	            mov rax, qword [0x04007675] 	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x4007675	      0xb900000000	                              mov ecx, 0	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x400767a	      0xba00000000	                              mov edx, 0	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x400767f	      0xbe00000000	                              mov esi, 0	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x4007684	          0x4889c7	                            mov rdi, rax	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x4007687	      0xe8d69c0000	              call sym.opt_strings_flags	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x400768c	          0x83f801	                              cmp eax, 1	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x400768f	            0x7410	                            je 0x40076a1	      7248	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225	CALL_200
0x4007691	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7249	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225
0x400769c	      0xe91b0a0000	                           jmp 0x40080bc	      7249	option.c	FUNCTION_40	ELSE_123	IF_224	IF_225
0x40076a1	      0xe800000000	                          call 0x40076a6	      7252	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_201
0x40076a6	    0x8b0500000000	            mov eax, dword [0x040076ac] 	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076ac	          0x83e003	                              and eax, 3	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076af	            0x85c0	                           test eax, eax	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076b1	           0xf95c0	                                setne al	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076b4	           0xfb6c0	                           movzx eax, al	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076b7	            0x89c7	                            mov edi, eax	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076b9	      0xe800000000	                          call 0x40076be	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076be	      0xe9f9090000	                           jmp 0x40080bc	      7253	option.c	FUNCTION_40	ELSE_123	IF_224	ELSE_124	CALL_202
0x40076c3	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7260	option.c	FUNCTION_40	ELSE_125	IF_226
0x40076ce	            0x757d	                           jne 0x400774d	      7260	option.c	FUNCTION_40	ELSE_125	IF_226
0x40076d0	    0x488b05000000	            mov rax, qword [0x040076d7] 	      7262	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227
0x40076d7	           0xfb600	                   movzx eax, byte [rax]	      7262	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227
0x40076da	            0x84c0	                             test al, al	      7262	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227
0x40076dc	     0xf84da090000	                            je 0x40080bc	      7262	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227
0x40076e2	    0x488b05000000	            mov rax, qword [0x040076e9] 	      7264	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	CALL_203
0x40076e9	    0x488db5d8feff	                  lea rsi, [rbp - 0x128]	      7264	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	CALL_203
0x40076f0	    0x41b800000000	                              mov r8d, 0	      7264	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	CALL_203
0x40076f6	      0xb901000000	                              mov ecx, 1	      7264	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	CALL_203
0x40076fb	      0xba01000000	                              mov edx, 1	      7264	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	CALL_203
0x4007700	          0x4889c7	                            mov rdi, rax	      7264	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	CALL_203
0x4007703	      0xe800000000	                          call 0x4007708	      7264	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	CALL_203
0x4007708	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7265	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228
0x400770f	          0x4885c0	                           test rax, rax	      7265	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228
0x4007712	     0xf84a4090000	                            je 0x40080bc	      7265	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228
0x4007718	    0x83bd98feffff	              cmp dword [rbp - 0x168], 0	      7267	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228	IF_229
0x400771f	            0x740f	                            je 0x4007730	      7267	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228	IF_229
0x4007721	    0x488b05000000	            mov rax, qword [0x04007728] 	      7268	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228	CALL_204
0x4007728	          0x4889c7	                            mov rdi, rax	      7268	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228	CALL_204
0x400772b	      0xe800000000	                          call 0x4007730	      7268	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228	CALL_204
0x4007730	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7269	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228
0x4007737	    0x488905000000	            mov qword [0x0400773e], rax 	      7269	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228
0x400773e	    0xc78598feffff	              mov dword [rbp - 0x168], 1	      7270	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228
0x4007748	      0xe96f090000	                           jmp 0x40080bc	      7270	option.c	FUNCTION_40	ELSE_125	IF_226	IF_227	IF_228
0x400774d	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7276	option.c	FUNCTION_40	ELSE_126	IF_230
0x4007758	            0x757b	                           jne 0x40077d5	      7276	option.c	FUNCTION_40	ELSE_126	IF_230
0x400775a	    0x488b05000000	            mov rax, qword [0x04007761] 	      7278	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	CALL_205
0x4007761	           0xfb600	                   movzx eax, byte [rax]	      7278	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	CALL_205
0x4007764	           0xfb6c0	                           movzx eax, al	      7278	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	CALL_205
0x4007767	          0x83e830	                           sub eax, 0x30	      7278	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	CALL_205
0x400776a	          0x83f809	                              cmp eax, 9	      7278	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	CALL_205
0x400776d	            0x7734	                            ja 0x40077a3	      7278	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	CALL_205
0x400776f	    0x488b05000000	            mov rax, qword [0x04007776] 	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x4007776	           0xfb600	                   movzx eax, byte [rax]	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x4007779	            0x3c32	                            cmp al, 0x32	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x400777b	            0x7716	                            ja 0x4007793	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x400777d	    0x488b05000000	            mov rax, qword [0x04007784] 	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x4007784	        0x4883c001	                              add rax, 1	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x4007788	           0xfb600	                   movzx eax, byte [rax]	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x400778b	            0x84c0	                             test al, al	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x400778d	     0xf8429090000	                            je 0x40080bc	      7280	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x4007793	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7281	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x400779e	      0xe919090000	                           jmp 0x40080bc	      7281	option.c	FUNCTION_40	ELSE_126	IF_230	IF_231	IF_232
0x40077a3	    0x488b05000000	            mov rax, qword [0x040077aa] 	      7283	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233	CALL_206
0x40077aa	      0xba01000000	                              mov edx, 1	      7283	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233	CALL_206
0x40077af	      0xbe00000000	                              mov esi, 0	      7283	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233	CALL_206
0x40077b4	          0x4889c7	                            mov rdi, rax	      7283	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233	CALL_206
0x40077b7	      0xe8779b0000	              call sym.check_opt_strings	      7283	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233	CALL_206
0x40077bc	          0x83f801	                              cmp eax, 1	      7283	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233	CALL_206
0x40077bf	     0xf84f7080000	                            je 0x40080bc	      7283	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233	CALL_206
0x40077c5	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7284	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233
0x40077d0	      0xe9e7080000	                           jmp 0x40080bc	      7284	option.c	FUNCTION_40	ELSE_126	IF_230	ELSE_127	IF_233
0x40077d5	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7286	option.c	FUNCTION_40	ELSE_128	IF_234
0x40077e0	            0x7537	                           jne 0x4007819	      7286	option.c	FUNCTION_40	ELSE_128	IF_234
0x40077e2	    0x488b05000000	            mov rax, qword [0x040077e9] 	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x40077e9	      0xb901000000	                              mov ecx, 1	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x40077ee	      0xba00000000	                              mov edx, 0	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x40077f3	      0xbe00000000	                              mov esi, 0	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x40077f8	          0x4889c7	                            mov rdi, rax	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x40077fb	      0xe8629b0000	              call sym.opt_strings_flags	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x4007800	          0x83f801	                              cmp eax, 1	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x4007803	     0xf84b3080000	                            je 0x40080bc	      7288	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235	CALL_207
0x4007809	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7289	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235
0x4007814	      0xe9a3080000	                           jmp 0x40080bc	      7289	option.c	FUNCTION_40	ELSE_128	IF_234	IF_235
0x4007819	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7293	option.c	FUNCTION_40	ELSE_129	IF_236
0x4007824	     0xf85c5000000	                           jne 0x40078ef	      7293	option.c	FUNCTION_40	ELSE_129	IF_236
0x400782a	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      7297	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007830	          0x83e004	                              and eax, 4	      7297	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007833	            0x85c0	                           test eax, eax	      7297	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007835	            0x742b	                            je 0x4007862	      7297	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007837	    0x488b05000000	            mov rax, qword [0x0400783e] 	      7299	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x400783e	    0x488b80281600	          mov rax, qword [rax + 0x1628] 	      7299	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007845	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7299	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x400784c	    0x488b05000000	            mov rax, qword [0x04007853] 	      7300	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007853	    0x480530160000	                         add rax, 0x1630	      7300	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007859	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      7300	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007860	            0xeb19	                           jmp 0x400787b	      7300	option.c	FUNCTION_40	ELSE_129	IF_236	IF_237
0x4007862	    0x488b05000000	            mov rax, qword [0x04007869] 	      7304	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_130
0x4007869	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7304	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_130
0x4007870	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      7305	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_130
0x400787b	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x4007881	          0x83e004	                              and eax, 4	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x4007884	            0x85c0	                           test eax, eax	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x4007886	            0x7420	                            je 0x40078a8	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x4007888	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x400788f	           0xfb600	                   movzx eax, byte [rax]	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x4007892	            0x84c0	                             test al, al	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x4007894	            0x7512	                           jne 0x40078a8	      7308	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x4007896	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7310	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x400789d	    0xc70000000000	                      mov dword [rax], 0	      7310	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x40078a3	      0xe914080000	                           jmp 0x40080bc	      7310	option.c	FUNCTION_40	ELSE_129	IF_236	IF_238
0x40078a8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7311	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239
0x40078af	           0xfb600	                   movzx eax, byte [rax]	      7311	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239
0x40078b2	            0x84c0	                             test al, al	      7311	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239
0x40078b4	            0x7429	                            je 0x40078df	      7311	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239
0x40078b6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078bd	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078c4	      0xb900000000	                              mov ecx, 0	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078c9	      0xbe00000000	                              mov esi, 0	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078ce	          0x4889c7	                            mov rdi, rax	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078d1	      0xe88c9a0000	              call sym.opt_strings_flags	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078d6	          0x83f801	                              cmp eax, 1	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078d9	     0xf84dd070000	                            je 0x40080bc	      7312	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239	CALL_208
0x40078df	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7313	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239
0x40078ea	      0xe9cd070000	                           jmp 0x40080bc	      7313	option.c	FUNCTION_40	ELSE_129	IF_236	ELSE_131	IF_239
0x40078ef	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7318	option.c	FUNCTION_40	ELSE_132	IF_240
0x40078fa	            0x7537	                           jne 0x4007933	      7318	option.c	FUNCTION_40	ELSE_132	IF_240
0x40078fc	    0x488b05000000	            mov rax, qword [0x04007903] 	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x4007903	      0xb901000000	                              mov ecx, 1	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x4007908	      0xba00000000	                              mov edx, 0	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x400790d	      0xbe00000000	                              mov esi, 0	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x4007912	          0x4889c7	                            mov rdi, rax	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x4007915	      0xe8489a0000	              call sym.opt_strings_flags	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x400791a	          0x83f801	                              cmp eax, 1	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x400791d	     0xf8499070000	                            je 0x40080bc	      7320	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241	CALL_209
0x4007923	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7321	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241
0x400792e	      0xe989070000	                           jmp 0x40080bc	      7321	option.c	FUNCTION_40	ELSE_132	IF_240	IF_241
0x4007933	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7327	option.c	FUNCTION_40	ELSE_133	IF_242
0x400793e	            0x751d	                           jne 0x400795d	      7327	option.c	FUNCTION_40	ELSE_133	IF_242
0x4007940	      0xe800000000	                          call 0x4007945	      7329	option.c	FUNCTION_40	ELSE_133	IF_242	IF_243	CALL_210
0x4007945	            0x85c0	                           test eax, eax	      7329	option.c	FUNCTION_40	ELSE_133	IF_242	IF_243	CALL_210
0x4007947	     0xf856f070000	                           jne 0x40080bc	      7329	option.c	FUNCTION_40	ELSE_133	IF_242	IF_243	CALL_210
0x400794d	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7330	option.c	FUNCTION_40	ELSE_133	IF_242	IF_243
0x4007958	      0xe95f070000	                           jmp 0x40080bc	      7330	option.c	FUNCTION_40	ELSE_133	IF_242	IF_243
0x400795d	    0x488b05000000	            mov rax, qword [0x04007964] 	      7336	option.c	FUNCTION_40	ELSE_134	IF_244
0x4007964	    0x4805b0030000	                          add rax, 0x3b0	      7336	option.c	FUNCTION_40	ELSE_134	IF_244
0x400796a	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      7336	option.c	FUNCTION_40	ELSE_134	IF_244
0x4007971	            0x7576	                           jne 0x40079e9	      7336	option.c	FUNCTION_40	ELSE_134	IF_244
0x4007973	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x400797a	          0x488b00	                    mov rax, qword [rax]	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x400797d	      0xba00000000	                              mov edx, 0	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x4007982	      0xbe00000000	                              mov esi, 0	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x4007987	          0x4889c7	                            mov rdi, rax	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x400798a	      0xe8a4990000	              call sym.check_opt_strings	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x400798f	          0x83f801	                              cmp eax, 1	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x4007992	            0x7515	                           jne 0x40079a9	      7338	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245	CALL_211
0x4007994	    0x488b05000000	            mov rax, qword [0x0400799b] 	      7339	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245
0x400799b	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	      7339	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245
0x40079a2	           0xfb600	                   movzx eax, byte [rax]	      7339	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245
0x40079a5	            0x84c0	                             test al, al	      7339	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245
0x40079a7	            0x7510	                           jne 0x40079b9	      7339	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245
0x40079a9	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7340	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245
0x40079b4	      0xe903070000	                           jmp 0x40080bc	      7340	option.c	FUNCTION_40	ELSE_134	IF_244	IF_245
0x40079b9	    0x488b05000000	            mov rax, qword [0x040079c0] 	      7343	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	CALL_212
0x40079c0	          0x4889c7	                            mov rdi, rax	      7343	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	CALL_212
0x40079c3	      0xe800000000	                          call 0x40079c8	      7343	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	CALL_212
0x40079c8	    0x488b05000000	            mov rax, qword [0x040079cf] 	      7344	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	IF_246	CALL_213
0x40079cf	          0x4889c7	                            mov rdi, rax	      7344	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	IF_246	CALL_213
0x40079d2	      0xe800000000	                          call 0x40079d7	      7344	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	IF_246	CALL_213
0x40079d7	            0x85c0	                           test eax, eax	      7344	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	IF_246	CALL_213
0x40079d9	     0xf84dd060000	                            je 0x40080bc	      7344	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	IF_246	CALL_213
0x40079df	      0xe800000000	                          call 0x40079e4	      7345	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	CALL_214
0x40079e4	      0xe9d3060000	                           jmp 0x40080bc	      7345	option.c	FUNCTION_40	ELSE_134	IF_244	ELSE_135	CALL_214
0x40079e9	    0x488b05000000	            mov rax, qword [0x040079f0] 	      7350	option.c	FUNCTION_40	ELSE_136	IF_247
0x40079f0	    0x480518020000	                          add rax, 0x218	      7350	option.c	FUNCTION_40	ELSE_136	IF_247
0x40079f6	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7350	option.c	FUNCTION_40	ELSE_136	IF_247
0x40079fd	            0x752b	                           jne 0x4007a2a	      7350	option.c	FUNCTION_40	ELSE_136	IF_247
0x40079ff	    0x488b05000000	            mov rax, qword [0x04007a06] 	      7352	option.c	FUNCTION_40	ELSE_136	IF_247	IF_248	CALL_215
0x4007a06	          0x4889c7	                            mov rdi, rax	      7352	option.c	FUNCTION_40	ELSE_136	IF_247	IF_248	CALL_215
0x4007a09	      0xe800000000	                          call 0x4007a0e	      7352	option.c	FUNCTION_40	ELSE_136	IF_247	IF_248	CALL_215
0x4007a0e	            0x85c0	                           test eax, eax	      7352	option.c	FUNCTION_40	ELSE_136	IF_247	IF_248	CALL_215
0x4007a10	     0xf84a6060000	                            je 0x40080bc	      7352	option.c	FUNCTION_40	ELSE_136	IF_247	IF_248	CALL_215
0x4007a16	    0x488b05000000	            mov rax, qword [0x04007a1d] 	      7353	option.c	FUNCTION_40	ELSE_136	IF_247	CALL_216
0x4007a1d	          0x4889c7	                            mov rdi, rax	      7353	option.c	FUNCTION_40	ELSE_136	IF_247	CALL_216
0x4007a20	      0xe800000000	                          call 0x4007a25	      7353	option.c	FUNCTION_40	ELSE_136	IF_247	CALL_216
0x4007a25	      0xe992060000	                           jmp 0x40080bc	      7353	option.c	FUNCTION_40	ELSE_136	IF_247	CALL_216
0x4007a2a	    0x488b05000000	            mov rax, qword [0x04007a31] 	      7357	option.c	FUNCTION_40	ELSE_137	IF_249
0x4007a31	    0x4805e0030000	                          add rax, 0x3e0	      7357	option.c	FUNCTION_40	ELSE_137	IF_249
0x4007a37	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      7357	option.c	FUNCTION_40	ELSE_137	IF_249
0x4007a3e	     0xf859d000000	                           jne 0x4007ae1	      7357	option.c	FUNCTION_40	ELSE_137	IF_249
0x4007a44	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7359	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_217
0x4007a4b	          0x488b00	                    mov rax, qword [rax]	      7359	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_217
0x4007a4e	      0xbe2c000000	                           mov esi, 0x2c	      7359	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_217
0x4007a53	          0x4889c7	                            mov rdi, rax	      7359	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_217
0x4007a56	      0xe800000000	                          call 0x4007a5b	      7359	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_217
0x4007a5b	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7359	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_217
0x4007a62	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7360	option.c	FUNCTION_40	ELSE_137	IF_249	IF_250
0x4007a69	          0x4885c0	                           test rax, rax	      7360	option.c	FUNCTION_40	ELSE_137	IF_249	IF_250
0x4007a6c	            0x7510	                           jne 0x4007a7e	      7360	option.c	FUNCTION_40	ELSE_137	IF_249	IF_250
0x4007a6e	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7361	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_218
0x4007a79	      0xe93e060000	                           jmp 0x40080bc	      7361	option.c	FUNCTION_40	ELSE_137	IF_249	CALL_218
0x4007a7e	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007a85	          0x488b10	                    mov rdx, qword [rax]	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007a88	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007a8f	          0x4839c2	                            cmp rdx, rax	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007a92	            0x7412	                            je 0x4007aa6	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007a94	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007a9b	        0x4883c001	                              add rax, 1	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007a9f	           0xfb600	                   movzx eax, byte [rax]	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007aa2	            0x84c0	                             test al, al	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007aa4	            0x7510	                           jne 0x4007ab6	      7362	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007aa6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7363	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007ab1	      0xe906060000	                           jmp 0x40080bc	      7363	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_138	IF_251
0x4007ab6	    0x488b05000000	            mov rax, qword [0x04007abd] 	      7364	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252	CALL_219
0x4007abd	          0x4889c7	                            mov rdi, rax	      7364	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252	CALL_219
0x4007ac0	      0xe800000000	                          call 0x4007ac5	      7364	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252	CALL_219
0x4007ac5	            0x85c0	                           test eax, eax	      7364	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252	CALL_219
0x4007ac7	     0xf84ef050000	                            je 0x40080bc	      7364	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252	CALL_219
0x4007acd	    0x488b05000000	            mov rax, qword [0x04007ad4] 	      7365	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252
0x4007ad4	          0x4889c7	                            mov rdi, rax	      7365	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252
0x4007ad7	      0xe800000000	                          call 0x4007adc	      7365	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252
0x4007adc	      0xe9db050000	                           jmp 0x40080bc	      7365	option.c	FUNCTION_40	ELSE_137	IF_249	ELSE_139	IF_252
0x4007ae1	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7368	option.c	FUNCTION_40	ELSE_140	IF_253
0x4007aec	            0x7545	                           jne 0x4007b33	      7368	option.c	FUNCTION_40	ELSE_140	IF_253
0x4007aee	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007af5	          0x488b00	                    mov rax, qword [rax]	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007af8	           0xfb600	                   movzx eax, byte [rax]	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007afb	            0x84c0	                             test al, al	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007afd	     0xf84b9050000	                            je 0x40080bc	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b03	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b0a	          0x488b00	                    mov rax, qword [rax]	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b0d	      0xbe00000000	                              mov esi, 0	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b12	          0x4889c7	                            mov rdi, rax	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b15	      0xe800000000	                          call 0x4007b1a	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b1a	          0x4885c0	                           test rax, rax	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b1d	     0xf8599050000	                           jne 0x40080bc	      7370	option.c	FUNCTION_40	ELSE_140	IF_253	IF_254	CALL_221
0x4007b23	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7371	option.c	FUNCTION_40	ELSE_140	IF_253	CALL_222
0x4007b2e	      0xe989050000	                           jmp 0x40080bc	      7371	option.c	FUNCTION_40	ELSE_140	IF_253	CALL_222
0x4007b33	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7374	option.c	FUNCTION_40	ELSE_141	IF_255
0x4007b3e	            0x7537	                           jne 0x4007b77	      7374	option.c	FUNCTION_40	ELSE_141	IF_255
0x4007b40	    0x488b05000000	            mov rax, qword [0x04007b47] 	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b47	      0xb901000000	                              mov ecx, 1	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b4c	      0xba00000000	                              mov edx, 0	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b51	      0xbe00000000	                              mov esi, 0	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b56	          0x4889c7	                            mov rdi, rax	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b59	      0xe804980000	              call sym.opt_strings_flags	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b5e	          0x83f801	                              cmp eax, 1	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b61	     0xf8455050000	                            je 0x40080bc	      7376	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256	CALL_223
0x4007b67	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7377	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256
0x4007b72	      0xe945050000	                           jmp 0x40080bc	      7377	option.c	FUNCTION_40	ELSE_141	IF_255	IF_256
0x4007b77	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7380	option.c	FUNCTION_40	ELSE_142	IF_257
0x4007b82	            0x7532	                           jne 0x4007bb6	      7380	option.c	FUNCTION_40	ELSE_142	IF_257
0x4007b84	    0x488b05000000	            mov rax, qword [0x04007b8b] 	      7382	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258	CALL_224
0x4007b8b	      0xba01000000	                              mov edx, 1	      7382	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258	CALL_224
0x4007b90	      0xbe00000000	                              mov esi, 0	      7382	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258	CALL_224
0x4007b95	          0x4889c7	                            mov rdi, rax	      7382	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258	CALL_224
0x4007b98	      0xe896970000	              call sym.check_opt_strings	      7382	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258	CALL_224
0x4007b9d	          0x83f801	                              cmp eax, 1	      7382	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258	CALL_224
0x4007ba0	     0xf8416050000	                            je 0x40080bc	      7382	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258	CALL_224
0x4007ba6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7383	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258
0x4007bb1	      0xe906050000	                           jmp 0x40080bc	      7383	option.c	FUNCTION_40	ELSE_142	IF_257	IF_258
0x4007bb6	    0x488b05000000	            mov rax, qword [0x04007bbd] 	      7386	option.c	FUNCTION_40	ELSE_143	IF_259
0x4007bbd	    0x480598030000	                          add rax, 0x398	      7386	option.c	FUNCTION_40	ELSE_143	IF_259
0x4007bc3	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      7386	option.c	FUNCTION_40	ELSE_143	IF_259
0x4007bca	            0x752b	                           jne 0x4007bf7	      7386	option.c	FUNCTION_40	ELSE_143	IF_259
0x4007bcc	    0x488b05000000	            mov rax, qword [0x04007bd3] 	      7388	option.c	FUNCTION_40	ELSE_143	IF_259	IF_260	CALL_225
0x4007bd3	          0x4889c7	                            mov rdi, rax	      7388	option.c	FUNCTION_40	ELSE_143	IF_259	IF_260	CALL_225
0x4007bd6	      0xe800000000	                          call 0x4007bdb	      7388	option.c	FUNCTION_40	ELSE_143	IF_259	IF_260	CALL_225
0x4007bdb	            0x85c0	                           test eax, eax	      7388	option.c	FUNCTION_40	ELSE_143	IF_259	IF_260	CALL_225
0x4007bdd	     0xf84d9040000	                            je 0x40080bc	      7388	option.c	FUNCTION_40	ELSE_143	IF_259	IF_260	CALL_225
0x4007be3	    0x488b05000000	            mov rax, qword [0x04007bea] 	      7389	option.c	FUNCTION_40	ELSE_143	IF_259	CALL_226
0x4007bea	          0x4889c7	                            mov rdi, rax	      7389	option.c	FUNCTION_40	ELSE_143	IF_259	CALL_226
0x4007bed	      0xe800000000	                          call 0x4007bf2	      7389	option.c	FUNCTION_40	ELSE_143	IF_259	CALL_226
0x4007bf2	      0xe9c5040000	                           jmp 0x40080bc	      7389	option.c	FUNCTION_40	ELSE_143	IF_259	CALL_226
0x4007bf7	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7395	option.c	FUNCTION_40	ELSE_144	IF_261
0x4007c02	            0x7572	                           jne 0x4007c76	      7395	option.c	FUNCTION_40	ELSE_144	IF_261
0x4007c04	    0x488b05000000	            mov rax, qword [0x04007c0b] 	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c0b	      0xb901000000	                              mov ecx, 1	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c10	      0xba00000000	                              mov edx, 0	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c15	      0xbe00000000	                              mov esi, 0	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c1a	          0x4889c7	                            mov rdi, rax	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c1d	      0xe840970000	              call sym.opt_strings_flags	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c22	          0x83f801	                              cmp eax, 1	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c25	            0x7410	                            je 0x4007c37	      7397	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262	CALL_227
0x4007c27	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7398	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262
0x4007c32	      0xe985040000	                           jmp 0x40080bc	      7398	option.c	FUNCTION_40	ELSE_144	IF_261	IF_262
0x4007c37	    0x488b05000000	            mov rax, qword [0x04007c3e] 	      7399	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_228
0x4007c3e	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      7399	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_228
0x4007c45	          0x4889d6	                            mov rsi, rdx	      7399	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_228
0x4007c48	          0x4889c7	                            mov rdi, rax	      7399	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_228
0x4007c4b	      0xe800000000	                          call 0x4007c50	      7399	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_228
0x4007c50	            0x85c0	                           test eax, eax	      7399	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_228
0x4007c52	     0xf8464040000	                            je 0x40080bc	      7399	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_228
0x4007c58	      0xe800000000	                          call 0x4007c5d	      7403	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_229
0x4007c5d	    0x488b05000000	            mov rax, qword [0x04007c64] 	      7404	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_230
0x4007c64	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      7404	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_230
0x4007c6a	            0x89c7	                            mov edi, eax	      7404	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_230
0x4007c6c	      0xe800000000	                          call 0x4007c71	      7404	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_230
0x4007c71	      0xe946040000	                           jmp 0x40080bc	      7404	option.c	FUNCTION_40	ELSE_144	IF_261	ELSE_145	IF_263	CALL_230
0x4007c76	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7410	option.c	FUNCTION_40	ELSE_146	IF_264
0x4007c81	     0xf85e8000000	                           jne 0x4007d6f	      7410	option.c	FUNCTION_40	ELSE_146	IF_264
0x4007c87	    0x488b05000000	            mov rax, qword [0x04007c8e] 	      7412	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265
0x4007c8e	          0x4885c0	                           test rax, rax	      7412	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265
0x4007c91	     0xf8425040000	                            je 0x40080bc	      7412	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265
0x4007c97	    0x488b05000000	            mov rax, qword [0x04007c9e] 	      7414	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265
0x4007c9e	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7414	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265
0x4007ca5	      0xe9ae000000	                           jmp 0x4007d58	      7415	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8
0x4007caa	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cb1	           0xfb600	                   movzx eax, byte [rax]	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cb4	           0xfb6c0	                           movzx eax, al	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cb7	            0x89c6	                            mov esi, eax	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cb9	      0xbf00000000	                              mov edi, 0	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cbe	      0xe800000000	                          call 0x4007cc3	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cc3	          0x4885c0	                           test rax, rax	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cc6	            0x7458	                            je 0x4007d20	      7417	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_231
0x4007cc8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7418	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007ccf	        0x4883c001	                              add rax, 1	      7418	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007cd3	           0xfb600	                   movzx eax, byte [rax]	      7418	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007cd6	            0x84c0	                             test al, al	      7418	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007cd8	            0x7446	                            je 0x4007d20	      7418	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007cda	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007ce1	        0x4883c001	                              add rax, 1	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007ce5	           0xfb600	                   movzx eax, byte [rax]	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007ce8	           0xfb6c0	                           movzx eax, al	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007ceb	            0x89c6	                            mov esi, eax	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007ced	      0xbf00000000	                              mov edi, 0	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007cf2	      0xe800000000	                          call 0x4007cf7	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007cf7	          0x4885c0	                           test rax, rax	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007cfa	            0x7424	                            je 0x4007d20	      7419	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266	CALL_232
0x4007cfc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d03	        0x4883c002	                              add rax, 2	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d07	           0xfb600	                   movzx eax, byte [rax]	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d0a	            0x84c0	                             test al, al	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d0c	            0x7422	                            je 0x4007d30	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d0e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d15	        0x4883c002	                              add rax, 2	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d19	           0xfb600	                   movzx eax, byte [rax]	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d1c	            0x3c2c	                            cmp al, 0x2c	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d1e	            0x7410	                            je 0x4007d30	      7420	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d20	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7422	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d2b	      0xe98c030000	                           jmp 0x40080bc	      7423	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	IF_266
0x4007d30	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7425	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_147	IF_267
0x4007d37	        0x4883c002	                              add rax, 2	      7425	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_147	IF_267
0x4007d3b	           0xfb600	                   movzx eax, byte [rax]	      7425	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_147	IF_267
0x4007d3e	            0x84c0	                             test al, al	      7425	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_147	IF_267
0x4007d40	     0xf8475030000	                            je 0x40080bb	      7425	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_147	IF_267
0x4007d46	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7428	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_148
0x4007d4d	        0x4883c003	                              add rax, 3	      7428	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_148
0x4007d51	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7428	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_148
0x4007d58	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7415	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8
0x4007d5f	           0xfb600	                   movzx eax, byte [rax]	      7415	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8
0x4007d62	            0x84c0	                             test al, al	      7415	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8
0x4007d64	     0xf8540ffffff	                           jne 0x4007caa	      7415	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8
0x4007d6a	      0xe94d030000	                           jmp 0x40080bc	      7415	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8
0x4007d6f	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7436	option.c	FUNCTION_40	ELSE_148	ELSE_149	IF_268
0x4007d7a	            0x7514	                           jne 0x4007d90	      7436	option.c	FUNCTION_40	ELSE_148	ELSE_149	IF_268
0x4007d7c	    0x488b05000000	            mov rax, qword [0x04007d83] 	      7439	option.c	FUNCTION_40	ELSE_148	ELSE_149	IF_268	CALL_233
0x4007d83	          0x4889c7	                            mov rdi, rax	      7439	option.c	FUNCTION_40	ELSE_148	ELSE_149	IF_268	CALL_233
0x4007d86	      0xe800000000	                          call 0x4007d8b	      7439	option.c	FUNCTION_40	ELSE_148	ELSE_149	IF_268	CALL_233
0x4007d8b	      0xe92c030000	                           jmp 0x40080bc	      7439	option.c	FUNCTION_40	ELSE_148	ELSE_149	IF_268	CALL_233
0x4007d90	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7452	option.c	FUNCTION_40	ELSE_151	IF_271
0x4007d9b	            0x7555	                           jne 0x4007df2	      7452	option.c	FUNCTION_40	ELSE_151	IF_271
0x4007d9d	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7454	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272	CALL_235
0x4007da4	          0x488b00	                    mov rax, qword [rax]	      7454	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272	CALL_235
0x4007da7	          0x4889c7	                            mov rdi, rax	      7454	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272	CALL_235
0x4007daa	      0xe8f0cfffff	                 call sym.valid_filetype	      7454	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272	CALL_235
0x4007daf	            0x85c0	                           test eax, eax	      7454	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272	CALL_235
0x4007db1	            0x7510	                           jne 0x4007dc3	      7454	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272	CALL_235
0x4007db3	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7455	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272
0x4007dbe	      0xe9f9020000	                           jmp 0x40080bc	      7455	option.c	FUNCTION_40	ELSE_151	IF_271	IF_272
0x4007dc3	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007dca	          0x488b10	                    mov rdx, qword [rax]	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007dcd	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007dd4	          0x4889d6	                            mov rsi, rdx	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007dd7	          0x4889c7	                            mov rdi, rax	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007dda	      0xe800000000	                          call 0x4007ddf	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007ddf	            0x85c0	                           test eax, eax	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007de1	           0xf95c0	                                setne al	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007de4	           0xfb6c0	                           movzx eax, al	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007de7	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007ded	      0xe9ca020000	                           jmp 0x40080bc	      7457	option.c	FUNCTION_40	ELSE_151	IF_271	CALL_236
0x4007df2	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7461	option.c	FUNCTION_40	ELSE_153	IF_273
0x4007dfd	            0x752a	                           jne 0x4007e29	      7461	option.c	FUNCTION_40	ELSE_153	IF_273
0x4007dff	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7463	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274	CALL_237
0x4007e06	          0x488b00	                    mov rax, qword [rax]	      7463	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274	CALL_237
0x4007e09	          0x4889c7	                            mov rdi, rax	      7463	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274	CALL_237
0x4007e0c	      0xe88ecfffff	                 call sym.valid_filetype	      7463	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274	CALL_237
0x4007e11	            0x85c0	                           test eax, eax	      7463	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274	CALL_237
0x4007e13	     0xf85a3020000	                           jne 0x40080bc	      7463	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274	CALL_237
0x4007e19	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7464	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274
0x4007e24	      0xe993020000	                           jmp 0x40080bc	      7464	option.c	FUNCTION_40	ELSE_153	IF_273	IF_274
0x4007e29	    0x488b05000000	            mov rax, qword [0x04007e30] 	      7470	option.c	FUNCTION_40	ELSE_154	IF_275
0x4007e30	    0x4805c0020000	                          add rax, 0x2c0	      7470	option.c	FUNCTION_40	ELSE_154	IF_275
0x4007e36	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7470	option.c	FUNCTION_40	ELSE_154	IF_275
0x4007e3d	            0x754c	                           jne 0x4007e8b	      7470	option.c	FUNCTION_40	ELSE_154	IF_275
0x4007e3f	    0x488b05000000	            mov rax, qword [0x04007e46] 	      7472	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276
0x4007e46	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      7472	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276
0x4007e4d	           0xfb600	                   movzx eax, byte [rax]	      7472	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276
0x4007e50	            0x84c0	                             test al, al	      7472	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276
0x4007e52	     0xf8464020000	                            je 0x40080bc	      7472	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276
0x4007e58	    0x488b05000000	            mov rax, qword [0x04007e5f] 	      7473	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276	CALL_238
0x4007e5f	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      7473	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276	CALL_238
0x4007e66	      0xbe01000000	                              mov esi, 1	      7473	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276	CALL_238
0x4007e6b	          0x4889c7	                            mov rdi, rax	      7473	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276	CALL_238
0x4007e6e	      0xe800000000	                          call 0x4007e73	      7473	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276	CALL_238
0x4007e73	            0x85c0	                           test eax, eax	      7473	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276	CALL_238
0x4007e75	     0xf8541020000	                           jne 0x40080bc	      7473	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276	CALL_238
0x4007e7b	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7474	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276
0x4007e86	      0xe931020000	                           jmp 0x40080bc	      7474	option.c	FUNCTION_40	ELSE_154	IF_275	IF_276
0x4007e8b	    0x488b05000000	            mov rax, qword [0x04007e92] 	      7477	option.c	FUNCTION_40	ELSE_155	IF_277
0x4007e92	    0x4805c8020000	                          add rax, 0x2c8	      7477	option.c	FUNCTION_40	ELSE_155	IF_277
0x4007e98	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7477	option.c	FUNCTION_40	ELSE_155	IF_277
0x4007e9f	     0xf859a000000	                           jne 0x4007f3f	      7477	option.c	FUNCTION_40	ELSE_155	IF_277
0x4007ea5	    0x488b05000000	            mov rax, qword [0x04007eac] 	      7479	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278
0x4007eac	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      7479	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278
0x4007eb3	           0xfb600	                   movzx eax, byte [rax]	      7479	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278
0x4007eb6	            0x84c0	                             test al, al	      7479	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278
0x4007eb8	     0xf84fe010000	                            je 0x40080bc	      7479	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278
0x4007ebe	    0x488b05000000	            mov rax, qword [0x04007ec5] 	      7481	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	CALL_239
0x4007ec5	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      7481	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	CALL_239
0x4007ecc	          0x4889c7	                            mov rdi, rax	      7481	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	CALL_239
0x4007ecf	      0xe800000000	                          call 0x4007ed4	      7481	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	CALL_239
0x4007ed4	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7481	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	CALL_239
0x4007edb	    0x488b05000000	            mov rax, qword [0x04007ee2] 	      7482	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007ee2	    0x488b90c80200	           mov rdx, qword [rax + 0x2c8] 	      7482	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007ee9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7482	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007ef0	          0x4839c2	                            cmp rdx, rax	      7482	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007ef3	            0x743a	                            je 0x4007f2f	      7482	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007ef5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007efc	           0xfb600	                   movzx eax, byte [rax]	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007eff	            0x3c78	                            cmp al, 0x78	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f01	            0x740e	                            je 0x4007f11	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f03	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f0a	           0xfb600	                   movzx eax, byte [rax]	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f0d	            0x3c2a	                            cmp al, 0x2a	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f0f	            0x751e	                           jne 0x4007f2f	      7483	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f11	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7484	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279	CALL_240
0x4007f18	        0x4883c001	                              add rax, 1	      7484	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279	CALL_240
0x4007f1c	          0x4889c7	                            mov rdi, rax	      7484	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279	CALL_240
0x4007f1f	      0xe800000000	                          call 0x4007f24	      7484	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279	CALL_240
0x4007f24	           0xfb600	                   movzx eax, byte [rax]	      7484	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279	CALL_240
0x4007f27	            0x84c0	                             test al, al	      7484	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279	CALL_240
0x4007f29	     0xf848d010000	                            je 0x40080bc	      7484	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279	CALL_240
0x4007f2f	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7485	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f3a	      0xe97d010000	                           jmp 0x40080bc	      7485	option.c	FUNCTION_40	ELSE_155	IF_277	IF_278	IF_279
0x4007f3f	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7493	option.c	FUNCTION_40	ELSE_156
0x4007f4a	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7494	option.c	FUNCTION_40	ELSE_156	IF_280
0x4007f55	            0x750b	                           jne 0x4007f62	      7494	option.c	FUNCTION_40	ELSE_156	IF_280
0x4007f57	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7495	option.c	FUNCTION_40	ELSE_156	IF_280
0x4007f62	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7496	option.c	FUNCTION_40	ELSE_156	IF_281
0x4007f6d	            0x7510	                           jne 0x4007f7f	      7496	option.c	FUNCTION_40	ELSE_156	IF_281
0x4007f6f	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7497	option.c	FUNCTION_40	ELSE_156	IF_281
0x4007f7a	      0xe992000000	                           jmp 0x4008011	      7497	option.c	FUNCTION_40	ELSE_156	IF_281
0x4007f7f	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7498	option.c	FUNCTION_40	ELSE_156	ELSE_157	IF_282
0x4007f8a	            0x750d	                           jne 0x4007f99	      7498	option.c	FUNCTION_40	ELSE_156	ELSE_157	IF_282
0x4007f8c	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7499	option.c	FUNCTION_40	ELSE_156	ELSE_157	IF_282
0x4007f97	            0xeb78	                           jmp 0x4008011	      7499	option.c	FUNCTION_40	ELSE_156	ELSE_157	IF_282
0x4007f99	    0x488b05000000	            mov rax, qword [0x04007fa0] 	      7500	option.c	FUNCTION_40	ELSE_156	ELSE_158	IF_283
0x4007fa0	    0x4805a0140000	                         add rax, 0x14a0	      7500	option.c	FUNCTION_40	ELSE_156	ELSE_158	IF_283
0x4007fa6	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7500	option.c	FUNCTION_40	ELSE_156	ELSE_158	IF_283
0x4007fad	            0x750d	                           jne 0x4007fbc	      7500	option.c	FUNCTION_40	ELSE_156	ELSE_158	IF_283
0x4007faf	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7501	option.c	FUNCTION_40	ELSE_156	ELSE_158	IF_283
0x4007fba	            0xeb55	                           jmp 0x4008011	      7501	option.c	FUNCTION_40	ELSE_156	ELSE_158	IF_283
0x4007fbc	    0x488b05000000	            mov rax, qword [0x04007fc3] 	      7503	option.c	FUNCTION_40	ELSE_156	ELSE_159	IF_284
0x4007fc3	    0x4805a0020000	                          add rax, 0x2a0	      7503	option.c	FUNCTION_40	ELSE_156	ELSE_159	IF_284
0x4007fc9	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7503	option.c	FUNCTION_40	ELSE_156	ELSE_159	IF_284
0x4007fd0	            0x750d	                           jne 0x4007fdf	      7503	option.c	FUNCTION_40	ELSE_156	ELSE_159	IF_284
0x4007fd2	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7504	option.c	FUNCTION_40	ELSE_156	ELSE_159	IF_284
0x4007fdd	            0xeb32	                           jmp 0x4008011	      7504	option.c	FUNCTION_40	ELSE_156	ELSE_159	IF_284
0x4007fdf	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7506	option.c	FUNCTION_40	ELSE_156	ELSE_160	IF_285
0x4007fea	            0x750d	                           jne 0x4007ff9	      7506	option.c	FUNCTION_40	ELSE_156	ELSE_160	IF_285
0x4007fec	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7509	option.c	FUNCTION_40	ELSE_156	ELSE_160	IF_285
0x4007ff7	            0xeb18	                           jmp 0x4008011	      7509	option.c	FUNCTION_40	ELSE_156	ELSE_160	IF_285
0x4007ff9	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7516	option.c	FUNCTION_40	ELSE_156	ELSE_161	IF_287
0x4008004	            0x750b	                           jne 0x4008011	      7516	option.c	FUNCTION_40	ELSE_156	ELSE_161	IF_287
0x4008006	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7517	option.c	FUNCTION_40	ELSE_156	ELSE_161	IF_287
0x4008011	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7519	option.c	FUNCTION_40	ELSE_156	IF_288
0x4008018	          0x4885c0	                           test rax, rax	      7519	option.c	FUNCTION_40	ELSE_156	IF_288
0x400801b	     0xf849b000000	                            je 0x40080bc	      7519	option.c	FUNCTION_40	ELSE_156	IF_288
0x4008021	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x4008028	          0x488b00	                    mov rax, qword [rax]	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x400802b	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x4008032	            0xeb5c	                           jmp 0x4008090	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x4008034	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x400803b	           0xfb600	                   movzx eax, byte [rax]	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x400803e	           0xfb6d0	                           movzx edx, al	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x4008041	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x4008048	            0x89d6	                            mov esi, edx	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x400804a	          0x4889c7	                            mov rdi, rax	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x400804d	      0xe800000000	                          call 0x4008052	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x4008052	          0x4885c0	                           test rax, rax	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x4008055	            0x7527	                           jne 0x400807e	      7522	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_242
0x4008057	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x400805e	           0xfb600	                   movzx eax, byte [rax]	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x4008061	           0xfb6d0	                           movzx edx, al	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x4008064	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x400806b	            0x89d6	                            mov esi, edx	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x400806d	          0x4889c7	                            mov rdi, rax	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x4008070	      0xe803bbffff	                   call sym.illegal_char	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x4008075	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7524	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289	CALL_243
0x400807c	            0xeb3e	                           jmp 0x40080bc	      7525	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9	IF_289
0x400807e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x4008085	        0x4883c001	                              add rax, 1	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x4008089	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x4008090	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x4008097	           0xfb600	                   movzx eax, byte [rax]	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x400809a	            0x84c0	                             test al, al	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x400809c	            0x7596	                           jne 0x4008034	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x400809e	            0xeb1c	                           jmp 0x40080bc	      7521	option.c	FUNCTION_40	ELSE_156	IF_288	FOR_9
0x40080a0	              0x90	                                     nop	      6203	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_25
0x40080a1	            0xeb19	                           jmp 0x40080bc	      6203	option.c	FUNCTION_40	ELSE_13	IF_23	FOR_1	IF_25
0x40080a3	              0x90	                                     nop	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40080a4	            0xeb16	                           jmp 0x40080bc	      6254	option.c	FUNCTION_40	ELSE_19	IF_37	IF_38	CALL_27
0x40080a6	              0x90	                                     nop	      6387	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63
0x40080a7	            0xeb13	                           jmp 0x40080bc	      6387	option.c	FUNCTION_40	ELSE_30	IF_54	IF_63
0x40080a9	              0x90	                                     nop	      6626	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x40080aa	            0xeb10	                           jmp 0x40080bc	      6626	option.c	FUNCTION_40	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x40080ac	              0x90	                                     nop	      6641	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x40080ad	            0xeb0d	                           jmp 0x40080bc	      6641	option.c	FUNCTION_40	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x40080af	              0x90	                                     nop	      6667	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_116
0x40080b0	            0xeb0a	                           jmp 0x40080bc	      6667	option.c	FUNCTION_40	ELSE_56	IF_112	FOR_5	IF_116
0x40080b2	              0x90	                                     nop	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x40080b3	            0xeb07	                           jmp 0x40080bc	      6814	option.c	FUNCTION_40	ELSE_70	IF_135	IF_142
0x40080b5	              0x90	                                     nop	      7139	option.c	FUNCTION_40	ELSE_112	IF_204
0x40080b6	            0xeb04	                           jmp 0x40080bc	      7139	option.c	FUNCTION_40	ELSE_112	IF_204
0x40080b8	              0x90	                                     nop	      7173	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_212
0x40080b9	            0xeb01	                           jmp 0x40080bc	      7173	option.c	FUNCTION_40	ELSE_115	IF_211	FOR_8	IF_212
0x40080bb	              0x90	                                     nop	      7426	option.c	FUNCTION_40	ELSE_146	IF_264	IF_265	WHILE_8	ELSE_147	IF_267
0x40080bc	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      7533	option.c	FUNCTION_40	IF_290
0x40080c4	            0x7455	                            je 0x400811b	      7533	option.c	FUNCTION_40	IF_290
0x40080c6	    0x83bd98feffff	              cmp dword [rbp - 0x168], 0	      7535	option.c	FUNCTION_40	IF_290	IF_291
0x40080cd	            0x7412	                            je 0x40080e1	      7535	option.c	FUNCTION_40	IF_290	IF_291
0x40080cf	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7536	option.c	FUNCTION_40	IF_290	CALL_244
0x40080d6	          0x488b00	                    mov rax, qword [rax]	      7536	option.c	FUNCTION_40	IF_290	CALL_244
0x40080d9	          0x4889c7	                            mov rdi, rax	      7536	option.c	FUNCTION_40	IF_290	CALL_244
0x40080dc	      0xe800000000	                          call 0x40080e1	      7536	option.c	FUNCTION_40	IF_290	CALL_244
0x40080e1	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7537	option.c	FUNCTION_40	IF_290
0x40080e8	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      7537	option.c	FUNCTION_40	IF_290
0x40080ef	          0x488910	                    mov qword [rax], rdx	      7537	option.c	FUNCTION_40	IF_290
0x40080f2	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 0	      7541	option.c	FUNCTION_40	IF_290	IF_292
0x40080f9	            0x7405	                            je 0x4008100	      7541	option.c	FUNCTION_40	IF_290	IF_292
0x40080fb	      0xe800000000	                          call 0x4008100	      7542	option.c	FUNCTION_40	IF_290	CALL_245
0x4008100	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7543	option.c	FUNCTION_40	IF_290	IF_293
0x400810b	     0xf8531030000	                           jne 0x4008442	      7543	option.c	FUNCTION_40	IF_290	IF_293
0x4008111	      0xe800000000	                          call 0x4008116	      7544	option.c	FUNCTION_40	IF_290	CALL_246
0x4008116	      0xe927030000	                           jmp 0x4008442	      7544	option.c	FUNCTION_40	IF_290	CALL_246
0x400811b	    0x8b1500000000	            mov edx, dword [0x04008121] 	      7550	option.c	FUNCTION_40	ELSE_162	CALL_247
0x4008121	    0x8b8d7cfeffff	            mov ecx, dword [rbp - 0x184]	      7550	option.c	FUNCTION_40	ELSE_162	CALL_247
0x4008127	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7550	option.c	FUNCTION_40	ELSE_162	CALL_247
0x400812d	            0x89ce	                            mov esi, ecx	      7550	option.c	FUNCTION_40	ELSE_162	CALL_247
0x400812f	            0x89c7	                            mov edi, eax	      7550	option.c	FUNCTION_40	ELSE_162	CALL_247
0x4008131	      0xe8d9100000	        call sym.set_option_scriptID_idx	      7550	option.c	FUNCTION_40	ELSE_162	CALL_247
0x4008136	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      7557	option.c	FUNCTION_40	ELSE_162	IF_294
0x400813e	            0x740f	                            je 0x400814f	      7557	option.c	FUNCTION_40	ELSE_162	IF_294
0x4008140	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7558	option.c	FUNCTION_40	ELSE_162	CALL_248
0x4008147	          0x4889c7	                            mov rdi, rax	      7558	option.c	FUNCTION_40	ELSE_162	CALL_248
0x400814a	      0xe800000000	                          call 0x400814f	      7558	option.c	FUNCTION_40	ELSE_162	CALL_248
0x400814f	    0x83bd98feffff	              cmp dword [rbp - 0x168], 0	      7559	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008156	            0x7433	                            je 0x400818b	      7559	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008158	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x400815e	            0x4898	                                    cdqe	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008160	        0x48c1e006	                              shl rax, 6	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008164	    0x480500000000	                              add rax, 0	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x400816a	          0x488b00	                    mov rax, qword [rax]	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x400816d	        0x4883c808	                               or rax, 8	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008171	          0x4889c2	                            mov rdx, rax	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008174	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x400817a	            0x4898	                                    cdqe	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x400817c	        0x48c1e006	                              shl rax, 6	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008180	    0x480500000000	                              add rax, 0	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008186	          0x488910	                    mov qword [rax], rdx	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x4008189	            0xeb31	                           jmp 0x40081bc	      7560	option.c	FUNCTION_40	ELSE_162	IF_295
0x400818b	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x4008191	            0x4898	                                    cdqe	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x4008193	        0x48c1e006	                              shl rax, 6	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x4008197	    0x480500000000	                              add rax, 0	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x400819d	          0x488b00	                    mov rax, qword [rax]	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081a0	        0x4883e0f7	             and rax, 0xfffffffffffffff7	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081a4	          0x4889c2	                            mov rdx, rax	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081a7	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081ad	            0x4898	                                    cdqe	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081af	        0x48c1e006	                              shl rax, 6	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081b3	    0x480500000000	                              add rax, 0	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081b9	          0x488910	                    mov qword [rax], rdx	      7562	option.c	FUNCTION_40	ELSE_162	ELSE_163
0x40081bc	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      7564	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081c2	          0x83e006	                              and eax, 6	      7564	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081c5	            0x85c0	                           test eax, eax	      7564	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081c7	            0x7568	                           jne 0x4008231	      7564	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081c9	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081cf	            0x4898	                                    cdqe	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081d1	        0x48c1e006	                              shl rax, 6	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081d5	    0x480500000000	                              add rax, 0	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081db	            0x8b00	                    mov eax, dword [rax]	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081dd	      0x2500100000	                         and eax, 0x1000	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081e2	            0x85c0	                           test eax, eax	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081e4	            0x744b	                            je 0x4008231	      7565	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x40081e6	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x40081ec	            0x4898	                                    cdqe	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x40081ee	        0x48c1e006	                              shl rax, 6	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x40081f2	    0x480500000000	                              add rax, 0	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x40081f8	      0xbe04000000	                              mov esi, 4	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x40081fd	          0x4889c7	                            mov rdi, rax	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x4008200	      0xe831500000	                 call sym.get_varp_scope	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x4008205	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7569	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_249
0x400820c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7570	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_250
0x4008213	          0x488b00	                    mov rax, qword [rax]	      7570	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_250
0x4008216	          0x4889c7	                            mov rdi, rax	      7570	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_250
0x4008219	      0xe800000000	                          call 0x400821e	      7570	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296	CALL_250
0x400821e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7571	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x4008225	    0x488b15000000	            mov rdx, qword [0x0400822c] 	      7571	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x400822c	          0x488910	                    mov qword [rax], rdx	      7571	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x400822f	            0xeb2d	                           jmp 0x400825e	      7571	option.c	FUNCTION_40	ELSE_162	ELSE_163	IF_296
0x4008231	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      7575	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x4008237	          0x83e004	                              and eax, 4	      7575	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x400823a	            0x85c0	                           test eax, eax	      7575	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x400823c	            0x7520	                           jne 0x400825e	      7575	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x400823e	    0x83bd7cfeffff	              cmp dword [rbp - 0x184], 2	      7575	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x4008245	            0x7417	                            je 0x400825e	      7575	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x4008247	    0x488b9590feff	            mov rdx, qword [rbp - 0x170]	      7576	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x400824e	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7576	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x4008254	          0x4889d6	                            mov rsi, rdx	      7576	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x4008257	            0x89c7	                            mov edi, eax	      7576	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x4008259	      0xe80dc9ffff	       call sym.set_string_option_global	      7576	option.c	FUNCTION_40	ELSE_162	ELSE_164	IF_297
0x400825e	    0x488b05000000	            mov rax, qword [0x04008265] 	      7583	option.c	FUNCTION_40	ELSE_162	IF_298
0x4008265	    0x4805a0150000	                         add rax, 0x15a0	      7583	option.c	FUNCTION_40	ELSE_162	IF_298
0x400826b	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7583	option.c	FUNCTION_40	ELSE_162	IF_298
0x4008272	            0x753d	                           jne 0x40082b1	      7583	option.c	FUNCTION_40	ELSE_162	IF_298
0x4008274	    0x488b0d000000	            mov rcx, qword [0x0400827b] 	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x400827b	    0x488b05000000	            mov rax, qword [0x04008282] 	      7586	option.c	FUNCTION_40	ELSE_162	IF_298
0x4008282	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x4008289	    0x488b05000000	            mov rax, qword [0x04008290] 	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x4008290	    0x488b80a01500	          mov rax, qword [rax + 0x15a0] 	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x4008297	          0x4989c8	                             mov r8, rcx	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x400829a	      0xb901000000	                              mov ecx, 1	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x400829f	          0x4889c6	                            mov rsi, rax	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x40082a2	      0xbf4c000000	                           mov edi, 0x4c	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x40082a7	      0xe800000000	                          call 0x40082ac	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x40082ac	      0xe98f000000	                           jmp 0x4008340	      7585	option.c	FUNCTION_40	ELSE_162	IF_298	CALL_252
0x40082b1	    0x488b05000000	            mov rax, qword [0x040082b8] 	      7589	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299
0x40082b8	    0x480598140000	                         add rax, 0x1498	      7589	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299
0x40082be	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7589	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299
0x40082c5	            0x7579	                           jne 0x4008340	      7589	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299
0x40082c7	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      7594	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082cd	          0x83e008	                              and eax, 8	      7594	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082d0	            0x85c0	                           test eax, eax	      7594	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082d2	            0x7409	                            je 0x40082dd	      7594	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082d4	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      7594	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082db	            0x7463	                            je 0x4008340	      7594	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082dd	    0xc70500000000	               mov dword [0x040082e7], 1	      7596	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082e7	    0x488b0d000000	            mov rcx, qword [0x040082ee] 	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x40082ee	    0x488b05000000	            mov rax, qword [0x040082f5] 	      7598	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300
0x40082f5	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x40082fc	    0x488b05000000	            mov rax, qword [0x04008303] 	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x4008303	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x400830a	          0x4989c8	                             mov r8, rcx	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x400830d	      0xb901000000	                              mov ecx, 1	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x4008312	          0x4889c6	                            mov rsi, rax	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x4008315	      0xbf2c000000	                           mov edi, 0x2c	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x400831a	      0xe800000000	                          call 0x400831f	      7597	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	CALL_253
0x400831f	    0x488b05000000	            mov rax, qword [0x04008326] 	      7600	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	IF_301
0x4008326	    0x480598140000	                         add rax, 0x1498	      7600	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	IF_301
0x400832c	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7600	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	IF_301
0x4008333	            0x740b	                            je 0x4008340	      7600	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	IF_301
0x4008335	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      7601	option.c	FUNCTION_40	ELSE_162	ELSE_165	IF_299	IF_300	IF_301
0x4008340	    0x488b05000000	            mov rax, qword [0x04008347] 	      7605	option.c	FUNCTION_40	ELSE_162	IF_302
0x4008347	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7605	option.c	FUNCTION_40	ELSE_162	IF_302
0x400834b	    0x480580040000	                          add rax, 0x480	      7605	option.c	FUNCTION_40	ELSE_162	IF_302
0x4008351	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	      7605	option.c	FUNCTION_40	ELSE_162	IF_302
0x4008358	     0xf85e4000000	                           jne 0x4008442	      7605	option.c	FUNCTION_40	ELSE_162	IF_302
0x400835e	    0x488b05000000	            mov rax, qword [0x04008365] 	      7608	option.c	FUNCTION_40	ELSE_162	IF_302
0x4008365	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7608	option.c	FUNCTION_40	ELSE_162	IF_302
0x4008369	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      7608	option.c	FUNCTION_40	ELSE_162	IF_302
0x4008370	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      7608	option.c	FUNCTION_40	ELSE_162	IF_302
0x4008377	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7611	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303	CALL_254
0x400837e	      0xba04000000	                              mov edx, 4	      7611	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303	CALL_254
0x4008383	      0xbe00000000	                              mov esi, 0	      7611	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303	CALL_254
0x4008388	          0x4889c7	                            mov rdi, rax	      7611	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303	CALL_254
0x400838b	      0xe800000000	                          call 0x4008390	      7611	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303	CALL_254
0x4008390	            0x85c0	                           test eax, eax	      7611	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303	CALL_254
0x4008392	            0x7508	                           jne 0x400839c	      7611	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303	CALL_254
0x4008394	    0x48838510ffff	               add qword [rbp - 0xf0], 4	      7612	option.c	FUNCTION_40	ELSE_162	IF_302	IF_303
0x400839c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083a3	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083aa	            0xeb30	                           jmp 0x40083dc	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083ac	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083b3	           0xfb600	                   movzx eax, byte [rax]	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083b6	           0xfb6c0	                           movzx eax, al	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083b9	            0x89c6	                            mov esi, eax	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083bb	      0xbf00000000	                              mov edi, 0	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083c0	      0xe800000000	                          call 0x40083c5	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083c5	          0x4885c0	                           test rax, rax	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083c8	            0x7522	                           jne 0x40083ec	      7621	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304	CALL_255
0x40083ca	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083d1	        0x4883c001	                              add rax, 1	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083d5	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083dc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083e3	           0xfb600	                   movzx eax, byte [rax]	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083e6	            0x84c0	                             test al, al	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083e8	            0x75c2	                           jne 0x40083ac	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083ea	            0xeb01	                           jmp 0x40083ed	      7620	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10
0x40083ec	              0x90	                                     nop	      7622	option.c	FUNCTION_40	ELSE_162	IF_302	FOR_10	IF_304
0x40083ed	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x40083f4	          0x4889c2	                            mov rdx, rax	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x40083f7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x40083fe	          0x4829c2	                            sub rdx, rax	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008401	          0x4889d0	                            mov rax, rdx	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008404	            0x89c1	                            mov ecx, eax	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008406	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x400840d	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008414	          0x4989d0	                             mov r8, rdx	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008417	      0xba00000000	                              mov edx, 0	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x400841c	      0xbec8000000	                           mov esi, 0xc8	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008421	          0x4889c7	                            mov rdi, rax	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008424	      0xb800000000	                              mov eax, 0	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x4008429	      0xe800000000	                          call 0x400842e	      7623	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_256
0x400842e	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      7624	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_257
0x4008435	      0xbe01000000	                              mov esi, 1	      7624	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_257
0x400843a	          0x4889c7	                            mov rdi, rax	      7624	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_257
0x400843d	      0xe800000000	                          call 0x4008442	      7624	option.c	FUNCTION_40	ELSE_162	IF_302	CALL_257
0x4008442	    0x4881bd90feff	              cmp qword [rbp - 0x170], 0	      7630	option.c	FUNCTION_40	IF_305
0x400844d	            0x751f	                           jne 0x400846e	      7630	option.c	FUNCTION_40	IF_305
0x400844f	    0x488b05000000	            mov rax, qword [0x04008456] 	      7633	option.c	FUNCTION_40	IF_305	IF_306
0x4008456	           0xfb600	                   movzx eax, byte [rax]	      7633	option.c	FUNCTION_40	IF_305	IF_306
0x4008459	            0x84c0	                             test al, al	      7633	option.c	FUNCTION_40	IF_305	IF_306
0x400845b	            0x750c	                           jne 0x4008469	      7633	option.c	FUNCTION_40	IF_305	IF_306
0x400845d	      0xbf00000000	                              mov edi, 0	      7634	option.c	FUNCTION_40	IF_305	CALL_258
0x4008462	      0xe800000000	                          call 0x4008467	      7634	option.c	FUNCTION_40	IF_305	CALL_258
0x4008467	            0xeb05	                           jmp 0x400846e	      7634	option.c	FUNCTION_40	IF_305	CALL_258
0x4008469	      0xe800000000	                          call 0x400846e	      7637	option.c	FUNCTION_40	IF_305	CALL_259
0x400846e	    0x488b05000000	            mov rax, qword [0x04008475] 	      7641	option.c	FUNCTION_40	IF_307
0x4008475	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7641	option.c	FUNCTION_40	IF_307
0x4008478	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      7641	option.c	FUNCTION_40	IF_307
0x400847d	            0x742d	                            je 0x40084ac	      7641	option.c	FUNCTION_40	IF_307
0x400847f	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7642	option.c	FUNCTION_40	IF_307
0x4008485	            0x4898	                                    cdqe	      7642	option.c	FUNCTION_40	IF_307
0x4008487	        0x48c1e006	                              shl rax, 6	      7642	option.c	FUNCTION_40	IF_307
0x400848b	    0x480500000000	                              add rax, 0	      7642	option.c	FUNCTION_40	IF_307
0x4008491	          0x488b00	                    mov rax, qword [rax]	      7642	option.c	FUNCTION_40	IF_307
0x4008494	      0x2500600004	                      and eax, 0x4006000	      7642	option.c	FUNCTION_40	IF_307
0x4008499	          0x4885c0	                           test rax, rax	      7642	option.c	FUNCTION_40	IF_307
0x400849c	            0x740e	                            je 0x40084ac	      7642	option.c	FUNCTION_40	IF_307
0x400849e	    0x488b05000000	            mov rax, qword [0x040084a5] 	      7643	option.c	FUNCTION_40	IF_307
0x40084a5	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7643	option.c	FUNCTION_40	IF_307
0x40084ac	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	      7647	option.c	FUNCTION_40	IF_308
0x40084b3	            0x740a	                            je 0x40084bf	      7647	option.c	FUNCTION_40	IF_308
0x40084b5	    0x8b0500000000	            mov eax, dword [0x040084bb] 	      7647	option.c	FUNCTION_40	IF_308
0x40084bb	            0x85c0	                           test eax, eax	      7647	option.c	FUNCTION_40	IF_308
0x40084bd	            0x741d	                            je 0x40084dc	      7647	option.c	FUNCTION_40	IF_308
0x40084bf	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      7649	option.c	FUNCTION_40	CALL_260
0x40084c5	            0x4898	                                    cdqe	      7649	option.c	FUNCTION_40	CALL_260
0x40084c7	        0x48c1e006	                              shl rax, 6	      7649	option.c	FUNCTION_40	CALL_260
0x40084cb	    0x480500000000	                              add rax, 0	      7649	option.c	FUNCTION_40	CALL_260
0x40084d1	          0x488b00	                    mov rax, qword [rax]	      7649	option.c	FUNCTION_40	CALL_260
0x40084d4	          0x4889c7	                            mov rdi, rax	      7649	option.c	FUNCTION_40	CALL_260
0x40084d7	      0xe8e92f0000	                   call sym.check_redraw	      7649	option.c	FUNCTION_40	CALL_260
0x40084dc	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      7661	option.c	FUNCTION_40
0x40084e3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      7662	option.c	FUNCTION_40
0x40084e7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7662	option.c	FUNCTION_40
0x40084f0	            0x7405	                            je 0x40084f7	      7662	option.c	FUNCTION_40
0x40084f2	      0xe800000000	                          call 0x40084f7	      7662	option.c	FUNCTION_40
0x40084f7	    0x4881c4800100	                          add rsp, 0x180	      7662	option.c	FUNCTION_40
0x40084fe	              0x5b	                                 pop rbx	      7662	option.c	FUNCTION_40
0x40084ff	            0x415c	                                 pop r12	      7662	option.c	FUNCTION_40
0x4008501	              0x5d	                                 pop rbp	      7662	option.c	FUNCTION_40
0x4008502	              0xc3	                                     ret	      7662	option.c	FUNCTION_40
set_bool_option	ELSE,45:IF,88:SWITCH,0:CALL,87:DO,0:WHILE,0:functions,1:FOR,0	839
0x40092e0	              0x55	                                push rbp	      8130	option.c	FUNCTION_49
0x40092e1	          0x4889e5	                            mov rbp, rsp	      8130	option.c	FUNCTION_49
0x40092e4	              0x53	                                push rbx	      8130	option.c	FUNCTION_49
0x40092e5	    0x4881eca80000	                           sub rsp, 0xa8	      8130	option.c	FUNCTION_49
0x40092ec	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	      8130	option.c	FUNCTION_49
0x40092f2	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      8130	option.c	FUNCTION_49
0x40092f9	    0x899568ffffff	             mov dword [rbp - 0x98], edx	      8130	option.c	FUNCTION_49
0x40092ff	    0x898d5cffffff	             mov dword [rbp - 0xa4], ecx	      8130	option.c	FUNCTION_49
0x4009305	    0x64488b042528	                mov rax, qword fs:[0x28]	      8130	option.c	FUNCTION_49
0x400930e	        0x488945e8	             mov qword [rbp - 0x18], rax	      8130	option.c	FUNCTION_49
0x4009312	            0x31c0	                            xor eax, eax	      8130	option.c	FUNCTION_49
0x4009314	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8131	option.c	FUNCTION_49
0x400931b	            0x8b00	                    mov eax, dword [rax]	      8131	option.c	FUNCTION_49
0x400931d	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      8131	option.c	FUNCTION_49
0x4009323	    0x8b0500000000	            mov eax, dword [0x04009329] 	      8134	option.c	FUNCTION_49	IF_1
0x4009329	            0x85c0	                           test eax, eax	      8134	option.c	FUNCTION_49	IF_1
0x400932b	            0x750a	                           jne 0x4009337	      8134	option.c	FUNCTION_49	IF_1
0x400932d	    0x8b0500000000	            mov eax, dword [0x04009333] 	      8136	option.c	FUNCTION_49	IF_1
0x4009333	            0x85c0	                           test eax, eax	      8136	option.c	FUNCTION_49	IF_1
0x4009335	            0x7429	                            je 0x4009360	      8136	option.c	FUNCTION_49	IF_1
0x4009337	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8138	option.c	FUNCTION_49	IF_1
0x400933d	            0x4898	                                    cdqe	      8138	option.c	FUNCTION_49	IF_1
0x400933f	        0x48c1e006	                              shl rax, 6	      8138	option.c	FUNCTION_49	IF_1
0x4009343	    0x480500000000	                              add rax, 0	      8138	option.c	FUNCTION_49	IF_1
0x4009349	          0x488b00	                    mov rax, qword [rax]	      8138	option.c	FUNCTION_49	IF_1
0x400934c	      0x2500000800	                        and eax, 0x80000	      8138	option.c	FUNCTION_49	IF_1
0x4009351	          0x4885c0	                           test rax, rax	      8138	option.c	FUNCTION_49	IF_1
0x4009354	            0x740a	                            je 0x4009360	      8138	option.c	FUNCTION_49	IF_1
0x4009356	      0xb800000000	                              mov eax, 0	      8139	option.c	FUNCTION_49	IF_1
0x400935b	      0xe93b0f0000	                           jmp 0x400a29b	      8139	option.c	FUNCTION_49	IF_1
0x4009360	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8141	option.c	FUNCTION_49
0x4009367	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      8141	option.c	FUNCTION_49
0x400936d	            0x8910	                    mov dword [rax], edx	      8141	option.c	FUNCTION_49
0x400936f	    0x8b1500000000	            mov edx, dword [0x04009375] 	      8144	option.c	FUNCTION_49	CALL_1
0x4009375	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	      8144	option.c	FUNCTION_49	CALL_1
0x400937b	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8144	option.c	FUNCTION_49	CALL_1
0x4009381	            0x89ce	                            mov esi, ecx	      8144	option.c	FUNCTION_49	CALL_1
0x4009383	            0x89c7	                            mov edi, eax	      8144	option.c	FUNCTION_49	CALL_1
0x4009385	      0xe885feffff	        call sym.set_option_scriptID_idx	      8144	option.c	FUNCTION_49	CALL_1
0x400938a	    0xc70500000000	               mov dword [0x04009394], 1	      8148	option.c	FUNCTION_49
0x4009394	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8152	option.c	FUNCTION_49	IF_2
0x400939a	          0x83e006	                              and eax, 6	      8152	option.c	FUNCTION_49	IF_2
0x400939d	            0x85c0	                           test eax, eax	      8152	option.c	FUNCTION_49	IF_2
0x400939f	            0x752a	                           jne 0x40093cb	      8152	option.c	FUNCTION_49	IF_2
0x40093a1	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8153	option.c	FUNCTION_49	CALL_2
0x40093a7	            0x4898	                                    cdqe	      8153	option.c	FUNCTION_49	CALL_2
0x40093a9	        0x48c1e006	                              shl rax, 6	      8153	option.c	FUNCTION_49	CALL_2
0x40093ad	    0x480500000000	                              add rax, 0	      8153	option.c	FUNCTION_49	CALL_2
0x40093b3	      0xbe02000000	                              mov esi, 2	      8153	option.c	FUNCTION_49	CALL_2
0x40093b8	          0x4889c7	                            mov rdi, rax	      8153	option.c	FUNCTION_49	CALL_2
0x40093bb	      0xe8763e0000	                 call sym.get_varp_scope	      8153	option.c	FUNCTION_49	CALL_2
0x40093c0	          0x4889c2	                            mov rdx, rax	      8153	option.c	FUNCTION_49	CALL_2
0x40093c3	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8153	option.c	FUNCTION_49	CALL_2
0x40093c9	            0x8902	                    mov dword [rdx], eax	      8153	option.c	FUNCTION_49	CALL_2
0x40093cb	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8160	option.c	FUNCTION_49	IF_3
0x40093d6	            0x7505	                           jne 0x40093dd	      8160	option.c	FUNCTION_49	IF_3
0x40093d8	      0xe8537e0000	                 call sym.compatible_set	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x40093dd	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8166	option.c	FUNCTION_49	IF_4
0x40093e8	            0x7519	                           jne 0x4009403	      8166	option.c	FUNCTION_49	IF_4
0x40093ea	    0x8b0500000000	            mov eax, dword [0x040093f0] 	      8168	option.c	FUNCTION_49	IF_4
0x40093f0	            0x85c0	                           test eax, eax	      8168	option.c	FUNCTION_49	IF_4
0x40093f2	           0xf94c0	                                 sete al	      8168	option.c	FUNCTION_49	IF_4
0x40093f5	           0xfb6c0	                           movzx eax, al	      8168	option.c	FUNCTION_49	IF_4
0x40093f8	    0x890500000000	            mov dword [0x040093fe], eax 	      8168	option.c	FUNCTION_49	IF_4
0x40093fe	      0xe9920a0000	                           jmp 0x4009e95	      8168	option.c	FUNCTION_49	IF_4
0x4009403	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x400940e	            0x7519	                           jne 0x4009429	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x4009410	    0x8b0500000000	            mov eax, dword [0x04009416] 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x4009416	            0x85c0	                           test eax, eax	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x4009418	           0xf94c0	                                 sete al	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400941b	           0xfb6c0	                           movzx eax, al	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400941e	    0x890500000000	            mov dword [0x04009424], eax 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x4009424	      0xe96c0a0000	                           jmp 0x4009e95	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x4009429	    0x488b05000000	            mov rax, qword [0x04009430] 	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x4009430	    0x480550160000	                         add rax, 0x1650	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x4009436	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400943d	            0x7411	                            je 0x4009450	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400943f	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400944a	     0xf85d3000000	                           jne 0x4009523	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x4009450	    0x488b05000000	            mov rax, qword [0x04009457] 	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009457	    0x8b8050160000	          mov eax, dword [rax + 0x1650] 	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400945d	            0x85c0	                           test eax, eax	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400945f	            0x750e	                           jne 0x400946f	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009461	    0x8b0500000000	            mov eax, dword [0x04009467] 	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009467	            0x85c0	                           test eax, eax	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009469	     0xf84250a0000	                            je 0x4009e94	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400946f	    0x488b05000000	            mov rax, qword [0x04009476] 	      8184	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009476	        0x48894598	             mov qword [rbp - 0x68], rax	      8184	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400947a	    0x488b05000000	            mov rax, qword [0x04009481] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009481	    0x488905000000	            mov qword [0x04009488], rax 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009488	            0xeb79	                           jmp 0x4009503	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400948a	    0x488b05000000	            mov rax, qword [0x04009491] 	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x4009491	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x4009495	            0x7416	                            je 0x40094ad	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x4009497	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400949d	          0x83e002	                              and eax, 2	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x40094a0	            0x85c0	                           test eax, eax	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x40094a2	            0x7509	                           jne 0x40094ad	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x40094a4	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x40094ab	            0x7544	                           jne 0x40094f1	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x40094ad	      0xe800000000	                          call 0x40094b2	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x40094b2	            0x85c0	                           test eax, eax	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x40094b4	            0x753b	                           jne 0x40094f1	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x40094b6	    0x488b05000000	            mov rax, qword [0x040094bd] 	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x40094bd	        0x488b4008	                mov rax, qword [rax + 8]	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x40094c1	          0x4885c0	                           test rax, rax	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x40094c4	            0x742b	                            je 0x40094f1	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x40094c6	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x40094ca	          0x4889c7	                            mov rdi, rax	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x40094cd	      0xe800000000	                          call 0x40094d2	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x40094d2	    0x488b05000000	            mov rax, qword [0x040094d9] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x40094d9	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x40094e0	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x40094e4	          0x4889c6	                            mov rsi, rax	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x40094e7	      0xbf00000000	                              mov edi, 0	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x40094ec	      0xe800000000	                          call 0x40094f1	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x40094f1	    0x488b05000000	            mov rax, qword [0x040094f8] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x40094f8	        0x488b4068	            mov rax, qword [rax + 0x68] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x40094fc	    0x488905000000	            mov qword [0x04009503], rax 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009503	    0x488b05000000	            mov rax, qword [0x0400950a] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400950a	          0x4885c0	                           test rax, rax	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400950d	     0xf8577ffffff	                           jne 0x400948a	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009513	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009517	    0x488905000000	            mov qword [0x0400951e], rax 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400951e	      0xe971090000	                           jmp 0x4009e94	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009523	    0x488b05000000	            mov rax, qword [0x0400952a] 	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400952a	    0x480560150000	                         add rax, 0x1560	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x4009530	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x4009537	            0x7554	                           jne 0x400958d	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x4009539	    0x488b05000000	            mov rax, qword [0x04009540] 	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009540	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009546	            0x85c0	                           test eax, eax	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009548	            0x7517	                           jne 0x4009561	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400954a	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009550	          0x83e004	                              and eax, 4	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009553	            0x85c0	                           test eax, eax	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009555	            0x750a	                           jne 0x4009561	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009557	    0xc70500000000	               mov dword [0x04009561], 0	      8209	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x4009561	    0x488b05000000	            mov rax, qword [0x04009568] 	      8212	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x4009568	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      8212	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x400956e	            0x85c0	                           test eax, eax	      8212	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x4009570	            0x7411	                            je 0x4009583	      8212	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x4009572	    0x488b05000000	            mov rax, qword [0x04009579] 	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x4009579	    0xc78054170000	            mov dword [rax + 0x1754], 0 	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x4009583	      0xe8f7b3ffff	                  call sym.redraw_titles	      8216	option.c	FUNCTION_49	ELSE_3	IF_8	CALL_4
0x4009588	      0xe908090000	                           jmp 0x4009e95	      8216	option.c	FUNCTION_49	ELSE_3	IF_8	CALL_4
0x400958d	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x4009598	            0x751d	                           jne 0x40095b7	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x400959a	    0x8b0500000000	            mov eax, dword [0x040095a0] 	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x40095a0	            0x85c0	                           test eax, eax	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x40095a2	     0xf85ed080000	                           jne 0x4009e95	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x40095a8	      0xbf00000000	                              mov edi, 0	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x40095ad	      0xe800000000	                          call 0x40095b2	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x40095b2	      0xe9de080000	                           jmp 0x4009e95	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x40095b7	    0x488b05000000	            mov rax, qword [0x040095be] 	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x40095be	    0x480540150000	                         add rax, 0x1540	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x40095c4	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x40095cb	            0x7578	                           jne 0x4009645	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x40095cd	    0x488b05000000	            mov rax, qword [0x040095d4] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095d4	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095da	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095dc	            0x745d	                            je 0x400963b	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095de	      0xe800000000	                          call 0x40095e3	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095e3	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095e5	            0x7539	                           jne 0x4009620	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095e7	    0x488b05000000	            mov rax, qword [0x040095ee] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095ee	          0x4889c7	                            mov rdi, rax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095f1	      0xe800000000	                          call 0x40095f6	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095f6	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095f8	            0x7441	                            je 0x400963b	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x40095fa	    0x488b05000000	            mov rax, qword [0x04009601] 	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x4009601	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x4009608	          0x4885c0	                           test rax, rax	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400960b	            0x742e	                            je 0x400963b	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400960d	    0x488b05000000	            mov rax, qword [0x04009614] 	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x4009614	          0x4889c7	                            mov rdi, rax	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x4009617	      0xe800000000	                          call 0x400961c	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400961c	            0x85c0	                           test eax, eax	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400961e	            0x751b	                           jne 0x400963b	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x4009620	    0x488b05000000	            mov rax, qword [0x04009627] 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x4009627	    0xc78040150000	            mov dword [rax + 0x1540], 0 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x4009631	      0xb800000000	                              mov eax, 0	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x4009636	      0xe9600c0000	                           jmp 0x400a29b	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400963b	      0xe83fb3ffff	                  call sym.redraw_titles	      8241	option.c	FUNCTION_49	ELSE_5	IF_13	CALL_10
0x4009640	      0xe950080000	                           jmp 0x4009e95	      8241	option.c	FUNCTION_49	ELSE_5	IF_13	CALL_10
0x4009645	    0x488b05000000	            mov rax, qword [0x0400964c] 	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400964c	    0x480570140000	                         add rax, 0x1470	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x4009652	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x4009659	            0x750a	                           jne 0x4009665	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400965b	      0xe81fb3ffff	                  call sym.redraw_titles	      8248	option.c	FUNCTION_49	ELSE_6	IF_15	CALL_11
0x4009660	      0xe930080000	                           jmp 0x4009e95	      8248	option.c	FUNCTION_49	ELSE_6	IF_15	CALL_11
0x4009665	    0x488b05000000	            mov rax, qword [0x0400966c] 	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400966c	    0x480574140000	                         add rax, 0x1474	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x4009672	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x4009679	            0x750a	                           jne 0x4009685	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400967b	      0xe8ffb2ffff	                  call sym.redraw_titles	      8253	option.c	FUNCTION_49	ELSE_7	IF_16	CALL_12
0x4009680	      0xe910080000	                           jmp 0x4009e95	      8253	option.c	FUNCTION_49	ELSE_7	IF_16	CALL_12
0x4009685	    0x488b05000000	            mov rax, qword [0x0400968c] 	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400968c	    0x48050c140000	                         add rax, 0x140c	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x4009692	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x4009699	            0x750a	                           jne 0x40096a5	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400969b	      0xe8dfb2ffff	                  call sym.redraw_titles	      8259	option.c	FUNCTION_49	ELSE_8	IF_17	CALL_13
0x40096a0	      0xe9f0070000	                           jmp 0x4009e95	      8259	option.c	FUNCTION_49	ELSE_8	IF_17	CALL_13
0x40096a5	    0x488b05000000	            mov rax, qword [0x040096ac] 	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x40096ac	    0x480508140000	                         add rax, 0x1408	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x40096b2	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x40096b9	            0x752c	                           jne 0x40096e7	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x40096bb	    0x488b05000000	            mov rax, qword [0x040096c2] 	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x40096c2	    0x8b8808140000	          mov ecx, dword [rax + 0x1408] 	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x40096c8	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x40096ce	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x40096d4	            0x89ce	                            mov esi, ecx	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x40096d6	            0x89c7	                            mov edi, eax	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x40096d8	      0xe800000000	                          call 0x40096dd	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x40096dd	      0xe89db2ffff	                  call sym.redraw_titles	      8269	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_15
0x40096e2	      0xe9ae070000	                           jmp 0x4009e95	      8269	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_15
0x40096e7	    0x488b05000000	            mov rax, qword [0x040096ee] 	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x40096ee	    0x480524140000	                         add rax, 0x1424	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x40096f4	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x40096fb	            0x754f	                           jne 0x400974c	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x40096fd	    0x488b05000000	            mov rax, qword [0x04009704] 	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x4009704	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400970a	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x4009710	            0x743a	                            je 0x400974c	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x4009712	    0x488b15000000	            mov rdx, qword [0x04009719] 	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009719	    0x488b05000000	            mov rax, qword [0x04009720] 	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009720	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009726	            0x85c0	                           test eax, eax	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009728	           0xf94c0	                                 sete al	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400972b	           0xfb6c0	                           movzx eax, al	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400972e	          0x4989d0	                             mov r8, rdx	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009731	      0xb901000000	                              mov ecx, 1	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009736	      0xba00000000	                              mov edx, 0	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400973b	      0xbe00000000	                              mov esi, 0	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009740	            0x89c7	                            mov edi, eax	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009742	      0xe800000000	                          call 0x4009747	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x4009747	      0xe949070000	                           jmp 0x4009e95	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400974c	    0x488b05000000	            mov rax, qword [0x04009753] 	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x4009753	    0x480590150000	                         add rax, 0x1590	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x4009759	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x4009760	            0x754a	                           jne 0x40097ac	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x4009762	    0x488b05000000	            mov rax, qword [0x04009769] 	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x4009769	    0x8b8090150000	          mov eax, dword [rax + 0x1590] 	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400976f	            0x85c0	                           test eax, eax	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x4009771	            0x7420	                            je 0x4009793	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x4009773	    0x488b05000000	            mov rax, qword [0x0400977a] 	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400977a	          0x4885c0	                           test rax, rax	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400977d	            0x7414	                            je 0x4009793	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400977f	    0x488b05000000	            mov rax, qword [0x04009786] 	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x4009786	          0x4889c7	                            mov rdi, rax	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x4009789	      0xe800000000	                          call 0x400978e	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400978e	      0xe902070000	                           jmp 0x4009e95	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x4009793	    0x488b05000000	            mov rax, qword [0x0400979a] 	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400979a	      0xbe01000000	                              mov esi, 1	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400979f	          0x4889c7	                            mov rdi, rax	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x40097a2	      0xe800000000	                          call 0x40097a7	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x40097a7	      0xe9e9060000	                           jmp 0x4009e95	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x40097ac	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x40097b7	     0xf85e4000000	                           jne 0x40098a1	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x40097bd	    0x488b05000000	            mov rax, qword [0x040097c4] 	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x40097c4	      0xbe73000000	                           mov esi, 0x73	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x40097c9	          0x4889c7	                            mov rdi, rax	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x40097cc	      0xe800000000	                          call 0x40097d1	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x40097d1	        0x48894590	             mov qword [rbp - 0x70], rax	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x40097d5	    0x8b0500000000	            mov eax, dword [0x040097db] 	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x40097db	            0x85c0	                           test eax, eax	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x40097dd	            0x7479	                            je 0x4009858	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x40097df	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x40097e4	            0x7572	                           jne 0x4009858	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x40097e6	    0x488b15000000	            mov rdx, qword [0x040097ed] 	      8301	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_20
0x40097ed	    0x488b05000000	            mov rax, qword [0x040097f4] 	      8301	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_20
0x40097f4	          0x4889d6	                            mov rsi, rdx	      8301	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_20
0x40097f7	          0x4889c7	                            mov rdi, rax	      8301	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_20
0x40097fa	      0xe800000000	                          call 0x40097ff	      8301	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_20
0x40097ff	    0x488b15000000	            mov rdx, qword [0x04009806] 	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009806	          0x4889d0	                            mov rax, rdx	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009809	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009810	          0x4889c6	                            mov rsi, rax	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009813	      0xb800000000	                              mov eax, 0	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009818	          0x4889f7	                            mov rdi, rsi	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x400981b	            0xf2ae	              repne scasb al, byte [rdi]	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x400981d	          0x4889c8	                            mov rax, rcx	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009820	          0x48f7d0	                                 not rax	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009823	        0x4883e801	                              sub rax, 1	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x4009827	          0x4801d0	                            add rax, rdx	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x400982a	      0x66c7007300	                    mov word [rax], 0x73	      8302	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_21
0x400982f	    0x488b05000000	            mov rax, qword [0x04009836] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x4009836	    0x41b800000000	                              mov r8d, 0	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400983c	      0xb901000000	                              mov ecx, 1	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x4009841	          0x4889c2	                            mov rdx, rax	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x4009844	      0xbeffffffff	                     mov esi, 0xffffffff	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x4009849	      0xbf00000000	                              mov edi, 0	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400984e	      0xe800000000	                          call 0x4009853	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x4009853	      0xe93d060000	                           jmp 0x4009e95	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x4009858	    0x8b0500000000	            mov eax, dword [0x0400985e] 	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400985e	            0x85c0	                           test eax, eax	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009860	     0xf852f060000	                           jne 0x4009e95	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009866	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400986b	     0xf8424060000	                            je 0x4009e95	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009871	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009875	        0x4883c001	                              add rax, 1	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009879	          0x4889c7	                            mov rdi, rax	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400987c	      0xe800000000	                          call 0x4009881	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009881	        0x488d5001	                      lea rdx, [rax + 1]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009885	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009889	        0x488d4801	                      lea rcx, [rax + 1]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400988d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009891	          0x4889ce	                            mov rsi, rcx	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009894	          0x4889c7	                            mov rdi, rax	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x4009897	      0xe800000000	                          call 0x400989c	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400989c	      0xe9f4050000	                           jmp 0x4009e95	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x40098a1	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x40098ac	            0x750a	                           jne 0x40098b8	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x40098ae	      0xe80d740000	           call sym.paste_option_changed	      8313	option.c	FUNCTION_49	ELSE_15	IF_25	CALL_24
0x40098b3	      0xe9dd050000	                           jmp 0x4009e95	      8313	option.c	FUNCTION_49	ELSE_15	IF_25	CALL_24
0x40098b8	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x40098c3	            0x757e	                           jne 0x4009943	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x40098c5	    0x8b0500000000	            mov eax, dword [0x040098cb] 	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x40098cb	            0x85c0	                           test eax, eax	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x40098cd	            0x7426	                            je 0x40098f5	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x40098cf	    0x8b0500000000	            mov eax, dword [0x040098d5] 	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x40098d5	          0x83e010	                           and eax, 0x10	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x40098d8	            0x85c0	                           test eax, eax	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x40098da	            0x750a	                           jne 0x40098e6	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x40098dc	    0xc70500000000	               mov dword [0x040098e6], 1	      8322	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x40098e6	    0xc70500000000	               mov dword [0x040098f0], 0	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x40098f0	      0xe9a0050000	                           jmp 0x4009e95	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x40098f5	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x40098fc	     0xf8493050000	                            je 0x4009e95	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x4009902	    0xc70500000000	               mov dword [0x0400990c], 0	      8328	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400990c	    0xc70500000000	               mov dword [0x04009916], 1	      8329	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x4009916	    0x8b0500000000	            mov eax, dword [0x0400991c] 	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400991c	            0x85c0	                           test eax, eax	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400991e	            0x7414	                            je 0x4009934	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x4009920	    0x8b0500000000	            mov eax, dword [0x04009926] 	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x4009926	            0x85c0	                           test eax, eax	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x4009928	            0x740a	                            je 0x4009934	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400992a	    0xc70500000000	               mov dword [0x04009934], 1	      8331	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x4009934	    0xc70500000000	               mov dword [0x0400993e], 0	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400993e	      0xe952050000	                           jmp 0x4009e95	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x4009943	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400994e	            0x7519	                           jne 0x4009969	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x4009950	    0x8b0500000000	            mov eax, dword [0x04009956] 	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x4009956	            0x85c0	                           test eax, eax	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x4009958	            0x740f	                            je 0x4009969	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400995a	      0xbf23000000	                           mov edi, 0x23	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400995f	      0xe800000000	                          call 0x4009964	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x4009964	      0xe92c050000	                           jmp 0x4009e95	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x4009969	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x4009974	            0x750f	                           jne 0x4009985	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x4009976	      0xbf00000000	                              mov edi, 0	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400997b	      0xe800000000	                          call 0x4009980	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x4009980	      0xe910050000	                           jmp 0x4009e95	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x4009985	    0x488b05000000	            mov rax, qword [0x0400998c] 	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400998c	    0x480588020000	                          add rax, 0x288	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x4009992	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x4009999	            0x753d	                           jne 0x40099d8	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400999b	    0x488b05000000	            mov rax, qword [0x040099a2] 	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099a2	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099a8	            0x85c0	                           test eax, eax	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099aa	     0xf84e5040000	                            je 0x4009e95	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099b0	      0xbf00000000	                              mov edi, 0	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x40099b5	      0xe800000000	                          call 0x40099ba	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x40099ba	    0x488b05000000	            mov rax, qword [0x040099c1] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099c1	    0x488b15000000	            mov rdx, qword [0x040099c8] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099c8	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099cc	    0x488990500500	            mov qword [rax + 0x550], rdx	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099d3	      0xe9bd040000	                           jmp 0x4009e95	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x40099d8	    0x488b05000000	            mov rax, qword [0x040099df] 	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x40099df	    0x480550020000	                          add rax, 0x250	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x40099e5	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x40099ec	            0x7570	                           jne 0x4009a5e	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x40099ee	    0x488b05000000	            mov rax, qword [0x040099f5] 	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x40099f5	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x40099fb	            0x85c0	                           test eax, eax	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x40099fd	     0xf8492040000	                            je 0x4009e95	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x4009a03	    0x488b05000000	            mov rax, qword [0x04009a0a] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a0a	        0x48894580	             mov qword [rbp - 0x80], rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a0e	            0xeb42	                           jmp 0x4009a52	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a10	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a14	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a1a	            0x85c0	                           test eax, eax	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a1c	            0x7428	                            je 0x4009a46	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a1e	    0x488b05000000	            mov rax, qword [0x04009a25] 	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a25	        0x48394580	            cmp qword [rbp - 0x80], rax 	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a29	            0x741b	                            je 0x4009a46	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a2b	    0x488b05000000	            mov rax, qword [0x04009a32] 	      8372	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a32	    0xc78050020000	              mov dword [rax + 0x250], 0	      8372	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x4009a3c	      0xb800000000	                              mov eax, 0	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x4009a41	      0xe955080000	                           jmp 0x400a29b	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x4009a46	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a4a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a4e	        0x48894580	             mov qword [rbp - 0x80], rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a52	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a57	            0x75b7	                           jne 0x4009a10	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a59	      0xe937040000	                           jmp 0x4009e95	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x4009a5e	    0x488b05000000	            mov rax, qword [0x04009a65] 	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x4009a65	    0x4805b0150000	                         add rax, 0x15b0	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x4009a6b	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x4009a72	            0x7529	                           jne 0x4009a9d	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x4009a74	    0x488b05000000	            mov rax, qword [0x04009a7b] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a7b	    0x8b80b0150000	          mov eax, dword [rax + 0x15b0] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a81	            0x85c0	                           test eax, eax	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a83	           0xf95c0	                                setne al	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a86	           0xfb6c0	                           movzx eax, al	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a89	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a8f	            0x89d6	                            mov esi, edx	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a91	            0x89c7	                            mov edi, eax	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a93	      0xe800000000	                          call 0x4009a98	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a98	      0xe9f8030000	                           jmp 0x4009e95	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x4009a9d	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x4009aa8	            0x7540	                           jne 0x4009aea	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x4009aaa	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ab0	          0x83c801	                               or eax, 1	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ab3	            0x89c2	                            mov edx, eax	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ab5	    0x8b0500000000	            mov eax, dword [0x04009abb] 	      8388	option.c	FUNCTION_49	ELSE_23	IF_39
0x4009abb	            0x85c0	                           test eax, eax	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009abd	            0x7407	                            je 0x4009ac6	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009abf	      0xb800000000	                              mov eax, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ac4	            0xeb05	                           jmp 0x4009acb	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ac6	      0xb800000000	                              mov eax, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009acb	    0x41b800000000	                              mov r8d, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ad1	            0x89d1	                            mov ecx, edx	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ad3	          0x4889c2	                            mov rdx, rax	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ad6	      0xbeffffffff	                     mov esi, 0xffffffff	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009adb	      0xbf00000000	                              mov edi, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ae0	      0xe800000000	                          call 0x4009ae5	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009ae5	      0xe9ab030000	                           jmp 0x4009e95	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x4009aea	    0x488b05000000	            mov rax, qword [0x04009af1] 	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x4009af1	    0x480520150000	                         add rax, 0x1520	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x4009af7	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x4009afe	            0x7519	                           jne 0x4009b19	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x4009b00	    0x488b05000000	            mov rax, qword [0x04009b07] 	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x4009b07	      0xbe00000000	                              mov esi, 0	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x4009b0c	          0x4889c7	                            mov rdi, rax	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x4009b0f	      0xe800000000	                          call 0x4009b14	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x4009b14	      0xe97c030000	                           jmp 0x4009e95	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x4009b19	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x4009b24	            0x750f	                           jne 0x4009b35	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x4009b26	      0xbf00000000	                              mov edi, 0	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x4009b2b	      0xe8bba1ffff	                  call sym.did_set_title	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x4009b30	      0xe960030000	                           jmp 0x4009e95	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x4009b35	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x4009b40	            0x750f	                           jne 0x4009b51	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x4009b42	      0xbf01000000	                              mov edi, 1	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x4009b47	      0xe89fa1ffff	                  call sym.did_set_title	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x4009b4c	      0xe944030000	                           jmp 0x4009e95	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x4009b51	    0x488b05000000	            mov rax, qword [0x04009b58] 	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x4009b58	    0x4805c8000000	                           add rax, 0xc8	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x4009b5e	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x4009b65	            0x752e	                           jne 0x4009b95	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x4009b67	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x4009b6e	            0x750f	                           jne 0x4009b7f	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x4009b70	    0x488b05000000	            mov rax, qword [0x04009b77] 	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x4009b77	          0x4889c7	                            mov rdi, rax	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x4009b7a	      0xe800000000	                          call 0x4009b7f	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x4009b7f	      0xe8fbadffff	                  call sym.redraw_titles	      8420	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_36
0x4009b84	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x4009b8a	    0x890500000000	            mov dword [0x04009b90], eax 	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x4009b90	      0xe900030000	                           jmp 0x4009e95	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x4009b95	    0x488b05000000	            mov rax, qword [0x04009b9c] 	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x4009b9c	    0x480594020000	                          add rax, 0x294	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x4009ba2	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x4009ba9	            0x752b	                           jne 0x4009bd6	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x4009bab	    0x488b05000000	            mov rax, qword [0x04009bb2] 	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x4009bb2	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x4009bb8	            0x85c0	                           test eax, eax	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x4009bba	     0xf84d5020000	                            je 0x4009e95	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x4009bc0	    0x488b05000000	            mov rax, qword [0x04009bc7] 	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x4009bc7	    0xc78094000000	               mov dword [rax + 0x94], 0	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x4009bd1	      0xe9bf020000	                           jmp 0x4009e95	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x4009bd6	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x4009be1	            0x7539	                           jne 0x4009c1c	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x4009be3	    0x8b0500000000	            mov eax, dword [0x04009be9] 	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x4009be9	            0x85c0	                           test eax, eax	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x4009beb	     0xf84a4020000	                            je 0x4009e95	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x4009bf1	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x4009bf8	     0xf8597020000	                           jne 0x4009e95	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x4009bfe	    0x488b05000000	            mov rax, qword [0x04009c05] 	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x4009c05	      0xba00000000	                              mov edx, 0	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x4009c0a	      0xbe00000000	                              mov esi, 0	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x4009c0f	          0x4889c7	                            mov rdi, rax	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x4009c12	      0xe800000000	                          call 0x4009c17	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x4009c17	      0xe979020000	                           jmp 0x4009e95	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x4009c1c	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c27	            0x755e	                           jne 0x4009c87	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c29	    0x8b0500000000	            mov eax, dword [0x04009c2f] 	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x4009c2f	            0x85c0	                           test eax, eax	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x4009c31	            0x7416	                            je 0x4009c49	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x4009c33	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x4009c3a	            0x750d	                           jne 0x4009c49	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x4009c3c	    0x48c705000000	               mov qword [0x04009c47], 0	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x4009c47	            0xeb21	                           jmp 0x4009c6a	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x4009c49	    0x8b0500000000	            mov eax, dword [0x04009c4f] 	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x4009c4f	            0x85c0	                           test eax, eax	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x4009c51	            0x7517	                           jne 0x4009c6a	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x4009c53	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x4009c5a	            0x740e	                            je 0x4009c6a	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x4009c5c	    0x488b05000000	            mov rax, qword [0x04009c63] 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x4009c63	    0x488905000000	            mov qword [0x04009c6a], rax 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x4009c6a	    0x488b05000000	            mov rax, qword [0x04009c71] 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c71	           0xfb600	                   movzx eax, byte [rax]	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c74	            0x84c0	                             test al, al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c76	           0xf95c0	                                setne al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c79	           0xfb6c0	                           movzx eax, al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c7c	    0x890500000000	            mov dword [0x04009c82], eax 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c82	      0xe90e020000	                           jmp 0x4009e95	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x4009c87	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x4009c92	            0x7564	                           jne 0x4009cf8	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x4009c94	    0x8b0500000000	            mov eax, dword [0x04009c9a] 	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x4009c9a	            0x85c0	                           test eax, eax	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x4009c9c	     0xf85f3010000	                           jne 0x4009e95	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x4009ca2	    0x8b0500000000	            mov eax, dword [0x04009ca8] 	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x4009ca8	            0x85c0	                           test eax, eax	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x4009caa	            0x741d	                            je 0x4009cc9	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x4009cac	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x4009cb3	            0x7514	                           jne 0x4009cc9	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x4009cb5	    0x488b05000000	            mov rax, qword [0x04009cbc] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x4009cbc	          0x4889c7	                            mov rdi, rax	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x4009cbf	      0xe800000000	                          call 0x4009cc4	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x4009cc4	      0xe9cc010000	                           jmp 0x4009e95	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x4009cc9	    0x8b0500000000	            mov eax, dword [0x04009ccf] 	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009ccf	            0x85c0	                           test eax, eax	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009cd1	     0xf85be010000	                           jne 0x4009e95	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009cd7	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009cde	     0xf84b1010000	                            je 0x4009e95	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009ce4	    0x488b05000000	            mov rax, qword [0x04009ceb] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009ceb	          0x4889c7	                            mov rdi, rax	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009cee	      0xe800000000	                          call 0x4009cf3	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009cf3	      0xe99d010000	                           jmp 0x4009e95	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x4009cf8	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x4009d03	            0x750a	                           jne 0x4009d0f	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x4009d05	      0xe800000000	                          call 0x4009d0a	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x4009d0a	      0xe986010000	                           jmp 0x4009e95	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x4009d0f	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x4009d1a	            0x7518	                           jne 0x4009d34	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x4009d1c	    0x8b0500000000	            mov eax, dword [0x04009d22] 	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x4009d22	            0x85c0	                           test eax, eax	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x4009d24	     0xf846b010000	                            je 0x4009e95	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x4009d2a	      0xe800000000	                          call 0x4009d2f	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x4009d2f	      0xe961010000	                           jmp 0x4009e95	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x4009d34	    0x488b05000000	            mov rax, qword [0x04009d3b] 	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x4009d3b	    0x4805c0010000	                          add rax, 0x1c0	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x4009d41	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x4009d48	            0x753a	                           jne 0x4009d84	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x4009d4a	    0x488b05000000	            mov rax, qword [0x04009d51] 	      8508	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_44
0x4009d51	          0x4889c7	                            mov rdi, rax	      8508	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_44
0x4009d54	      0xe800000000	                          call 0x4009d59	      8508	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_44
0x4009d59	    0x488b05000000	            mov rax, qword [0x04009d60] 	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x4009d60	          0x4889c7	                            mov rdi, rax	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x4009d63	      0xe800000000	                          call 0x4009d68	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x4009d68	            0x85c0	                           test eax, eax	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x4009d6a	     0xf8425010000	                            je 0x4009e95	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x4009d70	    0x488b05000000	            mov rax, qword [0x04009d77] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x4009d77	          0x4889c7	                            mov rdi, rax	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x4009d7a	      0xe800000000	                          call 0x4009d7f	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x4009d7f	      0xe911010000	                           jmp 0x4009e95	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x4009d84	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x4009d8f	            0x754e	                           jne 0x4009ddf	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x4009d91	    0x8b0500000000	            mov eax, dword [0x04009d97] 	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x4009d97	            0x85c0	                           test eax, eax	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x4009d99	            0x740f	                            je 0x4009daa	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x4009d9b	      0xbf00000000	                              mov edi, 0	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x4009da0	      0xe800000000	                          call 0x4009da5	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x4009da5	      0xe9eb000000	                           jmp 0x4009e95	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x4009daa	    0x8b0500000000	            mov eax, dword [0x04009db0] 	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009db0	          0x83e010	                           and eax, 0x10	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009db3	            0x85c0	                           test eax, eax	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009db5	     0xf84da000000	                            je 0x4009e95	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dbb	    0x488b05000000	            mov rax, qword [0x04009dc2] 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dc2	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dc9	        0x4883f802	                              cmp rax, 2	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dcd	           0xf94c0	                                 sete al	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dd0	           0xfb6c0	                           movzx eax, al	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dd3	            0x89c7	                            mov edi, eax	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dd5	      0xe800000000	                          call 0x4009dda	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009dda	      0xe9b6000000	                           jmp 0x4009e95	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x4009ddf	    0x488b05000000	            mov rax, qword [0x04009de6] 	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x4009de6	    0x480568020000	                          add rax, 0x268	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x4009dec	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x4009df3	            0x7545	                           jne 0x4009e3a	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x4009df5	    0x488b05000000	            mov rax, qword [0x04009dfc] 	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x4009dfc	    0x8b8068020000	           mov eax, dword [rax + 0x268] 	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x4009e02	            0x85c0	                           test eax, eax	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x4009e04	     0xf848b000000	                            je 0x4009e95	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x4009e0a	    0x488b05000000	            mov rax, qword [0x04009e11] 	      8536	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_49
0x4009e11	          0x4889c7	                            mov rdi, rax	      8536	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_49
0x4009e14	      0xe800000000	                          call 0x4009e19	      8536	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_49
0x4009e19	        0x48894588	             mov qword [rbp - 0x78], rax	      8536	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_49
0x4009e1d	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x4009e22	            0x7471	                            je 0x4009e95	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x4009e24	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x4009e28	          0x4889c7	                            mov rdi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x4009e2b	      0xe800000000	                          call 0x4009e30	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x4009e30	          0x4889c7	                            mov rdi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x4009e33	      0xe800000000	                          call 0x4009e38	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x4009e38	            0xeb5b	                           jmp 0x4009e95	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x4009e3a	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x4009e45	            0x754e	                           jne 0x4009e95	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x4009e47	    0x8b0500000000	            mov eax, dword [0x04009e4d] 	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x4009e4d	    0x39857cffffff	            cmp dword [rbp - 0x84], eax 	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x4009e53	            0x7440	                            je 0x4009e95	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x4009e55	    0x8b0500000000	            mov eax, dword [0x04009e5b] 	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x4009e5b	            0x85c0	                           test eax, eax	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x4009e5d	            0x7518	                           jne 0x4009e77	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x4009e5f	    0x8b0500000000	            mov eax, dword [0x04009e65] 	      8550	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x4009e65	    0x890500000000	            mov dword [0x04009e6b], eax 	      8550	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x4009e6b	    0xc70500000000	               mov dword [0x04009e75], 0	      8551	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x4009e75	            0xeb16	                           jmp 0x4009e8d	      8551	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x4009e77	    0x8b0500000000	            mov eax, dword [0x04009e7d] 	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x4009e7d	    0x890500000000	            mov dword [0x04009e83], eax 	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x4009e83	    0xc70500000000	               mov dword [0x04009e8d], 0	      8556	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x4009e8d	      0xe800000000	                          call 0x4009e92	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x4009e92	            0xeb01	                           jmp 0x4009e95	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x4009e94	              0x90	                                     nop	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x4009e95	    0x8b0500000000	            mov eax, dword [0x04009e9b] 	      8570	option.c	FUNCTION_49	IF_71
0x4009e9b	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_49	IF_71
0x4009e9d	            0x750a	                           jne 0x4009ea9	      8570	option.c	FUNCTION_49	IF_71
0x4009e9f	    0x8b0500000000	            mov eax, dword [0x04009ea5] 	      8570	option.c	FUNCTION_49	IF_71
0x4009ea5	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_49	IF_71
0x4009ea7	            0x742c	                            je 0x4009ed5	      8570	option.c	FUNCTION_49	IF_71
0x4009ea9	    0x8b0500000000	            mov eax, dword [0x04009eaf] 	      8570	option.c	FUNCTION_49	IF_71
0x4009eaf	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_49	IF_71
0x4009eb1	            0x7422	                            je 0x4009ed5	      8570	option.c	FUNCTION_49	IF_71
0x4009eb3	    0x8b0500000000	            mov eax, dword [0x04009eb9] 	      8572	option.c	FUNCTION_49	IF_71
0x4009eb9	    0x890500000000	            mov dword [0x04009ebf], eax 	      8572	option.c	FUNCTION_49	IF_71
0x4009ebf	    0x488b05000000	            mov rax, qword [0x04009ec6] 	      8574	option.c	FUNCTION_49	IF_71
0x4009ec6	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8574	option.c	FUNCTION_49	IF_71
0x4009ed0	      0xe800000000	                          call 0x4009ed5	      8576	option.c	FUNCTION_49	IF_71	CALL_53
0x4009ed5	    0x8b0500000000	            mov eax, dword [0x04009edb] 	      8582	option.c	FUNCTION_49	IF_72
0x4009edb	            0x85c0	                           test eax, eax	      8582	option.c	FUNCTION_49	IF_72
0x4009edd	            0x7434	                            je 0x4009f13	      8582	option.c	FUNCTION_49	IF_72
0x4009edf	    0x8b0500000000	            mov eax, dword [0x04009ee5] 	      8582	option.c	FUNCTION_49	IF_72
0x4009ee5	            0x85c0	                           test eax, eax	      8582	option.c	FUNCTION_49	IF_72
0x4009ee7	            0x742a	                            je 0x4009f13	      8582	option.c	FUNCTION_49	IF_72
0x4009ee9	    0xc70500000000	               mov dword [0x04009ef3], 0	      8584	option.c	FUNCTION_49	IF_72
0x4009ef3	    0xc70500000000	               mov dword [0x04009efd], 0	      8585	option.c	FUNCTION_49	IF_72
0x4009efd	    0x488b05000000	            mov rax, qword [0x04009f04] 	      8587	option.c	FUNCTION_49	IF_72
0x4009f04	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8587	option.c	FUNCTION_49	IF_72
0x4009f0e	      0xe800000000	                          call 0x4009f13	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x4009f13	    0x8b0500000000	            mov eax, dword [0x04009f19] 	      8595	option.c	FUNCTION_49	IF_73
0x4009f19	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x4009f1b	            0x7434	                            je 0x4009f51	      8595	option.c	FUNCTION_49	IF_73
0x4009f1d	    0x8b0500000000	            mov eax, dword [0x04009f23] 	      8595	option.c	FUNCTION_49	IF_73
0x4009f23	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x4009f25	            0x752a	                           jne 0x4009f51	      8595	option.c	FUNCTION_49	IF_73
0x4009f27	    0xc70500000000	               mov dword [0x04009f31], 1	      8597	option.c	FUNCTION_49	IF_73
0x4009f31	    0xc70500000000	               mov dword [0x04009f3b], 0	      8598	option.c	FUNCTION_49	IF_73
0x4009f3b	    0x488b05000000	            mov rax, qword [0x04009f42] 	      8600	option.c	FUNCTION_49	IF_73
0x4009f42	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8600	option.c	FUNCTION_49	IF_73
0x4009f4c	      0xe800000000	                          call 0x4009f51	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x4009f51	    0x488b05000000	            mov rax, qword [0x04009f58] 	      8607	option.c	FUNCTION_49	IF_74
0x4009f58	    0x4805b0010000	                          add rax, 0x1b0	      8607	option.c	FUNCTION_49	IF_74
0x4009f5e	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8607	option.c	FUNCTION_49	IF_74
0x4009f65	     0xf8563010000	                           jne 0x400a0ce	      8607	option.c	FUNCTION_49	IF_74
0x4009f6b	    0x488b05000000	            mov rax, qword [0x04009f72] 	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x4009f72	    0x8b80b0010000	           mov eax, dword [rax + 0x1b0] 	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x4009f78	            0x85c0	                           test eax, eax	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x4009f7a	     0xf84f7000000	                            je 0x400a077	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x4009f80	    0x8b0500000000	            mov eax, dword [0x04009f86] 	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x4009f86	            0x85c0	                           test eax, eax	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x4009f88	            0x7540	                           jne 0x4009fca	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x4009f8a	    0x488b05000000	            mov rax, qword [0x04009f91] 	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x4009f91	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x4009f97	            0x85c0	                           test eax, eax	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x4009f99	            0x7516	                           jne 0x4009fb1	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x4009f9b	    0x488b05000000	            mov rax, qword [0x04009fa2] 	      8619	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x4009fa2	    0xc78054020000	              mov dword [rax + 0x254], 1	      8619	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x4009fac	      0xe800000000	                          call 0x4009fb1	      8620	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77	CALL_56
0x4009fb1	    0x8b0500000000	            mov eax, dword [0x04009fb7] 	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x4009fb7	            0x85c0	                           test eax, eax	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x4009fb9	            0x750f	                           jne 0x4009fca	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x4009fbb	    0xc70500000000	               mov dword [0x04009fc5], 1	      8626	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x4009fc5	      0xe800000000	                          call 0x4009fca	      8627	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78	CALL_57
0x4009fca	    0x488b05000000	            mov rax, qword [0x04009fd1] 	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x4009fd1	      0xbe00000000	                              mov esi, 0	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x4009fd6	          0x4889c7	                            mov rdi, rax	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x4009fd9	      0xe800000000	                          call 0x4009fde	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x4009fde	            0x85c0	                           test eax, eax	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x4009fe0	            0x744d	                            je 0x400a02f	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x4009fe2	    0x8b0500000000	            mov eax, dword [0x04009fe8] 	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x4009fe8	            0x89c7	                            mov edi, eax	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x4009fea	      0xe800000000	                          call 0x4009fef	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x4009fef	    0x8b1d00000000	            mov ebx, dword [0x04009ff5] 	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x4009ff5	    0x488b05000000	            mov rax, qword [0x04009ffc] 	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x4009ffc	          0x4889c7	                            mov rdi, rax	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x4009fff	      0xe800000000	                          call 0x400a004	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400a004	            0x89de	                            mov esi, ebx	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400a006	          0x4889c7	                            mov rdi, rax	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400a009	      0xe800000000	                          call 0x400a00e	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400a00e	    0x488b05000000	            mov rax, qword [0x0400a015] 	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400a015	          0x4889c7	                            mov rdi, rax	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400a018	      0xe800000000	                          call 0x400a01d	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400a01d	      0xbaffffffff	                     mov edx, 0xffffffff	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400a022	          0x4889c6	                            mov rsi, rax	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400a025	      0xbf04000000	                              mov edi, 4	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400a02a	      0xe800000000	                          call 0x400a02f	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400a02f	    0xc70500000000	               mov dword [0x0400a039], 1	      8646	option.c	FUNCTION_49	IF_74	IF_75
0x400a039	      0xb904000000	                              mov ecx, 4	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400a03e	      0xba00000000	                              mov edx, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400a043	      0xbe00000000	                              mov esi, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400a048	      0xbf00000000	                              mov edi, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400a04d	      0xe800000000	                          call 0x400a052	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400a052	    0xc70500000000	               mov dword [0x0400a05c], 0	      8655	option.c	FUNCTION_49	IF_74	IF_75
0x400a05c	    0xc70500000000	               mov dword [0x0400a066], 0	      8656	option.c	FUNCTION_49	IF_74	IF_75
0x400a066	    0xc70500000000	               mov dword [0x0400a070], 0	      8657	option.c	FUNCTION_49	IF_74	IF_75
0x400a070	      0xe800000000	                          call 0x400a075	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400a075	            0xeb7d	                           jmp 0x400a0f4	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400a077	    0x8b0500000000	            mov eax, dword [0x0400a07d] 	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400a07d	            0x85c0	                           test eax, eax	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400a07f	            0x7527	                           jne 0x400a0a8	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400a081	    0x488b05000000	            mov rax, qword [0x0400a088] 	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400a088	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400a08e	            0x85c0	                           test eax, eax	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400a090	            0x7416	                            je 0x400a0a8	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400a092	    0x488b05000000	            mov rax, qword [0x0400a099] 	      8671	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400a099	    0xc78054020000	              mov dword [rax + 0x254], 0	      8671	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400a0a3	      0xe800000000	                          call 0x400a0a8	      8672	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81	CALL_69
0x400a0a8	    0x488b05000000	            mov rax, qword [0x0400a0af] 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400a0af	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400a0ba	    0x488b05000000	            mov rax, qword [0x0400a0c1] 	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400a0c1	    0x48c780801200	mov qword [rax + 0x1280], 0xffffffffffffffff 	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400a0cc	            0xeb26	                           jmp 0x400a0f4	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400a0ce	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400a0d9	            0x7519	                           jne 0x400a0f4	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400a0db	    0x8b0500000000	            mov eax, dword [0x0400a0e1] 	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400a0e1	            0x85c0	                           test eax, eax	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400a0e3	            0x750f	                           jne 0x400a0f4	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400a0e5	    0x8b0500000000	            mov eax, dword [0x0400a0eb] 	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400a0eb	            0x85c0	                           test eax, eax	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400a0ed	            0x7505	                           jne 0x400a0f4	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400a0ef	      0xe800000000	                          call 0x400a0f4	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400a0f4	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8725	option.c	FUNCTION_49
0x400a0fa	            0x4898	                                    cdqe	      8725	option.c	FUNCTION_49
0x400a0fc	        0x48c1e006	                              shl rax, 6	      8725	option.c	FUNCTION_49
0x400a100	    0x480500000000	                              add rax, 0	      8725	option.c	FUNCTION_49
0x400a106	          0x488b00	                    mov rax, qword [rax]	      8725	option.c	FUNCTION_49
0x400a109	          0x80cc01	                                or ah, 1	      8725	option.c	FUNCTION_49
0x400a10c	          0x4889c2	                            mov rdx, rax	      8725	option.c	FUNCTION_49
0x400a10f	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8725	option.c	FUNCTION_49
0x400a115	            0x4898	                                    cdqe	      8725	option.c	FUNCTION_49
0x400a117	        0x48c1e006	                              shl rax, 6	      8725	option.c	FUNCTION_49
0x400a11b	    0x480500000000	                              add rax, 0	      8725	option.c	FUNCTION_49
0x400a121	          0x488910	                    mov qword [rax], rdx	      8725	option.c	FUNCTION_49
0x400a124	    0x8b0500000000	            mov eax, dword [0x0400a12a] 	      8728	option.c	FUNCTION_49	IF_87
0x400a12a	            0x85c0	                           test eax, eax	      8728	option.c	FUNCTION_49	IF_87
0x400a12c	     0xf8504010000	                           jne 0x400a236	      8728	option.c	FUNCTION_49	IF_87
0x400a132	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a139	           0xf95c0	                                setne al	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a13c	           0xfb6d0	                           movzx edx, al	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a13f	        0x488d45a0	                   lea rax, [rbp - 0x60]	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a143	            0x89d1	                            mov ecx, edx	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a145	      0xba00000000	                              mov edx, 0	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a14a	      0xbe02000000	                              mov esi, 2	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a14f	          0x4889c7	                            mov rdi, rax	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a152	      0xb800000000	                              mov eax, 0	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a157	      0xe800000000	                          call 0x400a15c	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400a15c	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a163	           0xf95c0	                                setne al	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a166	           0xfb6d0	                           movzx edx, al	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a169	        0x488d45b0	                   lea rax, [rbp - 0x50]	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a16d	            0x89d1	                            mov ecx, edx	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a16f	      0xba00000000	                              mov edx, 0	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a174	      0xbe02000000	                              mov esi, 2	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a179	          0x4889c7	                            mov rdi, rax	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a17c	      0xb800000000	                              mov eax, 0	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a181	      0xe800000000	                          call 0x400a186	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400a186	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a18c	          0x83e004	                              and eax, 4	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a18f	            0x85c0	                           test eax, eax	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a191	            0x7407	                            je 0x400a19a	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a193	      0xba00000000	                              mov edx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a198	            0xeb05	                           jmp 0x400a19f	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a19a	      0xba00000000	                              mov edx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a19f	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a1a3	          0x4889d1	                            mov rcx, rdx	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a1a6	      0xba00000000	                              mov edx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a1ab	      0xbe07000000	                              mov esi, 7	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a1b0	          0x4889c7	                            mov rdi, rax	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a1b3	      0xb800000000	                              mov eax, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a1b8	      0xe800000000	                          call 0x400a1bd	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400a1bd	        0x488d45b0	                   lea rax, [rbp - 0x50]	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400a1c1	      0xbaffffffff	                     mov edx, 0xffffffff	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400a1c6	          0x4889c6	                            mov rsi, rax	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400a1c9	      0xbf3d000000	                           mov edi, 0x3d	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400a1ce	      0xe800000000	                          call 0x400a1d3	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400a1d3	        0x488d45a0	                   lea rax, [rbp - 0x60]	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400a1d7	      0xbaffffffff	                     mov edx, 0xffffffff	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400a1dc	          0x4889c6	                            mov rsi, rax	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400a1df	      0xbf3e000000	                           mov edi, 0x3e	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400a1e4	      0xe800000000	                          call 0x400a1e9	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400a1e9	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400a1ed	      0xbaffffffff	                     mov edx, 0xffffffff	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400a1f2	          0x4889c6	                            mov rsi, rax	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400a1f5	      0xbf3f000000	                           mov edi, 0x3f	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400a1fa	      0xe800000000	                          call 0x400a1ff	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400a1ff	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a205	            0x4898	                                    cdqe	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a207	        0x48c1e006	                              shl rax, 6	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a20b	    0x480500000000	                              add rax, 0	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a211	          0x488b00	                    mov rax, qword [rax]	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a214	    0x41b800000000	                              mov r8d, 0	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a21a	      0xb900000000	                              mov ecx, 0	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a21f	      0xba00000000	                              mov edx, 0	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a224	          0x4889c6	                            mov rsi, rax	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a227	      0xbf3e000000	                           mov edi, 0x3e	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a22c	      0xe800000000	                          call 0x400a231	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400a231	      0xe800000000	                          call 0x400a236	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400a236	      0xe800000000	                          call 0x400a23b	      8742	option.c	FUNCTION_49	CALL_86
0x400a23b	    0x488b05000000	            mov rax, qword [0x0400a242] 	      8743	option.c	FUNCTION_49	IF_88
0x400a242	          0x8b4048	            mov eax, dword [rax + 0x48] 	      8743	option.c	FUNCTION_49	IF_88
0x400a245	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      8743	option.c	FUNCTION_49	IF_88
0x400a24a	            0x742d	                            je 0x400a279	      8743	option.c	FUNCTION_49	IF_88
0x400a24c	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8744	option.c	FUNCTION_49	IF_88
0x400a252	            0x4898	                                    cdqe	      8744	option.c	FUNCTION_49	IF_88
0x400a254	        0x48c1e006	                              shl rax, 6	      8744	option.c	FUNCTION_49	IF_88
0x400a258	    0x480500000000	                              add rax, 0	      8744	option.c	FUNCTION_49	IF_88
0x400a25e	          0x488b00	                    mov rax, qword [rax]	      8744	option.c	FUNCTION_49	IF_88
0x400a261	      0x2500600004	                      and eax, 0x4006000	      8744	option.c	FUNCTION_49	IF_88
0x400a266	          0x4885c0	                           test rax, rax	      8744	option.c	FUNCTION_49	IF_88
0x400a269	            0x740e	                            je 0x400a279	      8744	option.c	FUNCTION_49	IF_88
0x400a26b	    0x488b05000000	            mov rax, qword [0x0400a272] 	      8745	option.c	FUNCTION_49	IF_88
0x400a272	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8745	option.c	FUNCTION_49	IF_88
0x400a279	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8746	option.c	FUNCTION_49	CALL_87
0x400a27f	            0x4898	                                    cdqe	      8746	option.c	FUNCTION_49	CALL_87
0x400a281	        0x48c1e006	                              shl rax, 6	      8746	option.c	FUNCTION_49	CALL_87
0x400a285	    0x480500000000	                              add rax, 0	      8746	option.c	FUNCTION_49	CALL_87
0x400a28b	          0x488b00	                    mov rax, qword [rax]	      8746	option.c	FUNCTION_49	CALL_87
0x400a28e	          0x4889c7	                            mov rdi, rax	      8746	option.c	FUNCTION_49	CALL_87
0x400a291	      0xe82f120000	                   call sym.check_redraw	      8746	option.c	FUNCTION_49	CALL_87
0x400a296	      0xb800000000	                              mov eax, 0	      8748	option.c	FUNCTION_49
0x400a29b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      8749	option.c	FUNCTION_49
0x400a29f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8749	option.c	FUNCTION_49
0x400a2a8	            0x7405	                            je 0x400a2af	      8749	option.c	FUNCTION_49
0x400a2aa	      0xe800000000	                          call 0x400a2af	      8749	option.c	FUNCTION_49
0x400a2af	    0x4881c4a80000	                           add rsp, 0xa8	      8749	option.c	FUNCTION_49
0x400a2b6	              0x5b	                                 pop rbx	      8749	option.c	FUNCTION_49
0x400a2b7	              0x5d	                                 pop rbp	      8749	option.c	FUNCTION_49
0x400a2b8	              0xc3	                                     ret	      8749	option.c	FUNCTION_49
set_string_option	ELSE,0:IF,5:SWITCH,0:CALL,9:DO,0:WHILE,0:functions,0:FOR,0	109
0x4004c0e	              0x55	                                push rbp	      5960	option.c	FUNCTION_38
0x4004c0f	          0x4889e5	                            mov rbp, rsp	      5960	option.c	FUNCTION_38
0x4004c12	        0x4883ec40	                           sub rsp, 0x40	      5960	option.c	FUNCTION_38
0x4004c16	          0x897dcc	             mov dword [rbp - 0x34], edi	      5960	option.c	FUNCTION_38
0x4004c19	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5960	option.c	FUNCTION_38
0x4004c1d	          0x8955c8	             mov dword [rbp - 0x38], edx	      5960	option.c	FUNCTION_38
0x4004c20	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5965	option.c	FUNCTION_38
0x4004c28	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5966	option.c	FUNCTION_38
0x4004c30	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5968	option.c	FUNCTION_38
0x4004c38	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5970	option.c	FUNCTION_38	IF_1
0x4004c3b	            0x4898	                                    cdqe	      5970	option.c	FUNCTION_38	IF_1
0x4004c3d	        0x48c1e006	                              shl rax, 6	      5970	option.c	FUNCTION_38	IF_1
0x4004c41	    0x480500000000	                              add rax, 0	      5970	option.c	FUNCTION_38	IF_1
0x4004c47	          0x488b00	                    mov rax, qword [rax]	      5970	option.c	FUNCTION_38	IF_1
0x4004c4a	          0x4885c0	                           test rax, rax	      5970	option.c	FUNCTION_38	IF_1
0x4004c4d	            0x750a	                           jne 0x4004c59	      5970	option.c	FUNCTION_38	IF_1
0x4004c4f	      0xb800000000	                              mov eax, 0	      5971	option.c	FUNCTION_38	IF_1
0x4004c54	      0xe944010000	                           jmp 0x4004d9d	      5971	option.c	FUNCTION_38	IF_1
0x4004c59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5973	option.c	FUNCTION_38	CALL_1
0x4004c5d	          0x4889c7	                            mov rdi, rax	      5973	option.c	FUNCTION_38	CALL_1
0x4004c60	      0xe800000000	                          call 0x4004c65	      5973	option.c	FUNCTION_38	CALL_1
0x4004c65	        0x488945e8	             mov qword [rbp - 0x18], rax	      5973	option.c	FUNCTION_38	CALL_1
0x4004c69	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5974	option.c	FUNCTION_38	IF_2
0x4004c6e	     0xf8425010000	                            je 0x4004d99	      5974	option.c	FUNCTION_38	IF_2
0x4004c74	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      5977	option.c	FUNCTION_38	IF_2
0x4004c77	          0x83e006	                              and eax, 6	      5977	option.c	FUNCTION_38	IF_2
0x4004c7a	            0x85c0	                           test eax, eax	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004c7c	            0x7528	                           jne 0x4004ca6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004c7e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5978	option.c	FUNCTION_38	IF_2
0x4004c81	            0x4898	                                    cdqe	      5978	option.c	FUNCTION_38	IF_2
0x4004c83	        0x48c1e006	                              shl rax, 6	      5978	option.c	FUNCTION_38	IF_2
0x4004c87	    0x480500000000	                              add rax, 0	      5978	option.c	FUNCTION_38	IF_2
0x4004c8d	            0x8b00	                    mov eax, dword [rax]	      5978	option.c	FUNCTION_38	IF_2
0x4004c8f	      0x2500100000	                         and eax, 0x1000	      5978	option.c	FUNCTION_38	IF_2
0x4004c94	            0x85c0	                           test eax, eax	      5979	option.c	FUNCTION_38	IF_2
0x4004c96	            0x7407	                            je 0x4004c9f	      5979	option.c	FUNCTION_38	IF_2
0x4004c98	      0xb802000000	                              mov eax, 2	      5979	option.c	FUNCTION_38	IF_2
0x4004c9d	            0xeb0a	                           jmp 0x4004ca9	      5979	option.c	FUNCTION_38	IF_2
0x4004c9f	      0xb804000000	                              mov eax, 4	      5979	option.c	FUNCTION_38	IF_2
0x4004ca4	            0xeb03	                           jmp 0x4004ca9	      5979	option.c	FUNCTION_38	IF_2
0x4004ca6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004ca9	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004cac	          0x4863d2	                         movsxd rdx, edx	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004caf	        0x48c1e206	                              shl rdx, 6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004cb3	    0x4881c2000000	                              add rdx, 0	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004cba	            0x89c6	                            mov esi, eax	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004cbc	          0x4889d7	                            mov rdi, rdx	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004cbf	      0xe872850000	                 call sym.get_varp_scope	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004cc4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4004cc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5981	option.c	FUNCTION_38	IF_2
0x4004ccc	          0x488b00	                    mov rax, qword [rax]	      5981	option.c	FUNCTION_38	IF_2
0x4004ccf	        0x488945f8	                mov qword [rbp - 8], rax	      5981	option.c	FUNCTION_38	IF_2
0x4004cd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5982	option.c	FUNCTION_38	IF_2
0x4004cd7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5982	option.c	FUNCTION_38	IF_2
0x4004cdb	          0x488910	                    mov qword [rax], rdx	      5982	option.c	FUNCTION_38	IF_2
0x4004cde	    0x8b0500000000	            mov eax, dword [0x04004ce4] 	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x4004ce4	            0x85c0	                           test eax, eax	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x4004ce6	            0x7538	                           jne 0x4004d20	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x4004ce8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4004ceb	            0x4898	                                    cdqe	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4004ced	        0x48c1e006	                              shl rax, 6	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4004cf1	    0x480500000000	                              add rax, 0	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4004cf7	            0x8b00	                    mov eax, dword [rax]	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4004cf9	      0x3d2c400000	                         cmp eax, 0x402c	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4004cfe	            0x7420	                            je 0x4004d20	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4004d00	        0x488b45f8	                mov rax, qword [rbp - 8]	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4004d04	          0x4889c7	                            mov rdi, rax	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4004d07	      0xe800000000	                          call 0x4004d0c	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4004d0c	        0x488945d0	             mov qword [rbp - 0x30], rax	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4004d10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x4004d14	          0x4889c7	                            mov rdi, rax	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x4004d17	      0xe800000000	                          call 0x4004d1c	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x4004d1c	        0x488945d8	             mov qword [rbp - 0x28], rax	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x4004d20	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d23	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d27	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d2b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d2e	          0x4189c9	                            mov r9d, ecx	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d31	    0x41b800000000	                              mov r8d, 0	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d37	          0x4889d1	                            mov rcx, rdx	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d3a	      0xba01000000	                              mov edx, 1	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d3f	            0x89c7	                            mov edi, eax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d41	      0xe8de000000	          call sym.did_set_string_option	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d46	        0x488945e0	             mov qword [rbp - 0x20], rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d4a	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d4f	            0x7514	                           jne 0x4004d65	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4004d51	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4004d54	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4004d57	      0xba01000000	                              mov edx, 1	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4004d5c	            0x89ce	                            mov esi, ecx	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4004d5e	            0x89c7	                            mov edi, eax	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4004d60	      0xe86eedffff	                 call sym.did_set_option	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4004d65	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6001	option.c	FUNCTION_38	IF_2	IF_5
0x4004d6a	            0x7515	                           jne 0x4004d81	      6001	option.c	FUNCTION_38	IF_2	IF_5
0x4004d6c	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004d70	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004d74	          0x8b75c8	             mov esi, dword [rbp - 0x38]	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004d77	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004d7a	            0x89c7	                            mov edi, eax	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004d7c	      0xe8c4c7ffff	      call sym.trigger_optionsset_string	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004d81	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x4004d85	          0x4889c7	                            mov rdi, rax	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x4004d88	      0xe800000000	                          call 0x4004d8d	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x4004d8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x4004d91	          0x4889c7	                            mov rdi, rax	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x4004d94	      0xe800000000	                          call 0x4004d99	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x4004d99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6008	option.c	FUNCTION_38
0x4004d9d	              0xc9	                                   leave	      6009	option.c	FUNCTION_38
0x4004d9e	              0xc3	                                     ret	      6009	option.c	FUNCTION_38
set_init_1	ELSE,9:IF,41:SWITCH,0:CALL,87:DO,0:WHILE,0:functions,0:FOR,3	493
0x4000040	              0x55	                                push rbp	      3329	option.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	      3329	option.c	FUNCTION_1
0x4000044	        0x4883ec70	                           sub rsp, 0x70	      3329	option.c	FUNCTION_1
0x4000048	          0x897d9c	             mov dword [rbp - 0x64], edi	      3329	option.c	FUNCTION_1
0x400004b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3329	option.c	FUNCTION_1
0x4000054	        0x488945f8	                mov qword [rbp - 8], rax	      3329	option.c	FUNCTION_1
0x4000058	            0x31c0	                            xor eax, eax	      3329	option.c	FUNCTION_1
0x400005a	      0xe8ba080100	                   call sym.langmap_init	      3335	option.c	FUNCTION_1	CALL_1
0x400005f	    0xc70500000000	               mov dword [0x04000069], 1	      3339	option.c	FUNCTION_1
0x4000069	      0xbf00000000	                              mov edi, 0	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400006e	      0xe800000000	                          call 0x4000073	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x4000073	          0x4885c0	                           test rax, rax	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x4000076	            0x741e	                            je 0x4000096	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x4000078	      0xbe00000000	                              mov esi, 0	      3344	option.c	FUNCTION_1	IF_1	CALL_3
0x400007d	      0xbf00000000	                              mov edi, 0	      3344	option.c	FUNCTION_1	IF_1	CALL_3
0x4000082	      0xe800000000	                          call 0x4000087	      3344	option.c	FUNCTION_1	IF_1	CALL_3
0x4000087	      0xbe00000000	                              mov esi, 0	      3345	option.c	FUNCTION_1	IF_1	CALL_4
0x400008c	      0xbf00000000	                              mov edi, 0	      3345	option.c	FUNCTION_1	IF_1	CALL_4
0x4000091	      0xe800000000	                          call 0x4000096	      3345	option.c	FUNCTION_1	IF_1	CALL_4
0x4000096	      0xbf00000000	                              mov edi, 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400009b	      0xe800000000	                          call 0x40000a0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000a0	        0x488945b8	             mov qword [rbp - 0x48], rax	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000a4	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000a9	            0x7421	                            je 0x40000cc	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000af	           0xfb600	                   movzx eax, byte [rax]	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000b2	            0x84c0	                             test al, al	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000b4	            0x7416	                            je 0x40000cc	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x40000b6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3360	option.c	FUNCTION_1	CALL_8
0x40000ba	      0xba01000000	                              mov edx, 1	      3360	option.c	FUNCTION_1	CALL_8
0x40000bf	          0x4889c6	                            mov rsi, rax	      3360	option.c	FUNCTION_1	CALL_8
0x40000c2	      0xbf00000000	                              mov edi, 0	      3360	option.c	FUNCTION_1	CALL_8
0x40000c7	      0xe8150b0000	         call sym.set_string_default_esc	      3360	option.c	FUNCTION_1	CALL_8
0x40000cc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3377	option.c	FUNCTION_1	CALL_9
0x40000d0	      0xba64000000	                           mov edx, 0x64	      3377	option.c	FUNCTION_1	CALL_9
0x40000d5	      0xbe01000000	                              mov esi, 1	      3377	option.c	FUNCTION_1	CALL_9
0x40000da	          0x4889c7	                            mov rdi, rax	      3377	option.c	FUNCTION_1	CALL_9
0x40000dd	      0xe800000000	                          call 0x40000e2	      3377	option.c	FUNCTION_1	CALL_9
0x40000e2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3378	option.c	FUNCTION_1	FOR_1
0x40000ea	      0xe92c010000	                           jmp 0x400021b	      3378	option.c	FUNCTION_1	FOR_1
0x40000ef	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      3380	option.c	FUNCTION_1	FOR_1
0x40000f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x40000fa	    0x488b04c50000	                  mov rax, qword [rax*8]	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x4000102	           0xfb600	                   movzx eax, byte [rax]	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x4000105	            0x84c0	                             test al, al	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x4000107	            0x750a	                           jne 0x4000113	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x4000109	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3386	option.c	FUNCTION_1	FOR_1
0x4000111	            0xeb1f	                           jmp 0x4000132	      3386	option.c	FUNCTION_1	FOR_1
0x4000113	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4000117	    0x488b04c50000	                  mov rax, qword [rax*8]	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400011f	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4000123	          0x4889d6	                            mov rsi, rdx	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4000126	          0x4889c7	                            mov rdi, rax	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4000129	      0xe800000000	                          call 0x400012e	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400012e	        0x488945b8	             mov qword [rbp - 0x48], rax	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4000132	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4000137	     0xf84c6000000	                            je 0x4000203	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400013d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4000141	           0xfb600	                   movzx eax, byte [rax]	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4000144	            0x84c0	                             test al, al	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4000146	     0xf84b7000000	                            je 0x4000203	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400014c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x4000150	          0x4889c7	                            mov rdi, rax	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x4000153	      0xe800000000	                          call 0x4000158	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x4000158	          0x83c003	                              add eax, 3	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400015b	          0x8945b4	             mov dword [rbp - 0x4c], eax	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400015e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4000161	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4000165	            0x89d6	                            mov esi, edx	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4000167	          0x4889c7	                            mov rdi, rax	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400016a	      0xe800000000	                          call 0x400016f	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400016f	          0x83f801	                              cmp eax, 1	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4000172	     0xf858b000000	                           jne 0x4000203	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4000178	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400017b	            0x85c0	                           test eax, eax	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400017d	            0x7e2d	                           jle 0x40001ac	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400017f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x4000183	          0x4889d0	                            mov rax, rdx	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x4000186	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x400018d	          0x4889c6	                            mov rsi, rax	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x4000190	      0xb800000000	                              mov eax, 0	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x4000195	          0x4889f7	                            mov rdi, rsi	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x4000198	            0xf2ae	              repne scasb al, byte [rdi]	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x400019a	          0x4889c8	                            mov rax, rcx	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x400019d	          0x48f7d0	                                 not rax	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x40001a0	        0x4883e801	                              sub rax, 1	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x40001a4	          0x4801d0	                            add rax, rdx	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x40001a7	      0x66c7002c00	                    mov word [rax], 0x2c	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x40001ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3399	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_14
0x40001b0	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3399	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_14
0x40001b4	          0x4889d6	                            mov rsi, rdx	      3399	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_14
0x40001b7	          0x4889c7	                            mov rdi, rax	      3399	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_14
0x40001ba	      0xe800000000	                          call 0x40001bf	      3399	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_14
0x40001bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x40001c3	          0x4889c7	                            mov rdi, rax	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x40001c6	      0xe800000000	                          call 0x40001cb	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x40001cb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001cf	          0x4889d0	                            mov rax, rdx	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001d2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001d9	          0x4889c6	                            mov rsi, rax	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001dc	      0xb800000000	                              mov eax, 0	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001e1	          0x4889f7	                            mov rdi, rsi	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001e4	            0xf2ae	              repne scasb al, byte [rdi]	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001e6	          0x4889c8	                            mov rax, rcx	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001e9	          0x48f7d0	                                 not rax	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001ec	        0x4883e801	                              sub rax, 1	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001f0	          0x4801d0	                            add rax, rdx	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001f3	      0x66c7002a00	                    mov word [rax], 0x2a	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x40001f8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x40001fb	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x40001fe	             0x1d0	                            add eax, edx	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x4000200	          0x8945e0	             mov dword [rbp - 0x20], eax	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x4000203	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x4000206	            0x85c0	                           test eax, eax	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x4000208	            0x740c	                            je 0x4000216	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x400020a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x400020e	          0x4889c7	                            mov rdi, rax	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x4000211	      0xe800000000	                          call 0x4000216	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x4000216	      0x488345c001	               add qword [rbp - 0x40], 1	      3378	option.c	FUNCTION_1	FOR_1
0x400021b	      0x48837dc003	               cmp qword [rbp - 0x40], 3	      3378	option.c	FUNCTION_1	FOR_1
0x4000220	     0xf86c9feffff	                           jbe 0x40000ef	      3378	option.c	FUNCTION_1	FOR_1
0x4000226	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3408	option.c	FUNCTION_1	IF_8
0x400022a	          0x4885c0	                           test rax, rax	      3408	option.c	FUNCTION_1	IF_8
0x400022d	            0x741d	                            je 0x400024c	      3408	option.c	FUNCTION_1	IF_8
0x400022f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3410	option.c	FUNCTION_1	IF_8	CALL_18
0x4000233	          0x4889c6	                            mov rsi, rax	      3410	option.c	FUNCTION_1	IF_8	CALL_18
0x4000236	      0xbf00000000	                              mov edi, 0	      3410	option.c	FUNCTION_1	IF_8	CALL_18
0x400023b	      0xe800000000	                          call 0x4000240	      3410	option.c	FUNCTION_1	IF_8	CALL_18
0x4000240	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x4000244	          0x4889c7	                            mov rdi, rax	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x4000247	      0xe800000000	                          call 0x400024c	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x400024c	      0xbf00000000	                              mov edi, 0	      3419	option.c	FUNCTION_1	CALL_20
0x4000251	      0xe84eb30000	                     call sym.findoption	      3419	option.c	FUNCTION_1	CALL_20
0x4000256	          0x8945a8	             mov dword [rbp - 0x58], eax	      3419	option.c	FUNCTION_1	CALL_20
0x4000259	        0x837da800	               cmp dword [rbp - 0x58], 0	      3420	option.c	FUNCTION_1	IF_9
0x400025d	            0x7854	                            js 0x40002b3	      3420	option.c	FUNCTION_1	IF_9
0x400025f	      0xbf00000000	                              mov edi, 0	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x4000264	      0xe800000000	                          call 0x4000269	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x4000269	          0x48d1e8	                              shr rax, 1	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x400026c	        0x488945c0	             mov qword [rbp - 0x40], rax	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x4000270	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x4000274	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x4000277	          0x4863d2	                         movsxd rdx, edx	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400027a	        0x48c1e206	                              shl rdx, 6	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400027e	    0x4881c2000000	                              add rdx, 0	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x4000285	          0x488902	                    mov qword [rdx], rax	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x4000288	      0xbf00000000	                              mov edi, 0	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x400028d	      0xe812b30000	                     call sym.findoption	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x4000292	          0x8945a8	             mov dword [rbp - 0x58], eax	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x4000295	        0x837da800	               cmp dword [rbp - 0x58], 0	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x4000299	            0x7818	                            js 0x40002b3	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x400029b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x400029f	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x40002a2	          0x4863d2	                         movsxd rdx, edx	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x40002a5	        0x48c1e206	                              shl rdx, 6	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x40002a9	    0x4881c2000000	                              add rdx, 0	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x40002b0	          0x488902	                    mov qword [rdx], rax	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x40002b3	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      3456	option.c	FUNCTION_1
0x40002ba	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3459	option.c	FUNCTION_1	CALL_24
0x40002be	          0x4889c6	                            mov rsi, rax	      3459	option.c	FUNCTION_1	CALL_24
0x40002c1	      0xbf00000000	                              mov edi, 0	      3459	option.c	FUNCTION_1	CALL_24
0x40002c6	      0xe800000000	                          call 0x40002cb	      3459	option.c	FUNCTION_1	CALL_24
0x40002cb	        0x488945c8	             mov qword [rbp - 0x38], rax	      3459	option.c	FUNCTION_1	CALL_24
0x40002cf	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3460	option.c	FUNCTION_1	IF_13
0x40002d4	     0xf847a010000	                            je 0x4000454	      3460	option.c	FUNCTION_1	IF_13
0x40002da	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002de	          0x4889c7	                            mov rdi, rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002e1	      0xe800000000	                          call 0x40002e6	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002e6	             0x1c0	                            add eax, eax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002e8	          0x83c002	                              add eax, 2	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002eb	            0x89c7	                            mov edi, eax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002ed	      0xe800000000	                          call 0x40002f2	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002f2	        0x488945d0	             mov qword [rbp - 0x30], rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x40002f6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x40002fb	     0xf8440010000	                            je 0x4000441	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x4000301	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3465	option.c	FUNCTION_1	IF_13	IF_14
0x4000305	          0xc6002c	                    mov byte [rax], 0x2c	      3465	option.c	FUNCTION_1	IF_13	IF_14
0x4000308	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      3466	option.c	FUNCTION_1	IF_13	IF_14
0x400030f	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4000316	      0xe99d000000	                           jmp 0x40003b8	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400031b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400031e	          0x4863d0	                         movsxd rdx, eax	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x4000321	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x4000325	          0x4801d0	                            add rax, rdx	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x4000328	           0xfb600	                   movzx eax, byte [rax]	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400032b	           0xfb6c0	                           movzx eax, al	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400032e	            0x89c7	                            mov edi, eax	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x4000330	      0xe800000000	                          call 0x4000335	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x4000335	            0x85c0	                           test eax, eax	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x4000337	            0x7418	                            je 0x4000351	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x4000339	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400033c	          0x8d5001	                      lea edx, [rax + 1]	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400033f	          0x8955b0	             mov dword [rbp - 0x50], edx	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x4000342	          0x4863d0	                         movsxd rdx, eax	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x4000345	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x4000349	          0x4801d0	                            add rax, rdx	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400034c	          0xc6002c	                    mov byte [rax], 0x2c	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400034f	            0xeb63	                           jmp 0x40003b4	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x4000351	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000354	          0x4863d0	                         movsxd rdx, eax	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000357	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400035b	          0x4801d0	                            add rax, rdx	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400035e	           0xfb600	                   movzx eax, byte [rax]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000361	            0x3c20	                            cmp al, 0x20	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000363	            0x7414	                            je 0x4000379	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000365	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000368	          0x4863d0	                         movsxd rdx, eax	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400036b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400036f	          0x4801d0	                            add rax, rdx	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000372	           0xfb600	                   movzx eax, byte [rax]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000375	            0x3c2c	                            cmp al, 0x2c	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000377	            0x7516	                           jne 0x400038f	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000379	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400037c	          0x8d5001	                      lea edx, [rax + 1]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400037f	          0x8955b0	             mov dword [rbp - 0x50], edx	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000382	          0x4863d0	                         movsxd rdx, eax	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000385	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4000389	          0x4801d0	                            add rax, rdx	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400038c	          0xc6005c	                    mov byte [rax], 0x5c	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400038f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x4000392	          0x8d5001	                      lea edx, [rax + 1]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x4000395	          0x8955b0	             mov dword [rbp - 0x50], edx	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x4000398	          0x4863d0	                         movsxd rdx, eax	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400039b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400039f	          0x4801c2	                            add rdx, rax	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40003a2	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40003a5	          0x4863c8	                         movsxd rcx, eax	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40003a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40003ac	          0x4801c8	                            add rax, rcx	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40003af	           0xfb600	                   movzx eax, byte [rax]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40003b2	            0x8802	                      mov byte [rdx], al	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40003b4	        0x8345ac01	               add dword [rbp - 0x54], 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003b8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003bb	          0x4863d0	                         movsxd rdx, eax	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003c2	          0x4801d0	                            add rax, rdx	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003c5	           0xfb600	                   movzx eax, byte [rax]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003c8	            0x84c0	                             test al, al	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003ca	     0xf854bffffff	                           jne 0x400031b	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40003d0	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x40003d3	          0x4863d0	                         movsxd rdx, eax	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x40003d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x40003da	          0x4801d0	                            add rax, rdx	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x40003dd	          0xc60000	                       mov byte [rax], 0	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x40003e0	      0xbf00000000	                              mov edi, 0	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x40003e5	      0xe8bab10000	                     call sym.findoption	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x40003ea	          0x8945a8	             mov dword [rbp - 0x58], eax	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x40003ed	        0x837da800	               cmp dword [rbp - 0x58], 0	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40003f1	            0x7842	                            js 0x4000435	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40003f3	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40003f6	            0x4898	                                    cdqe	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40003f8	        0x48c1e006	                              shl rax, 6	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40003fc	    0x488d90000000	                          lea rdx, [rax]	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000403	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000407	          0x488902	                    mov qword [rdx], rax	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400040a	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400040d	            0x4898	                                    cdqe	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400040f	        0x48c1e006	                              shl rax, 6	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000413	    0x480500000000	                              add rax, 0	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000419	          0x488b00	                    mov rax, qword [rax]	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400041c	             0xc80	                             or al, 0x80	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400041e	          0x4889c2	                            mov rdx, rax	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000421	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000424	            0x4898	                                    cdqe	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000426	        0x48c1e006	                              shl rax, 6	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400042a	    0x480500000000	                              add rax, 0	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000430	          0x488910	                    mov qword [rax], rdx	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000433	            0xeb0c	                           jmp 0x4000441	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4000435	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x4000439	          0x4889c7	                            mov rdi, rax	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x400043c	      0xe800000000	                          call 0x4000441	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x4000441	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x4000444	            0x85c0	                           test eax, eax	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x4000446	            0x740c	                            je 0x4000454	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x4000448	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x400044c	          0x4889c7	                            mov rdi, rax	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x400044f	      0xe800000000	                          call 0x4000454	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x4000454	      0xbe00000000	                              mov esi, 0	      3519	option.c	FUNCTION_1	CALL_32
0x4000459	      0xbf00000000	                              mov edi, 0	      3519	option.c	FUNCTION_1	CALL_32
0x400045e	      0xe800000000	                          call 0x4000463	      3519	option.c	FUNCTION_1	CALL_32
0x4000463	      0xbf00000000	                              mov edi, 0	      3537	option.c	FUNCTION_1	CALL_33
0x4000468	      0xe843060000	            call sym.set_options_default	      3537	option.c	FUNCTION_1	CALL_33
0x400046d	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      3540	option.c	FUNCTION_1	IF_19
0x4000471	            0x7468	                            je 0x40004db	      3540	option.c	FUNCTION_1	IF_19
0x4000473	      0xbf00000000	                              mov edi, 0	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x4000478	      0xe827b10000	                     call sym.findoption	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x400047d	          0x8945a8	             mov dword [rbp - 0x58], eax	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x4000480	        0x837da800	               cmp dword [rbp - 0x58], 0	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x4000484	            0x7821	                            js 0x40004a7	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x4000486	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x4000489	            0x4898	                                    cdqe	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400048b	        0x48c1e006	                              shl rax, 6	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400048f	    0x480500000000	                              add rax, 0	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x4000495	    0x48c700000000	                      mov qword [rax], 0	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400049c	    0x48c705000000	               mov qword [0x040004a7], 0	      3546	option.c	FUNCTION_1	IF_19	IF_20
0x40004a7	      0xbf00000000	                              mov edi, 0	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x40004ac	      0xe8f3b00000	                     call sym.findoption	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x40004b1	          0x8945a8	             mov dword [rbp - 0x58], eax	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x40004b4	        0x837da800	               cmp dword [rbp - 0x58], 0	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x40004b8	            0x7821	                            js 0x40004db	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x40004ba	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x40004bd	            0x4898	                                    cdqe	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x40004bf	        0x48c1e006	                              shl rax, 6	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x40004c3	    0x480500000000	                              add rax, 0	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x40004c9	    0x48c700000000	                      mov qword [rax], 0	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x40004d0	    0x48c705000000	               mov qword [0x040004db], 0	      3552	option.c	FUNCTION_1	IF_19	IF_21
0x40004db	    0x8b0500000000	            mov eax, dword [0x040004e1] 	      3558	option.c	FUNCTION_1	IF_22
0x40004e1	            0x85c0	                           test eax, eax	      3558	option.c	FUNCTION_1	IF_22
0x40004e3	            0x7419	                            je 0x40004fe	      3558	option.c	FUNCTION_1	IF_22
0x40004e5	      0xb900000000	                              mov ecx, 0	      3559	option.c	FUNCTION_1	CALL_36
0x40004ea	      0xba00000000	                              mov edx, 0	      3559	option.c	FUNCTION_1	CALL_36
0x40004ef	      0xbe00000000	                              mov esi, 0	      3559	option.c	FUNCTION_1	CALL_36
0x40004f4	      0xbf00000000	                              mov edi, 0	      3559	option.c	FUNCTION_1	CALL_36
0x40004f9	      0xe800000000	                          call 0x40004fe	      3559	option.c	FUNCTION_1	CALL_36
0x40004fe	    0x488b05000000	            mov rax, qword [0x04000505] 	      3562	option.c	FUNCTION_1
0x4000505	    0xc780a8120000	            mov dword [rax + 0x12a8], 1 	      3562	option.c	FUNCTION_1
0x400050f	    0x488b05000000	            mov rax, qword [0x04000516] 	      3563	option.c	FUNCTION_1
0x4000516	    0xc78018160000	   mov dword [rax + 0x1618], 0xffffffff 	      3563	option.c	FUNCTION_1
0x4000520	    0x488b05000000	            mov rax, qword [0x04000527] 	      3564	option.c	FUNCTION_1
0x4000527	    0x48c780481600	mov qword [rax + 0x1648], 0xfffffffffffe1dc0 	      3564	option.c	FUNCTION_1
0x4000532	    0x488b05000000	            mov rax, qword [0x04000539] 	      3565	option.c	FUNCTION_1	CALL_37
0x4000539	          0x4889c7	                            mov rdi, rax	      3565	option.c	FUNCTION_1	CALL_37
0x400053c	      0xe800000000	                          call 0x4000541	      3565	option.c	FUNCTION_1	CALL_37
0x4000541	    0x488b05000000	            mov rax, qword [0x04000548] 	      3566	option.c	FUNCTION_1	CALL_38
0x4000548	          0x4889c7	                            mov rdi, rax	      3566	option.c	FUNCTION_1	CALL_38
0x400054b	      0xe800000000	                          call 0x4000550	      3566	option.c	FUNCTION_1	CALL_38
0x4000550	      0xe800000000	                          call 0x4000555	      3567	option.c	FUNCTION_1	CALL_39
0x4000555	      0xe8f23b0000	                 call sym.didset_options	      3570	option.c	FUNCTION_1	CALL_40
0x400055a	      0xe800000000	                          call 0x400055f	      3575	option.c	FUNCTION_1	CALL_41
0x400055f	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x4000566	      0xe922010000	                           jmp 0x400068d	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400056b	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x400056e	            0x4898	                                    cdqe	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x4000570	        0x48c1e006	                              shl rax, 6	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x4000574	    0x480500000000	                              add rax, 0	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x400057a	          0x488b00	                    mov rax, qword [rax]	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x400057d	      0x2500001000	                       and eax, 0x100000	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x4000582	          0x4885c0	                           test rax, rax	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x4000585	            0x743a	                            je 0x40005c1	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x4000587	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400058a	            0x4898	                                    cdqe	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400058c	        0x48c1e006	                              shl rax, 6	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x4000590	    0x480500000000	                              add rax, 0	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x4000596	          0x488b00	                    mov rax, qword [rax]	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x4000599	          0x4885c0	                           test rax, rax	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400059c	            0x7423	                            je 0x40005c1	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400059e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005a1	            0x4898	                                    cdqe	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005a3	        0x48c1e006	                              shl rax, 6	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005a7	    0x480500000000	                              add rax, 0	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005ad	          0x488b00	                    mov rax, qword [rax]	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005b0	          0x488b00	                    mov rax, qword [rax]	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005b3	          0x4889c7	                            mov rdi, rax	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005b6	      0xe800000000	                          call 0x40005bb	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005bb	        0x488945b8	             mov qword [rbp - 0x48], rax	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005bf	            0xeb13	                           jmp 0x40005d4	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x40005c1	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x40005c4	      0xbe00000000	                              mov esi, 0	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x40005c9	            0x89c7	                            mov edi, eax	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x40005cb	      0xe85c3a0000	                  call sym.option_expand	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x40005d0	        0x488945b8	             mov qword [rbp - 0x48], rax	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x40005d4	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005d9	     0xf84aa000000	                            je 0x4000689	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005e3	          0x4889c7	                            mov rdi, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005e6	      0xe800000000	                          call 0x40005eb	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005eb	        0x488945b8	             mov qword [rbp - 0x48], rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005ef	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005f4	     0xf848f000000	                            je 0x4000689	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x40005fa	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x40005fd	            0x4898	                                    cdqe	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x40005ff	        0x48c1e006	                              shl rax, 6	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x4000603	    0x480500000000	                              add rax, 0	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x4000609	          0x488b00	                    mov rax, qword [rax]	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x400060c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x4000610	          0x488910	                    mov qword [rax], rdx	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x4000613	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x4000616	            0x4898	                                    cdqe	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x4000618	        0x48c1e006	                              shl rax, 6	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400061c	    0x480500000000	                              add rax, 0	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x4000622	          0x488b00	                    mov rax, qword [rax]	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x4000625	      0x2580000000	                           and eax, 0x80	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400062a	          0x4885c0	                           test rax, rax	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400062d	            0x741a	                            je 0x4000649	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400062f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4000632	            0x4898	                                    cdqe	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4000634	        0x48c1e006	                              shl rax, 6	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4000638	    0x480500000000	                              add rax, 0	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400063e	          0x488b00	                    mov rax, qword [rax]	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4000641	          0x4889c7	                            mov rdi, rax	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4000644	      0xe800000000	                          call 0x4000649	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4000649	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x400064c	            0x4898	                                    cdqe	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x400064e	        0x48c1e006	                              shl rax, 6	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x4000652	    0x488d90000000	                          lea rdx, [rax]	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x4000659	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x400065d	          0x488902	                    mov qword [rdx], rax	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x4000660	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000663	            0x4898	                                    cdqe	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000665	        0x48c1e006	                              shl rax, 6	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000669	    0x480500000000	                              add rax, 0	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x400066f	          0x488b00	                    mov rax, qword [rax]	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000672	             0xc80	                             or al, 0x80	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000674	          0x4889c2	                            mov rdx, rax	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000677	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x400067a	            0x4898	                                    cdqe	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x400067c	        0x48c1e006	                              shl rax, 6	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000680	    0x480500000000	                              add rax, 0	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000686	          0x488910	                    mov qword [rax], rdx	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x4000689	        0x8345a801	               add dword [rbp - 0x58], 1	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400068d	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x4000690	            0x4898	                                    cdqe	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x4000692	        0x48c1e006	                              shl rax, 6	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x4000696	    0x480500000000	                              add rax, 0	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400069c	          0x4889c7	                            mov rdi, rax	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400069f	      0xe8cdc60000	                   call sym.istermoption	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x40006a4	            0x85c0	                           test eax, eax	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x40006a6	     0xf84bffeffff	                            je 0x400056b	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x40006ac	    0x488b05000000	            mov rax, qword [0x040006b3] 	      3609	option.c	FUNCTION_1	CALL_47
0x40006b3	          0x4889c7	                            mov rdi, rax	      3609	option.c	FUNCTION_1	CALL_47
0x40006b6	      0xe800000000	                          call 0x40006bb	      3609	option.c	FUNCTION_1	CALL_47
0x40006bb	      0xbf00000000	                              mov edi, 0	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x40006c0	      0xe800000000	                          call 0x40006c5	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x40006c5	          0x4885c0	                           test rax, rax	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x40006c8	            0x7419	                            je 0x40006e3	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x40006ca	      0xb900000000	                              mov ecx, 0	      3619	option.c	FUNCTION_1	CALL_49
0x40006cf	      0xba00000000	                              mov edx, 0	      3619	option.c	FUNCTION_1	CALL_49
0x40006d4	      0xbe01000000	                              mov esi, 1	      3619	option.c	FUNCTION_1	CALL_49
0x40006d9	      0xbf00000000	                              mov edi, 0	      3619	option.c	FUNCTION_1	CALL_49
0x40006de	      0xe800000000	                          call 0x40006e3	      3619	option.c	FUNCTION_1	CALL_49
0x40006e3	      0xe8183c0000	                call sym.didset_options2	      3622	option.c	FUNCTION_1	CALL_50
0x40006e8	      0xe800000000	                          call 0x40006ed	      3662	option.c	FUNCTION_1	CALL_64
0x40006ed	        0x488945b8	             mov qword [rbp - 0x48], rax	      3662	option.c	FUNCTION_1	CALL_64
0x40006f1	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3663	option.c	FUNCTION_1	IF_32
0x40006f6	     0xf84c8000000	                            je 0x40007c4	      3663	option.c	FUNCTION_1	IF_32
0x40006fc	    0x488b05000000	            mov rax, qword [0x04000703] 	      3669	option.c	FUNCTION_1	IF_32
0x4000703	        0x488945d8	             mov qword [rbp - 0x28], rax	      3669	option.c	FUNCTION_1	IF_32
0x4000707	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3670	option.c	FUNCTION_1	IF_32
0x400070b	    0x488905000000	            mov qword [0x04000712], rax 	      3670	option.c	FUNCTION_1	IF_32
0x4000712	    0x488b05000000	            mov rax, qword [0x04000719] 	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4000719	      0xbe00000000	                              mov esi, 0	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400071e	          0x4889c7	                            mov rdi, rax	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4000721	      0xe800000000	                          call 0x4000726	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4000726	            0x85c0	                           test eax, eax	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4000728	            0x751d	                           jne 0x4000747	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400072a	      0xbf00000000	                              mov edi, 0	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400072f	      0xe800000000	                          call 0x4000734	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x4000734	    0x488905000000	            mov qword [0x0400073b], rax 	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400073b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x400073f	          0x4889c7	                            mov rdi, rax	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x4000742	      0xe800000000	                          call 0x4000747	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x4000747	      0xe800000000	                          call 0x400074c	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400074c	          0x4885c0	                           test rax, rax	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400074f	            0x7559	                           jne 0x40007aa	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x4000751	      0xbf00000000	                              mov edi, 0	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x4000756	      0xe849ae0000	                     call sym.findoption	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x400075b	          0x8945a8	             mov dword [rbp - 0x58], eax	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x400075e	        0x837da800	               cmp dword [rbp - 0x58], 0	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000762	            0x7860	                            js 0x40007c4	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000764	    0x488b05000000	            mov rax, qword [0x0400076b] 	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400076b	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400076e	          0x4863d2	                         movsxd rdx, edx	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000771	        0x48c1e206	                              shl rdx, 6	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000775	    0x4881c2000000	                              add rdx, 0	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400077c	          0x488902	                    mov qword [rdx], rax	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400077f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000782	            0x4898	                                    cdqe	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000784	        0x48c1e006	                              shl rax, 6	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000788	    0x480500000000	                              add rax, 0	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400078e	          0x488b00	                    mov rax, qword [rax]	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000791	             0xc80	                             or al, 0x80	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000793	          0x4889c2	                            mov rdx, rax	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000796	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4000799	            0x4898	                                    cdqe	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400079b	        0x48c1e006	                              shl rax, 6	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400079f	    0x480500000000	                              add rax, 0	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x40007a5	          0x488910	                    mov qword [rax], rdx	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x40007a8	            0xeb1a	                           jmp 0x40007c4	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x40007aa	    0x488b05000000	            mov rax, qword [0x040007b1] 	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_85
0x40007b1	          0x4889c7	                            mov rdi, rax	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_85
0x40007b4	      0xe800000000	                          call 0x40007b9	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_85
0x40007b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3744	option.c	FUNCTION_1	IF_32	ELSE_9
0x40007bd	    0x488905000000	            mov qword [0x040007c4], rax 	      3744	option.c	FUNCTION_1	IF_32	ELSE_9
0x40007c4	      0xe800000000	                          call 0x40007c9	      3751	option.c	FUNCTION_1	CALL_87
0x40007c9	          0x4889c7	                            mov rdi, rax	      3751	option.c	FUNCTION_1	CALL_87
0x40007cc	      0xe800000000	                          call 0x40007d1	      3751	option.c	FUNCTION_1	CALL_87
0x40007d1	              0x90	                                     nop	      3753	option.c	FUNCTION_1
0x40007d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3753	option.c	FUNCTION_1
0x40007d6	    0x644833042528	                xor rax, qword fs:[0x28]	      3753	option.c	FUNCTION_1
0x40007df	            0x7405	                            je 0x40007e6	      3753	option.c	FUNCTION_1
0x40007e1	      0xe800000000	                          call 0x40007e6	      3753	option.c	FUNCTION_1
0x40007e6	              0xc9	                                   leave	      3753	option.c	FUNCTION_1
0x40007e7	              0xc3	                                     ret	      3753	option.c	FUNCTION_1
get_sw_value	ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	14
0x4011964	              0x55	                                push rbp	     12523	option.c	FUNCTION_113
0x4011965	          0x4889e5	                            mov rbp, rsp	     12523	option.c	FUNCTION_113
0x4011968	        0x48897df8	                mov qword [rbp - 8], rdi	     12523	option.c	FUNCTION_113
0x401196c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12524	option.c	FUNCTION_113
0x4011970	    0x488b80681500	          mov rax, qword [rax + 0x1568] 	     12524	option.c	FUNCTION_113
0x4011977	          0x4885c0	                           test rax, rax	     12524	option.c	FUNCTION_113
0x401197a	            0x740d	                            je 0x4011989	     12524	option.c	FUNCTION_113
0x401197c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12524	option.c	FUNCTION_113
0x4011980	    0x488b80681500	          mov rax, qword [rax + 0x1568] 	     12524	option.c	FUNCTION_113
0x4011987	            0xeb0b	                           jmp 0x4011994	     12524	option.c	FUNCTION_113
0x4011989	        0x488b45f8	                mov rax, qword [rbp - 8]	     12524	option.c	FUNCTION_113
0x401198d	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	     12524	option.c	FUNCTION_113
0x4011994	              0x5d	                                 pop rbp	     12525	option.c	FUNCTION_113
0x4011995	              0xc3	                                     ret	     12525	option.c	FUNCTION_113
set_option_scriptID_idx	ELSE,1:IF,4:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	65
0x400920f	              0x55	                                push rbp	      8102	option.c	FUNCTION_48
0x4009210	          0x4889e5	                            mov rbp, rsp	      8102	option.c	FUNCTION_48
0x4009213	          0x897dec	             mov dword [rbp - 0x14], edi	      8102	option.c	FUNCTION_48
0x4009216	          0x8975e8	             mov dword [rbp - 0x18], esi	      8102	option.c	FUNCTION_48
0x4009219	          0x8955e4	             mov dword [rbp - 0x1c], edx	      8102	option.c	FUNCTION_48
0x400921c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8103	option.c	FUNCTION_48
0x400921f	          0x83e006	                              and eax, 6	      8103	option.c	FUNCTION_48
0x4009222	            0x85c0	                           test eax, eax	      8103	option.c	FUNCTION_48
0x4009224	           0xf94c0	                                 sete al	      8103	option.c	FUNCTION_48
0x4009227	           0xfb6c0	                           movzx eax, al	      8103	option.c	FUNCTION_48
0x400922a	          0x8945f8	                mov dword [rbp - 8], eax	      8103	option.c	FUNCTION_48
0x400922d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8104	option.c	FUNCTION_48
0x4009230	            0x4898	                                    cdqe	      8104	option.c	FUNCTION_48
0x4009232	        0x48c1e006	                              shl rax, 6	      8104	option.c	FUNCTION_48
0x4009236	    0x480500000000	                              add rax, 0	      8104	option.c	FUNCTION_48
0x400923c	            0x8b00	                    mov eax, dword [rax]	      8104	option.c	FUNCTION_48
0x400923e	          0x8945fc	                mov dword [rbp - 4], eax	      8104	option.c	FUNCTION_48
0x4009241	        0x837df800	                  cmp dword [rbp - 8], 0	      8108	option.c	FUNCTION_48	IF_1
0x4009245	            0x7516	                           jne 0x400925d	      8108	option.c	FUNCTION_48	IF_1
0x4009247	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8108	option.c	FUNCTION_48	IF_1
0x400924a	          0x83e002	                              and eax, 2	      8108	option.c	FUNCTION_48	IF_1
0x400924d	            0x85c0	                           test eax, eax	      8108	option.c	FUNCTION_48	IF_1
0x400924f	            0x750c	                           jne 0x400925d	      8108	option.c	FUNCTION_48	IF_1
0x4009251	          0x8b45fc	                mov eax, dword [rbp - 4]	      8108	option.c	FUNCTION_48	IF_1
0x4009254	      0x2500600000	                         and eax, 0x6000	      8108	option.c	FUNCTION_48	IF_1
0x4009259	            0x85c0	                           test eax, eax	      8108	option.c	FUNCTION_48	IF_1
0x400925b	            0x7515	                           jne 0x4009272	      8108	option.c	FUNCTION_48	IF_1
0x400925d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8109	option.c	FUNCTION_48	IF_1
0x4009260	            0x4898	                                    cdqe	      8109	option.c	FUNCTION_48	IF_1
0x4009262	        0x48c1e006	                              shl rax, 6	      8109	option.c	FUNCTION_48	IF_1
0x4009266	    0x488d90000000	                          lea rdx, [rax]	      8109	option.c	FUNCTION_48	IF_1
0x400926d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8109	option.c	FUNCTION_48	IF_1
0x4009270	            0x8902	                    mov dword [rdx], eax	      8109	option.c	FUNCTION_48	IF_1
0x4009272	        0x837df800	                  cmp dword [rbp - 8], 0	      8110	option.c	FUNCTION_48	IF_2
0x4009276	            0x750a	                           jne 0x4009282	      8110	option.c	FUNCTION_48	IF_2
0x4009278	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8110	option.c	FUNCTION_48	IF_2
0x400927b	          0x83e004	                              and eax, 4	      8110	option.c	FUNCTION_48	IF_2
0x400927e	            0x85c0	                           test eax, eax	      8110	option.c	FUNCTION_48	IF_2
0x4009280	            0x745b	                            je 0x40092dd	      8110	option.c	FUNCTION_48	IF_2
0x4009282	          0x8b45fc	                mov eax, dword [rbp - 4]	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4009285	      0x2500400000	                         and eax, 0x4000	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x400928a	            0x85c0	                           test eax, eax	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x400928c	            0x7423	                            je 0x40092b1	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x400928e	    0x488b05000000	            mov rax, qword [0x04009295] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4009295	          0x8b55fc	                mov edx, dword [rbp - 4]	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4009298	    0x81e2ff0f0000	                          and edx, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400929e	          0x4863d2	                         movsxd rdx, edx	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40092a1	    0x488d8aa80400	                  lea rcx, [rdx + 0x4a8]	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40092a8	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40092ab	        0x8954880c	      mov dword [rax + rcx*4 + 0xc], edx	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40092af	            0xeb2c	                           jmp 0x40092dd	      8117	option.c	FUNCTION_48
0x40092b1	          0x8b45fc	                mov eax, dword [rbp - 4]	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092b4	      0x2500200000	                         and eax, 0x2000	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092b9	            0x85c0	                           test eax, eax	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092bb	            0x7420	                            je 0x40092dd	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092bd	    0x488b05000000	            mov rax, qword [0x040092c4] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092c4	          0x8b55fc	                mov edx, dword [rbp - 4]	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092c7	    0x81e2ff0f0000	                          and edx, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092cd	          0x4863d2	                         movsxd rdx, edx	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092d0	    0x488d8ab40000	                   lea rcx, [rdx + 0xb4]	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092d7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092da	          0x891488	            mov dword [rax + rcx*4], edx	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40092dd	              0x90	                                     nop	      8117	option.c	FUNCTION_48
0x40092de	              0x5d	                                 pop rbp	      8117	option.c	FUNCTION_48
0x40092df	              0xc3	                                     ret	      8117	option.c	FUNCTION_48
makefoldset	ELSE,0:IF,1:SWITCH,0:CALL,8:DO,0:WHILE,0:functions,0:FOR,0	93
0x400c671	              0x55	                                push rbp	     10165	option.c	FUNCTION_65
0x400c672	          0x4889e5	                            mov rbp, rsp	     10165	option.c	FUNCTION_65
0x400c675	        0x4883ec10	                           sub rsp, 0x10	     10165	option.c	FUNCTION_65
0x400c679	        0x48897df8	                mov qword [rbp - 8], rdi	     10165	option.c	FUNCTION_65
0x400c67d	    0x488b05000000	            mov rax, qword [0x0400c684] 	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c684	    0x488d90f80100	                  lea rdx, [rax + 0x1f8]	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c68b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c68f	    0x41b800000000	                              mov r8d, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c695	          0x4889d1	                            mov rcx, rdx	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c698	      0xba00000000	                              mov edx, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c69d	      0xbe00000000	                              mov esi, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c6a2	          0x4889c7	                            mov rdi, rax	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c6a5	      0xe85f010000	                  call sym.put_setstring	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c6aa	            0x85c0	                           test eax, eax	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c6ac	     0xf8449010000	                            je 0x400c7fb	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400c6b2	    0x488b05000000	            mov rax, qword [0x0400c6b9] 	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6b9	    0x488d90180200	                  lea rdx, [rax + 0x218]	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6c0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6c4	    0x41b800000000	                              mov r8d, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6ca	          0x4889d1	                            mov rcx, rdx	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6cd	      0xba00000000	                              mov edx, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6d2	      0xbe00000000	                              mov esi, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6d7	          0x4889c7	                            mov rdi, rax	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6da	      0xe82a010000	                  call sym.put_setstring	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6df	            0x85c0	                           test eax, eax	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6e1	     0xf8414010000	                            je 0x400c7fb	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400c6e7	    0x488b05000000	            mov rax, qword [0x0400c6ee] 	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c6ee	    0x488d90280200	                  lea rdx, [rax + 0x228]	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c6f5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c6f9	    0x41b800000000	                              mov r8d, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c6ff	          0x4889d1	                            mov rcx, rdx	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c702	      0xba00000000	                              mov edx, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c707	      0xbe00000000	                              mov esi, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c70c	          0x4889c7	                            mov rdi, rax	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c70f	      0xe8f5000000	                  call sym.put_setstring	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c714	            0x85c0	                           test eax, eax	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c716	     0xf84df000000	                            je 0x400c7fb	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x400c71c	    0x488b05000000	            mov rax, qword [0x0400c723] 	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c723	    0x488d90e00100	                  lea rdx, [rax + 0x1e0]	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c72a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c72e	    0x41b800000000	                              mov r8d, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c734	          0x4889d1	                            mov rcx, rdx	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c737	      0xba00000000	                              mov edx, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c73c	      0xbe00000000	                              mov esi, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c741	          0x4889c7	                            mov rdi, rax	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c744	      0xe8c0000000	                  call sym.put_setstring	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c749	            0x85c0	                           test eax, eax	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c74b	     0xf84aa000000	                            je 0x400c7fb	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x400c751	    0x488b05000000	            mov rax, qword [0x0400c758] 	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c758	    0x488d90e80100	                  lea rdx, [rax + 0x1e8]	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c75f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c763	          0x4889d1	                            mov rcx, rdx	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c766	      0xba00000000	                              mov edx, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c76b	      0xbe00000000	                              mov esi, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c770	          0x4889c7	                            mov rdi, rax	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c773	      0xe832020000	                     call sym.put_setnum	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c778	            0x85c0	                           test eax, eax	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c77a	            0x747f	                            je 0x400c7fb	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400c77c	    0x488b05000000	            mov rax, qword [0x0400c783] 	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c783	    0x488d90080200	                  lea rdx, [rax + 0x208]	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c78a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c78e	          0x4889d1	                            mov rcx, rdx	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c791	      0xba00000000	                              mov edx, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c796	      0xbe00000000	                              mov esi, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c79b	          0x4889c7	                            mov rdi, rax	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c79e	      0xe807020000	                     call sym.put_setnum	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c7a3	            0x85c0	                           test eax, eax	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c7a5	            0x7454	                            je 0x400c7fb	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400c7a7	    0x488b05000000	            mov rax, qword [0x0400c7ae] 	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7ae	    0x488d90100200	                  lea rdx, [rax + 0x210]	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7b5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7b9	          0x4889d1	                            mov rcx, rdx	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7bc	      0xba00000000	                              mov edx, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7c1	      0xbe00000000	                              mov esi, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7c6	          0x4889c7	                            mov rdi, rax	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7c9	      0xe8dc010000	                     call sym.put_setnum	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7ce	            0x85c0	                           test eax, eax	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7d0	            0x7429	                            je 0x400c7fb	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400c7d2	    0x488b05000000	            mov rax, qword [0x0400c7d9] 	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7d9	    0x8b90d4010000	           mov edx, dword [rax + 0x1d4] 	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7df	        0x488b45f8	                mov rax, qword [rbp - 8]	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7e3	            0x89d1	                            mov ecx, edx	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7e5	      0xba00000000	                              mov edx, 0	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7ea	      0xbe00000000	                              mov esi, 0	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7ef	          0x4889c7	                            mov rdi, rax	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7f2	      0xe8a4020000	                    call sym.put_setbool	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7f7	            0x85c0	                           test eax, eax	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7f9	            0x7507	                           jne 0x400c802	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400c7fb	      0xb800000000	                              mov eax, 0	     10180	option.c	FUNCTION_65	IF_1
0x400c800	            0xeb05	                           jmp 0x400c807	     10180	option.c	FUNCTION_65	IF_1
0x400c802	      0xb801000000	                              mov eax, 1	     10182	option.c	FUNCTION_65
0x400c807	              0xc9	                                   leave	     10183	option.c	FUNCTION_65
0x400c808	              0xc3	                                     ret	     10183	option.c	FUNCTION_65
ExpandSettings	ELSE,9:IF,24:SWITCH,0:CALL,19:DO,0:WHILE,0:functions,0:FOR,5	381
0x400fe65	              0x55	                                push rbp	     11547	option.c	FUNCTION_89
0x400fe66	          0x4889e5	                            mov rbp, rsp	     11547	option.c	FUNCTION_89
0x400fe69	              0x53	                                push rbx	     11547	option.c	FUNCTION_89
0x400fe6a	    0x4881ec880000	                           sub rsp, 0x88	     11547	option.c	FUNCTION_89
0x400fe71	        0x48897d88	             mov qword [rbp - 0x78], rdi	     11547	option.c	FUNCTION_89
0x400fe75	        0x48897580	             mov qword [rbp - 0x80], rsi	     11547	option.c	FUNCTION_89
0x400fe79	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	     11547	option.c	FUNCTION_89
0x400fe80	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	     11547	option.c	FUNCTION_89
0x400fe87	    0x64488b042528	                mov rax, qword fs:[0x28]	     11547	option.c	FUNCTION_89
0x400fe90	        0x488945e8	             mov qword [rbp - 0x18], rax	     11547	option.c	FUNCTION_89
0x400fe94	            0x31c0	                            xor eax, eax	     11547	option.c	FUNCTION_89
0x400fe96	    0xc74598000000	               mov dword [rbp - 0x68], 0	     11548	option.c	FUNCTION_89
0x400fe9d	    0xc7459c000000	               mov dword [rbp - 0x64], 0	     11549	option.c	FUNCTION_89
0x400fea4	    0xc745a8000000	               mov dword [rbp - 0x58], 0	     11552	option.c	FUNCTION_89
0x400feab	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11558	option.c	FUNCTION_89
0x400feaf	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	     11558	option.c	FUNCTION_89
0x400feb5	          0x8945b0	             mov dword [rbp - 0x50], eax	     11558	option.c	FUNCTION_89
0x400feb8	    0xc745ac000000	               mov dword [rbp - 0x54], 0	     11564	option.c	FUNCTION_89	FOR_1
0x400febf	      0xe914050000	                           jmp 0x40103d8	     11564	option.c	FUNCTION_89	FOR_1
0x400fec4	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11566	option.c	FUNCTION_89	FOR_1
0x400fec8	          0x8b55b0	             mov edx, dword [rbp - 0x50]	     11566	option.c	FUNCTION_89	FOR_1
0x400fecb	    0x8990a8000000	             mov dword [rax + 0xa8], edx	     11566	option.c	FUNCTION_89	FOR_1
0x400fed1	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400fed5	            0x8b00	                    mov eax, dword [rax]	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400fed7	          0x83f805	                              cmp eax, 5	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400feda	            0x7479	                            je 0x400ff55	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400fedc	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400fee3	            0xeb6a	                           jmp 0x400ff4f	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400fee5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400fee8	            0x4898	                                    cdqe	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400feea	    0x488b0cc50000	                  mov rcx, qword [rax*8]	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400fef2	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400fef6	      0xba00000000	                              mov edx, 0	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400fefb	          0x4889ce	                            mov rsi, rcx	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400fefe	          0x4889c7	                            mov rdi, rax	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400ff01	      0xe800000000	                          call 0x400ff06	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400ff06	            0x85c0	                           test eax, eax	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400ff08	            0x7441	                            je 0x400ff4b	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400ff0a	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ff0e	            0x7506	                           jne 0x400ff16	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ff10	        0x83459801	               add dword [rbp - 0x68], 1	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ff14	            0xeb35	                           jmp 0x400ff4b	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ff16	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff1d	          0x488b08	                    mov rcx, qword [rax]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff20	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff23	          0x8d5001	                      lea edx, [rax + 1]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff26	          0x8955a8	             mov dword [rbp - 0x58], edx	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff29	            0x4898	                                    cdqe	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff2b	        0x48c1e003	                              shl rax, 3	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff2f	        0x488d1c01	                    lea rbx, [rcx + rax]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff33	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff36	            0x4898	                                    cdqe	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff38	    0x488b04c50000	                  mov rax, qword [rax*8]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff40	          0x4889c7	                            mov rdi, rax	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff43	      0xe800000000	                          call 0x400ff48	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff48	          0x488903	                    mov qword [rbx], rax	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ff4b	        0x8345a401	               add dword [rbp - 0x5c], 1	     11570	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400ff4f	        0x837da401	               cmp dword [rbp - 0x5c], 1	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400ff53	            0x7e90	                           jle 0x400fee5	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400ff55	    0xc745a0000000	               mov dword [rbp - 0x60], 0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ff5c	      0xe98d010000	                           jmp 0x40100ee	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ff61	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400ff64	            0x4898	                                    cdqe	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400ff66	        0x48c1e006	                              shl rax, 6	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400ff6a	    0x480500000000	                              add rax, 0	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400ff70	          0x488b00	                    mov rax, qword [rax]	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400ff73	          0x4885c0	                           test rax, rax	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400ff76	     0xf8467010000	                            je 0x40100e3	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400ff7c	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff80	            0x8b00	                    mov eax, dword [rax]	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff82	          0x83f805	                              cmp eax, 5	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff85	            0x751e	                           jne 0x400ffa5	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff87	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff8a	            0x4898	                                    cdqe	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff8c	        0x48c1e006	                              shl rax, 6	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff90	    0x480500000000	                              add rax, 0	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff96	          0x488b00	                    mov rax, qword [rax]	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff99	          0x83e001	                              and eax, 1	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff9c	          0x4885c0	                           test rax, rax	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ff9f	     0xf8441010000	                            je 0x40100e6	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400ffa5	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400ffa8	            0x4898	                                    cdqe	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400ffaa	        0x48c1e006	                              shl rax, 6	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400ffae	    0x480500000000	                              add rax, 0	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400ffb4	          0x4889c7	                            mov rdi, rax	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400ffb7	      0xe8b5cdffff	                   call sym.istermoption	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400ffbc	          0x8945b4	             mov dword [rbp - 0x4c], eax	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400ffbf	        0x837db400	               cmp dword [rbp - 0x4c], 0	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400ffc3	            0x740a	                            je 0x400ffcf	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400ffc5	        0x837d9800	               cmp dword [rbp - 0x68], 0	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400ffc9	     0xf8f1a010000	                            jg 0x40100e9	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400ffcf	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     11590	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ffd6	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ffda	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ffde	      0xba00000000	                              mov edx, 0	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ffe3	          0x4889ce	                            mov rsi, rcx	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ffe6	          0x4889c7	                            mov rdi, rax	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ffe9	      0xe800000000	                          call 0x400ffee	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ffee	            0x85c0	                           test eax, eax	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400fff0	            0x7541	                           jne 0x4010033	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400fff2	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400fff5	            0x4898	                                    cdqe	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400fff7	        0x48c1e006	                              shl rax, 6	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400fffb	    0x480500000000	                              add rax, 0	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x4010001	          0x488b00	                    mov rax, qword [rax]	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x4010004	          0x4885c0	                           test rax, rax	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x4010007	            0x7433	                            je 0x401003c	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x4010009	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11594	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x401000c	            0x4898	                                    cdqe	     11594	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x401000e	        0x48c1e006	                              shl rax, 6	     11594	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x4010012	    0x480500000000	                              add rax, 0	     11594	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x4010018	          0x488b08	                    mov rcx, qword [rax]	     11594	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x401001b	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x401001f	      0xba00000000	                              mov edx, 0	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x4010024	          0x4889ce	                            mov rsi, rcx	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x4010027	          0x4889c7	                            mov rdi, rax	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x401002a	      0xe800000000	                          call 0x401002f	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x401002f	            0x85c0	                           test eax, eax	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x4010031	            0x7409	                            je 0x401003c	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x4010033	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11595	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x401003a	            0xeb5b	                           jmp 0x4010097	     11595	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x401003c	        0x837db400	               cmp dword [rbp - 0x4c], 0	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010040	            0x7455	                            je 0x4010097	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010042	        0xc645c03c	            mov byte [rbp - 0x40], 0x3c 	     11598	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010046	        0xc645c174	            mov byte [rbp - 0x3f], 0x74 	     11599	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x401004a	        0xc645c25f	            mov byte [rbp - 0x3e], 0x5f 	     11600	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x401004e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010052	         0xfb64002	               movzx eax, byte [rax + 2]	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010056	          0x8845c3	               mov byte [rbp - 0x3d], al	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010059	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x401005d	         0xfb64003	               movzx eax, byte [rax + 3]	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010061	          0x8845c4	               mov byte [rbp - 0x3c], al	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010064	        0xc645c53e	            mov byte [rbp - 0x3b], 0x3e 	     11603	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x4010068	        0xc645c600	                mov byte [rbp - 0x3a], 0	     11604	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x401006c	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x4010070	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x4010074	      0xba00000000	                              mov edx, 0	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x4010079	          0x4889ce	                            mov rsi, rcx	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x401007c	          0x4889c7	                            mov rdi, rax	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x401007f	      0xe800000000	                          call 0x4010084	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x4010084	            0x85c0	                           test eax, eax	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x4010086	            0x740f	                            je 0x4010097	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x4010088	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11607	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x401008f	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x4010093	        0x488945b8	             mov qword [rbp - 0x48], rax	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x4010097	        0x837da400	               cmp dword [rbp - 0x5c], 0	     11611	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10
0x401009b	            0x744d	                            je 0x40100ea	     11611	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10
0x401009d	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x40100a1	            0x7512	                           jne 0x40100b5	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x40100a3	        0x837db400	               cmp dword [rbp - 0x4c], 0	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x40100a7	            0x7406	                            je 0x40100af	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x40100a9	        0x83459c01	               add dword [rbp - 0x64], 1	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x40100ad	            0xeb3b	                           jmp 0x40100ea	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x40100af	        0x83459801	               add dword [rbp - 0x68], 1	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x40100b3	            0xeb35	                           jmp 0x40100ea	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x40100b5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100bc	          0x488b08	                    mov rcx, qword [rax]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100bf	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100c2	          0x8d5001	                      lea edx, [rax + 1]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100c5	          0x8955a8	             mov dword [rbp - 0x58], edx	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100c8	            0x4898	                                    cdqe	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100ca	        0x48c1e003	                              shl rax, 3	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100ce	        0x488d1c01	                    lea rbx, [rcx + rax]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100d6	          0x4889c7	                            mov rdi, rax	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100d9	      0xe800000000	                          call 0x40100de	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100de	          0x488903	                    mov qword [rbx], rax	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100e1	            0xeb07	                           jmp 0x40100ea	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x40100e3	              0x90	                                     nop	     11583	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x40100e4	            0xeb04	                           jmp 0x40100ea	     11583	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x40100e6	              0x90	                                     nop	     11586	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x40100e7	            0xeb01	                           jmp 0x40100ea	     11586	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x40100e9	              0x90	                                     nop	     11589	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x40100ea	        0x8345a001	               add dword [rbp - 0x60], 1	     11580	option.c	FUNCTION_89	FOR_1	FOR_3
0x40100ee	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40100f1	            0x4898	                                    cdqe	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40100f3	        0x48c1e006	                              shl rax, 6	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40100f7	    0x480500000000	                              add rax, 0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40100fd	          0x488b00	                    mov rax, qword [rax]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4010100	        0x488945b8	             mov qword [rbp - 0x48], rax	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4010104	      0x48837db800	               cmp qword [rbp - 0x48], 0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4010109	     0xf8552feffff	                           jne 0x400ff61	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x401010f	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4010113	            0x8b00	                    mov eax, dword [rax]	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4010115	          0x83f805	                              cmp eax, 5	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4010118	     0xf843b020000	                            je 0x4010359	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x401011e	        0x837d9800	               cmp dword [rbp - 0x68], 0	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4010122	     0xf8531020000	                           jne 0x4010359	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4010128	    0xc745a0000000	               mov dword [rbp - 0x60], 0	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x401012f	      0xe938010000	                           jmp 0x401026c	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x4010134	      0xe800000000	                          call 0x4010139	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010139	          0x488b10	                    mov rdx, qword [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401013c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010140	           0xfb600	                   movzx eax, byte [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010143	           0xfb6c0	                           movzx eax, al	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010146	          0x4801c0	                            add rax, rax	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010149	          0x4801d0	                            add rax, rdx	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401014c	           0xfb700	                   movzx eax, word [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401014f	           0xfb7c0	                           movzx eax, ax	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010152	      0x2500400000	                         and eax, 0x4000	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010157	            0x85c0	                           test eax, eax	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010159	     0xf8408010000	                            je 0x4010267	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401015f	      0xe800000000	                          call 0x4010164	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010164	          0x488b00	                    mov rax, qword [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010167	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401016b	        0x4883c201	                              add rdx, 1	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401016f	           0xfb612	                   movzx edx, byte [rdx]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010172	           0xfb6d2	                           movzx edx, dl	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010175	          0x4801d2	                            add rdx, rdx	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010178	          0x4801d0	                            add rax, rdx	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401017b	           0xfb700	                   movzx eax, word [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401017e	           0xfb7c0	                           movzx eax, ax	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010181	      0x2500400000	                         and eax, 0x4000	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010186	            0x85c0	                           test eax, eax	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4010188	     0xf84d9000000	                            je 0x4010267	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x401018e	        0xc645c074	            mov byte [rbp - 0x40], 0x74 	     11634	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x4010192	        0xc645c15f	            mov byte [rbp - 0x3f], 0x5f 	     11635	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x4010196	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x401019a	           0xfb600	                   movzx eax, byte [rax]	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x401019d	          0x8845c2	               mov byte [rbp - 0x3e], al	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40101a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40101a4	         0xfb64001	               movzx eax, byte [rax + 1]	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40101a8	          0x8845c3	               mov byte [rbp - 0x3d], al	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40101ab	        0xc645c400	                mov byte [rbp - 0x3c], 0	     11638	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40101af	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     11640	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40101b6	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101ba	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101be	      0xba00000000	                              mov edx, 0	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101c3	          0x4889ce	                            mov rsi, rcx	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101c6	          0x4889c7	                            mov rdi, rax	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101c9	      0xe800000000	                          call 0x40101ce	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101ce	            0x85c0	                           test eax, eax	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101d0	            0x7409	                            je 0x40101db	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40101d2	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11642	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15
0x40101d9	            0xeb4c	                           jmp 0x4010227	     11642	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15
0x40101db	        0xc645c03c	            mov byte [rbp - 0x40], 0x3c 	     11645	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101df	        0xc645c174	            mov byte [rbp - 0x3f], 0x74 	     11646	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101e3	        0xc645c25f	            mov byte [rbp - 0x3e], 0x5f 	     11647	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101eb	           0xfb600	                   movzx eax, byte [rax]	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101ee	          0x8845c3	               mov byte [rbp - 0x3d], al	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101f1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101f5	         0xfb64001	               movzx eax, byte [rax + 1]	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101f9	          0x8845c4	               mov byte [rbp - 0x3c], al	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40101fc	        0xc645c53e	            mov byte [rbp - 0x3b], 0x3e 	     11650	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x4010200	        0xc645c600	                mov byte [rbp - 0x3a], 0	     11651	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x4010204	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x4010208	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x401020c	      0xba00000000	                              mov edx, 0	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x4010211	          0x4889ce	                            mov rsi, rcx	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x4010214	          0x4889c7	                            mov rdi, rax	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x4010217	      0xe800000000	                          call 0x401021c	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x401021c	            0x85c0	                           test eax, eax	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x401021e	            0x7407	                            je 0x4010227	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x4010220	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11654	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16
0x4010227	        0x837da400	               cmp dword [rbp - 0x5c], 0	     11656	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17
0x401022b	            0x743b	                            je 0x4010268	     11656	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17
0x401022d	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x4010231	            0x7506	                           jne 0x4010239	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x4010233	        0x83459c01	               add dword [rbp - 0x64], 1	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x4010237	            0xeb2f	                           jmp 0x4010268	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x4010239	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010240	          0x488b08	                    mov rcx, qword [rax]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010243	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010246	          0x8d5001	                      lea edx, [rax + 1]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010249	          0x8955a8	             mov dword [rbp - 0x58], edx	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x401024c	            0x4898	                                    cdqe	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x401024e	        0x48c1e003	                              shl rax, 3	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010252	        0x488d1c01	                    lea rbx, [rcx + rax]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010256	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x401025a	          0x4889c7	                            mov rdi, rax	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x401025d	      0xe800000000	                          call 0x4010262	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010262	          0x488903	                    mov qword [rbx], rax	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010265	            0xeb01	                           jmp 0x4010268	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4010267	              0x90	                                     nop	     11632	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14
0x4010268	        0x8345a001	               add dword [rbp - 0x60], 1	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x401026c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x401026f	            0x89c7	                            mov edi, eax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x4010271	      0xe800000000	                          call 0x4010276	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x4010276	        0x488945b8	             mov qword [rbp - 0x48], rax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x401027a	      0x48837db800	               cmp qword [rbp - 0x48], 0	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x401027f	     0xf85affeffff	                           jne 0x4010134	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x4010285	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4010289	    0xc780a8000000	               mov dword [rax + 0xa8], 1	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4010293	    0xc745a0000000	               mov dword [rbp - 0x60], 0	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x401029a	      0xe9a1000000	                           jmp 0x4010340	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x401029f	        0xc645c03c	            mov byte [rbp - 0x40], 0x3c 	     11671	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5
0x40102a3	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11672	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_15
0x40102a7	        0x4883c001	                              add rax, 1	     11672	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_15
0x40102ab	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	     11672	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_15
0x40102af	          0x4889d6	                            mov rsi, rdx	     11672	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_15
0x40102b2	          0x4889c7	                            mov rdi, rax	     11672	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_15
0x40102b5	      0xe800000000	                          call 0x40102ba	     11672	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_15
0x40102ba	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102be	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102c5	          0x4889c2	                            mov rdx, rax	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102c8	      0xb800000000	                              mov eax, 0	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102cd	          0x4889d7	                            mov rdi, rdx	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102d0	            0xf2ae	              repne scasb al, byte [rdi]	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102d2	          0x4889c8	                            mov rax, rcx	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102d5	          0x48f7d0	                                 not rax	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102d8	        0x488d50ff	                      lea rdx, [rax - 1]	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102dc	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102e0	          0x4801d0	                            add rax, rdx	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102e3	      0x66c7003e00	                    mov word [rax], 0x3e	     11673	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_16
0x40102e8	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40102ec	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40102f0	      0xba00000000	                              mov edx, 0	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40102f5	          0x4889ce	                            mov rsi, rcx	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40102f8	          0x4889c7	                            mov rdi, rax	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40102fb	      0xe800000000	                          call 0x4010300	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x4010300	            0x85c0	                           test eax, eax	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x4010302	            0x7438	                            je 0x401033c	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x4010304	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11677	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x4010308	            0x7506	                           jne 0x4010310	     11677	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x401030a	        0x83459c01	               add dword [rbp - 0x64], 1	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x401030e	            0xeb2c	                           jmp 0x401033c	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x4010310	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010317	          0x488b08	                    mov rcx, qword [rax]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x401031a	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x401031d	          0x8d5001	                      lea edx, [rax + 1]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010320	          0x8955a8	             mov dword [rbp - 0x58], edx	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010323	            0x4898	                                    cdqe	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010325	        0x48c1e003	                              shl rax, 3	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010329	        0x488d1c01	                    lea rbx, [rcx + rax]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x401032d	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010331	          0x4889c7	                            mov rdi, rax	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010334	      0xe800000000	                          call 0x4010339	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x4010339	          0x488903	                    mov qword [rbx], rax	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x401033c	        0x8345a001	               add dword [rbp - 0x60], 1	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x4010340	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x4010343	            0x89c7	                            mov edi, eax	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x4010345	      0xe800000000	                          call 0x401034a	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x401034a	        0x488945b8	             mov qword [rbp - 0x48], rax	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x401034e	      0x48837db800	               cmp qword [rbp - 0x48], 0	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x4010353	     0xf8546ffffff	                           jne 0x401029f	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x4010359	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x401035d	            0x7575	                           jne 0x40103d4	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x401035f	        0x837d9800	               cmp dword [rbp - 0x68], 0	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4010363	            0x7e0e	                           jle 0x4010373	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4010365	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11687	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x401036c	          0x8b5598	             mov edx, dword [rbp - 0x68]	     11687	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x401036f	            0x8910	                    mov dword [rax], edx	     11687	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4010371	            0xeb1b	                           jmp 0x401038e	     11687	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4010373	        0x837d9c00	               cmp dword [rbp - 0x64], 0	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4010377	            0x7e0e	                           jle 0x4010387	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4010379	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4010380	          0x8b559c	             mov edx, dword [rbp - 0x64]	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4010383	            0x8910	                    mov dword [rax], edx	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4010385	            0xeb07	                           jmp 0x401038e	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4010387	      0xb801000000	                              mov eax, 1	     11691	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_9
0x401038c	            0xeb59	                           jmp 0x40103e7	     11691	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_9
0x401038e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4010395	            0x8b00	                    mov eax, dword [rax]	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4010397	            0x4898	                                    cdqe	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4010399	          0xc1e003	                              shl eax, 3	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x401039c	            0x89c7	                            mov edi, eax	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x401039e	      0xe800000000	                          call 0x40103a3	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x40103a3	          0x4889c2	                            mov rdx, rax	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x40103a6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x40103ad	          0x488910	                    mov qword [rax], rdx	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x40103b0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103b7	          0x488b00	                    mov rax, qword [rax]	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103ba	          0x4885c0	                           test rax, rax	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103bd	            0x7515	                           jne 0x40103d4	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103bf	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11695	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103c6	    0x48c700000000	                      mov qword [rax], 0	     11695	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103cd	      0xb800000000	                              mov eax, 0	     11696	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103d2	            0xeb13	                           jmp 0x40103e7	     11696	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x40103d4	        0x8345ac01	               add dword [rbp - 0x54], 1	     11564	option.c	FUNCTION_89	FOR_1
0x40103d8	        0x837dac01	               cmp dword [rbp - 0x54], 1	     11564	option.c	FUNCTION_89	FOR_1
0x40103dc	     0xf8ee2faffff	                           jle 0x400fec4	     11564	option.c	FUNCTION_89	FOR_1
0x40103e2	      0xb801000000	                              mov eax, 1	     11700	option.c	FUNCTION_89
0x40103e7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	     11701	option.c	FUNCTION_89
0x40103eb	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     11701	option.c	FUNCTION_89
0x40103f4	            0x7405	                            je 0x40103fb	     11701	option.c	FUNCTION_89
0x40103f6	      0xe800000000	                          call 0x40103fb	     11701	option.c	FUNCTION_89
0x40103fb	    0x4881c4880000	                           add rsp, 0x88	     11701	option.c	FUNCTION_89
0x4010402	              0x5b	                                 pop rbx	     11701	option.c	FUNCTION_89
0x4010403	              0x5d	                                 pop rbp	     11701	option.c	FUNCTION_89
0x4010404	              0xc3	                                     ret	     11701	option.c	FUNCTION_89
langmap_init	ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,1	20
0x4010919	              0x55	                                push rbp	     11917	option.c	ELSE_1	FUNCTION_95
0x401091a	          0x4889e5	                            mov rbp, rsp	     11917	option.c	ELSE_1	FUNCTION_95
0x401091d	        0x4883ec10	                           sub rsp, 0x10	     11917	option.c	ELSE_1	FUNCTION_95
0x4010921	    0xc745fc000000	                  mov dword [rbp - 4], 0	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4010928	            0xeb14	                           jmp 0x401093e	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401092a	          0x8b45fc	                mov eax, dword [rbp - 4]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401092d	            0x89c2	                            mov edx, eax	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401092f	          0x8b45fc	                mov eax, dword [rbp - 4]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4010932	            0x4898	                                    cdqe	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4010934	    0x889000000000	                      mov byte [rax], dl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401093a	        0x8345fc01	                  add dword [rbp - 4], 1	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401093e	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4010945	            0x7ee3	                           jle 0x401092a	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4010947	      0xba08000000	                              mov edx, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x401094c	      0xbe08000000	                              mov esi, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x4010951	      0xbf00000000	                              mov edi, 0	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x4010956	      0xe800000000	                          call 0x401095b	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x401095b	              0x90	                                     nop	     11925	option.c	ELSE_1	FUNCTION_95
0x401095c	              0xc9	                                   leave	     11925	option.c	ELSE_1	FUNCTION_95
0x401095d	              0xc3	                                     ret	     11925	option.c	ELSE_1	FUNCTION_95
paste_option_changed	ELSE,1:IF,5:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,3:FOR,0	150
0x4010cc0	              0x55	                                push rbp	     12066	option.c	FUNCTION_99
0x4010cc1	          0x4889e5	                            mov rbp, rsp	     12066	option.c	FUNCTION_99
0x4010cc4	        0x4883ec10	                           sub rsp, 0x10	     12066	option.c	FUNCTION_99
0x4010cc8	    0x8b0500000000	            mov eax, dword [0x04010cce] 	     12079	option.c	FUNCTION_99	IF_1
0x4010cce	            0x85c0	                           test eax, eax	     12079	option.c	FUNCTION_99	IF_1
0x4010cd0	     0xf84f0010000	                            je 0x4010ec6	     12079	option.c	FUNCTION_99	IF_1
0x4010cd6	    0x8b0500000000	            mov eax, dword [0x04010cdc] 	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x4010cdc	            0x85c0	                           test eax, eax	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x4010cde	     0xf8508010000	                           jne 0x4010dec	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x4010ce4	    0x488b05000000	            mov rax, qword [0x04010ceb] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010ceb	        0x488945f8	                mov qword [rbp - 8], rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010cef	            0xeb76	                           jmp 0x4010d67	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010cf1	        0x488b45f8	                mov rax, qword [rbp - 8]	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010cf5	    0x488b90b81500	          mov rdx, qword [rax + 0x15b8] 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010cfc	        0x488b45f8	                mov rax, qword [rbp - 8]	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d00	    0x488990c81500	          mov qword [rax + 0x15c8], rdx 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d07	        0x488b45f8	                mov rax, qword [rbp - 8]	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d0b	    0x488b90d01500	          mov rdx, qword [rax + 0x15d0] 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d12	        0x488b45f8	                mov rax, qword [rbp - 8]	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d16	    0x488990e01500	          mov qword [rax + 0x15e0], rdx 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d1d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d21	    0x488b90781500	          mov rdx, qword [rax + 0x1578] 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d28	        0x488b45f8	                mov rax, qword [rbp - 8]	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d2c	    0x488990801500	          mov qword [rax + 0x1580], rdx 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d33	        0x488b45f8	                mov rax, qword [rbp - 8]	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d37	    0x8b90ec130000	          mov edx, dword [rax + 0x13ec] 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d3d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d41	    0x8990f0130000	          mov dword [rax + 0x13f0], edx 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d47	        0x488b45f8	                mov rax, qword [rbp - 8]	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d4b	    0x8b9078140000	          mov edx, dword [rax + 0x1478] 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d51	        0x488b45f8	                mov rax, qword [rbp - 8]	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d55	    0x899080140000	          mov dword [rax + 0x1480], edx 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x4010d5b	        0x488b45f8	                mov rax, qword [rbp - 8]	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010d5f	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010d63	        0x488945f8	                mov qword [rbp - 8], rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010d67	      0x48837df800	                  cmp qword [rbp - 8], 0	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010d6c	            0x7583	                           jne 0x4010cf1	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x4010d6e	    0x8b0500000000	            mov eax, dword [0x04010d74] 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x4010d74	    0x890500000000	            mov dword [0x04010d7a], eax 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x4010d7a	    0x8b0500000000	            mov eax, dword [0x04010d80] 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x4010d80	    0x890500000000	            mov dword [0x04010d86], eax 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x4010d86	    0x8b0500000000	            mov eax, dword [0x04010d8c] 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x4010d8c	    0x890500000000	            mov dword [0x04010d92], eax 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x4010d92	    0x8b0500000000	            mov eax, dword [0x04010d98] 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x4010d98	    0x890500000000	            mov dword [0x04010d9e], eax 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x4010d9e	    0x8b0500000000	            mov eax, dword [0x04010da4] 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x4010da4	    0x890500000000	            mov dword [0x04010daa], eax 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x4010daa	    0x8b0500000000	            mov eax, dword [0x04010db0] 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x4010db0	    0x890500000000	            mov dword [0x04010db6], eax 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x4010db6	    0x8b0500000000	            mov eax, dword [0x04010dbc] 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x4010dbc	    0x890500000000	            mov dword [0x04010dc2], eax 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x4010dc2	    0x488b05000000	            mov rax, qword [0x04010dc9] 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x4010dc9	    0x488905000000	            mov qword [0x04010dd0], rax 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x4010dd0	    0x488b05000000	            mov rax, qword [0x04010dd7] 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x4010dd7	    0x488905000000	            mov qword [0x04010dde], rax 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x4010dde	    0x488b05000000	            mov rax, qword [0x04010de5] 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x4010de5	    0x488905000000	            mov qword [0x04010dec], rax 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x4010dec	    0x488b05000000	            mov rax, qword [0x04010df3] 	     12120	option.c	FUNCTION_99	IF_1
0x4010df3	        0x488945f8	                mov qword [rbp - 8], rax	     12120	option.c	FUNCTION_99	IF_1
0x4010df7	            0xeb55	                           jmp 0x4010e4e	     12120	option.c	FUNCTION_99	IF_1
0x4010df9	        0x488b45f8	                mov rax, qword [rbp - 8]	     12122	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010dfd	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	     12122	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e08	        0x488b45f8	                mov rax, qword [rbp - 8]	     12123	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e0c	    0x48c780d01500	            mov qword [rax + 0x15d0], 0 	     12123	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e17	        0x488b45f8	                mov rax, qword [rbp - 8]	     12124	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e1b	    0x48c780781500	            mov qword [rax + 0x1578], 0 	     12124	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e26	        0x488b45f8	                mov rax, qword [rbp - 8]	     12125	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e2a	    0xc780ec130000	            mov dword [rax + 0x13ec], 0 	     12125	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e34	        0x488b45f8	                mov rax, qword [rbp - 8]	     12126	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e38	    0xc78078140000	            mov dword [rax + 0x1478], 0 	     12126	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x4010e42	        0x488b45f8	                mov rax, qword [rbp - 8]	     12120	option.c	FUNCTION_99	IF_1
0x4010e46	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12120	option.c	FUNCTION_99	IF_1
0x4010e4a	        0x488945f8	                mov qword [rbp - 8], rax	     12120	option.c	FUNCTION_99	IF_1
0x4010e4e	      0x48837df800	                  cmp qword [rbp - 8], 0	     12120	option.c	FUNCTION_99	IF_1
0x4010e53	            0x75a4	                           jne 0x4010df9	     12120	option.c	FUNCTION_99	IF_1
0x4010e55	    0xc70500000000	               mov dword [0x04010e5f], 0	     12130	option.c	FUNCTION_99	IF_1
0x4010e5f	    0xc70500000000	               mov dword [0x04010e69], 0	     12131	option.c	FUNCTION_99	IF_1
0x4010e69	    0x8b0500000000	            mov eax, dword [0x04010e6f] 	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x4010e6f	            0x85c0	                           test eax, eax	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x4010e71	            0x7405	                            je 0x4010e78	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x4010e73	      0xe800000000	                          call 0x4010e78	     12134	option.c	FUNCTION_99	IF_1	CALL_1
0x4010e78	    0xc70500000000	               mov dword [0x04010e82], 0	     12135	option.c	FUNCTION_99	IF_1
0x4010e82	    0xc70500000000	               mov dword [0x04010e8c], 0	     12138	option.c	FUNCTION_99	IF_1
0x4010e8c	    0xc70500000000	               mov dword [0x04010e96], 0	     12139	option.c	FUNCTION_99	IF_1
0x4010e96	    0x48c705000000	               mov qword [0x04010ea1], 0	     12142	option.c	FUNCTION_99	IF_1
0x4010ea1	    0x48c705000000	               mov qword [0x04010eac], 0	     12143	option.c	FUNCTION_99	IF_1
0x4010eac	    0x48c705000000	               mov qword [0x04010eb7], 0	     12144	option.c	FUNCTION_99	IF_1
0x4010eb7	    0xc70500000000	               mov dword [0x04010ec1], 0	     12145	option.c	FUNCTION_99	IF_1
0x4010ec1	      0xe92b010000	                           jmp 0x4010ff1	     12145	option.c	FUNCTION_99	IF_1
0x4010ec6	    0x8b0500000000	            mov eax, dword [0x04010ecc] 	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010ecc	            0x85c0	                           test eax, eax	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010ece	     0xf841d010000	                            je 0x4010ff1	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010ed4	    0x488b05000000	            mov rax, qword [0x04010edb] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010edb	        0x488945f8	                mov qword [rbp - 8], rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010edf	            0xeb76	                           jmp 0x4010f57	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010ee1	        0x488b45f8	                mov rax, qword [rbp - 8]	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010ee5	    0x488b90c81500	          mov rdx, qword [rax + 0x15c8] 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010eec	        0x488b45f8	                mov rax, qword [rbp - 8]	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010ef0	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010ef7	        0x488b45f8	                mov rax, qword [rbp - 8]	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010efb	    0x488b90e01500	          mov rdx, qword [rax + 0x15e0] 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f02	        0x488b45f8	                mov rax, qword [rbp - 8]	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f06	    0x488990d01500	          mov qword [rax + 0x15d0], rdx 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f0d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f11	    0x488b90801500	          mov rdx, qword [rax + 0x1580] 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f18	        0x488b45f8	                mov rax, qword [rbp - 8]	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f1c	    0x488990781500	          mov qword [rax + 0x1578], rdx 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f23	        0x488b45f8	                mov rax, qword [rbp - 8]	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f27	    0x8b90f0130000	          mov edx, dword [rax + 0x13f0] 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f2d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f31	    0x8990ec130000	          mov dword [rax + 0x13ec], edx 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f37	        0x488b45f8	                mov rax, qword [rbp - 8]	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f3b	    0x8b9080140000	          mov edx, dword [rax + 0x1480] 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f41	        0x488b45f8	                mov rax, qword [rbp - 8]	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f45	    0x899078140000	          mov dword [rax + 0x1478], edx 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x4010f4b	        0x488b45f8	                mov rax, qword [rbp - 8]	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f4f	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f53	        0x488945f8	                mov qword [rbp - 8], rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f57	      0x48837df800	                  cmp qword [rbp - 8], 0	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f5c	            0x7583	                           jne 0x4010ee1	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f5e	    0x8b0500000000	            mov eax, dword [0x04010f64] 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f64	    0x890500000000	            mov dword [0x04010f6a], eax 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f6a	    0x8b0500000000	            mov eax, dword [0x04010f70] 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f70	    0x890500000000	            mov dword [0x04010f76], eax 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f76	    0x8b1500000000	            mov edx, dword [0x04010f7c] 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x4010f7c	    0x8b0500000000	            mov eax, dword [0x04010f82] 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x4010f82	            0x39c2	                            cmp edx, eax	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x4010f84	            0x7405	                            je 0x4010f8b	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x4010f86	      0xe800000000	                          call 0x4010f8b	     12168	option.c	FUNCTION_99	ELSE_1	IF_4	CALL_2
0x4010f8b	    0x8b0500000000	            mov eax, dword [0x04010f91] 	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f91	    0x890500000000	            mov dword [0x04010f97], eax 	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f97	    0x8b0500000000	            mov eax, dword [0x04010f9d] 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010f9d	    0x890500000000	            mov dword [0x04010fa3], eax 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fa3	    0x8b0500000000	            mov eax, dword [0x04010fa9] 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fa9	    0x890500000000	            mov dword [0x04010faf], eax 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010faf	    0x8b0500000000	            mov eax, dword [0x04010fb5] 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fb5	    0x890500000000	            mov dword [0x04010fbb], eax 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fbb	    0x8b0500000000	            mov eax, dword [0x04010fc1] 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fc1	    0x890500000000	            mov dword [0x04010fc7], eax 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fc7	    0x488b05000000	            mov rax, qword [0x04010fce] 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fce	    0x488905000000	            mov qword [0x04010fd5], rax 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fd5	    0x488b05000000	            mov rax, qword [0x04010fdc] 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fdc	    0x488905000000	            mov qword [0x04010fe3], rax 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fe3	    0x488b05000000	            mov rax, qword [0x04010fea] 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010fea	    0x488905000000	            mov qword [0x04010ff1], rax 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x4010ff1	    0x8b0500000000	            mov eax, dword [0x04010ff7] 	     12183	option.c	FUNCTION_99
0x4010ff7	    0x890500000000	            mov dword [0x04010ffd], eax 	     12183	option.c	FUNCTION_99
0x4010ffd	              0x90	                                     nop	     12184	option.c	FUNCTION_99
0x4010ffe	              0xc9	                                   leave	     12184	option.c	FUNCTION_99
0x4010fff	              0xc3	                                     ret	     12184	option.c	FUNCTION_99
fill_breakat_flags	ELSE,0:IF,1:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,2	29
0x40112ce	              0x55	                                push rbp	     12309	option.c	FUNCTION_105
0x40112cf	          0x4889e5	                            mov rbp, rsp	     12309	option.c	FUNCTION_105
0x40112d2	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     12313	option.c	FUNCTION_105	FOR_1
0x40112d9	            0xeb10	                           jmp 0x40112eb	     12313	option.c	FUNCTION_105	FOR_1
0x40112db	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12314	option.c	FUNCTION_105	FOR_1
0x40112de	            0x4898	                                    cdqe	     12314	option.c	FUNCTION_105	FOR_1
0x40112e0	    0xc68000000000	                       mov byte [rax], 0	     12314	option.c	FUNCTION_105	FOR_1
0x40112e7	        0x8345f401	                add dword [rbp - 0xc], 1	     12313	option.c	FUNCTION_105	FOR_1
0x40112eb	    0x817df4ff0000	            cmp dword [rbp - 0xc], 0xff 	     12313	option.c	FUNCTION_105	FOR_1
0x40112f2	            0x7ee7	                           jle 0x40112db	     12313	option.c	FUNCTION_105	FOR_1
0x40112f4	    0x488b05000000	            mov rax, qword [0x040112fb] 	     12316	option.c	FUNCTION_105	IF_1
0x40112fb	          0x4885c0	                           test rax, rax	     12316	option.c	FUNCTION_105	IF_1
0x40112fe	            0x7430	                            je 0x4011330	     12316	option.c	FUNCTION_105	IF_1
0x4011300	    0x488b05000000	            mov rax, qword [0x04011307] 	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4011307	        0x488945f8	                mov qword [rbp - 8], rax	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x401130b	            0xeb18	                           jmp 0x4011325	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x401130d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x4011311	           0xfb600	                   movzx eax, byte [rax]	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x4011314	           0xfb6c0	                           movzx eax, al	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x4011317	            0x4898	                                    cdqe	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x4011319	    0xc68000000000	                       mov byte [rax], 1	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x4011320	      0x488345f801	                  add qword [rbp - 8], 1	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4011325	        0x488b45f8	                mov rax, qword [rbp - 8]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4011329	           0xfb600	                   movzx eax, byte [rax]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x401132c	            0x84c0	                             test al, al	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x401132e	            0x75dd	                           jne 0x401130d	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4011330	              0x90	                                     nop	     12319	option.c	FUNCTION_105
0x4011331	              0x5d	                                 pop rbp	     12319	option.c	FUNCTION_105
0x4011332	              0xc3	                                     ret	     12319	option.c	FUNCTION_105
can_bs	ELSE,0:IF,0:SWITCH,1:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	32
0x40116d0	              0x55	                                push rbp	     12441	option.c	FUNCTION_109
0x40116d1	          0x4889e5	                            mov rbp, rsp	     12441	option.c	FUNCTION_109
0x40116d4	        0x4883ec10	                           sub rsp, 0x10	     12441	option.c	FUNCTION_109
0x40116d8	          0x897dfc	                mov dword [rbp - 4], edi	     12441	option.c	FUNCTION_109
0x40116db	    0x488b05000000	            mov rax, qword [0x040116e2] 	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116e2	           0xfb600	                   movzx eax, byte [rax]	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116e5	           0xfb6c0	                           movzx eax, al	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116e8	          0x83f831	                           cmp eax, 0x31	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116eb	            0x7413	                            je 0x4011700	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116ed	          0x83f832	                           cmp eax, 0x32	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116f0	            0x7407	                            je 0x40116f9	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116f2	          0x83f830	                           cmp eax, 0x30	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116f5	            0x7415	                            je 0x401170c	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116f7	            0xeb1a	                           jmp 0x4011713	     12442	option.c	FUNCTION_109	SWITCH_1
0x40116f9	      0xb801000000	                              mov eax, 1	     12444	option.c	FUNCTION_109	SWITCH_1
0x40116fe	            0xeb30	                           jmp 0x4011730	     12444	option.c	FUNCTION_109	SWITCH_1
0x4011700	        0x837dfc73	               cmp dword [rbp - 4], 0x73	     12445	option.c	FUNCTION_109	SWITCH_1
0x4011704	           0xf95c0	                                setne al	     12445	option.c	FUNCTION_109	SWITCH_1
0x4011707	           0xfb6c0	                           movzx eax, al	     12445	option.c	FUNCTION_109	SWITCH_1
0x401170a	            0xeb24	                           jmp 0x4011730	     12445	option.c	FUNCTION_109	SWITCH_1
0x401170c	      0xb800000000	                              mov eax, 0	     12446	option.c	FUNCTION_109	SWITCH_1
0x4011711	            0xeb1d	                           jmp 0x4011730	     12446	option.c	FUNCTION_109	SWITCH_1
0x4011713	    0x488b05000000	            mov rax, qword [0x0401171a] 	     12448	option.c	FUNCTION_109	CALL_1
0x401171a	          0x8b55fc	                mov edx, dword [rbp - 4]	     12448	option.c	FUNCTION_109	CALL_1
0x401171d	            0x89d6	                            mov esi, edx	     12448	option.c	FUNCTION_109	CALL_1
0x401171f	          0x4889c7	                            mov rdi, rax	     12448	option.c	FUNCTION_109	CALL_1
0x4011722	      0xe800000000	                          call 0x4011727	     12448	option.c	FUNCTION_109	CALL_1
0x4011727	          0x4885c0	                           test rax, rax	     12448	option.c	FUNCTION_109	CALL_1
0x401172a	           0xf95c0	                                setne al	     12448	option.c	FUNCTION_109	CALL_1
0x401172d	           0xfb6c0	                           movzx eax, al	     12448	option.c	FUNCTION_109	CALL_1
0x4011730	              0xc9	                                   leave	     12449	option.c	FUNCTION_109
0x4011731	              0xc3	                                     ret	     12449	option.c	FUNCTION_109
set_imsearch_global	ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	8
0x400f7cc	              0x55	                                push rbp	     11325	option.c	FUNCTION_87
0x400f7cd	          0x4889e5	                            mov rbp, rsp	     11325	option.c	FUNCTION_87
0x400f7d0	    0x488b05000000	            mov rax, qword [0x0400f7d7] 	     11326	option.c	FUNCTION_87
0x400f7d7	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	     11326	option.c	FUNCTION_87
0x400f7de	    0x488905000000	            mov qword [0x0400f7e5], rax 	     11326	option.c	FUNCTION_87
0x400f7e5	              0x90	                                     nop	     11327	option.c	FUNCTION_87
0x400f7e6	              0x5d	                                 pop rbp	     11327	option.c	FUNCTION_87
0x400f7e7	              0xc3	                                     ret	     11327	option.c	FUNCTION_87
get_varp_scope	ELSE,0:IF,3:SWITCH,1:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	170
0x400d236	              0x55	                                push rbp	     10531	option.c	FUNCTION_76
0x400d237	          0x4889e5	                            mov rbp, rsp	     10531	option.c	FUNCTION_76
0x400d23a	        0x4883ec10	                           sub rsp, 0x10	     10531	option.c	FUNCTION_76
0x400d23e	        0x48897df8	                mov qword [rbp - 8], rdi	     10531	option.c	FUNCTION_76
0x400d242	          0x8975f4	              mov dword [rbp - 0xc], esi	     10531	option.c	FUNCTION_76
0x400d245	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10532	option.c	FUNCTION_76	IF_1
0x400d248	          0x83e002	                              and eax, 2	     10532	option.c	FUNCTION_76	IF_1
0x400d24b	            0x85c0	                           test eax, eax	     10532	option.c	FUNCTION_76	IF_1
0x400d24d	            0x743d	                            je 0x400d28c	     10532	option.c	FUNCTION_76	IF_1
0x400d24f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10532	option.c	FUNCTION_76	IF_1
0x400d253	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10532	option.c	FUNCTION_76	IF_1
0x400d256	            0x85c0	                           test eax, eax	     10532	option.c	FUNCTION_76	IF_1
0x400d258	            0x7432	                            je 0x400d28c	     10532	option.c	FUNCTION_76	IF_1
0x400d25a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x400d25e	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x400d262	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x400d266	            0x7517	                           jne 0x400d27f	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x400d268	        0x488b45f8	                mov rax, qword [rbp - 8]	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x400d26c	          0x4889c7	                            mov rdi, rax	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x400d26f	      0xe8f8020000	                       call sym.get_varp	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x400d274	    0x4805b8010000	                          add rax, 0x1b8	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x400d27a	      0xe9eb020000	                           jmp 0x400d56a	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x400d27f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10536	option.c	FUNCTION_76	IF_1
0x400d283	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10536	option.c	FUNCTION_76	IF_1
0x400d287	      0xe9de020000	                           jmp 0x400d56a	     10536	option.c	FUNCTION_76	IF_1
0x400d28c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10538	option.c	FUNCTION_76	IF_3
0x400d28f	          0x83e004	                              and eax, 4	     10538	option.c	FUNCTION_76	IF_3
0x400d292	            0x85c0	                           test eax, eax	     10538	option.c	FUNCTION_76	IF_3
0x400d294	     0xf84c4020000	                            je 0x400d55e	     10538	option.c	FUNCTION_76	IF_3
0x400d29a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10538	option.c	FUNCTION_76	IF_3
0x400d29e	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10538	option.c	FUNCTION_76	IF_3
0x400d2a1	      0x2500100000	                         and eax, 0x1000	     10538	option.c	FUNCTION_76	IF_3
0x400d2a6	            0x85c0	                           test eax, eax	     10538	option.c	FUNCTION_76	IF_3
0x400d2a8	     0xf84b0020000	                            je 0x400d55e	     10538	option.c	FUNCTION_76	IF_3
0x400d2ae	        0x488b45f8	                mov rax, qword [rbp - 8]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2b2	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2b5	      0x3d18500000	                         cmp eax, 0x5018	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2ba	     0xf84fb010000	                            je 0x400d4bb	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2c0	      0x3d18500000	                         cmp eax, 0x5018	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2c5	     0xf8f97000000	                            jg 0x400d362	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2cb	      0x3d06500000	                         cmp eax, 0x5006	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2d0	     0xf8443010000	                            je 0x400d419	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2d6	      0x3d06500000	                         cmp eax, 0x5006	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2db	            0x7f3d	                            jg 0x400d31a	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2dd	      0x3d01500000	                         cmp eax, 0x5001	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2e2	     0xf848b010000	                            je 0x400d473	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2e8	      0x3d01500000	                         cmp eax, 0x5001	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2ed	            0x7f10	                            jg 0x400d2ff	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2ef	      0x3d21300000	                         cmp eax, 0x3021	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2f4	     0xf8412020000	                            je 0x400d50c	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2fa	      0xe958020000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2ff	      0x3d03500000	                         cmp eax, 0x5003	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d304	     0xf842f020000	                            je 0x400d539	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d30a	      0x3d05500000	                         cmp eax, 0x5005	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d30f	     0xf84f2000000	                            je 0x400d407	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d315	      0xe93d020000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d31a	      0x3d14500000	                         cmp eax, 0x5014	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d31f	     0xf84a8010000	                            je 0x400d4cd	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d325	      0x3d14500000	                         cmp eax, 0x5014	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d32a	            0x7f1b	                            jg 0x400d347	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d32c	      0x3d07500000	                         cmp eax, 0x5007	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d331	     0xf84f4000000	                            je 0x400d42b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d337	      0x3d10500000	                         cmp eax, 0x5010	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d33c	     0xf84bb010000	                            je 0x400d4fd	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d342	      0xe910020000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d347	      0x3d15500000	                         cmp eax, 0x5015	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d34c	     0xf848d010000	                            je 0x400d4df	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d352	      0x3d17500000	                         cmp eax, 0x5017	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d357	     0xf844c010000	                            je 0x400d4a9	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d35d	      0xe9f5010000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d362	      0x3d30500000	                         cmp eax, 0x5030	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d367	     0xf84bd010000	                            je 0x400d52a	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d36d	      0x3d30500000	                         cmp eax, 0x5030	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d372	            0x7f39	                            jg 0x400d3ad	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d374	      0x3d1e500000	                         cmp eax, 0x501e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d379	            0x747a	                            je 0x400d3f5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d37b	      0x3d1e500000	                         cmp eax, 0x501e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d380	            0x7f10	                            jg 0x400d392	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d382	      0x3d1b500000	                         cmp eax, 0x501b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d387	     0xf84b0000000	                            je 0x400d43d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d38d	      0xe9c5010000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d392	      0x3d1f500000	                         cmp eax, 0x501f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d397	     0xf8451010000	                            je 0x400d4ee	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d39d	      0x3d2e500000	                         cmp eax, 0x502e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3a2	     0xf84a7000000	                            je 0x400d44f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3a8	      0xe9aa010000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3ad	      0x3d47500000	                         cmp eax, 0x5047	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3b2	     0xf84cd000000	                            je 0x400d485	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3b8	      0x3d47500000	                         cmp eax, 0x5047	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3bd	            0x7f1b	                            jg 0x400d3da	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3bf	      0x3d31500000	                         cmp eax, 0x5031	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3c4	     0xf847e010000	                            je 0x400d548	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3ca	      0x3d38500000	                         cmp eax, 0x5038	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3cf	     0xf848c000000	                            je 0x400d461	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3d5	      0xe97d010000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3da	      0x3d48500000	                         cmp eax, 0x5048	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3df	     0xf84b2000000	                            je 0x400d497	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3e5	      0x3d4d500000	                         cmp eax, 0x504d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3ea	     0xf842b010000	                            je 0x400d51b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3f0	      0xe962010000	                           jmp 0x400d557	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3f5	    0x488b05000000	            mov rax, qword [0x0400d3fc] 	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d3fc	    0x4805f8140000	                         add rax, 0x14f8	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d402	      0xe963010000	                           jmp 0x400d56a	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d407	    0x488b05000000	            mov rax, qword [0x0400d40e] 	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d40e	    0x480500160000	                         add rax, 0x1600	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d414	      0xe951010000	                           jmp 0x400d56a	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d419	    0x488b05000000	            mov rax, qword [0x0400d420] 	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d420	    0x4805f0150000	                         add rax, 0x15f0	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d426	      0xe93f010000	                           jmp 0x400d56a	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d42b	    0x488b05000000	            mov rax, qword [0x0400d432] 	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d432	    0x4805f8150000	                         add rax, 0x15f8	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d438	      0xe92d010000	                           jmp 0x400d56a	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d43d	    0x488b05000000	            mov rax, qword [0x0400d444] 	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d444	    0x480508160000	                         add rax, 0x1608	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d44a	      0xe91b010000	                           jmp 0x400d56a	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d44f	    0x488b05000000	            mov rax, qword [0x0400d456] 	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d456	    0x480518150000	                         add rax, 0x1518	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d45c	      0xe909010000	                           jmp 0x400d56a	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d461	    0x488b05000000	            mov rax, qword [0x0400d468] 	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d468	    0x480510160000	                         add rax, 0x1610	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d46e	      0xe9f7000000	                           jmp 0x400d56a	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d473	    0x488b05000000	            mov rax, qword [0x0400d47a] 	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d47a	    0x480518160000	                         add rax, 0x1618	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d480	      0xe9e5000000	                           jmp 0x400d56a	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d485	    0x488b05000000	            mov rax, qword [0x0400d48c] 	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d48c	    0x480520160000	                         add rax, 0x1620	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d492	      0xe9d3000000	                           jmp 0x400d56a	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d497	    0x488b05000000	            mov rax, qword [0x0400d49e] 	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d49e	    0x480528160000	                         add rax, 0x1628	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4a4	      0xe9c1000000	                           jmp 0x400d56a	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4a9	    0x488b05000000	            mov rax, qword [0x0400d4b0] 	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4b0	    0x4805c0140000	                         add rax, 0x14c0	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4b6	      0xe9af000000	                           jmp 0x400d56a	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4bb	    0x488b05000000	            mov rax, qword [0x0400d4c2] 	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4c2	    0x4805c8140000	                         add rax, 0x14c8	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4c8	      0xe99d000000	                           jmp 0x400d56a	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4cd	    0x488b05000000	            mov rax, qword [0x0400d4d4] 	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4d4	    0x480538160000	                         add rax, 0x1638	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4da	      0xe98b000000	                           jmp 0x400d56a	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4df	    0x488b05000000	            mov rax, qword [0x0400d4e6] 	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4e6	    0x480540160000	                         add rax, 0x1640	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4ec	            0xeb7c	                           jmp 0x400d56a	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4ee	    0x488b05000000	            mov rax, qword [0x0400d4f5] 	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4f5	    0x480538170000	                         add rax, 0x1738	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4fb	            0xeb6d	                           jmp 0x400d56a	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d4fd	    0x488b05000000	            mov rax, qword [0x0400d504] 	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d504	    0x480548170000	                         add rax, 0x1748	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d50a	            0xeb5e	                           jmp 0x400d56a	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d50c	    0x488b05000000	            mov rax, qword [0x0400d513] 	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d513	    0x480580020000	                          add rax, 0x280	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d519	            0xeb4f	                           jmp 0x400d56a	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d51b	    0x488b05000000	            mov rax, qword [0x0400d522] 	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d522	    0x480548160000	                         add rax, 0x1648	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d528	            0xeb40	                           jmp 0x400d56a	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d52a	    0x488b05000000	            mov rax, qword [0x0400d531] 	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d531	    0x480558160000	                         add rax, 0x1658	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d537	            0xeb31	                           jmp 0x400d56a	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d539	    0x488b05000000	            mov rax, qword [0x0400d540] 	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d540	    0x4805f8130000	                         add rax, 0x13f8	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d546	            0xeb22	                           jmp 0x400d56a	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d548	    0x488b05000000	            mov rax, qword [0x0400d54f] 	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d54f	    0x480528150000	                         add rax, 0x1528	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d555	            0xeb13	                           jmp 0x400d56a	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d557	      0xb800000000	                              mov eax, 0	     10580	option.c	FUNCTION_76	IF_3
0x400d55c	            0xeb0c	                           jmp 0x400d56a	     10580	option.c	FUNCTION_76	IF_3
0x400d55e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10582	option.c	FUNCTION_76	CALL_3
0x400d562	          0x4889c7	                            mov rdi, rax	     10582	option.c	FUNCTION_76	CALL_3
0x400d565	      0xe802000000	                       call sym.get_varp	     10582	option.c	FUNCTION_76	CALL_3
0x400d56a	              0xc9	                                   leave	     10583	option.c	FUNCTION_76
0x400d56b	              0xc3	                                     ret	     10583	option.c	FUNCTION_76
ExpandOldSetting	ELSE,1:IF,7:SWITCH,0:CALL,9:DO,0:WHILE,0:functions,0:FOR,1	77
0x4010405	              0x55	                                push rbp	     11705	option.c	FUNCTION_90
0x4010406	          0x4889e5	                            mov rbp, rsp	     11705	option.c	FUNCTION_90
0x4010409	        0x4883ec20	                           sub rsp, 0x20	     11705	option.c	FUNCTION_90
0x401040d	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11705	option.c	FUNCTION_90
0x4010411	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11705	option.c	FUNCTION_90
0x4010415	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     11706	option.c	FUNCTION_90
0x401041d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11709	option.c	FUNCTION_90
0x4010421	    0xc70000000000	                      mov dword [rax], 0	     11709	option.c	FUNCTION_90
0x4010427	      0xbf08000000	                              mov edi, 8	     11710	option.c	FUNCTION_90	CALL_1
0x401042c	      0xe800000000	                          call 0x4010431	     11710	option.c	FUNCTION_90	CALL_1
0x4010431	          0x4889c2	                            mov rdx, rax	     11710	option.c	FUNCTION_90	CALL_1
0x4010434	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11710	option.c	FUNCTION_90	CALL_1
0x4010438	          0x488910	                    mov qword [rax], rdx	     11710	option.c	FUNCTION_90	CALL_1
0x401043b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11711	option.c	FUNCTION_90	IF_1
0x401043f	          0x488b00	                    mov rax, qword [rax]	     11711	option.c	FUNCTION_90	IF_1
0x4010442	          0x4885c0	                           test rax, rax	     11711	option.c	FUNCTION_90	IF_1
0x4010445	            0x750a	                           jne 0x4010451	     11711	option.c	FUNCTION_90	IF_1
0x4010447	      0xb800000000	                              mov eax, 0	     11712	option.c	FUNCTION_90	IF_1
0x401044c	      0xe9e7000000	                           jmp 0x4010538	     11712	option.c	FUNCTION_90	IF_1
0x4010451	    0x8b0500000000	            mov eax, dword [0x04010457] 	     11717	option.c	FUNCTION_90	IF_2
0x4010457	            0x85c0	                           test eax, eax	     11717	option.c	FUNCTION_90	IF_2
0x4010459	            0x7928	                           jns 0x4010483	     11717	option.c	FUNCTION_90	IF_2
0x401045b	      0xb800000000	                              mov eax, 0	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x4010460	          0x4889c7	                            mov rdi, rax	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x4010463	      0xe800000000	                          call 0x4010468	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x4010468	        0x488945f0	             mov qword [rbp - 0x10], rax	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x401046c	      0x48837df000	               cmp qword [rbp - 0x10], 0	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x4010471	            0x7510	                           jne 0x4010483	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x4010473	      0xbf00000000	                              mov edi, 0	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x4010478	      0xe827b1ffff	                     call sym.findoption	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x401047d	    0x890500000000	            mov dword [0x04010483], eax 	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x4010483	    0x8b0500000000	            mov eax, dword [0x04010489] 	     11724	option.c	FUNCTION_90	IF_4
0x4010489	            0x85c0	                           test eax, eax	     11724	option.c	FUNCTION_90	IF_4
0x401048b	            0x7831	                            js 0x40104be	     11724	option.c	FUNCTION_90	IF_4
0x401048d	    0x8b0500000000	            mov eax, dword [0x04010493] 	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4010493	    0x8b1500000000	            mov edx, dword [0x04010499] 	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4010499	          0x4863d2	                         movsxd rdx, edx	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x401049c	        0x48c1e206	                              shl rdx, 6	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x40104a0	    0x4881c2000000	                              add rdx, 0	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x40104a7	            0x89c6	                            mov esi, eax	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x40104a9	          0x4889d7	                            mov rdi, rdx	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x40104ac	      0xe889000000	            call sym.option_value2string	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x40104b1	    0x488b05000000	            mov rax, qword [0x040104b8] 	     11728	option.c	FUNCTION_90	IF_4
0x40104b8	        0x488945f0	             mov qword [rbp - 0x10], rax	     11728	option.c	FUNCTION_90	IF_4
0x40104bc	            0xeb0f	                           jmp 0x40104cd	     11728	option.c	FUNCTION_90	IF_4
0x40104be	      0x48837df000	               cmp qword [rbp - 0x10], 0	     11730	option.c	FUNCTION_90	ELSE_1	IF_5
0x40104c3	            0x7508	                           jne 0x40104cd	     11730	option.c	FUNCTION_90	ELSE_1	IF_5
0x40104c5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     11731	option.c	FUNCTION_90	ELSE_1	IF_5
0x40104cd	    0x488b15000000	            mov rdx, qword [0x040104d4] 	     11735	option.c	FUNCTION_90	CALL_5
0x40104d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11735	option.c	FUNCTION_90	CALL_5
0x40104d8	          0x4889d6	                            mov rsi, rdx	     11735	option.c	FUNCTION_90	CALL_5
0x40104db	          0x4889c7	                            mov rdi, rax	     11735	option.c	FUNCTION_90	CALL_5
0x40104de	      0xe800000000	                          call 0x40104e3	     11735	option.c	FUNCTION_90	CALL_5
0x40104e3	        0x488945f8	                mov qword [rbp - 8], rax	     11735	option.c	FUNCTION_90	CALL_5
0x40104e7	      0x48837df800	                  cmp qword [rbp - 8], 0	     11737	option.c	FUNCTION_90	IF_6
0x40104ec	            0x752d	                           jne 0x401051b	     11737	option.c	FUNCTION_90	IF_6
0x40104ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x40104f2	          0x488b00	                    mov rax, qword [rax]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x40104f5	          0x4885c0	                           test rax, rax	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x40104f8	            0x741a	                            je 0x4010514	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x40104fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x40104fe	          0x488b00	                    mov rax, qword [rax]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4010501	          0x4889c7	                            mov rdi, rax	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4010504	      0xe800000000	                          call 0x4010509	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4010509	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x401050d	    0x48c700000000	                      mov qword [rax], 0	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4010514	      0xb800000000	                              mov eax, 0	     11740	option.c	FUNCTION_90	IF_6
0x4010519	            0xeb1d	                           jmp 0x4010538	     11740	option.c	FUNCTION_90	IF_6
0x401051b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11755	option.c	FUNCTION_90
0x401051f	          0x488b00	                    mov rax, qword [rax]	     11755	option.c	FUNCTION_90
0x4010522	        0x488b55f8	                mov rdx, qword [rbp - 8]	     11755	option.c	FUNCTION_90
0x4010526	          0x488910	                    mov qword [rax], rdx	     11755	option.c	FUNCTION_90
0x4010529	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11756	option.c	FUNCTION_90
0x401052d	    0xc70001000000	                      mov dword [rax], 1	     11756	option.c	FUNCTION_90
0x4010533	      0xb801000000	                              mov eax, 1	     11757	option.c	FUNCTION_90
0x4010538	              0xc9	                                   leave	     11758	option.c	FUNCTION_90
0x4010539	              0xc3	                                     ret	     11758	option.c	FUNCTION_90
get_option_value	ELSE,4:IF,12:SWITCH,0:CALL,11:DO,0:WHILE,0:functions,0:FOR,0	152
0x400b79d	              0x55	                                push rbp	      9412	option.c	FUNCTION_53
0x400b79e	          0x4889e5	                            mov rbp, rsp	      9412	option.c	FUNCTION_53
0x400b7a1	        0x4883ec50	                           sub rsp, 0x50	      9412	option.c	FUNCTION_53
0x400b7a5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9412	option.c	FUNCTION_53
0x400b7a9	        0x488975c0	             mov qword [rbp - 0x40], rsi	      9412	option.c	FUNCTION_53
0x400b7ad	        0x488955b8	             mov qword [rbp - 0x48], rdx	      9412	option.c	FUNCTION_53
0x400b7b1	          0x894db4	             mov dword [rbp - 0x4c], ecx	      9412	option.c	FUNCTION_53
0x400b7b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      9412	option.c	FUNCTION_53
0x400b7bd	        0x488945f8	                mov qword [rbp - 8], rax	      9412	option.c	FUNCTION_53
0x400b7c1	            0x31c0	                            xor eax, eax	      9412	option.c	FUNCTION_53
0x400b7c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9416	option.c	FUNCTION_53	CALL_1
0x400b7c7	          0x4889c7	                            mov rdi, rax	      9416	option.c	FUNCTION_53	CALL_1
0x400b7ca	      0xe8d5fdffff	                     call sym.findoption	      9416	option.c	FUNCTION_53	CALL_1
0x400b7cf	          0x8945d8	             mov dword [rbp - 0x28], eax	      9416	option.c	FUNCTION_53	CALL_1
0x400b7d2	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9417	option.c	FUNCTION_53	IF_1
0x400b7d6	     0xf89b6000000	                           jns 0x400b892	      9417	option.c	FUNCTION_53	IF_1
0x400b7dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7e0	          0x4889c7	                            mov rdi, rax	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7e3	      0xe800000000	                          call 0x400b7e8	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7e8	        0x4883f804	                              cmp rax, 4	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7ec	     0xf8596000000	                           jne 0x400b888	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7f6	           0xfb600	                   movzx eax, byte [rax]	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7f9	            0x3c74	                            cmp al, 0x74	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b7fb	     0xf8587000000	                           jne 0x400b888	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b801	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b805	        0x4883c001	                              add rax, 1	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b809	           0xfb600	                   movzx eax, byte [rax]	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b80c	            0x3c5f	                            cmp al, 0x5f	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b80e	            0x7578	                           jne 0x400b888	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400b810	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400b814	          0x4889c7	                            mov rdi, rax	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400b817	      0xe83a050000	                call sym.find_key_option	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400b81c	          0x8945dc	             mov dword [rbp - 0x24], eax	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400b81f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400b823	            0x7463	                            je 0x400b888	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400b825	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9427	option.c	FUNCTION_53	IF_1	IF_2	IF_3
0x400b829	            0x7915	                           jns 0x400b840	      9427	option.c	FUNCTION_53	IF_1	IF_2	IF_3
0x400b82b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x400b82e	            0xf7d8	                                 neg eax	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x400b830	          0x8845f0	               mov byte [rbp - 0x10], al	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x400b833	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400b836	            0xf7d8	                                 neg eax	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400b838	          0xc1e808	                              shr eax, 8	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400b83b	          0x8845f1	                mov byte [rbp - 0xf], al	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400b83e	            0xeb0a	                           jmp 0x400b84a	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400b840	        0xc645f0f2	            mov byte [rbp - 0x10], 0xf2 	      9434	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x400b844	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9435	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x400b847	          0x8845f1	                mov byte [rbp - 0xf], al	      9435	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x400b84a	        0x488d45f0	                   lea rax, [rbp - 0x10]	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x400b84e	          0x4889c7	                            mov rdi, rax	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x400b851	      0xe800000000	                          call 0x400b856	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x400b856	        0x488945e0	             mov qword [rbp - 0x20], rax	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x400b85a	      0x48837de000	               cmp qword [rbp - 0x20], 0	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x400b85f	            0x7427	                            je 0x400b888	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x400b861	      0x48837db800	               cmp qword [rbp - 0x48], 0	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x400b866	            0x7416	                            je 0x400b87e	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x400b868	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x400b86c	          0x4889c7	                            mov rdi, rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x400b86f	      0xe800000000	                          call 0x400b874	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x400b874	          0x4889c2	                            mov rdx, rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x400b877	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x400b87b	          0x488910	                    mov qword [rax], rdx	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x400b87e	      0xb800000000	                              mov eax, 0	      9442	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x400b883	      0xe925010000	                           jmp 0x400b9ad	      9442	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x400b888	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9445	option.c	FUNCTION_53	IF_1
0x400b88d	      0xe91b010000	                           jmp 0x400b9ad	      9445	option.c	FUNCTION_53	IF_1
0x400b892	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9448	option.c	FUNCTION_53	CALL_8
0x400b895	            0x4898	                                    cdqe	      9448	option.c	FUNCTION_53	CALL_8
0x400b897	        0x48c1e006	                              shl rax, 6	      9448	option.c	FUNCTION_53	CALL_8
0x400b89b	    0x488d90000000	                          lea rdx, [rax]	      9448	option.c	FUNCTION_53	CALL_8
0x400b8a2	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      9448	option.c	FUNCTION_53	CALL_8
0x400b8a5	            0x89c6	                            mov esi, eax	      9448	option.c	FUNCTION_53	CALL_8
0x400b8a7	          0x4889d7	                            mov rdi, rdx	      9448	option.c	FUNCTION_53	CALL_8
0x400b8aa	      0xe887190000	                 call sym.get_varp_scope	      9448	option.c	FUNCTION_53	CALL_8
0x400b8af	        0x488945e8	             mov qword [rbp - 0x18], rax	      9448	option.c	FUNCTION_53	CALL_8
0x400b8b3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9450	option.c	FUNCTION_53	IF_6
0x400b8b6	            0x4898	                                    cdqe	      9450	option.c	FUNCTION_53	IF_6
0x400b8b8	        0x48c1e006	                              shl rax, 6	      9450	option.c	FUNCTION_53	IF_6
0x400b8bc	    0x480500000000	                              add rax, 0	      9450	option.c	FUNCTION_53	IF_6
0x400b8c2	          0x488b00	                    mov rax, qword [rax]	      9450	option.c	FUNCTION_53	IF_6
0x400b8c5	          0x83e004	                              and eax, 4	      9450	option.c	FUNCTION_53	IF_6
0x400b8c8	          0x4885c0	                           test rax, rax	      9450	option.c	FUNCTION_53	IF_6
0x400b8cb	            0x746f	                            je 0x400b93c	      9450	option.c	FUNCTION_53	IF_6
0x400b8cd	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x400b8d2	            0x750a	                           jne 0x400b8de	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x400b8d4	      0xb8feffffff	                     mov eax, 0xfffffffe	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x400b8d9	      0xe9cf000000	                           jmp 0x400b9ad	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x400b8de	      0x48837db800	               cmp qword [rbp - 0x48], 0	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x400b8e3	            0x7450	                            je 0x400b935	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x400b8e5	    0x488b05000000	            mov rax, qword [0x0400b8ec] 	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b8ec	    0x480510150000	                         add rax, 0x1510	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b8f2	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b8f6	            0x7524	                           jne 0x400b91c	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b8f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b8fc	          0x488b00	                    mov rax, qword [rax]	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b8ff	           0xfb600	                   movzx eax, byte [rax]	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b902	            0x84c0	                             test al, al	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b904	            0x7416	                            je 0x400b91c	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400b906	      0xbf00000000	                              mov edi, 0	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400b90b	      0xe800000000	                          call 0x400b910	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400b910	          0x4889c2	                            mov rdx, rax	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400b913	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400b917	          0x488910	                    mov qword [rax], rdx	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400b91a	            0xeb19	                           jmp 0x400b935	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400b91c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x400b920	          0x488b00	                    mov rax, qword [rax]	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x400b923	          0x4889c7	                            mov rdi, rax	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x400b926	      0xe800000000	                          call 0x400b92b	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x400b92b	          0x4889c2	                            mov rdx, rax	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x400b92e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x400b932	          0x488910	                    mov qword [rax], rdx	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x400b935	      0xb800000000	                              mov eax, 0	      9465	option.c	FUNCTION_53	IF_6
0x400b93a	            0xeb71	                           jmp 0x400b9ad	      9465	option.c	FUNCTION_53	IF_6
0x400b93c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9468	option.c	FUNCTION_53	IF_10
0x400b941	            0x7507	                           jne 0x400b94a	      9468	option.c	FUNCTION_53	IF_10
0x400b943	      0xb8ffffffff	                     mov eax, 0xffffffff	      9469	option.c	FUNCTION_53	IF_10
0x400b948	            0xeb63	                           jmp 0x400b9ad	      9469	option.c	FUNCTION_53	IF_10
0x400b94a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9470	option.c	FUNCTION_53	IF_11
0x400b94d	            0x4898	                                    cdqe	      9470	option.c	FUNCTION_53	IF_11
0x400b94f	        0x48c1e006	                              shl rax, 6	      9470	option.c	FUNCTION_53	IF_11
0x400b953	    0x480500000000	                              add rax, 0	      9470	option.c	FUNCTION_53	IF_11
0x400b959	          0x488b00	                    mov rax, qword [rax]	      9470	option.c	FUNCTION_53	IF_11
0x400b95c	          0x83e002	                              and eax, 2	      9470	option.c	FUNCTION_53	IF_11
0x400b95f	          0x4885c0	                           test rax, rax	      9470	option.c	FUNCTION_53	IF_11
0x400b962	            0x7410	                            je 0x400b974	      9470	option.c	FUNCTION_53	IF_11
0x400b964	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9471	option.c	FUNCTION_53	IF_11
0x400b968	          0x488b10	                    mov rdx, qword [rax]	      9471	option.c	FUNCTION_53	IF_11
0x400b96b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9471	option.c	FUNCTION_53	IF_11
0x400b96f	          0x488910	                    mov qword [rax], rdx	      9471	option.c	FUNCTION_53	IF_11
0x400b972	            0xeb34	                           jmp 0x400b9a8	      9471	option.c	FUNCTION_53	IF_11
0x400b974	    0x488b05000000	            mov rax, qword [0x0400b97b] 	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x400b97b	    0x4805c8000000	                           add rax, 0xc8	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x400b981	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x400b985	            0x7511	                           jne 0x400b998	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x400b987	      0xe800000000	                          call 0x400b98c	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x400b98c	          0x4863d0	                         movsxd rdx, eax	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x400b98f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x400b993	          0x488910	                    mov qword [rax], rdx	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x400b996	            0xeb10	                           jmp 0x400b9a8	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x400b998	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x400b99c	            0x8b00	                    mov eax, dword [rax]	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x400b99e	          0x4863d0	                         movsxd rdx, eax	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x400b9a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x400b9a5	          0x488910	                    mov qword [rax], rdx	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x400b9a8	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x400b9ad	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9482	option.c	FUNCTION_53
0x400b9b1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9482	option.c	FUNCTION_53
0x400b9ba	            0x7405	                            je 0x400b9c1	      9482	option.c	FUNCTION_53
0x400b9bc	      0xe800000000	                          call 0x400b9c1	      9482	option.c	FUNCTION_53
0x400b9c1	              0xc9	                                   leave	      9482	option.c	FUNCTION_53
0x400b9c2	              0xc3	                                     ret	      9482	option.c	FUNCTION_53
set_string_option_direct	ELSE,0:IF,8:SWITCH,0:CALL,11:DO,0:WHILE,0:functions,0:FOR,0	134
0x400499a	              0x55	                                push rbp	      5876	option.c	FUNCTION_36
0x400499b	          0x4889e5	                            mov rbp, rsp	      5876	option.c	FUNCTION_36
0x400499e	        0x4883ec40	                           sub rsp, 0x40	      5876	option.c	FUNCTION_36
0x40049a2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5876	option.c	FUNCTION_36
0x40049a6	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5876	option.c	FUNCTION_36
0x40049a9	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5876	option.c	FUNCTION_36
0x40049ad	          0x894dd0	             mov dword [rbp - 0x30], ecx	      5876	option.c	FUNCTION_36
0x40049b0	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      5876	option.c	FUNCTION_36
0x40049b4	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5879	option.c	FUNCTION_36
0x40049b7	          0x83e006	                              and eax, 6	      5879	option.c	FUNCTION_36
0x40049ba	            0x85c0	                           test eax, eax	      5879	option.c	FUNCTION_36
0x40049bc	           0xf94c0	                                 sete al	      5879	option.c	FUNCTION_36
0x40049bf	           0xfb6c0	                           movzx eax, al	      5879	option.c	FUNCTION_36
0x40049c2	          0x8945ec	             mov dword [rbp - 0x14], eax	      5879	option.c	FUNCTION_36
0x40049c5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5880	option.c	FUNCTION_36
0x40049c8	          0x8945e8	             mov dword [rbp - 0x18], eax	      5880	option.c	FUNCTION_36
0x40049cb	        0x837de8ff	cmp dword [rbp - 0x18], 0xffffffffffffffff	      5882	option.c	FUNCTION_36	IF_1
0x40049cf	            0x754d	                           jne 0x4004a1e	      5882	option.c	FUNCTION_36	IF_1
0x40049d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40049d5	          0x4889c7	                            mov rdi, rax	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40049d8	      0xe8c76b0000	                     call sym.findoption	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40049dd	          0x8945e8	             mov dword [rbp - 0x18], eax	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40049e0	        0x837de800	               cmp dword [rbp - 0x18], 0	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40049e4	            0x7938	                           jns 0x4004a1e	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40049e6	      0xbf00000000	                              mov edi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049eb	      0xe800000000	                          call 0x40049f0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049f0	      0xbe00000000	                              mov esi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049f5	          0x4889c7	                            mov rdi, rax	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049f8	      0xe800000000	                          call 0x40049fd	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049fd	      0xbf00000000	                              mov edi, 0	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a02	      0xe800000000	                          call 0x4004a07	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a07	          0x4889c2	                            mov rdx, rax	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a0e	          0x4889c6	                            mov rsi, rax	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a11	          0x4889d7	                            mov rdi, rdx	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a14	      0xe800000000	                          call 0x4004a19	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a19	      0xe94b010000	                           jmp 0x4004b69	      5889	option.c	FUNCTION_36	IF_1	IF_2
0x4004a1e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5893	option.c	FUNCTION_36	IF_3
0x4004a21	            0x4898	                                    cdqe	      5893	option.c	FUNCTION_36	IF_3
0x4004a23	        0x48c1e006	                              shl rax, 6	      5893	option.c	FUNCTION_36	IF_3
0x4004a27	    0x480500000000	                              add rax, 0	      5893	option.c	FUNCTION_36	IF_3
0x4004a2d	          0x488b00	                    mov rax, qword [rax]	      5893	option.c	FUNCTION_36	IF_3
0x4004a30	          0x4885c0	                           test rax, rax	      5893	option.c	FUNCTION_36	IF_3
0x4004a33	     0xf842f010000	                            je 0x4004b68	      5893	option.c	FUNCTION_36	IF_3
0x4004a39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5896	option.c	FUNCTION_36	CALL_6
0x4004a3d	          0x4889c7	                            mov rdi, rax	      5896	option.c	FUNCTION_36	CALL_6
0x4004a40	      0xe800000000	                          call 0x4004a45	      5896	option.c	FUNCTION_36	CALL_6
0x4004a45	        0x488945f0	             mov qword [rbp - 0x10], rax	      5896	option.c	FUNCTION_36	CALL_6
0x4004a49	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5897	option.c	FUNCTION_36	IF_4
0x4004a4e	     0xf8415010000	                            je 0x4004b69	      5897	option.c	FUNCTION_36	IF_4
0x4004a54	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a58	            0x7505	                           jne 0x4004a5f	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a5a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a5d	            0xeb05	                           jmp 0x4004a64	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a5f	      0xb804000000	                              mov eax, 4	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a64	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a67	          0x4863d2	                         movsxd rdx, edx	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a6a	        0x48c1e206	                              shl rdx, 6	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a6e	    0x4881c2000000	                              add rdx, 0	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a75	            0x89c6	                            mov esi, eax	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a77	          0x4889d7	                            mov rdi, rdx	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a7a	      0xe8b7870000	                 call sym.get_varp_scope	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a7f	        0x488945f8	                mov qword [rbp - 8], rax	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004a83	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a86	          0x83e001	                              and eax, 1	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a89	            0x85c0	                           test eax, eax	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a8b	            0x7429	                            je 0x4004ab6	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a8d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a90	            0x4898	                                    cdqe	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a92	        0x48c1e006	                              shl rax, 6	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a96	    0x480500000000	                              add rax, 0	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a9c	          0x488b00	                    mov rax, qword [rax]	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004a9f	          0x83e008	                              and eax, 8	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004aa2	          0x4885c0	                           test rax, rax	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004aa5	            0x740f	                            je 0x4004ab6	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004aa7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x4004aab	          0x488b00	                    mov rax, qword [rax]	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x4004aae	          0x4889c7	                            mov rdi, rax	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x4004ab1	      0xe800000000	                          call 0x4004ab6	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x4004ab6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5903	option.c	FUNCTION_36	IF_4
0x4004aba	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5903	option.c	FUNCTION_36	IF_4
0x4004abe	          0x488910	                    mov qword [rax], rdx	      5903	option.c	FUNCTION_36	IF_4
0x4004ac1	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4004ac5	            0x7411	                            je 0x4004ad8	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4004ac7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4004acb	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4004ace	          0x4889d6	                            mov rsi, rdx	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4004ad1	            0x89c7	                            mov edi, eax	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4004ad3	      0xe893000000	       call sym.set_string_option_global	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4004ad8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5909	option.c	FUNCTION_36	IF_4
0x4004adb	            0x4898	                                    cdqe	      5909	option.c	FUNCTION_36	IF_4
0x4004add	        0x48c1e006	                              shl rax, 6	      5909	option.c	FUNCTION_36	IF_4
0x4004ae1	    0x480500000000	                              add rax, 0	      5909	option.c	FUNCTION_36	IF_4
0x4004ae7	          0x488b00	                    mov rax, qword [rax]	      5909	option.c	FUNCTION_36	IF_4
0x4004aea	        0x4883c808	                               or rax, 8	      5909	option.c	FUNCTION_36	IF_4
0x4004aee	          0x4889c2	                            mov rdx, rax	      5909	option.c	FUNCTION_36	IF_4
0x4004af1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5909	option.c	FUNCTION_36	IF_4
0x4004af4	            0x4898	                                    cdqe	      5909	option.c	FUNCTION_36	IF_4
0x4004af6	        0x48c1e006	                              shl rax, 6	      5909	option.c	FUNCTION_36	IF_4
0x4004afa	    0x480500000000	                              add rax, 0	      5909	option.c	FUNCTION_36	IF_4
0x4004b00	          0x488910	                    mov qword [rax], rdx	      5909	option.c	FUNCTION_36	IF_4
0x4004b03	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b06	            0x4898	                                    cdqe	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b08	        0x48c1e006	                              shl rax, 6	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b0c	    0x480500000000	                              add rax, 0	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b12	            0x8b00	                    mov eax, dword [rax]	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b14	      0x2500100000	                         and eax, 0x1000	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b19	            0x85c0	                           test eax, eax	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b1b	            0x7423	                            je 0x4004b40	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b1d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b21	            0x741d	                            je 0x4004b40	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004b23	        0x488b45f8	                mov rax, qword [rbp - 8]	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x4004b27	          0x488b00	                    mov rax, qword [rax]	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x4004b2a	          0x4889c7	                            mov rdi, rax	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x4004b2d	      0xe800000000	                          call 0x4004b32	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x4004b32	    0x488b15000000	            mov rdx, qword [0x04004b39] 	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4004b39	        0x488b45f8	                mov rax, qword [rbp - 8]	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4004b3d	          0x488910	                    mov qword [rax], rdx	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4004b40	        0x837dc4fa	cmp dword [rbp - 0x3c], 0xfffffffffffffffa	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x4004b44	            0x7423	                            je 0x4004b69	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x4004b46	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b4a	            0x7508	                           jne 0x4004b54	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b4c	    0x8b0500000000	            mov eax, dword [0x04004b52] 	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b52	            0xeb03	                           jmp 0x4004b57	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b54	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b57	          0x8b75d0	             mov esi, dword [rbp - 0x30]	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b5a	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b5d	            0x89c2	                            mov edx, eax	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b5f	            0x89cf	                            mov edi, ecx	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b61	      0xe8a9460000	        call sym.set_option_scriptID_idx	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b66	            0xeb01	                           jmp 0x4004b69	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4004b68	              0x90	                                     nop	      5894	option.c	FUNCTION_36	IF_3
0x4004b69	              0xc9	                                   leave	      5924	option.c	FUNCTION_36
0x4004b6a	              0xc3	                                     ret	      5924	option.c	FUNCTION_36
langmap_adjust_mb	ELSE,1:IF,2:SWITCH,0:CALL,0:DO,0:WHILE,1:functions,0:FOR,0	48
0x4010882	              0x55	                                push rbp	     11894	option.c	FUNCTION_94
0x4010883	          0x4889e5	                            mov rbp, rsp	     11894	option.c	FUNCTION_94
0x4010886	          0x897ddc	             mov dword [rbp - 0x24], edi	     11894	option.c	FUNCTION_94
0x4010889	    0x488b05000000	            mov rax, qword [0x04010890] 	     11895	option.c	FUNCTION_94
0x4010890	        0x488945f8	                mov qword [rbp - 8], rax	     11895	option.c	FUNCTION_94
0x4010894	    0xc745e8000000	               mov dword [rbp - 0x18], 0	     11896	option.c	FUNCTION_94
0x401089b	    0x8b0500000000	            mov eax, dword [0x040108a1] 	     11897	option.c	FUNCTION_94
0x40108a1	          0x8945ec	             mov dword [rbp - 0x14], eax	     11897	option.c	FUNCTION_94
0x40108a4	            0xeb66	                           jmp 0x401090c	     11899	option.c	FUNCTION_94	WHILE_1
0x40108a6	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     11901	option.c	FUNCTION_94	WHILE_1
0x40108a9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     11901	option.c	FUNCTION_94	WHILE_1
0x40108ac	             0x1d0	                            add eax, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x40108ae	            0x89c2	                            mov edx, eax	     11901	option.c	FUNCTION_94	WHILE_1
0x40108b0	          0xc1ea1f	                           shr edx, 0x1f	     11901	option.c	FUNCTION_94	WHILE_1
0x40108b3	             0x1d0	                            add eax, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x40108b5	            0xd1f8	                              sar eax, 1	     11901	option.c	FUNCTION_94	WHILE_1
0x40108b7	          0x8945f0	             mov dword [rbp - 0x10], eax	     11901	option.c	FUNCTION_94	WHILE_1
0x40108ba	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11902	option.c	FUNCTION_94	WHILE_1
0x40108bd	            0x4898	                                    cdqe	     11902	option.c	FUNCTION_94	WHILE_1
0x40108bf	    0x488d14c50000	                        lea rdx, [rax*8]	     11902	option.c	FUNCTION_94	WHILE_1
0x40108c7	        0x488b45f8	                mov rax, qword [rbp - 8]	     11902	option.c	FUNCTION_94	WHILE_1
0x40108cb	          0x4801d0	                            add rax, rdx	     11902	option.c	FUNCTION_94	WHILE_1
0x40108ce	            0x8b00	                    mov eax, dword [rax]	     11902	option.c	FUNCTION_94	WHILE_1
0x40108d0	          0x2b45dc	             sub eax, dword [rbp - 0x24]	     11902	option.c	FUNCTION_94	WHILE_1
0x40108d3	          0x8945f4	              mov dword [rbp - 0xc], eax	     11902	option.c	FUNCTION_94	WHILE_1
0x40108d6	        0x837df400	                cmp dword [rbp - 0xc], 0	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108da	            0x7519	                           jne 0x40108f5	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108dc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108df	            0x4898	                                    cdqe	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108e1	    0x488d14c50000	                        lea rdx, [rax*8]	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108e9	        0x488b45f8	                mov rax, qword [rbp - 8]	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108ed	          0x4801d0	                            add rax, rdx	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108f0	          0x8b4004	                mov eax, dword [rax + 4]	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108f3	            0xeb22	                           jmp 0x4010917	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x40108f5	        0x837df400	                cmp dword [rbp - 0xc], 0	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x40108f9	            0x790b	                           jns 0x4010906	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x40108fb	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x40108fe	          0x83c001	                              add eax, 1	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x4010901	          0x8945e8	             mov dword [rbp - 0x18], eax	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x4010904	            0xeb06	                           jmp 0x401090c	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x4010906	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11909	option.c	FUNCTION_94	WHILE_1	ELSE_1
0x4010909	          0x8945ec	             mov dword [rbp - 0x14], eax	     11909	option.c	FUNCTION_94	WHILE_1	ELSE_1
0x401090c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     11899	option.c	FUNCTION_94	WHILE_1
0x401090f	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	     11899	option.c	FUNCTION_94	WHILE_1
0x4010912	            0x7592	                           jne 0x40108a6	     11899	option.c	FUNCTION_94	WHILE_1
0x4010914	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11911	option.c	FUNCTION_94	ELSE_1
0x4010917	              0x5d	                                 pop rbp	     11912	option.c	FUNCTION_94	ELSE_1
0x4010918	              0xc3	                                     ret	     11912	option.c	FUNCTION_94	ELSE_1
trigger_optionsset_string	ELSE,0:IF,1:SWITCH,0:CALL,6:DO,0:WHILE,0:functions,0:FOR,0	59
0x4001545	              0x55	                                push rbp	      4330	option.c	FUNCTION_15
0x4001546	          0x4889e5	                            mov rbp, rsp	      4330	option.c	FUNCTION_15
0x4001549	        0x4883ec30	                           sub rsp, 0x30	      4330	option.c	FUNCTION_15
0x400154d	          0x897dec	             mov dword [rbp - 0x14], edi	      4330	option.c	FUNCTION_15
0x4001550	          0x8975e8	             mov dword [rbp - 0x18], esi	      4330	option.c	FUNCTION_15
0x4001553	        0x488955e0	             mov qword [rbp - 0x20], rdx	      4330	option.c	FUNCTION_15
0x4001557	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      4330	option.c	FUNCTION_15
0x400155b	    0x64488b042528	                mov rax, qword fs:[0x28]	      4330	option.c	FUNCTION_15
0x4001564	        0x488945f8	                mov qword [rbp - 8], rax	      4330	option.c	FUNCTION_15
0x4001568	            0x31c0	                            xor eax, eax	      4330	option.c	FUNCTION_15
0x400156a	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4331	option.c	FUNCTION_15	IF_1
0x400156f	     0xf84a6000000	                            je 0x400161b	      4331	option.c	FUNCTION_15	IF_1
0x4001575	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4331	option.c	FUNCTION_15	IF_1
0x400157a	     0xf849b000000	                            je 0x400161b	      4331	option.c	FUNCTION_15	IF_1
0x4001580	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4336	option.c	FUNCTION_15	IF_1
0x4001583	          0x83e004	                              and eax, 4	      4336	option.c	FUNCTION_15	IF_1
0x4001586	            0x85c0	                           test eax, eax	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x4001588	            0x7407	                            je 0x4001591	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x400158a	      0xba00000000	                              mov edx, 0	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x400158f	            0xeb05	                           jmp 0x4001596	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x4001591	      0xba00000000	                              mov edx, 0	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x4001596	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x400159a	          0x4889d6	                            mov rsi, rdx	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x400159d	          0x4889c7	                            mov rdi, rax	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x40015a0	      0xe800000000	                          call 0x40015a5	      4335	option.c	FUNCTION_15	IF_1	CALL_1
0x40015a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4337	option.c	FUNCTION_15	IF_1	CALL_2
0x40015a9	      0xbaffffffff	                     mov edx, 0xffffffff	      4337	option.c	FUNCTION_15	IF_1	CALL_2
0x40015ae	          0x4889c6	                            mov rsi, rax	      4337	option.c	FUNCTION_15	IF_1	CALL_2
0x40015b1	      0xbf3e000000	                           mov edi, 0x3e	      4337	option.c	FUNCTION_15	IF_1	CALL_2
0x40015b6	      0xe800000000	                          call 0x40015bb	      4337	option.c	FUNCTION_15	IF_1	CALL_2
0x40015bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4338	option.c	FUNCTION_15	IF_1	CALL_3
0x40015bf	      0xbaffffffff	                     mov edx, 0xffffffff	      4338	option.c	FUNCTION_15	IF_1	CALL_3
0x40015c4	          0x4889c6	                            mov rsi, rax	      4338	option.c	FUNCTION_15	IF_1	CALL_3
0x40015c7	      0xbf3d000000	                           mov edi, 0x3d	      4338	option.c	FUNCTION_15	IF_1	CALL_3
0x40015cc	      0xe800000000	                          call 0x40015d1	      4338	option.c	FUNCTION_15	IF_1	CALL_3
0x40015d1	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4339	option.c	FUNCTION_15	IF_1	CALL_4
0x40015d5	      0xbaffffffff	                     mov edx, 0xffffffff	      4339	option.c	FUNCTION_15	IF_1	CALL_4
0x40015da	          0x4889c6	                            mov rsi, rax	      4339	option.c	FUNCTION_15	IF_1	CALL_4
0x40015dd	      0xbf3f000000	                           mov edi, 0x3f	      4339	option.c	FUNCTION_15	IF_1	CALL_4
0x40015e2	      0xe800000000	                          call 0x40015e7	      4339	option.c	FUNCTION_15	IF_1	CALL_4
0x40015e7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4341	option.c	FUNCTION_15	IF_1
0x40015ea	            0x4898	                                    cdqe	      4341	option.c	FUNCTION_15	IF_1
0x40015ec	        0x48c1e006	                              shl rax, 6	      4341	option.c	FUNCTION_15	IF_1
0x40015f0	    0x480500000000	                              add rax, 0	      4341	option.c	FUNCTION_15	IF_1
0x40015f6	          0x488b00	                    mov rax, qword [rax]	      4341	option.c	FUNCTION_15	IF_1
0x40015f9	    0x41b800000000	                              mov r8d, 0	      4340	option.c	FUNCTION_15	IF_1	CALL_5
0x40015ff	      0xb900000000	                              mov ecx, 0	      4340	option.c	FUNCTION_15	IF_1	CALL_5
0x4001604	      0xba00000000	                              mov edx, 0	      4340	option.c	FUNCTION_15	IF_1	CALL_5
0x4001609	          0x4889c6	                            mov rsi, rax	      4340	option.c	FUNCTION_15	IF_1	CALL_5
0x400160c	      0xbf3e000000	                           mov edi, 0x3e	      4340	option.c	FUNCTION_15	IF_1	CALL_5
0x4001611	      0xe800000000	                          call 0x4001616	      4340	option.c	FUNCTION_15	IF_1	CALL_5
0x4001616	      0xe800000000	                          call 0x400161b	      4342	option.c	FUNCTION_15	IF_1	CALL_6
0x400161b	              0x90	                                     nop	      4344	option.c	FUNCTION_15
0x400161c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4344	option.c	FUNCTION_15
0x4001620	    0x644833042528	                xor rax, qword fs:[0x28]	      4344	option.c	FUNCTION_15
0x4001629	            0x7405	                            je 0x4001630	      4344	option.c	FUNCTION_15
0x400162b	      0xe800000000	                          call 0x4001630	      4344	option.c	FUNCTION_15
0x4001630	              0xc9	                                   leave	      4344	option.c	FUNCTION_15
0x4001631	              0xc3	                                     ret	      4344	option.c	FUNCTION_15
put_setstring	ELSE,2:IF,9:SWITCH,0:CALL,10:DO,0:WHILE,1:functions,0:FOR,0	110
0x400c809	              0x55	                                push rbp	     10193	option.c	FUNCTION_66
0x400c80a	          0x4889e5	                            mov rbp, rsp	     10193	option.c	FUNCTION_66
0x400c80d	        0x4883ec50	                           sub rsp, 0x50	     10193	option.c	FUNCTION_66
0x400c811	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     10193	option.c	FUNCTION_66
0x400c815	        0x488975d0	             mov qword [rbp - 0x30], rsi	     10193	option.c	FUNCTION_66
0x400c819	        0x488955c8	             mov qword [rbp - 0x38], rdx	     10193	option.c	FUNCTION_66
0x400c81d	        0x48894dc0	             mov qword [rbp - 0x40], rcx	     10193	option.c	FUNCTION_66
0x400c821	        0x448945bc	             mov dword [rbp - 0x44], r8d	     10193	option.c	FUNCTION_66
0x400c825	    0x64488b042528	                mov rax, qword fs:[0x28]	     10193	option.c	FUNCTION_66
0x400c82e	        0x488945f8	                mov qword [rbp - 8], rax	     10193	option.c	FUNCTION_66
0x400c832	            0x31c0	                            xor eax, eax	     10193	option.c	FUNCTION_66
0x400c834	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c838	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c83c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c840	      0xbe00000000	                              mov esi, 0	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c845	          0x4889c7	                            mov rdi, rax	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c848	      0xb800000000	                              mov eax, 0	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c84d	      0xe800000000	                          call 0x400c852	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c852	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c854	            0x790a	                           jns 0x400c860	     10197	option.c	FUNCTION_66	IF_1	CALL_1
0x400c856	      0xb800000000	                              mov eax, 0	     10198	option.c	FUNCTION_66	IF_1
0x400c85b	      0xe934010000	                           jmp 0x400c994	     10198	option.c	FUNCTION_66	IF_1
0x400c860	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10199	option.c	FUNCTION_66	IF_2
0x400c864	          0x488b00	                    mov rax, qword [rax]	     10199	option.c	FUNCTION_66	IF_2
0x400c867	          0x4885c0	                           test rax, rax	     10199	option.c	FUNCTION_66	IF_2
0x400c86a	     0xf8408010000	                            je 0x400c978	     10199	option.c	FUNCTION_66	IF_2
0x400c870	    0x48817dc00000	               cmp qword [rbp - 0x40], 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x400c878	            0x7553	                           jne 0x400c8cd	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x400c87a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x400c87e	          0x488b00	                    mov rax, qword [rax]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x400c881	        0x488945e8	             mov qword [rbp - 0x18], rax	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x400c885	            0xeb36	                           jmp 0x400c8bd	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400c887	        0x488d45e8	                   lea rax, [rbp - 0x18]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c88b	      0xbe00000000	                              mov esi, 0	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c890	          0x4889c7	                            mov rdi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c893	      0xe800000000	                          call 0x400c898	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c898	          0x4889c1	                            mov rcx, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c89b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c89f	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c8a4	          0x4889ce	                            mov rsi, rcx	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c8a7	          0x4889c7	                            mov rdi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c8aa	      0xe800000000	                          call 0x400c8af	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c8af	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c8b1	            0x750a	                           jne 0x400c8bd	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0x400c8b3	      0xb800000000	                              mov eax, 0	     10209	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4
0x400c8b8	      0xe9d7000000	                           jmp 0x400c994	     10209	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4
0x400c8bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400c8c1	           0xfb600	                   movzx eax, byte [rax]	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400c8c4	            0x84c0	                             test al, al	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400c8c6	            0x75bf	                           jne 0x400c887	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400c8c8	      0xe9ab000000	                           jmp 0x400c978	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400c8cd	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x400c8d1	            0x747f	                            je 0x400c952	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x400c8d3	      0xbf00100000	                         mov edi, 0x1000	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x400c8d8	      0xe800000000	                          call 0x400c8dd	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x400c8dd	        0x488945f0	             mov qword [rbp - 0x10], rax	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x400c8e1	      0x48837df000	               cmp qword [rbp - 0x10], 0	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x400c8e6	            0x750a	                           jne 0x400c8f2	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x400c8e8	      0xb800000000	                              mov eax, 0	     10215	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x400c8ed	      0xe9a2000000	                           jmp 0x400c994	     10215	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x400c8f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c8f6	          0x488b00	                    mov rax, qword [rax]	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c8f9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c8fd	    0x41b800000000	                              mov r8d, 0	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c903	      0xb900100000	                         mov ecx, 0x1000	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c908	          0x4889c6	                            mov rsi, rax	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c90b	      0xbf00000000	                              mov edi, 0	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c910	      0xe800000000	                          call 0x400c915	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_5
0x400c915	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c919	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c91d	      0xba02000000	                              mov edx, 2	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c922	          0x4889ce	                            mov rsi, rcx	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c925	          0x4889c7	                            mov rdi, rax	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c928	      0xe800000000	                          call 0x400c92d	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c92d	            0x85c0	                           test eax, eax	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c92f	            0x7513	                           jne 0x400c944	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x400c931	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_7
0x400c935	          0x4889c7	                            mov rdi, rax	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_7
0x400c938	      0xe800000000	                          call 0x400c93d	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_7
0x400c93d	      0xb800000000	                              mov eax, 0	     10220	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7
0x400c942	            0xeb50	                           jmp 0x400c994	     10220	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7
0x400c944	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_8
0x400c948	          0x4889c7	                            mov rdi, rax	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_8
0x400c94b	      0xe800000000	                          call 0x400c950	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_8
0x400c950	            0xeb26	                           jmp 0x400c978	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_8
0x400c952	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c956	          0x488b08	                    mov rcx, qword [rax]	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c959	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c95d	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c962	          0x4889ce	                            mov rsi, rcx	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c965	          0x4889c7	                            mov rdi, rax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c968	      0xe800000000	                          call 0x400c96d	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c96d	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c96f	            0x7507	                           jne 0x400c978	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_9
0x400c971	      0xb800000000	                              mov eax, 0	     10225	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8
0x400c976	            0xeb1c	                           jmp 0x400c994	     10225	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8
0x400c978	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10227	option.c	FUNCTION_66	IF_9	CALL_10
0x400c97c	          0x4889c7	                            mov rdi, rax	     10227	option.c	FUNCTION_66	IF_9	CALL_10
0x400c97f	      0xe800000000	                          call 0x400c984	     10227	option.c	FUNCTION_66	IF_9	CALL_10
0x400c984	            0x85c0	                           test eax, eax	     10227	option.c	FUNCTION_66	IF_9	CALL_10
0x400c986	            0x7907	                           jns 0x400c98f	     10227	option.c	FUNCTION_66	IF_9	CALL_10
0x400c988	      0xb800000000	                              mov eax, 0	     10228	option.c	FUNCTION_66	IF_9
0x400c98d	            0xeb05	                           jmp 0x400c994	     10228	option.c	FUNCTION_66	IF_9
0x400c98f	      0xb801000000	                              mov eax, 1	     10229	option.c	FUNCTION_66
0x400c994	        0x488b75f8	                mov rsi, qword [rbp - 8]	     10230	option.c	FUNCTION_66
0x400c998	    0x644833342528	                xor rsi, qword fs:[0x28]	     10230	option.c	FUNCTION_66
0x400c9a1	            0x7405	                            je 0x400c9a8	     10230	option.c	FUNCTION_66
0x400c9a3	      0xe800000000	                          call 0x400c9a8	     10230	option.c	FUNCTION_66
0x400c9a8	              0xc9	                                   leave	     10230	option.c	FUNCTION_66
0x400c9a9	              0xc3	                                     ret	     10230	option.c	FUNCTION_66
shortmess	ELSE,0:IF,0:SWITCH,0:CALL,3:DO,0:WHILE,0:functions,0:FOR,0	31
0x4010c55	              0x55	                                push rbp	     12054	option.c	FUNCTION_98
0x4010c56	          0x4889e5	                            mov rbp, rsp	     12054	option.c	FUNCTION_98
0x4010c59	        0x4883ec10	                           sub rsp, 0x10	     12054	option.c	FUNCTION_98
0x4010c5d	          0x897dfc	                mov dword [rbp - 4], edi	     12054	option.c	FUNCTION_98
0x4010c60	    0x488b05000000	            mov rax, qword [0x04010c67] 	     12055	option.c	FUNCTION_98
0x4010c67	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x4010c6a	            0x744d	                            je 0x4010cb9	     12055	option.c	FUNCTION_98
0x4010c6c	    0x488b05000000	            mov rax, qword [0x04010c73] 	     12056	option.c	FUNCTION_98	CALL_1
0x4010c73	          0x8b55fc	                mov edx, dword [rbp - 4]	     12056	option.c	FUNCTION_98	CALL_1
0x4010c76	            0x89d6	                            mov esi, edx	     12056	option.c	FUNCTION_98	CALL_1
0x4010c78	          0x4889c7	                            mov rdi, rax	     12056	option.c	FUNCTION_98	CALL_1
0x4010c7b	      0xe800000000	                          call 0x4010c80	     12056	option.c	FUNCTION_98	CALL_1
0x4010c80	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x4010c83	            0x752d	                           jne 0x4010cb2	     12055	option.c	FUNCTION_98
0x4010c85	    0x488b05000000	            mov rax, qword [0x04010c8c] 	     12057	option.c	FUNCTION_98	CALL_2
0x4010c8c	      0xbe61000000	                           mov esi, 0x61	     12057	option.c	FUNCTION_98	CALL_2
0x4010c91	          0x4889c7	                            mov rdi, rax	     12057	option.c	FUNCTION_98	CALL_2
0x4010c94	      0xe800000000	                          call 0x4010c99	     12057	option.c	FUNCTION_98	CALL_2
0x4010c99	          0x4885c0	                           test rax, rax	     12057	option.c	FUNCTION_98	CALL_2
0x4010c9c	            0x741b	                            je 0x4010cb9	     12057	option.c	FUNCTION_98	CALL_2
0x4010c9e	          0x8b45fc	                mov eax, dword [rbp - 4]	     12058	option.c	FUNCTION_98	CALL_3
0x4010ca1	            0x89c6	                            mov esi, eax	     12058	option.c	FUNCTION_98	CALL_3
0x4010ca3	      0xbf00000000	                              mov edi, 0	     12058	option.c	FUNCTION_98	CALL_3
0x4010ca8	      0xe800000000	                          call 0x4010cad	     12058	option.c	FUNCTION_98	CALL_3
0x4010cad	          0x4885c0	                           test rax, rax	     12058	option.c	FUNCTION_98	CALL_3
0x4010cb0	            0x7407	                            je 0x4010cb9	     12058	option.c	FUNCTION_98	CALL_3
0x4010cb2	      0xb801000000	                              mov eax, 1	     12055	option.c	FUNCTION_98
0x4010cb7	            0xeb05	                           jmp 0x4010cbe	     12055	option.c	FUNCTION_98
0x4010cb9	      0xb800000000	                              mov eax, 0	     12055	option.c	FUNCTION_98
0x4010cbe	              0xc9	                                   leave	     12059	option.c	FUNCTION_98
0x4010cbf	              0xc3	                                     ret	     12059	option.c	FUNCTION_98
redraw_titles	ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:WHILE,0:functions,0:FOR,0	7
0x400497f	              0x55	                                push rbp	      5856	option.c	FUNCTION_35
0x4004980	          0x4889e5	                            mov rbp, rsp	      5856	option.c	FUNCTION_35
0x4004983	    0xc70500000000	               mov dword [0x0400498d], 1	      5857	option.c	FUNCTION_35
0x400498d	    0xc70500000000	               mov dword [0x04004997], 1	      5858	option.c	FUNCTION_35
0x4004997	              0x90	                                     nop	      5859	option.c	FUNCTION_35
0x4004998	              0x5d	                                 pop rbp	      5859	option.c	FUNCTION_35
0x4004999	              0xc3	                                     ret	      5859	option.c	FUNCTION_35
find_viminfo_parameter	ELSE,0:IF,3:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,1	38
0x4003fb7	              0x55	                                push rbp	      5495	option.c	FUNCTION_24
0x4003fb8	          0x4889e5	                            mov rbp, rsp	      5495	option.c	FUNCTION_24
0x4003fbb	        0x4883ec20	                           sub rsp, 0x20	      5495	option.c	FUNCTION_24
0x4003fbf	          0x897dec	             mov dword [rbp - 0x14], edi	      5495	option.c	FUNCTION_24
0x4003fc2	    0x488b05000000	            mov rax, qword [0x04003fc9] 	      5498	option.c	FUNCTION_24	FOR_1
0x4003fc9	        0x488945f8	                mov qword [rbp - 8], rax	      5498	option.c	FUNCTION_24	FOR_1
0x4003fcd	            0xeb45	                           jmp 0x4004014	      5498	option.c	FUNCTION_24	FOR_1
0x4003fcf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fd3	           0xfb600	                   movzx eax, byte [rax]	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fd6	           0xfb6c0	                           movzx eax, al	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fd9	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fdc	            0x750a	                           jne 0x4003fe8	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fde	        0x488b45f8	                mov rax, qword [rbp - 8]	      5501	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fe2	        0x4883c001	                              add rax, 1	      5501	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fe6	            0xeb42	                           jmp 0x400402a	      5501	option.c	FUNCTION_24	FOR_1	IF_1
0x4003fe8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x4003fec	           0xfb600	                   movzx eax, byte [rax]	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x4003fef	            0x3c6e	                            cmp al, 0x6e	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x4003ff1	            0x742e	                            je 0x4004021	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x4003ff3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x4003ff7	      0xbe2c000000	                           mov esi, 0x2c	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x4003ffc	          0x4889c7	                            mov rdi, rax	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x4003fff	      0xe800000000	                          call 0x4004004	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x4004004	        0x488945f8	                mov qword [rbp - 8], rax	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x4004008	      0x48837df800	                  cmp qword [rbp - 8], 0	      5505	option.c	FUNCTION_24	FOR_1	IF_3
0x400400d	            0x7415	                            je 0x4004024	      5505	option.c	FUNCTION_24	FOR_1	IF_3
0x400400f	      0x488345f801	                  add qword [rbp - 8], 1	      5498	option.c	FUNCTION_24	FOR_1
0x4004014	        0x488b45f8	                mov rax, qword [rbp - 8]	      5498	option.c	FUNCTION_24	FOR_1
0x4004018	           0xfb600	                   movzx eax, byte [rax]	      5498	option.c	FUNCTION_24	FOR_1
0x400401b	            0x84c0	                             test al, al	      5498	option.c	FUNCTION_24	FOR_1
0x400401d	            0x75b0	                           jne 0x4003fcf	      5498	option.c	FUNCTION_24	FOR_1
0x400401f	            0xeb04	                           jmp 0x4004025	      5498	option.c	FUNCTION_24	FOR_1
0x4004021	              0x90	                                     nop	      5503	option.c	FUNCTION_24	FOR_1	IF_2
0x4004022	            0xeb01	                           jmp 0x4004025	      5503	option.c	FUNCTION_24	FOR_1	IF_2
0x4004024	              0x90	                                     nop	      5506	option.c	FUNCTION_24	FOR_1	IF_3
0x4004025	      0xb800000000	                              mov eax, 0	      5508	option.c	FUNCTION_24
0x400402a	              0xc9	                                   leave	      5509	option.c	FUNCTION_24
0x400402b	              0xc3	                                     ret	      5509	option.c	FUNCTION_24
option_was_set	ELSE,0:IF,2:SWITCH,0:CALL,1:DO,0:WHILE,0:functions,0:FOR,0	25
0x4011190	              0x55	                                push rbp	     12253	option.c	FUNCTION_102
0x4011191	          0x4889e5	                            mov rbp, rsp	     12253	option.c	FUNCTION_102
0x4011194	        0x4883ec20	                           sub rsp, 0x20	     12253	option.c	FUNCTION_102
0x4011198	        0x48897de8	             mov qword [rbp - 0x18], rdi	     12253	option.c	FUNCTION_102
0x401119c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12256	option.c	FUNCTION_102	CALL_1
0x40111a0	          0x4889c7	                            mov rdi, rax	     12256	option.c	FUNCTION_102	CALL_1
0x40111a3	      0xe8fca3ffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x40111a8	          0x8945fc	                mov dword [rbp - 4], eax	     12256	option.c	FUNCTION_102	CALL_1
0x40111ab	        0x837dfc00	                  cmp dword [rbp - 4], 0	     12257	option.c	FUNCTION_102	IF_1
0x40111af	            0x7907	                           jns 0x40111b8	     12257	option.c	FUNCTION_102	IF_1
0x40111b1	      0xb800000000	                              mov eax, 0	     12258	option.c	FUNCTION_102	IF_1
0x40111b6	            0xeb28	                           jmp 0x40111e0	     12258	option.c	FUNCTION_102	IF_1
0x40111b8	          0x8b45fc	                mov eax, dword [rbp - 4]	     12259	option.c	FUNCTION_102	IF_2
0x40111bb	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x40111bd	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x40111c1	    0x480500000000	                              add rax, 0	     12259	option.c	FUNCTION_102	IF_2
0x40111c7	          0x488b00	                    mov rax, qword [rax]	     12259	option.c	FUNCTION_102	IF_2
0x40111ca	      0x2500010000	                          and eax, 0x100	     12259	option.c	FUNCTION_102	IF_2
0x40111cf	          0x4885c0	                           test rax, rax	     12259	option.c	FUNCTION_102	IF_2
0x40111d2	            0x7407	                            je 0x40111db	     12259	option.c	FUNCTION_102	IF_2
0x40111d4	      0xb801000000	                              mov eax, 1	     12260	option.c	FUNCTION_102	IF_2
0x40111d9	            0xeb05	                           jmp 0x40111e0	     12260	option.c	FUNCTION_102	IF_2
0x40111db	      0xb800000000	                              mov eax, 0	     12261	option.c	FUNCTION_102
0x40111e0	              0xc9	                                   leave	     12262	option.c	FUNCTION_102
0x40111e1	              0xc3	                                     ret	     12262	option.c	FUNCTION_102
findoption	ELSE,2:IF,10:SWITCH,0:CALL,6:DO,0:WHILE,0:functions,0:FOR,3	149
0x400b5a4	              0x55	                                push rbp	      9332	option.c	FUNCTION_52
0x400b5a5	          0x4889e5	                            mov rbp, rsp	      9332	option.c	FUNCTION_52
0x400b5a8	        0x4883ec30	                           sub rsp, 0x30	      9332	option.c	FUNCTION_52
0x400b5ac	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9332	option.c	FUNCTION_52
0x400b5b0	     0xfb705000000	           movzx eax, word [0x0400b5b7] 	      9343	option.c	FUNCTION_52	IF_1
0x400b5b7	          0x6685c0	                             test ax, ax	      9343	option.c	FUNCTION_52	IF_1
0x400b5ba	     0xf8592000000	                           jne 0x400b652	      9343	option.c	FUNCTION_52	IF_1
0x400b5c0	    0x488b05000000	            mov rax, qword [0x0400b5c7] 	      9345	option.c	FUNCTION_52	IF_1
0x400b5c7	        0x488945f8	                mov qword [rbp - 8], rax	      9345	option.c	FUNCTION_52	IF_1
0x400b5cb	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b5d2	            0xeb61	                           jmp 0x400b635	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b5d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400b5d8	           0xfb610	                   movzx edx, byte [rax]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400b5db	        0x488b45f8	                mov rax, qword [rbp - 8]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400b5df	           0xfb600	                   movzx eax, byte [rax]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400b5e2	            0x38c2	                              cmp dl, al	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400b5e4	            0x7443	                            je 0x400b629	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400b5e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5ea	           0xfb600	                   movzx eax, byte [rax]	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5ed	            0x3c74	                            cmp al, 0x74	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5ef	            0x751b	                           jne 0x400b60c	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5f5	        0x4883c001	                              add rax, 1	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5f9	           0xfb600	                   movzx eax, byte [rax]	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5fc	            0x3c5f	                            cmp al, 0x5f	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b5fe	            0x750c	                           jne 0x400b60c	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b600	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b603	    0x668905000000	               mov word [0x0400b60a], ax	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b60a	            0xeb1d	                           jmp 0x400b629	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400b60c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b610	           0xfb600	                   movzx eax, byte [rax]	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b613	           0xfbec0	                           movsx eax, al	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b616	          0x8d509f	                   lea edx, [rax - 0x61]	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b619	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b61c	            0x89c1	                            mov ecx, eax	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b61e	          0x4863c2	                         movsxd rax, edx	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b621	    0x66898c000000	                mov word [rax + rax], cx	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400b629	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9355	option.c	FUNCTION_52	IF_1	FOR_1
0x400b62d	        0x488945f8	                mov qword [rbp - 8], rax	      9355	option.c	FUNCTION_52	IF_1	FOR_1
0x400b631	        0x8345e801	               add dword [rbp - 0x18], 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b635	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b638	            0x4898	                                    cdqe	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b63a	        0x48c1e006	                              shl rax, 6	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b63e	    0x480500000000	                              add rax, 0	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b644	          0x488b00	                    mov rax, qword [rax]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b647	        0x488945f0	             mov qword [rbp - 0x10], rax	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b64b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b650	            0x7582	                           jne 0x400b5d4	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400b652	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b656	           0xfb600	                   movzx eax, byte [rax]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b659	            0x3c60	                            cmp al, 0x60	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b65b	            0x760b	                           jbe 0x400b668	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b65d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b661	           0xfb600	                   movzx eax, byte [rax]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b664	            0x3c7a	                            cmp al, 0x7a	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b666	            0x760a	                           jbe 0x400b672	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400b668	      0xb8ffffffff	                     mov eax, 0xffffffff	      9367	option.c	FUNCTION_52	IF_4	IF_5
0x400b66d	      0xe929010000	                           jmp 0x400b79b	      9367	option.c	FUNCTION_52	IF_4	IF_5
0x400b672	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9369	option.c	FUNCTION_52
0x400b676	           0xfb600	                   movzx eax, byte [rax]	      9369	option.c	FUNCTION_52
0x400b679	            0x3c74	                            cmp al, 0x74	      9369	option.c	FUNCTION_52
0x400b67b	            0x7516	                           jne 0x400b693	      9369	option.c	FUNCTION_52
0x400b67d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9369	option.c	FUNCTION_52
0x400b681	        0x4883c001	                              add rax, 1	      9369	option.c	FUNCTION_52
0x400b685	           0xfb600	                   movzx eax, byte [rax]	      9369	option.c	FUNCTION_52
0x400b688	            0x3c5f	                            cmp al, 0x5f	      9369	option.c	FUNCTION_52
0x400b68a	            0x7507	                           jne 0x400b693	      9369	option.c	FUNCTION_52
0x400b68c	      0xb801000000	                              mov eax, 1	      9369	option.c	FUNCTION_52
0x400b691	            0xeb05	                           jmp 0x400b698	      9369	option.c	FUNCTION_52
0x400b693	      0xb800000000	                              mov eax, 0	      9369	option.c	FUNCTION_52
0x400b698	          0x8945ec	             mov dword [rbp - 0x14], eax	      9369	option.c	FUNCTION_52
0x400b69b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9370	option.c	FUNCTION_52	IF_6
0x400b69f	            0x740d	                            je 0x400b6ae	      9370	option.c	FUNCTION_52	IF_6
0x400b6a1	     0xfb705000000	           movzx eax, word [0x0400b6a8] 	      9371	option.c	FUNCTION_52	IF_6
0x400b6a8	              0x98	                                    cwde	      9371	option.c	FUNCTION_52	IF_6
0x400b6a9	          0x8945e8	             mov dword [rbp - 0x18], eax	      9371	option.c	FUNCTION_52	IF_6
0x400b6ac	            0xeb38	                           jmp 0x400b6e6	      9371	option.c	FUNCTION_52	IF_6
0x400b6ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9373	option.c	FUNCTION_52	CALL_3
0x400b6b2	           0xfb600	                   movzx eax, byte [rax]	      9373	option.c	FUNCTION_52	CALL_3
0x400b6b5	           0xfb6c0	                           movzx eax, al	      9373	option.c	FUNCTION_52	CALL_3
0x400b6b8	          0x83e861	                           sub eax, 0x61	      9373	option.c	FUNCTION_52	CALL_3
0x400b6bb	            0x4898	                                    cdqe	      9373	option.c	FUNCTION_52	CALL_3
0x400b6bd	     0xfb784000000	             movzx eax, word [rax + rax]	      9373	option.c	FUNCTION_52	CALL_3
0x400b6c5	              0x98	                                    cwde	      9373	option.c	FUNCTION_52	CALL_3
0x400b6c6	          0x8945e8	             mov dword [rbp - 0x18], eax	      9373	option.c	FUNCTION_52	CALL_3
0x400b6c9	            0xeb1b	                           jmp 0x400b6e6	      9374	option.c	FUNCTION_52	FOR_2
0x400b6cb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400b6cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400b6d3	          0x4889d6	                            mov rsi, rdx	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400b6d6	          0x4889c7	                            mov rdi, rax	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400b6d9	      0xe800000000	                          call 0x400b6de	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400b6de	            0x85c0	                           test eax, eax	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400b6e0	            0x7423	                            je 0x400b705	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400b6e2	        0x8345e801	               add dword [rbp - 0x18], 1	      9374	option.c	FUNCTION_52	FOR_2
0x400b6e6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9374	option.c	FUNCTION_52	FOR_2
0x400b6e9	            0x4898	                                    cdqe	      9374	option.c	FUNCTION_52	FOR_2
0x400b6eb	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x400b6ef	    0x480500000000	                              add rax, 0	      9374	option.c	FUNCTION_52	FOR_2
0x400b6f5	          0x488b00	                    mov rax, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x400b6f8	        0x488945f0	             mov qword [rbp - 0x10], rax	      9374	option.c	FUNCTION_52	FOR_2
0x400b6fc	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9374	option.c	FUNCTION_52	FOR_2
0x400b701	            0x75c8	                           jne 0x400b6cb	      9374	option.c	FUNCTION_52	FOR_2
0x400b703	            0xeb01	                           jmp 0x400b706	      9374	option.c	FUNCTION_52	FOR_2
0x400b705	              0x90	                                     nop	      9377	option.c	FUNCTION_52	FOR_2	IF_7
0x400b706	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9379	option.c	FUNCTION_52	IF_8
0x400b70b	            0x757d	                           jne 0x400b78a	      9379	option.c	FUNCTION_52	IF_8
0x400b70d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9379	option.c	FUNCTION_52	IF_8
0x400b711	            0x7577	                           jne 0x400b78a	      9379	option.c	FUNCTION_52	IF_8
0x400b713	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b717	           0xfb600	                   movzx eax, byte [rax]	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b71a	           0xfb6c0	                           movzx eax, al	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b71d	          0x83e861	                           sub eax, 0x61	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b720	            0x4898	                                    cdqe	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b722	     0xfb784000000	             movzx eax, word [rax + rax]	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b72a	              0x98	                                    cwde	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b72b	          0x8945e8	             mov dword [rbp - 0x18], eax	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x400b72e	            0xeb40	                           jmp 0x400b770	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b730	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x400b733	            0x4898	                                    cdqe	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x400b735	        0x48c1e006	                              shl rax, 6	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x400b739	    0x480500000000	                              add rax, 0	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x400b73f	          0x488b00	                    mov rax, qword [rax]	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x400b742	        0x488945f0	             mov qword [rbp - 0x10], rax	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x400b746	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b74b	            0x7417	                            je 0x400b764	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b74d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b751	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b755	          0x4889d6	                            mov rsi, rdx	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b758	          0x4889c7	                            mov rdi, rax	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b75b	      0xe800000000	                          call 0x400b760	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b760	            0x85c0	                           test eax, eax	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b762	            0x7425	                            je 0x400b789	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400b764	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      9387	option.c	FUNCTION_52	IF_8	FOR_3
0x400b76c	        0x8345e801	               add dword [rbp - 0x18], 1	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b770	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b773	            0x4898	                                    cdqe	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b775	        0x48c1e006	                              shl rax, 6	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b779	    0x480500000000	                              add rax, 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b77f	          0x488b00	                    mov rax, qword [rax]	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b782	          0x4885c0	                           test rax, rax	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b785	            0x75a9	                           jne 0x400b730	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b787	            0xeb01	                           jmp 0x400b78a	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400b789	              0x90	                                     nop	      9386	option.c	FUNCTION_52	IF_8	FOR_3	IF_9
0x400b78a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9390	option.c	FUNCTION_52	IF_10
0x400b78f	            0x7507	                           jne 0x400b798	      9390	option.c	FUNCTION_52	IF_10
0x400b791	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	      9391	option.c	FUNCTION_52	IF_10
0x400b798	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9392	option.c	FUNCTION_52
0x400b79b	              0xc9	                                   leave	      9393	option.c	FUNCTION_52
0x400b79c	              0xc3	                                     ret	      9393	option.c	FUNCTION_52
vimrc_found	ELSE,1:IF,6:SWITCH,0:CALL,10:DO,0:WHILE,0:functions,0:FOR,1	79
0x4011000	              0x55	                                push rbp	     12196	option.c	FUNCTION_100
0x4011001	          0x4889e5	                            mov rbp, rsp	     12196	option.c	FUNCTION_100
0x4011004	        0x4883ec30	                           sub rsp, 0x30	     12196	option.c	FUNCTION_100
0x4011008	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     12196	option.c	FUNCTION_100
0x401100c	        0x488975d0	             mov qword [rbp - 0x30], rsi	     12196	option.c	FUNCTION_100
0x4011010	    0x64488b042528	                mov rax, qword fs:[0x28]	     12196	option.c	FUNCTION_100
0x4011019	        0x488945f8	                mov qword [rbp - 8], rax	     12196	option.c	FUNCTION_100
0x401101d	            0x31c0	                            xor eax, eax	     12196	option.c	FUNCTION_100
0x401101f	    0xc745e8000000	               mov dword [rbp - 0x18], 0	     12198	option.c	FUNCTION_100
0x4011026	      0xbf00000000	                              mov edi, 0	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x401102b	      0xe800000000	                          call 0x4011030	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x4011030	            0x85c0	                           test eax, eax	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x4011032	            0x756c	                           jne 0x40110a0	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x4011034	    0xc70500000000	               mov dword [0x0401103e], 0	     12203	option.c	FUNCTION_100	IF_1
0x401103e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x4011045	            0xeb34	                           jmp 0x401107b	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x4011047	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x401104a	            0x4898	                                    cdqe	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x401104c	        0x48c1e006	                              shl rax, 6	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011050	    0x480500000000	                              add rax, 0	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011056	          0x488b00	                    mov rax, qword [rax]	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011059	      0x2500050000	                          and eax, 0x500	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x401105e	          0x4885c0	                           test rax, rax	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011061	            0x7514	                           jne 0x4011077	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011063	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011066	      0xba00000000	                              mov edx, 0	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x401106b	      0xbe01000000	                              mov esi, 1	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011070	            0x89c7	                            mov edi, eax	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011072	      0xe871f7feff	             call sym.set_option_default	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x4011077	        0x8345ec01	               add dword [rbp - 0x14], 1	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x401107b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x401107e	            0x4898	                                    cdqe	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x4011080	        0x48c1e006	                              shl rax, 6	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x4011084	    0x480500000000	                              add rax, 0	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x401108a	          0x4889c7	                            mov rdi, rax	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x401108d	      0xe8dfbcffff	                   call sym.istermoption	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x4011092	            0x85c0	                           test eax, eax	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x4011094	            0x74b1	                            je 0x4011047	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x4011096	      0xe8b130ffff	                 call sym.didset_options	     12207	option.c	FUNCTION_100	IF_1	CALL_4
0x401109b	      0xe86032ffff	                call sym.didset_options2	     12208	option.c	FUNCTION_100	IF_1	CALL_5
0x40110a0	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     12211	option.c	FUNCTION_100	IF_3
0x40110a5	            0x746e	                            je 0x4011115	     12211	option.c	FUNCTION_100	IF_3
0x40110a7	        0x488d55e8	                   lea rdx, [rbp - 0x18]	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x40110ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x40110af	          0x4889d6	                            mov rsi, rdx	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x40110b2	          0x4889c7	                            mov rdi, rax	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x40110b5	      0xe800000000	                          call 0x40110ba	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x40110ba	        0x488945f0	             mov qword [rbp - 0x10], rax	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x40110be	      0x48837df000	               cmp qword [rbp - 0x10], 0	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x40110c3	            0x753d	                           jne 0x4011102	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x40110c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x40110c9	      0xbe00000000	                              mov esi, 0	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x40110ce	          0x4889c7	                            mov rdi, rax	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x40110d1	      0xe800000000	                          call 0x40110d6	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x40110d6	        0x488945f0	             mov qword [rbp - 0x10], rax	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x40110da	      0x48837df000	               cmp qword [rbp - 0x10], 0	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x40110df	            0x7434	                            je 0x4011115	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x40110e1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x40110e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x40110e9	          0x4889d6	                            mov rsi, rdx	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x40110ec	          0x4889c7	                            mov rdi, rax	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x40110ef	      0xe800000000	                          call 0x40110f4	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x40110f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x40110f8	          0x4889c7	                            mov rdi, rax	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x40110fb	      0xe800000000	                          call 0x4011100	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x4011100	            0xeb13	                           jmp 0x4011115	     12227	option.c	FUNCTION_100
0x4011102	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x4011105	            0x85c0	                           test eax, eax	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x4011107	            0x740c	                            je 0x4011115	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x4011109	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x401110d	          0x4889c7	                            mov rdi, rax	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x4011110	      0xe800000000	                          call 0x4011115	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x4011115	              0x90	                                     nop	     12227	option.c	FUNCTION_100
0x4011116	        0x488b45f8	                mov rax, qword [rbp - 8]	     12227	option.c	FUNCTION_100
0x401111a	    0x644833042528	                xor rax, qword fs:[0x28]	     12227	option.c	FUNCTION_100
0x4011123	            0x7405	                            je 0x401112a	     12227	option.c	FUNCTION_100
0x4011125	      0xe800000000	                          call 0x401112a	     12227	option.c	FUNCTION_100
0x401112a	              0xc9	                                   leave	     12227	option.c	FUNCTION_100
0x401112b	              0xc3	                                     ret	     12227	option.c	FUNCTION_100
valid_filetype	ELSE,0:IF,1:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,1	43
0x4004d9f	              0x55	                                push rbp	      6017	option.c	FUNCTION_39
0x4004da0	          0x4889e5	                            mov rbp, rsp	      6017	option.c	FUNCTION_39
0x4004da3	        0x4883ec20	                           sub rsp, 0x20	      6017	option.c	FUNCTION_39
0x4004da7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6017	option.c	FUNCTION_39
0x4004dab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6020	option.c	FUNCTION_39	FOR_1
0x4004daf	        0x488945f8	                mov qword [rbp - 8], rax	      6020	option.c	FUNCTION_39	FOR_1
0x4004db3	            0xeb5d	                           jmp 0x4004e12	      6020	option.c	FUNCTION_39	FOR_1
0x4004db5	        0x488b45f8	                mov rax, qword [rbp - 8]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004db9	           0xfb600	                   movzx eax, byte [rax]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dbc	           0xfb6c0	                           movzx eax, al	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dbf	          0x83e841	                           sub eax, 0x41	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dc2	          0x83f819	                           cmp eax, 0x19	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dc5	            0x7646	                           jbe 0x4004e0d	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dc7	        0x488b45f8	                mov rax, qword [rbp - 8]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dcb	           0xfb600	                   movzx eax, byte [rax]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dce	           0xfb6c0	                           movzx eax, al	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dd1	          0x83e861	                           sub eax, 0x61	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dd4	          0x83f819	                           cmp eax, 0x19	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dd7	            0x7634	                           jbe 0x4004e0d	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dd9	        0x488b45f8	                mov rax, qword [rbp - 8]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004ddd	           0xfb600	                   movzx eax, byte [rax]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004de0	           0xfb6c0	                           movzx eax, al	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004de3	          0x83e830	                           sub eax, 0x30	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004de6	          0x83f809	                              cmp eax, 9	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004de9	            0x7622	                           jbe 0x4004e0d	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004deb	        0x488b45f8	                mov rax, qword [rbp - 8]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004def	           0xfb600	                   movzx eax, byte [rax]	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004df2	           0xfb6c0	                           movzx eax, al	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004df5	            0x89c6	                            mov esi, eax	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004df7	      0xbf00000000	                              mov edi, 0	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004dfc	      0xe800000000	                          call 0x4004e01	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004e01	          0x4885c0	                           test rax, rax	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004e04	            0x7507	                           jne 0x4004e0d	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4004e06	      0xb800000000	                              mov eax, 0	      6022	option.c	FUNCTION_39	FOR_1	IF_1
0x4004e0b	            0xeb15	                           jmp 0x4004e22	      6022	option.c	FUNCTION_39	FOR_1	IF_1
0x4004e0d	      0x488345f801	                  add qword [rbp - 8], 1	      6020	option.c	FUNCTION_39	FOR_1
0x4004e12	        0x488b45f8	                mov rax, qword [rbp - 8]	      6020	option.c	FUNCTION_39	FOR_1
0x4004e16	           0xfb600	                   movzx eax, byte [rax]	      6020	option.c	FUNCTION_39	FOR_1
0x4004e19	            0x84c0	                             test al, al	      6020	option.c	FUNCTION_39	FOR_1
0x4004e1b	            0x7598	                           jne 0x4004db5	      6020	option.c	FUNCTION_39	FOR_1
0x4004e1d	      0xb801000000	                              mov eax, 1	      6023	option.c	FUNCTION_39
0x4004e22	              0xc9	                                   leave	      6024	option.c	FUNCTION_39
0x4004e23	              0xc3	                                     ret	      6024	option.c	FUNCTION_39
opt_strings_flags	ELSE,0:IF,3:SWITCH,0:CALL,2:DO,0:WHILE,1:functions,0:FOR,1	92
0x4011362	              0x55	                                push rbp	     12355	option.c	FUNCTION_107
0x4011363	          0x4889e5	                            mov rbp, rsp	     12355	option.c	FUNCTION_107
0x4011366	        0x4883ec30	                           sub rsp, 0x30	     12355	option.c	FUNCTION_107
0x401136a	        0x48897de8	             mov qword [rbp - 0x18], rdi	     12355	option.c	FUNCTION_107
0x401136e	        0x488975e0	             mov qword [rbp - 0x20], rsi	     12355	option.c	FUNCTION_107
0x4011372	        0x488955d8	             mov qword [rbp - 0x28], rdx	     12355	option.c	FUNCTION_107
0x4011376	          0x894dd4	             mov dword [rbp - 0x2c], ecx	     12355	option.c	FUNCTION_107
0x4011379	    0xc745f8000000	                  mov dword [rbp - 8], 0	     12358	option.c	FUNCTION_107
0x4011380	      0xe9ec000000	                           jmp 0x4011471	     12360	option.c	FUNCTION_107	WHILE_1
0x4011385	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     12362	option.c	FUNCTION_107	WHILE_1	FOR_1
0x401138c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x401138f	            0x4898	                                    cdqe	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4011391	    0x488d14c50000	                        lea rdx, [rax*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4011399	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x401139d	          0x4801d0	                            add rax, rdx	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40113a0	          0x488b00	                    mov rax, qword [rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40113a3	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40113a6	            0x750a	                           jne 0x40113b2	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40113a8	      0xb800000000	                              mov eax, 0	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40113ad	      0xe9e3000000	                           jmp 0x4011495	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40113b2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113b5	            0x4898	                                    cdqe	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113b7	    0x488d14c50000	                        lea rdx, [rax*8]	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113c3	          0x4801d0	                            add rax, rdx	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113c6	          0x488b00	                    mov rax, qword [rax]	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113c9	          0x4889c7	                            mov rdi, rax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113cc	      0xe800000000	                          call 0x40113d1	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113d1	          0x8945fc	                mov dword [rbp - 4], eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40113d4	          0x8b45fc	                mov eax, dword [rbp - 4]	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113d7	          0x4863d0	                         movsxd rdx, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113da	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113dd	            0x4898	                                    cdqe	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113df	    0x488d0cc50000	                        lea rcx, [rax*8]	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113eb	          0x4801c8	                            add rax, rcx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113ee	          0x488b00	                    mov rax, qword [rax]	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113f1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113f5	          0x4889ce	                            mov rsi, rcx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113f8	          0x4889c7	                            mov rdi, rax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40113fb	      0xe800000000	                          call 0x4011400	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4011400	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4011402	            0x7564	                           jne 0x4011468	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4011404	        0x837dd400	               cmp dword [rbp - 0x2c], 0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011408	            0x7414	                            je 0x401141e	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401140a	          0x8b45fc	                mov eax, dword [rbp - 4]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401140d	          0x4863d0	                         movsxd rdx, eax	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011410	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011414	          0x4801d0	                            add rax, rdx	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011417	           0xfb600	                   movzx eax, byte [rax]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401141a	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401141c	            0x7414	                            je 0x4011432	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401141e	          0x8b45fc	                mov eax, dword [rbp - 4]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011421	          0x4863d0	                         movsxd rdx, eax	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011424	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011428	          0x4801d0	                            add rax, rdx	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401142b	           0xfb600	                   movzx eax, byte [rax]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401142e	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011430	            0x7536	                           jne 0x4011468	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011432	          0x8b45fc	                mov eax, dword [rbp - 4]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011435	          0x4863d0	                         movsxd rdx, eax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011438	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401143c	          0x4801d0	                            add rax, rdx	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401143f	           0xfb600	                   movzx eax, byte [rax]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011442	            0x3c2c	                            cmp al, 0x2c	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011444	           0xf94c0	                                 sete al	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011447	           0xfb6d0	                           movzx edx, al	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401144a	          0x8b45fc	                mov eax, dword [rbp - 4]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401144d	             0x1d0	                            add eax, edx	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401144f	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011451	        0x480145e8	            add qword [rbp - 0x18], rax 	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011455	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011458	      0xba01000000	                              mov edx, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401145d	            0x89c1	                            mov ecx, eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x401145f	            0xd3e2	                             shl edx, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011461	            0x89d0	                            mov eax, edx	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011463	           0x945f8	                 or dword [rbp - 8], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011466	            0xeb09	                           jmp 0x4011471	     12373	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4011468	        0x8345f401	                add dword [rbp - 0xc], 1	     12362	option.c	FUNCTION_107	WHILE_1	FOR_1
0x401146c	      0xe91bffffff	                           jmp 0x401138c	     12375	option.c	FUNCTION_107	WHILE_1	FOR_1
0x4011471	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12360	option.c	FUNCTION_107	WHILE_1
0x4011475	           0xfb600	                   movzx eax, byte [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4011478	            0x84c0	                             test al, al	     12360	option.c	FUNCTION_107	WHILE_1
0x401147a	     0xf8505ffffff	                           jne 0x4011385	     12360	option.c	FUNCTION_107	WHILE_1
0x4011480	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     12377	option.c	FUNCTION_107	IF_3
0x4011485	            0x7409	                            je 0x4011490	     12377	option.c	FUNCTION_107	IF_3
0x4011487	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12378	option.c	FUNCTION_107	IF_3
0x401148b	          0x8b55f8	                mov edx, dword [rbp - 8]	     12378	option.c	FUNCTION_107	IF_3
0x401148e	            0x8910	                    mov dword [rax], edx	     12378	option.c	FUNCTION_107	IF_3
0x4011490	      0xb801000000	                              mov eax, 1	     12380	option.c	FUNCTION_107
0x4011495	              0xc9	                                   leave	     12381	option.c	FUNCTION_107
0x4011496	              0xc3	                                     ret	     12381	option.c	FUNCTION_107
was_set_insecurely	ELSE,0:IF,1:SWITCH,0:CALL,2:DO,0:WHILE,0:functions,0:FOR,0	29
0x4004836	              0x55	                                push rbp	      5800	option.c	FUNCTION_34
0x4004837	          0x4889e5	                            mov rbp, rsp	      5800	option.c	FUNCTION_34
0x400483a	        0x4883ec20	                           sub rsp, 0x20	      5800	option.c	FUNCTION_34
0x400483e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5800	option.c	FUNCTION_34
0x4004842	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5800	option.c	FUNCTION_34
0x4004845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5801	option.c	FUNCTION_34	CALL_1
0x4004849	          0x4889c7	                            mov rdi, rax	      5801	option.c	FUNCTION_34	CALL_1
0x400484c	      0xe8536d0000	                     call sym.findoption	      5801	option.c	FUNCTION_34	CALL_1
0x4004851	          0x8945f4	              mov dword [rbp - 0xc], eax	      5801	option.c	FUNCTION_34	CALL_1
0x4004854	        0x837df400	                cmp dword [rbp - 0xc], 0	      5804	option.c	FUNCTION_34	IF_1
0x4004858	            0x782a	                            js 0x4004884	      5804	option.c	FUNCTION_34	IF_1
0x400485a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5806	option.c	FUNCTION_34	IF_1
0x400485d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5806	option.c	FUNCTION_34	IF_1
0x4004860	            0x89d6	                            mov esi, edx	      5806	option.c	FUNCTION_34	IF_1
0x4004862	            0x89c7	                            mov edi, eax	      5806	option.c	FUNCTION_34	IF_1
0x4004864	      0xe82c000000	                  call sym.insecure_flag	      5806	option.c	FUNCTION_34	IF_1
0x4004869	        0x488945f8	                mov qword [rbp - 8], rax	      5806	option.c	FUNCTION_34	IF_1
0x400486d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5807	option.c	FUNCTION_34	IF_1
0x4004871	          0x488b00	                    mov rax, qword [rax]	      5807	option.c	FUNCTION_34	IF_1
0x4004874	      0x2500008000	                       and eax, 0x800000	      5807	option.c	FUNCTION_34	IF_1
0x4004879	          0x4885c0	                           test rax, rax	      5807	option.c	FUNCTION_34	IF_1
0x400487c	           0xf95c0	                                setne al	      5807	option.c	FUNCTION_34	IF_1
0x400487f	           0xfb6c0	                           movzx eax, al	      5807	option.c	FUNCTION_34	IF_1
0x4004882	            0xeb0f	                           jmp 0x4004893	      5807	option.c	FUNCTION_34	IF_1
0x4004884	      0xbf00000000	                              mov edi, 0	      5809	option.c	FUNCTION_34	CALL_2
0x4004889	      0xe800000000	                          call 0x400488e	      5809	option.c	FUNCTION_34	CALL_2
0x400488e	      0xb8ffffffff	                     mov eax, 0xffffffff	      5810	option.c	FUNCTION_34
0x4004893	              0xc9	                                   leave	      5811	option.c	FUNCTION_34
0x4004894	              0xc3	                                     ret	      5811	option.c	FUNCTION_34
check_redraw	ELSE,1:IF,6:SWITCH,0:CALL,6:DO,0:WHILE,0:functions,0:FOR,0	62
0x400b4c5	              0x55	                                push rbp	      9306	option.c	FUNCTION_51
0x400b4c6	          0x4889e5	                            mov rbp, rsp	      9306	option.c	FUNCTION_51
0x400b4c9	        0x4883ec20	                           sub rsp, 0x20	      9306	option.c	FUNCTION_51
0x400b4cd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9306	option.c	FUNCTION_51
0x400b4d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9308	option.c	FUNCTION_51
0x400b4d5	      0x2500700000	                         and eax, 0x7000	      9308	option.c	FUNCTION_51
0x400b4da	    0x483d00700000	                         cmp rax, 0x7000	      9308	option.c	FUNCTION_51
0x400b4e0	           0xf94c0	                                 sete al	      9308	option.c	FUNCTION_51
0x400b4e3	           0xfb6c0	                           movzx eax, al	      9308	option.c	FUNCTION_51
0x400b4e6	          0x8945f8	                mov dword [rbp - 8], eax	      9308	option.c	FUNCTION_51
0x400b4e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9309	option.c	FUNCTION_51
0x400b4ed	      0x2500600000	                         and eax, 0x6000	      9309	option.c	FUNCTION_51
0x400b4f2	    0x483d00600000	                         cmp rax, 0x6000	      9309	option.c	FUNCTION_51
0x400b4f8	            0x7406	                            je 0x400b500	      9309	option.c	FUNCTION_51
0x400b4fa	        0x837df800	                  cmp dword [rbp - 8], 0	      9309	option.c	FUNCTION_51
0x400b4fe	            0x7407	                            je 0x400b507	      9309	option.c	FUNCTION_51
0x400b500	      0xb801000000	                              mov eax, 1	      9309	option.c	FUNCTION_51
0x400b505	            0xeb05	                           jmp 0x400b50c	      9309	option.c	FUNCTION_51
0x400b507	      0xb800000000	                              mov eax, 0	      9309	option.c	FUNCTION_51
0x400b50c	          0x8945fc	                mov dword [rbp - 4], eax	      9309	option.c	FUNCTION_51
0x400b50f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9311	option.c	FUNCTION_51	IF_1
0x400b513	      0x2500100000	                         and eax, 0x1000	      9311	option.c	FUNCTION_51	IF_1
0x400b518	          0x4885c0	                           test rax, rax	      9311	option.c	FUNCTION_51	IF_1
0x400b51b	            0x7506	                           jne 0x400b523	      9311	option.c	FUNCTION_51	IF_1
0x400b51d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9311	option.c	FUNCTION_51	IF_1
0x400b521	            0x7405	                            je 0x400b528	      9311	option.c	FUNCTION_51	IF_1
0x400b523	      0xe800000000	                          call 0x400b528	      9312	option.c	FUNCTION_51	CALL_1
0x400b528	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9314	option.c	FUNCTION_51	IF_2
0x400b52c	      0x2500400000	                         and eax, 0x4000	      9314	option.c	FUNCTION_51	IF_2
0x400b531	          0x4885c0	                           test rax, rax	      9314	option.c	FUNCTION_51	IF_2
0x400b534	            0x7514	                           jne 0x400b54a	      9314	option.c	FUNCTION_51	IF_2
0x400b536	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9314	option.c	FUNCTION_51	IF_2
0x400b53a	      0x2500200000	                         and eax, 0x2000	      9314	option.c	FUNCTION_51	IF_2
0x400b53f	          0x4885c0	                           test rax, rax	      9314	option.c	FUNCTION_51	IF_2
0x400b542	            0x7506	                           jne 0x400b54a	      9314	option.c	FUNCTION_51	IF_2
0x400b544	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9314	option.c	FUNCTION_51	IF_2
0x400b548	            0x7405	                            je 0x400b54f	      9314	option.c	FUNCTION_51	IF_2
0x400b54a	      0xe800000000	                          call 0x400b54f	      9315	option.c	FUNCTION_51	CALL_2
0x400b54f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9316	option.c	FUNCTION_51	IF_3
0x400b553	      0x2500400000	                         and eax, 0x4000	      9316	option.c	FUNCTION_51	IF_3
0x400b558	          0x4885c0	                           test rax, rax	      9316	option.c	FUNCTION_51	IF_3
0x400b55b	            0x740a	                            je 0x400b567	      9316	option.c	FUNCTION_51	IF_3
0x400b55d	      0xbf28000000	                           mov edi, 0x28	      9317	option.c	FUNCTION_51	CALL_3
0x400b562	      0xe800000000	                          call 0x400b567	      9317	option.c	FUNCTION_51	CALL_3
0x400b567	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9318	option.c	FUNCTION_51	IF_4
0x400b56b	      0x2500000010	                     and eax, 0x10000000	      9318	option.c	FUNCTION_51	IF_4
0x400b570	          0x4885c0	                           test rax, rax	      9318	option.c	FUNCTION_51	IF_4
0x400b573	            0x740a	                            je 0x400b57f	      9318	option.c	FUNCTION_51	IF_4
0x400b575	      0xbf28000000	                           mov edi, 0x28	      9319	option.c	FUNCTION_51	CALL_4
0x400b57a	      0xe800000000	                          call 0x400b57f	      9319	option.c	FUNCTION_51	CALL_4
0x400b57f	        0x837df800	                  cmp dword [rbp - 8], 0	      9320	option.c	FUNCTION_51	IF_5
0x400b583	            0x740c	                            je 0x400b591	      9320	option.c	FUNCTION_51	IF_5
0x400b585	      0xbf32000000	                           mov edi, 0x32	      9321	option.c	FUNCTION_51	CALL_5
0x400b58a	      0xe800000000	                          call 0x400b58f	      9321	option.c	FUNCTION_51	CALL_5
0x400b58f	            0xeb10	                           jmp 0x400b5a1	      9324	option.c	FUNCTION_51
0x400b591	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x400b595	            0x740a	                            je 0x400b5a1	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x400b597	      0xbf28000000	                           mov edi, 0x28	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400b59c	      0xe800000000	                          call 0x400b5a1	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400b5a1	              0x90	                                     nop	      9324	option.c	FUNCTION_51
0x400b5a2	              0xc9	                                   leave	      9324	option.c	FUNCTION_51
0x400b5a3	              0xc3	                                     ret	      9324	option.c	FUNCTION_51
