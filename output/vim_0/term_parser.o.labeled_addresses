do_control	WHILE,0:DO,0:functions,0:CALL,1:FOR,0:IF,2:SWITCH,0:ELSE,0	27
0x4000063	              0x55	                                push rbp	        14	parser.c	FUNCTION_2
0x4000064	          0x4889e5	                            mov rbp, rsp	        14	parser.c	FUNCTION_2
0x4000067	        0x4883ec10	                           sub rsp, 0x10	        14	parser.c	FUNCTION_2
0x400006b	        0x48897df8	                mov qword [rbp - 8], rdi	        14	parser.c	FUNCTION_2
0x400006f	            0x89f0	                            mov eax, esi	        14	parser.c	FUNCTION_2
0x4000071	          0x8845f4	                mov byte [rbp - 0xc], al	        14	parser.c	FUNCTION_2
0x4000074	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	parser.c	FUNCTION_2	IF_1
0x4000078	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        15	parser.c	FUNCTION_2	IF_1
0x400007f	          0x4885c0	                           test rax, rax	        15	parser.c	FUNCTION_2	IF_1
0x4000082	            0x743b	                            je 0x40000bf	        15	parser.c	FUNCTION_2	IF_1
0x4000084	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	parser.c	FUNCTION_2	IF_1
0x4000088	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        15	parser.c	FUNCTION_2	IF_1
0x400008f	        0x488b4008	                mov rax, qword [rax + 8]	        15	parser.c	FUNCTION_2	IF_1
0x4000093	          0x4885c0	                           test rax, rax	        15	parser.c	FUNCTION_2	IF_1
0x4000096	            0x7427	                            je 0x40000bf	        15	parser.c	FUNCTION_2	IF_1
0x4000098	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x400009c	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000a3	        0x488b4008	                mov rax, qword [rax + 8]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000ab	    0x488b8ad80000	            mov rcx, qword [rdx + 0xd8] 	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000b2	         0xfb655f4	             movzx edx, byte [rbp - 0xc]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000b6	          0x4889ce	                            mov rsi, rcx	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000b9	            0x89d7	                            mov edi, edx	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000bb	            0xffd0	                                call rax	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000bd	            0x85c0	                           test eax, eax	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x40000bf	              0xc9	                                   leave	        20	parser.c	FUNCTION_2
0x40000c0	              0xc3	                                     ret	        20	parser.c	FUNCTION_2
append_strbuffer	WHILE,0:DO,0:functions,0:CALL,2:FOR,0:IF,2:SWITCH,0:ELSE,0	42
0x400022e	              0x55	                                push rbp	        65	parser.c	FUNCTION_5
0x400022f	          0x4889e5	                            mov rbp, rsp	        65	parser.c	FUNCTION_5
0x4000232	        0x4883ec20	                           sub rsp, 0x20	        65	parser.c	FUNCTION_5
0x4000236	        0x48897df8	                mov qword [rbp - 8], rdi	        65	parser.c	FUNCTION_5
0x400023a	        0x488975f0	             mov qword [rbp - 0x10], rsi	        65	parser.c	FUNCTION_5
0x400023e	        0x488955e8	             mov qword [rbp - 0x18], rdx	        65	parser.c	FUNCTION_5
0x4000242	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	parser.c	FUNCTION_5	IF_1
0x4000246	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	        66	parser.c	FUNCTION_5	IF_1
0x400024d	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	parser.c	FUNCTION_5	IF_1
0x4000251	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        66	parser.c	FUNCTION_5	IF_1
0x4000258	          0x4829c2	                            sub rdx, rax	        66	parser.c	FUNCTION_5	IF_1
0x400025b	          0x4889d0	                            mov rax, rdx	        66	parser.c	FUNCTION_5	IF_1
0x400025e	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        66	parser.c	FUNCTION_5	IF_1
0x4000262	            0x7320	                           jae 0x4000284	        66	parser.c	FUNCTION_5	IF_1
0x4000264	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	parser.c	FUNCTION_5	IF_1
0x4000268	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	        67	parser.c	FUNCTION_5	IF_1
0x400026f	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	parser.c	FUNCTION_5	IF_1
0x4000273	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        67	parser.c	FUNCTION_5	IF_1
0x400027a	          0x4829c2	                            sub rdx, rax	        67	parser.c	FUNCTION_5	IF_1
0x400027d	          0x4889d0	                            mov rax, rdx	        67	parser.c	FUNCTION_5	IF_1
0x4000280	        0x488945e8	             mov qword [rbp - 0x18], rax	        67	parser.c	FUNCTION_5	IF_1
0x4000284	      0x48837de800	               cmp qword [rbp - 0x18], 0	        71	parser.c	FUNCTION_5	IF_2
0x4000289	            0x744a	                            je 0x40002d5	        71	parser.c	FUNCTION_5	IF_2
0x400028b	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x400028f	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x4000296	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x400029a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x40002a1	        0x488d0c02	                    lea rcx, [rdx + rax]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x40002a5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x40002a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x40002ad	          0x4889c6	                            mov rsi, rax	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x40002b0	          0x4889cf	                            mov rdi, rcx	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x40002b3	      0xe800000000	                          call 0x40002b8	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x40002b8	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	parser.c	FUNCTION_5	IF_2
0x40002bc	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	        73	parser.c	FUNCTION_5	IF_2
0x40002c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	parser.c	FUNCTION_5	IF_2
0x40002c7	          0x4801c2	                            add rdx, rax	        73	parser.c	FUNCTION_5	IF_2
0x40002ca	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	parser.c	FUNCTION_5	IF_2
0x40002ce	    0x488990f80000	             mov qword [rax + 0xf8], rdx	        73	parser.c	FUNCTION_5	IF_2
0x40002d5	              0x90	                                     nop	        75	parser.c	FUNCTION_5
0x40002d6	              0xc9	                                   leave	        75	parser.c	FUNCTION_5
0x40002d7	              0xc3	                                     ret	        75	parser.c	FUNCTION_5
is_intermed	WHILE,0:DO,0:functions,0:CALL,0:FOR,0:IF,0:SWITCH,0:ELSE,0	13
0x4000040	              0x55	                                push rbp	         9	parser.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	         9	parser.c	FUNCTION_1
0x4000044	            0x89f8	                            mov eax, edi	         9	parser.c	FUNCTION_1
0x4000046	          0x8845fc	                  mov byte [rbp - 4], al	         9	parser.c	FUNCTION_1
0x4000049	        0x807dfc1f	                cmp byte [rbp - 4], 0x1f	        10	parser.c	FUNCTION_1
0x400004d	            0x760d	                           jbe 0x400005c	        10	parser.c	FUNCTION_1
0x400004f	        0x807dfc2f	                cmp byte [rbp - 4], 0x2f	        10	parser.c	FUNCTION_1
0x4000053	            0x7707	                            ja 0x400005c	        10	parser.c	FUNCTION_1
0x4000055	      0xb801000000	                              mov eax, 1	        10	parser.c	FUNCTION_1
0x400005a	            0xeb05	                           jmp 0x4000061	        10	parser.c	FUNCTION_1
0x400005c	      0xb800000000	                              mov eax, 0	        10	parser.c	FUNCTION_1
0x4000061	              0x5d	                                 pop rbp	        11	parser.c	FUNCTION_1
0x4000062	              0xc3	                                     ret	        11	parser.c	FUNCTION_1
vterm_parser_get_cbdata	WHILE,0:DO,0:functions,0:CALL,0:FOR,0:IF,0:SWITCH,0:ELSE,0	7
0x4000cd5	              0x55	                                push rbp	       344	parser.c	FUNCTION_11
0x4000cd6	          0x4889e5	                            mov rbp, rsp	       344	parser.c	FUNCTION_11
0x4000cd9	        0x48897df8	                mov qword [rbp - 8], rdi	       344	parser.c	FUNCTION_11
0x4000cdd	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	parser.c	FUNCTION_11
0x4000ce1	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       345	parser.c	FUNCTION_11
0x4000ce8	              0x5d	                                 pop rbp	       346	parser.c	FUNCTION_11
0x4000ce9	              0xc3	                                     ret	       346	parser.c	FUNCTION_11
do_escape	WHILE,0:DO,0:functions,0:CALL,2:FOR,0:IF,2:SWITCH,0:ELSE,0	54
0x4000161	              0x55	                                push rbp	        49	parser.c	FUNCTION_4
0x4000162	          0x4889e5	                            mov rbp, rsp	        49	parser.c	FUNCTION_4
0x4000165	        0x4883ec40	                           sub rsp, 0x40	        49	parser.c	FUNCTION_4
0x4000169	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        49	parser.c	FUNCTION_4
0x400016d	            0x89f0	                            mov eax, esi	        49	parser.c	FUNCTION_4
0x400016f	          0x8845c4	               mov byte [rbp - 0x3c], al	        49	parser.c	FUNCTION_4
0x4000172	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	parser.c	FUNCTION_4
0x400017b	        0x488945f8	                mov qword [rbp - 8], rax	        49	parser.c	FUNCTION_4
0x400017f	            0x31c0	                            xor eax, eax	        49	parser.c	FUNCTION_4
0x4000181	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        52	parser.c	FUNCTION_4
0x4000185	          0x8b4024	            mov eax, dword [rax + 0x24] 	        52	parser.c	FUNCTION_4
0x4000188	            0x4898	                                    cdqe	        52	parser.c	FUNCTION_4
0x400018a	        0x488945d8	             mov qword [rbp - 0x28], rax	        52	parser.c	FUNCTION_4
0x400018e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        53	parser.c	FUNCTION_4	CALL_1
0x4000192	        0x488d4828	                   lea rcx, [rax + 0x28]	        53	parser.c	FUNCTION_4	CALL_1
0x4000196	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        53	parser.c	FUNCTION_4	CALL_1
0x400019a	        0x488d45e0	                   lea rax, [rbp - 0x20]	        53	parser.c	FUNCTION_4	CALL_1
0x400019e	          0x4889ce	                            mov rsi, rcx	        53	parser.c	FUNCTION_4	CALL_1
0x40001a1	          0x4889c7	                            mov rdi, rax	        53	parser.c	FUNCTION_4	CALL_1
0x40001a4	      0xe800000000	                          call 0x40001a9	        53	parser.c	FUNCTION_4	CALL_1
0x40001a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        54	parser.c	FUNCTION_4
0x40001ad	        0x488d5001	                      lea rdx, [rax + 1]	        54	parser.c	FUNCTION_4
0x40001b1	        0x488955d8	             mov qword [rbp - 0x28], rdx	        54	parser.c	FUNCTION_4
0x40001b5	         0xfb655c4	            movzx edx, byte [rbp - 0x3c]	        54	parser.c	FUNCTION_4
0x40001b9	        0x885405e0	         mov byte [rbp + rax - 0x20], dl	        54	parser.c	FUNCTION_4
0x40001bd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        55	parser.c	FUNCTION_4
0x40001c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	parser.c	FUNCTION_4
0x40001c5	          0x4801d0	                            add rax, rdx	        55	parser.c	FUNCTION_4
0x40001c8	          0xc60000	                       mov byte [rax], 0	        55	parser.c	FUNCTION_4
0x40001cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        57	parser.c	FUNCTION_4	IF_1
0x40001cf	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        57	parser.c	FUNCTION_4	IF_1
0x40001d6	          0x4885c0	                           test rax, rax	        57	parser.c	FUNCTION_4	IF_1
0x40001d9	            0x743d	                            je 0x4000218	        57	parser.c	FUNCTION_4	IF_1
0x40001db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        57	parser.c	FUNCTION_4	IF_1
0x40001df	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        57	parser.c	FUNCTION_4	IF_1
0x40001e6	        0x488b4010	            mov rax, qword [rax + 0x10] 	        57	parser.c	FUNCTION_4	IF_1
0x40001ea	          0x4885c0	                           test rax, rax	        57	parser.c	FUNCTION_4	IF_1
0x40001ed	            0x7429	                            je 0x4000218	        57	parser.c	FUNCTION_4	IF_1
0x40001ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x40001f3	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x40001fa	        0x488b4010	            mov rax, qword [rax + 0x10] 	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x40001fe	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x4000202	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x4000209	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x400020d	        0x488d4de0	                   lea rcx, [rbp - 0x20]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x4000211	          0x4889cf	                            mov rdi, rcx	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x4000214	            0xffd0	                                call rax	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x4000216	            0x85c0	                           test eax, eax	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x4000218	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	parser.c	FUNCTION_4
0x400021c	    0x644833042528	                xor rax, qword fs:[0x28]	        62	parser.c	FUNCTION_4
0x4000225	            0x7405	                            je 0x400022c	        62	parser.c	FUNCTION_4
0x4000227	      0xe800000000	                          call 0x400022c	        62	parser.c	FUNCTION_4
0x400022c	              0xc9	                                   leave	        62	parser.c	FUNCTION_4
0x400022d	              0xc3	                                     ret	        62	parser.c	FUNCTION_4
start_string	WHILE,0:DO,0:functions,0:CALL,0:FOR,0:IF,0:SWITCH,0:ELSE,0	12
0x40002d8	              0x55	                                push rbp	        78	parser.c	FUNCTION_6
0x40002d9	          0x4889e5	                            mov rbp, rsp	        78	parser.c	FUNCTION_6
0x40002dc	        0x48897df8	                mov qword [rbp - 8], rdi	        78	parser.c	FUNCTION_6
0x40002e0	          0x8975f4	              mov dword [rbp - 0xc], esi	        78	parser.c	FUNCTION_6
0x40002e3	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	parser.c	FUNCTION_6
0x40002e7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        79	parser.c	FUNCTION_6
0x40002ea	    0x8990e0000000	             mov dword [rax + 0xe0], edx	        79	parser.c	FUNCTION_6
0x40002f0	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	parser.c	FUNCTION_6
0x40002f4	    0x48c780f80000	               mov qword [rax + 0xf8], 0	        81	parser.c	FUNCTION_6
0x40002ff	              0x90	                                     nop	        82	parser.c	FUNCTION_6
0x4000300	              0x5d	                                 pop rbp	        82	parser.c	FUNCTION_6
0x4000301	              0xc3	                                     ret	        82	parser.c	FUNCTION_6
do_csi	WHILE,0:DO,0:functions,0:CALL,8:FOR,1:IF,3:SWITCH,0:ELSE,0	46
0x40000c1	              0x55	                                push rbp	        23	parser.c	FUNCTION_3
0x40000c2	          0x4889e5	                            mov rbp, rsp	        23	parser.c	FUNCTION_3
0x40000c5	        0x4883ec10	                           sub rsp, 0x10	        23	parser.c	FUNCTION_3
0x40000c9	        0x48897df8	                mov qword [rbp - 8], rdi	        23	parser.c	FUNCTION_3
0x40000cd	            0x89f0	                            mov eax, esi	        23	parser.c	FUNCTION_3
0x40000cf	          0x8845f4	                mov byte [rbp - 0xc], al	        23	parser.c	FUNCTION_3
0x40000d2	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	parser.c	FUNCTION_3	IF_2
0x40000d6	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        35	parser.c	FUNCTION_3	IF_2
0x40000dd	          0x4885c0	                           test rax, rax	        35	parser.c	FUNCTION_3	IF_2
0x40000e0	            0x747d	                            je 0x400015f	        35	parser.c	FUNCTION_3	IF_2
0x40000e2	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	parser.c	FUNCTION_3	IF_2
0x40000e6	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        35	parser.c	FUNCTION_3	IF_2
0x40000ed	        0x488b4018	            mov rax, qword [rax + 0x18] 	        35	parser.c	FUNCTION_3	IF_2
0x40000f1	          0x4885c0	                           test rax, rax	        35	parser.c	FUNCTION_3	IF_2
0x40000f4	            0x7469	                            je 0x400015f	        35	parser.c	FUNCTION_3	IF_2
0x40000f6	        0x488b45f8	                mov rax, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x40000fa	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000101	        0x488b4018	            mov rax, qword [rax + 0x18] 	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000105	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000109	    0x4c8b8ad80000	              mov r9, qword [rdx + 0xd8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000110	      0x440fbe45f4	             movsx r8d, byte [rbp - 0xc]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000115	        0x488b55f8	                mov rdx, qword [rbp - 8]	        40	parser.c	FUNCTION_3	IF_2	IF_3
0x4000119	          0x8b5224	            mov edx, dword [rdx + 0x24] 	        40	parser.c	FUNCTION_3	IF_2	IF_3
0x400011c	            0x85d2	                           test edx, edx	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x400011e	            0x740a	                            je 0x400012a	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000120	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000124	        0x488d4a28	                   lea rcx, [rdx + 0x28]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000128	            0xeb05	                           jmp 0x400012f	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x400012a	      0xb900000000	                              mov ecx, 0	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x400012f	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000133	          0x8b524c	            mov edx, dword [rdx + 0x4c] 	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000136	        0x488b75f8	                mov rsi, qword [rbp - 8]	        38	parser.c	FUNCTION_3	IF_2	IF_3
0x400013a	        0x4c8d5650	                   lea r10, [rsi + 0x50]	        38	parser.c	FUNCTION_3	IF_2	IF_3
0x400013e	        0x488b75f8	                mov rsi, qword [rbp - 8]	        37	parser.c	FUNCTION_3	IF_2	IF_3
0x4000142	          0x8b7638	            mov esi, dword [rsi + 0x38] 	        37	parser.c	FUNCTION_3	IF_2	IF_3
0x4000145	            0x85f6	                           test esi, esi	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000147	            0x740a	                            je 0x4000153	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000149	        0x488b75f8	                mov rsi, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x400014d	        0x488d7e3c	                   lea rdi, [rsi + 0x3c]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000151	            0xeb05	                           jmp 0x4000158	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000153	      0xbf00000000	                              mov edi, 0	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x4000158	          0x4c89d6	                            mov rsi, r10	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x400015b	            0xffd0	                                call rax	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x400015d	            0x85c0	                           test eax, eax	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x400015f	              0xc9	                                   leave	        46	parser.c	FUNCTION_3
0x4000160	              0xc3	                                     ret	        46	parser.c	FUNCTION_3
vterm_parser_set_callbacks	WHILE,0:DO,0:functions,0:CALL,0:FOR,0:IF,0:SWITCH,0:ELSE,0	14
0x4000ca4	              0x55	                                push rbp	       338	parser.c	FUNCTION_10
0x4000ca5	          0x4889e5	                            mov rbp, rsp	       338	parser.c	FUNCTION_10
0x4000ca8	        0x48897df8	                mov qword [rbp - 8], rdi	       338	parser.c	FUNCTION_10
0x4000cac	        0x488975f0	             mov qword [rbp - 0x10], rsi	       338	parser.c	FUNCTION_10
0x4000cb0	        0x488955e8	             mov qword [rbp - 0x18], rdx	       338	parser.c	FUNCTION_10
0x4000cb4	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	parser.c	FUNCTION_10
0x4000cb8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       339	parser.c	FUNCTION_10
0x4000cbc	    0x488990d00000	             mov qword [rax + 0xd0], rdx	       339	parser.c	FUNCTION_10
0x4000cc3	        0x488b45f8	                mov rax, qword [rbp - 8]	       340	parser.c	FUNCTION_10
0x4000cc7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       340	parser.c	FUNCTION_10
0x4000ccb	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       340	parser.c	FUNCTION_10
0x4000cd2	              0x90	                                     nop	       341	parser.c	FUNCTION_10
0x4000cd3	              0x5d	                                 pop rbp	       341	parser.c	FUNCTION_10
0x4000cd4	              0xc3	                                     ret	       341	parser.c	FUNCTION_10
vterm_input_write	WHILE,0:DO,0:functions,0:CALL,18:FOR,1:IF,29:SWITCH,4:ELSE,11	547
0x4000465	              0x55	                                push rbp	       126	parser.c	FUNCTION_9
0x4000466	          0x4889e5	                            mov rbp, rsp	       126	parser.c	FUNCTION_9
0x4000469	        0x4883ec40	                           sub rsp, 0x40	       126	parser.c	FUNCTION_9
0x400046d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       126	parser.c	FUNCTION_9
0x4000471	        0x488975d0	             mov qword [rbp - 0x30], rsi	       126	parser.c	FUNCTION_9
0x4000475	        0x488955c8	             mov qword [rbp - 0x38], rdx	       126	parser.c	FUNCTION_9
0x4000479	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       127	parser.c	FUNCTION_9
0x4000481	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       128	parser.c	FUNCTION_9
0x4000489	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       130	parser.c	FUNCTION_9	SWITCH_1
0x400048d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       130	parser.c	FUNCTION_9	SWITCH_1
0x4000490	          0x83f804	                              cmp eax, 4	       130	parser.c	FUNCTION_9	SWITCH_1
0x4000493	            0x760b	                           jbe 0x40004a0	       130	parser.c	FUNCTION_9	SWITCH_1
0x4000495	          0x83f806	                              cmp eax, 6	       130	parser.c	FUNCTION_9	SWITCH_1
0x4000498	     0xf87f2070000	                            ja 0x4000c90	       130	parser.c	FUNCTION_9	SWITCH_1
0x400049e	            0xeb0a	                           jmp 0x40004aa	       130	parser.c	FUNCTION_9	SWITCH_1
0x40004a0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       136	parser.c	FUNCTION_9	SWITCH_1
0x40004a8	            0xeb09	                           jmp 0x40004b3	       137	parser.c	FUNCTION_9	SWITCH_1
0x40004aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	parser.c	FUNCTION_9	SWITCH_1
0x40004ae	        0x488945f0	             mov qword [rbp - 0x10], rax	       140	parser.c	FUNCTION_9	SWITCH_1
0x40004b2	              0x90	                                     nop	       141	parser.c	FUNCTION_9	SWITCH_1
0x40004b3	      0xe9d8070000	                           jmp 0x4000c90	       148	parser.c	FUNCTION_9	FOR_1
0x40004b8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       149	parser.c	FUNCTION_9	FOR_1
0x40004bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	parser.c	FUNCTION_9	FOR_1
0x40004c0	          0x4801d0	                            add rax, rdx	       149	parser.c	FUNCTION_9	FOR_1
0x40004c3	           0xfb600	                   movzx eax, byte [rax]	       149	parser.c	FUNCTION_9	FOR_1
0x40004c6	          0x8845e7	               mov byte [rbp - 0x19], al	       149	parser.c	FUNCTION_9	FOR_1
0x40004c9	        0x807de700	                cmp byte [rbp - 0x19], 0	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x40004cd	            0x7406	                            je 0x40004d5	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x40004cf	        0x807de77f	            cmp byte [rbp - 0x19], 0x7f 	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x40004d3	            0x7556	                           jne 0x400052b	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x40004d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x40004d9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x40004dc	          0x83f804	                              cmp eax, 4	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x40004df	     0xf8696070000	                           jbe 0x4000c7b	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x40004e5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x40004e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x40004ed	          0x4801d0	                            add rax, rdx	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x40004f0	          0x4889c2	                            mov rdx, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x40004f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x40004f7	          0x4829c2	                            sub rdx, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x40004fa	          0x4889d0	                            mov rax, rdx	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x40004fd	          0x4889c2	                            mov rdx, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4000500	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4000504	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4000508	          0x4889ce	                            mov rsi, rcx	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x400050b	          0x4889c7	                            mov rdi, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x400050e	      0xe8effdffff	                    call sym.more_string	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4000513	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4000517	        0x488d5001	                      lea rdx, [rax + 1]	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x400051b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x400051f	          0x4801d0	                            add rax, rdx	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4000522	        0x488945f0	             mov qword [rbp - 0x10], rax	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4000526	      0xe950070000	                           jmp 0x4000c7b	       156	parser.c	FUNCTION_9	FOR_1	IF_1
0x400052b	        0x807de718	            cmp byte [rbp - 0x19], 0x18 	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x400052f	            0x7406	                            je 0x4000537	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x4000531	        0x807de71a	            cmp byte [rbp - 0x19], 0x1a 	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x4000535	            0x7518	                           jne 0x400054f	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x4000537	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	parser.c	FUNCTION_9	FOR_1	IF_3
0x400053b	    0xc74020000000	               mov dword [rax + 0x20], 0	       159	parser.c	FUNCTION_9	FOR_1	IF_3
0x4000542	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       159	parser.c	FUNCTION_9	FOR_1	IF_3
0x400054a	      0xe93c070000	                           jmp 0x4000c8b	       160	parser.c	FUNCTION_9	FOR_1	IF_3
0x400054f	        0x807de71b	            cmp byte [rbp - 0x19], 0x1b 	       162	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x4000553	            0x753f	                           jne 0x4000594	       162	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x4000555	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       163	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x4000559	    0xc74024000000	               mov dword [rax + 0x24], 0	       163	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x4000560	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x4000564	          0x8b4020	            mov eax, dword [rax + 0x20] 	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x4000567	          0x83f805	                              cmp eax, 5	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x400056a	            0x7510	                           jne 0x400057c	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x400056c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x4000570	    0xc74020060000	               mov dword [rax + 0x20], 6	       165	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x4000577	      0xe90f070000	                           jmp 0x4000c8b	       168	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x400057c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       167	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	ELSE_2
0x4000580	    0xc74020040000	               mov dword [rax + 0x20], 4	       167	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	ELSE_2
0x4000587	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       167	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	ELSE_2
0x400058f	      0xe9f7060000	                           jmp 0x4000c8b	       168	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x4000594	        0x807de707	                cmp byte [rbp - 0x19], 7	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x4000598	            0x750c	                           jne 0x40005a6	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x400059a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       171	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x400059e	          0x8b4020	            mov eax, dword [rax + 0x20] 	       171	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x40005a1	          0x83f805	                              cmp eax, 5	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x40005a4	            0x747a	                            je 0x4000620	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x40005a6	        0x807de71f	            cmp byte [rbp - 0x19], 0x1f 	       174	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x40005aa	            0x7774	                            ja 0x4000620	       174	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x40005ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x40005b0	          0x8b4020	            mov eax, dword [rax + 0x20] 	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x40005b3	          0x83f804	                              cmp eax, 4	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x40005b6	            0x762e	                           jbe 0x40005e6	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x40005b8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005c0	          0x4801d0	                            add rax, rdx	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005c3	          0x4889c2	                            mov rdx, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005ca	          0x4829c2	                            sub rdx, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005cd	          0x4889d0	                            mov rax, rdx	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005d0	          0x4889c2	                            mov rdx, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005d3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005db	          0x4889ce	                            mov rsi, rcx	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005de	          0x4889c7	                            mov rdi, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005e1	      0xe81cfdffff	                    call sym.more_string	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_2
0x40005e6	         0xfb655e7	            movzx edx, byte [rbp - 0x19]	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_3
0x40005ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_3
0x40005ee	            0x89d6	                            mov esi, edx	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_3
0x40005f0	          0x4889c7	                            mov rdi, rax	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_3
0x40005f3	      0xe86bfaffff	                     call sym.do_control	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_3
0x40005f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x40005fc	          0x8b4020	            mov eax, dword [rax + 0x20] 	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x40005ff	          0x83f804	                              cmp eax, 4	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x4000602	     0xf8676060000	                           jbe 0x4000c7e	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x4000608	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x400060c	        0x488d5001	                      lea rdx, [rax + 1]	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x4000610	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x4000614	          0x4801d0	                            add rax, rdx	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x4000617	        0x488945f0	             mov qword [rbp - 0x10], rax	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x400061b	      0xe95e060000	                           jmp 0x4000c7e	       180	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x4000620	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000624	          0x8b4020	            mov eax, dword [rax + 0x20] 	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000627	          0x83f806	                              cmp eax, 6	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400062a	     0xf875b060000	                            ja 0x4000c8b	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000630	            0x89c0	                            mov eax, eax	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000632	    0x488b04c50000	                  mov rax, qword [rax*8]	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400063a	            0xffe0	                                 jmp rax	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400063c	        0x807de75c	            cmp byte [rbp - 0x19], 0x5c 	       186	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x4000640	            0x7555	                           jne 0x4000697	       186	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x4000642	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x4000646	    0xc74020050000	               mov dword [rax + 0x20], 5	       187	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x400064d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000651	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000655	          0x4801d0	                            add rax, rdx	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000658	          0x4889c2	                            mov rdx, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x400065b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x400065f	          0x4829c2	                            sub rdx, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000662	          0x4889d0	                            mov rax, rdx	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000665	        0x4883e801	                              sub rax, 1	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000669	          0x4889c2	                            mov rdx, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x400066c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000670	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000674	          0x4889ce	                            mov rsi, rcx	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x4000677	          0x4889c7	                            mov rdi, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x400067a	      0xe8b1fcffff	                    call sym.done_string	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_4
0x400067f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       189	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x4000683	    0xc74020000000	               mov dword [rax + 0x20], 0	       189	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x400068a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       189	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x4000692	      0xe9f4050000	                           jmp 0x4000c8b	       190	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x4000697	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       192	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400069b	    0xc74020040000	               mov dword [rax + 0x20], 4	       192	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40006a2	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006a6	          0x83f85b	                           cmp eax, 0x5b	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006a9	            0x7442	                            je 0x40006ed	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006ab	          0x83f85d	                           cmp eax, 0x5d	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006ae	            0x7460	                            je 0x4000710	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006b0	          0x83f850	                           cmp eax, 0x50	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006b3	     0xf858b000000	                           jne 0x4000744	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_5
0x40006bd	      0xbe01000000	                              mov esi, 1	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_5
0x40006c2	          0x4889c7	                            mov rdi, rax	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_5
0x40006c5	      0xe80efcffff	                   call sym.start_string	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_5
0x40006ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006ce	    0xc74020050000	               mov dword [rax + 0x20], 5	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006d9	        0x488d5001	                      lea rdx, [rax + 1]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006e1	          0x4801d0	                            add rax, rdx	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006e4	        0x488945f0	             mov qword [rbp - 0x10], rax	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006e8	      0xe91f010000	                           jmp 0x400080c	       200	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       202	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006f1	    0xc74038000000	               mov dword [rax + 0x38], 0	       202	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       203	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x40006fc	    0xc74020010000	               mov dword [rax + 0x20], 1	       203	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x4000703	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       203	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x400070b	      0xe9fc000000	                           jmp 0x400080c	       204	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x4000710	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_6
0x4000714	      0xbe00000000	                              mov esi, 0	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_6
0x4000719	          0x4889c7	                            mov rdi, rax	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_6
0x400071c	      0xe8b7fbffff	                   call sym.start_string	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_6
0x4000721	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x4000725	    0xc74020050000	               mov dword [rax + 0x20], 5	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x400072c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x4000730	        0x488d5001	                      lea rdx, [rax + 1]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x4000734	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x4000738	          0x4801d0	                            add rax, rdx	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x400073b	        0x488945f0	             mov qword [rbp - 0x10], rax	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x400073f	      0xe9c8000000	                           jmp 0x400080c	       208	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x4000744	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_7
0x4000748	            0x89c7	                            mov edi, eax	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_7
0x400074a	      0xe8f1f8ffff	                    call sym.is_intermed	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_7
0x400074f	            0x85c0	                           test eax, eax	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_7
0x4000751	            0x7434	                            je 0x4000787	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_7
0x4000753	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x4000757	          0x8b4024	            mov eax, dword [rax + 0x24] 	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x400075a	          0x83f80e	                            cmp eax, 0xe	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x400075d	     0xf8f1e050000	                            jg 0x4000c81	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x4000763	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x4000767	          0x8b4024	            mov eax, dword [rax + 0x24] 	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x400076a	          0x8d4801	                      lea ecx, [rax + 1]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x400076d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x4000771	          0x894a24	             mov dword [rdx + 0x24], ecx	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x4000774	         0xfb64de7	            movzx ecx, byte [rbp - 0x19]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x4000778	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x400077c	            0x4898	                                    cdqe	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x400077e	        0x884c0228	         mov byte [rdx + rax + 0x28], cl	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x4000782	      0xe9fa040000	                           jmp 0x4000c81	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000787	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x400078b	          0x8b4024	            mov eax, dword [rax + 0x24] 	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x400078e	            0x85c0	                           test eax, eax	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x4000790	            0x7539	                           jne 0x40007cb	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x4000792	        0x807de73f	            cmp byte [rbp - 0x19], 0x3f 	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x4000796	            0x7633	                           jbe 0x40007cb	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x4000798	        0x807de75f	            cmp byte [rbp - 0x19], 0x5f 	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x400079c	            0x772d	                            ja 0x40007cb	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x400079e	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_8
0x40007a2	          0x83c040	                           add eax, 0x40	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_8
0x40007a5	           0xfb6d0	                           movzx edx, al	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_8
0x40007a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_8
0x40007ac	            0x89d6	                            mov esi, edx	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_8
0x40007ae	          0x4889c7	                            mov rdi, rax	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_8
0x40007b1	      0xe8adf8ffff	                     call sym.do_control	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_8
0x40007b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x40007ba	    0xc74020000000	               mov dword [rax + 0x20], 0	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x40007c1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x40007c9	            0xeb41	                           jmp 0x400080c	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x40007cb	        0x807de72f	            cmp byte [rbp - 0x19], 0x2f 	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x40007cf	     0xf86ac040000	                           jbe 0x4000c81	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x40007d5	        0x807de77e	            cmp byte [rbp - 0x19], 0x7e 	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x40007d9	     0xf87a2040000	                            ja 0x4000c81	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x40007df	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_9
0x40007e3	           0xfbed0	                           movsx edx, al	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_9
0x40007e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_9
0x40007ea	            0x89d6	                            mov esi, edx	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_9
0x40007ec	          0x4889c7	                            mov rdi, rax	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_9
0x40007ef	      0xe86df9ffff	                      call sym.do_escape	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_9
0x40007f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       220	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x40007f8	    0xc74020000000	               mov dword [rax + 0x20], 0	       220	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x40007ff	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       220	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x4000807	      0xe975040000	                           jmp 0x4000c81	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400080c	      0xe970040000	                           jmp 0x4000c81	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000811	        0x807de73b	            cmp byte [rbp - 0x19], 0x3b 	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x4000815	            0x763a	                           jbe 0x4000851	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x4000817	        0x807de73f	            cmp byte [rbp - 0x19], 0x3f 	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x400081b	            0x7734	                            ja 0x4000851	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x400081d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000821	          0x8b4038	            mov eax, dword [rax + 0x38] 	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000824	          0x83f80e	                            cmp eax, 0xe	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000827	     0xf8f57040000	                            jg 0x4000c84	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x400082d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000831	          0x8b4038	            mov eax, dword [rax + 0x38] 	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000834	          0x8d4801	                      lea ecx, [rax + 1]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000837	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x400083b	          0x894a38	             mov dword [rdx + 0x38], ecx	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x400083e	         0xfb64de7	            movzx ecx, byte [rbp - 0x19]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000842	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000846	            0x4898	                                    cdqe	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x4000848	        0x884c023c	         mov byte [rdx + rax + 0x3c], cl	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x400084c	      0xe933040000	                           jmp 0x4000c84	       233	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x4000851	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000855	          0x8b4038	            mov eax, dword [rax + 0x38] 	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000858	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400085c	            0x4898	                                    cdqe	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400085e	      0xc644023c00	          mov byte [rdx + rax + 0x3c], 0	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000863	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       239	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000867	    0xc7404c000000	               mov dword [rax + 0x4c], 0	       239	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400086e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       240	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000872	    0x48c74050ffff	     mov qword [rax + 0x50], 0x3fffffff 	       240	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400087a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x400087e	    0xc74020020000	               mov dword [rax + 0x20], 2	       241	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000885	        0x807de72f	            cmp byte [rbp - 0x19], 0x2f 	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000889	     0xf86bb000000	                           jbe 0x400094a	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400088f	        0x807de739	            cmp byte [rbp - 0x19], 0x39 	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000893	     0xf87b1000000	                            ja 0x400094a	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000899	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x400089d	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008a4	          0x4863d2	                         movsxd rdx, edx	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008a7	        0x4883c20a	                            add rdx, 0xa	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008ab	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008af	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008b5	            0x751a	                           jne 0x40008d1	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008bb	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008c2	          0x4863d2	                         movsxd rdx, edx	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008c5	        0x4883c20a	                            add rdx, 0xa	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008c9	    0x48c704d00000	              mov qword [rax + rdx*8], 0	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x40008d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008d5	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008dc	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008e3	          0x4863d2	                         movsxd rdx, edx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008e6	        0x4883c20a	                            add rdx, 0xa	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008ea	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008ee	          0x4889d0	                            mov rax, rdx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008f1	        0x48c1e002	                              shl rax, 2	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008f5	          0x4801d0	                            add rax, rdx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008f8	          0x4801c0	                            add rax, rax	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008fb	          0x4889c6	                            mov rsi, rax	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x40008fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000902	          0x4863d1	                         movsxd rdx, ecx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000905	        0x4883c20a	                            add rdx, 0xa	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000909	        0x488934d0	            mov qword [rax + rdx*8], rsi	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400090d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000911	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000914	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000918	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400091b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400091f	          0x4863c9	                         movsxd rcx, ecx	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000922	        0x4883c10a	                            add rcx, 0xa	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000926	        0x488b0cc8	            mov rcx, qword [rax + rcx*8]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400092a	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400092e	          0x83e830	                           sub eax, 0x30	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000931	            0x4898	                                    cdqe	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000933	          0x4801c1	                            add rcx, rax	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000936	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400093a	          0x4863d2	                         movsxd rdx, edx	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400093d	        0x4883c20a	                            add rdx, 0xa	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000941	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x4000945	      0xe941030000	                           jmp 0x4000c8b	       251	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x400094a	        0x807de73a	            cmp byte [rbp - 0x19], 0x3a 	       253	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x400094e	            0x7538	                           jne 0x4000988	       253	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000950	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000954	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000957	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x400095b	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x400095e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000962	          0x4863c9	                         movsxd rcx, ecx	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000965	        0x4883c10a	                            add rcx, 0xa	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000969	        0x488b0cc8	            mov rcx, qword [rax + rcx*8]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x400096d	      0xb800000080	                     mov eax, 0x80000000	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000972	          0x4809c1	                             or rcx, rax	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000975	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000979	          0x4863d2	                         movsxd rdx, edx	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x400097c	        0x4883c20a	                            add rdx, 0xa	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000980	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000984	        0xc645e73b	            mov byte [rbp - 0x19], 0x3b 	       255	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x4000988	        0x807de73b	            cmp byte [rbp - 0x19], 0x3b 	       257	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x400098c	            0x7530	                           jne 0x40009be	       257	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x400098e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x4000992	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x4000995	          0x8d5001	                      lea edx, [rax + 1]	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x4000998	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x400099c	          0x89504c	             mov dword [rax + 0x4c], edx	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x400099f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x40009a3	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x40009a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x40009aa	          0x4863d2	                         movsxd rdx, edx	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x40009ad	        0x4883c20a	                            add rdx, 0xa	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x40009b1	    0x48c704d0ffff	    mov qword [rax + rdx*8], 0x3fffffff 	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x40009b9	      0xe9cd020000	                           jmp 0x4000c8b	       260	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x40009be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009c2	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009c5	          0x8d5001	                      lea edx, [rax + 1]	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009cc	          0x89504c	             mov dword [rax + 0x4c], edx	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       265	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009d3	    0xc74024000000	               mov dword [rax + 0x24], 0	       265	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009de	    0xc74020030000	               mov dword [rax + 0x20], 3	       266	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x40009e5	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_11
0x40009e9	            0x89c7	                            mov edi, eax	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_11
0x40009eb	      0xe850f6ffff	                    call sym.is_intermed	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_11
0x40009f0	            0x85c0	                           test eax, eax	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_11
0x40009f2	            0x7434	                            je 0x4000a28	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_11
0x40009f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x40009f8	          0x8b4024	            mov eax, dword [rax + 0x24] 	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x40009fb	          0x83f80e	                            cmp eax, 0xe	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x40009fe	     0xf8f83020000	                            jg 0x4000c87	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a08	          0x8b4024	            mov eax, dword [rax + 0x24] 	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a0b	          0x8d4801	                      lea ecx, [rax + 1]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a0e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a12	          0x894a24	             mov dword [rdx + 0x24], ecx	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a15	         0xfb64de7	            movzx ecx, byte [rbp - 0x19]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a19	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a1d	            0x4898	                                    cdqe	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a1f	        0x884c0228	         mov byte [rdx + rax + 0x28], cl	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x4000a23	      0xe95f020000	                           jmp 0x4000c87	       272	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21
0x4000a28	        0x807de71b	            cmp byte [rbp - 0x19], 0x1b 	       274	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_8	IF_23
0x4000a2c	            0x7433	                            je 0x4000a61	       274	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_8	IF_23
0x4000a2e	        0x807de73f	            cmp byte [rbp - 0x19], 0x3f 	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a32	            0x762d	                           jbe 0x4000a61	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a34	        0x807de77e	            cmp byte [rbp - 0x19], 0x7e 	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a38	            0x7727	                            ja 0x4000a61	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a3e	          0x8b4024	            mov eax, dword [rax + 0x24] 	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a41	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a45	            0x4898	                                    cdqe	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a47	      0xc644022800	          mov byte [rdx + rax + 0x28], 0	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x4000a4c	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_12
0x4000a50	           0xfbed0	                           movsx edx, al	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_12
0x4000a53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_12
0x4000a57	            0x89d6	                            mov esi, edx	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_12
0x4000a59	          0x4889c7	                            mov rdi, rax	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_12
0x4000a5c	      0xe860f6ffff	                         call sym.do_csi	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_12
0x4000a61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000a65	    0xc74020000000	               mov dword [rax + 0x20], 0	       283	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000a6c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       283	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000a74	      0xe912020000	                           jmp 0x4000c8b	       284	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000a79	        0x807de707	                cmp byte [rbp - 0x19], 7	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a7d	            0x7415	                            je 0x4000a94	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a7f	        0x807de79c	            cmp byte [rbp - 0x19], 0x9c 	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a83	            0x7555	                           jne 0x4000ada	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a89	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a8d	          0x83e001	                              and eax, 1	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a90	            0x84c0	                             test al, al	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a92	            0x7546	                           jne 0x4000ada	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000a94	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000a98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000a9c	          0x4801d0	                            add rax, rdx	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000a9f	          0x4889c2	                            mov rdx, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000aa2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000aa6	          0x4829c2	                            sub rdx, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000aa9	          0x4889d0	                            mov rax, rdx	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000aac	          0x4889c2	                            mov rdx, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000aaf	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000ab3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000ab7	          0x4889ce	                            mov rsi, rcx	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000aba	          0x4889c7	                            mov rdi, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000abd	      0xe86ef8ffff	                    call sym.done_string	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_13
0x4000ac2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       289	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000ac6	    0xc74020000000	               mov dword [rax + 0x20], 0	       289	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000acd	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       289	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0x4000ad5	      0xe9b0010000	                           jmp 0x4000c8a	       296	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000ada	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0x4000ade	        0x4883c001	                              add rax, 1	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0x4000ae2	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0x4000ae6	     0xf859e010000	                           jne 0x4000c8a	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0x4000aec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000af0	        0x488d5001	                      lea rdx, [rax + 1]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000af4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000af8	          0x4801d0	                            add rax, rdx	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000afb	          0x4889c2	                            mov rdx, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000afe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b02	          0x4829c2	                            sub rdx, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b05	          0x4889d0	                            mov rax, rdx	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b08	          0x4889c2	                            mov rdx, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b0b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b0f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b13	          0x4889ce	                            mov rsi, rcx	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b16	          0x4889c7	                            mov rdi, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b19	      0xe8e4f7ffff	                    call sym.more_string	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_14
0x4000b1e	      0xe967010000	                           jmp 0x4000c8a	       296	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000b23	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b27	            0x84c0	                             test al, al	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b29	     0xf89c6000000	                           jns 0x4000bf5	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b2f	        0x807de79f	            cmp byte [rbp - 0x19], 0x9f 	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b33	     0xf87bc000000	                            ja 0x4000bf5	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b3d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b41	          0x83e001	                              and eax, 1	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b44	            0x84c0	                             test al, al	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b46	     0xf85a9000000	                           jne 0x4000bf5	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000b4c	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b50	      0x3d9b000000	                           cmp eax, 0x9b	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b55	            0x743f	                            je 0x4000b96	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b57	      0x3d9d000000	                           cmp eax, 0x9d	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b5c	            0x744d	                            je 0x4000bab	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b5e	      0x3d90000000	                           cmp eax, 0x90	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b63	            0x7577	                           jne 0x4000bdc	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_15
0x4000b69	      0xbe01000000	                              mov esi, 1	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_15
0x4000b6e	          0x4889c7	                            mov rdi, rax	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_15
0x4000b71	      0xe862f7ffff	                   call sym.start_string	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_15
0x4000b76	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b7a	    0xc74020050000	               mov dword [rax + 0x20], 5	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b85	        0x488d5001	                      lea rdx, [rax + 1]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b89	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b8d	          0x4801d0	                            add rax, rdx	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b90	        0x488945f0	             mov qword [rbp - 0x10], rax	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b94	            0xeb59	                           jmp 0x4000bef	       304	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b96	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       306	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000b9a	    0xc74020010000	               mov dword [rax + 0x20], 1	       306	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000ba1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       306	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000ba9	            0xeb44	                           jmp 0x4000bef	       307	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_16
0x4000baf	      0xbe00000000	                              mov esi, 0	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_16
0x4000bb4	          0x4889c7	                            mov rdi, rax	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_16
0x4000bb7	      0xe81cf7ffff	                   call sym.start_string	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_16
0x4000bbc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bc0	    0xc74020050000	               mov dword [rax + 0x20], 5	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bcb	        0x488d5001	                      lea rdx, [rax + 1]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bcf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bd3	          0x4801d0	                            add rax, rdx	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bd6	        0x488945f0	             mov qword [rbp - 0x10], rax	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bda	            0xeb13	                           jmp 0x4000bef	       311	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bdc	         0xfb655e7	            movzx edx, byte [rbp - 0x19]	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_17
0x4000be0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_17
0x4000be4	            0x89d6	                            mov esi, edx	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_17
0x4000be6	          0x4889c7	                            mov rdi, rax	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_17
0x4000be9	      0xe875f4ffff	                     call sym.do_control	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_17
0x4000bee	              0x90	                                     nop	       314	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0x4000bef	              0x90	                                     nop	       316	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0x4000bf0	      0xe996000000	                           jmp 0x4000c8b	       330	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000bf5	    0x48c745f80000	                  mov qword [rbp - 8], 0	       318	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0x4000bfd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c01	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c08	          0x4885c0	                           test rax, rax	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c0b	            0x744a	                            je 0x4000c57	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c11	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c18	          0x488b00	                    mov rax, qword [rax]	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c1b	          0x4885c0	                           test rax, rax	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c1e	            0x7437	                            je 0x4000c57	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c24	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c2b	          0x488b00	                    mov rax, qword [rax]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c2e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c32	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c39	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c3d	        0x482b4de8	             sub rcx, qword [rbp - 0x18]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c41	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c45	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c49	          0x4801f7	                            add rdi, rsi	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c4c	          0x4889ce	                            mov rsi, rcx	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c4f	            0xffd0	                                call rax	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c51	            0x4898	                                    cdqe	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c53	        0x488945f8	                mov qword [rbp - 8], rax	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0x4000c57	      0x48837df800	                  cmp qword [rbp - 8], 0	       322	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_29
0x4000c5c	            0x7508	                           jne 0x4000c66	       322	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_29
0x4000c5e	    0x48c745f80100	                  mov qword [rbp - 8], 1	       325	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_29
0x4000c66	        0x488b55f8	                mov rdx, qword [rbp - 8]	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0x4000c6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0x4000c6e	          0x4801d0	                            add rax, rdx	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0x4000c71	        0x4883e801	                              sub rax, 1	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0x4000c75	        0x488945e8	             mov qword [rbp - 0x18], rax	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0x4000c79	            0xeb10	                           jmp 0x4000c8b	       330	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000c7b	              0x90	                                     nop	       156	parser.c	FUNCTION_9	FOR_1	IF_1
0x4000c7c	            0xeb0d	                           jmp 0x4000c8b	       156	parser.c	FUNCTION_9	FOR_1	IF_1
0x4000c7e	              0x90	                                     nop	       180	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x4000c7f	            0xeb0a	                           jmp 0x4000c8b	       180	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x4000c81	              0x90	                                     nop	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000c82	            0xeb07	                           jmp 0x4000c8b	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000c84	              0x90	                                     nop	       233	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x4000c85	            0xeb04	                           jmp 0x4000c8b	       233	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x4000c87	              0x90	                                     nop	       272	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21
0x4000c88	            0xeb01	                           jmp 0x4000c8b	       272	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21
0x4000c8a	              0x90	                                     nop	       296	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x4000c8b	      0x488345e801	               add qword [rbp - 0x18], 1	       148	parser.c	FUNCTION_9	FOR_1
0x4000c90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	parser.c	FUNCTION_9	FOR_1
0x4000c94	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       148	parser.c	FUNCTION_9	FOR_1
0x4000c98	     0xf821af8ffff	                            jb 0x40004b8	       148	parser.c	FUNCTION_9	FOR_1
0x4000c9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       334	parser.c	FUNCTION_9
0x4000ca2	              0xc9	                                   leave	       335	parser.c	FUNCTION_9
0x4000ca3	              0xc3	                                     ret	       335	parser.c	FUNCTION_9
done_string	WHILE,0:DO,0:functions,0:CALL,4:FOR,0:IF,7:SWITCH,1:ELSE,1	81
0x4000330	              0x55	                                push rbp	        90	parser.c	FUNCTION_8
0x4000331	          0x4889e5	                            mov rbp, rsp	        90	parser.c	FUNCTION_8
0x4000334	        0x4883ec20	                           sub rsp, 0x20	        90	parser.c	FUNCTION_8
0x4000338	        0x48897df8	                mov qword [rbp - 8], rdi	        90	parser.c	FUNCTION_8
0x400033c	        0x488975f0	             mov qword [rbp - 0x10], rsi	        90	parser.c	FUNCTION_8
0x4000340	        0x488955e8	             mov qword [rbp - 0x18], rdx	        90	parser.c	FUNCTION_8
0x4000344	        0x488b45f8	                mov rax, qword [rbp - 8]	        91	parser.c	FUNCTION_8	IF_1
0x4000348	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        91	parser.c	FUNCTION_8	IF_1
0x400034f	          0x4885c0	                           test rax, rax	        91	parser.c	FUNCTION_8	IF_1
0x4000352	            0x743e	                            je 0x4000392	        91	parser.c	FUNCTION_8	IF_1
0x4000354	      0x48837df000	               cmp qword [rbp - 0x10], 0	        92	parser.c	FUNCTION_8	IF_1	IF_2
0x4000359	            0x7417	                            je 0x4000372	        92	parser.c	FUNCTION_8	IF_1	IF_2
0x400035b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x400035f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x4000363	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x4000367	          0x4889ce	                            mov rsi, rcx	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x400036a	          0x4889c7	                            mov rdi, rax	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x400036d	      0xe8bcfeffff	               call sym.append_strbuffer	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x4000372	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	parser.c	FUNCTION_8	IF_1
0x4000376	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	        95	parser.c	FUNCTION_8	IF_1
0x400037d	        0x488945f0	             mov qword [rbp - 0x10], rax	        95	parser.c	FUNCTION_8	IF_1
0x4000381	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	parser.c	FUNCTION_8	IF_1
0x4000385	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        96	parser.c	FUNCTION_8	IF_1
0x400038c	        0x488945e8	             mov qword [rbp - 0x18], rax	        96	parser.c	FUNCTION_8	IF_1
0x4000390	            0xeb0f	                           jmp 0x40003a1	        96	parser.c	FUNCTION_8	IF_1
0x4000392	      0x48837df000	               cmp qword [rbp - 0x10], 0	        98	parser.c	FUNCTION_8	ELSE_1	IF_3
0x4000397	            0x7508	                           jne 0x40003a1	        98	parser.c	FUNCTION_8	ELSE_1	IF_3
0x4000399	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       100	parser.c	FUNCTION_8	ELSE_1	IF_3
0x40003a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	parser.c	FUNCTION_8	SWITCH_1
0x40003a5	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	       103	parser.c	FUNCTION_8	SWITCH_1
0x40003ab	          0x83f801	                              cmp eax, 1	       103	parser.c	FUNCTION_8	SWITCH_1
0x40003ae	            0x7460	                            je 0x4000410	       103	parser.c	FUNCTION_8	SWITCH_1
0x40003b0	          0x83f801	                              cmp eax, 1	       103	parser.c	FUNCTION_8	SWITCH_1
0x40003b3	            0x7208	                            jb 0x40003bd	       103	parser.c	FUNCTION_8	SWITCH_1
0x40003b5	          0x83f802	                              cmp eax, 2	       103	parser.c	FUNCTION_8	SWITCH_1
0x40003b8	      0xe9a6000000	                           jmp 0x4000463	       121	parser.c	FUNCTION_8	SWITCH_1
0x40003bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003c1	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003c8	          0x4885c0	                           test rax, rax	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003cb	     0xf848e000000	                            je 0x400045f	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003d5	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003dc	        0x488b4020	            mov rax, qword [rax + 0x20] 	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003e0	          0x4885c0	                           test rax, rax	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003e3	            0x747a	                            je 0x400045f	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x40003e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x40003e9	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x40003f0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x40003f4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x40003f8	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x40003ff	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x4000403	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x4000407	          0x4889cf	                            mov rdi, rcx	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x400040a	            0xffd0	                                call rax	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x400040c	            0x85c0	                           test eax, eax	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x400040e	            0xeb4f	                           jmp 0x400045f	       110	parser.c	FUNCTION_8	SWITCH_1
0x4000410	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x4000414	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x400041b	          0x4885c0	                           test rax, rax	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x400041e	            0x7442	                            je 0x4000462	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x4000420	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x4000424	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x400042b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x400042f	          0x4885c0	                           test rax, rax	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x4000432	            0x742e	                            je 0x4000462	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x4000434	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x4000438	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x400043f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x4000443	        0x488b55f8	                mov rdx, qword [rbp - 8]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x4000447	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x400044e	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x4000452	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x4000456	          0x4889cf	                            mov rdi, rcx	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x4000459	            0xffd0	                                call rax	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x400045b	            0x85c0	                           test eax, eax	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x400045d	            0xeb03	                           jmp 0x4000462	       118	parser.c	FUNCTION_8	SWITCH_1
0x400045f	              0x90	                                     nop	       110	parser.c	FUNCTION_8	SWITCH_1
0x4000460	            0xeb01	                           jmp 0x4000463	       110	parser.c	FUNCTION_8	SWITCH_1
0x4000462	              0x90	                                     nop	       118	parser.c	FUNCTION_8	SWITCH_1
0x4000463	              0xc9	                                   leave	       123	parser.c	FUNCTION_8
0x4000464	              0xc3	                                     ret	       123	parser.c	FUNCTION_8
more_string	WHILE,0:DO,0:functions,0:CALL,1:FOR,0:IF,0:SWITCH,0:ELSE,0	15
0x4000302	              0x55	                                push rbp	        85	parser.c	FUNCTION_7
0x4000303	          0x4889e5	                            mov rbp, rsp	        85	parser.c	FUNCTION_7
0x4000306	        0x4883ec20	                           sub rsp, 0x20	        85	parser.c	FUNCTION_7
0x400030a	        0x48897df8	                mov qword [rbp - 8], rdi	        85	parser.c	FUNCTION_7
0x400030e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        85	parser.c	FUNCTION_7
0x4000312	        0x488955e8	             mov qword [rbp - 0x18], rdx	        85	parser.c	FUNCTION_7
0x4000316	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        86	parser.c	FUNCTION_7	CALL_1
0x400031a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        86	parser.c	FUNCTION_7	CALL_1
0x400031e	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	parser.c	FUNCTION_7	CALL_1
0x4000322	          0x4889ce	                            mov rsi, rcx	        86	parser.c	FUNCTION_7	CALL_1
0x4000325	          0x4889c7	                            mov rdi, rax	        86	parser.c	FUNCTION_7	CALL_1
0x4000328	      0xe801ffffff	               call sym.append_strbuffer	        86	parser.c	FUNCTION_7	CALL_1
0x400032d	              0x90	                                     nop	        87	parser.c	FUNCTION_7
0x400032e	              0xc9	                                   leave	        87	parser.c	FUNCTION_7
0x400032f	              0xc3	                                     ret	        87	parser.c	FUNCTION_7
