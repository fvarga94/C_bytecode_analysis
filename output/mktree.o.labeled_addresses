mktree_line	SWITCH,0:IF,9:FOR,0:DO,0:WHILE,0:CALL,22:functions,0:ELSE,2	187
0x4b0	              0x55	                                push rbp	        70	mktree.c	FUNCTION_4
0x4b1	          0x4889e5	                            mov rbp, rsp	        70	mktree.c	FUNCTION_4
0x4b4	            0x4154	                                push r12	        70	mktree.c	FUNCTION_4
0x4b6	              0x53	                                push rbx	        70	mktree.c	FUNCTION_4
0x4b7	    0x4881eca00000	                           sub rsp, 0xa0	        70	mktree.c	FUNCTION_4
0x4be	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	        70	mktree.c	FUNCTION_4
0x4c5	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	        70	mktree.c	FUNCTION_4
0x4cc	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	        70	mktree.c	FUNCTION_4
0x4d2	    0x898d58ffffff	             mov dword [rbp - 0xa8], ecx	        70	mktree.c	FUNCTION_4
0x4d8	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	mktree.c	FUNCTION_4
0x4e1	        0x488945e8	             mov qword [rbp - 0x18], rax	        70	mktree.c	FUNCTION_4
0x4e5	            0x31c0	                            xor eax, eax	        70	mktree.c	FUNCTION_4
0x4e7	    0x48c745a00000	               mov qword [rbp - 0x60], 0	        76	mktree.c	FUNCTION_4
0x4ef	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	        79	mktree.c	FUNCTION_4
0x4f6	        0x488945a8	             mov qword [rbp - 0x58], rax	        79	mktree.c	FUNCTION_4
0x4fa	        0x488d4d88	                   lea rcx, [rbp - 0x78]	        84	mktree.c	FUNCTION_4	CALL_1
0x4fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        84	mktree.c	FUNCTION_4	CALL_1
0x502	      0xba08000000	                              mov edx, 8	        84	mktree.c	FUNCTION_4	CALL_1
0x507	          0x4889ce	                            mov rsi, rcx	        84	mktree.c	FUNCTION_4	CALL_1
0x50a	          0x4889c7	                            mov rdi, rax	        84	mktree.c	FUNCTION_4	CALL_1
0x50d	      0xe800000000	                          call 0x4000552	        84	mktree.c	FUNCTION_4	CALL_1
0x512	    0x89857cffffff	             mov dword [rbp - 0x84], eax	        84	mktree.c	FUNCTION_4	CALL_1
0x518	        0x488b4588	             mov rax, qword [rbp - 0x78]	        85	mktree.c	FUNCTION_4	IF_1
0x51c	        0x483945a8	            cmp qword [rbp - 0x58], rax 	        85	mktree.c	FUNCTION_4	IF_1
0x520	            0x7414	                            je 0x4000576	        85	mktree.c	FUNCTION_4	IF_1
0x522	        0x488b4588	             mov rax, qword [rbp - 0x78]	        85	mktree.c	FUNCTION_4	IF_1
0x526	          0x4885c0	                           test rax, rax	        85	mktree.c	FUNCTION_4	IF_1
0x529	            0x740b	                            je 0x4000576	        85	mktree.c	FUNCTION_4	IF_1
0x52b	        0x488b4588	             mov rax, qword [rbp - 0x78]	        85	mktree.c	FUNCTION_4	IF_1
0x52f	           0xfb600	                   movzx eax, byte [rax]	        85	mktree.c	FUNCTION_4	IF_1
0x532	            0x3c20	                            cmp al, 0x20	        85	mktree.c	FUNCTION_4	IF_1
0x534	            0x7419	                            je 0x400058f	        85	mktree.c	FUNCTION_4	IF_1
0x536	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	        86	mktree.c	FUNCTION_4	CALL_2
0x53d	          0x4889c6	                            mov rsi, rax	        86	mktree.c	FUNCTION_4	CALL_2
0x540	      0xbf00000000	                              mov edi, 0	        86	mktree.c	FUNCTION_4	CALL_2
0x545	      0xb800000000	                              mov eax, 0	        86	mktree.c	FUNCTION_4	CALL_2
0x54a	      0xe800000000	                          call 0x400058f	        86	mktree.c	FUNCTION_4	CALL_2
0x54f	        0x488b4588	             mov rax, qword [rbp - 0x78]	        87	mktree.c	FUNCTION_4
0x553	        0x4883c001	                              add rax, 1	        87	mktree.c	FUNCTION_4
0x557	        0x488945a8	             mov qword [rbp - 0x58], rax	        87	mktree.c	FUNCTION_4
0x55b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        88	mktree.c	FUNCTION_4	CALL_3
0x55f	      0xbe20000000	                           mov esi, 0x20	        88	mktree.c	FUNCTION_4	CALL_3
0x564	          0x4889c7	                            mov rdi, rax	        88	mktree.c	FUNCTION_4	CALL_3
0x567	      0xe800000000	                          call 0x40005ac	        88	mktree.c	FUNCTION_4	CALL_3
0x56c	        0x48894588	             mov qword [rbp - 0x78], rax	        88	mktree.c	FUNCTION_4	CALL_3
0x570	        0x488b4588	             mov rax, qword [rbp - 0x78]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x574	          0x4885c0	                           test rax, rax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x577	            0x742a	                            je 0x40005e3	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x579	        0x488b4588	             mov rax, qword [rbp - 0x78]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x57d	        0x488d4801	                      lea rcx, [rax + 1]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x581	        0x488d5590	                   lea rdx, [rbp - 0x70]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x585	        0x488d45d0	                   lea rax, [rbp - 0x30]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x589	          0x4889c6	                            mov rsi, rax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x58c	          0x4889cf	                            mov rdi, rcx	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x58f	      0xe800000000	                          call 0x40005d4	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x594	            0x85c0	                           test eax, eax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x596	            0x750b	                           jne 0x40005e3	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x598	        0x488b4590	             mov rax, qword [rbp - 0x70]	        90	mktree.c	FUNCTION_4	IF_2
0x59c	           0xfb600	                   movzx eax, byte [rax]	        90	mktree.c	FUNCTION_4	IF_2
0x59f	            0x3c09	                               cmp al, 9	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x5a1	            0x7419	                            je 0x40005fc	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x5a3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	        91	mktree.c	FUNCTION_4	CALL_5
0x5aa	          0x4889c6	                            mov rsi, rax	        91	mktree.c	FUNCTION_4	CALL_5
0x5ad	      0xbf00000000	                              mov edi, 0	        91	mktree.c	FUNCTION_4	CALL_5
0x5b2	      0xb800000000	                              mov eax, 0	        91	mktree.c	FUNCTION_4	CALL_5
0x5b7	      0xe800000000	                          call 0x40005fc	        91	mktree.c	FUNCTION_4	CALL_5
0x5bc	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x5c2	      0x2500f00000	                         and eax, 0xf000	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x5c7	      0x3d00e00000	                         cmp eax, 0xe000	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x5cc	            0x750a	                           jne 0x4000618	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x5ce	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	        95	mktree.c	FUNCTION_4	IF_3
0x5d8	        0x488b4588	             mov rax, qword [rbp - 0x78]	        98	mktree.c	FUNCTION_4
0x5dc	        0x488d5001	                      lea rdx, [rax + 1]	        98	mktree.c	FUNCTION_4
0x5e0	        0x48895588	             mov qword [rbp - 0x78], rdx	        98	mktree.c	FUNCTION_4
0x5e4	          0xc60000	                       mov byte [rax], 0	        98	mktree.c	FUNCTION_4
0x5e7	        0x488b4588	             mov rax, qword [rbp - 0x78]	       100	mktree.c	FUNCTION_4
0x5eb	        0x4883c029	                           add rax, 0x29	       100	mktree.c	FUNCTION_4
0x5ef	        0x48894598	             mov qword [rbp - 0x68], rax	       100	mktree.c	FUNCTION_4
0x5f3	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       101	mktree.c	FUNCTION_4	IF_4
0x5fa	            0x756b	                           jne 0x40006a7	       101	mktree.c	FUNCTION_4	IF_4
0x5fc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       101	mktree.c	FUNCTION_4	IF_4
0x600	           0xfb600	                   movzx eax, byte [rax]	       101	mktree.c	FUNCTION_4	IF_4
0x603	            0x3c22	                            cmp al, 0x22	       101	mktree.c	FUNCTION_4	IF_4
0x605	            0x7560	                           jne 0x40006a7	       101	mktree.c	FUNCTION_4	IF_4
0x607	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       102	mktree.c	FUNCTION_4	IF_4
0x60f	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       102	mktree.c	FUNCTION_4	IF_4
0x617	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       102	mktree.c	FUNCTION_4	IF_4
0x61f	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x623	        0x488d45b0	                   lea rax, [rbp - 0x50]	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x627	      0xba00000000	                              mov edx, 0	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x62c	          0x4889ce	                            mov rsi, rcx	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x62f	          0x4889c7	                            mov rdi, rax	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x632	      0xe800000000	                          call 0x4000677	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x637	            0x85c0	                           test eax, eax	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x639	            0x740f	                            je 0x400068a	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x63b	      0xbf00000000	                              mov edi, 0	       104	mktree.c	FUNCTION_4	IF_4	CALL_8
0x640	      0xb800000000	                              mov eax, 0	       104	mktree.c	FUNCTION_4	IF_4	CALL_8
0x645	      0xe800000000	                          call 0x400068a	       104	mktree.c	FUNCTION_4	IF_4	CALL_8
0x64a	        0x488d45b0	                   lea rax, [rbp - 0x50]	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x64e	      0xbe00000000	                              mov esi, 0	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x653	          0x4889c7	                            mov rdi, rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x656	      0xe800000000	                          call 0x400069b	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x65b	        0x488945a0	             mov qword [rbp - 0x60], rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x65f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x663	        0x48894598	             mov qword [rbp - 0x68], rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x667	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       112	mktree.c	FUNCTION_4	CALL_10
0x66d	            0x89c7	                            mov edi, eax	       112	mktree.c	FUNCTION_4	CALL_10
0x66f	      0xe85cfaffff	                    call sym.object_type	       112	mktree.c	FUNCTION_4	CALL_10
0x674	          0x894580	             mov dword [rbp - 0x80], eax	       112	mktree.c	FUNCTION_4	CALL_10
0x677	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x67b	      0xba00000000	                              mov edx, 0	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x680	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x687	          0x4889c7	                            mov rdi, rax	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x68a	      0xe800000000	                          call 0x40006cf	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x68f	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x692	            0x7427	                            je 0x40006fb	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x694	          0x8b4580	             mov eax, dword [rbp - 0x80]	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x697	            0x89c7	                            mov edi, eax	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x699	      0xe800000000	                          call 0x40006de	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x69e	          0x4889c1	                            mov rcx, rax	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x6a1	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x6a5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x6a9	          0x4889c6	                            mov rsi, rax	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x6ac	      0xbf00000000	                              mov edi, 0	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x6b1	      0xb800000000	                              mov eax, 0	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x6b6	      0xe800000000	                          call 0x40006fb	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x6bb	    0x488b05000000	            mov rax, qword [0x04000702] 	       119	mktree.c	FUNCTION_4	CALL_14
0x6c2	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       119	mktree.c	FUNCTION_4	CALL_14
0x6c6	      0xba00000000	                              mov edx, 0	       119	mktree.c	FUNCTION_4	CALL_14
0x6cb	          0x4889ce	                            mov rsi, rcx	       119	mktree.c	FUNCTION_4	CALL_14
0x6ce	          0x4889c7	                            mov rdi, rax	       119	mktree.c	FUNCTION_4	CALL_14
0x6d1	      0xe800000000	                          call 0x4000716	       119	mktree.c	FUNCTION_4	CALL_14
0x6d6	          0x894584	             mov dword [rbp - 0x7c], eax	       119	mktree.c	FUNCTION_4	CALL_14
0x6d9	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       120	mktree.c	FUNCTION_4	IF_7
0x6dd	            0x792e	                           jns 0x400074d	       120	mktree.c	FUNCTION_4	IF_7
0x6df	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	       121	mktree.c	FUNCTION_4	IF_7	IF_8
0x6e6	            0x7572	                           jne 0x400079a	       121	mktree.c	FUNCTION_4	IF_7	IF_8
0x6e8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x6ec	          0x4889c7	                            mov rdi, rax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x6ef	      0xe800000000	                          call 0x4000734	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x6f4	          0x4889c2	                            mov rdx, rax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x6f7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x6fb	          0x4889c6	                            mov rsi, rax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x6fe	      0xbf00000000	                              mov edi, 0	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x703	      0xb800000000	                              mov eax, 0	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x708	      0xe800000000	                          call 0x400074d	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x70d	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x710	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x713	            0x7445	                            je 0x400079a	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x715	          0x8b4580	             mov eax, dword [rbp - 0x80]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x718	            0x89c7	                            mov edi, eax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x71a	      0xe800000000	                          call 0x400075f	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x71f	          0x4989c4	                            mov r12, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x722	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x725	            0x89c7	                            mov edi, eax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x727	      0xe800000000	                          call 0x400076c	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x72c	          0x4889c3	                            mov rbx, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x72f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x733	          0x4889c7	                            mov rdi, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x736	      0xe800000000	                          call 0x400077b	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x73b	          0x4889c2	                            mov rdx, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x73e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x742	          0x4d89e0	                             mov r8, r12	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x745	          0x4889d9	                            mov rcx, rbx	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x748	          0x4889c6	                            mov rsi, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x74b	      0xbf00000000	                              mov edi, 0	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x750	      0xb800000000	                              mov eax, 0	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x755	      0xe800000000	                          call 0x400079a	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x75a	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       138	mktree.c	FUNCTION_4	CALL_21
0x75e	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       138	mktree.c	FUNCTION_4	CALL_21
0x762	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       138	mktree.c	FUNCTION_4	CALL_21
0x768	          0x4889ce	                            mov rsi, rcx	       138	mktree.c	FUNCTION_4	CALL_21
0x76b	            0x89c7	                            mov edi, eax	       138	mktree.c	FUNCTION_4	CALL_21
0x76d	      0xe8e9f9ffff	                 call sym.append_to_tree	       138	mktree.c	FUNCTION_4	CALL_21
0x772	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       139	mktree.c	FUNCTION_4	CALL_22
0x776	          0x4889c7	                            mov rdi, rax	       139	mktree.c	FUNCTION_4	CALL_22
0x779	      0xe800000000	                          call 0x40007be	       139	mktree.c	FUNCTION_4	CALL_22
0x77e	              0x90	                                     nop	       140	mktree.c	FUNCTION_4
0x77f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	mktree.c	FUNCTION_4
0x783	    0x644833042528	                xor rax, qword fs:[0x28]	       140	mktree.c	FUNCTION_4
0x78c	            0x7405	                            je 0x40007d3	       140	mktree.c	FUNCTION_4
0x78e	      0xe800000000	                          call 0x40007d3	       140	mktree.c	FUNCTION_4
0x793	    0x4881c4a00000	                           add rsp, 0xa0	       140	mktree.c	FUNCTION_4
0x79a	              0x5b	                                 pop rbx	       140	mktree.c	FUNCTION_4
0x79b	            0x415c	                                 pop r12	       140	mktree.c	FUNCTION_4
0x79d	              0x5d	                                 pop rbp	       140	mktree.c	FUNCTION_4
0x79e	              0xc3	                                     ret	       140	mktree.c	FUNCTION_4
write_tree	SWITCH,0:IF,0:FOR,2:DO,0:WHILE,0:CALL,6:functions,0:ELSE,0	84
0x35c	              0x55	                                push rbp	        44	mktree.c	FUNCTION_3
0x35d	          0x4889e5	                            mov rbp, rsp	        44	mktree.c	FUNCTION_3
0x360	        0x4883ec50	                           sub rsp, 0x50	        44	mktree.c	FUNCTION_3
0x364	        0x48897db8	             mov qword [rbp - 0x48], rdi	        44	mktree.c	FUNCTION_3
0x368	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	mktree.c	FUNCTION_3
0x371	        0x488945f8	                mov qword [rbp - 8], rax	        44	mktree.c	FUNCTION_3
0x375	            0x31c0	                            xor eax, eax	        44	mktree.c	FUNCTION_3
0x377	    0x8b0500000000	            mov eax, dword [0x040003bd] 	        49	mktree.c	FUNCTION_3	CALL_1
0x37d	          0x4863f0	                         movsxd rsi, eax	        49	mktree.c	FUNCTION_3	CALL_1
0x380	    0x488b05000000	            mov rax, qword [0x040003c7] 	        49	mktree.c	FUNCTION_3	CALL_1
0x387	      0xb900000000	                              mov ecx, 0	        49	mktree.c	FUNCTION_3	CALL_1
0x38c	      0xba08000000	                              mov edx, 8	        49	mktree.c	FUNCTION_3	CALL_1
0x391	          0x4889c7	                            mov rdi, rax	        49	mktree.c	FUNCTION_3	CALL_1
0x394	      0xe8fdfcffff	                     call sym.sane_qsort	        49	mktree.c	FUNCTION_3	CALL_1
0x399	    0xc745cc000000	               mov dword [rbp - 0x34], 0	        50	mktree.c	FUNCTION_3	FOR_1
0x3a0	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        50	mktree.c	FUNCTION_3	FOR_1
0x3a8	            0xeb27	                           jmp 0x4000411	        50	mktree.c	FUNCTION_3	FOR_1
0x3aa	    0x488b05000000	            mov rax, qword [0x040003f1] 	        51	mktree.c	FUNCTION_3	FOR_1
0x3b1	          0x8b55cc	             mov edx, dword [rbp - 0x34]	        51	mktree.c	FUNCTION_3	FOR_1
0x3b4	          0x4863d2	                         movsxd rdx, edx	        51	mktree.c	FUNCTION_3	FOR_1
0x3b7	        0x48c1e203	                              shl rdx, 3	        51	mktree.c	FUNCTION_3	FOR_1
0x3bb	          0x4801d0	                            add rax, rdx	        51	mktree.c	FUNCTION_3	FOR_1
0x3be	          0x488b00	                    mov rax, qword [rax]	        51	mktree.c	FUNCTION_3	FOR_1
0x3c1	          0x8b4018	            mov eax, dword [rax + 0x18] 	        51	mktree.c	FUNCTION_3	FOR_1
0x3c4	          0x83c020	                           add eax, 0x20	        51	mktree.c	FUNCTION_3	FOR_1
0x3c7	            0x4898	                                    cdqe	        51	mktree.c	FUNCTION_3	FOR_1
0x3c9	        0x480145d0	            add qword [rbp - 0x30], rax 	        51	mktree.c	FUNCTION_3	FOR_1
0x3cd	        0x8345cc01	               add dword [rbp - 0x34], 1	        50	mktree.c	FUNCTION_3	FOR_1
0x3d1	    0x8b0500000000	            mov eax, dword [0x04000417] 	        50	mktree.c	FUNCTION_3	FOR_1
0x3d7	          0x3945cc	            cmp dword [rbp - 0x34], eax 	        50	mktree.c	FUNCTION_3	FOR_1
0x3da	            0x7cce	                            jl 0x40003ea	        50	mktree.c	FUNCTION_3	FOR_1
0x3dc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        53	mktree.c	FUNCTION_3	CALL_2
0x3e0	        0x488d45e0	                   lea rax, [rbp - 0x20]	        53	mktree.c	FUNCTION_3	CALL_2
0x3e4	          0x4889d6	                            mov rsi, rdx	        53	mktree.c	FUNCTION_3	CALL_2
0x3e7	          0x4889c7	                            mov rdi, rax	        53	mktree.c	FUNCTION_3	CALL_2
0x3ea	      0xe800000000	                          call 0x400042f	        53	mktree.c	FUNCTION_3	CALL_2
0x3ef	    0xc745cc000000	               mov dword [rbp - 0x34], 0	        54	mktree.c	FUNCTION_3	FOR_2
0x3f6	            0xeb6f	                           jmp 0x40004a7	        54	mktree.c	FUNCTION_3	FOR_2
0x3f8	    0x488b05000000	            mov rax, qword [0x0400043f] 	        55	mktree.c	FUNCTION_3	FOR_2
0x3ff	          0x8b55cc	             mov edx, dword [rbp - 0x34]	        55	mktree.c	FUNCTION_3	FOR_2
0x402	          0x4863d2	                         movsxd rdx, edx	        55	mktree.c	FUNCTION_3	FOR_2
0x405	        0x48c1e203	                              shl rdx, 3	        55	mktree.c	FUNCTION_3	FOR_2
0x409	          0x4801d0	                            add rax, rdx	        55	mktree.c	FUNCTION_3	FOR_2
0x40c	          0x488b00	                    mov rax, qword [rax]	        55	mktree.c	FUNCTION_3	FOR_2
0x40f	        0x488945d8	             mov qword [rbp - 0x28], rax	        55	mktree.c	FUNCTION_3	FOR_2
0x413	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x417	        0x488d481c	                   lea rcx, [rax + 0x1c]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x41b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x41f	            0x8b10	                    mov edx, dword [rax]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x421	        0x488d45e0	                   lea rax, [rbp - 0x20]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x425	    0x41b800000000	                              mov r8d, 0	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x42b	      0xbe00000000	                              mov esi, 0	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x430	          0x4889c7	                            mov rdi, rax	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x433	      0xb800000000	                              mov eax, 0	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x438	      0xe800000000	                          call 0x400047d	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x43d	    0x488b05000000	            mov rax, qword [0x04000484] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x444	        0x488b4058	            mov rax, qword [rax + 0x58] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x448	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x44c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x450	        0x488d4804	                      lea rcx, [rax + 4]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x454	        0x488d45e0	                   lea rax, [rbp - 0x20]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x458	          0x4889ce	                            mov rsi, rcx	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x45b	          0x4889c7	                            mov rdi, rax	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x45e	      0xe800000000	                          call 0x40004a3	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x463	        0x8345cc01	               add dword [rbp - 0x34], 1	        54	mktree.c	FUNCTION_3	FOR_2
0x467	    0x8b0500000000	            mov eax, dword [0x040004ad] 	        54	mktree.c	FUNCTION_3	FOR_2
0x46d	          0x3945cc	            cmp dword [rbp - 0x34], eax 	        54	mktree.c	FUNCTION_3	FOR_2
0x470	            0x7c86	                            jl 0x4000438	        54	mktree.c	FUNCTION_3	FOR_2
0x472	    0x488b15000000	            mov rdx, qword [0x040004b9] 	        60	mktree.c	FUNCTION_3	CALL_5
0x479	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	        60	mktree.c	FUNCTION_3	CALL_5
0x47d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        60	mktree.c	FUNCTION_3	CALL_5
0x481	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	        60	mktree.c	FUNCTION_3	CALL_5
0x485	          0x4889c7	                            mov rdi, rax	        60	mktree.c	FUNCTION_3	CALL_5
0x488	      0xe800000000	                          call 0x40004cd	        60	mktree.c	FUNCTION_3	CALL_5
0x48d	        0x488d45e0	                   lea rax, [rbp - 0x20]	        61	mktree.c	FUNCTION_3	CALL_6
0x491	          0x4889c7	                            mov rdi, rax	        61	mktree.c	FUNCTION_3	CALL_6
0x494	      0xe800000000	                          call 0x40004d9	        61	mktree.c	FUNCTION_3	CALL_6
0x499	              0x90	                                     nop	        62	mktree.c	FUNCTION_3
0x49a	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	mktree.c	FUNCTION_3
0x49e	    0x644833042528	                xor rax, qword fs:[0x28]	        62	mktree.c	FUNCTION_3
0x4a7	            0x7405	                            je 0x40004ee	        62	mktree.c	FUNCTION_3
0x4a9	      0xe800000000	                          call 0x40004ee	        62	mktree.c	FUNCTION_3
0x4ae	              0xc9	                                   leave	        62	mktree.c	FUNCTION_3
0x4af	              0xc3	                                     ret	        62	mktree.c	FUNCTION_3
st_add	SWITCH,0:IF,1:FOR,0:DO,0:WHILE,0:CALL,2:functions,0:ELSE,0	20
0x0	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_19
0x1	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_19
0x4	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_19
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_19
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_19
0x10	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x14	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x17	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x1b	            0x731a	                           jae 0x4000077	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x1d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x21	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x25	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x28	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x2d	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x32	      0xe800000000	                          call 0x4000077	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x37	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_19
0x3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_19
0x3f	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_19
0x42	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_19
0x43	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_19
sane_qsort	SWITCH,0:IF,1:FOR,0:DO,0:WHILE,0:CALL,1:functions,0:ELSE,0	18
0x96	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_30
0x97	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_30
0x9a	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_30
0x9e	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_30
0xa2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_30
0xa6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_30
0xaa	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_30
0xae	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_30	IF_1
0xb3	            0x7618	                           jbe 0x400010d	      1048	git-compat-util.h	FUNCTION_30	IF_1
0xb5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0xb9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0xbd	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0xc1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0xc5	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0xc8	      0xe800000000	                          call 0x400010d	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0xcd	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_30
0xce	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_30
0xcf	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_30
cmd_mktree	SWITCH,0:IF,4:FOR,0:DO,0:WHILE,2:CALL,17:functions,0:ELSE,1	114
0x79f	              0x55	                                push rbp	       143	mktree.c	FUNCTION_5
0x7a0	          0x4889e5	                            mov rbp, rsp	       143	mktree.c	FUNCTION_5
0x7a3	    0x4881ec900100	                          sub rsp, 0x190	       143	mktree.c	FUNCTION_5
0x7aa	    0x89bd8cfeffff	            mov dword [rbp - 0x174], edi	       143	mktree.c	FUNCTION_5
0x7b0	    0x4889b580feff	            mov qword [rbp - 0x180], rsi	       143	mktree.c	FUNCTION_5
0x7b7	    0x48899578feff	            mov qword [rbp - 0x188], rdx	       143	mktree.c	FUNCTION_5
0x7be	    0x64488b042528	                mov rax, qword fs:[0x28]	       143	mktree.c	FUNCTION_5
0x7c7	        0x488945f8	                mov qword [rbp - 8], rax	       143	mktree.c	FUNCTION_5
0x7cb	            0x31c0	                            xor eax, eax	       143	mktree.c	FUNCTION_5
0x7cd	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	       144	mktree.c	FUNCTION_5
0x7d8	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       144	mktree.c	FUNCTION_5
0x7e3	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       144	mktree.c	FUNCTION_5
0x7ee	    0xc78598feffff	              mov dword [rbp - 0x168], 0	       146	mktree.c	FUNCTION_5
0x7f8	    0xc7859cfeffff	              mov dword [rbp - 0x164], 0	       147	mktree.c	FUNCTION_5
0x802	    0xc785a0feffff	              mov dword [rbp - 0x160], 0	       148	mktree.c	FUNCTION_5
0x80c	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	       149	mktree.c	FUNCTION_5
0x816	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       152	mktree.c	FUNCTION_5
0x81d	      0xb800000000	                              mov eax, 0	       152	mktree.c	FUNCTION_5
0x822	      0xb920000000	                           mov ecx, 0x20	       152	mktree.c	FUNCTION_5
0x827	          0x4889d7	                            mov rdi, rdx	       152	mktree.c	FUNCTION_5
0x82a	          0xf348ab	              rep stosq qword [rdi], rax	       152	mktree.c	FUNCTION_5
0x82d	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       152	mktree.c	FUNCTION_5
0x837	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x7a 	       152	mktree.c	FUNCTION_5
0x841	    0x488d8598feff	                  lea rax, [rbp - 0x168]	       152	mktree.c	FUNCTION_5
0x848	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       152	mktree.c	FUNCTION_5
0x84f	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       152	mktree.c	FUNCTION_5
0x85a	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       152	mktree.c	FUNCTION_5
0x864	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       152	mktree.c	FUNCTION_5
0x86f	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       152	mktree.c	FUNCTION_5
0x879	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       152	mktree.c	FUNCTION_5
0x884	    0x488d859cfeff	                  lea rax, [rbp - 0x164]	       152	mktree.c	FUNCTION_5
0x88b	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       152	mktree.c	FUNCTION_5
0x892	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       152	mktree.c	FUNCTION_5
0x89d	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       152	mktree.c	FUNCTION_5
0x8a7	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       152	mktree.c	FUNCTION_5
0x8b2	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       152	mktree.c	FUNCTION_5
0x8bc	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       152	mktree.c	FUNCTION_5
0x8c7	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	       152	mktree.c	FUNCTION_5
0x8ce	        0x48894580	             mov qword [rbp - 0x80], rax	       152	mktree.c	FUNCTION_5
0x8d2	    0x48c745900000	               mov qword [rbp - 0x70], 0	       152	mktree.c	FUNCTION_5
0x8da	    0xc74598020000	               mov dword [rbp - 0x68], 2	       152	mktree.c	FUNCTION_5
0x8e1	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       152	mktree.c	FUNCTION_5
0x8e9	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	       159	mktree.c	FUNCTION_5	CALL_8
0x8f0	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	       159	mktree.c	FUNCTION_5	CALL_8
0x8f7	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	       159	mktree.c	FUNCTION_5	CALL_8
0x8fe	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       159	mktree.c	FUNCTION_5	CALL_8
0x904	    0x41b900000000	                              mov r9d, 0	       159	mktree.c	FUNCTION_5	CALL_8
0x90a	    0x41b800000000	                              mov r8d, 0	       159	mktree.c	FUNCTION_5	CALL_8
0x910	            0x89c7	                            mov edi, eax	       159	mktree.c	FUNCTION_5	CALL_8
0x912	      0xe800000000	                          call 0x4000957	       159	mktree.c	FUNCTION_5	CALL_8
0x917	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	       159	mktree.c	FUNCTION_5	CALL_8
0x91d	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	       160	mktree.c	FUNCTION_5
0x923	            0x85c0	                           test eax, eax	       160	mktree.c	FUNCTION_5
0x925	            0x7407	                            je 0x400096e	       160	mktree.c	FUNCTION_5
0x927	      0xb800000000	                              mov eax, 0	       160	mktree.c	FUNCTION_5
0x92c	            0xeb05	                           jmp 0x4000973	       160	mktree.c	FUNCTION_5
0x92e	      0xb800000000	                              mov eax, 0	       160	mktree.c	FUNCTION_5
0x933	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       160	mktree.c	FUNCTION_5
0x93a	      0xe9d6000000	                           jmp 0x4000a55	       162	mktree.c	FUNCTION_5	WHILE_1
0x93f	    0x488b0d000000	            mov rcx, qword [0x04000986] 	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x946	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x94d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x954	          0x4889ce	                            mov rsi, rcx	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x957	          0x4889d7	                            mov rdi, rdx	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x95a	            0xffd0	                                call rax	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x95c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x95f	            0x750c	                           jne 0x40009ad	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x961	    0xc785a4feffff	              mov dword [rbp - 0x15c], 1	       165	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x96b	            0xeb4c	                           jmp 0x40009f9	       166	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x96d	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x974	           0xfb600	                   movzx eax, byte [rax]	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x977	            0x84c0	                             test al, al	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x979	            0x7519	                           jne 0x40009d4	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x97b	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x981	            0x85c0	                           test eax, eax	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x983	            0x7533	                           jne 0x40009f8	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x985	      0xbf00000000	                              mov edi, 0	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x98a	      0xb800000000	                              mov eax, 0	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x98f	      0xe800000000	                          call 0x40009d4	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x994	    0x8b8d9cfeffff	            mov ecx, dword [rbp - 0x164]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x99a	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x9a0	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x9a7	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x9ae	          0x4889c7	                            mov rdi, rax	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x9b1	      0xe8fafaffff	                    call sym.mktree_line	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x9b6	            0xeb87	                           jmp 0x400097f	       175	mktree.c	FUNCTION_5	WHILE_1	WHILE_2
0x9b8	              0x90	                                     nop	       171	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x9b9	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9bf	            0x85c0	                           test eax, eax	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9c1	            0x7413	                            je 0x4000a16	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9c3	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9ca	            0x740a	                            je 0x4000a16	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9cc	    0x8b0500000000	            mov eax, dword [0x04000a12] 	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9d2	            0x85c0	                           test eax, eax	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9d4	            0x7e35	                           jle 0x4000a4b	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x9d6	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       184	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_12
0x9dd	          0x4889c7	                            mov rdi, rax	       184	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_12
0x9e0	      0xe877f9ffff	                     call sym.write_tree	       184	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_12
0x9e5	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x9ec	          0x4889c7	                            mov rdi, rax	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x9ef	      0xe800000000	                          call 0x4000a34	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x9f4	          0x4889c7	                            mov rdi, rax	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x9f7	      0xe800000000	                          call 0x4000a3c	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x9fc	    0x488b05000000	            mov rax, qword [0x04000a43] 	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0xa03	          0x4889c7	                            mov rdi, rax	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0xa06	      0xe800000000	                          call 0x4000a4b	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0xa0b	    0xc70500000000	               mov dword [0x04000a55], 0	       188	mktree.c	FUNCTION_5	WHILE_1
0xa15	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	       162	mktree.c	FUNCTION_5	WHILE_1
0xa1c	     0xf841dffffff	                            je 0x400097f	       162	mktree.c	FUNCTION_5	WHILE_1
0xa22	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       190	mktree.c	FUNCTION_5	CALL_16
0xa29	          0x4889c7	                            mov rdi, rax	       190	mktree.c	FUNCTION_5	CALL_16
0xa2c	      0xe800000000	                          call 0x4000a71	       190	mktree.c	FUNCTION_5	CALL_16
0xa31	      0xbf00000000	                              mov edi, 0	       191	mktree.c	FUNCTION_5	CALL_17
0xa36	      0xe800000000	                  call section_end..text	       191	mktree.c	FUNCTION_5	CALL_17
st_mult	SWITCH,0:IF,1:FOR,0:DO,0:WHILE,0:CALL,2:functions,0:ELSE,0	22
0x44	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_20
0x45	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_20
0x48	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_20
0x4c	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_20
0x50	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_20
0x54	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x59	            0x7430	                            je 0x40000cb	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x5b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x62	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x67	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x6b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x6f	            0x731a	                           jae 0x40000cb	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x71	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x75	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x79	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x7c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x81	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x86	      0xe800000000	                          call 0x40000cb	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_20
0x8f	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_20
0x94	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_20
0x95	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_20
ent_compare	SWITCH,0:IF,0:FOR,0:DO,0:WHILE,0:CALL,1:functions,0:ELSE,0	33
0x2f1	              0x55	                                push rbp	        36	mktree.c	FUNCTION_2
0x2f2	          0x4889e5	                            mov rbp, rsp	        36	mktree.c	FUNCTION_2
0x2f5	        0x4883ec20	                           sub rsp, 0x20	        36	mktree.c	FUNCTION_2
0x2f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        36	mktree.c	FUNCTION_2
0x2fd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        36	mktree.c	FUNCTION_2
0x301	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	mktree.c	FUNCTION_2
0x305	          0x488b00	                    mov rax, qword [rax]	        37	mktree.c	FUNCTION_2
0x308	        0x488945f0	             mov qword [rbp - 0x10], rax	        37	mktree.c	FUNCTION_2
0x30c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	mktree.c	FUNCTION_2
0x310	          0x488b00	                    mov rax, qword [rax]	        38	mktree.c	FUNCTION_2
0x313	        0x488945f8	                mov qword [rbp - 8], rax	        38	mktree.c	FUNCTION_2
0x317	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	mktree.c	FUNCTION_2
0x31b	            0x8b00	                    mov eax, dword [rax]	        40	mktree.c	FUNCTION_2
0x31d	          0x4189c0	                            mov r8d, eax	        39	mktree.c	FUNCTION_2	CALL_1
0x320	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	mktree.c	FUNCTION_2	CALL_1
0x324	          0x8b4818	            mov ecx, dword [rax + 0x18] 	        39	mktree.c	FUNCTION_2	CALL_1
0x327	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	mktree.c	FUNCTION_2
0x32b	        0x488d501c	                   lea rdx, [rax + 0x1c]	        40	mktree.c	FUNCTION_2
0x32f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	mktree.c	FUNCTION_2	CALL_1
0x333	            0x8b00	                    mov eax, dword [rax]	        39	mktree.c	FUNCTION_2	CALL_1
0x335	          0x4189c2	                           mov r10d, eax	        39	mktree.c	FUNCTION_2	CALL_1
0x338	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	mktree.c	FUNCTION_2	CALL_1
0x33c	          0x8b4018	            mov eax, dword [rax + 0x18] 	        39	mktree.c	FUNCTION_2	CALL_1
0x33f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        39	mktree.c	FUNCTION_2	CALL_1
0x343	        0x488d7e1c	                   lea rdi, [rsi + 0x1c]	        39	mktree.c	FUNCTION_2	CALL_1
0x347	          0x4589c1	                            mov r9d, r8d	        39	mktree.c	FUNCTION_2	CALL_1
0x34a	          0x4189c8	                            mov r8d, ecx	        39	mktree.c	FUNCTION_2	CALL_1
0x34d	          0x4889d1	                            mov rcx, rdx	        39	mktree.c	FUNCTION_2	CALL_1
0x350	          0x4489d2	                           mov edx, r10d	        39	mktree.c	FUNCTION_2	CALL_1
0x353	            0x89c6	                            mov esi, eax	        39	mktree.c	FUNCTION_2	CALL_1
0x355	      0xe800000000	                          call 0x400039a	        39	mktree.c	FUNCTION_2	CALL_1
0x35a	              0xc9	                                   leave	        41	mktree.c	FUNCTION_2
0x35b	              0xc3	                                     ret	        41	mktree.c	FUNCTION_2
append_to_tree	SWITCH,0:IF,1:FOR,0:DO,0:WHILE,0:CALL,6:functions,0:ELSE,0	110
0x15b	              0x55	                                push rbp	        20	mktree.c	FUNCTION_1
0x15c	          0x4889e5	                            mov rbp, rsp	        20	mktree.c	FUNCTION_1
0x15f	        0x4883ec40	                           sub rsp, 0x40	        20	mktree.c	FUNCTION_1
0x163	          0x897ddc	             mov dword [rbp - 0x24], edi	        20	mktree.c	FUNCTION_1
0x166	        0x488975d0	             mov qword [rbp - 0x30], rsi	        20	mktree.c	FUNCTION_1
0x16a	        0x488955c8	             mov qword [rbp - 0x38], rdx	        20	mktree.c	FUNCTION_1
0x16e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        22	mktree.c	FUNCTION_1	CALL_1
0x172	          0x4889c7	                            mov rdi, rax	        22	mktree.c	FUNCTION_1	CALL_1
0x175	      0xe800000000	                          call 0x40001ba	        22	mktree.c	FUNCTION_1	CALL_1
0x17a	        0x488945e8	             mov qword [rbp - 0x18], rax	        22	mktree.c	FUNCTION_1	CALL_1
0x17e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x182	      0xbe2f000000	                           mov esi, 0x2f	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x187	          0x4889c7	                            mov rdi, rax	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x18a	      0xe800000000	                          call 0x40001cf	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x18f	          0x4885c0	                           test rax, rax	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x192	            0x7416	                            je 0x40001ea	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x194	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        24	mktree.c	FUNCTION_1	CALL_3
0x198	          0x4889c6	                            mov rsi, rax	        24	mktree.c	FUNCTION_1	CALL_3
0x19b	      0xbf00000000	                              mov edi, 0	        24	mktree.c	FUNCTION_1	CALL_3
0x1a0	      0xb800000000	                              mov eax, 0	        24	mktree.c	FUNCTION_1	CALL_3
0x1a5	      0xe800000000	                          call 0x40001ea	        24	mktree.c	FUNCTION_1	CALL_3
0x1aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        26	mktree.c	FUNCTION_1	CALL_4
0x1ae	        0x488945f0	             mov qword [rbp - 0x10], rax	        26	mktree.c	FUNCTION_1	CALL_4
0x1b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        26	mktree.c	FUNCTION_1	CALL_4
0x1b6	          0x4889c6	                            mov rsi, rax	        26	mktree.c	FUNCTION_1	CALL_4
0x1b9	      0xbf1c000000	                           mov edi, 0x1c	        26	mktree.c	FUNCTION_1	CALL_4
0x1be	      0xe83dfeffff	                         call sym.st_add	        26	mktree.c	FUNCTION_1	CALL_4
0x1c3	      0xbe01000000	                              mov esi, 1	        26	mktree.c	FUNCTION_1	CALL_4
0x1c8	          0x4889c7	                            mov rdi, rax	        26	mktree.c	FUNCTION_1	CALL_4
0x1cb	      0xe830feffff	                         call sym.st_add	        26	mktree.c	FUNCTION_1	CALL_4
0x1d0	          0x4889c6	                            mov rsi, rax	        26	mktree.c	FUNCTION_1	CALL_4
0x1d3	      0xbf01000000	                              mov edi, 1	        26	mktree.c	FUNCTION_1	CALL_4
0x1d8	      0xe800000000	                          call 0x400021d	        26	mktree.c	FUNCTION_1	CALL_4
0x1dd	        0x488945f8	                mov qword [rbp - 8], rax	        26	mktree.c	FUNCTION_1	CALL_4
0x1e1	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	mktree.c	FUNCTION_1	CALL_4
0x1e5	        0x488d481c	                   lea rcx, [rax + 0x1c]	        26	mktree.c	FUNCTION_1	CALL_4
0x1e9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        26	mktree.c	FUNCTION_1	CALL_4
0x1ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        26	mktree.c	FUNCTION_1	CALL_4
0x1f1	          0x4889c6	                            mov rsi, rax	        26	mktree.c	FUNCTION_1	CALL_4
0x1f4	          0x4889cf	                            mov rdi, rcx	        26	mktree.c	FUNCTION_1	CALL_4
0x1f7	      0xe800000000	                          call 0x400023c	        26	mktree.c	FUNCTION_1	CALL_4
0x1fc	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	mktree.c	FUNCTION_1
0x200	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        27	mktree.c	FUNCTION_1
0x203	            0x8910	                    mov dword [rax], edx	        27	mktree.c	FUNCTION_1
0x205	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        28	mktree.c	FUNCTION_1
0x209	            0x89c2	                            mov edx, eax	        28	mktree.c	FUNCTION_1
0x20b	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	mktree.c	FUNCTION_1
0x20f	          0x895018	             mov dword [rax + 0x18], edx	        28	mktree.c	FUNCTION_1
0x212	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	mktree.c	FUNCTION_1	CALL_5
0x216	        0x488d5004	                      lea rdx, [rax + 4]	        29	mktree.c	FUNCTION_1	CALL_5
0x21a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        29	mktree.c	FUNCTION_1	CALL_5
0x21e	          0x4889c6	                            mov rsi, rax	        29	mktree.c	FUNCTION_1	CALL_5
0x221	          0x4889d7	                            mov rdi, rdx	        29	mktree.c	FUNCTION_1	CALL_5
0x224	      0xe80cffffff	                         call sym.oidcpy	        29	mktree.c	FUNCTION_1	CALL_5
0x229	    0x8b0500000000	            mov eax, dword [0x0400026f] 	        31	mktree.c	FUNCTION_1	CALL_6
0x22f	          0x8d5001	                      lea edx, [rax + 1]	        31	mktree.c	FUNCTION_1	CALL_6
0x232	    0x8b0500000000	            mov eax, dword [0x04000278] 	        31	mktree.c	FUNCTION_1	CALL_6
0x238	            0x39c2	                            cmp edx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x23a	     0xf8e87000000	                           jle 0x4000307	        31	mktree.c	FUNCTION_1	CALL_6
0x240	    0x8b0500000000	            mov eax, dword [0x04000286] 	        31	mktree.c	FUNCTION_1	CALL_6
0x246	          0x8d5010	                   lea edx, [rax + 0x10]	        31	mktree.c	FUNCTION_1	CALL_6
0x249	            0x89d0	                            mov eax, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x24b	             0x1c0	                            add eax, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x24d	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x24f	            0x89c2	                            mov edx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x251	          0xc1ea1f	                           shr edx, 0x1f	        31	mktree.c	FUNCTION_1	CALL_6
0x254	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x256	            0xd1f8	                              sar eax, 1	        31	mktree.c	FUNCTION_1	CALL_6
0x258	            0x89c2	                            mov edx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x25a	    0x8b0500000000	            mov eax, dword [0x040002a0] 	        31	mktree.c	FUNCTION_1	CALL_6
0x260	          0x83c001	                              add eax, 1	        31	mktree.c	FUNCTION_1	CALL_6
0x263	            0x39c2	                            cmp edx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x265	            0x7d11	                           jge 0x40002b8	        31	mktree.c	FUNCTION_1	CALL_6
0x267	    0x8b0500000000	            mov eax, dword [0x040002ad] 	        31	mktree.c	FUNCTION_1	CALL_6
0x26d	          0x83c001	                              add eax, 1	        31	mktree.c	FUNCTION_1	CALL_6
0x270	    0x890500000000	            mov dword [0x040002b6], eax 	        31	mktree.c	FUNCTION_1	CALL_6
0x276	            0xeb1e	                           jmp 0x40002d6	        31	mktree.c	FUNCTION_1	CALL_6
0x278	    0x8b0500000000	            mov eax, dword [0x040002be] 	        31	mktree.c	FUNCTION_1	CALL_6
0x27e	          0x8d5010	                   lea edx, [rax + 0x10]	        31	mktree.c	FUNCTION_1	CALL_6
0x281	            0x89d0	                            mov eax, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x283	             0x1c0	                            add eax, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x285	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x287	            0x89c2	                            mov edx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x289	          0xc1ea1f	                           shr edx, 0x1f	        31	mktree.c	FUNCTION_1	CALL_6
0x28c	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x28e	            0xd1f8	                              sar eax, 1	        31	mktree.c	FUNCTION_1	CALL_6
0x290	    0x890500000000	            mov dword [0x040002d6], eax 	        31	mktree.c	FUNCTION_1	CALL_6
0x296	    0x8b0500000000	            mov eax, dword [0x040002dc] 	        31	mktree.c	FUNCTION_1	CALL_6
0x29c	            0x4898	                                    cdqe	        31	mktree.c	FUNCTION_1	CALL_6
0x29e	          0x4889c6	                            mov rsi, rax	        31	mktree.c	FUNCTION_1	CALL_6
0x2a1	      0xbf08000000	                              mov edi, 8	        31	mktree.c	FUNCTION_1	CALL_6
0x2a6	      0xe899fdffff	                        call sym.st_mult	        31	mktree.c	FUNCTION_1	CALL_6
0x2ab	          0x4889c2	                            mov rdx, rax	        31	mktree.c	FUNCTION_1	CALL_6
0x2ae	    0x488b05000000	            mov rax, qword [0x040002f5] 	        31	mktree.c	FUNCTION_1	CALL_6
0x2b5	          0x4889d6	                            mov rsi, rdx	        31	mktree.c	FUNCTION_1	CALL_6
0x2b8	          0x4889c7	                            mov rdi, rax	        31	mktree.c	FUNCTION_1	CALL_6
0x2bb	      0xe800000000	                          call 0x4000300	        31	mktree.c	FUNCTION_1	CALL_6
0x2c0	    0x488905000000	            mov qword [0x04000307], rax 	        31	mktree.c	FUNCTION_1	CALL_6
0x2c7	    0x488b0d000000	            mov rcx, qword [0x0400030e] 	        32	mktree.c	FUNCTION_1
0x2ce	    0x8b0500000000	            mov eax, dword [0x04000314] 	        32	mktree.c	FUNCTION_1
0x2d4	          0x8d5001	                      lea edx, [rax + 1]	        32	mktree.c	FUNCTION_1
0x2d7	    0x891500000000	            mov dword [0x0400031d], edx 	        32	mktree.c	FUNCTION_1
0x2dd	            0x4898	                                    cdqe	        32	mktree.c	FUNCTION_1
0x2df	        0x48c1e003	                              shl rax, 3	        32	mktree.c	FUNCTION_1
0x2e3	        0x488d1401	                    lea rdx, [rcx + rax]	        32	mktree.c	FUNCTION_1
0x2e7	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	mktree.c	FUNCTION_1
0x2eb	          0x488902	                    mov qword [rdx], rax	        32	mktree.c	FUNCTION_1
0x2ee	              0x90	                                     nop	        33	mktree.c	FUNCTION_1
0x2ef	              0xc9	                                   leave	        33	mktree.c	FUNCTION_1
0x2f0	              0xc3	                                     ret	        33	mktree.c	FUNCTION_1
