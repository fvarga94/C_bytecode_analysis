job_stop	WHILE,0:FOR,0:CALL,8:IF,7:ELSE,2:functions,0:DO,0:SWITCH,0	77
0x400cd60	              0x55	                                push rbp	      5797	channel.c	FUNCTION_134
0x400cd61	              0x53	                                push rbx	      5797	channel.c	FUNCTION_134
0x400cd62	          0x4889fd	                            mov rbp, rdi	      5797	channel.c	FUNCTION_134
0x400cd65	          0x4889d3	                            mov rbx, rdx	      5797	channel.c	FUNCTION_134
0x400cd68	        0x4883ec08	                              sub rsp, 8	      5797	channel.c	FUNCTION_134
0x400cd6c	          0x4885d2	                           test rdx, rdx	      5800	channel.c	FUNCTION_134	IF_1
0x400cd6f	     0xf84a3000000	                            je 0x400ce18	      5800	channel.c	FUNCTION_134	IF_1
0x400cd75	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      5813	channel.c	FUNCTION_134	IF_4
0x400cd78	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400cd7c	            0x85c0	                           test eax, eax	      5813	channel.c	FUNCTION_134	IF_4
0x400cd7e	            0x7468	                            je 0x400cde8	      5813	channel.c	FUNCTION_134	IF_4
0x400cd80	          0x83f802	                              cmp eax, 2	      5818	channel.c	FUNCTION_134	IF_5
0x400cd83	            0x747b	                            je 0x400ce00	      5818	channel.c	FUNCTION_134	IF_5
0x400cd85	            0x31c0	                            xor eax, eax	      5823	channel.c	FUNCTION_134	CALL_6
0x400cd87	          0x4889da	                            mov rdx, rbx	      5823	channel.c	FUNCTION_134	CALL_6
0x400cd8a	      0xbe00000000	                              mov esi, 0	      5823	channel.c	FUNCTION_134	CALL_6
0x400cd8f	      0xe800000000	                          call 0x400cd94	      5823	channel.c	FUNCTION_134	CALL_6
0x400cd94	          0x4889de	                            mov rsi, rbx	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400cd97	          0x4889ef	                            mov rdi, rbp	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400cd9a	      0xe800000000	                          call 0x400cd9f	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400cd9f	            0x85c0	                           test eax, eax	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400cda1	            0x7437	                            je 0x400cdda	      5824	channel.c	FUNCTION_134	IF_6	CALL_7
0x400cda3	        0x488b5560	            mov rdx, qword [rbp + 0x60] 	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cda7	          0x4885d2	                           test rdx, rdx	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdaa	     0xf84b0000000	                            je 0x400ce60	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdb0	      0xb905000000	                              mov ecx, 5	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdb5	          0x4889de	                            mov rsi, rbx	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdb8	      0xbf00000000	                              mov edi, 0	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdbd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdbf	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_134
0x400cdc4	        0x400f97c6	                                seta sil	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdc8	           0xf92c1	                                 setb cl	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdcb	          0x4038ce	                             cmp sil, cl	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdce	            0x750a	                           jne 0x400cdda	      5828	channel.c	FUNCTION_134	IF_7	CALL_8
0x400cdd0	    0xc782b0040000	              mov dword [rdx + 0x4b0], 1	      5829	channel.c	FUNCTION_134	IF_7
0x400cdda	        0x4883c408	                              add rsp, 8	      5834	channel.c	FUNCTION_134
0x400cdde	              0x5b	                                 pop rbx	      5834	channel.c	FUNCTION_134
0x400cddf	              0x5d	                                 pop rbp	      5834	channel.c	FUNCTION_134
0x400cde0	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
0x400cde1	     0xf1f80000000	                         nop dword [rax]	      5834	channel.c	FUNCTION_134
0x400cde8	      0xbe00000000	                              mov esi, 0	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400cded	      0xe800000000	                          call 0x400cdf2	      5815	channel.c	FUNCTION_134	IF_4	CALL_4
0x400cdf2	        0x4883c408	                              add rsp, 8	      5834	channel.c	FUNCTION_134
0x400cdf6	            0x31c0	                            xor eax, eax	      5816	channel.c	FUNCTION_134	IF_4
0x400cdf8	              0x5b	                                 pop rbx	      5834	channel.c	FUNCTION_134
0x400cdf9	              0x5d	                                 pop rbp	      5834	channel.c	FUNCTION_134
0x400cdfa	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
0x400cdfb	       0xf1f440000	                   nop dword [rax + rax]	      5834	channel.c	FUNCTION_134
0x400ce00	            0x31c0	                            xor eax, eax	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400ce02	      0xbe00000000	                              mov esi, 0	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400ce07	      0xe800000000	                          call 0x400ce0c	      5820	channel.c	FUNCTION_134	IF_5	CALL_5
0x400ce0c	        0x4883c408	                              add rsp, 8	      5834	channel.c	FUNCTION_134
0x400ce10	            0x31c0	                            xor eax, eax	      5821	channel.c	FUNCTION_134	IF_5
0x400ce12	              0x5b	                                 pop rbx	      5834	channel.c	FUNCTION_134
0x400ce13	              0x5d	                                 pop rbp	      5834	channel.c	FUNCTION_134
0x400ce14	              0xc3	                                     ret	      5834	channel.c	FUNCTION_134
0x400ce15	           0xf1f00	                         nop dword [rax]	      5834	channel.c	FUNCTION_134
0x400ce18	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400ce1b	      0xbb00000000	                              mov ebx, 0	      5803	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400ce20	            0x85c0	                           test eax, eax	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400ce22	     0xf844dffffff	                            je 0x400cd75	      5802	channel.c	FUNCTION_134	ELSE_1	IF_2
0x400ce28	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400ce2c	      0xe800000000	                          call 0x400ce31	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400ce31	          0x4885c0	                           test rax, rax	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400ce34	          0x4889c3	                            mov rbx, rax	      5806	channel.c	FUNCTION_134	ELSE_2	CALL_1
0x400ce37	     0xf8538ffffff	                           jne 0x400cd75	      5807	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400ce3d	      0xba05000000	                              mov edx, 5	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400ce42	      0xbe00000000	                              mov esi, 0	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400ce47	            0x31ff	                            xor edi, edi	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400ce49	      0xe800000000	                          call 0x400ce4e	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400ce4e	          0x4889c7	                            mov rdi, rax	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400ce51	      0xe800000000	                          call 0x400ce56	      5809	channel.c	FUNCTION_134	ELSE_2	IF_3	CALL_3
0x400ce56	            0x31c0	                            xor eax, eax	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400ce58	            0xeb80	                           jmp 0x400cdda	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400ce5a	    0x660f1f440000	                    nop word [rax + rax]	      5810	channel.c	FUNCTION_134	ELSE_2	IF_3
0x400ce60	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_134
0x400ce65	      0xe970ffffff	                           jmp 0x400cdda	      5833	channel.c	FUNCTION_134
channel_handle_events	WHILE,0:FOR,2:CALL,3:IF,4:ELSE,1:functions,0:DO,0:SWITCH,0	52
0x4006e40	            0x4155	                                push r13	      3621	channel.c	FUNCTION_84
0x4006e42	            0x4154	                                push r12	      3621	channel.c	FUNCTION_84
0x4006e44	              0x55	                                push rbp	      3621	channel.c	FUNCTION_84
0x4006e45	              0x53	                                push rbx	      3621	channel.c	FUNCTION_84
0x4006e46	        0x4883ec08	                              sub rsp, 8	      3621	channel.c	FUNCTION_84
0x4006e4a	    0x4c8b25000000	            mov r12, qword [0x04006e51] 	      3626	channel.c	FUNCTION_84	FOR_1
0x4006e51	          0x4d85e4	                           test r12, r12	      3626	channel.c	FUNCTION_84	FOR_1
0x4006e54	            0x7453	                            je 0x4006ea9	      3626	channel.c	FUNCTION_84	FOR_1
0x4006e56	          0x4189fd	                           mov r13d, edi	      3626	channel.c	FUNCTION_84	FOR_1
0x4006e59	     0xf1f80000000	                         nop dword [rax]	      3626	channel.c	FUNCTION_84	FOR_1
0x4006e60	          0x4585ed	                         test r13d, r13d	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006e63	            0x740c	                            je 0x4006e71	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006e65	    0x418b8424a404	           mov eax, dword [r12 + 0x4a4] 	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006e6d	            0x85c0	                           test eax, eax	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006e6f	            0x742f	                            je 0x4006ea0	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006e71	      0x498d6c2418	                   lea rbp, [r12 + 0x18]	      3628	channel.c	FUNCTION_84	FOR_1	IF_1
0x4006e76	            0x31db	                            xor ebx, ebx	      3621	channel.c	FUNCTION_84
0x4006e78	          0x8b7500	                    mov esi, dword [rbp]	      3634	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006e7b	          0x83feff	             cmp esi, 0xffffffffffffffff	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4006e7e	            0x7411	                            je 0x4006e91	      3635	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2
0x4006e80	          0x4c89e7	                            mov rdi, r12	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006e83	      0xe878e4ffff	      call sym.channel_wait.constprop.19	      3637	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_1
0x4006e88	            0x85c0	                           test eax, eax	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4006e8a	            0x742c	                            je 0x4006eb8	      3639	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	IF_3
0x4006e8c	          0x83f802	                              cmp eax, 2	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x4006e8f	            0x743f	                            je 0x4006ed0	      3641	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x4006e91	          0x83c301	                              add ebx, 1	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006e94	    0x4881c5100100	                          add rbp, 0x110	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006e9b	          0x83fb03	                              cmp ebx, 3	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006e9e	            0x75d8	                           jne 0x4006e78	      3632	channel.c	FUNCTION_84	FOR_1	FOR_2
0x4006ea0	        0x4d8b2424	                    mov r12, qword [r12]	      3626	channel.c	FUNCTION_84	FOR_1
0x4006ea4	          0x4d85e4	                           test r12, r12	      3626	channel.c	FUNCTION_84	FOR_1
0x4006ea7	            0x75b7	                           jne 0x4006e60	      3626	channel.c	FUNCTION_84	FOR_1
0x4006ea9	        0x4883c408	                              add rsp, 8	      3647	channel.c	FUNCTION_84
0x4006ead	              0x5b	                                 pop rbx	      3647	channel.c	FUNCTION_84
0x4006eae	              0x5d	                                 pop rbp	      3647	channel.c	FUNCTION_84
0x4006eaf	            0x415c	                                 pop r12	      3647	channel.c	FUNCTION_84
0x4006eb1	            0x415d	                                 pop r13	      3647	channel.c	FUNCTION_84
0x4006eb3	              0xc3	                                     ret	      3647	channel.c	FUNCTION_84
0x4006eb4	         0xf1f4000	                         nop dword [rax]	      3647	channel.c	FUNCTION_84
0x4006eb8	      0xba00000000	                              mov edx, 0	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006ebd	            0x89de	                            mov esi, ebx	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006ebf	          0x4c89e7	                            mov rdi, r12	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006ec2	      0xe839eaffff	                   call sym.channel_read	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006ec7	            0xebc8	                           jmp 0x4006e91	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006ec9	     0xf1f80000000	                         nop dword [rax]	      3640	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	CALL_2
0x4006ed0	      0xb900000000	                              mov ecx, 0	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4006ed5	      0xba01000000	                              mov edx, 1	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4006eda	            0x89de	                            mov esi, ebx	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4006edc	          0x4c89e7	                            mov rdi, r12	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4006edf	      0xe8fcbaffff	         call sym.ch_close_part_on_error	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x4006ee4	            0xebab	                           jmp 0x4006e91	      3642	channel.c	FUNCTION_84	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
channel_collapse	WHILE,1:FOR,2:CALL,8:IF,4:ELSE,1:functions,0:DO,0:SWITCH,0	125
0x4006430	            0x4157	                                push r15	      1731	channel.c	FUNCTION_49
0x4006432	            0x4156	                                push r14	      1731	channel.c	FUNCTION_49
0x4006434	            0x4155	                                push r13	      1731	channel.c	FUNCTION_49
0x4006436	            0x4154	                                push r12	      1731	channel.c	FUNCTION_49
0x4006438	          0x4189f4	                           mov r12d, esi	      1733	channel.c	FUNCTION_49
0x400643b	          0x4c89e1	                            mov rcx, r12	      1733	channel.c	FUNCTION_49
0x400643e	          0x4c89e0	                            mov rax, r12	      1733	channel.c	FUNCTION_49
0x4006441	              0x55	                                push rbp	      1731	channel.c	FUNCTION_49
0x4006442	        0x48c1e104	                              shl rcx, 4	      1733	channel.c	FUNCTION_49
0x4006446	              0x53	                                push rbx	      1731	channel.c	FUNCTION_49
0x4006447	        0x48c1e008	                              shl rax, 8	      1733	channel.c	FUNCTION_49
0x400644b	          0x4801c8	                            add rax, rcx	      1733	channel.c	FUNCTION_49
0x400644e	        0x4883ec18	                           sub rsp, 0x18	      1731	channel.c	FUNCTION_49
0x4006452	      0x488b6c0740	      mov rbp, qword [rdi + rax + 0x40] 	      1733	channel.c	FUNCTION_49
0x4006457	          0x4885ed	                           test rbp, rbp	      1740	channel.c	FUNCTION_49	IF_1
0x400645a	     0xf8443010000	                            je 0x40065a3	      1740	channel.c	FUNCTION_49	IF_1
0x4006460	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1740	channel.c	FUNCTION_49	IF_1
0x4006464	          0x4885db	                           test rbx, rbx	      1740	channel.c	FUNCTION_49	IF_1
0x4006467	     0xf8436010000	                            je 0x40065a3	      1740	channel.c	FUNCTION_49	IF_1
0x400646d	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1744	channel.c	FUNCTION_49
0x4006471	          0x4989c8	                             mov r8, rcx	      1744	channel.c	FUNCTION_49
0x4006474	        0x4c034508	                 add r8, qword [rbp + 8]	      1744	channel.c	FUNCTION_49
0x4006478	        0x4983c001	                               add r8, 1	      1744	channel.c	FUNCTION_49
0x400647c	            0x85d2	                           test edx, edx	      1745	channel.c	FUNCTION_49	IF_2
0x400647e	            0x7460	                            je 0x40064e0	      1745	channel.c	FUNCTION_49	IF_2
0x4006480	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4006484	          0x4885f6	                           test rsi, rsi	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4006487	            0x7457	                            je 0x40064e0	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4006489	     0xf1f80000000	                         nop dword [rax]	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x4006490	          0x4885c9	                           test rcx, rcx	      1629	channel.c	FUNCTION_45	FOR_1
0x4006493	          0x488b13	                    mov rdx, qword [rbx]	      1626	channel.c	FUNCTION_45
0x4006496	            0x7427	                            je 0x40064bf	      1629	channel.c	FUNCTION_45	FOR_1
0x4006498	          0x803a0a	                     cmp byte [rdx], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400649b	            0x7443	                            je 0x40064e0	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400649d	        0x488d4201	                      lea rax, [rdx + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40064a1	          0x4801ca	                            add rdx, rcx	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40064a4	            0xeb14	                           jmp 0x40064ba	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40064a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40064b0	        0x4883c001	                              add rax, 1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40064b4	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40064b8	            0x7426	                            je 0x40064e0	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40064ba	          0x4839c2	                            cmp rdx, rax	      1629	channel.c	FUNCTION_45	FOR_1
0x40064bd	            0x75f1	                           jne 0x40064b0	      1629	channel.c	FUNCTION_45	FOR_1
0x40064bf	        0x488b4e08	                mov rcx, qword [rsi + 8]	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064c3	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064c7	          0x4889f3	                            mov rbx, rsi	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064ca	          0x4901c8	                             add r8, rcx	      1750	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064cd	          0x4885c0	                           test rax, rax	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064d0	            0x740e	                            je 0x40064e0	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064d2	          0x4889c6	                            mov rsi, rax	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064d5	            0xebb9	                           jmp 0x4006490	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064d7	    0x660f1f840000	                    nop word [rax + rax]	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064e0	      0x48897c2408	                mov qword [rsp + 8], rdi	      1746	channel.c	FUNCTION_49	IF_2	WHILE_1
0x40064e5	          0x4489c7	                            mov edi, r8d	      1753	channel.c	FUNCTION_49	CALL_2
0x40064e8	      0xe800000000	                          call 0x40064ed	      1753	channel.c	FUNCTION_49	CALL_2
0x40064ed	          0x4885c0	                           test rax, rax	      1754	channel.c	FUNCTION_49	IF_3
0x40064f0	          0x4989c6	                            mov r14, rax	      1753	channel.c	FUNCTION_49	CALL_2
0x40064f3	     0xf84aa000000	                            je 0x40065a3	      1754	channel.c	FUNCTION_49	IF_3
0x40064f9	        0x488b5508	                mov rdx, qword [rbp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x40064fd	        0x488b7500	                    mov rsi, qword [rbp]	        59	string3.h	FUNCTION_136	CALL_3
0x4006501	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4006504	          0x4d89f5	                            mov r13, r14	      1757	channel.c	FUNCTION_49
0x4006507	      0xe800000000	                          call 0x400650c	        59	string3.h	FUNCTION_136	CALL_3
0x400650c	        0x488b7d00	                    mov rdi, qword [rbp]	      1758	channel.c	FUNCTION_49	CALL_4
0x4006510	        0x4c036d08	                add r13, qword [rbp + 8]	      1757	channel.c	FUNCTION_49
0x4006514	      0xe800000000	                          call 0x4006519	      1758	channel.c	FUNCTION_49	CALL_4
0x4006519	          0x4839eb	                            cmp rbx, rbp	      1760	channel.c	FUNCTION_49	FOR_1
0x400651c	        0x4c897500	                    mov qword [rbp], r14	      1759	channel.c	FUNCTION_49
0x4006520	            0x742a	                            je 0x400654c	      1760	channel.c	FUNCTION_49	FOR_1
0x4006522	          0x4989ef	                            mov r15, rbp	      1760	channel.c	FUNCTION_49	FOR_1
0x4006525	           0xf1f00	                         nop dword [rax]	      1760	channel.c	FUNCTION_49	FOR_1
0x4006528	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      1762	channel.c	FUNCTION_49	FOR_1
0x400652c	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_136	CALL_3
0x400652f	        0x498b5708	                mov rdx, qword [r15 + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x4006533	          0x498b37	                    mov rsi, qword [r15]	        59	string3.h	FUNCTION_136	CALL_3
0x4006536	      0xe800000000	                          call 0x400653b	        59	string3.h	FUNCTION_136	CALL_3
0x400653b	          0x498b3f	                    mov rdi, qword [r15]	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x400653e	        0x4d036f08	                add r13, qword [r15 + 8]	      1764	channel.c	FUNCTION_49	FOR_1
0x4006542	      0xe800000000	                          call 0x4006547	      1765	channel.c	FUNCTION_49	FOR_1	CALL_6
0x4006547	          0x4c39fb	                            cmp rbx, r15	      1760	channel.c	FUNCTION_49	FOR_1
0x400654a	            0x75dc	                           jne 0x4006528	      1760	channel.c	FUNCTION_49	FOR_1
0x400654c	          0x4d29f5	                            sub r13, r14	      1767	channel.c	FUNCTION_49
0x400654f	        0x4c896d08	                mov qword [rbp + 8], r13	      1767	channel.c	FUNCTION_49
0x4006553	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	      1770	channel.c	FUNCTION_49	FOR_2
0x4006557	          0x4c39eb	                            cmp rbx, r13	      1770	channel.c	FUNCTION_49	FOR_2
0x400655a	            0x7416	                            je 0x4006572	      1770	channel.c	FUNCTION_49	FOR_2
0x400655c	         0xf1f4000	                         nop dword [rax]	      1770	channel.c	FUNCTION_49	FOR_2
0x4006560	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1772	channel.c	FUNCTION_49	FOR_2
0x4006564	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x4006568	      0xe800000000	                          call 0x400656d	      1773	channel.c	FUNCTION_49	FOR_2	CALL_7
0x400656d	          0x4c39eb	                            cmp rbx, r13	      1770	channel.c	FUNCTION_49	FOR_2
0x4006570	            0x75ee	                           jne 0x4006560	      1770	channel.c	FUNCTION_49	FOR_2
0x4006572	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1775	channel.c	FUNCTION_49
0x4006576	        0x48894510	            mov qword [rbp + 0x10], rax 	      1775	channel.c	FUNCTION_49
0x400657a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1776	channel.c	FUNCTION_49	IF_4
0x400657e	          0x4885c0	                           test rax, rax	      1776	channel.c	FUNCTION_49	IF_4
0x4006581	            0x7431	                            je 0x40065b4	      1776	channel.c	FUNCTION_49	IF_4
0x4006583	        0x48896818	             mov qword [rax + 0x18], rbp	      1779	channel.c	FUNCTION_49	ELSE_1
0x4006587	          0x4889df	                            mov rdi, rbx	      1780	channel.c	FUNCTION_49	CALL_8
0x400658a	      0xe800000000	                          call 0x400658f	      1780	channel.c	FUNCTION_49	CALL_8
0x400658f	        0x4883c418	                           add rsp, 0x18	      1782	channel.c	FUNCTION_49
0x4006593	      0xb801000000	                              mov eax, 1	      1781	channel.c	FUNCTION_49
0x4006598	              0x5b	                                 pop rbx	      1782	channel.c	FUNCTION_49
0x4006599	              0x5d	                                 pop rbp	      1782	channel.c	FUNCTION_49
0x400659a	            0x415c	                                 pop r12	      1782	channel.c	FUNCTION_49
0x400659c	            0x415d	                                 pop r13	      1782	channel.c	FUNCTION_49
0x400659e	            0x415e	                                 pop r14	      1782	channel.c	FUNCTION_49
0x40065a0	            0x415f	                                 pop r15	      1782	channel.c	FUNCTION_49
0x40065a2	              0xc3	                                     ret	      1782	channel.c	FUNCTION_49
0x40065a3	        0x4883c418	                           add rsp, 0x18	      1782	channel.c	FUNCTION_49
0x40065a7	            0x31c0	                            xor eax, eax	      1741	channel.c	FUNCTION_49	IF_1
0x40065a9	              0x5b	                                 pop rbx	      1782	channel.c	FUNCTION_49
0x40065aa	              0x5d	                                 pop rbp	      1782	channel.c	FUNCTION_49
0x40065ab	            0x415c	                                 pop r12	      1782	channel.c	FUNCTION_49
0x40065ad	            0x415d	                                 pop r13	      1782	channel.c	FUNCTION_49
0x40065af	            0x415e	                                 pop r14	      1782	channel.c	FUNCTION_49
0x40065b1	            0x415f	                                 pop r15	      1782	channel.c	FUNCTION_49
0x40065b3	              0xc3	                                     ret	      1782	channel.c	FUNCTION_49
0x40065b4	          0x4c89e0	                            mov rax, r12	      1777	channel.c	FUNCTION_49	IF_4
0x40065b7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1777	channel.c	FUNCTION_49	IF_4
0x40065bc	        0x49c1e408	                              shl r12, 8	      1777	channel.c	FUNCTION_49	IF_4
0x40065c0	        0x48c1e004	                              shl rax, 4	      1777	channel.c	FUNCTION_49	IF_4
0x40065c4	          0x4c01e0	                            add rax, r12	      1777	channel.c	FUNCTION_49	IF_4
0x40065c7	      0x48896c0148	       mov qword [rcx + rax + 0x48], rbp	      1777	channel.c	FUNCTION_49	IF_4
0x40065cc	            0xebb9	                           jmp 0x4006587	      1777	channel.c	FUNCTION_49	IF_4
messageFromServerGtk2	WHILE,0:FOR,0:CALL,1:IF,0:ELSE,0:functions,0:DO,0:SWITCH,0	39
0x4005c60	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3598	channel.c	FUNCTION_83	IF_1
0x4005c63	            0x89fa	                            mov edx, edi	       513	channel.c	FUNCTION_21	CALL_1
0x4005c65	            0x7446	                            je 0x4005cad	      3598	channel.c	FUNCTION_83	IF_1
0x4005c67	    0x488b05000000	            mov rax, qword [0x04005c6e] 	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4005c6e	          0x4885c0	                           test rax, rax	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4005c71	            0x743a	                            je 0x4005cad	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4005c73	          0x3b7818	            cmp edi, dword [rax + 0x18] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c76	            0x7460	                            je 0x4005cd8	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c78	    0x3bb828010000	           cmp edi, dword [rax + 0x128] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c7e	            0x7460	                            je 0x4005ce0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c80	    0x3bb838020000	           cmp edi, dword [rax + 0x238] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c86	            0x751d	                           jne 0x4005ca5	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c88	            0xeb36	                           jmp 0x4005cc0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c8a	    0x660f1f440000	                    nop word [rax + rax]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c90	          0x3b5018	            cmp edx, dword [rax + 0x18] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c93	            0x7443	                            je 0x4005cd8	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c95	    0x3b9028010000	           cmp edx, dword [rax + 0x128] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c9b	            0x7443	                            je 0x4005ce0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005c9d	    0x3b9038020000	           cmp edx, dword [rax + 0x238] 	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005ca3	            0x741b	                            je 0x4005cc0	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005ca5	          0x488b00	                    mov rax, qword [rax]	      3600	channel.c	FUNCTION_83	IF_1	FOR_1
0x4005ca8	          0x4885c0	                           test rax, rax	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4005cab	            0x75e3	                           jne 0x4005c90	      3599	channel.c	FUNCTION_83	IF_1	FOR_1
0x4005cad	            0x89fa	                            mov edx, edi	       477	channel.c	FUNCTION_18	CALL_2
0x4005caf	      0xbe00000000	                              mov esi, 0	       477	channel.c	FUNCTION_18	CALL_2
0x4005cb4	            0x31ff	                            xor edi, edi	       477	channel.c	FUNCTION_18	CALL_2
0x4005cb6	            0x31c0	                            xor eax, eax	       477	channel.c	FUNCTION_18	CALL_2
0x4005cb8	      0xe923c3ffff	                        jmp sym.ch_error	       477	channel.c	FUNCTION_18	CALL_2
0x4005cbd	           0xf1f00	                         nop dword [rax]	       477	channel.c	FUNCTION_18	CALL_2
0x4005cc0	      0xbe02000000	                              mov esi, 2	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x4005cc5	      0xba00000000	                              mov edx, 0	       479	channel.c	FUNCTION_18	CALL_3
0x4005cca	          0x4889c7	                            mov rdi, rax	       479	channel.c	FUNCTION_18	CALL_3
0x4005ccd	      0xe92efcffff	                    jmp sym.channel_read	       479	channel.c	FUNCTION_18	CALL_3
0x4005cd2	    0x660f1f440000	                    nop word [rax + rax]	       479	channel.c	FUNCTION_18	CALL_3
0x4005cd8	            0x31f6	                            xor esi, esi	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005cda	            0xebe9	                           jmp 0x4005cc5	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005cdc	         0xf1f4000	                         nop dword [rax]	      3603	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2	IF_2
0x4005ce0	      0xbe01000000	                              mov esi, 1	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
0x4005ce5	            0xebde	                           jmp 0x4005cc5	      3602	channel.c	FUNCTION_83	IF_1	FOR_1	FOR_2
channel_info	WHILE,0:FOR,0:CALL,9:IF,1:ELSE,1:functions,0:DO,0:SWITCH,0	102
0x4006b30	              0x55	                                push rbp	      2843	channel.c	FUNCTION_67
0x4006b31	              0x53	                                push rbx	      2843	channel.c	FUNCTION_67
0x4006b32	          0x4889f5	                            mov rbp, rsi	      2843	channel.c	FUNCTION_67
0x4006b35	            0x31c9	                            xor ecx, ecx	      2844	channel.c	FUNCTION_67	CALL_1
0x4006b37	          0x4889fb	                            mov rbx, rdi	      2843	channel.c	FUNCTION_67
0x4006b3a	      0xbe00000000	                              mov esi, 0	      2844	channel.c	FUNCTION_67	CALL_1
0x4006b3f	        0x4883ec08	                              sub rsp, 8	      2843	channel.c	FUNCTION_67
0x4006b43	        0x48635710	         movsxd rdx, dword [rdi + 0x10] 	      2844	channel.c	FUNCTION_67	CALL_1
0x4006b47	          0x4889ef	                            mov rdi, rbp	      2844	channel.c	FUNCTION_67	CALL_1
0x4006b4a	      0xe800000000	                          call 0x4006b4f	      2844	channel.c	FUNCTION_67	CALL_1
0x4006b4f	        0x837b18ff	cmp dword [rbx + 0x18], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x4006b53	      0xb900000000	                              mov ecx, 0	      2778	channel.c	FUNCTION_65	ELSE_2	IF_8
0x4006b58	     0xf84a2000000	                            je 0x4006c00	      2725	channel.c	FUNCTION_63
0x4006b5e	            0x31d2	                            xor edx, edx	      2845	channel.c	FUNCTION_67	CALL_3
0x4006b60	      0xbe00000000	                              mov esi, 0	      2845	channel.c	FUNCTION_67	CALL_3
0x4006b65	          0x4889ef	                            mov rdi, rbp	      2845	channel.c	FUNCTION_67	CALL_3
0x4006b68	      0xe800000000	                          call 0x4006b6d	      2845	channel.c	FUNCTION_67	CALL_3
0x4006b6d	    0x488b8b600400	           mov rcx, qword [rbx + 0x460] 	      2847	channel.c	FUNCTION_67	IF_1
0x4006b74	          0x4885c9	                           test rcx, rcx	      2847	channel.c	FUNCTION_67	IF_1
0x4006b77	            0x7447	                            je 0x4006bc0	      2847	channel.c	FUNCTION_67	IF_1
0x4006b79	            0x31d2	                            xor edx, edx	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4006b7b	      0xbe00000000	                              mov esi, 0	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4006b80	          0x4889ef	                            mov rdi, rbp	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4006b83	      0xe800000000	                          call 0x4006b88	      2849	channel.c	FUNCTION_67	IF_1	CALL_4
0x4006b88	    0x486393680400	        movsxd rdx, dword [rbx + 0x468] 	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4006b8f	            0x31c9	                            xor ecx, ecx	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4006b91	      0xbe00000000	                              mov esi, 0	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4006b96	          0x4889ef	                            mov rdi, rbp	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4006b99	      0xe800000000	                          call 0x4006b9e	      2850	channel.c	FUNCTION_67	IF_1	CALL_5
0x4006b9e	            0x31c9	                            xor ecx, ecx	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4006ba0	      0xba00000000	                              mov edx, 0	      2851	channel.c	FUNCTION_67	IF_1	CALL_6
0x4006ba5	        0x4883c408	                              add rsp, 8	      2859	channel.c	FUNCTION_67
0x4006ba9	          0x4889ee	                            mov rsi, rbp	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006bac	          0x4889df	                            mov rdi, rbx	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006baf	              0x5b	                                 pop rbx	      2859	channel.c	FUNCTION_67
0x4006bb0	              0x5d	                                 pop rbp	      2859	channel.c	FUNCTION_67
0x4006bb1	      0xe9ba95ffff	               jmp sym.channel_part_info	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006bb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006bc0	      0xb901000000	                              mov ecx, 1	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4006bc5	      0xba00000000	                              mov edx, 0	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4006bca	          0x4889ee	                            mov rsi, rbp	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4006bcd	          0x4889df	                            mov rdi, rbx	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4006bd0	      0xe89b95ffff	              call sym.channel_part_info	      2855	channel.c	FUNCTION_67	ELSE_1	CALL_7
0x4006bd5	      0xb902000000	                              mov ecx, 2	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4006bda	      0xba00000000	                              mov edx, 0	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4006bdf	          0x4889ee	                            mov rsi, rbp	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4006be2	          0x4889df	                            mov rdi, rbx	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4006be5	      0xe88695ffff	              call sym.channel_part_info	      2856	channel.c	FUNCTION_67	ELSE_1	CALL_8
0x4006bea	      0xb903000000	                              mov ecx, 3	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006bef	      0xba00000000	                              mov edx, 0	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006bf4	            0xebaf	                           jmp 0x4006ba5	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006bf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2857	channel.c	FUNCTION_67	ELSE_1	CALL_9
0x4006c00	    0x83bb48030000	cmp dword [rbx + 0x348], 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x4006c07	     0xf8551ffffff	                           jne 0x4006b5e	      2726	channel.c	FUNCTION_63
0x4006c0d	    0x83bb28010000	cmp dword [rbx + 0x128], 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x4006c14	     0xf8544ffffff	                           jne 0x4006b5e	      2727	channel.c	FUNCTION_63
0x4006c1a	    0x83bb38020000	cmp dword [rbx + 0x238], 0xffffffffffffffff	      2728	channel.c	FUNCTION_63
0x4006c21	     0xf8537ffffff	                           jne 0x4006b5e	      2728	channel.c	FUNCTION_63
0x4006c27	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x4006c2a	          0x83e802	                              sub eax, 2	      2739	channel.c	FUNCTION_64	IF_1
0x4006c2d	          0x83f801	                              cmp eax, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4006c30	            0x765d	                           jbe 0x4006c8f	      2739	channel.c	FUNCTION_64	IF_1
0x4006c32	            0x31c0	                            xor eax, eax	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c34	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c39	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c3c	            0x85c0	                           test eax, eax	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4006c3e	            0x7579	                           jne 0x4006cb9	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4006c40	    0x8b8330010000	           mov eax, dword [rbx + 0x130] 	      2739	channel.c	FUNCTION_64	IF_1
0x4006c46	          0x83e802	                              sub eax, 2	      2739	channel.c	FUNCTION_64	IF_1
0x4006c49	          0x83f801	                              cmp eax, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4006c4c	            0x765c	                           jbe 0x4006caa	      2739	channel.c	FUNCTION_64	IF_1
0x4006c4e	            0x31c0	                            xor eax, eax	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c50	    0x4883bb500100	              cmp qword [rbx + 0x150], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c58	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c5b	            0x85c0	                           test eax, eax	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4006c5d	            0x755a	                           jne 0x4006cb9	      2780	channel.c	FUNCTION_65	ELSE_2	FOR_1	IF_9	CALL_4
0x4006c5f	    0x8b8340020000	           mov eax, dword [rbx + 0x240] 	      2739	channel.c	FUNCTION_64	IF_1
0x4006c65	          0x83e802	                              sub eax, 2	      2739	channel.c	FUNCTION_64	IF_1
0x4006c68	          0x83f801	                              cmp eax, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4006c6b	            0x762e	                           jbe 0x4006c9b	      2739	channel.c	FUNCTION_64	IF_1
0x4006c6d	            0x31c0	                            xor eax, eax	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c6f	    0x4883bb600200	              cmp qword [rbx + 0x260], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c77	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x4006c7a	            0x85c0	                           test eax, eax	      2788	channel.c	FUNCTION_65	IF_10
0x4006c7c	      0xb900000000	                              mov ecx, 0	      2788	channel.c	FUNCTION_65	IF_10
0x4006c81	      0xb800000000	                              mov eax, 0	      2788	channel.c	FUNCTION_65	IF_10
0x4006c86	        0x480f44c8	                          cmove rcx, rax	      2788	channel.c	FUNCTION_65	IF_10
0x4006c8a	      0xe9cffeffff	                           jmp 0x4006b5e	      2788	channel.c	FUNCTION_65	IF_10
0x4006c8f	            0x31c0	                            xor eax, eax	      2744	channel.c	FUNCTION_64	IF_1
0x4006c91	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4006c96	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4006c99	            0xeba1	                           jmp 0x4006c3c	      2744	channel.c	FUNCTION_64	IF_1
0x4006c9b	            0x31c0	                            xor eax, eax	      2744	channel.c	FUNCTION_64	IF_1
0x4006c9d	    0x4883bb780200	              cmp qword [rbx + 0x278], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4006ca5	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4006ca8	            0xebd0	                           jmp 0x4006c7a	      2744	channel.c	FUNCTION_64	IF_1
0x4006caa	            0x31c0	                            xor eax, eax	      2744	channel.c	FUNCTION_64	IF_1
0x4006cac	    0x4883bb680100	              cmp qword [rbx + 0x168], 0	      2744	channel.c	FUNCTION_64	IF_1
0x4006cb4	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x4006cb7	            0xeba2	                           jmp 0x4006c5b	      2744	channel.c	FUNCTION_64	IF_1
0x4006cb9	      0xb900000000	                              mov ecx, 0	      2788	channel.c	FUNCTION_65	IF_10
0x4006cbe	      0xe99bfeffff	                           jmp 0x4006b5e	      2788	channel.c	FUNCTION_65	IF_10
channel_set_job	WHILE,0:FOR,0:CALL,3:IF,4:ELSE,3:functions,0:DO,0:SWITCH,0	403
0x4003cb0	            0x4156	                                push r14	      1060	channel.c	FUNCTION_31
0x4003cb2	            0x4155	                                push r13	      1060	channel.c	FUNCTION_31
0x4003cb4	            0x4154	                                push r12	      1060	channel.c	FUNCTION_31
0x4003cb6	              0x55	                                push rbp	      1060	channel.c	FUNCTION_31
0x4003cb7	          0x4989f4	                            mov r12, rsi	      1060	channel.c	FUNCTION_31
0x4003cba	              0x53	                                push rbx	      1060	channel.c	FUNCTION_31
0x4003cbb	            0x8b02	                    mov eax, dword [rdx]	      1168	channel.c	FUNCTION_34	IF_1
0x4003cbd	          0x4889fb	                            mov rbx, rdi	      1060	channel.c	FUNCTION_31
0x4003cc0	          0x4889d5	                            mov rbp, rdx	      1060	channel.c	FUNCTION_31
0x4003cc3	    0x4889b7a80400	            mov qword [rdi + 0x4a8], rsi	      1061	channel.c	FUNCTION_31
0x4003cca	            0xa801	                              test al, 1	      1168	channel.c	FUNCTION_34	IF_1
0x4003ccc	            0x7418	                            je 0x4003ce6	      1168	channel.c	FUNCTION_34	IF_1
0x4003cce	          0x8b5208	                mov edx, dword [rdx + 8]	      1168	channel.c	FUNCTION_34	IF_1
0x4003cd1	          0x895720	             mov dword [rdi + 0x20], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4003cd4	    0x899730010000	            mov dword [rdi + 0x130], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4003cda	    0x899740020000	            mov dword [rdi + 0x240], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4003ce0	    0x899750030000	            mov dword [rdi + 0x350], edx	      1170	channel.c	FUNCTION_34	IF_1	FOR_1
0x4003ce6	            0xa802	                              test al, 2	      1171	channel.c	FUNCTION_34	IF_2
0x4003ce8	            0x7409	                            je 0x4003cf3	      1171	channel.c	FUNCTION_34	IF_2
0x4003cea	          0x8b550c	              mov edx, dword [rbp + 0xc]	      1172	channel.c	FUNCTION_34	IF_2
0x4003ced	    0x899350030000	            mov dword [rbx + 0x350], edx	      1172	channel.c	FUNCTION_34	IF_2
0x4003cf3	            0xa804	                              test al, 4	      1173	channel.c	FUNCTION_34	IF_3
0x4003cf5	            0x7409	                            je 0x4003d00	      1173	channel.c	FUNCTION_34	IF_3
0x4003cf7	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      1174	channel.c	FUNCTION_34	IF_3
0x4003cfa	    0x899330010000	            mov dword [rbx + 0x130], edx	      1174	channel.c	FUNCTION_34	IF_3
0x4003d00	            0xa808	                              test al, 8	      1175	channel.c	FUNCTION_34	IF_4
0x4003d02	            0x7409	                            je 0x4003d0d	      1175	channel.c	FUNCTION_34	IF_4
0x4003d04	          0x8b5514	            mov edx, dword [rbp + 0x14] 	      1176	channel.c	FUNCTION_34	IF_4
0x4003d07	    0x899340020000	            mov dword [rbx + 0x240], edx	      1176	channel.c	FUNCTION_34	IF_4
0x4003d0d	          0xf6c402	                              test ah, 2	      1178	channel.c	FUNCTION_34	IF_5
0x4003d10	            0x741b	                            je 0x4003d2d	      1178	channel.c	FUNCTION_34	IF_5
0x4003d12	    0x8b95f8010000	           mov edx, dword [rbp + 0x1f8] 	      1178	channel.c	FUNCTION_34	IF_5
0x4003d18	          0x895328	             mov dword [rbx + 0x28], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4003d1b	    0x899338010000	            mov dword [rbx + 0x138], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4003d21	    0x899348020000	            mov dword [rbx + 0x248], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4003d27	    0x899358030000	            mov dword [rbx + 0x358], edx	      1180	channel.c	FUNCTION_34	IF_5	FOR_2
0x4003d2d	          0xf6c404	                              test ah, 4	      1181	channel.c	FUNCTION_34	IF_6
0x4003d30	            0x740c	                            je 0x4003d3e	      1181	channel.c	FUNCTION_34	IF_6
0x4003d32	    0x8b95fc010000	           mov edx, dword [rbp + 0x1fc] 	      1182	channel.c	FUNCTION_34	IF_6
0x4003d38	    0x899338010000	            mov dword [rbx + 0x138], edx	      1182	channel.c	FUNCTION_34	IF_6
0x4003d3e	          0xf6c408	                              test ah, 8	      1183	channel.c	FUNCTION_34	IF_7
0x4003d41	            0x740c	                            je 0x4003d4f	      1183	channel.c	FUNCTION_34	IF_7
0x4003d43	    0x8b9500020000	           mov edx, dword [rbp + 0x200] 	      1184	channel.c	FUNCTION_34	IF_7
0x4003d49	    0x899348020000	            mov dword [rbx + 0x248], edx	      1184	channel.c	FUNCTION_34	IF_7
0x4003d4f	      0xa900000010	                    test eax, 0x10000000	      1185	channel.c	FUNCTION_34	IF_8
0x4003d54	            0x740a	                            je 0x4003d60	      1185	channel.c	FUNCTION_34	IF_8
0x4003d56	    0xc783c0030000	              mov dword [rbx + 0x3c0], 1	      1186	channel.c	FUNCTION_34	IF_8
0x4003d60	            0xa810	                           test al, 0x10	      1188	channel.c	FUNCTION_34	IF_9
0x4003d62	     0xf8520030000	                           jne 0x4004088	      1188	channel.c	FUNCTION_34	IF_9
0x4003d68	            0xa820	                           test al, 0x20	      1191	channel.c	FUNCTION_34	IF_10
0x4003d6a	     0xf8510020000	                           jne 0x4003f80	      1191	channel.c	FUNCTION_34	IF_10
0x4003d70	            0xa840	                           test al, 0x40	      1195	channel.c	FUNCTION_34	IF_11
0x4003d72	     0xf855f020000	                           jne 0x4003fd7	      1195	channel.c	FUNCTION_34	IF_11
0x4003d78	            0xa880	                           test al, 0x80	      1199	channel.c	FUNCTION_34	IF_12
0x4003d7a	     0xf85ae020000	                           jne 0x400402e	      1199	channel.c	FUNCTION_34	IF_12
0x4003d80	    0x8b95f0010000	           mov edx, dword [rbp + 0x1f0] 	      1202	channel.c	FUNCTION_34
0x4003d86	      0xa900000100	                       test eax, 0x10000	      1204	channel.c	FUNCTION_34	IF_13
0x4003d8b	    0x8993a0040000	            mov dword [rbx + 0x4a0], edx	      1202	channel.c	FUNCTION_34
0x4003d91	            0x740a	                            je 0x4003d9d	      1204	channel.c	FUNCTION_34	IF_13
0x4003d93	        0x837d1c03	               cmp dword [rbp + 0x1c], 3	      1204	channel.c	FUNCTION_34	IF_13
0x4003d97	     0xf845b030000	                            je 0x40040f8	      1204	channel.c	FUNCTION_34	IF_13
0x4003d9d	      0xa900000200	                       test eax, 0x20000	      1244	channel.c	FUNCTION_34	IF_21
0x4003da2	     0xf84e5000000	                            je 0x4003e8d	      1244	channel.c	FUNCTION_34	IF_21
0x4003da8	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1244	channel.c	FUNCTION_34	IF_21
0x4003dab	          0x83fa03	                              cmp edx, 3	      1244	channel.c	FUNCTION_34	IF_21
0x4003dae	            0x7440	                            je 0x4003df0	      1244	channel.c	FUNCTION_34	IF_21
0x4003db0	          0x83fa04	                              cmp edx, 4	      1245	channel.c	FUNCTION_34	IF_21
0x4003db3	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1246	channel.c	FUNCTION_34	IF_21
0x4003db6	     0xf85d7000000	                           jne 0x4003e93	      1245	channel.c	FUNCTION_34	IF_21
0x4003dbc	      0xa900000100	                       test eax, 0x10000	      1245	channel.c	FUNCTION_34	IF_21
0x4003dc1	     0xf84cc000000	                            je 0x4003e93	      1245	channel.c	FUNCTION_34	IF_21
0x4003dc7	          0x83f903	                              cmp ecx, 3	      1246	channel.c	FUNCTION_34	IF_21
0x4003dca	     0xf85c3000000	                           jne 0x4003e93	      1246	channel.c	FUNCTION_34	IF_21
0x4003dd0	            0xa808	                              test al, 8	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4003dd2	            0x750a	                           jne 0x4003dde	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4003dd4	    0xc78340020000	              mov dword [rbx + 0x240], 0	      1252	channel.c	FUNCTION_34	IF_21	IF_22
0x4003dde	    0x4c8bab080200	           mov r13, qword [rbx + 0x208] 	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4003de5	            0xeb47	                           jmp 0x4003e2e	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4003de7	    0x660f1f840000	                    nop word [rax + rax]	      1254	channel.c	FUNCTION_34	IF_21	IF_23
0x4003df0	            0xa808	                              test al, 8	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4003df2	            0x750a	                           jne 0x4003dfe	      1251	channel.c	FUNCTION_34	IF_21	IF_22
0x4003df4	    0xc78340020000	              mov dword [rbx + 0x240], 0	      1252	channel.c	FUNCTION_34	IF_21	IF_22
0x4003dfe	      0xa900000002	                     test eax, 0x2000000	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4003e03	     0xf8547040000	                           jne 0x4004250	      1255	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24
0x4003e09	        0xf6450402	                  test byte [rbp + 4], 2	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x4003e0d	      0xba01000000	                              mov edx, 1	      1263	channel.c	FUNCTION_34	IF_21	ELSE_4
0x4003e12	            0x7406	                            je 0x4003e1a	      1265	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x4003e14	    0x8b957c010000	           mov edx, dword [rbp + 0x17c] 	      1266	channel.c	FUNCTION_34	IF_21	ELSE_4	IF_26
0x4003e1a	    0x488bbd400100	           mov rdi, qword [rbp + 0x140] 	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x4003e21	      0xbe01000000	                              mov esi, 1	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x4003e26	      0xe815c2ffff	                    call sym.find_buffer	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x4003e2b	          0x4989c5	                            mov r13, rax	      1267	channel.c	FUNCTION_34	IF_21	ELSE_4	CALL_16
0x4003e2e	          0x4d85ed	                           test r13, r13	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x4003e31	            0x745a	                            je 0x4003e8d	      1269	channel.c	FUNCTION_34	IF_21	IF_27
0x4003e33	    0xf74500000000	           test dword [rbp], 0x40000000 	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4003e3a	            0x7413	                            je 0x4003e4f	      1271	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4003e3c	    0x8b8d6c010000	           mov ecx, dword [rbp + 0x16c] 	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4003e42	            0x31c0	                            xor eax, eax	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4003e44	            0x85c9	                           test ecx, ecx	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4003e46	           0xf94c0	                                 sete al	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4003e49	    0x898328030000	            mov dword [rbx + 0x328], eax	      1272	channel.c	FUNCTION_34	IF_21	IF_27	IF_28
0x4003e4f	    0x418b95401500	          mov edx, dword [r13 + 0x1540] 	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4003e56	            0x85d2	                           test edx, edx	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4003e58	            0x750e	                           jne 0x4003e68	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4003e5a	    0x8b8328030000	           mov eax, dword [rbx + 0x328] 	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4003e60	            0x85c0	                           test eax, eax	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4003e62	     0xf8478040000	                            je 0x40042e0	      1274	channel.c	FUNCTION_34	IF_21	IF_27	IF_29
0x4003e68	    0x498b95880000	            mov rdx, qword [r13 + 0x88] 	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4003e6f	      0xbe00000000	                              mov esi, 0	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4003e74	          0x4889df	                            mov rdi, rbx	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4003e77	            0x31c0	                            xor eax, eax	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4003e79	      0xe800000000	                          call 0x4003e7e	      1280	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_19
0x4003e7e	    0x488dbb180300	                  lea rdi, [rbx + 0x318]	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4003e85	          0x4c89ee	                            mov rsi, r13	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4003e88	      0xe800000000	                          call 0x4003e8d	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4003e8d	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4003e90	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1282	channel.c	FUNCTION_34	IF_21	IF_27	ELSE_5	CALL_20
0x4003e93	      0x498b742450	            mov rsi, qword [r12 + 0x50] 	      1065	channel.c	FUNCTION_31	IF_1
0x4003e98	          0x8b4524	            mov eax, dword [rbp + 0x24] 	      1289	channel.c	FUNCTION_34
0x4003e9b	    0x898b34010000	            mov dword [rbx + 0x134], ecx	      1287	channel.c	FUNCTION_34
0x4003ea1	    0x899344020000	            mov dword [rbx + 0x244], edx	      1288	channel.c	FUNCTION_34
0x4003ea7	          0x4885f6	                           test rsi, rsi	      1065	channel.c	FUNCTION_31	IF_1
0x4003eaa	    0x898354030000	            mov dword [rbx + 0x354], eax	      1289	channel.c	FUNCTION_34
0x4003eb0	            0x7458	                            je 0x4003f0a	      1065	channel.c	FUNCTION_31	IF_1
0x4003eb2	    0x488dbb280400	                  lea rdi, [rbx + 0x428]	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4003eb9	      0xe800000000	                          call 0x4003ebe	      1069	channel.c	FUNCTION_31	IF_1	CALL_2
0x4003ebe	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1071	channel.c	FUNCTION_31	IF_1
0x4003ec5	      0xbe00000000	                              mov esi, 0	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4003eca	          0x4889df	                            mov rdi, rbx	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4003ecd	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4003ed4	            0x31c0	                            xor eax, eax	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4003ed6	      0xe800000000	                          call 0x4003edb	      1070	channel.c	FUNCTION_31	IF_1	CALL_3
0x4003edb	          0x8b4500	                    mov eax, dword [rbp]	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4003ede	      0xa900004000	                      test eax, 0x400000	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4003ee3	            0x7533	                           jne 0x4003f18	      1072	channel.c	FUNCTION_31	IF_1	IF_2
0x4003ee5	    0x48c783480400	              mov qword [rbx + 0x448], 1	      1087	channel.c	FUNCTION_31	IF_1	ELSE_2
0x4003ef0	      0x2500008000	                       and eax, 0x800000	      1087	channel.c	FUNCTION_31	IF_1	ELSE_2
0x4003ef5	            0x85c0	                           test eax, eax	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4003ef7	            0x7567	                           jne 0x4003f60	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4003ef9	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1088	channel.c	FUNCTION_31	IF_1	IF_4
0x4003f00	          0x488b00	                    mov rax, qword [rax]	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4003f03	    0x488983500400	            mov qword [rbx + 0x450], rax	      1091	channel.c	FUNCTION_31	IF_1	ELSE_3
0x4003f0a	              0x5b	                                 pop rbx	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f0b	              0x5d	                                 pop rbp	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f0c	            0x415c	                                 pop r12	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f0e	            0x415d	                                 pop r13	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f10	            0x415e	                                 pop r14	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f12	              0xc3	                                     ret	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f13	       0xf1f440000	                   nop dword [rax + rax]	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f18	    0x488b95900100	           mov rdx, qword [rbp + 0x190] 	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f1f	          0x4885d2	                           test rdx, rdx	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f22	     0xf85b8010000	                           jne 0x40040e0	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f28	      0x2500008000	                       and eax, 0x800000	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f2d	     0xf85b2010000	                           jne 0x40040e5	      1074	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f33	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f3a	          0x488b08	                    mov rcx, qword [rax]	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f3d	    0xc780341c0000	            mov dword [rax + 0x1c34], 1 	      1078	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f47	    0xc78340040000	              mov dword [rbx + 0x440], 1	      1079	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f51	        0x488d5101	                      lea rdx, [rcx + 1]	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f55	    0x488993480400	            mov qword [rbx + 0x448], rdx	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f5c	            0xeba2	                           jmp 0x4003f00	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f5e	            0x6690	                                     nop	      1080	channel.c	FUNCTION_31	IF_1	IF_2	IF_3
0x4003f60	    0x488b85980100	           mov rax, qword [rbp + 0x198] 	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4003f67	    0x488983500400	            mov qword [rbx + 0x450], rax	      1089	channel.c	FUNCTION_31	IF_1	IF_4
0x4003f6e	              0x5b	                                 pop rbx	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f6f	              0x5d	                                 pop rbp	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f70	            0x415c	                                 pop r12	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f72	            0x415d	                                 pop r13	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f74	            0x415e	                                 pop r14	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f76	              0xc3	                                     ret	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f77	    0x660f1f840000	                    nop word [rax + rax]	      1093	channel.c	FUNCTION_31	ELSE_3
0x4003f80	    0x4c8bb5b00100	           mov r14, qword [rbp + 0x1b0] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x4003f87	    0x488bb3000200	           mov rsi, qword [rbx + 0x200] 	      1142	channel.c	FUNCTION_33	CALL_1
0x4003f8e	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1142	channel.c	FUNCTION_33	CALL_1
0x4003f95	    0x4c8badb80100	           mov r13, qword [rbp + 0x1b8] 	      1192	channel.c	FUNCTION_34	IF_10	CALL_2
0x4003f9c	      0xe800000000	                          call 0x4003fa1	      1142	channel.c	FUNCTION_33	CALL_1
0x4003fa1	          0x4d85f6	                           test r14, r14	      1143	channel.c	FUNCTION_33	IF_1
0x4003fa4	            0x740a	                            je 0x4003fb0	      1143	channel.c	FUNCTION_33	IF_1
0x4003fa6	        0x41803e00	                       cmp byte [r14], 0	      1143	channel.c	FUNCTION_33	IF_1
0x4003faa	     0xf85f0010000	                           jne 0x40041a0	      1143	channel.c	FUNCTION_33	IF_1
0x4003fb0	          0x4d85ed	                           test r13, r13	      1156	channel.c	FUNCTION_33	IF_3
0x4003fb3	    0x48c783f80100	              mov qword [rbx + 0x1f8], 0	      1154	channel.c	FUNCTION_33	ELSE_2
0x4003fbe	    0x4c89ab000200	            mov qword [rbx + 0x200], r13	      1155	channel.c	FUNCTION_33
0x4003fc5	            0x7405	                            je 0x4003fcc	      1156	channel.c	FUNCTION_33	IF_3
0x4003fc7	      0x4183450001	                      add dword [r13], 1	      1157	channel.c	FUNCTION_33	IF_3
0x4003fcc	          0x8b4500	                    mov eax, dword [rbp]	      1157	channel.c	FUNCTION_33	IF_3
0x4003fcf	            0xa840	                           test al, 0x40	      1195	channel.c	FUNCTION_34	IF_11
0x4003fd1	     0xf84a1fdffff	                            je 0x4003d78	      1195	channel.c	FUNCTION_34	IF_11
0x4003fd7	    0x4c8bb5c00100	           mov r14, qword [rbp + 0x1c0] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4003fde	    0x488bb3100300	           mov rsi, qword [rbx + 0x310] 	      1142	channel.c	FUNCTION_33	CALL_1
0x4003fe5	    0x488bbb080300	           mov rdi, qword [rbx + 0x308] 	      1142	channel.c	FUNCTION_33	CALL_1
0x4003fec	    0x4c8badc80100	           mov r13, qword [rbp + 0x1c8] 	      1196	channel.c	FUNCTION_34	IF_11	CALL_3
0x4003ff3	      0xe800000000	                          call 0x4003ff8	      1142	channel.c	FUNCTION_33	CALL_1
0x4003ff8	          0x4d85f6	                           test r14, r14	      1143	channel.c	FUNCTION_33	IF_1
0x4003ffb	            0x740a	                            je 0x4004007	      1143	channel.c	FUNCTION_33	IF_1
0x4003ffd	        0x41803e00	                       cmp byte [r14], 0	      1143	channel.c	FUNCTION_33	IF_1
0x4004001	     0xf8511020000	                           jne 0x4004218	      1143	channel.c	FUNCTION_33	IF_1
0x4004007	          0x4d85ed	                           test r13, r13	      1156	channel.c	FUNCTION_33	IF_3
0x400400a	    0x48c783080300	              mov qword [rbx + 0x308], 0	      1154	channel.c	FUNCTION_33	ELSE_2
0x4004015	    0x4c89ab100300	            mov qword [rbx + 0x310], r13	      1155	channel.c	FUNCTION_33
0x400401c	            0x7405	                            je 0x4004023	      1156	channel.c	FUNCTION_33	IF_3
0x400401e	      0x4183450001	                      add dword [r13], 1	      1157	channel.c	FUNCTION_33	IF_3
0x4004023	          0x8b4500	                    mov eax, dword [rbp]	      1157	channel.c	FUNCTION_33	IF_3
0x4004026	            0xa880	                           test al, 0x80	      1199	channel.c	FUNCTION_34	IF_12
0x4004028	     0xf8452fdffff	                            je 0x4003d80	      1199	channel.c	FUNCTION_34	IF_12
0x400402e	    0x4c8bb5d00100	           mov r14, qword [rbp + 0x1d0] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x4004035	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	      1142	channel.c	FUNCTION_33	CALL_1
0x400403c	    0x488bbb900400	           mov rdi, qword [rbx + 0x490] 	      1142	channel.c	FUNCTION_33	CALL_1
0x4004043	    0x4c8badd80100	           mov r13, qword [rbp + 0x1d8] 	      1200	channel.c	FUNCTION_34	IF_12	CALL_4
0x400404a	      0xe800000000	                          call 0x400404f	      1142	channel.c	FUNCTION_33	CALL_1
0x400404f	          0x4d85f6	                           test r14, r14	      1143	channel.c	FUNCTION_33	IF_1
0x4004052	            0x740a	                            je 0x400405e	      1143	channel.c	FUNCTION_33	IF_1
0x4004054	        0x41803e00	                       cmp byte [r14], 0	      1143	channel.c	FUNCTION_33	IF_1
0x4004058	     0xf856a010000	                           jne 0x40041c8	      1143	channel.c	FUNCTION_33	IF_1
0x400405e	          0x4d85ed	                           test r13, r13	      1156	channel.c	FUNCTION_33	IF_3
0x4004061	    0x48c783900400	              mov qword [rbx + 0x490], 0	      1154	channel.c	FUNCTION_33	ELSE_2
0x400406c	    0x4c89ab980400	            mov qword [rbx + 0x498], r13	      1155	channel.c	FUNCTION_33
0x4004073	            0x7405	                            je 0x400407a	      1156	channel.c	FUNCTION_33	IF_3
0x4004075	      0x4183450001	                      add dword [r13], 1	      1157	channel.c	FUNCTION_33	IF_3
0x400407a	          0x8b4500	                    mov eax, dword [rbp]	      1157	channel.c	FUNCTION_33	IF_3
0x400407d	      0xe9fefcffff	                           jmp 0x4003d80	      1157	channel.c	FUNCTION_33	IF_3
0x4004082	    0x660f1f440000	                    nop word [rax + rax]	      1157	channel.c	FUNCTION_33	IF_3
0x4004088	    0x4c8bb5a00100	           mov r14, qword [rbp + 0x1a0] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x400408f	    0x488bb3880400	           mov rsi, qword [rbx + 0x488] 	      1142	channel.c	FUNCTION_33	CALL_1
0x4004096	    0x488bbb800400	           mov rdi, qword [rbx + 0x480] 	      1142	channel.c	FUNCTION_33	CALL_1
0x400409d	    0x4c8bada80100	           mov r13, qword [rbp + 0x1a8] 	      1189	channel.c	FUNCTION_34	IF_9	CALL_1
0x40040a4	      0xe800000000	                          call 0x40040a9	      1142	channel.c	FUNCTION_33	CALL_1
0x40040a9	          0x4d85f6	                           test r14, r14	      1143	channel.c	FUNCTION_33	IF_1
0x40040ac	            0x740a	                            je 0x40040b8	      1143	channel.c	FUNCTION_33	IF_1
0x40040ae	        0x41803e00	                       cmp byte [r14], 0	      1143	channel.c	FUNCTION_33	IF_1
0x40040b2	     0xf8538010000	                           jne 0x40041f0	      1143	channel.c	FUNCTION_33	IF_1
0x40040b8	          0x4d85ed	                           test r13, r13	      1156	channel.c	FUNCTION_33	IF_3
0x40040bb	    0x48c783800400	              mov qword [rbx + 0x480], 0	      1154	channel.c	FUNCTION_33	ELSE_2
0x40040c6	    0x4c89ab880400	            mov qword [rbx + 0x488], r13	      1155	channel.c	FUNCTION_33
0x40040cd	            0x7405	                            je 0x40040d4	      1156	channel.c	FUNCTION_33	IF_3
0x40040cf	      0x4183450001	                      add dword [r13], 1	      1157	channel.c	FUNCTION_33	IF_3
0x40040d4	          0x8b4500	                    mov eax, dword [rbp]	      1157	channel.c	FUNCTION_33	IF_3
0x40040d7	      0xe98cfcffff	                           jmp 0x4003d68	      1157	channel.c	FUNCTION_33	IF_3
0x40040dc	         0xf1f4000	                         nop dword [rax]	      1157	channel.c	FUNCTION_33	IF_3
0x40040e0	      0x2500008000	                       and eax, 0x800000	      1157	channel.c	FUNCTION_33	IF_3
0x40040e5	    0x488993480400	            mov qword [rbx + 0x448], rdx	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x40040ec	      0xe904feffff	                           jmp 0x4003ef5	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x40040f1	     0xf1f80000000	                         nop dword [rax]	      1084	channel.c	FUNCTION_31	IF_1	IF_2	ELSE_1
0x40040f8	            0xa804	                              test al, 4	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x40040fa	            0x750a	                           jne 0x4004106	      1209	channel.c	FUNCTION_34	IF_13	IF_14
0x40040fc	    0xc78330010000	              mov dword [rbx + 0x130], 0	      1210	channel.c	FUNCTION_34	IF_13	IF_14
0x4004106	      0xa900000001	                     test eax, 0x1000000	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x400410b	     0xf8587010000	                           jne 0x4004298	      1211	channel.c	FUNCTION_34	IF_13	IF_15
0x4004111	        0xf6450401	                  test byte [rbp + 4], 1	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4004115	      0xba01000000	                              mov edx, 1	      1219	channel.c	FUNCTION_34	IF_13	ELSE_1
0x400411a	     0xf8520010000	                           jne 0x4004240	      1221	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4004120	    0x488bbd380100	           mov rdi, qword [rbp + 0x138] 	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4004127	            0x31f6	                            xor esi, esi	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4004129	      0xe812bfffff	                    call sym.find_buffer	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x400412e	          0x4885c0	                           test rax, rax	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x4004131	          0x4989c5	                            mov r13, rax	      1223	channel.c	FUNCTION_34	IF_13	ELSE_1	CALL_8
0x4004134	            0x745c	                            je 0x4004192	      1225	channel.c	FUNCTION_34	IF_13	IF_18
0x4004136	    0xf74500000000	           test dword [rbp], 0x20000000 	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400413d	            0x7415	                            je 0x4004154	      1227	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400413f	    0x448b85680100	           mov r8d, dword [rbp + 0x168] 	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4004146	            0x31c0	                            xor eax, eax	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4004148	          0x4585c0	                           test r8d, r8d	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400414b	           0xf94c0	                                 sete al	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x400414e	    0x898318020000	            mov dword [rbx + 0x218], eax	      1228	channel.c	FUNCTION_34	IF_13	IF_18	IF_19
0x4004154	    0x418bbd401500	          mov edi, dword [r13 + 0x1540] 	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400415b	            0x85ff	                           test edi, edi	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400415d	            0x750e	                           jne 0x400416d	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400415f	    0x8bb318020000	           mov esi, dword [rbx + 0x218] 	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4004165	            0x85f6	                           test esi, esi	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x4004167	     0xf849b010000	                            je 0x4004308	      1231	channel.c	FUNCTION_34	IF_13	IF_18	IF_20
0x400416d	    0x498b95880000	            mov rdx, qword [r13 + 0x88] 	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4004174	      0xbe00000000	                              mov esi, 0	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4004179	          0x4889df	                            mov rdi, rbx	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x400417c	            0x31c0	                            xor eax, eax	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x400417e	      0xe800000000	                          call 0x4004183	      1237	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_11
0x4004183	    0x488dbb080200	                  lea rdi, [rbx + 0x208]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x400418a	          0x4c89ee	                            mov rsi, r13	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x400418d	      0xe800000000	                          call 0x4004192	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x4004192	          0x8b4500	                    mov eax, dword [rbp]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x4004195	      0xe903fcffff	                           jmp 0x4003d9d	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x400419a	    0x660f1f440000	                    nop word [rax + rax]	      1239	channel.c	FUNCTION_34	IF_13	IF_18	ELSE_2	CALL_12
0x40041a0	          0x4d85ed	                           test r13, r13	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40041a3	     0xf8417020000	                            je 0x40043c0	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40041a9	          0x4c89ef	                            mov rdi, r13	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041ac	      0xe800000000	                          call 0x40041b1	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041b1	    0x4c89ab000200	            mov qword [rbx + 0x200], r13	      1155	channel.c	FUNCTION_33
0x40041b8	    0x488983f80100	            mov qword [rbx + 0x1f8], rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041bf	      0xe903feffff	                           jmp 0x4003fc7	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041c4	         0xf1f4000	                         nop dword [rax]	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041c8	          0x4d85ed	                           test r13, r13	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40041cb	     0xf84bf010000	                            je 0x4004390	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40041d1	          0x4c89ef	                            mov rdi, r13	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041d4	      0xe800000000	                          call 0x40041d9	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041d9	    0x4c89ab980400	            mov qword [rbx + 0x498], r13	      1155	channel.c	FUNCTION_33
0x40041e0	    0x488983900400	            mov qword [rbx + 0x490], rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041e7	      0xe989feffff	                           jmp 0x4004075	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041ec	         0xf1f4000	                         nop dword [rax]	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041f0	          0x4d85ed	                           test r13, r13	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40041f3	     0xf8467010000	                            je 0x4004360	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x40041f9	          0x4c89ef	                            mov rdi, r13	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x40041fc	      0xe800000000	                          call 0x4004201	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4004201	    0x4c89ab880400	            mov qword [rbx + 0x488], r13	      1155	channel.c	FUNCTION_33
0x4004208	    0x488983800400	            mov qword [rbx + 0x480], rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x400420f	      0xe9bbfeffff	                           jmp 0x40040cf	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4004214	         0xf1f4000	                         nop dword [rax]	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4004218	          0x4d85ed	                           test r13, r13	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x400421b	     0xf840f010000	                            je 0x4004330	      1145	channel.c	FUNCTION_33	IF_1	IF_2
0x4004221	          0x4c89ef	                            mov rdi, r13	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4004224	      0xe800000000	                          call 0x4004229	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4004229	    0x4c89ab100300	            mov qword [rbx + 0x310], r13	      1155	channel.c	FUNCTION_33
0x4004230	    0x488983080300	            mov qword [rbx + 0x308], rax	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4004237	      0xe9e2fdffff	                           jmp 0x400401e	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x400423c	         0xf1f4000	                         nop dword [rax]	      1146	channel.c	FUNCTION_33	IF_1	CALL_2
0x4004240	    0x8b9578010000	           mov edx, dword [rbp + 0x178] 	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4004246	      0xe9d5feffff	                           jmp 0x4004120	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x400424b	       0xf1f440000	                   nop dword [rax + rax]	      1222	channel.c	FUNCTION_34	IF_13	ELSE_1	IF_17
0x4004250	    0x8bbd58010000	           mov edi, dword [rbp + 0x158] 	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4004256	      0xe800000000	                          call 0x400425b	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x400425b	          0x4885c0	                           test rax, rax	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x400425e	          0x4989c5	                            mov r13, rax	      1257	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_13
0x4004261	     0xf85ccfbffff	                           jne 0x4003e33	      1258	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	IF_25
0x4004267	    0x4c63ad580100	        movsxd r13, dword [rbp + 0x158] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400426e	      0xba05000000	                              mov edx, 5	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4004273	      0xbe00000000	                              mov esi, 0	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4004278	            0x31ff	                            xor edi, edi	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400427a	      0xe800000000	                          call 0x400427f	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400427f	          0x4889c7	                            mov rdi, rax	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4004282	          0x4c89ee	                            mov rsi, r13	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4004285	      0xe800000000	                          call 0x400428a	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400428a	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x400428d	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4004290	      0xe9fefbffff	                           jmp 0x4003e93	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4004295	           0xf1f00	                         nop dword [rax]	      1259	channel.c	FUNCTION_34	IF_21	ELSE_3	IF_24	CALL_15
0x4004298	    0x8bbd54010000	           mov edi, dword [rbp + 0x154] 	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x400429e	      0xe800000000	                          call 0x40042a3	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40042a3	          0x4885c0	                           test rax, rax	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x40042a6	          0x4989c5	                            mov r13, rax	      1213	channel.c	FUNCTION_34	IF_13	IF_15	CALL_5
0x40042a9	     0xf8587feffff	                           jne 0x4004136	      1214	channel.c	FUNCTION_34	IF_13	IF_15	IF_16
0x40042af	    0x4c63ad540100	        movsxd r13, dword [rbp + 0x154] 	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042b6	      0xba05000000	                              mov edx, 5	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042bb	      0xbe00000000	                              mov esi, 0	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042c0	            0x31ff	                            xor edi, edi	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042c2	      0xe800000000	                          call 0x40042c7	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042c7	          0x4889c7	                            mov rdi, rax	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042ca	          0x4c89ee	                            mov rsi, r13	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042cd	      0xe800000000	                          call 0x40042d2	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042d2	          0x8b4500	                    mov eax, dword [rbp]	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042d5	      0xe9c3faffff	                           jmp 0x4003d9d	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042da	    0x660f1f440000	                    nop word [rax + rax]	      1215	channel.c	FUNCTION_34	IF_13	IF_15	CALL_7
0x40042e0	      0xba05000000	                              mov edx, 5	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042e5	      0xbe00000000	                              mov esi, 0	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042ea	            0x31ff	                            xor edi, edi	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042ec	      0xe800000000	                          call 0x40042f1	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042f1	          0x4889c7	                            mov rdi, rax	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042f4	      0xe800000000	                          call 0x40042f9	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042f9	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042fc	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x40042ff	      0xe98ffbffff	                           jmp 0x4003e93	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4004304	         0xf1f4000	                         nop dword [rax]	      1276	channel.c	FUNCTION_34	IF_21	IF_27	IF_29	CALL_18
0x4004308	      0xba05000000	                              mov edx, 5	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x400430d	      0xbe00000000	                              mov esi, 0	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4004312	            0x31ff	                            xor edi, edi	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4004314	      0xe800000000	                          call 0x4004319	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4004319	          0x4889c7	                            mov rdi, rax	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x400431c	      0xe800000000	                          call 0x4004321	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4004321	          0x8b4500	                    mov eax, dword [rbp]	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4004324	      0xe974faffff	                           jmp 0x4003d9d	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4004329	     0xf1f80000000	                         nop dword [rax]	      1233	channel.c	FUNCTION_34	IF_13	IF_18	IF_20	CALL_10
0x4004330	          0x4c89f7	                            mov rdi, r14	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4004333	      0xe800000000	                          call 0x4004338	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4004338	    0x488983080300	            mov qword [rbx + 0x308], rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x400433f	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4004342	      0xe800000000	                          call 0x4004347	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4004347	    0x48c783100300	              mov qword [rbx + 0x310], 0	      1155	channel.c	FUNCTION_33
0x4004352	          0x8b4500	                    mov eax, dword [rbp]	      1155	channel.c	FUNCTION_33
0x4004355	      0xe91efaffff	                           jmp 0x4003d78	      1155	channel.c	FUNCTION_33
0x400435a	    0x660f1f440000	                    nop word [rax + rax]	      1155	channel.c	FUNCTION_33
0x4004360	          0x4c89f7	                            mov rdi, r14	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4004363	      0xe800000000	                          call 0x4004368	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4004368	    0x488983800400	            mov qword [rbx + 0x480], rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x400436f	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4004372	      0xe800000000	                          call 0x4004377	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x4004377	    0x48c783880400	              mov qword [rbx + 0x488], 0	      1155	channel.c	FUNCTION_33
0x4004382	          0x8b4500	                    mov eax, dword [rbp]	      1155	channel.c	FUNCTION_33
0x4004385	      0xe9def9ffff	                           jmp 0x4003d68	      1155	channel.c	FUNCTION_33
0x400438a	    0x660f1f440000	                    nop word [rax + rax]	      1155	channel.c	FUNCTION_33
0x4004390	          0x4c89f7	                            mov rdi, r14	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4004393	      0xe800000000	                          call 0x4004398	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4004398	    0x488983900400	            mov qword [rbx + 0x490], rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x400439f	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x40043a2	      0xe800000000	                          call 0x40043a7	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x40043a7	    0x48c783980400	              mov qword [rbx + 0x498], 0	      1155	channel.c	FUNCTION_33
0x40043b2	          0x8b4500	                    mov eax, dword [rbp]	      1155	channel.c	FUNCTION_33
0x40043b5	      0xe9c6f9ffff	                           jmp 0x4003d80	      1155	channel.c	FUNCTION_33
0x40043ba	    0x660f1f440000	                    nop word [rax + rax]	      1155	channel.c	FUNCTION_33
0x40043c0	          0x4c89f7	                            mov rdi, r14	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x40043c3	      0xe800000000	                          call 0x40043c8	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x40043c8	    0x488983f80100	            mov qword [rbx + 0x1f8], rax	      1149	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x40043cf	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x40043d2	      0xe800000000	                          call 0x40043d7	      1150	channel.c	FUNCTION_33	IF_1	ELSE_1	CALL_4
0x40043d7	    0x48c783000200	              mov qword [rbx + 0x200], 0	      1155	channel.c	FUNCTION_33
0x40043e2	          0x8b4500	                    mov eax, dword [rbp]	      1155	channel.c	FUNCTION_33
0x40043e5	      0xe986f9ffff	                           jmp 0x4003d70	      1155	channel.c	FUNCTION_33
channel_write_in	WHILE,0:FOR,1:CALL,10:IF,7:ELSE,2:functions,0:DO,0:SWITCH,0	180
0x40033c0	            0x4157	                                push r15	      1432	channel.c	FUNCTION_38
0x40033c2	            0x4156	                                push r14	      1432	channel.c	FUNCTION_38
0x40033c4	            0x4155	                                push r13	      1432	channel.c	FUNCTION_38
0x40033c6	            0x4154	                                push r12	      1432	channel.c	FUNCTION_38
0x40033c8	              0x55	                                push rbp	      1432	channel.c	FUNCTION_38
0x40033c9	              0x53	                                push rbx	      1432	channel.c	FUNCTION_38
0x40033ca	    0x4881eca80000	                           sub rsp, 0xa8	      1432	channel.c	FUNCTION_38
0x40033d1	    0x4c8ba7280400	           mov r12, qword [rdi + 0x428] 	      1435	channel.c	FUNCTION_38
0x40033d8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1432	channel.c	FUNCTION_38
0x40033e1	    0x488984249800	             mov qword [rsp + 0x98], rax	      1432	channel.c	FUNCTION_38
0x40033e9	            0x31c0	                            xor eax, eax	      1432	channel.c	FUNCTION_38
0x40033eb	          0x4d85e4	                           test r12, r12	      1438	channel.c	FUNCTION_38	IF_1
0x40033ee	            0x740d	                            je 0x40033fd	      1438	channel.c	FUNCTION_38	IF_1
0x40033f0	    0x8b8740040000	           mov eax, dword [rdi + 0x440] 	      1438	channel.c	FUNCTION_38	IF_1
0x40033f6	          0x4889fb	                            mov rbx, rdi	      1438	channel.c	FUNCTION_38	IF_1
0x40033f9	            0x85c0	                           test eax, eax	      1438	channel.c	FUNCTION_38	IF_1
0x40033fb	            0x7433	                            je 0x4003430	      1438	channel.c	FUNCTION_38	IF_1
0x40033fd	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1481	channel.c	FUNCTION_38
0x4003405	    0x644833042528	                xor rax, qword fs:[0x28]	      1481	channel.c	FUNCTION_38
0x400340e	     0xf85d3020000	                           jne 0x40036e7	      1481	channel.c	FUNCTION_38
0x4003414	    0x4881c4a80000	                           add rsp, 0xa8	      1481	channel.c	FUNCTION_38
0x400341b	              0x5b	                                 pop rbx	      1481	channel.c	FUNCTION_38
0x400341c	              0x5d	                                 pop rbp	      1481	channel.c	FUNCTION_38
0x400341d	            0x415c	                                 pop r12	      1481	channel.c	FUNCTION_38
0x400341f	            0x415d	                                 pop r13	      1481	channel.c	FUNCTION_38
0x4003421	            0x415e	                                 pop r14	      1481	channel.c	FUNCTION_38
0x4003423	            0x415f	                                 pop r15	      1481	channel.c	FUNCTION_38
0x4003425	              0xc3	                                     ret	      1481	channel.c	FUNCTION_38
0x4003426	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1481	channel.c	FUNCTION_38
0x4003430	    0x488dbf280400	                  lea rdi, [rdi + 0x428]	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4003437	      0xe800000000	                          call 0x400343c	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400343c	            0x85c0	                           test eax, eax	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400343e	     0xf845c020000	                            je 0x40036a0	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4003444	    0x49837c240800	                  cmp qword [r12 + 8], 0	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x400344a	     0xf8450020000	                            je 0x40036a0	      1440	channel.c	FUNCTION_38	IF_2	CALL_1
0x4003450	    0x488bab480400	           mov rbp, qword [rbx + 0x448] 	      1448	channel.c	FUNCTION_38	FOR_1
0x4003457	    0x483bab500400	           cmp rbp, qword [rbx + 0x450] 	      1448	channel.c	FUNCTION_38	FOR_1
0x400345e	        0x498b0424	                    mov rax, qword [r12]	      1449	channel.c	FUNCTION_38	FOR_1
0x4003462	     0xf8fea000000	                            jg 0x4003552	      1448	channel.c	FUNCTION_38	FOR_1
0x4003468	          0x4839c5	                            cmp rbp, rax	      1449	channel.c	FUNCTION_38	FOR_1
0x400346b	     0xf8f6a020000	                            jg 0x40036db	      1449	channel.c	FUNCTION_38	FOR_1
0x4003471	    0x83bb48030000	cmp dword [rbx + 0x348], 0xffffffffffffffff	      1367	channel.c	FUNCTION_37	IF_1
0x4003478	     0xf84ea010000	                            je 0x4003668	      1367	channel.c	FUNCTION_37	IF_1
0x400347e	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      1367	channel.c	FUNCTION_37	IF_1
0x4003483	          0x4531f6	                          xor r14d, r14d	      1367	channel.c	FUNCTION_37	IF_1
0x4003486	          0x4531ff	                          xor r15d, r15d	      1384	channel.c	FUNCTION_37	CALL_1
0x4003489	     0xf1f80000000	                         nop dword [rax]	      1384	channel.c	FUNCTION_37	CALL_1
0x4003490	    0x8b83c0030000	           mov eax, dword [rbx + 0x3c0] 	      1371	channel.c	FUNCTION_37	IF_2
0x4003496	          0x83f801	                              cmp eax, 1	      1371	channel.c	FUNCTION_37	IF_2
0x4003499	     0xf8441010000	                            je 0x40035e0	      1371	channel.c	FUNCTION_37	IF_2
0x400349f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40034a2	     0xf8448010000	                            je 0x40035f0	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40034a8	      0xb910000000	                           mov ecx, 0x10	      1384	channel.c	FUNCTION_37	CALL_1
0x40034ad	          0x4c89ef	                            mov rdi, r13	      1384	channel.c	FUNCTION_37	CALL_1
0x40034b0	          0x4489f8	                           mov eax, r15d	      1384	channel.c	FUNCTION_37	CALL_1
0x40034b3	              0xfc	                                     cld	      1384	channel.c	FUNCTION_37	CALL_1
0x40034b4	          0xf348ab	              rep stosq qword [rdi], rax	      1384	channel.c	FUNCTION_37	CALL_1
0x40034b7	    0x4863bb480300	        movsxd rdi, dword [rbx + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x40034be	      0xe800000000	                          call 0x40034c3	      1385	channel.c	FUNCTION_37	CALL_2
0x40034c3	    0x8bbb48030000	           mov edi, dword [rbx + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x40034c9	    0x48c704240000	                      mov qword [rsp], 0	      1386	channel.c	FUNCTION_37
0x40034d1	    0x48c744240800	                  mov qword [rsp + 8], 0	      1387	channel.c	FUNCTION_37
0x40034da	            0x89fa	                            mov edx, edi	      1385	channel.c	FUNCTION_37	CALL_2
0x40034dc	          0xc1fa1f	                           sar edx, 0x1f	      1385	channel.c	FUNCTION_37	CALL_2
0x40034df	          0xc1ea1a	                           shr edx, 0x1a	      1385	channel.c	FUNCTION_37	CALL_2
0x40034e2	          0x8d0c17	                    lea ecx, [rdi + rdx]	      1385	channel.c	FUNCTION_37	CALL_2
0x40034e5	          0x83e13f	                           and ecx, 0x3f	      1385	channel.c	FUNCTION_37	CALL_2
0x40034e8	            0x29d1	                            sub ecx, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x40034ea	      0xba01000000	                              mov edx, 1	      1385	channel.c	FUNCTION_37	CALL_2
0x40034ef	          0x48d3e2	                             shl rdx, cl	      1385	channel.c	FUNCTION_37	CALL_2
0x40034f2	      0x480954c410	      or qword [rsp + rax*8 + 0x10], rdx	      1385	channel.c	FUNCTION_37	CALL_2
0x40034f7	          0x83c701	                              add edi, 1	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x40034fa	            0x31c9	                            xor ecx, ecx	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x40034fc	            0x31f6	                            xor esi, esi	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x40034fe	          0x4989e0	                             mov r8, rsp	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4003501	          0x4c89ea	                            mov rdx, r13	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4003504	      0xe800000000	                          call 0x4003509	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4003509	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x400350c	     0xf85ee000000	                           jne 0x4003600	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4003512	      0xe800000000	                          call 0x4003517	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4003517	          0x833804	                      cmp dword [rax], 4	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x400351a	     0xf84b0000000	                            je 0x40035d0	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4003520	      0xbe00000000	                              mov esi, 0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4003525	          0x4889df	                            mov rdi, rbx	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4003528	            0x31c0	                            xor eax, eax	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x400352a	      0xe800000000	                          call 0x400352f	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x400352f	              0x90	                                     nop	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4003530	        0x4183fe01	                             cmp r14d, 1	      1457	channel.c	FUNCTION_38	IF_4
0x4003534	     0xf8486010000	                            je 0x40036c0	      1457	channel.c	FUNCTION_38	IF_4
0x400353a	            0x7e12	                           jle 0x400354e	      1459	channel.c	FUNCTION_38	ELSE_1	IF_5
0x400353c	          0x4489f2	                           mov edx, r14d	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x400353f	      0xbe00000000	                              mov esi, 0	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4003544	          0x4889df	                            mov rdi, rbx	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4003547	            0x31c0	                            xor eax, eax	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4003549	      0xe800000000	                          call 0x400354e	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x400354e	        0x498b0424	                    mov rax, qword [r12]	      1460	channel.c	FUNCTION_38	ELSE_1	IF_5
0x4003552	          0x4839c5	                            cmp rbp, rax	      1463	channel.c	FUNCTION_38	IF_6
0x4003555	    0x4889ab480400	            mov qword [rbx + 0x448], rbp	      1462	channel.c	FUNCTION_38
0x400355c	     0xf8e0d010000	                           jle 0x400366f	      1463	channel.c	FUNCTION_38	IF_6
0x4003562	    0x4883bba80400	              cmp qword [rbx + 0x4a8], 0	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x400356a	            0x7408	                            je 0x4003574	      1467	channel.c	FUNCTION_38	IF_6	IF_7
0x400356c	          0x4889df	                            mov rdi, rbx	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x400356f	      0xe800000000	                          call 0x4003574	      1468	channel.c	FUNCTION_38	IF_6	CALL_7
0x4003574	          0x4889df	                            mov rdi, rbx	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4003577	            0x31c0	                            xor eax, eax	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4003579	    0x48c783280400	              mov qword [rbx + 0x428], 0	      1472	channel.c	FUNCTION_38	IF_6
0x4003584	      0xbe00000000	                              mov esi, 0	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x4003589	      0xe800000000	                          call 0x400358e	      1473	channel.c	FUNCTION_38	IF_6	CALL_8
0x400358e	    0x8bbb48030000	           mov edi, dword [rbx + 0x348] 	       988	channel.c	FUNCTION_29	IF_1
0x4003594	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4003597	     0xf8460feffff	                            je 0x40033fd	       988	channel.c	FUNCTION_29	IF_1
0x400359d	    0x3bbb28010000	           cmp edi, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40035a3	            0x740d	                            je 0x40035b2	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40035a5	    0x3bbb38020000	           cmp edi, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40035ab	            0x7405	                            je 0x40035b2	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40035ad	      0xe800000000	                          call 0x40035b2	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40035b2	    0xc78348030000	    mov dword [rbx + 0x348], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x40035bc	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffff7	      1010	channel.c	FUNCTION_29	IF_1
0x40035c3	      0xe935feffff	                           jmp 0x40033fd	      1010	channel.c	FUNCTION_29	IF_1
0x40035c8	     0xf1f84000000	                   nop dword [rax + rax]	      1010	channel.c	FUNCTION_29	IF_1
0x40035d0	    0x8bbb48030000	           mov edi, dword [rbx + 0x348] 	      1010	channel.c	FUNCTION_29	IF_1
0x40035d6	      0xe91cffffff	                           jmp 0x40034f7	      1010	channel.c	FUNCTION_29	IF_1
0x40035db	       0xf1f440000	                   nop dword [rax + rax]	      1010	channel.c	FUNCTION_29	IF_1
0x40035e0	    0xc783c0030000	    mov dword [rbx + 0x3c0], 0xffffffff 	      1372	channel.c	FUNCTION_37	IF_2
0x40035ea	      0xe9b9feffff	                           jmp 0x40034a8	      1372	channel.c	FUNCTION_37	IF_2
0x40035ef	              0x90	                                     nop	      1372	channel.c	FUNCTION_37	IF_2
0x40035f0	    0xc783c0030000	              mov dword [rbx + 0x3c0], 1	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40035fa	      0xe9a9feffff	                           jmp 0x40034a8	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x40035ff	              0x90	                                     nop	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4003600	            0x85c0	                           test eax, eax	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4003602	     0xf8e18ffffff	                           jle 0x4003520	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4003608	    0x83bbc0030000	              cmp dword [rbx + 0x3c0], 1	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x400360f	            0x743f	                            je 0x4003650	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4003611	          0x4889ee	                            mov rsi, rbp	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x4003614	          0x4889da	                            mov rdx, rbx	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x4003617	          0x4c89e7	                            mov rdi, r12	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x400361a	      0xe8d1f7ffff	                 call sym.write_buf_line	      1453	channel.c	FUNCTION_38	FOR_1	CALL_4
0x400361f	        0x4183c601	                             add r14d, 1	      1454	channel.c	FUNCTION_38	FOR_1
0x4003623	        0x4883c501	                              add rbp, 1	      1449	channel.c	FUNCTION_38	FOR_1
0x4003627	    0x4839ab500400	           cmp qword [rbx + 0x450], rbp 	      1448	channel.c	FUNCTION_38	FOR_1
0x400362e	     0xf8cfcfeffff	                            jl 0x4003530	      1448	channel.c	FUNCTION_38	FOR_1
0x4003634	        0x49392c24	                    cmp qword [r12], rbp	      1449	channel.c	FUNCTION_38	FOR_1
0x4003638	     0xf8cf2feffff	                            jl 0x4003530	      1449	channel.c	FUNCTION_38	FOR_1
0x400363e	    0x83bb48030000	cmp dword [rbx + 0x348], 0xffffffffffffffff	      1367	channel.c	FUNCTION_37	IF_1
0x4003645	     0xf8545feffff	                           jne 0x4003490	      1367	channel.c	FUNCTION_37	IF_1
0x400364b	      0xe9e0feffff	                           jmp 0x4003530	      1367	channel.c	FUNCTION_37	IF_1
0x4003650	      0xbe00000000	                              mov esi, 0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4003655	          0x4889df	                            mov rdi, rbx	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4003658	            0x31c0	                            xor eax, eax	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x400365a	      0xe800000000	                          call 0x400365f	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x400365f	      0xe9ccfeffff	                           jmp 0x4003530	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4003664	         0xf1f4000	                         nop dword [rax]	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4003668	    0x4889ab480400	            mov qword [rbx + 0x448], rbp	      1462	channel.c	FUNCTION_38
0x400366f	    0x4839ab500400	           cmp qword [rbx + 0x450], rbp 	      1463	channel.c	FUNCTION_38	IF_6
0x4003676	     0xf8ce6feffff	                            jl 0x4003562	      1463	channel.c	FUNCTION_38	IF_6
0x400367c	          0x4829e8	                            sub rax, rbp	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x400367f	      0xbe00000000	                              mov esi, 0	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4003684	          0x4889df	                            mov rdi, rbx	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4003687	        0x488d5001	                      lea rdx, [rax + 1]	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x400368b	            0x31c0	                            xor eax, eax	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x400368d	      0xe800000000	                          call 0x4003692	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4003692	      0xe966fdffff	                           jmp 0x40033fd	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x4003697	    0x660f1f840000	                    nop word [rax + rax]	      1479	channel.c	FUNCTION_38	ELSE_2	CALL_10
0x40036a0	      0xbe00000000	                              mov esi, 0	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x40036a5	          0x4889df	                            mov rdi, rbx	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x40036a8	            0x31c0	                            xor eax, eax	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x40036aa	      0xe800000000	                          call 0x40036af	      1443	channel.c	FUNCTION_38	IF_2	CALL_2
0x40036af	    0x48c783280400	              mov qword [rbx + 0x428], 0	      1444	channel.c	FUNCTION_38	IF_2
0x40036ba	      0xe93efdffff	                           jmp 0x40033fd	      1445	channel.c	FUNCTION_38	IF_2
0x40036bf	              0x90	                                     nop	      1445	channel.c	FUNCTION_38	IF_2
0x40036c0	          0x8d55ff	                      lea edx, [rbp - 1]	      1458	channel.c	FUNCTION_38	CALL_5
0x40036c3	            0x31c0	                            xor eax, eax	      1458	channel.c	FUNCTION_38	CALL_5
0x40036c5	      0xbe00000000	                              mov esi, 0	      1458	channel.c	FUNCTION_38	CALL_5
0x40036ca	          0x4889df	                            mov rdi, rbx	      1458	channel.c	FUNCTION_38	CALL_5
0x40036cd	      0xe800000000	                          call 0x40036d2	      1458	channel.c	FUNCTION_38	CALL_5
0x40036d2	        0x498b0424	                    mov rax, qword [r12]	      1458	channel.c	FUNCTION_38	CALL_5
0x40036d6	      0xe977feffff	                           jmp 0x4003552	      1458	channel.c	FUNCTION_38	CALL_5
0x40036db	    0x4889ab480400	            mov qword [rbx + 0x448], rbp	      1462	channel.c	FUNCTION_38
0x40036e2	      0xe97bfeffff	                           jmp 0x4003562	      1462	channel.c	FUNCTION_38
0x40036e7	      0xe800000000	                          call 0x40036ec	      1481	channel.c	FUNCTION_38
write_buf_line	WHILE,0:FOR,1:CALL,6:IF,3:ELSE,1:functions,0:DO,0:SWITCH,0	340
0x4002df0	            0x4157	                                push r15	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df2	            0x4156	                                push r14	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df4	            0x4155	                                push r13	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df6	            0x4154	                                push r12	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df8	              0x55	                                push rbp	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002df9	              0x53	                                push rbx	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002dfa	          0x4889d3	                            mov rbx, rdx	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002dfd	            0x31d2	                            xor edx, edx	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002dff	        0x4883ec38	                           sub rsp, 0x38	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002e03	    0x64488b042528	                mov rax, qword fs:[0x28]	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002e0c	      0x4889442428	             mov qword [rsp + 0x28], rax	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002e11	            0x31c0	                            xor eax, eax	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002e13	      0xe800000000	                          call 0x4002e18	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002e18	          0x4889c7	                            mov rdi, rax	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e1b	          0x4989c6	                            mov r14, rax	      1333	channel.c	ELSE_2	FUNCTION_36	CALL_1
0x4002e1e	      0xe800000000	                          call 0x4002e23	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e23	          0x8d7802	                      lea edi, [rax + 2]	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e26	          0x4989c4	                            mov r12, rax	      1334	channel.c	ELSE_2	FUNCTION_36	CALL_2
0x4002e29	      0xe800000000	                          call 0x4002e2e	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e2e	          0x4885c0	                           test rax, rax	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e31	     0xf84f4010000	                            je 0x400302b	      1339	channel.c	ELSE_2	FUNCTION_36	IF_1	CALL_3
0x4002e37	          0x4d63ec	                        movsxd r13, r12d	      1341	channel.c	ELSE_2	FUNCTION_36	CALL_4
0x4002e3a	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_135	CALL_3
0x4002e3d	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_135	CALL_3
0x4002e40	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_135	CALL_3
0x4002e43	          0x4889c5	                            mov rbp, rax	        53	string3.h	FUNCTION_135	CALL_3
0x4002e46	      0xe800000000	                          call 0x4002e4b	        53	string3.h	FUNCTION_135	CALL_3
0x4002e4b	    0x448b83580400	           mov r8d, dword [rbx + 0x458] 	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e52	          0x4585c0	                           test r8d, r8d	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e55	     0xf84f5010000	                            je 0x4003050	      1343	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e5b	    0x42c6442d000d	               mov byte [rbp + r13], 0xd	      1344	channel.c	ELSE_2	FUNCTION_36	IF_2
0x4002e61	    0x42c6442d0100	            mov byte [rbp + r13 + 1], 0 	      1353	channel.c	ELSE_2	FUNCTION_36
0x4002e67	    0x8b8348030000	           mov eax, dword [rbx + 0x348] 	      3707	channel.c	FUNCTION_87
0x4002e6d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3708	channel.c	FUNCTION_87	IF_1
0x4002e70	        0x89442404	                mov dword [rsp + 4], eax	      3707	channel.c	FUNCTION_87
0x4002e74	     0xf843e020000	                            je 0x40030b8	      3708	channel.c	FUNCTION_87	IF_1
0x4002e7a	    0x48833d000000	               cmp qword [0x04002e82], 0	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x4002e82	      0x418d442401	                      lea eax, [r12 + 1]	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e87	          0x4189c6	                           mov r14d, eax	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e8a	        0x89442408	                mov dword [rsp + 8], eax	      1354	channel.c	ELSE_2	FUNCTION_36	CALL_5
0x4002e8e	     0xf84be000000	                            je 0x4002f52	      3719	channel.c	FUNCTION_87	IF_3	CALL_4
0x4002e94	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4002e99	      0xe800000000	                          call 0x4002e9e	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4002e9e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4002ea3	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4002ea8	      0xe800000000	                          call 0x4002ead	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4002ead	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x4002eb2	      0xe800000000	                          call 0x4002eb7	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x4002eb7	    0x488b3d000000	            mov rdi, qword [0x04002ebe] 	        97	stdio2.h	CALL_20
0x4002ebe	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_20
0x4002ec1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4002ec6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002ecb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x4002ecd	      0xe800000000	                          call 0x4002ed2	        97	stdio2.h	CALL_20
0x4002ed2	        0x448b4310	            mov r8d, dword [rbx + 0x10] 	        97	stdio2.h	CALL_20
0x4002ed6	    0x488b3d000000	            mov rdi, qword [0x04002edd] 	        97	stdio2.h	CALL_20
0x4002edd	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_20
0x4002ee2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4002ee7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002eec	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x4002eee	      0xe800000000	                          call 0x4002ef3	        97	stdio2.h	CALL_20
0x4002ef3	    0x488b35000000	            mov rsi, qword [0x04002efa] 	        97	stdio2.h	CALL_20
0x4002efa	      0xbf27000000	                           mov edi, 0x27	        97	stdio2.h	CALL_20
0x4002eff	      0xe800000000	                          call 0x4002f04	        97	stdio2.h	CALL_20
0x4002f04	    0x488b0d000000	            mov rcx, qword [0x04002f0b] 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002f0b	          0x4963f6	                        movsxd rsi, r14d	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002f0e	      0xba01000000	                              mov edx, 1	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002f13	          0x4889ef	                            mov rdi, rbp	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002f16	      0xe800000000	                          call 0x4002f1b	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002f1b	    0x488b0d000000	            mov rcx, qword [0x04002f22] 	        97	stdio2.h	CALL_20
0x4002f22	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_20
0x4002f27	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002f2c	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x4002f31	    0x890500000000	            mov dword [0x04002f37], eax 	      3723	channel.c	FUNCTION_87	IF_3	CALL_6
0x4002f37	      0xe800000000	                          call 0x4002f3c	        97	stdio2.h	CALL_20
0x4002f3c	    0x488b3d000000	            mov rdi, qword [0x04002f43] 	      3725	channel.c	FUNCTION_87	IF_3	CALL_7
0x4002f43	      0xe800000000	                          call 0x4002f48	      3725	channel.c	FUNCTION_87	IF_3	CALL_7
0x4002f48	    0xc70500000000	               mov dword [0x04002f52], 1	      3726	channel.c	FUNCTION_87	IF_3
0x4002f52	        0x8b742408	                mov esi, dword [rsp + 8]	      3726	channel.c	FUNCTION_87	IF_3
0x4002f56	            0x85f6	                           test esi, esi	      3726	channel.c	FUNCTION_87	IF_3
0x4002f58	     0xf8422020000	                            je 0x4003180	      3726	channel.c	FUNCTION_87	IF_3
0x4002f5e	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002f65	          0x4531ed	                          xor r13d, r13d	      1332	channel.c	ELSE_2	FUNCTION_36
0x4002f68	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002f6b	     0xf848f000000	                            je 0x4003000	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002f71	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002f75	          0x448b20	                   mov r12d, dword [rax]	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002f78	    0x41bd01000000	                             mov r13d, 1	      3740	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002f7e	        0x8b7c2404	                mov edi, dword [rsp + 4]	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002f82	          0x4963d4	                        movsxd rdx, r12d	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002f85	          0x4c89f6	                            mov rsi, r14	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002f88	      0xe800000000	                          call 0x4002f8d	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002f8d	            0x85c0	                           test eax, eax	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002f8f	          0x4189c0	                            mov r8d, eax	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x4002f92	     0xf8870010000	                            js 0x4003108	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4002f98	    0x8b8bc4030000	           mov ecx, dword [rbx + 0x3c4] 	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002f9e	            0x85c9	                           test ecx, ecx	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002fa0	     0xf8479010000	                            je 0x400311f	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002fa6	          0x4585ed	                         test r13d, r13d	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x4002fa9	    0x4c8bbbe00300	           mov r15, qword [rbx + 0x3e0] 	      3774	channel.c	FUNCTION_87	FOR_1	IF_9
0x4002fb0	     0xf85da000000	                           jne 0x4003090	      3776	channel.c	FUNCTION_87	FOR_1	IF_9	IF_10
0x4002fb6	          0x4539c4	                           cmp r12d, r8d	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x4002fb9	     0xf8581020000	                           jne 0x4003240	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x4002fbf	          0x4d85ff	                           test r15, r15	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4002fc2	            0x744c	                            je 0x4003010	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x4002fc4	          0x4c89ff	                            mov rdi, r15	      2963	channel.c	FUNCTION_70	CALL_1
0x4002fc7	      0xe800000000	                          call 0x4002fcc	      2963	channel.c	FUNCTION_70	CALL_1
0x4002fcc	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      2964	channel.c	FUNCTION_70
0x4002fd0	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x4002fd3	    0x488983e00300	            mov qword [rbx + 0x3e0], rax	      2964	channel.c	FUNCTION_70
0x4002fda	     0xf8490010000	                            je 0x4003170	      2965	channel.c	FUNCTION_70	IF_1
0x4002fe0	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4002fe8	          0x4c89ff	                            mov rdi, r15	      2969	channel.c	FUNCTION_70	CALL_2
0x4002feb	      0xe800000000	                          call 0x4002ff0	      2969	channel.c	FUNCTION_70	CALL_2
0x4002ff0	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ff7	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4002ffa	     0xf8571ffffff	                           jne 0x4002f71	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003000	      0x448b642408	               mov r12d, dword [rsp + 8]	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003005	          0x4989ee	                            mov r14, rbp	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003008	      0xe971ffffff	                           jmp 0x4002f7e	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x400300d	           0xf1f00	                         nop dword [rax]	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003010	          0x4585ed	                         test r13d, r13d	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4003013	     0xf853f010000	                           jne 0x4003158	      3787	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_13
0x4003019	    0xc78374040000	              mov dword [rbx + 0x474], 0	      3863	channel.c	FUNCTION_87	FOR_1
0x4003023	          0x4889ef	                            mov rdi, rbp	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x4003026	      0xe800000000	                          call 0x400302b	      1355	channel.c	ELSE_2	FUNCTION_36	CALL_6
0x400302b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003030	    0x644833042528	                xor rax, qword fs:[0x28]	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003039	     0xf8579030000	                           jne 0x40033b8	      1356	channel.c	ELSE_2	FUNCTION_36
0x400303f	        0x4883c438	                           add rsp, 0x38	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003043	              0x5b	                                 pop rbx	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003044	              0x5d	                                 pop rbp	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003045	            0x415c	                                 pop r12	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003047	            0x415d	                                 pop r13	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003049	            0x415e	                                 pop r14	      1356	channel.c	ELSE_2	FUNCTION_36
0x400304b	            0x415f	                                 pop r15	      1356	channel.c	ELSE_2	FUNCTION_36
0x400304d	              0xc3	                                     ret	      1356	channel.c	ELSE_2	FUNCTION_36
0x400304e	            0x6690	                                     nop	      1356	channel.c	ELSE_2	FUNCTION_36
0x4003050	          0x4585e4	                         test r12d, r12d	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003053	            0x7e2d	                           jle 0x4003082	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003055	      0x418d5424ff	                      lea edx, [r12 - 1]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x400305a	          0x4889e8	                            mov rax, rbp	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x400305d	      0x488d541501	                lea rdx, [rbp + rdx + 1]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003062	            0xeb0d	                           jmp 0x4003071	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003064	         0xf1f4000	                         nop dword [rax]	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003068	        0x4883c001	                              add rax, 1	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x400306c	          0x4839d0	                            cmp rax, rdx	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x400306f	            0x7411	                            je 0x4003082	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003071	          0x80380a	                     cmp byte [rax], 0xa	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4003074	            0x75f2	                           jne 0x4003068	      1348	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4003076	          0xc60000	                       mov byte [rax], 0	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x4003079	        0x4883c001	                              add rax, 1	      1349	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1	IF_3
0x400307d	          0x4839d0	                            cmp rax, rdx	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003080	            0x75ef	                           jne 0x4003071	      1347	channel.c	ELSE_2	FUNCTION_36	ELSE_1	FOR_1
0x4003082	    0x42c6442d000a	               mov byte [rbp + r13], 0xa	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x4003088	      0xe9d4fdffff	                           jmp 0x4002e61	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x400308d	           0xf1f00	                         nop dword [rax]	      1351	channel.c	ELSE_2	FUNCTION_36	ELSE_1
0x4003090	          0x4489c2	                            mov edx, r8d	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4003093	      0xbe00000000	                              mov esi, 0	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x4003098	          0x4889df	                            mov rdi, rbx	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x400309b	            0x31c0	                            xor eax, eax	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x400309d	      0x448944240c	              mov dword [rsp + 0xc], r8d	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40030a2	      0xe800000000	                          call 0x40030a7	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40030a7	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40030ac	      0xe905ffffff	                           jmp 0x4002fb6	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40030b1	     0xf1f80000000	                         nop dword [rax]	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40030b8	    0x8bbb74040000	           mov edi, dword [rbx + 0x474] 	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40030be	            0x85ff	                           test edi, edi	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40030c0	            0x7532	                           jne 0x40030f4	      3710	channel.c	FUNCTION_87	IF_1	IF_2
0x40030c2	      0xba00000000	                              mov edx, 0	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40030c7	      0xbe00000000	                              mov esi, 0	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40030cc	          0x4889df	                            mov rdi, rbx	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40030cf	            0x31c0	                            xor eax, eax	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40030d1	      0xe80aefffff	                       call sym.ch_error	      3712	channel.c	FUNCTION_87	IF_1	IF_2	CALL_1
0x40030d6	      0xba05000000	                              mov edx, 5	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40030db	      0xbe00000000	                              mov esi, 0	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40030e0	            0x31ff	                            xor edi, edi	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40030e2	      0xe800000000	                          call 0x40030e7	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40030e7	      0xbe00000000	                              mov esi, 0	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40030ec	          0x4889c7	                            mov rdi, rax	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40030ef	      0xe800000000	                          call 0x40030f4	      3713	channel.c	FUNCTION_87	IF_1	IF_2	CALL_3
0x40030f4	    0xc78374040000	              mov dword [rbx + 0x474], 1	      3715	channel.c	FUNCTION_87	IF_1
0x40030fe	      0xe920ffffff	                           jmp 0x4003023	      3715	channel.c	FUNCTION_87	IF_1
0x4003103	       0xf1f440000	                   nop dword [rax + rax]	      3715	channel.c	FUNCTION_87	IF_1
0x4003108	        0x8944240c	              mov dword [rsp + 0xc], eax	      3715	channel.c	FUNCTION_87	IF_1
0x400310c	      0xe800000000	                          call 0x4003111	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4003111	          0x83380b	                    cmp dword [rax], 0xb	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4003114	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4003119	     0xf8419010000	                            je 0x4003238	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x400311f	          0x4539c4	                           cmp r12d, r8d	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4003122	     0xf84f1feffff	                            je 0x4003019	      3852	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21
0x4003128	    0x8b9374040000	           mov edx, dword [rbx + 0x474] 	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x400312e	            0x85d2	                           test edx, edx	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4003130	            0x75c2	                           jne 0x40030f4	      3854	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22
0x4003132	      0xba00000000	                              mov edx, 0	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4003137	      0xbe00000000	                              mov esi, 0	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x400313c	          0x4889df	                            mov rdi, rbx	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x400313f	            0x31c0	                            xor eax, eax	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4003141	      0xe89aeeffff	                       call sym.ch_error	      3856	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_21
0x4003146	      0xba05000000	                              mov edx, 5	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x400314b	      0xbe00000000	                              mov esi, 0	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4003150	            0xeb8e	                           jmp 0x40030e0	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4003152	    0x660f1f440000	                    nop word [rax + rax]	      3857	channel.c	FUNCTION_87	FOR_1	ELSE_7	IF_21	IF_22	CALL_23
0x4003158	      0xbe00000000	                              mov esi, 0	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x400315d	          0x4889df	                            mov rdi, rbx	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4003160	            0x31c0	                            xor eax, eax	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4003162	      0xe800000000	                          call 0x4003167	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4003167	      0xe9adfeffff	                           jmp 0x4003019	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x400316c	         0xf1f4000	                         nop dword [rax]	      3788	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	CALL_12
0x4003170	    0x48c783e80300	              mov qword [rbx + 0x3e8], 0	      2966	channel.c	FUNCTION_70	IF_1
0x400317b	      0xe968feffff	                           jmp 0x4002fe8	      2966	channel.c	FUNCTION_70	IF_1
0x4003180	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003187	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x400318a	     0xf8493feffff	                            je 0x4003023	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003190	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      3738	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003194	          0x486310	                 movsxd rdx, dword [rax]	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003197	        0x8b7c2404	                mov edi, dword [rsp + 4]	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x400319b	          0x4c89f6	                            mov rsi, r14	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x400319e	          0x4989d4	                            mov r12, rdx	      3739	channel.c	FUNCTION_87	FOR_1	IF_4
0x40031a1	      0xe800000000	                          call 0x40031a6	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40031a6	            0x85c0	                           test eax, eax	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40031a8	          0x4189c0	                            mov r8d, eax	      3755	channel.c	FUNCTION_87	FOR_1	ELSE_2
0x40031ab	     0xf88d8010000	                            js 0x4003389	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40031b1	    0x8b83c4030000	           mov eax, dword [rbx + 0x3c4] 	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40031b7	            0x85c0	                           test eax, eax	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40031b9	     0xf8460ffffff	                            je 0x400311f	      3772	channel.c	FUNCTION_87	FOR_1	IF_9
0x40031bf	          0x4489c2	                            mov edx, r8d	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40031c2	            0x31c0	                            xor eax, eax	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40031c4	      0xbe00000000	                              mov esi, 0	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40031c9	          0x4889df	                            mov rdi, rbx	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40031cc	      0x448944240c	              mov dword [rsp + 0xc], r8d	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40031d1	    0x4c8bbbe00300	           mov r15, qword [rbx + 0x3e0] 	      3774	channel.c	FUNCTION_87	FOR_1	IF_9
0x40031d8	      0xe800000000	                          call 0x40031dd	      3777	channel.c	FUNCTION_87	FOR_1	IF_9	CALL_10
0x40031dd	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x40031e2	          0x4539c4	                           cmp r12d, r8d	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x40031e5	            0x7559	                           jne 0x4003240	      3778	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11
0x40031e7	          0x4d85ff	                           test r15, r15	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x40031ea	     0xf8468ffffff	                            je 0x4003158	      3781	channel.c	FUNCTION_87	FOR_1	IF_9	IF_11	IF_12
0x40031f0	          0x4c89ff	                            mov rdi, r15	      2963	channel.c	FUNCTION_70	CALL_1
0x40031f3	      0xe800000000	                          call 0x40031f8	      2963	channel.c	FUNCTION_70	CALL_1
0x40031f8	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      2964	channel.c	FUNCTION_70
0x40031fc	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x40031ff	    0x488983e00300	            mov qword [rbx + 0x3e0], rax	      2964	channel.c	FUNCTION_70
0x4003206	     0xf849c010000	                            je 0x40033a8	      2965	channel.c	FUNCTION_70	IF_1
0x400320c	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4003214	          0x4c89ff	                            mov rdi, r15	      2969	channel.c	FUNCTION_70	CALL_2
0x4003217	      0xe800000000	                          call 0x400321c	      2969	channel.c	FUNCTION_70	CALL_2
0x400321c	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003223	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003226	     0xf8564ffffff	                           jne 0x4003190	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x400322c	      0xe9f2fdffff	                           jmp 0x4003023	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003231	     0xf1f80000000	                         nop dword [rax]	      3735	channel.c	FUNCTION_87	FOR_1	IF_4
0x4003238	          0x4531c0	                            xor r8d, r8d	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x400323b	      0xe958fdffff	                           jmp 0x4002f98	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x4003240	          0x4d85ff	                           test r15, r15	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4003243	     0xf8421010000	                            je 0x400336a	      3793	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14
0x4003249	          0x4585c0	                           test r8d, r8d	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x400324c	          0x4989ee	                            mov r14, rbp	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x400324f	            0x7e22	                           jle 0x4003273	      3795	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4003251	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      3798	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_13
0x4003255	          0x4529c4	                           sub r12d, r8d	        59	string3.h	FUNCTION_136	CALL_3
0x4003258	          0x4963f0	                         movsxd rsi, r8d	        59	string3.h	FUNCTION_136	CALL_3
0x400325b	          0x4963d4	                        movsxd rdx, r12d	        59	string3.h	FUNCTION_136	CALL_3
0x400325e	      0x4489442404	                mov dword [rsp + 4], r8d	        59	string3.h	FUNCTION_136	CALL_3
0x4003263	          0x4801fe	                            add rsi, rdi	        59	string3.h	FUNCTION_136	CALL_3
0x4003266	      0xe800000000	                          call 0x400326b	        59	string3.h	FUNCTION_136	CALL_3
0x400326b	      0x448b442404	                mov r8d, dword [rsp + 4]	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4003270	          0x452907	                    sub dword [r15], r8d	      3801	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x4003273	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4003278	            0x31c0	                            xor eax, eax	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x400327a	      0xbe00000000	                              mov esi, 0	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x400327f	          0x4889df	                            mov rdi, rbx	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4003282	          0x4489fa	                           mov edx, r15d	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x4003285	      0xe800000000	                          call 0x400328a	      3811	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	CALL_14
0x400328a	    0x4c8ba3e80300	           mov r12, qword [rbx + 0x3e8] 	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003291	          0x4d85e4	                           test r12, r12	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003294	            0x7412	                            je 0x40032a8	      3815	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x4003296	        0x418b0424	                    mov eax, dword [r12]	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400329a	          0x4401f8	                           add eax, r15d	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x400329d	      0x3d9f0f0000	                          cmp eax, 0xf9f	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x40032a2	     0xf8e8b000000	                           jle 0x4003333	      3816	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16
0x40032a8	      0xbf28000000	                           mov edi, 0x28	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x40032ad	      0xe800000000	                          call 0x40032b2	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x40032b2	          0x4885c0	                           test rax, rax	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40032b5	          0x4989c4	                            mov r12, rax	      3831	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_17
0x40032b8	     0xf845bfdffff	                            je 0x4003019	      3833	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40032be	    0x488b83e80300	           mov rax, qword [rbx + 0x3e8] 	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40032c5	    0x49c744241800	               mov qword [r12 + 0x18], 0	      3836	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40032ce	      0x4989442420	             mov qword [r12 + 0x20], rax	      3835	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40032d3	    0x488b83e80300	           mov rax, qword [rbx + 0x3e8] 	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40032da	          0x4885c0	                           test rax, rax	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40032dd	     0xf849a000000	                            je 0x400337d	      3837	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x40032e3	        0x4c896018	             mov qword [rax + 0x18], r12	      3840	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x40032e7	      0xbae8030000	                          mov edx, 0x3e8	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x40032ec	      0xbe01000000	                              mov esi, 1	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x40032f1	          0x4c89e7	                            mov rdi, r12	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x40032f4	    0x4c89a3e80300	            mov qword [rbx + 0x3e8], r12	      3841	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x40032fb	      0xe800000000	                          call 0x4003300	      3842	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_18
0x4003300	        0x8b742408	                mov esi, dword [rsp + 8]	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4003304	          0x4c89e7	                            mov rdi, r12	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4003307	      0xe800000000	                          call 0x400330c	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x400330c	          0x83f801	                              cmp eax, 1	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x400330f	     0xf8504fdffff	                           jne 0x4003019	      3843	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_19
0x4003315	      0x448b7c2408	               mov r15d, dword [rsp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x400331a	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	        59	string3.h	FUNCTION_136	CALL_3
0x400331f	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_136	CALL_3
0x4003322	          0x4963d7	                        movsxd rdx, r15d	        59	string3.h	FUNCTION_136	CALL_3
0x4003325	      0xe800000000	                          call 0x400332a	        59	string3.h	FUNCTION_136	CALL_3
0x400332a	        0x45893c24	                   mov dword [r12], r15d	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x400332e	      0xe9e6fcffff	                           jmp 0x4003019	      3846	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x4003333	        0x8b742408	                mov esi, dword [rsp + 8]	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4003337	          0x4c89e7	                            mov rdi, r12	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x400333a	      0xe800000000	                          call 0x400333f	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x400333f	          0x83f801	                              cmp eax, 1	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4003342	     0xf85d1fcffff	                           jne 0x4003019	      3821	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_15
0x4003348	        0x49633c24	                 movsxd rdi, dword [r12]	        59	string3.h	FUNCTION_136	CALL_3
0x400334c	      0x448b7c2408	               mov r15d, dword [rsp + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x4003351	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_136	CALL_3
0x4003354	      0x49037c2410	             add rdi, qword [r12 + 0x10]	        59	string3.h	FUNCTION_136	CALL_3
0x4003359	          0x4963d7	                        movsxd rdx, r15d	        59	string3.h	FUNCTION_136	CALL_3
0x400335c	      0xe800000000	                          call 0x4003361	        59	string3.h	FUNCTION_136	CALL_3
0x4003361	        0x45013c24	                   add dword [r12], r15d	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x4003365	      0xe9affcffff	                           jmp 0x4003019	      3826	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x400336a	          0x4963c0	                         movsxd rax, r8d	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x400336d	          0x4529c4	                           sub r12d, r8d	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4003370	          0x4901c6	                            add r14, rax	      3808	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4003373	      0x4489642408	               mov dword [rsp + 8], r12d	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x4003378	      0xe9f6feffff	                           jmp 0x4003273	      3809	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_4
0x400337d	    0x4c89a3e00300	            mov qword [rbx + 0x3e0], r12	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4003384	      0xe95effffff	                           jmp 0x40032e7	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x4003389	        0x8944240c	              mov dword [rsp + 0xc], eax	      3838	channel.c	FUNCTION_87	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x400338d	      0xe800000000	                          call 0x4003392	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4003392	          0x83380b	                    cmp dword [rax], 0xb	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x4003395	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x400339a	     0xf857ffdffff	                           jne 0x400311f	      3765	channel.c	FUNCTION_87	FOR_1	IF_8
0x40033a0	          0x4531c0	                            xor r8d, r8d	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x40033a3	      0xe909feffff	                           jmp 0x40031b1	      3770	channel.c	FUNCTION_87	FOR_1	IF_8
0x40033a8	    0x48c783e80300	              mov qword [rbx + 0x3e8], 0	      2966	channel.c	FUNCTION_70	IF_1
0x40033b3	      0xe95cfeffff	                           jmp 0x4003214	      2966	channel.c	FUNCTION_70	IF_1
0x40033b8	      0xe800000000	                          call 0x40033bd	      1356	channel.c	ELSE_2	FUNCTION_36
channel_gui_register_all	WHILE,0:FOR,1:CALL,1:IF,0:ELSE,0:functions,0:DO,0:SWITCH,0	97
0x40038a0	              0x53	                                push rbx	       595	channel.c	FUNCTION_24
0x40038a1	    0x488b1d000000	            mov rbx, qword [0x040038a8] 	       598	channel.c	FUNCTION_24	FOR_1
0x40038a8	          0x4885db	                           test rbx, rbx	       598	channel.c	FUNCTION_24	FOR_1
0x40038ab	     0xf8463010000	                            je 0x4003a14	       598	channel.c	FUNCTION_24	FOR_1
0x40038b1	     0xf1f80000000	                         nop dword [rax]	       598	channel.c	FUNCTION_24	FOR_1
0x40038b8	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	       578	channel.c	FUNCTION_23	IF_1
0x40038bb	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       578	channel.c	FUNCTION_23	IF_1
0x40038be	            0x7458	                            je 0x4003918	       578	channel.c	FUNCTION_23	IF_1
0x40038c0	    0x8b0500000000	            mov eax, dword [0x040038c6] 	       521	channel.c	FUNCTION_22	IF_1
0x40038c6	            0x85c0	                           test eax, eax	       521	channel.c	FUNCTION_22	IF_1
0x40038c8	            0x750a	                           jne 0x40038d4	       521	channel.c	FUNCTION_22	IF_1
0x40038ca	    0x8b0500000000	            mov eax, dword [0x040038d0] 	       521	channel.c	FUNCTION_22	IF_1
0x40038d0	            0x85c0	                           test eax, eax	       521	channel.c	FUNCTION_22	IF_1
0x40038d2	            0x7444	                            je 0x4003918	       521	channel.c	FUNCTION_22	IF_1
0x40038d4	    0x8b83a4040000	           mov eax, dword [rbx + 0x4a4] 	       525	channel.c	FUNCTION_22	IF_2
0x40038da	            0x85c0	                           test eax, eax	       525	channel.c	FUNCTION_22	IF_2
0x40038dc	            0x753a	                           jne 0x4003918	       525	channel.c	FUNCTION_22	IF_2
0x40038de	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	       547	channel.c	FUNCTION_22	IF_4
0x40038e1	            0x85c0	                           test eax, eax	       547	channel.c	FUNCTION_22	IF_4
0x40038e3	            0x7533	                           jne 0x4003918	       547	channel.c	FUNCTION_22	IF_4
0x40038e5	      0xba00000000	                              mov edx, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40038ea	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40038ef	          0x4889df	                            mov rdi, rbx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40038f2	            0x31c0	                            xor eax, eax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40038f4	      0xe800000000	                          call 0x40038f9	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40038f9	        0x48634b18	         movsxd rcx, dword [rbx + 0x18] 	       568	channel.c	FUNCTION_22	IF_4
0x40038fd	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003902	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003907	          0x4889cf	                            mov rdi, rcx	       568	channel.c	FUNCTION_22	IF_4
0x400390a	      0xe800000000	                          call 0x400390f	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x400390f	          0x89431c	             mov dword [rbx + 0x1c], eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003912	    0x660f1f440000	                    nop word [rax + rax]	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003918	    0x8b8b28010000	           mov ecx, dword [rbx + 0x128] 	       580	channel.c	FUNCTION_23	IF_2
0x400391e	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       580	channel.c	FUNCTION_23	IF_2
0x4003921	            0x746d	                            je 0x4003990	       580	channel.c	FUNCTION_23	IF_2
0x4003923	          0x3b4b18	            cmp ecx, dword [rbx + 0x18] 	       581	channel.c	FUNCTION_23	IF_2
0x4003926	            0x7468	                            je 0x4003990	       581	channel.c	FUNCTION_23	IF_2
0x4003928	    0x448b1d000000	           mov r11d, dword [0x0400392f] 	       521	channel.c	FUNCTION_22	IF_1
0x400392f	          0x4585db	                         test r11d, r11d	       521	channel.c	FUNCTION_22	IF_1
0x4003932	            0x750c	                           jne 0x4003940	       521	channel.c	FUNCTION_22	IF_1
0x4003934	    0x448b15000000	           mov r10d, dword [0x0400393b] 	       521	channel.c	FUNCTION_22	IF_1
0x400393b	          0x4585d2	                         test r10d, r10d	       521	channel.c	FUNCTION_22	IF_1
0x400393e	            0x7450	                            je 0x4003990	       521	channel.c	FUNCTION_22	IF_1
0x4003940	    0x448b8ba40400	           mov r9d, dword [rbx + 0x4a4] 	       525	channel.c	FUNCTION_22	IF_2
0x4003947	          0x4585c9	                           test r9d, r9d	       525	channel.c	FUNCTION_22	IF_2
0x400394a	            0x7544	                           jne 0x4003990	       525	channel.c	FUNCTION_22	IF_2
0x400394c	    0x448b832c0100	           mov r8d, dword [rbx + 0x12c] 	       547	channel.c	FUNCTION_22	IF_4
0x4003953	          0x4585c0	                           test r8d, r8d	       547	channel.c	FUNCTION_22	IF_4
0x4003956	            0x7538	                           jne 0x4003990	       547	channel.c	FUNCTION_22	IF_4
0x4003958	      0xba00000000	                              mov edx, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x400395d	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003962	          0x4889df	                            mov rdi, rbx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003965	            0x31c0	                            xor eax, eax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003967	      0xe800000000	                          call 0x400396c	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x400396c	    0x48638b280100	        movsxd rcx, dword [rbx + 0x128] 	       568	channel.c	FUNCTION_22	IF_4
0x4003973	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003978	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x400397d	          0x4889cf	                            mov rdi, rcx	       568	channel.c	FUNCTION_22	IF_4
0x4003980	      0xe800000000	                          call 0x4003985	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003985	    0x89832c010000	            mov dword [rbx + 0x12c], eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x400398b	       0xf1f440000	                   nop dword [rax + rax]	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003990	    0x8b8b38020000	           mov ecx, dword [rbx + 0x238] 	       583	channel.c	FUNCTION_23	IF_3
0x4003996	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       583	channel.c	FUNCTION_23	IF_3
0x4003999	            0x746d	                            je 0x4003a08	       583	channel.c	FUNCTION_23	IF_3
0x400399b	          0x3b4b18	            cmp ecx, dword [rbx + 0x18] 	       584	channel.c	FUNCTION_23	IF_3
0x400399e	            0x7468	                            je 0x4003a08	       584	channel.c	FUNCTION_23	IF_3
0x40039a0	    0x3b8b28010000	           cmp ecx, dword [rbx + 0x128] 	       585	channel.c	FUNCTION_23	IF_3
0x40039a6	            0x7460	                            je 0x4003a08	       585	channel.c	FUNCTION_23	IF_3
0x40039a8	    0x8b3d00000000	            mov edi, dword [0x040039ae] 	       521	channel.c	FUNCTION_22	IF_1
0x40039ae	            0x85ff	                           test edi, edi	       521	channel.c	FUNCTION_22	IF_1
0x40039b0	            0x750a	                           jne 0x40039bc	       521	channel.c	FUNCTION_22	IF_1
0x40039b2	    0x8b3500000000	            mov esi, dword [0x040039b8] 	       521	channel.c	FUNCTION_22	IF_1
0x40039b8	            0x85f6	                           test esi, esi	       521	channel.c	FUNCTION_22	IF_1
0x40039ba	            0x744c	                            je 0x4003a08	       521	channel.c	FUNCTION_22	IF_1
0x40039bc	    0x8b93a4040000	           mov edx, dword [rbx + 0x4a4] 	       525	channel.c	FUNCTION_22	IF_2
0x40039c2	            0x85d2	                           test edx, edx	       525	channel.c	FUNCTION_22	IF_2
0x40039c4	            0x7542	                           jne 0x4003a08	       525	channel.c	FUNCTION_22	IF_2
0x40039c6	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	       547	channel.c	FUNCTION_22	IF_4
0x40039cc	            0x85c0	                           test eax, eax	       547	channel.c	FUNCTION_22	IF_4
0x40039ce	            0x7538	                           jne 0x4003a08	       547	channel.c	FUNCTION_22	IF_4
0x40039d0	      0xba00000000	                              mov edx, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40039d5	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40039da	          0x4889df	                            mov rdi, rbx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40039dd	            0x31c0	                            xor eax, eax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40039df	      0xe800000000	                          call 0x40039e4	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x40039e4	    0x48638b380200	        movsxd rcx, dword [rbx + 0x238] 	       568	channel.c	FUNCTION_22	IF_4
0x40039eb	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40039f0	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40039f5	          0x4889cf	                            mov rdi, rcx	       568	channel.c	FUNCTION_22	IF_4
0x40039f8	      0xe800000000	                          call 0x40039fd	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40039fd	    0x89833c020000	            mov dword [rbx + 0x23c], eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003a03	       0xf1f440000	                   nop dword [rax + rax]	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003a08	          0x488b1b	                    mov rbx, qword [rbx]	       598	channel.c	FUNCTION_24	FOR_1
0x4003a0b	          0x4885db	                           test rbx, rbx	       598	channel.c	FUNCTION_24	FOR_1
0x4003a0e	     0xf85a4feffff	                           jne 0x40038b8	       598	channel.c	FUNCTION_24	FOR_1
0x4003a14	              0x5b	                                 pop rbx	       600	channel.c	FUNCTION_24
0x4003a15	              0xc3	                                     ret	       600	channel.c	FUNCTION_24
win32_build_cmd	WHILE,0:FOR,1:CALL,5:IF,3:ELSE,0:functions,0:DO,0:SWITCH,0	204
0x400b990	            0x4157	                                push r15	      5236	channel.c	FUNCTION_119
0x400b992	            0x4156	                                push r14	      5236	channel.c	FUNCTION_119
0x400b994	            0x4155	                                push r13	      5236	channel.c	FUNCTION_119
0x400b996	            0x4154	                                push r12	      5236	channel.c	FUNCTION_119
0x400b998	          0x4989f4	                            mov r12, rsi	      5236	channel.c	FUNCTION_119
0x400b99b	              0x55	                                push rbp	      5236	channel.c	FUNCTION_119
0x400b99c	              0x53	                                push rbx	      5236	channel.c	FUNCTION_119
0x400b99d	        0x4883ec28	                           sub rsp, 0x28	      5236	channel.c	FUNCTION_119
0x400b9a1	          0x488b2f	                    mov rbp, qword [rdi]	      5240	channel.c	FUNCTION_119	FOR_1
0x400b9a4	    0x64488b042528	                mov rax, qword fs:[0x28]	      5236	channel.c	FUNCTION_119
0x400b9ad	      0x4889442418	             mov qword [rsp + 0x18], rax	      5236	channel.c	FUNCTION_119
0x400b9b2	            0x31c0	                            xor eax, eax	      5236	channel.c	FUNCTION_119
0x400b9b4	          0x4885ed	                           test rbp, rbp	      5240	channel.c	FUNCTION_119	FOR_1
0x400b9b7	     0xf8463020000	                            je 0x400bc20	      5240	channel.c	FUNCTION_119	FOR_1
0x400b9bd	           0xf1f00	                         nop dword [rax]	      5240	channel.c	FUNCTION_119	FOR_1
0x400b9c0	        0x488d7d10	                   lea rdi, [rbp + 0x10]	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400b9c4	      0xe800000000	                          call 0x400b9c9	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400b9c9	          0x4885c0	                           test rax, rax	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x400b9cc	          0x4989c5	                            mov r13, rax	      5242	channel.c	FUNCTION_119	FOR_1	CALL_1
0x400b9cf	     0xf84b1020000	                            je 0x400bc86	      5243	channel.c	FUNCTION_119	FOR_1	IF_1
0x400b9d5	          0x4889c7	                            mov rdi, rax	      5168	channel.c	FUNCTION_118	CALL_1
0x400b9d8	      0xe800000000	                          call 0x400b9dd	      5168	channel.c	FUNCTION_118	CALL_1
0x400b9dd	      0x4c896c2408	                mov qword [rsp + 8], r13	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9e2	          0x4989c6	                            mov r14, rax	      5168	channel.c	FUNCTION_118	CALL_1
0x400b9e5	      0x410fb64500	                   movzx eax, byte [r13]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9ea	            0x84c0	                             test al, al	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9ec	     0xf8480020000	                            je 0x400bc72	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9f2	          0x4589f7	                          mov r15d, r14d	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9f5	            0x31db	                            xor ebx, ebx	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9f7	          0x4c89ef	                            mov rdi, r13	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9fa	            0xeb13	                           jmp 0x400ba0f	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400b9fc	         0xf1f4000	                         nop dword [rax]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba00	          0x4801c7	                            add rdi, rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba03	      0x48897c2408	                mov qword [rsp + 8], rdi	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba08	           0xfb607	                   movzx eax, byte [rdi]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba0b	            0x84c0	                             test al, al	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba0d	            0x744b	                            je 0x400ba5a	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba0f	            0x3c22	                            cmp al, 0x22	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400ba11	     0xf8449010000	                            je 0x400bb60	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400ba17	            0x3c5c	                            cmp al, 0x5c	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400ba19	     0xf8441010000	                            je 0x400bb60	      5172	channel.c	FUNCTION_118	FOR_1	IF_1
0x400ba1f	            0x3c20	                            cmp al, 0x20	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400ba21	     0xf8429010000	                            je 0x400bb50	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400ba27	            0x3c09	                               cmp al, 9	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400ba29	     0xf8421010000	                            je 0x400bb50	      5174	channel.c	FUNCTION_118	FOR_1	IF_2
0x400ba2f	    0x8b1500000000	            mov edx, dword [0x0400ba35] 	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba35	      0xb801000000	                              mov eax, 1	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba3a	            0x85d2	                           test edx, edx	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba3c	            0x74c2	                            je 0x400ba00	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba3e	    0xff1500000000	                 call qword [0x0400ba44]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba44	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba49	            0x4898	                                    cdqe	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba4b	          0x4801c7	                            add rdi, rax	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba4e	      0x48897c2408	                mov qword [rsp + 8], rdi	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba53	           0xfb607	                   movzx eax, byte [rdi]	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba56	            0x84c0	                             test al, al	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba58	            0x75b5	                           jne 0x400ba0f	      5170	channel.c	FUNCTION_118	FOR_1	CALL_2
0x400ba5a	            0x85db	                           test ebx, ebx	      5178	channel.c	FUNCTION_118	IF_3
0x400ba5c	            0x7409	                            je 0x400ba67	      5178	channel.c	FUNCTION_118	IF_3
0x400ba5e	        0x4183c702	                             add r15d, 2	      5179	channel.c	FUNCTION_118	IF_3
0x400ba62	      0xbb01000000	                              mov ebx, 1	      5179	channel.c	FUNCTION_118	IF_3
0x400ba67	          0x4539fe	                          cmp r14d, r15d	      5181	channel.c	FUNCTION_118	IF_4
0x400ba6a	     0xf8402020000	                            je 0x400bc72	      5181	channel.c	FUNCTION_118	IF_4
0x400ba70	        0x4183c701	                             add r15d, 1	      5185	channel.c	FUNCTION_118	CALL_4
0x400ba74	          0x4489ff	                           mov edi, r15d	      5185	channel.c	FUNCTION_118	CALL_4
0x400ba77	      0xe800000000	                          call 0x400ba7c	      5185	channel.c	FUNCTION_118	CALL_4
0x400ba7c	          0x4885c0	                           test rax, rax	      5186	channel.c	FUNCTION_118	IF_5
0x400ba7f	          0x4989c6	                            mov r14, rax	      5185	channel.c	FUNCTION_118	CALL_4
0x400ba82	     0xf84fe010000	                            je 0x400bc86	      5186	channel.c	FUNCTION_118	IF_5
0x400ba88	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_138	CALL_6
0x400ba8a	          0x4963d7	                        movsxd rdx, r15d	        90	string3.h	FUNCTION_138	CALL_6
0x400ba8d	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_138	CALL_6
0x400ba90	      0xe800000000	                          call 0x400ba95	        90	string3.h	FUNCTION_138	CALL_6
0x400ba95	            0x85db	                           test ebx, ebx	      5192	channel.c	FUNCTION_118	IF_6
0x400ba97	     0xf85c3010000	                           jne 0x400bc60	      5192	channel.c	FUNCTION_118	IF_6
0x400ba9d	      0x4c89742410	             mov qword [rsp + 0x10], r14	      5190	channel.c	FUNCTION_118
0x400baa2	      0x4c896c2408	                mov qword [rsp + 8], r13	      5195	channel.c	FUNCTION_118	FOR_2
0x400baa7	          0x4531c0	                            xor r8d, r8d	      5161	channel.c	FUNCTION_118
0x400baaa	            0xeb33	                           jmp 0x400badf	      5161	channel.c	FUNCTION_118
0x400baac	         0xf1f4000	                         nop dword [rax]	      5161	channel.c	FUNCTION_118
0x400bab0	            0x3c5c	                            cmp al, 0x5c	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bab2	     0xf85b8000000	                           jne 0x400bb70	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bab8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400babd	        0x4183c001	                              add r8d, 1	      5207	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bac1	        0x488d5001	                      lea rdx, [rax + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bac5	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400baca	        0x498d5501	                      lea rdx, [r13 + 1]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bace	      0x4889542408	                mov qword [rsp + 8], rdx	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bad3	      0x410fb65500	                   movzx edx, byte [r13]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bad8	            0x8810	                      mov byte [rax], dl	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bada	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      5208	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400badf	      0x410fb64500	                   movzx eax, byte [r13]	      5195	channel.c	FUNCTION_118	FOR_2
0x400bae4	            0x84c0	                             test al, al	      5195	channel.c	FUNCTION_118	FOR_2
0x400bae6	     0xf84bc000000	                            je 0x400bba8	      5195	channel.c	FUNCTION_118	FOR_2
0x400baec	            0x3c22	                            cmp al, 0x22	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400baee	            0x75c0	                           jne 0x400bab0	      5197	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400baf0	            0x31c0	                            xor eax, eax	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400baf2	          0x4585c0	                           test r8d, r8d	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400baf5	            0x7422	                            je 0x400bb19	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400baf7	    0x660f1f840000	                    nop word [rax + rax]	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb00	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb05	          0x83c001	                              add eax, 1	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb08	          0x4439c0	                            cmp eax, r8d	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb0b	        0x488d4a01	                      lea rcx, [rdx + 1]	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb0f	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb14	          0xc6025c	                    mov byte [rdx], 0x5c	      5201	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb17	            0x75e7	                           jne 0x400bb00	      5200	channel.c	FUNCTION_118	FOR_2	SWITCH_1	FOR_3
0x400bb19	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb1e	          0x4531c0	                            xor r8d, r8d	      5202	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb21	        0x488d5001	                      lea rdx, [rax + 1]	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb25	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb2a	          0xc6005c	                    mov byte [rax], 0x5c	      5203	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb2d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb32	        0x488d5001	                      lea rdx, [rax + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb36	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb3b	      0x488b542408	                mov rdx, qword [rsp + 8]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb40	        0x488d4a01	                      lea rcx, [rdx + 1]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb44	      0x48894c2408	                mov qword [rsp + 8], rcx	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb49	           0xfb612	                   movzx edx, byte [rdx]	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb4c	            0x8810	                      mov byte [rax], dl	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb4e	            0xeb8a	                           jmp 0x400bada	      5204	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb50	      0xbb01000000	                              mov ebx, 1	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x400bb55	      0xe9d5feffff	                           jmp 0x400ba2f	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x400bb5a	    0x660f1f440000	                    nop word [rax + rax]	      5175	channel.c	FUNCTION_118	FOR_1	IF_2
0x400bb60	        0x4183c701	                             add r15d, 1	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x400bb64	      0xe9b6feffff	                           jmp 0x400ba1f	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x400bb69	     0xf1f80000000	                         nop dword [rax]	      5173	channel.c	FUNCTION_118	FOR_1	IF_1
0x400bb70	    0x8b0500000000	            mov eax, dword [0x0400bb76] 	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb76	            0x85c0	                           test eax, eax	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb78	     0xf85ca000000	                           jne 0x400bc48	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb7e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb83	          0x4531c0	                            xor r8d, r8d	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bb86	        0x488d5001	                      lea rdx, [rax + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb8a	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb8f	        0x498d5501	                      lea rdx, [r13 + 1]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb93	      0x4889542408	                mov qword [rsp + 8], rdx	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb98	      0x410fb65500	                   movzx edx, byte [r13]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb9d	            0x8810	                      mov byte [rax], dl	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bb9f	      0xe936ffffff	                           jmp 0x400bada	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bba4	         0xf1f4000	                         nop dword [rax]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bba8	            0x85db	                           test ebx, ebx	      5218	channel.c	FUNCTION_118	IF_7
0x400bbaa	            0x7436	                            je 0x400bbe2	      5218	channel.c	FUNCTION_118	IF_7
0x400bbac	            0x31c0	                            xor eax, eax	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbae	          0x4585c0	                           test r8d, r8d	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbb1	            0x741e	                            je 0x400bbd1	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbb3	       0xf1f440000	                   nop dword [rax + rax]	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbb8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbbd	          0x83c001	                              add eax, 1	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbc0	          0x4139c0	                            cmp r8d, eax	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbc3	        0x488d4a01	                      lea rcx, [rdx + 1]	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbc7	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbcc	          0xc6025c	                    mov byte [rdx], 0x5c	      5221	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbcf	            0x75e7	                           jne 0x400bbb8	      5220	channel.c	FUNCTION_118	IF_7	FOR_4
0x400bbd1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5222	channel.c	FUNCTION_118	IF_7
0x400bbd6	        0x488d5001	                      lea rdx, [rax + 1]	      5222	channel.c	FUNCTION_118	IF_7
0x400bbda	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5222	channel.c	FUNCTION_118	IF_7
0x400bbdf	          0xc60022	                    mov byte [rax], 0x22	      5222	channel.c	FUNCTION_118	IF_7
0x400bbe2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5224	channel.c	FUNCTION_118
0x400bbe7	          0xc60000	                       mov byte [rax], 0	      5224	channel.c	FUNCTION_118
0x400bbea	          0x4c89f6	                            mov rsi, r14	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400bbed	          0x4c89e7	                            mov rdi, r12	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400bbf0	      0xe800000000	                          call 0x400bbf5	      5248	channel.c	FUNCTION_119	FOR_1	CALL_3
0x400bbf5	          0x4c89f7	                            mov rdi, r14	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x400bbf8	      0xe800000000	                          call 0x400bbfd	      5249	channel.c	FUNCTION_119	FOR_1	CALL_4
0x400bbfd	      0x48837d0000	                      cmp qword [rbp], 0	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x400bc02	            0x741c	                            je 0x400bc20	      5250	channel.c	FUNCTION_119	FOR_1	IF_3
0x400bc04	      0xbe20000000	                           mov esi, 0x20	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400bc09	          0x4c89e7	                            mov rdi, r12	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400bc0c	      0xe800000000	                          call 0x400bc11	      5251	channel.c	FUNCTION_119	FOR_1	CALL_5
0x400bc11	        0x488b6d00	                    mov rbp, qword [rbp]	      5240	channel.c	FUNCTION_119	FOR_1
0x400bc15	          0x4885ed	                           test rbp, rbp	      5240	channel.c	FUNCTION_119	FOR_1
0x400bc18	     0xf85a2fdffff	                           jne 0x400b9c0	      5240	channel.c	FUNCTION_119	FOR_1
0x400bc1e	            0x6690	                                     nop	      5240	channel.c	FUNCTION_119	FOR_1
0x400bc20	      0xb801000000	                              mov eax, 1	      5253	channel.c	FUNCTION_119
0x400bc25	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5254	channel.c	FUNCTION_119
0x400bc2a	    0x644833342528	                xor rsi, qword fs:[0x28]	      5254	channel.c	FUNCTION_119
0x400bc33	            0x7555	                           jne 0x400bc8a	      5254	channel.c	FUNCTION_119
0x400bc35	        0x4883c428	                           add rsp, 0x28	      5254	channel.c	FUNCTION_119
0x400bc39	              0x5b	                                 pop rbx	      5254	channel.c	FUNCTION_119
0x400bc3a	              0x5d	                                 pop rbp	      5254	channel.c	FUNCTION_119
0x400bc3b	            0x415c	                                 pop r12	      5254	channel.c	FUNCTION_119
0x400bc3d	            0x415d	                                 pop r13	      5254	channel.c	FUNCTION_119
0x400bc3f	            0x415e	                                 pop r14	      5254	channel.c	FUNCTION_119
0x400bc41	            0x415f	                                 pop r15	      5254	channel.c	FUNCTION_119
0x400bc43	              0xc3	                                     ret	      5254	channel.c	FUNCTION_119
0x400bc44	         0xf1f4000	                         nop dword [rax]	      5254	channel.c	FUNCTION_119
0x400bc48	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bc4d	      0x488d7c2408	                      lea rdi, [rsp + 8]	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bc52	      0xe800000000	                          call 0x400bc57	      5212	channel.c	FUNCTION_118	FOR_2	SWITCH_1	CALL_6
0x400bc57	          0x4531c0	                            xor r8d, r8d	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bc5a	      0xe97bfeffff	                           jmp 0x400bada	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bc5f	              0x90	                                     nop	      5211	channel.c	FUNCTION_118	FOR_2	SWITCH_1
0x400bc60	        0x498d4601	                      lea rax, [r14 + 1]	      5193	channel.c	FUNCTION_118	IF_6
0x400bc64	      0x4889442410	             mov qword [rsp + 0x10], rax	      5193	channel.c	FUNCTION_118	IF_6
0x400bc69	        0x41c60622	                    mov byte [r14], 0x22	      5193	channel.c	FUNCTION_118	IF_6
0x400bc6d	      0xe930feffff	                           jmp 0x400baa2	      5193	channel.c	FUNCTION_118	IF_6
0x400bc72	          0x4c89ef	                            mov rdi, r13	      5182	channel.c	FUNCTION_118	CALL_3
0x400bc75	      0xe800000000	                          call 0x400bc7a	      5182	channel.c	FUNCTION_118	CALL_3
0x400bc7a	          0x4885c0	                           test rax, rax	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x400bc7d	          0x4989c6	                            mov r14, rax	      5182	channel.c	FUNCTION_118	CALL_3
0x400bc80	     0xf8564ffffff	                           jne 0x400bbea	      5246	channel.c	FUNCTION_119	FOR_1	IF_2
0x400bc86	            0x31c0	                            xor eax, eax	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x400bc88	            0xeb9b	                           jmp 0x400bc25	      5247	channel.c	FUNCTION_119	FOR_1	IF_2
0x400bc8a	      0xe800000000	                          call 0x400bc8f	      5254	channel.c	FUNCTION_119
channel_part_info	WHILE,0:FOR,0:CALL,12:IF,3:ELSE,3:functions,0:DO,0:SWITCH,2	152
0x4000170	            0x4157	                                push r15	      2794	channel.c	FUNCTION_66
0x4000172	            0x4156	                                push r14	      2794	channel.c	FUNCTION_66
0x4000174	            0x4155	                                push r13	      2794	channel.c	FUNCTION_66
0x4000176	            0x4154	                                push r12	      2794	channel.c	FUNCTION_66
0x4000178	          0x4989fc	                            mov r12, rdi	      2794	channel.c	FUNCTION_66
0x400017b	              0x55	                                push rbp	      2794	channel.c	FUNCTION_66
0x400017c	              0x53	                                push rbx	      2794	channel.c	FUNCTION_66
0x400017d	          0x4889f5	                            mov rbp, rsi	      2794	channel.c	FUNCTION_66
0x4000180	          0x4889d6	                            mov rsi, rdx	      2794	channel.c	FUNCTION_66
0x4000183	      0xba04000000	                              mov edx, 4	      2801	channel.c	FUNCTION_66	CALL_1
0x4000188	          0x4189cd	                           mov r13d, ecx	      2794	channel.c	FUNCTION_66
0x400018b	        0x4883ec38	                           sub rsp, 0x38	      2794	channel.c	FUNCTION_66
0x400018f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2801	channel.c	FUNCTION_66	CALL_1
0x4000194	    0x64488b042528	                mov rax, qword fs:[0x28]	      2794	channel.c	FUNCTION_66
0x400019d	      0x4889442428	             mov qword [rsp + 0x28], rax	      2794	channel.c	FUNCTION_66
0x40001a2	            0x31c0	                            xor eax, eax	      2794	channel.c	FUNCTION_66
0x40001a4	      0xe800000000	                          call 0x40001a9	      2801	channel.c	FUNCTION_66	CALL_1
0x40001a9	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2801	channel.c	FUNCTION_66	CALL_1
0x40001ae	            0x8b0a	                    mov ecx, dword [rdx]	      2801	channel.c	FUNCTION_66	CALL_1
0x40001b0	        0x4883c204	                              add rdx, 4	      2801	channel.c	FUNCTION_66	CALL_1
0x40001b4	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2801	channel.c	FUNCTION_66	CALL_1
0x40001ba	            0xf7d1	                                 not ecx	      2801	channel.c	FUNCTION_66	CALL_1
0x40001bc	            0x21c8	                            and eax, ecx	      2801	channel.c	FUNCTION_66	CALL_1
0x40001be	      0x2580808080	                     and eax, 0x80808080	      2801	channel.c	FUNCTION_66	CALL_1
0x40001c3	            0x74e9	                            je 0x40001ae	      2801	channel.c	FUNCTION_66	CALL_1
0x40001c5	            0x89c1	                            mov ecx, eax	      2801	channel.c	FUNCTION_66	CALL_1
0x40001c7	          0x4489eb	                           mov ebx, r13d	      2806	channel.c	FUNCTION_66	IF_1
0x40001ca	          0xc1e910	                           shr ecx, 0x10	      2806	channel.c	FUNCTION_66	IF_1
0x40001cd	      0xa980800000	                        test eax, 0x8080	      2806	channel.c	FUNCTION_66	IF_1
0x40001d2	           0xf44c1	                          cmove eax, ecx	      2806	channel.c	FUNCTION_66	IF_1
0x40001d5	        0x488d4a02	                      lea rcx, [rdx + 2]	      2806	channel.c	FUNCTION_66	IF_1
0x40001d9	            0x89c7	                            mov edi, eax	      2806	channel.c	FUNCTION_66	IF_1
0x40001db	        0x480f44d1	                          cmove rdx, rcx	      2806	channel.c	FUNCTION_66	IF_1
0x40001df	          0x4000c7	                             add dil, al	      2806	channel.c	FUNCTION_66	IF_1
0x40001e2	          0x4889d8	                            mov rax, rbx	      2806	channel.c	FUNCTION_66	IF_1
0x40001e5	        0x4883da03	                              sbb rdx, 3	      2806	channel.c	FUNCTION_66	IF_1
0x40001e9	        0x48c1e008	                              shl rax, 8	      2806	channel.c	FUNCTION_66	IF_1
0x40001ed	      0xb975730000	                         mov ecx, 0x7375	       110	string3.h	FUNCTION_141	CALL_3
0x40001f2	          0x4989d6	                            mov r14, rdx	       110	string3.h	FUNCTION_141	CALL_3
0x40001f5	      0xba5f000000	                           mov edx, 0x5f	       110	string3.h	FUNCTION_141	CALL_3
0x40001fa	        0x66418916	                      mov word [r14], dx	       110	string3.h	FUNCTION_141	CALL_3
0x40001fe	          0x4889da	                            mov rdx, rbx	      2806	channel.c	FUNCTION_66	IF_1
0x4000201	        0x4d8d7e01	                      lea r15, [r14 + 1]	      2805	channel.c	FUNCTION_66	CALL_4
0x4000205	        0x48c1e204	                              shl rdx, 4	      2806	channel.c	FUNCTION_66	IF_1
0x4000209	    0x41c746017374	        mov dword [r14 + 1], 0x74617473 	       110	string3.h	FUNCTION_141	CALL_3
0x4000211	          0x4801d0	                            add rax, rdx	      2806	channel.c	FUNCTION_66	IF_1
0x4000214	      0x6641894f04	                  mov word [r15 + 4], cx	       110	string3.h	FUNCTION_141	CALL_3
0x4000219	      0x41c6470600	                   mov byte [r15 + 6], 0	       110	string3.h	FUNCTION_141	CALL_3
0x400021e	          0x4c01e0	                            add rax, r12	      2806	channel.c	FUNCTION_66	IF_1
0x4000221	      0xb900000000	                              mov ecx, 0	      2807	channel.c	FUNCTION_66	IF_1
0x4000226	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      2806	channel.c	FUNCTION_66	IF_1
0x400022a	     0xf8418010000	                            je 0x4000348	      2806	channel.c	FUNCTION_66	IF_1
0x4000230	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2812	channel.c	FUNCTION_66	CALL_6
0x4000235	            0x31d2	                            xor edx, edx	      2812	channel.c	FUNCTION_66	CALL_6
0x4000237	          0x4889ef	                            mov rdi, rbp	      2812	channel.c	FUNCTION_66	CALL_6
0x400023a	      0xe800000000	                          call 0x400023f	      2812	channel.c	FUNCTION_66	CALL_6
0x400023f	          0x4889da	                            mov rdx, rbx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000242	          0x4889d8	                            mov rax, rbx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000245	    0x41c746016d6f	        mov dword [r14 + 1], 0x65646f6d 	       110	string3.h	FUNCTION_141	CALL_3
0x400024d	        0x48c1e204	                              shl rdx, 4	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000251	        0x48c1e008	                              shl rax, 8	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000255	      0x41c6470400	                   mov byte [r15 + 4], 0	       110	string3.h	FUNCTION_141	CALL_3
0x400025a	          0x4801d0	                            add rax, rdx	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400025d	    0x41b800000000	                              mov r8d, 0	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000263	      0x418b440420	      mov eax, dword [r12 + rax + 0x20] 	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000268	          0x83f803	                              cmp eax, 3	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400026b	            0x7708	                            ja 0x4000275	      2815	channel.c	FUNCTION_66	SWITCH_1
0x400026d	    0x4c8b04c50000	                   mov r8, qword [rax*8]	      2815	channel.c	FUNCTION_66	SWITCH_1
0x4000275	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2822	channel.c	FUNCTION_66	CALL_8
0x400027a	          0x4c89c1	                             mov rcx, r8	      2822	channel.c	FUNCTION_66	CALL_8
0x400027d	            0x31d2	                            xor edx, edx	      2822	channel.c	FUNCTION_66	CALL_8
0x400027f	          0x4889ef	                            mov rdi, rbp	      2822	channel.c	FUNCTION_66	CALL_8
0x4000282	      0x4c89442408	                 mov qword [rsp + 8], r8	      2822	channel.c	FUNCTION_66	CALL_8
0x4000287	      0xe800000000	                          call 0x400028c	      2822	channel.c	FUNCTION_66	CALL_8
0x400028c	      0xb8696f0000	                         mov eax, 0x6f69	       110	string3.h	FUNCTION_141	CALL_3
0x4000291	          0x4585ed	                         test r13d, r13d	      2825	channel.c	FUNCTION_66	IF_3
0x4000294	    0x41b800000000	                              mov r8d, 0	      2826	channel.c	FUNCTION_66	IF_3
0x400029a	      0x6641894601	                  mov word [r14 + 1], ax	       110	string3.h	FUNCTION_141	CALL_3
0x400029f	      0x41c6470200	                   mov byte [r15 + 2], 0	       110	string3.h	FUNCTION_141	CALL_3
0x40002a4	            0x743a	                            je 0x40002e0	      2825	channel.c	FUNCTION_66	IF_3
0x40002a6	          0x4889da	                            mov rdx, rbx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002a9	          0x4889d8	                            mov rax, rbx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002ac	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002b1	        0x48c1e204	                              shl rdx, 4	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002b5	        0x48c1e008	                              shl rax, 8	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002b9	          0x4801d0	                            add rax, rdx	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002bc	          0x4c01e0	                            add rax, r12	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002bf	        0x83782404	               cmp dword [rax + 0x24], 4	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002c3	            0x771b	                            ja 0x40002e0	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002c5	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002c8	    0xff24c5000000	                       jmp qword [rax*8]	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002cf	              0x90	                                     nop	      2827	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002d0	    0x41b800000000	                              mov r8d, 0	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2831	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40002e0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2835	channel.c	FUNCTION_66	CALL_10
0x40002e5	          0x4c89c1	                             mov rcx, r8	      2835	channel.c	FUNCTION_66	CALL_10
0x40002e8	            0x31d2	                            xor edx, edx	      2835	channel.c	FUNCTION_66	CALL_10
0x40002ea	          0x4889ef	                            mov rdi, rbp	      2835	channel.c	FUNCTION_66	CALL_10
0x40002ed	      0xe800000000	                          call 0x40002f2	      2835	channel.c	FUNCTION_66	CALL_10
0x40002f2	    0x48b874696d65	            movabs rax, 0x74756f656d6974	       110	string3.h	FUNCTION_141	CALL_3
0x40002fc	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2838	channel.c	FUNCTION_66	CALL_12
0x4000301	            0x31c9	                            xor ecx, ecx	      2838	channel.c	FUNCTION_66	CALL_12
0x4000303	        0x49894601	                mov qword [r14 + 1], rax	       110	string3.h	FUNCTION_141	CALL_3
0x4000307	          0x4889d8	                            mov rax, rbx	      2838	channel.c	FUNCTION_66	CALL_12
0x400030a	        0x48c1e308	                              shl rbx, 8	      2838	channel.c	FUNCTION_66	CALL_12
0x400030e	        0x48c1e004	                              shl rax, 4	      2838	channel.c	FUNCTION_66	CALL_12
0x4000312	          0x4889ef	                            mov rdi, rbp	      2838	channel.c	FUNCTION_66	CALL_12
0x4000315	          0x4801c3	                            add rbx, rax	      2838	channel.c	FUNCTION_66	CALL_12
0x4000318	      0x4963541c28	   movsxd rdx, dword [r12 + rbx + 0x28] 	      2838	channel.c	FUNCTION_66	CALL_12
0x400031d	      0xe800000000	                          call 0x4000322	      2838	channel.c	FUNCTION_66	CALL_12
0x4000322	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2839	channel.c	FUNCTION_66
0x4000327	    0x644833042528	                xor rax, qword fs:[0x28]	      2839	channel.c	FUNCTION_66
0x4000330	     0xf858f000000	                           jne 0x40003c5	      2839	channel.c	FUNCTION_66
0x4000336	        0x4883c438	                           add rsp, 0x38	      2839	channel.c	FUNCTION_66
0x400033a	              0x5b	                                 pop rbx	      2839	channel.c	FUNCTION_66
0x400033b	              0x5d	                                 pop rbp	      2839	channel.c	FUNCTION_66
0x400033c	            0x415c	                                 pop r12	      2839	channel.c	FUNCTION_66
0x400033e	            0x415d	                                 pop r13	      2839	channel.c	FUNCTION_66
0x4000340	            0x415e	                                 pop r14	      2839	channel.c	FUNCTION_66
0x4000342	            0x415f	                                 pop r15	      2839	channel.c	FUNCTION_66
0x4000344	              0xc3	                                     ret	      2839	channel.c	FUNCTION_66
0x4000345	           0xf1f00	                         nop dword [rax]	      2839	channel.c	FUNCTION_66
0x4000348	          0x8b7820	            mov edi, dword [rax + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x400034b	          0x8d57fe	                      lea edx, [rdi - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x400034e	          0x83fa01	                              cmp edx, 1	      2739	channel.c	FUNCTION_64	IF_1
0x4000351	            0x7665	                           jbe 0x40003b8	      2739	channel.c	FUNCTION_64	IF_1
0x4000353	      0x4883784000	               cmp qword [rax + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x4000358	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x400035b	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x400035e	            0x85c0	                           test eax, eax	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000360	      0xb900000000	                              mov ecx, 0	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000365	      0xb800000000	                              mov eax, 0	      2811	channel.c	FUNCTION_66	ELSE_2
0x400036a	        0x480f45c8	                         cmovne rcx, rax	      2811	channel.c	FUNCTION_66	ELSE_2
0x400036e	      0xe9bdfeffff	                           jmp 0x4000230	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000373	       0xf1f440000	                   nop dword [rax + rax]	      2811	channel.c	FUNCTION_66	ELSE_2
0x4000378	    0x41b800000000	                              mov r8d, 0	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400037e	      0xe95dffffff	                           jmp 0x40002e0	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000383	       0xf1f440000	                   nop dword [rax + rax]	      2832	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000388	    0x41b800000000	                              mov r8d, 0	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400038e	      0xe94dffffff	                           jmp 0x40002e0	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000393	       0xf1f440000	                   nop dword [rax + rax]	      2833	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x4000398	    0x41b800000000	                              mov r8d, 0	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x400039e	      0xe93dffffff	                           jmp 0x40002e0	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40003a3	       0xf1f440000	                   nop dword [rax + rax]	      2830	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40003a8	    0x41b800000000	                              mov r8d, 0	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40003ae	      0xe92dffffff	                           jmp 0x40002e0	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40003b3	       0xf1f440000	                   nop dword [rax + rax]	      2829	channel.c	FUNCTION_66	ELSE_3	SWITCH_2
0x40003b8	      0x4883785800	               cmp qword [rax + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x40003bd	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x40003c0	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x40003c3	            0xeb99	                           jmp 0x400035e	      2744	channel.c	FUNCTION_64	IF_1
0x40003c5	      0xe800000000	                          call 0x40003ca	      2839	channel.c	FUNCTION_66
channel_read_block	WHILE,1:FOR,1:CALL,16:IF,11:ELSE,3:functions,0:DO,0:SWITCH,0	233
0x40065d0	            0x4157	                                push r15	      3358	channel.c	FUNCTION_80
0x40065d2	            0x4156	                                push r14	      3358	channel.c	FUNCTION_80
0x40065d4	            0x89f0	                            mov eax, esi	      3358	channel.c	FUNCTION_80
0x40065d6	            0x4155	                                push r13	      3358	channel.c	FUNCTION_80
0x40065d8	            0x4154	                                push r12	      3358	channel.c	FUNCTION_80
0x40065da	          0x4989c4	                            mov r12, rax	      3358	channel.c	FUNCTION_80
0x40065dd	              0x55	                                push rbp	      3358	channel.c	FUNCTION_80
0x40065de	              0x53	                                push rbx	      3358	channel.c	FUNCTION_80
0x40065df	          0x4889c3	                            mov rbx, rax	      3361	channel.c	FUNCTION_80
0x40065e2	        0x48c1e304	                              shl rbx, 4	      3361	channel.c	FUNCTION_80
0x40065e6	            0x89d6	                            mov esi, edx	      3358	channel.c	FUNCTION_80
0x40065e8	          0x4189cd	                           mov r13d, ecx	      3358	channel.c	FUNCTION_80
0x40065eb	        0x4883ec18	                           sub rsp, 0x18	      3358	channel.c	FUNCTION_80
0x40065ef	            0x89f1	                            mov ecx, esi	      3366	channel.c	FUNCTION_80	CALL_1
0x40065f1	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x40065f6	      0x4889442408	                mov qword [rsp + 8], rax	      3361	channel.c	FUNCTION_80
0x40065fb	        0x48c1e008	                              shl rax, 8	      3361	channel.c	FUNCTION_80
0x40065ff	          0x891424	                    mov dword [rsp], edx	      3358	channel.c	FUNCTION_80
0x4006602	          0x4801d8	                            add rax, rbx	      3361	channel.c	FUNCTION_80
0x4006605	      0xba00000000	                              mov edx, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x400660a	          0x4889fd	                            mov rbp, rdi	      3358	channel.c	FUNCTION_80
0x400660d	        0x4c8d3c07	                    lea r15, [rdi + rax]	      3361	channel.c	FUNCTION_80
0x4006611	      0xb800000000	                              mov eax, 0	      3366	channel.c	FUNCTION_80	CALL_1
0x4006616	        0x418b5f20	            mov ebx, dword [r15 + 0x20] 	      3361	channel.c	FUNCTION_80
0x400661a	        0x458b7718	           mov r14d, dword [r15 + 0x18] 	      3362	channel.c	FUNCTION_80
0x400661e	          0x83fb01	                              cmp ebx, 1	      3366	channel.c	FUNCTION_80	CALL_1
0x4006621	        0x480f45d0	                         cmovne rdx, rax	      3366	channel.c	FUNCTION_80	CALL_1
0x4006625	            0x31c0	                            xor eax, eax	      3366	channel.c	FUNCTION_80	CALL_1
0x4006627	      0xe800000000	                          call 0x400662c	      3366	channel.c	FUNCTION_80	CALL_1
0x400662c	          0x4585ed	                         test r13d, r13d	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x400662f	          0x4d89fd	                            mov r13, r15	      1615	channel.c	FUNCTION_44
0x4006632	           0xf95c2	                                setne dl	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4006635	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4006639	           0xf94c0	                                 sete al	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x400663c	             0x9c2	                             or edx, eax	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x400663e	        0x88542407	                  mov byte [rsp + 7], dl	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x4006642	        0x4d8b7d40	            mov r15, qword [r13 + 0x40] 	      1615	channel.c	FUNCTION_44
0x4006646	          0x4d85ff	                           test r15, r15	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x4006649	     0xf8495000000	                            je 0x40066e4	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x400664f	          0x83fb01	                              cmp ebx, 1	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4006652	     0xf8433020000	                            je 0x400688b	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x4006658	            0x85db	                           test ebx, ebx	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x400665a	            0x7533	                           jne 0x400668f	      3374	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_2
0x400665c	        0x498b7708	                mov rsi, qword [r15 + 8]	      1629	channel.c	FUNCTION_45	FOR_1
0x4006660	          0x498b3f	                    mov rdi, qword [r15]	      1626	channel.c	FUNCTION_45
0x4006663	          0x4885f6	                           test rsi, rsi	      1629	channel.c	FUNCTION_45	FOR_1
0x4006666	            0x7427	                            je 0x400668f	      1629	channel.c	FUNCTION_45	FOR_1
0x4006668	          0x803f0a	                     cmp byte [rdi], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400666b	     0xf848f000000	                            je 0x4006700	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006671	        0x488d4701	                      lea rax, [rdi + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006675	        0x488d1437	                    lea rdx, [rdi + rsi]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006679	            0xeb0f	                           jmp 0x400668a	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400667b	       0xf1f440000	                   nop dword [rax + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006680	        0x4883c001	                              add rax, 1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006684	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006688	            0x7476	                            je 0x4006700	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400668a	          0x4839c2	                            cmp rdx, rax	      1629	channel.c	FUNCTION_45	FOR_1
0x400668d	            0x75f1	                           jne 0x4006680	      1629	channel.c	FUNCTION_45	FOR_1
0x400668f	            0x31d2	                            xor edx, edx	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006691	            0x85db	                           test ebx, ebx	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006693	          0x4489e6	                           mov esi, r12d	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006696	           0xf94c2	                                 sete dl	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x4006699	          0x4889ef	                            mov rdi, rbp	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x400669c	      0xe800000000	                          call 0x40066a1	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40066a1	          0x83f801	                              cmp eax, 1	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40066a4	            0x749c	                            je 0x4006642	      3378	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_3	CALL_4
0x40066a6	      0x807c240700	                   cmp byte [rsp + 7], 0	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x40066ab	     0xf857d010000	                           jne 0x400682e	      3382	channel.c	FUNCTION_80	WHILE_1	IF_1	IF_4
0x40066b1	          0x8b1424	                    mov edx, dword [rsp]	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40066b4	          0x4489f6	                           mov esi, r14d	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40066b7	          0x4889ef	                            mov rdi, rbp	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40066ba	      0xe831f6ffff	                   call sym.channel_wait	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40066bf	            0x85c0	                           test eax, eax	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40066c1	     0xf8551010000	                           jne 0x4006818	      3389	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_5
0x40066c7	      0xba00000000	                              mov edx, 0	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40066cc	          0x4489e6	                           mov esi, r12d	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40066cf	          0x4889ef	                            mov rdi, rbp	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40066d2	      0xe829f2ffff	                   call sym.channel_read	      3394	channel.c	FUNCTION_80	WHILE_1	CALL_7
0x40066d7	        0x4d8b7d40	            mov r15, qword [r13 + 0x40] 	      1615	channel.c	FUNCTION_44
0x40066db	          0x4d85ff	                           test r15, r15	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x40066de	     0xf856bffffff	                           jne 0x400664f	      3372	channel.c	FUNCTION_80	WHILE_1	IF_1
0x40066e4	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x40066e8	            0x75c7	                           jne 0x40066b1	      3387	channel.c	FUNCTION_80	WHILE_1	IF_5
0x40066ea	            0x31db	                            xor ebx, ebx	      3388	channel.c	FUNCTION_80	WHILE_1	IF_5
0x40066ec	        0x4883c418	                           add rsp, 0x18	      3436	channel.c	FUNCTION_80
0x40066f0	          0x4889d8	                            mov rax, rbx	      3436	channel.c	FUNCTION_80
0x40066f3	              0x5b	                                 pop rbx	      3436	channel.c	FUNCTION_80
0x40066f4	              0x5d	                                 pop rbp	      3436	channel.c	FUNCTION_80
0x40066f5	            0x415c	                                 pop r12	      3436	channel.c	FUNCTION_80
0x40066f7	            0x415d	                                 pop r13	      3436	channel.c	FUNCTION_80
0x40066f9	            0x415e	                                 pop r14	      3436	channel.c	FUNCTION_80
0x40066fb	            0x415f	                                 pop r15	      3436	channel.c	FUNCTION_80
0x40066fd	              0xc3	                                     ret	      3436	channel.c	FUNCTION_80
0x40066fe	            0x6690	                                     nop	      3436	channel.c	FUNCTION_80
0x4006700	          0x803f0a	                     cmp byte [rdi], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006703	     0xf84dd010000	                            je 0x40068e6	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006709	        0x488d4701	                      lea rax, [rdi + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400670d	          0x4801fe	                            add rsi, rdi	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006710	            0xeb17	                           jmp 0x4006729	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006712	    0x660f1f440000	                    nop word [rax + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006718	          0x4889c3	                            mov rbx, rax	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400671b	        0x488d4001	                      lea rax, [rax + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x400671f	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006723	     0xf84c6000000	                            je 0x40067ef	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x4006729	          0x4839c6	                            cmp rsi, rax	      1629	channel.c	FUNCTION_45	FOR_1
0x400672c	            0x75ea	                           jne 0x4006718	      1629	channel.c	FUNCTION_45	FOR_1
0x400672e	            0x31db	                            xor ebx, ebx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006730	          0x4839f7	                            cmp rdi, rsi	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006733	      0xba01000000	                              mov edx, 1	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006738	     0xf8300010000	                           jae 0x400683e	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400673e	          0x4889f8	                            mov rax, rdi	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006741	            0xeb0e	                           jmp 0x4006751	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006743	       0xf1f440000	                   nop dword [rax + rax]	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006748	          0x4839c6	                            cmp rsi, rax	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400674b	     0xf86ba000000	                           jbe 0x400680b	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006751	          0x803800	                       cmp byte [rax], 0	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006754	            0x750a	                           jne 0x4006760	      3411	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006756	          0xc6000a	                     mov byte [rax], 0xa	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006759	          0x4889fe	                            mov rsi, rdi	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x400675c	        0x49037708	                add rsi, qword [r15 + 8]	      3412	channel.c	FUNCTION_80	ELSE_1	FOR_1	IF_8
0x4006760	        0x4883c001	                              add rax, 1	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006764	          0x4839d8	                            cmp rax, rbx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006767	            0x72df	                            jb 0x4006748	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006769	            0x84d2	                             test dl, dl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400676b	            0x75db	                           jne 0x4006748	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400676d	        0x488d4301	                      lea rax, [rbx + 1]	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4006771	          0x4839c6	                            cmp rsi, rax	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x4006774	     0xf8424010000	                            je 0x400689e	      3419	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x400677a	          0x4829fb	                            sub rbx, rdi	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x400677d	            0x89de	                            mov esi, ebx	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x400677f	          0x4989dc	                            mov r12, rbx	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4006782	      0xe800000000	                          call 0x4006787	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x4006787	          0x4989c5	                            mov r13, rax	      3429	channel.c	FUNCTION_80	ELSE_1	ELSE_3	CALL_12
0x400678a	      0x488b442408	                mov rax, qword [rsp + 8]	      1717	channel.c	FUNCTION_48
0x400678f	        0x4183c401	                             add r12d, 1	      1720	channel.c	FUNCTION_48	CALL_1
0x4006793	          0x4d63e4	                        movsxd r12, r12d	      1720	channel.c	FUNCTION_48	CALL_1
0x4006796	          0x4889c2	                            mov rdx, rax	      1717	channel.c	FUNCTION_48
0x4006799	        0x48c1e008	                              shl rax, 8	      1717	channel.c	FUNCTION_48
0x400679d	        0x48c1e204	                              shl rdx, 4	      1717	channel.c	FUNCTION_48
0x40067a1	          0x4801d0	                            add rax, rdx	      1717	channel.c	FUNCTION_48
0x40067a4	      0x488b5c0540	      mov rbx, qword [rbp + rax + 0x40] 	      1717	channel.c	FUNCTION_48
0x40067a9	          0x488b3b	                    mov rdi, qword [rbx]	      1718	channel.c	FUNCTION_48
0x40067ac	        0x488b5308	                mov rdx, qword [rbx + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x40067b0	        0x4a8d3427	                    lea rsi, [rdi + r12]	        59	string3.h	FUNCTION_136	CALL_3
0x40067b4	          0x4c29e2	                            sub rdx, r12	        59	string3.h	FUNCTION_136	CALL_3
0x40067b7	      0xe800000000	                          call 0x40067bc	        59	string3.h	FUNCTION_136	CALL_3
0x40067bc	        0x4c296308	                sub qword [rbx + 8], r12	      1721	channel.c	FUNCTION_48
0x40067c0	    0x48833d000000	               cmp qword [0x040067c8], 0	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x40067c8	          0x4c89eb	                            mov rbx, r13	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x40067cb	     0xf841bffffff	                            je 0x40066ec	      3433	channel.c	FUNCTION_80	IF_11	CALL_14
0x40067d1	          0x4c89ef	                            mov rdi, r13	      3434	channel.c	FUNCTION_80	CALL_16
0x40067d4	      0xe800000000	                          call 0x40067d9	      3434	channel.c	FUNCTION_80	CALL_16
0x40067d9	      0xbe00000000	                              mov esi, 0	      3434	channel.c	FUNCTION_80	CALL_16
0x40067de	            0x89c2	                            mov edx, eax	      3434	channel.c	FUNCTION_80	CALL_16
0x40067e0	          0x4889ef	                            mov rdi, rbp	      3434	channel.c	FUNCTION_80	CALL_16
0x40067e3	            0x31c0	                            xor eax, eax	      3434	channel.c	FUNCTION_80	CALL_16
0x40067e5	      0xe800000000	                          call 0x40067ea	      3434	channel.c	FUNCTION_80	CALL_16
0x40067ea	      0xe9fdfeffff	                           jmp 0x40066ec	      3434	channel.c	FUNCTION_80	CALL_16
0x40067ef	          0x4885db	                           test rbx, rbx	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40067f2	           0xf94c2	                                 sete dl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40067f5	          0x4839fb	                            cmp rbx, rdi	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40067f8	            0x7708	                            ja 0x4006802	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40067fa	            0x84d2	                             test dl, dl	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x40067fc	     0xf846bffffff	                            je 0x400676d	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006802	          0x4839fe	                            cmp rsi, rdi	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x4006805	     0xf8733ffffff	                            ja 0x400673e	      3410	channel.c	FUNCTION_80	ELSE_1	FOR_1
0x400680b	            0x84d2	                             test dl, dl	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x400680d	     0xf845affffff	                            je 0x400676d	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4006813	            0xeb29	                           jmp 0x400683e	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4006815	           0xf1f00	                         nop dword [rax]	      3414	channel.c	FUNCTION_80	ELSE_1	IF_9
0x4006818	      0xbe00000000	                              mov esi, 0	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x400681d	          0x4889ef	                            mov rdi, rbp	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4006820	            0x31c0	                            xor eax, eax	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4006822	      0xe800000000	                          call 0x4006827	      3391	channel.c	FUNCTION_80	WHILE_1	IF_6	CALL_6
0x4006827	            0x31db	                            xor ebx, ebx	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4006829	      0xe9befeffff	                           jmp 0x40066ec	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x400682e	        0x498b7708	                mov rsi, qword [r15 + 8]	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4006832	          0x498b3f	                    mov rdi, qword [r15]	      3392	channel.c	FUNCTION_80	WHILE_1	IF_6
0x4006835	          0x4885f6	                           test rsi, rsi	      1629	channel.c	FUNCTION_45	FOR_1
0x4006838	     0xf85c2feffff	                           jne 0x4006700	      1629	channel.c	FUNCTION_45	FOR_1
0x400683e	      0x488b442408	                mov rax, qword [rsp + 8]	      1644	channel.c	FUNCTION_46
0x4006843	          0x4889c2	                            mov rdx, rax	      1644	channel.c	FUNCTION_46
0x4006846	        0x48c1e008	                              shl rax, 8	      1644	channel.c	FUNCTION_46
0x400684a	        0x48c1e204	                              shl rdx, 4	      1644	channel.c	FUNCTION_46
0x400684e	          0x4801d0	                            add rax, rdx	      1644	channel.c	FUNCTION_46
0x4006851	          0x4801e8	                            add rax, rbp	      1644	channel.c	FUNCTION_46
0x4006854	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1644	channel.c	FUNCTION_46
0x4006858	          0x4885ff	                           test rdi, rdi	      1647	channel.c	FUNCTION_46	IF_1
0x400685b	     0xf84ac000000	                            je 0x400690d	      1647	channel.c	FUNCTION_46	IF_1
0x4006861	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x4006865	          0x4c8b2f	                    mov r13, qword [rdi]	      1650	channel.c	FUNCTION_46
0x4006868	        0x48895040	             mov qword [rax + 0x40], rdx	      1651	channel.c	FUNCTION_46
0x400686c	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4006870	          0x4885d2	                           test rdx, rdx	      1652	channel.c	FUNCTION_46	IF_2
0x4006873	     0xf8482000000	                            je 0x40068fb	      1652	channel.c	FUNCTION_46	IF_2
0x4006879	    0x48c742180000	               mov qword [rdx + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4006881	      0xe800000000	                          call 0x4006886	      1656	channel.c	FUNCTION_46	CALL_1
0x4006886	      0xe935ffffff	                           jmp 0x40067c0	      1656	channel.c	FUNCTION_46	CALL_1
0x400688b	          0x4489e6	                           mov esi, r12d	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400688e	          0x4889ef	                            mov rdi, rbp	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4006891	      0xe8bab5ffff	                call sym.channel_get_all	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4006896	          0x4989c5	                            mov r13, rax	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x4006899	      0xe922ffffff	                           jmp 0x40067c0	      3400	channel.c	FUNCTION_80	IF_7	CALL_8
0x400689e	      0x488b442408	                mov rax, qword [rsp + 8]	      1644	channel.c	FUNCTION_46
0x40068a3	          0x4889c2	                            mov rdx, rax	      1644	channel.c	FUNCTION_46
0x40068a6	        0x48c1e008	                              shl rax, 8	      1644	channel.c	FUNCTION_46
0x40068aa	        0x48c1e204	                              shl rdx, 4	      1644	channel.c	FUNCTION_46
0x40068ae	          0x4801d0	                            add rax, rdx	      1644	channel.c	FUNCTION_46
0x40068b1	          0x4801e8	                            add rax, rbp	      1644	channel.c	FUNCTION_46
0x40068b4	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1644	channel.c	FUNCTION_46
0x40068b8	          0x4885ff	                           test rdi, rdi	      1647	channel.c	FUNCTION_46	IF_1
0x40068bb	            0x744b	                            je 0x4006908	      1647	channel.c	FUNCTION_46	IF_1
0x40068bd	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x40068c1	          0x4c8b2f	                    mov r13, qword [rdi]	      1650	channel.c	FUNCTION_46
0x40068c4	        0x48895040	             mov qword [rax + 0x40], rdx	      1651	channel.c	FUNCTION_46
0x40068c8	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x40068cc	          0x4885d2	                           test rdx, rdx	      1652	channel.c	FUNCTION_46	IF_2
0x40068cf	            0x7420	                            je 0x40068f1	      1652	channel.c	FUNCTION_46	IF_2
0x40068d1	    0x48c742180000	               mov qword [rdx + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x40068d9	      0xe800000000	                          call 0x40068de	      1656	channel.c	FUNCTION_46	CALL_1
0x40068de	          0xc60300	                       mov byte [rbx], 0	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40068e1	      0xe9dafeffff	                           jmp 0x40067c0	      3423	channel.c	FUNCTION_80	ELSE_1	ELSE_2	IF_10
0x40068e6	          0x4889fb	                            mov rbx, rdi	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40068e9	          0x4801fe	                            add rsi, rdi	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40068ec	      0xe97cfeffff	                           jmp 0x400676d	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40068f1	    0x48c740480000	               mov qword [rax + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x40068f9	            0xebde	                           jmp 0x40068d9	      1653	channel.c	FUNCTION_46	IF_2
0x40068fb	    0x48c740480000	               mov qword [rax + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4006903	      0xe979ffffff	                           jmp 0x4006881	      1653	channel.c	FUNCTION_46	IF_2
0x4006908	          0x4531ed	                          xor r13d, r13d	      1648	channel.c	FUNCTION_46	IF_1
0x400690b	            0xebd1	                           jmp 0x40068de	      1648	channel.c	FUNCTION_46	IF_1
0x400690d	          0x4531ed	                          xor r13d, r13d	      1648	channel.c	FUNCTION_46	IF_1
0x4006910	      0xe9abfeffff	                           jmp 0x40067c0	      1648	channel.c	FUNCTION_46	IF_1
channel_can_write_to	WHILE,0:FOR,0:CALL,0:IF,0:ELSE,0:functions,0:DO,0:SWITCH,0	14
0x4006920	          0x4885ff	                           test rdi, rdi	      2714	channel.c	FUNCTION_62
0x4006923	            0x7423	                            je 0x4006948	      2714	channel.c	FUNCTION_62
0x4006925	        0x837f18ff	cmp dword [rdi + 0x18], 0xffffffffffffffff	      2714	channel.c	FUNCTION_62
0x4006929	      0xb801000000	                              mov eax, 1	      2714	channel.c	FUNCTION_62
0x400692e	            0x7408	                            je 0x4006938	      2714	channel.c	FUNCTION_62
0x4006930	            0xf3c3	                                     ret	      2716	channel.c	FUNCTION_62
0x4006932	    0x660f1f440000	                    nop word [rax + rax]	      2716	channel.c	FUNCTION_62
0x4006938	            0x31c0	                            xor eax, eax	      2714	channel.c	FUNCTION_62
0x400693a	    0x83bf48030000	cmp dword [rdi + 0x348], 0xffffffffffffffff	      2714	channel.c	FUNCTION_62
0x4006941	           0xf95c0	                                setne al	      2714	channel.c	FUNCTION_62
0x4006944	              0xc3	                                     ret	      2714	channel.c	FUNCTION_62
0x4006945	           0xf1f00	                         nop dword [rax]	      2714	channel.c	FUNCTION_62
0x4006948	            0x31c0	                            xor eax, eax	      2714	channel.c	FUNCTION_62
0x400694a	              0xc3	                                     ret	      2716	channel.c	FUNCTION_62
job_info_all	WHILE,0:FOR,1:CALL,1:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	30
0x400ccf0	              0x55	                                push rbp	      5776	channel.c	FUNCTION_133
0x400ccf1	              0x53	                                push rbx	      5776	channel.c	FUNCTION_133
0x400ccf2	        0x4883ec28	                           sub rsp, 0x28	      5776	channel.c	FUNCTION_133
0x400ccf6	    0x488b1d000000	            mov rbx, qword [0x0400ccfd] 	      5780	channel.c	FUNCTION_133	FOR_1
0x400ccfd	    0x64488b042528	                mov rax, qword fs:[0x28]	      5776	channel.c	FUNCTION_133
0x400cd06	      0x4889442418	             mov qword [rsp + 0x18], rax	      5776	channel.c	FUNCTION_133
0x400cd0b	            0x31c0	                            xor eax, eax	      5776	channel.c	FUNCTION_133
0x400cd0d	          0x4885db	                           test rbx, rbx	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd10	            0x7432	                            je 0x400cd44	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd12	          0x4889fd	                            mov rbp, rdi	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd15	            0xeb11	                           jmp 0x400cd28	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd17	    0x660f1f840000	                    nop word [rax + rax]	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd20	          0x488b1b	                    mov rbx, qword [rbx]	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd23	          0x4885db	                           test rbx, rbx	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd26	            0x741c	                            je 0x400cd44	      5780	channel.c	FUNCTION_133	FOR_1
0x400cd28	          0x4889e6	                            mov rsi, rsp	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400cd2b	          0x4889ef	                            mov rdi, rbp	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400cd2e	    0xc70424090000	                      mov dword [rsp], 9	      5782	channel.c	FUNCTION_133	FOR_1
0x400cd35	      0x48895c2408	                mov qword [rsp + 8], rbx	      5783	channel.c	FUNCTION_133	FOR_1
0x400cd3a	      0xe800000000	                          call 0x400cd3f	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400cd3f	          0x83f801	                              cmp eax, 1	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400cd42	            0x74dc	                            je 0x400cd20	      5785	channel.c	FUNCTION_133	FOR_1	IF_1	CALL_1
0x400cd44	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5788	channel.c	FUNCTION_133
0x400cd49	    0x644833042528	                xor rax, qword fs:[0x28]	      5788	channel.c	FUNCTION_133
0x400cd52	            0x7507	                           jne 0x400cd5b	      5788	channel.c	FUNCTION_133
0x400cd54	        0x4883c428	                           add rsp, 0x28	      5788	channel.c	FUNCTION_133
0x400cd58	              0x5b	                                 pop rbx	      5788	channel.c	FUNCTION_133
0x400cd59	              0x5d	                                 pop rbp	      5788	channel.c	FUNCTION_133
0x400cd5a	              0xc3	                                     ret	      5788	channel.c	FUNCTION_133
0x400cd5b	      0xe800000000	                       call sym.job_stop	      5788	channel.c	FUNCTION_133
set_ref_in_channel	WHILE,0:FOR,1:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	59
0x400a720	              0x55	                                push rbp	      4334	channel.c	FUNCTION_97
0x400a721	              0x53	                                push rbx	      4334	channel.c	FUNCTION_97
0x400a722	        0x4883ec28	                           sub rsp, 0x28	      4334	channel.c	FUNCTION_97
0x400a726	    0x488b1d000000	            mov rbx, qword [0x0400a72d] 	      4339	channel.c	FUNCTION_97	FOR_1
0x400a72d	    0x64488b042528	                mov rax, qword fs:[0x28]	      4334	channel.c	FUNCTION_97
0x400a736	      0x4889442418	             mov qword [rsp + 0x18], rax	      4334	channel.c	FUNCTION_97
0x400a73b	            0x31c0	                            xor eax, eax	      4334	channel.c	FUNCTION_97
0x400a73d	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x400a740	     0xf84a5000000	                            je 0x400a7eb	      4339	channel.c	FUNCTION_97	FOR_1
0x400a746	            0x89fd	                            mov ebp, edi	      4339	channel.c	FUNCTION_97	FOR_1
0x400a748	            0x31f6	                            xor esi, esi	      4339	channel.c	FUNCTION_97	FOR_1
0x400a74a	            0xeb21	                           jmp 0x400a76d	      4339	channel.c	FUNCTION_97	FOR_1
0x400a74c	         0xf1f4000	                         nop dword [rax]	      4339	channel.c	FUNCTION_97	FOR_1
0x400a750	            0x85f6	                           test esi, esi	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a752	    0xc704240a0000	                    mov dword [rsp], 0xa	      4342	channel.c	FUNCTION_97	FOR_1	IF_1
0x400a759	      0x48895c2408	                mov qword [rsp + 8], rbx	      4343	channel.c	FUNCTION_97	FOR_1	IF_1
0x400a75e	            0x7470	                            je 0x400a7d0	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a760	      0xbe01000000	                              mov esi, 1	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a765	          0x488b1b	                    mov rbx, qword [rbx]	      4339	channel.c	FUNCTION_97	FOR_1
0x400a768	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x400a76b	            0x7443	                            je 0x400a7b0	      4339	channel.c	FUNCTION_97	FOR_1
0x400a76d	    0x8b83b0040000	           mov eax, dword [rbx + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400a773	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x400a775	            0x740a	                            je 0x400a781	       315	channel.c	FUNCTION_9	IF_1
0x400a777	    0x4883bba80400	              cmp qword [rbx + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400a77f	            0x74e4	                            je 0x400a765	       315	channel.c	FUNCTION_9	IF_1
0x400a781	    0x4883bb900400	              cmp qword [rbx + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400a789	            0x75c5	                           jne 0x400a750	       319	channel.c	FUNCTION_9	IF_2
0x400a78b	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400a793	            0x75bb	                           jne 0x400a750	       323	channel.c	FUNCTION_9	IF_3
0x400a795	          0x4889df	                            mov rdi, rbx	       323	channel.c	FUNCTION_9	IF_3
0x400a798	      0xe8335cffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400a79d	            0x85c0	                           test eax, eax	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x400a79f	            0x75af	                           jne 0x400a750	      4340	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_1
0x400a7a1	          0x488b1b	                    mov rbx, qword [rbx]	      4339	channel.c	FUNCTION_97	FOR_1
0x400a7a4	          0x4885db	                           test rbx, rbx	      4339	channel.c	FUNCTION_97	FOR_1
0x400a7a7	            0x75c4	                           jne 0x400a76d	      4339	channel.c	FUNCTION_97	FOR_1
0x400a7a9	     0xf1f80000000	                         nop dword [rax]	      4339	channel.c	FUNCTION_97	FOR_1
0x400a7b0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4347	channel.c	FUNCTION_97
0x400a7b5	    0x644833142528	                xor rdx, qword fs:[0x28]	      4347	channel.c	FUNCTION_97
0x400a7be	            0x89f0	                            mov eax, esi	      4347	channel.c	FUNCTION_97
0x400a7c0	            0x752d	                           jne 0x400a7ef	      4347	channel.c	FUNCTION_97
0x400a7c2	        0x4883c428	                           add rsp, 0x28	      4347	channel.c	FUNCTION_97
0x400a7c6	              0x5b	                                 pop rbx	      4347	channel.c	FUNCTION_97
0x400a7c7	              0x5d	                                 pop rbp	      4347	channel.c	FUNCTION_97
0x400a7c8	              0xc3	                                     ret	      4347	channel.c	FUNCTION_97
0x400a7c9	     0xf1f80000000	                         nop dword [rax]	      4347	channel.c	FUNCTION_97
0x400a7d0	            0x31c9	                            xor ecx, ecx	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7d2	            0x31d2	                            xor edx, edx	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7d4	            0x89ee	                            mov esi, ebp	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7d6	          0x4889e7	                            mov rdi, rsp	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7d9	      0xe800000000	                          call 0x400a7de	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7de	            0x31f6	                            xor esi, esi	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7e0	            0x85c0	                           test eax, eax	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7e2	        0x400f95c6	                               setne sil	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7e6	      0xe97affffff	                           jmp 0x400a765	      4344	channel.c	FUNCTION_97	FOR_1	IF_1	CALL_2
0x400a7eb	            0x31f6	                            xor esi, esi	      4335	channel.c	FUNCTION_97
0x400a7ed	            0xebc1	                           jmp 0x400a7b0	      4335	channel.c	FUNCTION_97
0x400a7ef	      0xe800000000	                          call 0x400a7f4	      4347	channel.c	FUNCTION_97
channel_open_func	WHILE,0:FOR,0:CALL,16:IF,6:ELSE,0:functions,0:DO,0:SWITCH,0	125
0x400a9d0	            0x4155	                                push r13	       927	channel.c	FUNCTION_28
0x400a9d2	            0x4154	                                push r12	       927	channel.c	FUNCTION_28
0x400a9d4	              0x55	                                push rbp	       927	channel.c	FUNCTION_28
0x400a9d5	              0x53	                                push rbx	       927	channel.c	FUNCTION_28
0x400a9d6	          0x4889fb	                            mov rbx, rdi	       927	channel.c	FUNCTION_28
0x400a9d9	    0x4881ec980300	                          sub rsp, 0x398	       927	channel.c	FUNCTION_28
0x400a9e0	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	channel.c	FUNCTION_28
0x400a9e9	    0x488984248803	            mov qword [rsp + 0x388], rax	       927	channel.c	FUNCTION_28
0x400a9f1	            0x31c0	                            xor eax, eax	       927	channel.c	FUNCTION_28
0x400a9f3	      0xe800000000	                          call 0x400a9f8	       935	channel.c	FUNCTION_28	CALL_1
0x400a9f8	          0x4989c4	                            mov r12, rax	       935	channel.c	FUNCTION_28	CALL_1
0x400a9fb	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       936	channel.c	FUNCTION_28	IF_1
0x400a9fe	            0x85c0	                           test eax, eax	       936	channel.c	FUNCTION_28	IF_1
0x400aa00	            0x7414	                            je 0x400aa16	       936	channel.c	FUNCTION_28	IF_1
0x400aa02	          0x83f806	                              cmp eax, 6	       937	channel.c	FUNCTION_28	IF_1
0x400aa05	     0xf8595010000	                           jne 0x400aba0	       937	channel.c	FUNCTION_28	IF_1
0x400aa0b	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       937	channel.c	FUNCTION_28	IF_1
0x400aa10	     0xf848a010000	                            je 0x400aba0	       937	channel.c	FUNCTION_28	IF_1
0x400aa16	      0xbe3a000000	                           mov esi, 0x3a	       944	channel.c	FUNCTION_28	CALL_4
0x400aa1b	          0x4c89e7	                            mov rdi, r12	       944	channel.c	FUNCTION_28	CALL_4
0x400aa1e	      0xe800000000	                          call 0x400aa23	       944	channel.c	FUNCTION_28	CALL_4
0x400aa23	          0x4885c0	                           test rax, rax	       945	channel.c	FUNCTION_28	IF_2
0x400aa26	          0x4889c5	                            mov rbp, rax	       944	channel.c	FUNCTION_28	CALL_4
0x400aa29	     0xf84f5000000	                            je 0x400ab24	       945	channel.c	FUNCTION_28	IF_2
0x400aa2f	        0x488d7801	                      lea rdi, [rax + 1]	       951	channel.c	FUNCTION_28	CALL_7
0x400aa33	      0x488d742408	                      lea rsi, [rsp + 8]	       951	channel.c	FUNCTION_28	CALL_7
0x400aa38	          0xc60000	                       mov byte [rax], 0	       950	channel.c	FUNCTION_28
0x400aa3b	      0xba0a000000	                            mov edx, 0xa	       951	channel.c	FUNCTION_28	CALL_7
0x400aa40	      0xe800000000	                          call 0x400aa45	       951	channel.c	FUNCTION_28	CALL_7
0x400aa45	      0x41803c2400	                       cmp byte [r12], 0	       952	channel.c	FUNCTION_28	IF_3
0x400aa4a	          0x4989c5	                            mov r13, rax	       951	channel.c	FUNCTION_28	CALL_7
0x400aa4d	     0xf84cd000000	                            je 0x400ab20	       952	channel.c	FUNCTION_28	IF_3
0x400aa53	            0x85c0	                           test eax, eax	       952	channel.c	FUNCTION_28	IF_3
0x400aa55	     0xf8ec5000000	                           jle 0x400ab20	       952	channel.c	FUNCTION_28	IF_3
0x400aa5b	      0x488b442408	                mov rax, qword [rsp + 8]	       952	channel.c	FUNCTION_28	IF_3
0x400aa60	          0x803800	                       cmp byte [rax], 0	       952	channel.c	FUNCTION_28	IF_3
0x400aa63	     0xf85b7000000	                           jne 0x400ab20	       952	channel.c	FUNCTION_28	IF_3
0x400aa69	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	        90	string3.h	FUNCTION_138	CALL_6
0x400aa6e	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_138	CALL_6
0x400aa70	      0xb96f000000	                           mov ecx, 0x6f	        90	string3.h	FUNCTION_138	CALL_6
0x400aa75	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_138	CALL_6
0x400aa78	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x400aa7b	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      4502	channel.c	FUNCTION_107	IF_1
0x400aa7e	    0xc74424180200	               mov dword [rsp + 0x18], 2	       961	channel.c	FUNCTION_28
0x400aa86	    0xc78424080200	         mov dword [rsp + 0x208], 0x7d0 	       962	channel.c	FUNCTION_28
0x400aa91	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x400aa93	            0x745b	                            je 0x400aaf0	      4502	channel.c	FUNCTION_107	IF_1
0x400aa95	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_107	IF_2
0x400aa98	     0xf85e2000000	                           jne 0x400ab80	      4504	channel.c	FUNCTION_107	IF_2
0x400aa9e	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      4504	channel.c	FUNCTION_107	IF_2
0x400aaa2	            0x31c9	                            xor ecx, ecx	      4504	channel.c	FUNCTION_107	IF_2
0x400aaa4	      0xbaff0f0000	                          mov edx, 0xfff	      4504	channel.c	FUNCTION_107	IF_2
0x400aaa9	          0x4889ee	                            mov rsi, rbp	      4504	channel.c	FUNCTION_107	IF_2
0x400aaac	            0x31db	                            xor ebx, ebx	       933	channel.c	FUNCTION_28
0x400aaae	      0xe84d5bffff	        call sym.get_job_options.part.14	       933	channel.c	FUNCTION_28
0x400aab3	            0x85c0	                           test eax, eax	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x400aab5	     0xf8595000000	                           jne 0x400ab50	       963	channel.c	FUNCTION_28	IF_4	CALL_11
0x400aabb	          0x4889ef	                            mov rdi, rbp	       979	channel.c	FUNCTION_28	CALL_16
0x400aabe	      0xe800000000	                          call 0x400aac3	       979	channel.c	FUNCTION_28	CALL_16
0x400aac3	          0x4889d8	                            mov rax, rbx	       980	channel.c	FUNCTION_28
0x400aac6	    0x488b8c248803	           mov rcx, qword [rsp + 0x388] 	       981	channel.c	FUNCTION_28
0x400aace	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       981	channel.c	FUNCTION_28
0x400aad7	     0xf85e3000000	                           jne 0x400abc0	       981	channel.c	FUNCTION_28
0x400aadd	    0x4881c4980300	                          add rsp, 0x398	       981	channel.c	FUNCTION_28
0x400aae4	              0x5b	                                 pop rbx	       981	channel.c	FUNCTION_28
0x400aae5	              0x5d	                                 pop rbp	       981	channel.c	FUNCTION_28
0x400aae6	            0x415c	                                 pop r12	       981	channel.c	FUNCTION_28
0x400aae8	            0x415d	                                 pop r13	       981	channel.c	FUNCTION_28
0x400aaea	              0xc3	                                     ret	       981	channel.c	FUNCTION_28
0x400aaeb	       0xf1f440000	                   nop dword [rax + rax]	       981	channel.c	FUNCTION_28
0x400aaf0	            0x31d2	                            xor edx, edx	      4502	channel.c	FUNCTION_107	IF_1
0x400aaf2	            0x31c9	                            xor ecx, ecx	       972	channel.c	FUNCTION_28	CALL_14
0x400aaf4	          0x4489ee	                           mov esi, r13d	       972	channel.c	FUNCTION_28	CALL_14
0x400aaf7	          0x4c89e7	                            mov rdi, r12	       972	channel.c	FUNCTION_28	CALL_14
0x400aafa	      0xe800000000	                          call 0x400aaff	       972	channel.c	FUNCTION_28	CALL_14
0x400aaff	          0x4885c0	                           test rax, rax	       973	channel.c	FUNCTION_28	IF_6
0x400ab02	          0x4889c3	                            mov rbx, rax	       972	channel.c	FUNCTION_28	CALL_14
0x400ab05	            0x74b4	                            je 0x400aabb	       973	channel.c	FUNCTION_28	IF_6
0x400ab07	          0x4889ee	                            mov rsi, rbp	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400ab0a	          0x4889c7	                            mov rdi, rax	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400ab0d	    0xc7442410ffff	     mov dword [rsp + 0x10], 0x7fffffff 	       975	channel.c	FUNCTION_28	IF_6
0x400ab15	      0xe800000000	                          call 0x400ab1a	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400ab1a	            0xeb9f	                           jmp 0x400aabb	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400ab1c	         0xf1f4000	                         nop dword [rax]	       976	channel.c	FUNCTION_28	IF_6	CALL_15
0x400ab20	        0xc645003a	                    mov byte [rbp], 0x3a	       954	channel.c	FUNCTION_28	IF_3
0x400ab24	      0xba05000000	                              mov edx, 5	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400ab29	      0xbe00000000	                              mov esi, 0	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400ab2e	            0x31ff	                            xor edi, edi	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400ab30	      0xe800000000	                          call 0x400ab35	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400ab35	          0x4c89e6	                            mov rsi, r12	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400ab38	          0x4889c7	                            mov rdi, rax	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400ab3b	      0xe800000000	                          call 0x400ab40	       955	channel.c	FUNCTION_28	IF_3	CALL_9
0x400ab40	            0x31c0	                            xor eax, eax	       956	channel.c	FUNCTION_28	IF_3
0x400ab42	      0xe97fffffff	                           jmp 0x400aac6	       956	channel.c	FUNCTION_28	IF_3
0x400ab47	    0x660f1f840000	                    nop word [rax + rax]	       956	channel.c	FUNCTION_28	IF_3
0x400ab50	    0x8b8424080200	           mov eax, dword [rsp + 0x208] 	       966	channel.c	FUNCTION_28	IF_5
0x400ab57	            0x85c0	                           test eax, eax	       966	channel.c	FUNCTION_28	IF_5
0x400ab59	            0x796a	                           jns 0x400abc5	       966	channel.c	FUNCTION_28	IF_5
0x400ab5b	            0x31ff	                            xor edi, edi	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x400ab5d	      0xba05000000	                              mov edx, 5	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x400ab62	      0xbe00000000	                              mov esi, 0	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x400ab67	      0xe800000000	                          call 0x400ab6c	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x400ab6c	          0x4889c7	                            mov rdi, rax	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x400ab6f	      0xe800000000	                          call 0x400ab74	       968	channel.c	FUNCTION_28	IF_5	CALL_13
0x400ab74	      0xe942ffffff	                           jmp 0x400aabb	       969	channel.c	FUNCTION_28	IF_5
0x400ab79	     0xf1f80000000	                         nop dword [rax]	       969	channel.c	FUNCTION_28	IF_5
0x400ab80	      0xba05000000	                              mov edx, 5	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400ab85	      0xbe00000000	                              mov esi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400ab8a	            0x31ff	                            xor edi, edi	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400ab8c	      0xe800000000	                          call 0x400ab91	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400ab91	          0x4889c7	                            mov rdi, rax	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400ab94	            0x31db	                            xor ebx, ebx	       933	channel.c	FUNCTION_28
0x400ab96	      0xe800000000	                          call 0x400ab9b	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400ab9b	      0xe91bffffff	                           jmp 0x400aabb	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400aba0	      0xba05000000	                              mov edx, 5	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x400aba5	      0xbe00000000	                              mov esi, 0	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x400abaa	            0x31ff	                            xor edi, edi	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x400abac	      0xe800000000	                          call 0x400abb1	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x400abb1	          0x4889c7	                            mov rdi, rax	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x400abb4	      0xe800000000	                          call 0x400abb9	       939	channel.c	FUNCTION_28	IF_1	CALL_3
0x400abb9	            0x31c0	                            xor eax, eax	       940	channel.c	FUNCTION_28	IF_1
0x400abbb	      0xe906ffffff	                           jmp 0x400aac6	       940	channel.c	FUNCTION_28	IF_1
0x400abc0	      0xe800000000	                          call 0x400abc5	       981	channel.c	FUNCTION_28
0x400abc5	    0x8b9424040200	           mov edx, dword [rsp + 0x204] 	       981	channel.c	FUNCTION_28
0x400abcc	      0xe921ffffff	                           jmp 0x400aaf2	       981	channel.c	FUNCTION_28
job_start	WHILE,0:FOR,4:CALL,37:IF,23:ELSE,7:functions,0:DO,0:SWITCH,0	341
0x400c520	            0x4157	                                push r15	      5526	channel.c	FUNCTION_130
0x400c522	            0x4156	                                push r14	      5526	channel.c	FUNCTION_130
0x400c524	          0x4989fe	                            mov r14, rdi	      5526	channel.c	FUNCTION_130
0x400c527	            0x4155	                                push r13	      5526	channel.c	FUNCTION_130
0x400c529	            0x4154	                                push r12	      5526	channel.c	FUNCTION_130
0x400c52b	      0xbf70000000	                           mov edi, 0x70	      5402	channel.c	FUNCTION_125	CALL_1
0x400c530	              0x55	                                push rbp	      5526	channel.c	FUNCTION_130
0x400c531	              0x53	                                push rbx	      5526	channel.c	FUNCTION_130
0x400c532	          0x4989f5	                            mov r13, rsi	      5526	channel.c	FUNCTION_130
0x400c535	          0x4889d3	                            mov rbx, rdx	      5526	channel.c	FUNCTION_130
0x400c538	    0x4881ec080400	                          sub rsp, 0x408	      5526	channel.c	FUNCTION_130
0x400c53f	    0x64488b042528	                mov rax, qword fs:[0x28]	      5526	channel.c	FUNCTION_130
0x400c548	    0x48898424f803	            mov qword [rsp + 0x3f8], rax	      5526	channel.c	FUNCTION_130
0x400c550	            0x31c0	                            xor eax, eax	      5526	channel.c	FUNCTION_130
0x400c552	    0x48c744240800	                  mov qword [rsp + 8], 0	      5529	channel.c	FUNCTION_130
0x400c55b	    0xc74424040000	                  mov dword [rsp + 4], 0	      5530	channel.c	FUNCTION_130
0x400c563	      0xe800000000	                          call 0x400c568	      5402	channel.c	FUNCTION_125	CALL_1
0x400c568	          0x4889c5	                            mov rbp, rax	      5402	channel.c	FUNCTION_125	CALL_1
0x400c56b	            0x31c0	                            xor eax, eax	      5402	channel.c	FUNCTION_125	CALL_1
0x400c56d	          0x4885ed	                           test rbp, rbp	      5403	channel.c	FUNCTION_125	IF_1
0x400c570	     0xf84f3010000	                            je 0x400c769	      5403	channel.c	FUNCTION_125	IF_1
0x400c576	    0xc74558010000	               mov dword [rbp + 0x58], 1	      5405	channel.c	FUNCTION_125	IF_1
0x400c57d	      0xbf00000000	                              mov edi, 0	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400c582	      0xe800000000	                          call 0x400c587	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400c587	        0x48894530	            mov qword [rbp + 0x30], rax 	      5406	channel.c	FUNCTION_125	IF_1	CALL_2
0x400c58b	    0x488b05000000	            mov rax, qword [0x0400c592] 	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x400c592	          0x4885c0	                           test rax, rax	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x400c595	            0x7408	                            je 0x400c59f	      5408	channel.c	FUNCTION_125	IF_1	IF_2
0x400c597	        0x48896808	                mov qword [rax + 8], rbp	      5410	channel.c	FUNCTION_125	IF_1	IF_2
0x400c59b	        0x48894500	                    mov qword [rbp], rax	      5411	channel.c	FUNCTION_125	IF_1	IF_2
0x400c59f	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      5550	channel.c	FUNCTION_130	IF_2
0x400c5a4	          0x4885db	                           test rbx, rbx	      5549	channel.c	FUNCTION_130	IF_2
0x400c5a7	    0x48892d000000	            mov qword [0x0400c5ae], rbp 	      5413	channel.c	FUNCTION_125	IF_1
0x400c5ae	    0xc74528000000	               mov dword [rbp + 0x28], 0	      5544	channel.c	FUNCTION_130
0x400c5b5	      0xb96f000000	                           mov ecx, 0x6f	      5550	channel.c	FUNCTION_130	IF_2
0x400c5ba	          0x4c89e7	                            mov rdi, r12	      5550	channel.c	FUNCTION_130	IF_2
0x400c5bd	     0xf8484030000	                            je 0x400c947	      5549	channel.c	FUNCTION_130	IF_2
0x400c5c3	          0x4889de	                            mov rsi, rbx	      5550	channel.c	FUNCTION_130	IF_2
0x400c5c6	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5550	channel.c	FUNCTION_130	IF_2
0x400c5c9	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5550	channel.c	FUNCTION_130	IF_2
0x400c5cd	      0xa900000100	                       test eax, 0x10000	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5d2	            0x740b	                            je 0x400c5df	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5d4	      0x837c244c02	               cmp dword [rsp + 0x4c], 2	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5d9	     0xf84c1020000	                            je 0x400c8a0	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5df	      0xa900000200	                       test eax, 0x20000	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5e4	            0x740b	                            je 0x400c5f1	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5e6	      0x837c245002	               cmp dword [rsp + 0x50], 2	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5eb	     0xf84d7020000	                            je 0x400c8c8	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5f1	      0xa900000400	                       test eax, 0x40000	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5f6	     0xf859c010000	                           jne 0x400c798	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c5fc	          0xf6c440	                           test ah, 0x40	      5421	channel.c	FUNCTION_126	IF_1
0x400c5ff	     0xf856b020000	                           jne 0x400c870	      5421	channel.c	FUNCTION_126	IF_1
0x400c605	          0xf6c480	                           test ah, 0x80	      5429	channel.c	FUNCTION_126	IF_3
0x400c608	     0xf85da010000	                           jne 0x400c7e8	      5429	channel.c	FUNCTION_126	IF_3
0x400c60e	          0x4d85ed	                           test r13, r13	      5614	channel.c	FUNCTION_130	IF_12
0x400c611	     0xf8421020000	                            je 0x400c838	      5614	channel.c	FUNCTION_130	IF_12
0x400c617	      0x49837d0000	                      cmp qword [r13], 0	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c61c	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c620	            0x7423	                            je 0x400c645	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c622	        0x8b442404	                mov eax, dword [rsp + 4]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c626	          0x8d5001	                      lea edx, [rax + 1]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c629	        0x498d4508	                      lea rax, [r13 + 8]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c62d	           0xf1f00	                         nop dword [rax]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c630	          0x488b30	                    mov rsi, qword [rax]	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c633	        0x4883c008	                              add rax, 8	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c637	            0x89d1	                            mov ecx, edx	      5618	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c639	          0x8d5201	                      lea edx, [rdx + 1]	      5618	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c63c	          0x4885f6	                           test rsi, rsi	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c63f	            0x75ef	                           jne 0x400c630	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c641	        0x894c2404	                mov dword [rsp + 4], ecx	      5617	channel.c	FUNCTION_130	IF_12	FOR_2
0x400c645	    0x8d3ccd080000	                    lea edi, [rcx*8 + 8]	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x400c64c	      0xe800000000	                          call 0x400c651	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x400c651	          0x4885c0	                           test rax, rax	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x400c654	          0x4889c3	                            mov rbx, rax	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x400c657	      0x4889442408	                mov qword [rsp + 8], rax	      5619	channel.c	FUNCTION_130	IF_12	CALL_16
0x400c65c	     0xf84de020000	                            je 0x400c940	      5620	channel.c	FUNCTION_130	IF_12	IF_13
0x400c662	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c667	            0x85c0	                           test eax, eax	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c669	            0x7e34	                           jle 0x400c69f	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c66b	          0x4531f6	                          xor r14d, r14d	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c66e	          0x4531ff	                          xor r15d, r15d	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c671	     0xf1f80000000	                         nop dword [rax]	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c678	      0x4b8b7c3500	              mov rdi, qword [r13 + r14]	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x400c67d	          0x4c01f3	                            add rbx, r14	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x400c680	        0x4183c701	                             add r15d, 1	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c684	        0x4983c608	                              add r14, 8	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c688	      0xe800000000	                          call 0x400c68d	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x400c68d	          0x488903	                    mov qword [rbx], rax	      5623	channel.c	FUNCTION_130	IF_12	CALL_17
0x400c690	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c695	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c69a	          0x4439f8	                           cmp eax, r15d	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c69d	            0x7fd9	                            jg 0x400c678	      5622	channel.c	FUNCTION_130	IF_12	FOR_3
0x400c69f	    0x48c704c30000	              mov qword [rbx + rax*8], 0	      5624	channel.c	FUNCTION_130	IF_12
0x400c6a7	    0x48833d000000	               cmp qword [0x0400c6af], 0	      5665	channel.c	FUNCTION_130	IF_20	CALL_25
0x400c6af	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5662	channel.c	FUNCTION_130
0x400c6b4	        0x48897d68	            mov qword [rbp + 0x68], rdi 	      5662	channel.c	FUNCTION_130
0x400c6b8	            0x747b	                            je 0x400c735	      5665	channel.c	FUNCTION_130	IF_20	CALL_25
0x400c6ba	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400c6bf	      0xbac8000000	                           mov edx, 0xc8	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400c6c4	      0xbe01000000	                              mov esi, 1	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400c6c9	      0xe800000000	                          call 0x400c6ce	      5669	channel.c	FUNCTION_130	IF_20	CALL_26
0x400c6ce	        0x8b442404	                mov eax, dword [rsp + 4]	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c6d2	            0x85c0	                           test eax, eax	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c6d4	            0x7e3d	                           jle 0x400c713	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c6d6	          0x4531ed	                          xor r13d, r13d	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c6d9	            0x31db	                            xor ebx, ebx	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c6db	            0xeb1a	                           jmp 0x400c6f7	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c6dd	           0xf1f00	                         nop dword [rax]	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c6e0	            0x85db	                           test ebx, ebx	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x400c6e2	            0x7e0f	                           jle 0x400c6f3	      5672	channel.c	FUNCTION_130	IF_20	FOR_4	IF_21
0x400c6e4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x400c6e9	      0xbe00000000	                              mov esi, 0	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x400c6ee	      0xe800000000	                          call 0x400c6f3	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x400c6f3	        0x4983c508	                              add r13, 8	      5673	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_27
0x400c6f7	      0x488b442408	                mov rax, qword [rsp + 8]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400c6fc	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400c701	          0x83c301	                              add ebx, 1	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c704	        0x4a8b3428	              mov rsi, qword [rax + r13]	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400c708	      0xe800000000	                          call 0x400c70d	      5674	channel.c	FUNCTION_130	IF_20	FOR_4	CALL_28
0x400c70d	        0x395c2404	                cmp dword [rsp + 4], ebx	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c711	            0x7fcd	                            jg 0x400c6e0	      5670	channel.c	FUNCTION_130	IF_20	FOR_4
0x400c713	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x400c718	      0xbe00000000	                              mov esi, 0	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x400c71d	            0x31ff	                            xor edi, edi	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x400c71f	            0x31c0	                            xor eax, eax	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x400c721	      0xe800000000	                          call 0x400c726	      5676	channel.c	FUNCTION_130	IF_20	CALL_29
0x400c726	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x400c72b	      0xe800000000	                          call 0x400c730	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x400c730	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5677	channel.c	FUNCTION_130	IF_20	CALL_30
0x400c735	          0x4c89e2	                            mov rdx, r12	      5679	channel.c	FUNCTION_130	CALL_31
0x400c738	          0x4889ee	                            mov rsi, rbp	      5679	channel.c	FUNCTION_130	CALL_31
0x400c73b	      0xe800000000	                          call 0x400c740	      5679	channel.c	FUNCTION_130	CALL_31
0x400c740	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      5686	channel.c	FUNCTION_130	IF_22
0x400c744	          0x4885ff	                           test rdi, rdi	      5686	channel.c	FUNCTION_130	IF_22
0x400c747	            0x7405	                            je 0x400c74e	      5686	channel.c	FUNCTION_130	IF_22
0x400c749	      0xe8726cffff	               call sym.channel_write_in	      5687	channel.c	FUNCTION_130	CALL_34
0x400c74e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5687	channel.c	FUNCTION_130	CALL_34
0x400c753	        0x48397d68	            cmp qword [rbp + 0x68], rdi 	      5693	channel.c	FUNCTION_130	IF_23
0x400c757	            0x7405	                            je 0x400c75e	      5693	channel.c	FUNCTION_130	IF_23
0x400c759	      0xe800000000	                          call 0x400c75e	      5694	channel.c	FUNCTION_130	CALL_36
0x400c75e	          0x4c89e7	                            mov rdi, r12	      5695	channel.c	FUNCTION_130	CALL_37
0x400c761	      0xe800000000	                          call 0x400c766	      5695	channel.c	FUNCTION_130	CALL_37
0x400c766	          0x4889e8	                            mov rax, rbp	      5696	channel.c	FUNCTION_130
0x400c769	    0x488b8c24f803	           mov rcx, qword [rsp + 0x3f8] 	      5697	channel.c	FUNCTION_130
0x400c771	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5697	channel.c	FUNCTION_130
0x400c77a	     0xf8568030000	                           jne 0x400cae8	      5697	channel.c	FUNCTION_130
0x400c780	    0x4881c4080400	                          add rsp, 0x408	      5697	channel.c	FUNCTION_130
0x400c787	              0x5b	                                 pop rbx	      5697	channel.c	FUNCTION_130
0x400c788	              0x5d	                                 pop rbp	      5697	channel.c	FUNCTION_130
0x400c789	            0x415c	                                 pop r12	      5697	channel.c	FUNCTION_130
0x400c78b	            0x415d	                                 pop r13	      5697	channel.c	FUNCTION_130
0x400c78d	            0x415e	                                 pop r14	      5697	channel.c	FUNCTION_130
0x400c78f	            0x415f	                                 pop r15	      5697	channel.c	FUNCTION_130
0x400c791	              0xc3	                                     ret	      5697	channel.c	FUNCTION_130
0x400c792	    0x660f1f440000	                    nop word [rax + rax]	      5697	channel.c	FUNCTION_130
0x400c798	      0x837c245402	               cmp dword [rsp + 0x54], 2	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c79d	     0xf847d010000	                            je 0x400c920	      5566	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c7a3	      0x837c245403	               cmp dword [rsp + 0x54], 3	      5574	channel.c	FUNCTION_130	IF_5
0x400c7a8	     0xf854efeffff	                           jne 0x400c5fc	      5574	channel.c	FUNCTION_130	IF_5
0x400c7ae	      0xa900000004	       test eax, loc.imp.list_append_tv 	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x400c7b3	     0xf850a020000	                           jne 0x400c9c3	      5579	channel.c	FUNCTION_130	IF_5	IF_6
0x400c7b9	      0xa900002000	                      test eax, 0x200000	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x400c7be	     0xf85cf010000	                           jne 0x400c993	      5585	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8
0x400c7c4	            0x31ff	                            xor edi, edi	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7c6	      0xba05000000	                              mov edx, 5	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7cb	      0xbe00000000	                              mov esi, 0	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7d0	      0xe800000000	                          call 0x400c7d5	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7d5	          0x4889c7	                            mov rdi, rax	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7d8	      0xe800000000	                          call 0x400c7dd	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7dd	      0xe96cffffff	                           jmp 0x400c74e	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7e2	    0x660f1f440000	                    nop word [rax + rax]	      5587	channel.c	FUNCTION_130	IF_5	ELSE_2	IF_8	CALL_11
0x400c7e8	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400c7ec	        0x488b7548	            mov rsi, qword [rbp + 0x48] 	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400c7f0	      0xe800000000	                          call 0x400c7f5	      5431	channel.c	FUNCTION_126	IF_3	CALL_3
0x400c7f5	    0x488bbc241002	           mov rdi, qword [rsp + 0x210] 	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400c7fd	          0x4885ff	                           test rdi, rdi	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400c800	     0xf84ea000000	                            je 0x400c8f0	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400c806	          0x803f00	                       cmp byte [rdi], 0	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400c809	     0xf84e1000000	                            je 0x400c8f0	      5432	channel.c	FUNCTION_126	IF_3	IF_4
0x400c80f	    0x488b84241802	           mov rax, qword [rsp + 0x218] 	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x400c817	          0x4885c0	                           test rax, rax	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400c81a	        0x48894548	            mov qword [rbp + 0x48], rax 	      5439	channel.c	FUNCTION_126	IF_3	ELSE_2
0x400c81e	     0xf847e020000	                            je 0x400caa2	      5440	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400c824	        0x48897d40	            mov qword [rbp + 0x40], rdi 	      5442	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400c828	          0x830001	                      add dword [rax], 1	      5443	channel.c	FUNCTION_126	IF_3	ELSE_2	IF_5
0x400c82b	          0x4d85ed	                           test r13, r13	      5614	channel.c	FUNCTION_130	IF_12
0x400c82e	     0xf85e3fdffff	                           jne 0x400c617	      5614	channel.c	FUNCTION_130	IF_12
0x400c834	         0xf1f4000	                         nop dword [rax]	      5614	channel.c	FUNCTION_130	IF_12
0x400c838	          0x418b06	                    mov eax, dword [r14]	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400c83b	          0x83f802	                              cmp eax, 2	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400c83e	     0xf84f7010000	                            je 0x400ca3b	      5628	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400c844	          0x83f805	                              cmp eax, 5	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400c847	     0xf84b3010000	                            je 0x400ca00	      5641	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400c84d	      0xba05000000	                              mov edx, 5	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x400c852	      0xbe00000000	                              mov esi, 0	      5634	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15	CALL_19
0x400c857	            0x31ff	                            xor edi, edi	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c859	      0xe800000000	                          call 0x400c85e	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c85e	          0x4889c7	                            mov rdi, rax	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c861	      0xe800000000	                          call 0x400c866	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c866	      0xe9e3feffff	                           jmp 0x400c74e	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c86b	       0xf1f440000	                   nop dword [rax + rax]	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c870	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x400c874	      0xe800000000	                          call 0x400c879	      5423	channel.c	FUNCTION_126	IF_1	CALL_1
0x400c879	    0x488bbc248802	           mov rdi, qword [rsp + 0x288] 	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400c881	          0x4885ff	                           test rdi, rdi	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400c884	            0x7405	                            je 0x400c88b	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400c886	          0x803f00	                       cmp byte [rdi], 0	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400c889	            0x757a	                           jne 0x400c905	      5424	channel.c	FUNCTION_126	IF_1	IF_2
0x400c88b	    0x48c745300000	               mov qword [rbp + 0x30], 0	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x400c893	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x400c897	      0xe969fdffff	                           jmp 0x400c605	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x400c89c	         0xf1f4000	                         nop dword [rax]	      5425	channel.c	FUNCTION_126	IF_1	IF_2
0x400c8a0	      0xa900000800	                       test eax, 0x80000	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8a5	            0x7411	                            je 0x400c8b8	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8a7	    0x488b94246801	           mov rdx, qword [rsp + 0x168] 	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8af	          0x803a00	                       cmp byte [rdx], 0	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8b2	     0xf8527fdffff	                           jne 0x400c5df	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8b8	      0xba05000000	                              mov edx, 5	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c8bd	      0xbe00000000	                              mov esi, 0	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c8c2	            0xeb93	                           jmp 0x400c857	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c8c4	         0xf1f4000	                         nop dword [rax]	      5570	channel.c	FUNCTION_130	FOR_1	IF_4	CALL_6
0x400c8c8	      0xa900001000	                      test eax, 0x100000	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8cd	            0x74e9	                            je 0x400c8b8	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8cf	    0x488b94247001	           mov rdx, qword [rsp + 0x170] 	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8d7	          0x803a00	                       cmp byte [rdx], 0	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8da	            0x74dc	                            je 0x400c8b8	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8dc	      0xa900000400	                       test eax, 0x40000	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8e1	     0xf8415fdffff	                            je 0x400c5fc	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8e7	      0xe9acfeffff	                           jmp 0x400c798	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8ec	         0xf1f4000	                         nop dword [rax]	      5565	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c8f0	    0x48c745400000	               mov qword [rbp + 0x40], 0	      5434	channel.c	FUNCTION_126	IF_3	IF_4
0x400c8f8	    0x48c745480000	               mov qword [rbp + 0x48], 0	      5435	channel.c	FUNCTION_126	IF_3	IF_4
0x400c900	      0xe909fdffff	                           jmp 0x400c60e	      5435	channel.c	FUNCTION_126	IF_3	IF_4
0x400c905	      0xe800000000	                          call 0x400c90a	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400c90a	        0x48894530	            mov qword [rbp + 0x30], rax 	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400c90e	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400c912	      0xe9eefcffff	                           jmp 0x400c605	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400c917	    0x660f1f840000	                    nop word [rax + rax]	      5427	channel.c	FUNCTION_126	IF_1	CALL_2
0x400c920	      0xa900002000	                      test eax, 0x200000	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c925	            0x7491	                            je 0x400c8b8	      5567	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c927	    0x488b94247801	           mov rdx, qword [rsp + 0x178] 	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c92f	          0x803a00	                       cmp byte [rdx], 0	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c932	     0xf856bfeffff	                           jne 0x400c7a3	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c938	      0xe97bffffff	                           jmp 0x400c8b8	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c93d	           0xf1f00	                         nop dword [rax]	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c940	            0x31ff	                            xor edi, edi	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c942	      0xe90cfeffff	                           jmp 0x400c753	      5568	channel.c	FUNCTION_130	FOR_1	IF_4
0x400c947	          0x4889d8	                            mov rax, rbx	        90	string3.h	FUNCTION_138	CALL_6
0x400c94a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x400c94d	        0x418b4610	            mov eax, dword [r14 + 0x10] 	      4502	channel.c	FUNCTION_107	IF_1
0x400c951	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x400c953	     0xf84db000000	                            je 0x400ca34	      4502	channel.c	FUNCTION_107	IF_1
0x400c959	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_107	IF_2
0x400c95c	      0xba05000000	                              mov edx, 5	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400c961	      0xbe00000000	                              mov esi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400c966	     0xf85ebfeffff	                           jne 0x400c857	      4504	channel.c	FUNCTION_107	IF_2
0x400c96c	        0x498d7e10	                   lea rdi, [r14 + 0x10]	      4504	channel.c	FUNCTION_107	IF_2
0x400c970	      0xb930000000	                           mov ecx, 0x30	      4504	channel.c	FUNCTION_107	IF_2
0x400c975	      0xbaffce0110	                     mov edx, 0x1001ceff	      4504	channel.c	FUNCTION_107	IF_2
0x400c97a	          0x4c89e6	                            mov rsi, r12	      4504	channel.c	FUNCTION_107	IF_2
0x400c97d	      0xe87e3cffff	        call sym.get_job_options.part.14	      4504	channel.c	FUNCTION_107	IF_2
0x400c982	            0x85c0	                           test eax, eax	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400c984	     0xf84c4fdffff	                            je 0x400c74e	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400c98a	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400c98e	      0xe93afcffff	                           jmp 0x400c5cd	      5556	channel.c	FUNCTION_130	ELSE_1	IF_3	CALL_4
0x400c993	    0x488bbc247801	           mov rdi, qword [rsp + 0x178] 	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400c99b	            0x31f6	                            xor esi, esi	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400c99d	      0xe800000000	                          call 0x400c9a2	      5590	channel.c	FUNCTION_130	IF_5	CALL_12
0x400c9a2	          0x4885c0	                           test rax, rax	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x400c9a5	     0xf84a3fdffff	                            je 0x400c74e	      5591	channel.c	FUNCTION_130	IF_5	IF_9
0x400c9ab	      0x4883780800	                  cmp qword [rax + 8], 0	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x400c9b0	     0xf84b7000000	                            je 0x400ca6d	      5593	channel.c	FUNCTION_130	IF_5	IF_10
0x400c9b6	        0x48894550	            mov qword [rbp + 0x50], rax 	      5608	channel.c	FUNCTION_130	IF_5
0x400c9ba	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5608	channel.c	FUNCTION_130	IF_5
0x400c9be	      0xe939fcffff	                           jmp 0x400c5fc	      5608	channel.c	FUNCTION_130	IF_5
0x400c9c3	    0x8bbc248c0100	           mov edi, dword [rsp + 0x18c] 	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x400c9ca	      0xe800000000	                          call 0x400c9cf	      5581	channel.c	FUNCTION_130	IF_5	IF_6	CALL_7
0x400c9cf	          0x4885c0	                           test rax, rax	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x400c9d2	            0x75d7	                           jne 0x400c9ab	      5582	channel.c	FUNCTION_130	IF_5	IF_6	IF_7
0x400c9d4	    0x48639c248c01	        movsxd rbx, dword [rsp + 0x18c] 	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9dc	            0x31ff	                            xor edi, edi	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9de	      0xba05000000	                              mov edx, 5	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9e3	      0xbe00000000	                              mov esi, 0	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9e8	      0xe800000000	                          call 0x400c9ed	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9ed	          0x4889c7	                            mov rdi, rax	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9f0	          0x4889de	                            mov rsi, rbx	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9f3	      0xe800000000	                          call 0x400c9f8	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9f8	      0xe951fdffff	                           jmp 0x400c74e	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400c9fd	           0xf1f00	                         nop dword [rax]	      5583	channel.c	FUNCTION_130	IF_5	IF_6	CALL_9
0x400ca00	        0x498b7e08	                mov rdi, qword [r14 + 8]	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400ca04	          0x4885ff	                           test rdi, rdi	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400ca07	     0xf8440feffff	                            je 0x400c84d	      5642	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400ca0d	          0x8b573c	            mov edx, dword [rdi + 0x3c] 	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400ca10	            0x85d2	                           test edx, edx	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400ca12	     0xf8e35feffff	                           jle 0x400c84d	      5643	channel.c	FUNCTION_130	ELSE_6	IF_17
0x400ca18	      0x488d542404	                      lea rdx, [rsp + 4]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x400ca1d	      0x488d742408	                      lea rsi, [rsp + 8]	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x400ca22	      0xe800000000	                          call 0x400ca27	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x400ca27	            0x85c0	                           test eax, eax	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x400ca29	     0xf841ffdffff	                            je 0x400c74e	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x400ca2f	      0xe973fcffff	                           jmp 0x400c6a7	      5652	channel.c	FUNCTION_130	ELSE_7	IF_18	CALL_23
0x400ca34	            0x31c0	                            xor eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x400ca36	      0xe9b6fbffff	                           jmp 0x400c5f1	      4502	channel.c	FUNCTION_107	IF_1
0x400ca3b	        0x498b7e08	                mov rdi, qword [r14 + 8]	      5631	channel.c	FUNCTION_130	ELSE_5	IF_14
0x400ca3f	          0x4885ff	                           test rdi, rdi	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400ca42	     0xf8405feffff	                            je 0x400c84d	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400ca48	          0x803f00	                       cmp byte [rdi], 0	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400ca4b	     0xf84fcfdffff	                            je 0x400c84d	      5632	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_15
0x400ca51	      0x488d542404	                      lea rdx, [rsp + 4]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x400ca56	      0x488d742408	                      lea rsi, [rsp + 8]	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x400ca5b	      0xe800000000	                          call 0x400ca60	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x400ca60	            0x85c0	                           test eax, eax	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x400ca62	     0xf853ffcffff	                           jne 0x400c6a7	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x400ca68	      0xe9e1fcffff	                           jmp 0x400c74e	      5638	channel.c	FUNCTION_130	ELSE_5	IF_14	IF_16	CALL_20
0x400ca6d	      0xf644243304	               test byte [rsp + 0x33], 4	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400ca72	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      5604	channel.c	FUNCTION_130	IF_5	IF_10	ELSE_4
0x400ca7a	            0x753c	                           jne 0x400cab8	      5598	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400ca7c	      0xba05000000	                              mov edx, 5	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca81	      0xbe00000000	                              mov esi, 0	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca86	            0x31ff	                            xor edi, edi	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca88	      0xe800000000	                          call 0x400ca8d	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca8d	          0x4889de	                            mov rsi, rbx	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca90	          0x4889c7	                            mov rdi, rax	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca93	      0xe800000000	                          call 0x400ca98	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca98	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400ca9d	      0xe9b1fcffff	                           jmp 0x400c753	      5605	channel.c	FUNCTION_130	IF_5	IF_10	CALL_14
0x400caa2	      0xe800000000	                          call 0x400caa7	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400caa7	        0x48894540	            mov qword [rbp + 0x40], rax 	      5447	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_4
0x400caab	          0x4889c7	                            mov rdi, rax	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x400caae	      0xe800000000	                          call 0x400cab3	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x400cab3	      0xe956fbffff	                           jmp 0x400c60e	      5448	channel.c	FUNCTION_126	IF_3	ELSE_2	ELSE_3	CALL_5
0x400cab8	    0x448b84248c01	           mov r8d, dword [rsp + 0x18c] 	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cac0	    0x488dbc24b003	                  lea rdi, [rsp + 0x3b0]	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cac8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cacd	      0xba41000000	                           mov edx, 0x41	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cad2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cad7	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cad9	    0x488d9c24b003	                  lea rbx, [rsp + 0x3b0]	      5601	channel.c	FUNCTION_130	IF_5	IF_10	IF_11
0x400cae1	      0xe800000000	                          call 0x400cae6	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cae6	            0xeb94	                           jmp 0x400ca7c	        33	stdio2.h	FUNCTION_147	CALL_1
0x400cae8	      0xe800000000	                          call 0x400caed	      5697	channel.c	FUNCTION_130
channel_parse_messages	WHILE,1:FOR,0:CALL,12:IF,9:ELSE,1:functions,0:DO,0:SWITCH,0	196
0x400a060	            0x4156	                                push r14	      4215	channel.c	FUNCTION_95
0x400a062	            0x4154	                                push r12	      4215	channel.c	FUNCTION_95
0x400a064	            0x31f6	                            xor esi, esi	      4223	channel.c	FUNCTION_95	CALL_1
0x400a066	              0x55	                                push rbp	      4215	channel.c	FUNCTION_95
0x400a067	              0x53	                                push rbx	      4215	channel.c	FUNCTION_95
0x400a068	        0x4883ec28	                           sub rsp, 0x28	      4215	channel.c	FUNCTION_95
0x400a06c	    0x488b1d000000	            mov rbx, qword [0x0400a073] 	      4216	channel.c	FUNCTION_95
0x400a073	          0x4889e7	                            mov rdi, rsp	      4223	channel.c	FUNCTION_95	CALL_1
0x400a076	    0x64488b042528	                mov rax, qword fs:[0x28]	      4215	channel.c	FUNCTION_95
0x400a07f	      0x4889442418	             mov qword [rsp + 0x18], rax	      4215	channel.c	FUNCTION_95
0x400a084	            0x31c0	                            xor eax, eax	      4215	channel.c	FUNCTION_95
0x400a086	      0xe800000000	                          call 0x400a08b	      4223	channel.c	FUNCTION_95	CALL_1
0x400a08b	    0x8b2d00000000	            mov ebp, dword [0x0400a091] 	      4230	channel.c	FUNCTION_95	IF_1
0x400a091	    0x830500000000	               add dword [0x0400a098], 1	      4226	channel.c	FUNCTION_95
0x400a098	            0x85ed	                           test ebp, ebp	      4230	channel.c	FUNCTION_95	IF_1
0x400a09a	     0xf85e0020000	                           jne 0x400a380	      4230	channel.c	FUNCTION_95	IF_1
0x400a0a0	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a0a3	     0xf840d030000	                            je 0x400a3b6	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a0a9	            0x31ed	                            xor ebp, ebp	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a0ab	          0x4531e4	                          xor r12d, r12d	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a0ae	            0xeb36	                           jmp 0x400a0e6	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a0b0	    0x448b0d000000	            mov r9d, dword [0x0400a0b7] 	       382	channel.c	FUNCTION_13	IF_1
0x400a0b7	          0x4585c9	                           test r9d, r9d	       382	channel.c	FUNCTION_13	IF_1
0x400a0ba	            0x751a	                           jne 0x400a0d6	       382	channel.c	FUNCTION_13	IF_1
0x400a0bc	    0x448b05000000	            mov r8d, dword [0x0400a0c3] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400a0c3	          0x4585c0	                           test r8d, r8d	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400a0c6	     0xf855c020000	                           jne 0x400a328	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400a0cc	    0xc78370040000	              mov dword [rbx + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x400a0d6	    0x488b1d000000	            mov rbx, qword [0x0400a0dd] 	      4249	channel.c	FUNCTION_95	WHILE_1	IF_3
0x400a0dd	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a0e0	     0xf84aa000000	                            je 0x400a190	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a0e6	    0x448b9b6c0400	          mov r11d, dword [rbx + 0x46c] 	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x400a0ed	          0x4585db	                         test r11d, r11d	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x400a0f0	     0xf84ea000000	                            je 0x400a1e0	      4237	channel.c	FUNCTION_95	WHILE_1	IF_2	CALL_3
0x400a0f6	    0x448b93700400	          mov r10d, dword [rbx + 0x470] 	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x400a0fd	          0x4585d2	                         test r10d, r10d	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x400a100	            0x75ae	                           jne 0x400a0b0	      4245	channel.c	FUNCTION_95	WHILE_1	IF_3
0x400a102	    0x448bb3b40400	          mov r14d, dword [rbx + 0x4b4] 	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x400a109	          0x4585f6	                         test r14d, r14d	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x400a10c	            0x7526	                           jne 0x400a134	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x400a10e	    0x8bbbb0040000	           mov edi, dword [rbx + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400a114	            0x85ff	                           test edi, edi	       315	channel.c	FUNCTION_9	IF_1
0x400a116	            0x740e	                            je 0x400a126	       315	channel.c	FUNCTION_9	IF_1
0x400a118	    0x4883bba80400	              cmp qword [rbx + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400a120	     0xf849a010000	                            je 0x400a2c0	       315	channel.c	FUNCTION_9	IF_1
0x400a126	    0x4883bb900400	              cmp qword [rbx + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400a12e	     0xf840c020000	                            je 0x400a340	       319	channel.c	FUNCTION_9	IF_2
0x400a134	            0x89e8	                            mov eax, ebp	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a136	          0x4889c2	                            mov rdx, rax	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a139	        0x48c1e008	                              shl rax, 8	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a13d	        0x48c1e204	                              shl rdx, 4	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a141	          0x4801d0	                            add rax, rdx	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a144	          0x4801d8	                            add rax, rbx	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a147	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a14b	     0xf85cf000000	                           jne 0x400a220	      4260	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a151	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x400a154	          0x8d51fe	                      lea edx, [rcx - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x400a157	          0x83fa01	                              cmp edx, 1	      2739	channel.c	FUNCTION_64	IF_1
0x400a15a	     0xf8608020000	                           jbe 0x400a368	      2739	channel.c	FUNCTION_64	IF_1
0x400a160	      0x4883784000	               cmp qword [rax + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x400a165	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x400a168	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x400a16b	            0x85c0	                           test eax, eax	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x400a16d	     0xf85ad000000	                           jne 0x400a220	      4261	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_8
0x400a173	          0x83fd01	                              cmp ebp, 1	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x400a176	     0xf86bc010000	                           jbe 0x400a338	      4284	channel.c	FUNCTION_95	WHILE_1	IF_8
0x400a17c	          0x488b1b	                    mov rbx, qword [rbx]	      4288	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x400a17f	            0x31ed	                            xor ebp, ebp	      4289	channel.c	FUNCTION_95	WHILE_1	ELSE_1
0x400a181	          0x4885db	                           test rbx, rbx	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a184	     0xf855cffffff	                           jne 0x400a0e6	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a18a	    0x660f1f440000	                    nop word [rax + rax]	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a190	    0x8b0500000000	            mov eax, dword [0x0400a196] 	      4293	channel.c	FUNCTION_95	IF_9
0x400a196	            0x85c0	                           test eax, eax	      4293	channel.c	FUNCTION_95	IF_9
0x400a198	            0x7414	                            je 0x400a1ae	      4293	channel.c	FUNCTION_95	IF_9
0x400a19a	      0xbf01000000	                              mov edi, 1	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x400a19f	    0xc70500000000	               mov dword [0x0400a1a9], 0	      4295	channel.c	FUNCTION_95	IF_9
0x400a1a9	      0xe800000000	                          call 0x400a1ae	      4296	channel.c	FUNCTION_95	IF_9	CALL_12
0x400a1ae	    0x832d00000000	               sub dword [0x0400a1b5], 1	      4299	channel.c	FUNCTION_95
0x400a1b5	          0x4489e0	                           mov eax, r12d	      4302	channel.c	FUNCTION_95
0x400a1b8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4302	channel.c	FUNCTION_95
0x400a1bd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4302	channel.c	FUNCTION_95
0x400a1c6	     0xf85f2010000	                           jne 0x400a3be	      4302	channel.c	FUNCTION_95
0x400a1cc	        0x4883c428	                           add rsp, 0x28	      4302	channel.c	FUNCTION_95
0x400a1d0	              0x5b	                                 pop rbx	      4302	channel.c	FUNCTION_95
0x400a1d1	              0x5d	                                 pop rbp	      4302	channel.c	FUNCTION_95
0x400a1d2	            0x415c	                                 pop r12	      4302	channel.c	FUNCTION_95
0x400a1d4	            0x415e	                                 pop r14	      4302	channel.c	FUNCTION_95
0x400a1d6	              0xc3	                                     ret	      4302	channel.c	FUNCTION_95
0x400a1d7	    0x660f1f840000	                    nop word [rax + rax]	      4302	channel.c	FUNCTION_95
0x400a1e0	            0x31c0	                            xor eax, eax	      3278	channel.c	FUNCTION_78	CALL_1
0x400a1e2	    0xc7836c040000	          mov dword [rbx + 0x46c], 0x10 	      4239	channel.c	FUNCTION_95	WHILE_1	IF_2
0x400a1ec	      0xbe00000000	                              mov esi, 0	      3278	channel.c	FUNCTION_78	CALL_1
0x400a1f1	          0x4889df	                            mov rdi, rbx	      3278	channel.c	FUNCTION_78	CALL_1
0x400a1f4	      0xe800000000	                          call 0x400a1f9	      3278	channel.c	FUNCTION_78	CALL_1
0x400a1f9	    0x488b83780400	           mov rax, qword [rbx + 0x478] 	      3279	channel.c	FUNCTION_78	IF_1
0x400a200	          0x4885c0	                           test rax, rax	      3279	channel.c	FUNCTION_78	IF_1
0x400a203	            0x7402	                            je 0x400a207	      3279	channel.c	FUNCTION_78	IF_1
0x400a205	            0xffd0	                                call rax	      3280	channel.c	FUNCTION_78	IF_1
0x400a207	          0x4889df	                            mov rdi, rbx	      3281	channel.c	FUNCTION_78	CALL_2
0x400a20a	      0xbe01000000	                              mov esi, 1	      3281	channel.c	FUNCTION_78	CALL_2
0x400a20f	      0xe800000000	                          call 0x400a214	      3281	channel.c	FUNCTION_78	CALL_2
0x400a214	    0x488b1d000000	            mov rbx, qword [0x0400a21b] 	      4242	channel.c	FUNCTION_95	WHILE_1	IF_2
0x400a21b	      0xe9bdfeffff	                           jmp 0x400a0dd	      4243	channel.c	FUNCTION_95	WHILE_1	IF_2
0x400a220	        0x418d7601	                      lea esi, [r14 + 1]	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a224	          0x4889df	                            mov rdi, rbx	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x400a227	    0x89b3b4040000	            mov dword [rbx + 0x4b4], esi	      4265	channel.c	FUNCTION_95	WHILE_1	IF_5
0x400a22d	            0x89ee	                            mov esi, ebp	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x400a22f	      0xe82cd3ffff	            call sym.may_invoke_callback	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x400a234	          0x83f801	                              cmp eax, 1	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x400a237	          0x4189c6	                           mov r14d, eax	      4266	channel.c	FUNCTION_95	WHILE_1	IF_5	CALL_9
0x400a23a	     0xf84b0000000	                            je 0x400a2f0	      4267	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x400a240	    0x8b83b4040000	           mov eax, dword [rbx + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x400a246	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x400a249	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x400a24b	    0x8983b4040000	            mov dword [rbx + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x400a251	     0xf8f1cffffff	                            jg 0x400a173	       419	channel.c	FUNCTION_15	IF_1
0x400a257	    0x8bb3b0040000	           mov esi, dword [rbx + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400a25d	            0x85f6	                           test esi, esi	       315	channel.c	FUNCTION_9	IF_1
0x400a25f	            0x740a	                            je 0x400a26b	       315	channel.c	FUNCTION_9	IF_1
0x400a261	    0x4883bba80400	              cmp qword [rbx + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400a269	            0x7455	                            je 0x400a2c0	       315	channel.c	FUNCTION_9	IF_1
0x400a26b	    0x4883bb900400	              cmp qword [rbx + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400a273	            0x7431	                            je 0x400a2a6	       319	channel.c	FUNCTION_9	IF_2
0x400a275	        0x4183fe01	                             cmp r14d, 1	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x400a279	     0xf85f4feffff	                           jne 0x400a173	      4269	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_10
0x400a27f	          0x4889e7	                            mov rdi, rsp	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a282	      0xe800000000	                          call 0x400a287	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a287	        0x4883f863	                           cmp rax, 0x63	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a28b	     0xf8fe2feffff	                            jg 0x400a173	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a291	     0xf1f80000000	                         nop dword [rax]	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a298	    0x488b1d000000	            mov rbx, qword [0x0400a29f] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a29f	            0x31ed	                            xor ebp, ebp	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a2a1	      0xe937feffff	                           jmp 0x400a0dd	      4281	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a2a6	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400a2ae	            0x75c5	                           jne 0x400a275	       323	channel.c	FUNCTION_9	IF_3
0x400a2b0	          0x4889df	                            mov rdi, rbx	       323	channel.c	FUNCTION_9	IF_3
0x400a2b3	      0xe81861ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400a2b8	            0x85c0	                           test eax, eax	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400a2ba	            0x75b9	                           jne 0x400a275	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400a2bc	         0xf1f4000	                         nop dword [rax]	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400a2c0	    0x8b0d00000000	            mov ecx, dword [0x0400a2c6] 	       382	channel.c	FUNCTION_13	IF_1
0x400a2c6	            0x85c9	                           test ecx, ecx	       382	channel.c	FUNCTION_13	IF_1
0x400a2c8	            0x75ce	                           jne 0x400a298	       382	channel.c	FUNCTION_13	IF_1
0x400a2ca	    0x8b1500000000	            mov edx, dword [0x0400a2d0] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400a2d0	            0x85d2	                           test edx, edx	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400a2d2	     0xf85c8000000	                           jne 0x400a3a0	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400a2d8	    0xc78370040000	              mov dword [rbx + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x400a2e2	            0x31ed	                            xor ebp, ebp	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a2e4	    0x488b1d000000	            mov rbx, qword [0x0400a2eb] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a2eb	      0xe9edfdffff	                           jmp 0x400a0dd	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a2f0	    0x8b83b4040000	           mov eax, dword [rbx + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x400a2f6	    0x41bc01000000	                             mov r12d, 1	      4268	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_6
0x400a2fc	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x400a2ff	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x400a301	    0x8983b4040000	            mov dword [rbx + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x400a307	     0xf8e4affffff	                           jle 0x400a257	       419	channel.c	FUNCTION_15	IF_1
0x400a30d	          0x4889e7	                            mov rdi, rsp	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a310	      0xe800000000	                          call 0x400a315	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a315	        0x4883f863	                           cmp rax, 0x63	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a319	     0xf8f54feffff	                            jg 0x400a173	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a31f	      0xe974ffffff	                           jmp 0x400a298	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a324	         0xf1f4000	                         nop dword [rax]	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a328	          0x4889df	                            mov rdi, rbx	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a32b	      0xe830eaffff	           call sym.channel_free.part.12	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a330	      0xe9a1fdffff	                           jmp 0x400a0d6	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a335	           0xf1f00	                         nop dword [rax]	      4274	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7	CALL_11
0x400a338	          0x83c501	                              add ebp, 1	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x400a33b	      0xe9a6fdffff	                           jmp 0x400a0e6	      4285	channel.c	FUNCTION_95	WHILE_1	IF_8
0x400a340	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400a348	     0xf85e6fdffff	                           jne 0x400a134	       323	channel.c	FUNCTION_9	IF_3
0x400a34e	          0x4889df	                            mov rdi, rbx	       323	channel.c	FUNCTION_9	IF_3
0x400a351	      0xe87a60ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400a356	            0x85c0	                           test eax, eax	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x400a358	     0xf8462ffffff	                            je 0x400a2c0	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x400a35e	      0xe9d1fdffff	                           jmp 0x400a134	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x400a363	       0xf1f440000	                   nop dword [rax + rax]	      4252	channel.c	FUNCTION_95	WHILE_1	IF_4	CALL_6
0x400a368	      0x4883785800	               cmp qword [rax + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x400a36d	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x400a370	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x400a373	      0xe9f3fdffff	                           jmp 0x400a16b	      2744	channel.c	FUNCTION_64	IF_1
0x400a378	     0xf1f84000000	                   nop dword [rax + rax]	      2744	channel.c	FUNCTION_64	IF_1
0x400a380	      0xbe00000000	                              mov esi, 0	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x400a385	            0x31ff	                            xor edi, edi	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x400a387	            0x31c0	                            xor eax, eax	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x400a389	      0xe800000000	                          call 0x400a38e	      4232	channel.c	FUNCTION_95	IF_1	CALL_2
0x400a38e	    0xc70500000000	               mov dword [0x0400a398], 0	      4233	channel.c	FUNCTION_95	IF_1
0x400a398	      0xe903fdffff	                           jmp 0x400a0a0	      4233	channel.c	FUNCTION_95	IF_1
0x400a39d	           0xf1f00	                         nop dword [rax]	      4233	channel.c	FUNCTION_95	IF_1
0x400a3a0	          0x4889df	                            mov rdi, rbx	      4233	channel.c	FUNCTION_95	IF_1
0x400a3a3	            0x31ed	                            xor ebp, ebp	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a3a5	      0xe8b6e9ffff	           call sym.channel_free.part.12	      4280	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a3aa	    0x488b1d000000	            mov rbx, qword [0x0400a3b1] 	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a3b1	      0xe927fdffff	                           jmp 0x400a0dd	      4279	channel.c	FUNCTION_95	WHILE_1	IF_5	IF_7
0x400a3b6	          0x4531e4	                          xor r12d, r12d	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a3b9	      0xe9d2fdffff	                           jmp 0x400a190	      4235	channel.c	FUNCTION_95	WHILE_1
0x400a3be	      0xe800000000	                          call 0x400a3c3	      4302	channel.c	FUNCTION_95
set_ref_in_job	WHILE,0:FOR,1:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	72
0x400be60	              0x55	                                push rbp	      5312	channel.c	FUNCTION_121
0x400be61	              0x53	                                push rbx	      5312	channel.c	FUNCTION_121
0x400be62	        0x4883ec28	                           sub rsp, 0x28	      5312	channel.c	FUNCTION_121
0x400be66	    0x488b1d000000	            mov rbx, qword [0x0400be6d] 	      5317	channel.c	FUNCTION_121	FOR_1
0x400be6d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5312	channel.c	FUNCTION_121
0x400be76	      0x4889442418	             mov qword [rsp + 0x18], rax	      5312	channel.c	FUNCTION_121
0x400be7b	            0x31c0	                            xor eax, eax	      5312	channel.c	FUNCTION_121
0x400be7d	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x400be80	     0xf84da000000	                            je 0x400bf60	      5317	channel.c	FUNCTION_121	FOR_1
0x400be86	            0x89fd	                            mov ebp, edi	      5317	channel.c	FUNCTION_121	FOR_1
0x400be88	            0x31f6	                            xor esi, esi	      5317	channel.c	FUNCTION_121	FOR_1
0x400be8a	            0xeb4c	                           jmp 0x400bed8	      5317	channel.c	FUNCTION_121	FOR_1
0x400be8c	         0xf1f4000	                         nop dword [rax]	      5317	channel.c	FUNCTION_121	FOR_1
0x400be90	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5317	channel.c	FUNCTION_121	FOR_1
0x400be94	          0x4885ff	                           test rdi, rdi	      5113	channel.c	FUNCTION_114	CALL_1
0x400be97	            0x7437	                            je 0x400bed0	      5113	channel.c	FUNCTION_114	CALL_1
0x400be99	    0x8b87b0040000	           mov eax, dword [rdi + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400be9f	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x400bea1	            0x740a	                            je 0x400bead	       315	channel.c	FUNCTION_9	IF_1
0x400bea3	    0x4883bfa80400	              cmp qword [rdi + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400beab	            0x7423	                            je 0x400bed0	       315	channel.c	FUNCTION_9	IF_1
0x400bead	    0x4883bf900400	              cmp qword [rdi + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400beb5	     0xf8485000000	                            je 0x400bf40	       319	channel.c	FUNCTION_9	IF_2
0x400bebb	            0x85f6	                           test esi, esi	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bebd	    0xc70424090000	                      mov dword [rsp], 9	      5320	channel.c	FUNCTION_121	FOR_1	IF_1
0x400bec4	      0x48895c2408	                mov qword [rsp + 8], rbx	      5321	channel.c	FUNCTION_121	FOR_1	IF_1
0x400bec9	            0x7435	                            je 0x400bf00	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400becb	      0xbe01000000	                              mov esi, 1	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bed0	          0x488b1b	                    mov rbx, qword [rbx]	      5317	channel.c	FUNCTION_121	FOR_1
0x400bed3	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x400bed6	            0x7448	                            je 0x400bf20	      5317	channel.c	FUNCTION_121	FOR_1
0x400bed8	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5104	channel.c	FUNCTION_113
0x400bedc	            0x75b2	                           jne 0x400be90	      5104	channel.c	FUNCTION_113
0x400bede	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      5104	channel.c	FUNCTION_113
0x400bee3	            0x75d6	                           jne 0x400bebb	      5104	channel.c	FUNCTION_113
0x400bee5	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      5104	channel.c	FUNCTION_113
0x400beea	            0x74a4	                            je 0x400be90	      5104	channel.c	FUNCTION_113
0x400beec	            0x85f6	                           test esi, esi	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400beee	    0xc70424090000	                      mov dword [rsp], 9	      5320	channel.c	FUNCTION_121	FOR_1	IF_1
0x400bef5	      0x48895c2408	                mov qword [rsp + 8], rbx	      5321	channel.c	FUNCTION_121	FOR_1	IF_1
0x400befa	            0x75cf	                           jne 0x400becb	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400befc	         0xf1f4000	                         nop dword [rax]	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf00	            0x31c9	                            xor ecx, ecx	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf02	            0x31d2	                            xor edx, edx	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf04	            0x89ee	                            mov esi, ebp	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf06	          0x4889e7	                            mov rdi, rsp	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf09	      0xe800000000	                          call 0x400bf0e	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf0e	          0x488b1b	                    mov rbx, qword [rbx]	      5317	channel.c	FUNCTION_121	FOR_1
0x400bf11	            0x31f6	                            xor esi, esi	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf13	            0x85c0	                           test eax, eax	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf15	        0x400f95c6	                               setne sil	      5322	channel.c	FUNCTION_121	FOR_1	IF_1	CALL_2
0x400bf19	          0x4885db	                           test rbx, rbx	      5317	channel.c	FUNCTION_121	FOR_1
0x400bf1c	            0x75ba	                           jne 0x400bed8	      5317	channel.c	FUNCTION_121	FOR_1
0x400bf1e	            0x6690	                                     nop	      5317	channel.c	FUNCTION_121	FOR_1
0x400bf20	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5325	channel.c	FUNCTION_121
0x400bf25	    0x644833142528	                xor rdx, qword fs:[0x28]	      5325	channel.c	FUNCTION_121
0x400bf2e	            0x89f0	                            mov eax, esi	      5325	channel.c	FUNCTION_121
0x400bf30	            0x7532	                           jne 0x400bf64	      5325	channel.c	FUNCTION_121
0x400bf32	        0x4883c428	                           add rsp, 0x28	      5325	channel.c	FUNCTION_121
0x400bf36	              0x5b	                                 pop rbx	      5325	channel.c	FUNCTION_121
0x400bf37	              0x5d	                                 pop rbp	      5325	channel.c	FUNCTION_121
0x400bf38	              0xc3	                                     ret	      5325	channel.c	FUNCTION_121
0x400bf39	     0xf1f80000000	                         nop dword [rax]	      5325	channel.c	FUNCTION_121
0x400bf40	    0x4883bf280400	              cmp qword [rdi + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400bf48	     0xf856dffffff	                           jne 0x400bebb	       323	channel.c	FUNCTION_9	IF_3
0x400bf4e	      0xe87d44ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400bf53	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x400bf55	     0xf8475ffffff	                            je 0x400bed0	      5113	channel.c	FUNCTION_114	CALL_1
0x400bf5b	      0xe95bffffff	                           jmp 0x400bebb	      5113	channel.c	FUNCTION_114	CALL_1
0x400bf60	            0x31f6	                            xor esi, esi	      5313	channel.c	FUNCTION_121
0x400bf62	            0xebbc	                           jmp 0x400bf20	      5313	channel.c	FUNCTION_121
0x400bf64	      0xe800000000	                          call 0x400bf69	      5325	channel.c	FUNCTION_121
find_buffer	WHILE,0:FOR,0:CALL,9:IF,6:ELSE,0:functions,0:DO,0:SWITCH,0	83
0x4000040	            0x4155	                                push r13	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000042	            0x4154	                                push r12	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000044	          0x4189f5	                           mov r13d, esi	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000047	              0x55	                                push rbp	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000048	              0x53	                                push rbx	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000049	          0x4189d4	                           mov r12d, edx	      1101	channel.c	ELSE_3	FUNCTION_32
0x400004c	        0x4883ec08	                              sub rsp, 8	      1101	channel.c	ELSE_3	FUNCTION_32
0x4000050	          0x4885ff	                           test rdi, rdi	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000053	    0x488b2d000000	            mov rbp, qword [0x0400005a] 	      1103	channel.c	ELSE_3	FUNCTION_32
0x400005a	            0x740c	                            je 0x4000068	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x400005c	          0x803f00	                       cmp byte [rdi], 0	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x400005f	          0x4889fb	                            mov rbx, rdi	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000062	     0xf85b8000000	                           jne 0x4000120	      1105	channel.c	ELSE_3	FUNCTION_32	IF_1
0x4000068	            0x31ff	                            xor edi, edi	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400006a	            0x31d2	                            xor edx, edx	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400006c	            0x31f6	                            xor esi, esi	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400006e	      0xb90a000000	                            mov ecx, 0xa	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000073	      0xe800000000	                          call 0x4000078	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000078	          0x4885c0	                           test rax, rax	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x400007b	          0x4889c3	                            mov rbx, rax	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400007e	     0xf84dc000000	                            je 0x4000160	      1115	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4000084	          0x4889c7	                            mov rdi, rax	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4000087	      0xbe01000000	                              mov esi, 1	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x400008c	      0xe800000000	                          call 0x4000091	      1117	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_4
0x4000091	            0x31f6	                            xor esi, esi	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4000093	      0xb904000000	                              mov ecx, 4	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x4000098	      0xba00000000	                              mov edx, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x400009d	      0xbf00000000	                              mov edi, 0	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x40000a2	    0x48891d000000	            mov qword [0x040000a9], rbx 	      1118	channel.c	ELSE_3	FUNCTION_32	IF_3
0x40000a9	      0xe800000000	                          call 0x40000ae	      1120	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_5
0x40000ae	            0x31f6	                            xor esi, esi	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x40000b0	      0xbf00000000	                              mov edi, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x40000b5	      0xb904000000	                              mov ecx, 4	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x40000ba	      0xba00000000	                              mov edx, 0	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x40000bf	      0xe800000000	                          call 0x40000c4	      1121	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_6
0x40000c4	    0x488b3d000000	            mov rdi, qword [0x040000cb] 	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x40000cb	      0x48837f0800	                  cmp qword [rdi + 8], 0	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x40000d0	            0x7466	                            je 0x4000138	      1123	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_5
0x40000d2	          0x4585e4	                         test r12d, r12d	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x40000d5	            0x7420	                            je 0x40000f7	      1125	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6
0x40000d7	          0x4585ed	                         test r13d, r13d	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x40000da	      0xbe00000000	                              mov esi, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x40000df	      0xb800000000	                              mov eax, 0	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x40000e4	        0x480f44f0	                          cmove rsi, rax	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x40000e8	      0xba01000000	                              mov edx, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x40000ed	      0xbf01000000	                              mov edi, 1	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x40000f2	      0xe800000000	                          call 0x40000f7	      1126	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_6	CALL_8
0x40000f7	            0x31f6	                            xor esi, esi	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x40000f9	      0xbf01000000	                              mov edi, 1	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x40000fe	      0xe800000000	                          call 0x4000103	      1128	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_9
0x4000103	    0x48892d000000	            mov qword [0x0400010a], rbp 	      1129	channel.c	ELSE_3	FUNCTION_32	IF_3
0x400010a	        0x4883c408	                              add rsp, 8	      1133	channel.c	ELSE_3	FUNCTION_32
0x400010e	          0x4889d8	                            mov rax, rbx	      1129	channel.c	ELSE_3	FUNCTION_32	IF_3
0x4000111	              0x5b	                                 pop rbx	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000112	              0x5d	                                 pop rbp	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000113	            0x415c	                                 pop r12	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000115	            0x415d	                                 pop r13	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000117	              0xc3	                                     ret	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000118	     0xf1f84000000	                   nop dword [rax + rax]	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000120	      0xe800000000	                          call 0x4000125	      1107	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_1
0x4000125	          0x4885c0	                           test rax, rax	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x4000128	            0x7416	                            je 0x4000140	      1108	channel.c	ELSE_3	FUNCTION_32	IF_1	IF_2
0x400012a	        0x4883c408	                              add rsp, 8	      1133	channel.c	ELSE_3	FUNCTION_32
0x400012e	              0x5b	                                 pop rbx	      1133	channel.c	ELSE_3	FUNCTION_32
0x400012f	              0x5d	                                 pop rbp	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000130	            0x415c	                                 pop r12	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000132	            0x415d	                                 pop r13	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000134	              0xc3	                                     ret	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000135	           0xf1f00	                         nop dword [rax]	      1133	channel.c	ELSE_3	FUNCTION_32
0x4000138	      0xe800000000	                          call 0x400013d	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x400013d	            0xeb93	                           jmp 0x40000d2	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x400013f	              0x90	                                     nop	      1124	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_7
0x4000140	          0x4889df	                            mov rdi, rbx	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x4000143	      0xe800000000	                          call 0x4000148	      1109	channel.c	ELSE_3	FUNCTION_32	IF_1	CALL_2
0x4000148	          0x4885c0	                           test rax, rax	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x400014b	            0x75dd	                           jne 0x400012a	      1111	channel.c	ELSE_3	FUNCTION_32	IF_3
0x400014d	          0x803b00	                       cmp byte [rbx], 0	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000150	     0xf8412ffffff	                            je 0x4000068	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000156	          0x4889df	                            mov rdi, rbx	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000159	      0xe90cffffff	                           jmp 0x400006a	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x400015e	            0x6690	                                     nop	      1113	channel.c	ELSE_3	FUNCTION_32	IF_3	CALL_3
0x4000160	            0x31c0	                            xor eax, eax	      1116	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
0x4000162	            0xebc6	                           jmp 0x400012a	      1116	channel.c	ELSE_3	FUNCTION_32	IF_3	IF_4
ch_raw_common	WHILE,0:FOR,0:CALL,5:IF,2:ELSE,1:functions,0:DO,0:SWITCH,0	198
0x400b0f0	            0x4157	                                push r15	      3984	channel.c	FUNCTION_90
0x400b0f2	            0x4156	                                push r14	      3984	channel.c	FUNCTION_90
0x400b0f4	          0x4989ff	                            mov r15, rdi	      3984	channel.c	FUNCTION_90
0x400b0f7	            0x4155	                                push r13	      3984	channel.c	FUNCTION_90
0x400b0f9	            0x4154	                                push r12	      3984	channel.c	FUNCTION_90
0x400b0fb	          0x4989f4	                            mov r12, rsi	      3984	channel.c	FUNCTION_90
0x400b0fe	              0x55	                                push rbp	      3984	channel.c	FUNCTION_90
0x400b0ff	              0x53	                                push rbx	      3984	channel.c	FUNCTION_90
0x400b100	          0x4189d6	                           mov r14d, edx	      3984	channel.c	FUNCTION_90
0x400b103	        0x4883c710	                           add rdi, 0x10	      3996	channel.c	FUNCTION_90	CALL_1
0x400b107	    0x4881ecf80300	                          sub rsp, 0x3f8	      3984	channel.c	FUNCTION_90
0x400b10e	    0xc70602000000	                      mov dword [rsi], 2	      3993	channel.c	FUNCTION_90
0x400b114	    0x48c746080000	                  mov qword [rsi + 8], 0	      3994	channel.c	FUNCTION_90
0x400b11c	    0x488db424a003	                  lea rsi, [rsp + 0x3a0]	      3996	channel.c	FUNCTION_90	CALL_1
0x400b124	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	        90	string3.h	FUNCTION_138	CALL_6
0x400b129	    0x64488b042528	                mov rax, qword fs:[0x28]	      3984	channel.c	FUNCTION_90
0x400b132	    0x48898424e803	            mov qword [rsp + 0x3e8], rax	      3984	channel.c	FUNCTION_90
0x400b13a	            0x31c0	                            xor eax, eax	      3984	channel.c	FUNCTION_90
0x400b13c	      0xe800000000	                          call 0x400b141	      3996	channel.c	FUNCTION_90	CALL_1
0x400b141	          0x4585f6	                         test r14d, r14d	      3997	channel.c	FUNCTION_90	CALL_2
0x400b144	          0x4989c5	                            mov r13, rax	      3996	channel.c	FUNCTION_90	CALL_1
0x400b147	      0xba00000000	                              mov edx, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x400b14c	      0xb800000000	                              mov eax, 0	      3997	channel.c	FUNCTION_90	CALL_2
0x400b151	      0xb96f000000	                           mov ecx, 0x6f	        90	string3.h	FUNCTION_138	CALL_6
0x400b156	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_138	CALL_6
0x400b159	        0x480f44c2	                          cmove rax, rdx	      3997	channel.c	FUNCTION_90	CALL_2
0x400b15d	        0x48890424	                    mov qword [rsp], rax	      3997	channel.c	FUNCTION_90	CALL_2
0x400b161	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_138	CALL_6
0x400b163	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x400b166	          0x418b07	                    mov eax, dword [r15]	      5007	channel.c	FUNCTION_108	IF_1
0x400b169	          0x83f809	                              cmp eax, 9	      5007	channel.c	FUNCTION_108	IF_1
0x400b16c	     0xf84d6010000	                            je 0x400b348	      5007	channel.c	FUNCTION_108	IF_1
0x400b172	          0x83f80a	                            cmp eax, 0xa	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400b175	     0xf8545020000	                           jne 0x400b3c0	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400b17b	        0x498b5f08	                mov rbx, qword [r15 + 8]	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400b17f	          0x4885db	                           test rbx, rbx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400b182	     0xf84d8010000	                            je 0x400b360	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400b188	        0x837b18ff	cmp dword [rbx + 0x18], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x400b18c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      4357	channel.c	FUNCTION_98
0x400b194	    0xc74424080000	                  mov dword [rsp + 8], 0	      4368	channel.c	FUNCTION_99
0x400b19c	     0xf84de010000	                            je 0x400b380	      2725	channel.c	FUNCTION_63
0x400b1a2	        0x418b4720	            mov eax, dword [r15 + 0x20] 	      4502	channel.c	FUNCTION_107	IF_1
0x400b1a6	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x400b1a8	     0xf84d0000000	                            je 0x400b27e	      4502	channel.c	FUNCTION_107	IF_1
0x400b1ae	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_107	IF_2
0x400b1b1	     0xf8551010000	                           jne 0x400b308	      4504	channel.c	FUNCTION_107	IF_2
0x400b1b7	        0x498d7f20	                   lea rdi, [r15 + 0x20]	      4504	channel.c	FUNCTION_107	IF_2
0x400b1bb	            0x31c9	                            xor ecx, ecx	      4504	channel.c	FUNCTION_107	IF_2
0x400b1bd	      0xba10020000	                          mov edx, 0x210	      4504	channel.c	FUNCTION_107	IF_2
0x400b1c2	          0x4889ee	                            mov rsi, rbp	      4504	channel.c	FUNCTION_107	IF_2
0x400b1c5	      0xe83654ffff	        call sym.get_job_options.part.14	      4504	channel.c	FUNCTION_107	IF_2
0x400b1ca	            0x85c0	                           test eax, eax	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400b1cc	     0xf8402010000	                            je 0x400b2d4	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400b1d2	    0x488b8c24c001	           mov rcx, qword [rsp + 0x1c0] 	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400b1da	          0x4885c9	                           test rcx, rcx	      3900	channel.c	FUNCTION_88	IF_3
0x400b1dd	     0xf849b000000	                            je 0x400b27e	      3900	channel.c	FUNCTION_88	IF_3
0x400b1e3	          0x803900	                       cmp byte [rcx], 0	      3900	channel.c	FUNCTION_88	IF_3
0x400b1e6	     0xf8492000000	                            je 0x400b27e	      3900	channel.c	FUNCTION_88	IF_3
0x400b1ec	          0x4585f6	                         test r14d, r14d	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x400b1ef	     0xf85fb010000	                           jne 0x400b3f0	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x400b1f5	    0x488bb424c801	           mov rsi, qword [rsp + 0x1c8] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x400b1fd	      0xbf28000000	                           mov edi, 0x28	      1304	channel.c	FUNCTION_35	CALL_1
0x400b202	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1304	channel.c	FUNCTION_35	CALL_1
0x400b207	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x400b20c	      0xe800000000	                          call 0x400b211	      1304	channel.c	FUNCTION_35	CALL_1
0x400b211	          0x4885c0	                           test rax, rax	      1306	channel.c	FUNCTION_35	IF_1
0x400b214	          0x4989c7	                            mov r15, rax	      1304	channel.c	FUNCTION_35	CALL_1
0x400b217	            0x7465	                            je 0x400b27e	      1306	channel.c	FUNCTION_35	IF_1
0x400b219	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1308	channel.c	FUNCTION_35	IF_1
0x400b21e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x400b223	          0x4885f6	                           test rsi, rsi	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x400b226	        0x48897008	                mov qword [rax + 8], rsi	      1308	channel.c	FUNCTION_35	IF_1
0x400b22a	     0xf84f8010000	                            je 0x400b428	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x400b230	          0x830601	                      add dword [rsi], 1	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x400b233	          0x488908	                    mov qword [rax], rcx	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x400b236	        0x8b442408	                mov eax, dword [rsp + 8]	      1320	channel.c	FUNCTION_35	IF_1
0x400b23a	    0x41c747100000	               mov dword [r15 + 0x10], 0	      1319	channel.c	FUNCTION_35	IF_1
0x400b242	          0x4889c1	                            mov rcx, rax	      1320	channel.c	FUNCTION_35	IF_1
0x400b245	        0x48c1e008	                              shl rax, 8	      1320	channel.c	FUNCTION_35	IF_1
0x400b249	        0x48c1e104	                              shl rcx, 4	      1320	channel.c	FUNCTION_35	IF_1
0x400b24d	          0x4801c8	                            add rax, rcx	      1320	channel.c	FUNCTION_35	IF_1
0x400b250	          0x4801d8	                            add rax, rbx	      1320	channel.c	FUNCTION_35	IF_1
0x400b253	    0x488b88e00000	            mov rcx, qword [rax + 0xe0] 	      1320	channel.c	FUNCTION_35	IF_1
0x400b25a	        0x49894f20	             mov qword [r15 + 0x20], rcx	      1320	channel.c	FUNCTION_35	IF_1
0x400b25e	    0x4c89b8e00000	             mov qword [rax + 0xe0], r15	      1321	channel.c	FUNCTION_35	IF_1
0x400b265	        0x498b4f20	            mov rcx, qword [r15 + 0x20] 	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x400b269	    0x49c747180000	               mov qword [r15 + 0x18], 0	      1322	channel.c	FUNCTION_35	IF_1
0x400b271	          0x4885c9	                           test rcx, rcx	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x400b274	     0xf849e010000	                            je 0x400b418	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x400b27a	        0x4c897918	             mov qword [rcx + 0x18], r15	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x400b27e	          0x4c89ef	                            mov rdi, r13	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b281	      0xe800000000	                          call 0x400b286	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b286	        0x4c8b0424	                     mov r8, qword [rsp]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b28a	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b28e	            0x89c1	                            mov ecx, eax	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b290	          0x4c89ea	                            mov rdx, r13	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b293	          0x4889df	                            mov rdi, rbx	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b296	      0xe800000000	                          call 0x400b29b	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b29b	          0x83f801	                              cmp eax, 1	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b29e	            0x7534	                           jne 0x400b2d4	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400b2a0	    0x4883bc24c001	              cmp qword [rsp + 0x1c0], 0	      3912	channel.c	FUNCTION_88	IF_5
0x400b2a9	            0x7529	                           jne 0x400b2d4	      3912	channel.c	FUNCTION_88	IF_5
0x400b2ab	          0x4585f6	                         test r14d, r14d	      3999	channel.c	FUNCTION_90	IF_1
0x400b2ae	            0x7424	                            je 0x400b2d4	      3999	channel.c	FUNCTION_90	IF_1
0x400b2b0	      0xf644242102	               test byte [rsp + 0x21], 2	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x400b2b5	            0x7471	                            je 0x400b328	      4001	channel.c	FUNCTION_90	IF_1	IF_2
0x400b2b7	    0x8b9424180200	           mov edx, dword [rsp + 0x218] 	      4002	channel.c	FUNCTION_90	IF_1	IF_2
0x400b2be	        0x8b742408	                mov esi, dword [rsp + 8]	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x400b2c2	      0xb901000000	                              mov ecx, 1	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x400b2c7	          0x4889df	                            mov rdi, rbx	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x400b2ca	      0xe801b3ffff	             call sym.channel_read_block	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x400b2cf	      0x4989442408	                mov qword [r12 + 8], rax	      4005	channel.c	FUNCTION_90	IF_1	CALL_4
0x400b2d4	          0x4889ef	                            mov rdi, rbp	      4008	channel.c	FUNCTION_90	CALL_5
0x400b2d7	      0xe800000000	                          call 0x400b2dc	      4008	channel.c	FUNCTION_90	CALL_5
0x400b2dc	    0x488b8424e803	           mov rax, qword [rsp + 0x3e8] 	      4009	channel.c	FUNCTION_90
0x400b2e4	    0x644833042528	                xor rax, qword fs:[0x28]	      4009	channel.c	FUNCTION_90
0x400b2ed	     0xf854d010000	                           jne 0x400b440	      4009	channel.c	FUNCTION_90
0x400b2f3	    0x4881c4f80300	                          add rsp, 0x3f8	      4009	channel.c	FUNCTION_90
0x400b2fa	              0x5b	                                 pop rbx	      4009	channel.c	FUNCTION_90
0x400b2fb	              0x5d	                                 pop rbp	      4009	channel.c	FUNCTION_90
0x400b2fc	            0x415c	                                 pop r12	      4009	channel.c	FUNCTION_90
0x400b2fe	            0x415d	                                 pop r13	      4009	channel.c	FUNCTION_90
0x400b300	            0x415e	                                 pop r14	      4009	channel.c	FUNCTION_90
0x400b302	            0x415f	                                 pop r15	      4009	channel.c	FUNCTION_90
0x400b304	              0xc3	                                     ret	      4009	channel.c	FUNCTION_90
0x400b305	           0xf1f00	                         nop dword [rax]	      4009	channel.c	FUNCTION_90
0x400b308	            0x31ff	                            xor edi, edi	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b30a	      0xba05000000	                              mov edx, 5	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b30f	      0xbe00000000	                              mov esi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b314	      0xe800000000	                          call 0x400b319	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b319	          0x4889c7	                            mov rdi, rax	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b31c	      0xe800000000	                          call 0x400b321	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b321	            0xebb1	                           jmp 0x400b2d4	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b323	       0xf1f440000	                   nop dword [rax + rax]	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b328	        0x8b442408	                mov eax, dword [rsp + 8]	      4389	channel.c	FUNCTION_101
0x400b32c	          0x4889c2	                            mov rdx, rax	      4389	channel.c	FUNCTION_101
0x400b32f	        0x48c1e008	                              shl rax, 8	      4389	channel.c	FUNCTION_101
0x400b333	        0x48c1e204	                              shl rdx, 4	      4389	channel.c	FUNCTION_101
0x400b337	          0x4801d0	                            add rax, rdx	      4389	channel.c	FUNCTION_101
0x400b33a	        0x8b540328	      mov edx, dword [rbx + rax + 0x28] 	      4389	channel.c	FUNCTION_101
0x400b33e	      0xe97bffffff	                           jmp 0x400b2be	      4389	channel.c	FUNCTION_101
0x400b343	       0xf1f440000	                   nop dword [rax + rax]	      4389	channel.c	FUNCTION_101
0x400b348	        0x498b4708	                mov rax, qword [r15 + 8]	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400b34c	          0x4885c0	                           test rax, rax	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400b34f	            0x740f	                            je 0x400b360	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400b351	        0x488b5860	            mov rbx, qword [rax + 0x60] 	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400b355	          0x4885db	                           test rbx, rbx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400b358	     0xf852afeffff	                           jne 0x400b188	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400b35e	            0x6690	                                     nop	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400b360	            0x31ff	                            xor edi, edi	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b362	      0xba05000000	                              mov edx, 5	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b367	      0xbe00000000	                              mov esi, 0	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b36c	      0xe800000000	                          call 0x400b371	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b371	          0x4889c7	                            mov rdi, rax	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b374	      0xe800000000	                          call 0x400b379	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b379	      0xe956ffffff	                           jmp 0x400b2d4	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b37e	            0x6690	                                     nop	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400b380	    0x83bb48030000	cmp dword [rbx + 0x348], 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x400b387	    0xc744240c0300	                mov dword [rsp + 0xc], 3	      4356	channel.c	FUNCTION_98	IF_1
0x400b38f	    0xc74424080100	                  mov dword [rsp + 8], 1	      4367	channel.c	FUNCTION_99	IF_1
0x400b397	     0xf8505feffff	                           jne 0x400b1a2	      2726	channel.c	FUNCTION_63
0x400b39d	    0x83bb28010000	cmp dword [rbx + 0x128], 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x400b3a4	     0xf85f8fdffff	                           jne 0x400b1a2	      2727	channel.c	FUNCTION_63
0x400b3aa	    0x83bb38020000	cmp dword [rbx + 0x238], 0xffffffffffffffff	      2728	channel.c	FUNCTION_63
0x400b3b1	     0xf85ebfdffff	                           jne 0x400b1a2	      2728	channel.c	FUNCTION_63
0x400b3b7	            0xeba7	                           jmp 0x400b360	      2728	channel.c	FUNCTION_63
0x400b3b9	     0xf1f80000000	                         nop dword [rax]	      2728	channel.c	FUNCTION_63
0x400b3c0	          0x4c89ff	                            mov rdi, r15	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3c3	      0xe800000000	                          call 0x400b3c8	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3c8	            0x31ff	                            xor edi, edi	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3ca	          0x4889c3	                            mov rbx, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3cd	      0xba05000000	                              mov edx, 5	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3d2	      0xbe00000000	                              mov esi, 0	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3d7	      0xe800000000	                          call 0x400b3dc	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3dc	          0x4889de	                            mov rsi, rbx	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3df	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3e2	      0xe800000000	                          call 0x400b3e7	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3e7	      0xe9e8feffff	                           jmp 0x400b2d4	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3ec	         0xf1f4000	                         nop dword [rax]	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b3f0	            0x31ff	                            xor edi, edi	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b3f2	      0xba05000000	                              mov edx, 5	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b3f7	      0xbe00000000	                              mov esi, 0	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b3fc	      0xe800000000	                          call 0x400b401	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b401	        0x488b3424	                    mov rsi, qword [rsp]	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b405	          0x4889c7	                            mov rdi, rax	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b408	      0xe800000000	                          call 0x400b40d	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b40d	      0xe9c2feffff	                           jmp 0x400b2d4	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b412	    0x660f1f440000	                    nop word [rax + rax]	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b418	    0x4c89b8d80000	             mov qword [rax + 0xd8], r15	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x400b41f	      0xe95afeffff	                           jmp 0x400b27e	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x400b424	         0xf1f4000	                         nop dword [rax]	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x400b428	          0x4889cf	                            mov rdi, rcx	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b42b	      0xe800000000	                          call 0x400b430	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b430	          0x498907	                    mov qword [r15], rax	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b433	          0x4889c7	                            mov rdi, rax	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b436	      0xe800000000	                          call 0x400b43b	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b43b	      0xe9f6fdffff	                           jmp 0x400b236	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b440	      0xe800000000	                          call 0x400b445	      4009	channel.c	FUNCTION_90
job_info	WHILE,0:FOR,1:CALL,14:IF,5:ELSE,0:functions,0:DO,0:SWITCH,0	113
0x400cb40	            0x4154	                                push r12	      5727	channel.c	FUNCTION_132
0x400cb42	              0x55	                                push rbp	      5727	channel.c	FUNCTION_132
0x400cb43	      0xb900000000	                              mov ecx, 0	      5710	channel.c	FUNCTION_131	IF_1
0x400cb48	              0x53	                                push rbx	      5727	channel.c	FUNCTION_132
0x400cb49	          0x4889fd	                            mov rbp, rdi	      5727	channel.c	FUNCTION_132
0x400cb4c	          0x4889f3	                            mov rbx, rsi	      5727	channel.c	FUNCTION_132
0x400cb4f	        0x4883ec10	                           sub rsp, 0x10	      5727	channel.c	FUNCTION_132
0x400cb53	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      5708	channel.c	FUNCTION_131	IF_1
0x400cb56	          0x83f801	                              cmp eax, 1	      5708	channel.c	FUNCTION_131	IF_1
0x400cb59	     0xf8641010000	                           jbe 0x400cca0	      5708	channel.c	FUNCTION_131	IF_1
0x400cb5f	            0x31d2	                            xor edx, edx	      5733	channel.c	FUNCTION_132	CALL_2
0x400cb61	      0xbe00000000	                              mov esi, 0	      5733	channel.c	FUNCTION_132	CALL_2
0x400cb66	          0x4889df	                            mov rdi, rbx	      5733	channel.c	FUNCTION_132	CALL_2
0x400cb69	      0xe800000000	                          call 0x400cb6e	      5733	channel.c	FUNCTION_132	CALL_2
0x400cb6e	      0xbf00000000	                              mov edi, 0	      5735	channel.c	FUNCTION_132	CALL_3
0x400cb73	      0xe800000000	                          call 0x400cb78	      5735	channel.c	FUNCTION_132	CALL_3
0x400cb78	          0x4885c0	                           test rax, rax	      5736	channel.c	FUNCTION_132	IF_1
0x400cb7b	          0x4989c4	                            mov r12, rax	      5735	channel.c	FUNCTION_132	CALL_3
0x400cb7e	     0xf8412010000	                            je 0x400cc96	      5736	channel.c	FUNCTION_132	IF_1
0x400cb84	        0xc6400400	                   mov byte [rax + 4], 0	      5738	channel.c	FUNCTION_132
0x400cb88	    0xc7000a000000	                    mov dword [rax], 0xa	      5739	channel.c	FUNCTION_132
0x400cb8e	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      5740	channel.c	FUNCTION_132
0x400cb92	      0x4989442408	                mov qword [r12 + 8], rax	      5740	channel.c	FUNCTION_132
0x400cb97	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      5741	channel.c	FUNCTION_132	IF_2
0x400cb9b	          0x4885c0	                           test rax, rax	      5741	channel.c	FUNCTION_132	IF_2
0x400cb9e	            0x7407	                            je 0x400cba7	      5741	channel.c	FUNCTION_132	IF_2
0x400cba0	    0x8380b4040000	              add dword [rax + 0x4b4], 1	      5742	channel.c	FUNCTION_132	IF_2
0x400cba7	          0x4c89e6	                            mov rsi, r12	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400cbaa	          0x4889df	                            mov rdi, rbx	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400cbad	      0xe800000000	                          call 0x400cbb2	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400cbb2	            0x85c0	                           test eax, eax	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400cbb4	     0xf8426010000	                            je 0x400cce0	      5743	channel.c	FUNCTION_132	IF_3	CALL_4
0x400cbba	        0x48635510	         movsxd rdx, dword [rbp + 0x10] 	      5751	channel.c	FUNCTION_132	CALL_6
0x400cbbe	            0x31c9	                            xor ecx, ecx	      5751	channel.c	FUNCTION_132	CALL_6
0x400cbc0	      0xbe00000000	                              mov esi, 0	      5751	channel.c	FUNCTION_132	CALL_6
0x400cbc5	          0x4889df	                            mov rdi, rbx	      5751	channel.c	FUNCTION_132	CALL_6
0x400cbc8	    0x41bc00000000	                             mov r12d, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x400cbce	      0xe800000000	                          call 0x400cbd3	      5751	channel.c	FUNCTION_132	CALL_6
0x400cbd3	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	      5753	channel.c	FUNCTION_132
0x400cbd7	      0xbe00000000	                              mov esi, 0	      5752	channel.c	FUNCTION_132	CALL_7
0x400cbdc	          0x4889df	                            mov rdi, rbx	      5752	channel.c	FUNCTION_132	CALL_7
0x400cbdf	          0x4885c9	                           test rcx, rcx	      5752	channel.c	FUNCTION_132	CALL_7
0x400cbe2	        0x490f44cc	                          cmove rcx, r12	      5752	channel.c	FUNCTION_132	CALL_7
0x400cbe6	            0x31d2	                            xor edx, edx	      5752	channel.c	FUNCTION_132	CALL_7
0x400cbe8	      0xe800000000	                          call 0x400cbed	      5752	channel.c	FUNCTION_132	CALL_7
0x400cbed	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      5755	channel.c	FUNCTION_132
0x400cbf1	      0xbe00000000	                              mov esi, 0	      5754	channel.c	FUNCTION_132	CALL_8
0x400cbf6	          0x4889df	                            mov rdi, rbx	      5754	channel.c	FUNCTION_132	CALL_8
0x400cbf9	          0x4885c9	                           test rcx, rcx	      5754	channel.c	FUNCTION_132	CALL_8
0x400cbfc	        0x490f44cc	                          cmove rcx, r12	      5754	channel.c	FUNCTION_132	CALL_8
0x400cc00	            0x31d2	                            xor edx, edx	      5754	channel.c	FUNCTION_132	CALL_8
0x400cc02	      0xe800000000	                          call 0x400cc07	      5754	channel.c	FUNCTION_132	CALL_8
0x400cc07	        0x48635538	         movsxd rdx, dword [rbp + 0x38] 	      5757	channel.c	FUNCTION_132	CALL_9
0x400cc0b	            0x31c9	                            xor ecx, ecx	      5757	channel.c	FUNCTION_132	CALL_9
0x400cc0d	      0xbe00000000	                              mov esi, 0	      5757	channel.c	FUNCTION_132	CALL_9
0x400cc12	          0x4889df	                            mov rdi, rbx	      5757	channel.c	FUNCTION_132	CALL_9
0x400cc15	      0xe800000000	                          call 0x400cc1a	      5757	channel.c	FUNCTION_132	CALL_9
0x400cc1a	        0x488b4d40	            mov rcx, qword [rbp + 0x40] 	      5758	channel.c	FUNCTION_132	CALL_10
0x400cc1e	            0x31d2	                            xor edx, edx	      5758	channel.c	FUNCTION_132	CALL_10
0x400cc20	      0xbe00000000	                              mov esi, 0	      5758	channel.c	FUNCTION_132	CALL_10
0x400cc25	          0x4889df	                            mov rdi, rbx	      5758	channel.c	FUNCTION_132	CALL_10
0x400cc28	      0xe800000000	                          call 0x400cc2d	      5758	channel.c	FUNCTION_132	CALL_10
0x400cc2d	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      5759	channel.c	FUNCTION_132	CALL_11
0x400cc31	            0x31d2	                            xor edx, edx	      5759	channel.c	FUNCTION_132	CALL_11
0x400cc33	      0xbe00000000	                              mov esi, 0	      5759	channel.c	FUNCTION_132	CALL_11
0x400cc38	          0x4889df	                            mov rdi, rbx	      5759	channel.c	FUNCTION_132	CALL_11
0x400cc3b	      0xe800000000	                          call 0x400cc40	      5759	channel.c	FUNCTION_132	CALL_11
0x400cc40	      0xe800000000	                          call 0x400cc45	      5761	channel.c	FUNCTION_132	CALL_12
0x400cc45	          0x4885c0	                           test rax, rax	      5762	channel.c	FUNCTION_132	IF_4
0x400cc48	          0x4989c4	                            mov r12, rax	      5761	channel.c	FUNCTION_132	CALL_12
0x400cc4b	            0x7449	                            je 0x400cc96	      5762	channel.c	FUNCTION_132	IF_4
0x400cc4d	          0x4889c2	                            mov rdx, rax	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400cc50	      0xbe00000000	                              mov esi, 0	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400cc55	          0x4889df	                            mov rdi, rbx	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400cc58	      0xe800000000	                          call 0x400cc5d	      5764	channel.c	FUNCTION_132	IF_4	CALL_13
0x400cc5d	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x400cc61	          0x4885c0	                           test rax, rax	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x400cc64	            0x7430	                            je 0x400cc96	      5765	channel.c	FUNCTION_132	IF_4	IF_5
0x400cc66	          0x488b30	                    mov rsi, qword [rax]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc69	          0x4885f6	                           test rsi, rsi	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc6c	            0x7428	                            je 0x400cc96	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc6e	      0xbb08000000	                              mov ebx, 8	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc73	       0xf1f440000	                   nop dword [rax + rax]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc78	      0xbaffffffff	                     mov edx, 0xffffffff	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc7d	          0x4c89e7	                            mov rdi, r12	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc80	      0xe800000000	                          call 0x400cc85	      5767	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc85	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc89	        0x488b3418	              mov rsi, qword [rax + rbx]	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc8d	        0x4883c308	                              add rbx, 8	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc91	          0x4885f6	                           test rsi, rsi	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc94	            0x75e2	                           jne 0x400cc78	      5766	channel.c	FUNCTION_132	IF_4	IF_5	FOR_1
0x400cc96	        0x4883c410	                           add rsp, 0x10	      5769	channel.c	FUNCTION_132
0x400cc9a	              0x5b	                                 pop rbx	      5769	channel.c	FUNCTION_132
0x400cc9b	              0x5d	                                 pop rbp	      5769	channel.c	FUNCTION_132
0x400cc9c	            0x415c	                                 pop r12	      5769	channel.c	FUNCTION_132
0x400cc9e	              0xc3	                                     ret	      5769	channel.c	FUNCTION_132
0x400cc9f	              0x90	                                     nop	      5769	channel.c	FUNCTION_132
0x400cca0	            0x85c0	                           test eax, eax	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400cca2	      0xb900000000	                              mov ecx, 0	      5712	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400cca7	     0xf84b2feffff	                            je 0x400cb5f	      5711	channel.c	FUNCTION_131	ELSE_1	IF_2
0x400ccad	      0xe800000000	                          call 0x400ccb2	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x400ccb2	        0x837d2802	               cmp dword [rbp + 0x28], 2	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400ccb6	          0x4889c1	                            mov rcx, rax	      5715	channel.c	FUNCTION_131	ELSE_2	CALL_1
0x400ccb9	     0xf85a0feffff	                           jne 0x400cb5f	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400ccbf	          0x4889ef	                            mov rdi, rbp	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400ccc2	      0x4889442408	                mov qword [rsp + 8], rax	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400ccc7	      0xe844cbffff	            call sym.job_cleanup.part.15	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400cccc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400ccd1	      0xe989feffff	                           jmp 0x400cb5f	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400ccd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5716	channel.c	FUNCTION_131	ELSE_2	IF_3
0x400cce0	          0x4c89e7	                            mov rdi, r12	      5744	channel.c	FUNCTION_132	CALL_5
0x400cce3	      0xe800000000	                          call 0x400cce8	      5744	channel.c	FUNCTION_132	CALL_5
0x400cce8	      0xe9cdfeffff	                           jmp 0x400cbba	      5744	channel.c	FUNCTION_132	CALL_5
ch_error	WHILE,0:FOR,0:CALL,6:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	79
0x4001fe0	              0x55	                                push rbp	       189	channel.c	FUNCTION_5
0x4001fe1	              0x53	                                push rbx	       189	channel.c	FUNCTION_5
0x4001fe2	          0x4889f5	                            mov rbp, rsi	       189	channel.c	FUNCTION_5
0x4001fe5	          0x4889fb	                            mov rbx, rdi	       189	channel.c	FUNCTION_5
0x4001fe8	    0x4881ece80000	                           sub rsp, 0xe8	       189	channel.c	FUNCTION_5
0x4001fef	            0x84c0	                             test al, al	       189	channel.c	FUNCTION_5
0x4001ff1	      0x4889542440	             mov qword [rsp + 0x40], rdx	       189	channel.c	FUNCTION_5
0x4001ff6	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       189	channel.c	FUNCTION_5
0x4001ffb	      0x4c89442450	              mov qword [rsp + 0x50], r8	       189	channel.c	FUNCTION_5
0x4002000	      0x4c894c2458	              mov qword [rsp + 0x58], r9	       189	channel.c	FUNCTION_5
0x4002005	            0x743a	                            je 0x4002041	       189	channel.c	FUNCTION_5
0x4002007	       0xf29442460	       movaps xmmword [rsp + 0x60], xmm0	       189	channel.c	FUNCTION_5
0x400200c	       0xf294c2470	       movaps xmmword [rsp + 0x70], xmm1	       189	channel.c	FUNCTION_5
0x4002011	     0xf2994248000	       movaps xmmword [rsp + 0x80], xmm2	       189	channel.c	FUNCTION_5
0x4002019	     0xf299c249000	       movaps xmmword [rsp + 0x90], xmm3	       189	channel.c	FUNCTION_5
0x4002021	     0xf29a424a000	       movaps xmmword [rsp + 0xa0], xmm4	       189	channel.c	FUNCTION_5
0x4002029	     0xf29ac24b000	       movaps xmmword [rsp + 0xb0], xmm5	       189	channel.c	FUNCTION_5
0x4002031	     0xf29b424c000	       movaps xmmword [rsp + 0xc0], xmm6	       189	channel.c	FUNCTION_5
0x4002039	     0xf29bc24d000	       movaps xmmword [rsp + 0xd0], xmm7	       189	channel.c	FUNCTION_5
0x4002041	    0x64488b042528	                mov rax, qword fs:[0x28]	       189	channel.c	FUNCTION_5
0x400204a	      0x4889442428	             mov qword [rsp + 0x28], rax	       189	channel.c	FUNCTION_5
0x400204f	            0x31c0	                            xor eax, eax	       189	channel.c	FUNCTION_5
0x4002051	    0x48833d000000	               cmp qword [0x04002059], 0	       190	channel.c	FUNCTION_5	IF_1
0x4002059	     0xf84c9000000	                            je 0x4002128	       190	channel.c	FUNCTION_5	IF_1
0x400205f	          0x4889e7	                            mov rdi, rsp	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4002062	      0xe800000000	                          call 0x4002067	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4002067	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x400206c	          0x4889e7	                            mov rdi, rsp	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x400206f	      0xe800000000	                          call 0x4002074	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4002074	          0x4889e7	                            mov rdi, rsp	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x4002077	      0xe800000000	                          call 0x400207c	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x400207c	    0x488b3d000000	            mov rdi, qword [0x04002083] 	        97	stdio2.h	CALL_20
0x4002083	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_20
0x4002086	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x400208b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x400208d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002092	      0xe800000000	                          call 0x4002097	        97	stdio2.h	CALL_20
0x4002097	          0x4885db	                           test rbx, rbx	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x400209a	     0xf84a8000000	                            je 0x4002148	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x40020a0	        0x448b4310	            mov r8d, dword [rbx + 0x10] 	        97	stdio2.h	CALL_20
0x40020a4	    0x488b3d000000	            mov rdi, qword [0x040020ab] 	        97	stdio2.h	CALL_20
0x40020ab	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_20
0x40020b0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x40020b5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40020ba	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x40020bc	      0xe800000000	                          call 0x40020c1	        97	stdio2.h	CALL_20
0x40020c1	    0x488d84240001	                  lea rax, [rsp + 0x100]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40020c9	    0x488b3d000000	            mov rdi, qword [0x040020d0] 	       127	stdio2.h	FUNCTION_152	CALL_1
0x40020d0	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       127	stdio2.h	FUNCTION_152	CALL_1
0x40020d5	          0x4889ea	                            mov rdx, rbp	       127	stdio2.h	FUNCTION_152	CALL_1
0x40020d8	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_152	CALL_1
0x40020dd	    0xc74424101000	           mov dword [rsp + 0x10], 0x10 	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40020e5	      0x4889442418	             mov qword [rsp + 0x18], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40020ea	      0x488d442430	                   lea rax, [rsp + 0x30]	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40020ef	    0xc74424143000	           mov dword [rsp + 0x14], 0x30 	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40020f7	      0x4889442420	             mov qword [rsp + 0x20], rax	       195	channel.c	FUNCTION_5	IF_1	CALL_2
0x40020fc	      0xe800000000	                          call 0x4002101	       127	stdio2.h	FUNCTION_152	CALL_1
0x4002101	    0x488b35000000	            mov rsi, qword [0x04002108] 	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x4002108	      0xbf0a000000	                            mov edi, 0xa	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x400210d	      0xe800000000	                          call 0x4002112	       198	channel.c	FUNCTION_5	IF_1	CALL_5
0x4002112	    0x488b3d000000	            mov rdi, qword [0x04002119] 	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x4002119	      0xe800000000	                          call 0x400211e	       199	channel.c	FUNCTION_5	IF_1	CALL_6
0x400211e	    0xc70500000000	               mov dword [0x04002128], 1	       200	channel.c	FUNCTION_5	IF_1
0x4002128	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       202	channel.c	FUNCTION_5
0x400212d	    0x644833042528	                xor rax, qword fs:[0x28]	       202	channel.c	FUNCTION_5
0x4002136	            0x7532	                           jne 0x400216a	       202	channel.c	FUNCTION_5
0x4002138	    0x4881c4e80000	                           add rsp, 0xe8	       202	channel.c	FUNCTION_5
0x400213f	              0x5b	                                 pop rbx	       202	channel.c	FUNCTION_5
0x4002140	              0x5d	                                 pop rbp	       202	channel.c	FUNCTION_5
0x4002141	              0xc3	                                     ret	       202	channel.c	FUNCTION_5
0x4002142	    0x660f1f440000	                    nop word [rax + rax]	       202	channel.c	FUNCTION_5
0x4002148	    0x488b3d000000	            mov rdi, qword [0x0400214f] 	        97	stdio2.h	CALL_20
0x400214f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_20
0x4002154	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4002159	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x400215e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x4002160	      0xe800000000	                          call 0x4002165	        97	stdio2.h	CALL_20
0x4002165	      0xe957ffffff	                           jmp 0x40020c1	        97	stdio2.h	CALL_20
0x400216a	      0xe800000000	                          call 0x400216f	       202	channel.c	FUNCTION_5
job_free_contents	WHILE,0:FOR,1:CALL,9:IF,2:ELSE,0:functions,0:DO,0:SWITCH,0	77
0x40096e0	              0x55	                                push rbp	      5038	channel.c	FUNCTION_109
0x40096e1	              0x53	                                push rbx	      5038	channel.c	FUNCTION_109
0x40096e2	          0x4889fd	                            mov rbp, rdi	      5038	channel.c	FUNCTION_109
0x40096e5	            0x31c0	                            xor eax, eax	      5041	channel.c	FUNCTION_109	CALL_1
0x40096e7	      0xbe00000000	                              mov esi, 0	      5041	channel.c	FUNCTION_109	CALL_1
0x40096ec	        0x4883ec08	                              sub rsp, 8	      5038	channel.c	FUNCTION_109
0x40096f0	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	      5041	channel.c	FUNCTION_109	CALL_1
0x40096f4	      0xe800000000	                          call 0x40096f9	      5041	channel.c	FUNCTION_109	CALL_1
0x40096f9	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	      5042	channel.c	FUNCTION_109	IF_1
0x40096fd	          0x4885db	                           test rbx, rbx	      5042	channel.c	FUNCTION_109	IF_1
0x4009700	            0x7422	                            je 0x4009724	      5042	channel.c	FUNCTION_109	IF_1
0x4009702	    0x8b83b4040000	           mov eax, dword [rbx + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x4009708	    0x48c783a80400	              mov qword [rbx + 0x4a8], 0	      5049	channel.c	FUNCTION_109	IF_1
0x4009713	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x4009716	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x4009718	    0x8983b4040000	            mov dword [rbx + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x400971e	     0xf8e7c000000	                           jle 0x40097a0	       419	channel.c	FUNCTION_15	IF_1
0x4009724	          0x4889ef	                            mov rdi, rbp	      5052	channel.c	FUNCTION_109	CALL_3
0x4009727	      0xe800000000	                          call 0x400972c	      5052	channel.c	FUNCTION_109	CALL_3
0x400972c	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      5054	channel.c	FUNCTION_109	CALL_4
0x4009730	      0xe800000000	                          call 0x4009735	      5054	channel.c	FUNCTION_109	CALL_4
0x4009735	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      5055	channel.c	FUNCTION_109	CALL_5
0x4009739	      0xe800000000	                          call 0x400973e	      5055	channel.c	FUNCTION_109	CALL_5
0x400973e	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      5056	channel.c	FUNCTION_109	CALL_6
0x4009742	      0xe800000000	                          call 0x4009747	      5056	channel.c	FUNCTION_109	CALL_6
0x4009747	        0x488b7548	            mov rsi, qword [rbp + 0x48] 	      5057	channel.c	FUNCTION_109	CALL_7
0x400974b	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      5057	channel.c	FUNCTION_109	CALL_7
0x400974f	      0xe800000000	                          call 0x4009754	      5057	channel.c	FUNCTION_109	CALL_7
0x4009754	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5058	channel.c	FUNCTION_109	IF_2
0x4009758	          0x4885c0	                           test rax, rax	      5058	channel.c	FUNCTION_109	IF_2
0x400975b	            0x743b	                            je 0x4009798	      5058	channel.c	FUNCTION_109	IF_2
0x400975d	          0x488b38	                    mov rdi, qword [rax]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009760	          0x4885ff	                           test rdi, rdi	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009763	            0x7421	                            je 0x4009786	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009765	      0xbb08000000	                              mov ebx, 8	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400976a	    0x660f1f440000	                    nop word [rax + rax]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009770	      0xe800000000	                          call 0x4009775	      5061	channel.c	FUNCTION_109	IF_2	CALL_8
0x4009775	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009779	        0x488b3c18	              mov rdi, qword [rax + rbx]	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x400977d	        0x4883c308	                              add rbx, 8	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009781	          0x4885ff	                           test rdi, rdi	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009784	            0x75ea	                           jne 0x4009770	      5060	channel.c	FUNCTION_109	IF_2	FOR_1
0x4009786	        0x4883c408	                              add rsp, 8	      5064	channel.c	FUNCTION_109
0x400978a	          0x4889c7	                            mov rdi, rax	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x400978d	              0x5b	                                 pop rbx	      5064	channel.c	FUNCTION_109
0x400978e	              0x5d	                                 pop rbp	      5064	channel.c	FUNCTION_109
0x400978f	      0xe900000000	                           jmp 0x4009794	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x4009794	         0xf1f4000	                         nop dword [rax]	      5062	channel.c	FUNCTION_109	IF_2	CALL_9
0x4009798	        0x4883c408	                              add rsp, 8	      5064	channel.c	FUNCTION_109
0x400979c	              0x5b	                                 pop rbx	      5064	channel.c	FUNCTION_109
0x400979d	              0x5d	                                 pop rbp	      5064	channel.c	FUNCTION_109
0x400979e	              0xc3	                                     ret	      5064	channel.c	FUNCTION_109
0x400979f	              0x90	                                     nop	      5064	channel.c	FUNCTION_109
0x40097a0	    0x8b8bb0040000	           mov ecx, dword [rbx + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x40097a6	            0x85c9	                           test ecx, ecx	       315	channel.c	FUNCTION_9	IF_1
0x40097a8	            0x7427	                            je 0x40097d1	       315	channel.c	FUNCTION_9	IF_1
0x40097aa	    0x8b1500000000	            mov edx, dword [0x040097b0] 	       382	channel.c	FUNCTION_13	IF_1
0x40097b0	            0x85d2	                           test edx, edx	       382	channel.c	FUNCTION_13	IF_1
0x40097b2	     0xf856cffffff	                           jne 0x4009724	       382	channel.c	FUNCTION_13	IF_1
0x40097b8	    0x8b0500000000	            mov eax, dword [0x040097be] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40097be	            0x85c0	                           test eax, eax	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40097c0	            0x753e	                           jne 0x4009800	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40097c2	    0xc78370040000	              mov dword [rbx + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40097cc	      0xe953ffffff	                           jmp 0x4009724	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40097d1	    0x4883bb900400	              cmp qword [rbx + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x40097d9	     0xf8545ffffff	                           jne 0x4009724	       319	channel.c	FUNCTION_9	IF_2
0x40097df	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x40097e7	     0xf8537ffffff	                           jne 0x4009724	       323	channel.c	FUNCTION_9	IF_3
0x40097ed	          0x4889df	                            mov rdi, rbx	       323	channel.c	FUNCTION_9	IF_3
0x40097f0	      0xe8db6bffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x40097f5	            0x85c0	                           test eax, eax	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x40097f7	            0x74b1	                            je 0x40097aa	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x40097f9	      0xe926ffffff	                           jmp 0x4009724	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x40097fe	            0x6690	                                     nop	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4009800	          0x4889df	                            mov rdi, rbx	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4009803	      0xe858f5ffff	           call sym.channel_free.part.12	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x4009808	      0xe917ffffff	                           jmp 0x4009724	       403	channel.c	FUNCTION_14	IF_1	CALL_1
channel_buffer_free	WHILE,0:FOR,2:CALL,1:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	55
0x4004b00	              0x55	                                push rbp	      1488	channel.c	FUNCTION_39
0x4004b01	              0x53	                                push rbx	      1488	channel.c	FUNCTION_39
0x4004b02	        0x4883ec08	                              sub rsp, 8	      1488	channel.c	FUNCTION_39
0x4004b06	    0x488b1d000000	            mov rbx, qword [0x04004b0d] 	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b0d	          0x4885db	                           test rbx, rbx	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b10	            0x7436	                            je 0x4004b48	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b12	          0x4889fd	                            mov rbp, rdi	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b15	           0xf1f00	                         nop dword [rax]	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b18	    0x483babf80000	            cmp rbp, qword [rbx + 0xf8] 	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b1f	     0xf84a3000000	                            je 0x4004bc8	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b25	    0x483bab080200	           cmp rbp, qword [rbx + 0x208] 	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b2c	            0x7472	                            je 0x4004ba0	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b2e	    0x483bab180300	           cmp rbp, qword [rbx + 0x318] 	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b35	            0x7441	                            je 0x4004b78	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b37	    0x483bab280400	           cmp rbp, qword [rbx + 0x428] 	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b3e	            0x7410	                            je 0x4004b50	      1497	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b40	          0x488b1b	                    mov rbx, qword [rbx]	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b43	          0x4885db	                           test rbx, rbx	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b46	            0x75d0	                           jne 0x4004b18	      1492	channel.c	FUNCTION_39	FOR_1
0x4004b48	        0x4883c408	                              add rsp, 8	      1504	channel.c	FUNCTION_39
0x4004b4c	              0x5b	                                 pop rbx	      1504	channel.c	FUNCTION_39
0x4004b4d	              0x5d	                                 pop rbp	      1504	channel.c	FUNCTION_39
0x4004b4e	              0xc3	                                     ret	      1504	channel.c	FUNCTION_39
0x4004b4f	              0x90	                                     nop	      1504	channel.c	FUNCTION_39
0x4004b50	      0xba00000000	                              mov edx, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b55	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b5a	          0x4889df	                            mov rdi, rbx	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b5d	            0x31c0	                            xor eax, eax	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b5f	      0xe800000000	                          call 0x4004b64	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b64	    0x48c783280400	              mov qword [rbx + 0x428], 0	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b6f	            0xebcf	                           jmp 0x4004b40	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b71	     0xf1f80000000	                         nop dword [rax]	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b78	      0xba00000000	                              mov edx, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b7d	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b82	          0x4889df	                            mov rdi, rbx	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b85	            0x31c0	                            xor eax, eax	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b87	      0xe800000000	                          call 0x4004b8c	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004b8c	    0x48c783180300	              mov qword [rbx + 0x318], 0	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b97	            0xeb9e	                           jmp 0x4004b37	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004b99	     0xf1f80000000	                         nop dword [rax]	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004ba0	      0xba00000000	                              mov edx, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004ba5	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004baa	          0x4889df	                            mov rdi, rbx	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004bad	            0x31c0	                            xor eax, eax	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004baf	      0xe800000000	                          call 0x4004bb4	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004bb4	    0x48c783080200	              mov qword [rbx + 0x208], 0	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004bbf	      0xe96affffff	                           jmp 0x4004b2e	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004bc4	         0xf1f4000	                         nop dword [rax]	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004bc8	      0xba00000000	                              mov edx, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004bcd	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004bd2	          0x4889df	                            mov rdi, rbx	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004bd5	            0x31c0	                            xor eax, eax	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004bd7	      0xe800000000	                          call 0x4004bdc	      1499	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1	CALL_1
0x4004bdc	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4004be7	      0xe939ffffff	                           jmp 0x4004b25	      1501	channel.c	FUNCTION_39	FOR_1	FOR_2	IF_1
may_invoke_callback	WHILE,2:FOR,4:CALL,31:IF,34:ELSE,11:functions,0:DO,0:SWITCH,0	1102
0x4007560	            0x4157	                                push r15	      2465	channel.c	FUNCTION_61
0x4007562	            0x4156	                                push r14	      2465	channel.c	FUNCTION_61
0x4007564	            0x4155	                                push r13	      2465	channel.c	FUNCTION_61
0x4007566	            0x4154	                                push r12	      2465	channel.c	FUNCTION_61
0x4007568	              0x55	                                push rbp	      2465	channel.c	FUNCTION_61
0x4007569	              0x53	                                push rbx	      2465	channel.c	FUNCTION_61
0x400756a	    0x4881ec680100	                          sub rsp, 0x168	      2465	channel.c	FUNCTION_61
0x4007571	    0x64488b042528	                mov rax, qword fs:[0x28]	      2465	channel.c	FUNCTION_61
0x400757a	    0x488984245801	            mov qword [rsp + 0x158], rax	      2465	channel.c	FUNCTION_61
0x4007582	            0x31c0	                            xor eax, eax	      2465	channel.c	FUNCTION_61
0x4007584	    0x4883bf780400	              cmp qword [rdi + 0x478], 0	      2479	channel.c	FUNCTION_61	IF_1
0x400758c	            0x7432	                            je 0x40075c0	      2479	channel.c	FUNCTION_61	IF_1
0x400758e	            0x31c0	                            xor eax, eax	      2547	channel.c	FUNCTION_61	IF_6	IF_10
0x4007590	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	      2705	channel.c	FUNCTION_61
0x4007598	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2705	channel.c	FUNCTION_61
0x40075a1	     0xf85710c0000	                           jne 0x4008218	      2705	channel.c	FUNCTION_61
0x40075a7	    0x4881c4680100	                          add rsp, 0x168	      2705	channel.c	FUNCTION_61
0x40075ae	              0x5b	                                 pop rbx	      2705	channel.c	FUNCTION_61
0x40075af	              0x5d	                                 pop rbp	      2705	channel.c	FUNCTION_61
0x40075b0	            0x415c	                                 pop r12	      2705	channel.c	FUNCTION_61
0x40075b2	            0x415d	                                 pop r13	      2705	channel.c	FUNCTION_61
0x40075b4	            0x415e	                                 pop r14	      2705	channel.c	FUNCTION_61
0x40075b6	            0x415f	                                 pop r15	      2705	channel.c	FUNCTION_61
0x40075b8	              0xc3	                                     ret	      2705	channel.c	FUNCTION_61
0x40075b9	     0xf1f80000000	                         nop dword [rax]	      2705	channel.c	FUNCTION_61
0x40075c0	            0x89f3	                            mov ebx, esi	      2484	channel.c	FUNCTION_61	FOR_1
0x40075c2	          0x4989fd	                            mov r13, rdi	      2484	channel.c	FUNCTION_61	FOR_1
0x40075c5	            0x89f5	                            mov ebp, esi	      2484	channel.c	FUNCTION_61	FOR_1
0x40075c7	          0x4889da	                            mov rdx, rbx	      2484	channel.c	FUNCTION_61	FOR_1
0x40075ca	          0x4889d8	                            mov rax, rbx	      2484	channel.c	FUNCTION_61	FOR_1
0x40075cd	        0x48c1e204	                              shl rdx, 4	      2484	channel.c	FUNCTION_61	FOR_1
0x40075d1	        0x48c1e008	                              shl rax, 8	      2484	channel.c	FUNCTION_61	FOR_1
0x40075d5	          0x4801d0	                            add rax, rdx	      2484	channel.c	FUNCTION_61	FOR_1
0x40075d8	    0x4c8bbc07d800	      mov r15, qword [rdi + rax + 0xd8] 	      2484	channel.c	FUNCTION_61	FOR_1
0x40075e0	          0x4d85ff	                           test r15, r15	      2484	channel.c	FUNCTION_61	FOR_1
0x40075e3	            0x7518	                           jne 0x40075fd	      2484	channel.c	FUNCTION_61	FOR_1
0x40075e5	      0xe956010000	                           jmp 0x4007740	      2484	channel.c	FUNCTION_61	FOR_1
0x40075ea	    0x660f1f440000	                    nop word [rax + rax]	      2484	channel.c	FUNCTION_61	FOR_1
0x40075f0	        0x4d8b7f18	            mov r15, qword [r15 + 0x18] 	      2484	channel.c	FUNCTION_61	FOR_1
0x40075f4	          0x4d85ff	                           test r15, r15	      2484	channel.c	FUNCTION_61	FOR_1
0x40075f7	     0xf8443010000	                            je 0x4007740	      2484	channel.c	FUNCTION_61	FOR_1
0x40075fd	        0x418b4f10	            mov ecx, dword [r15 + 0x10] 	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4007601	            0x85c9	                           test ecx, ecx	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4007603	            0x75eb	                           jne 0x40075f0	      2485	channel.c	FUNCTION_61	FOR_1	IF_2
0x4007605	          0x498b07	                    mov rax, qword [r15]	      2489	channel.c	FUNCTION_61	IF_3
0x4007608	      0x4889442410	             mov qword [rsp + 0x10], rax	      2489	channel.c	FUNCTION_61	IF_3
0x400760d	        0x498b4708	                mov rax, qword [r15 + 8]	      2490	channel.c	FUNCTION_61	IF_3
0x4007611	      0x4889442428	             mov qword [rsp + 0x28], rax	      2490	channel.c	FUNCTION_61	IF_3
0x4007616	          0x4889da	                            mov rdx, rbx	      2471	channel.c	FUNCTION_61
0x4007619	          0x4889d8	                            mov rax, rbx	      2471	channel.c	FUNCTION_61
0x400761c	        0x48c1e204	                              shl rdx, 4	      2471	channel.c	FUNCTION_61
0x4007620	        0x48c1e008	                              shl rax, 8	      2471	channel.c	FUNCTION_61
0x4007624	          0x4801d0	                            add rax, rdx	      2471	channel.c	FUNCTION_61
0x4007627	      0x498d540500	                    lea rdx, [r13 + rax]	      2471	channel.c	FUNCTION_61
0x400762c	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      2471	channel.c	FUNCTION_61
0x400762f	        0x894c2408	                mov dword [rsp + 8], ecx	      2471	channel.c	FUNCTION_61
0x4007633	    0x488b8af80000	            mov rcx, qword [rdx + 0xf8] 	      2503	channel.c	FUNCTION_61
0x400763a	          0x4885c9	                           test rcx, rcx	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x400763d	          0x4989ce	                            mov r14, rcx	      2503	channel.c	FUNCTION_61
0x4007640	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2503	channel.c	FUNCTION_61
0x4007645	            0x7420	                            je 0x4007667	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4007647	    0x498dbc05f800	            lea rdi, [r13 + rax + 0xf8] 	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x400764f	      0xe800000000	                          call 0x4007654	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4007654	            0x85c0	                           test eax, eax	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x4007656	     0xf84a4010000	                            je 0x4007800	      2504	channel.c	FUNCTION_61	IF_5	CALL_1
0x400765c	      0x49837e0800	                  cmp qword [r14 + 8], 0	      2505	channel.c	FUNCTION_61	IF_5
0x4007661	     0xf8499010000	                            je 0x4007800	      2505	channel.c	FUNCTION_61	IF_5
0x4007667	          0x4889da	                            mov rdx, rbx	      2472	channel.c	FUNCTION_61
0x400766a	          0x4889d8	                            mov rax, rbx	      2472	channel.c	FUNCTION_61
0x400766d	        0x48c1e204	                              shl rdx, 4	      2472	channel.c	FUNCTION_61
0x4007671	        0x48c1e008	                              shl rax, 8	      2472	channel.c	FUNCTION_61
0x4007675	          0x4801d0	                            add rax, rdx	      2472	channel.c	FUNCTION_61
0x4007678	    0x498d8c05c000	            lea rcx, [r13 + rax + 0xc0] 	      2472	channel.c	FUNCTION_61
0x4007680	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      2472	channel.c	FUNCTION_61
0x4007685	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2513	channel.c	FUNCTION_61	IF_6
0x4007689	          0x8d51fe	                      lea edx, [rcx - 2]	      2513	channel.c	FUNCTION_61	IF_6
0x400768c	          0x83fa01	                              cmp edx, 1	      2513	channel.c	FUNCTION_61	IF_6
0x400768f	     0xf8663030000	                           jbe 0x40079f8	      2513	channel.c	FUNCTION_61	IF_6
0x4007695	          0x4c01e8	                            add rax, r13	      1615	channel.c	FUNCTION_44
0x4007698	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1615	channel.c	FUNCTION_44
0x400769c	          0x4885ff	                           test rdi, rdi	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x400769f	     0xf84e9feffff	                            je 0x400758e	      2551	channel.c	FUNCTION_61	ELSE_3	IF_11	CALL_10
0x40076a5	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x40076ab	     0xf85cf000000	                           jne 0x4007780	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x40076b1	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x40076b7	     0xf85c3000000	                           jne 0x4007780	      2559	channel.c	FUNCTION_61	ELSE_4	IF_12
0x40076bd	    0x4983bd900400	              cmp qword [r13 + 0x490], 0	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x40076c5	     0xf85c3feffff	                           jne 0x400758e	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x40076cb	    0x458bbda00400	          mov r15d, dword [r13 + 0x4a0] 	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x40076d2	          0x4585ff	                         test r15d, r15d	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x40076d5	     0xf85b3feffff	                           jne 0x400758e	      2563	channel.c	FUNCTION_61	ELSE_4	IF_12	IF_13
0x40076db	          0x4889c3	                            mov rbx, rax	      1651	channel.c	FUNCTION_46
0x40076de	            0xeb3d	                           jmp 0x400771d	      1651	channel.c	FUNCTION_46
0x40076e0	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x40076e8	      0xe800000000	                          call 0x40076ed	      1656	channel.c	FUNCTION_46	CALL_1
0x40076ed	          0x4885ed	                           test rbp, rbp	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x40076f0	     0xf8498feffff	                            je 0x400758e	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x40076f6	            0x31c0	                            xor eax, eax	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x40076f8	          0x4889ea	                            mov rdx, rbp	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x40076fb	      0xbe00000000	                              mov esi, 0	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4007700	          0x4c89ef	                            mov rdi, r13	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4007703	      0xe800000000	                          call 0x4007708	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4007708	          0x4889ef	                            mov rdi, rbp	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x400770b	      0xe800000000	                          call 0x4007710	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4007710	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      1644	channel.c	FUNCTION_46
0x4007714	          0x4885ff	                           test rdi, rdi	      1647	channel.c	FUNCTION_46	IF_1
0x4007717	     0xf8471feffff	                            je 0x400758e	      1647	channel.c	FUNCTION_46	IF_1
0x400771d	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x4007721	          0x488b2f	                    mov rbp, qword [rdi]	      1650	channel.c	FUNCTION_46
0x4007724	        0x48894340	             mov qword [rbx + 0x40], rax	      1651	channel.c	FUNCTION_46
0x4007728	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x400772c	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x400772f	            0x75af	                           jne 0x40076e0	      1652	channel.c	FUNCTION_46	IF_2
0x4007731	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4007739	            0xebad	                           jmp 0x40076e8	      1653	channel.c	FUNCTION_46	IF_2
0x400773b	       0xf1f440000	                   nop dword [rax + rax]	      1653	channel.c	FUNCTION_46	IF_2
0x4007740	          0x4889da	                            mov rdx, rbx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007743	          0x4889d8	                            mov rax, rbx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007746	        0x48c1e204	                              shl rdx, 4	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400774a	        0x48c1e008	                              shl rax, 8	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400774e	          0x4801d0	                            add rax, rdx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007751	          0x4c01e8	                            add rax, r13	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007754	    0x488b88e80000	            mov rcx, qword [rax + 0xe8] 	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400775b	          0x4885c9	                           test rcx, rcx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400775e	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007763	     0xf8498060000	                            je 0x4007e01	      2492	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007769	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007770	          0x4531ff	                          xor r15d, r15d	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007773	      0x4889442428	             mov qword [rsp + 0x28], rax	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007778	      0xe999feffff	                           jmp 0x4007616	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x400777d	           0xf1f00	                         nop dword [rax]	      2495	channel.c	FUNCTION_61	ELSE_1	IF_4
0x4007780	      0x448b742408	               mov r14d, dword [rsp + 8]	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4007785	          0x4585f6	                         test r14d, r14d	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4007788	     0xf853d030000	                           jne 0x4007acb	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x400778e	          0x4989dc	                            mov r12, rbx	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4007791	          0x4889d8	                            mov rax, rbx	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4007794	          0x4989fe	                            mov r14, rdi	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x4007797	        0x49c1e404	                              shl r12, 4	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x400779b	        0x48c1e008	                              shl rax, 8	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x400779f	          0x4901c4	                            add r12, rax	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x40077a2	          0x4d01ec	                            add r12, r13	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x40077a5	           0xf1f00	                         nop dword [rax]	      2568	channel.c	FUNCTION_61	ELSE_4	IF_14
0x40077a8	        0x4d8b5e08	                mov r11, qword [r14 + 8]	      1629	channel.c	FUNCTION_45	FOR_1
0x40077ac	          0x498b3e	                    mov rdi, qword [r14]	      1626	channel.c	FUNCTION_45
0x40077af	          0x4d85db	                           test r11, r11	      1629	channel.c	FUNCTION_45	FOR_1
0x40077b2	            0x7432	                            je 0x40077e6	      1629	channel.c	FUNCTION_45	FOR_1
0x40077b4	          0x803f0a	                     cmp byte [rdi], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077b7	     0xf8424020000	                            je 0x40079e1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077bd	        0x488d4701	                      lea rax, [rdi + 1]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077c1	        0x4a8d141f	                    lea rdx, [rdi + r11]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077c5	            0xeb1a	                           jmp 0x40077e1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077c7	    0x660f1f840000	                    nop word [rax + rax]	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077d0	          0x4889c6	                            mov rsi, rax	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077d3	        0x4883c001	                              add rax, 1	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077d7	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077db	     0xf84bf000000	                            je 0x40078a0	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40077e1	          0x4839c2	                            cmp rdx, rax	      1629	channel.c	FUNCTION_45	FOR_1
0x40077e4	            0x75ea	                           jne 0x40077d0	      1629	channel.c	FUNCTION_45	FOR_1
0x40077e6	      0xba01000000	                              mov edx, 1	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40077eb	            0x89ee	                            mov esi, ebp	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40077ed	          0x4c89ef	                            mov rdi, r13	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40077f0	      0xe800000000	                          call 0x40077f5	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40077f5	            0x85c0	                           test eax, eax	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40077f7	            0x7449	                            je 0x4007842	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40077f9	      0x4d8b742440	            mov r14, qword [r12 + 0x40] 	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x40077fe	            0xeba8	                           jmp 0x40077a8	      2582	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x4007800	    0x488b14dd0000	                  mov rdx, qword [rbx*8]	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4007808	            0x31c0	                            xor eax, eax	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x400780a	      0xbe00000000	                              mov esi, 0	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x400780f	          0x4c89ef	                            mov rdi, r13	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4007812	      0xe800000000	                          call 0x4007817	      2508	channel.c	FUNCTION_61	IF_5	CALL_2
0x4007817	          0x4889da	                            mov rdx, rbx	      2509	channel.c	FUNCTION_61	IF_5
0x400781a	          0x4889d8	                            mov rax, rbx	      2509	channel.c	FUNCTION_61	IF_5
0x400781d	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2510	channel.c	FUNCTION_61	IF_5
0x4007826	        0x48c1e204	                              shl rdx, 4	      2509	channel.c	FUNCTION_61	IF_5
0x400782a	        0x48c1e008	                              shl rax, 8	      2509	channel.c	FUNCTION_61	IF_5
0x400782e	          0x4801d0	                            add rax, rdx	      2509	channel.c	FUNCTION_61	IF_5
0x4007831	    0x49c78405f800	         mov qword [r13 + rax + 0xf8], 0	      2509	channel.c	FUNCTION_61	IF_5
0x400783d	      0xe925feffff	                           jmp 0x4007667	      2509	channel.c	FUNCTION_61	IF_5
0x4007842	          0x4889da	                            mov rdx, rbx	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4007845	          0x4889d8	                            mov rax, rbx	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4007848	        0x48c1e204	                              shl rdx, 4	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x400784c	        0x48c1e008	                              shl rax, 8	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4007850	          0x4801d0	                            add rax, rdx	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4007853	    0x41837c0518ff	cmp dword [r13 + rax + 0x18], 0xffffffffffffffff	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4007859	     0xf852ffdffff	                           jne 0x400758e	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x400785f	        0x498b4608	                mov rax, qword [r14 + 8]	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4007863	          0x4885c0	                           test rax, rax	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x4007866	     0xf8422fdffff	                            je 0x400758e	      2584	channel.c	FUNCTION_61	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x400786c	          0x498b3e	                    mov rdi, qword [r14]	      2589	channel.c	FUNCTION_61	ELSE_4	IF_14
0x400786f	        0x488d7001	                      lea rsi, [rax + 1]	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4007873	      0xe800000000	                          call 0x4007878	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x4007878	          0x4885c0	                           test rax, rax	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x400787b	          0x4889c7	                            mov rdi, rax	      2596	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	CALL_15
0x400787e	     0xf840afdffff	                            je 0x400758e	      2597	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18	IF_19
0x4007884	        0x498b7608	                mov rsi, qword [r14 + 8]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4007888	          0x49893e	                    mov qword [r14], rdi	      2602	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400788b	        0x488d4601	                      lea rax, [rsi + 1]	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400788f	          0x4801fe	                            add rsi, rdi	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4007892	        0x49894608	                mov qword [r14 + 8], rax	      2603	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4007896	          0xc60600	                       mov byte [rsi], 0	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x4007899	        0x4d8b5e08	                mov r11, qword [r14 + 8]	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x400789d	           0xf1f00	                         nop dword [rax]	      2604	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_18
0x40078a0	          0x4839fe	                            cmp rsi, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078a3	     0xf86fe0c0000	                           jbe 0x40085a7	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078a9	        0x4a8d041f	                    lea rax, [rdi + r11]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078ad	          0x4839c7	                            cmp rdi, rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078b0	          0x4989c3	                            mov r11, rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078b3	            0x732b	                           jae 0x40078e0	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078b5	          0x4889fa	                            mov rdx, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078b8	            0xeb0b	                           jmp 0x40078c5	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078ba	    0x660f1f440000	                    nop word [rax + rax]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078c0	          0x4839d0	                            cmp rax, rdx	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078c3	            0x761b	                           jbe 0x40078e0	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078c5	          0x803a00	                       cmp byte [rdx], 0	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x40078c8	            0x750a	                           jne 0x40078d4	      2609	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x40078ca	          0xc6020a	                     mov byte [rdx], 0xa	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x40078cd	          0x4889f8	                            mov rax, rdi	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x40078d0	        0x49034608	                add rax, qword [r14 + 8]	      2610	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3	IF_20
0x40078d4	        0x4883c201	                              add rdx, 1	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078d8	          0x4989c3	                            mov r11, rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078db	          0x4839d6	                            cmp rsi, rdx	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078de	            0x75e0	                           jne 0x40078c0	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40078e0	        0x488d4601	                      lea rax, [rsi + 1]	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40078e4	          0x4939c3	                            cmp r11, rax	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40078e7	     0xf84bc040000	                            je 0x4007da9	      2612	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x40078ed	          0x4829fe	                            sub rsi, rdi	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x40078f0	          0x4989f4	                            mov r12, rsi	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x40078f3	      0xe800000000	                          call 0x40078f8	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x40078f8	          0x4889da	                            mov rdx, rbx	      1717	channel.c	FUNCTION_48
0x40078fb	          0x4889c5	                            mov rbp, rax	      2622	channel.c	FUNCTION_61	ELSE_4	IF_14	ELSE_5	CALL_17
0x40078fe	          0x4889d8	                            mov rax, rbx	      1717	channel.c	FUNCTION_48
0x4007901	        0x48c1e204	                              shl rdx, 4	      1717	channel.c	FUNCTION_48
0x4007905	        0x48c1e008	                              shl rax, 8	      1717	channel.c	FUNCTION_48
0x4007909	        0x4183c401	                             add r12d, 1	      1720	channel.c	FUNCTION_48	CALL_1
0x400790d	          0x4801d0	                            add rax, rdx	      1717	channel.c	FUNCTION_48
0x4007910	          0x4d63e4	                        movsxd r12, r12d	      1720	channel.c	FUNCTION_48	CALL_1
0x4007913	      0x4d8b740540	      mov r14, qword [r13 + rax + 0x40] 	      1717	channel.c	FUNCTION_48
0x4007918	          0x498b3e	                    mov rdi, qword [r14]	      1718	channel.c	FUNCTION_48
0x400791b	        0x498b5608	                mov rdx, qword [r14 + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x400791f	        0x4a8d3427	                    lea rsi, [rdi + r12]	        59	string3.h	FUNCTION_136	CALL_3
0x4007923	          0x4c29e2	                            sub rdx, r12	        59	string3.h	FUNCTION_136	CALL_3
0x4007926	      0xe800000000	                          call 0x400792b	        59	string3.h	FUNCTION_136	CALL_3
0x400792b	        0x4d296608	                sub qword [r14 + 8], r12	      1721	channel.c	FUNCTION_48
0x400792f	          0x4885ed	                           test rbp, rbp	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4007932	     0xf8456fcffff	                            je 0x400758e	      2634	channel.c	FUNCTION_61	ELSE_4	IF_22
0x4007938	    0xc78424200100	              mov dword [rsp + 0x120], 2	      2637	channel.c	FUNCTION_61	ELSE_4
0x4007943	          0x4531f6	                          xor r14d, r14d	      2467	channel.c	FUNCTION_61
0x4007946	      0xb8ffffffff	                     mov eax, 0xffffffff	      2469	channel.c	FUNCTION_61
0x400794b	    0x4889ac242801	            mov qword [rsp + 0x128], rbp	      2638	channel.c	FUNCTION_61	ELSE_4
0x4007953	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4007959	            0x750c	                           jne 0x4007967	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x400795b	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4007961	     0xf842c040000	                            je 0x4007d93	      2666	channel.c	FUNCTION_61	ELSE_8	IF_27
0x4007967	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x400796d	            0x742a	                            je 0x4007999	      2668	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28
0x400796f	          0x4885ed	                           test rbp, rbp	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x4007972	     0xf847d080000	                            je 0x40081f5	      2670	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_29
0x4007978	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x400797d	    0x4883b8481c00	             cmp qword [rax + 0x1c48], 0	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x4007985	     0xf8448060000	                            je 0x4007fd3	      2676	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x400798b	          0x4c89ea	                            mov rdx, r13	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x400798e	          0x4889ee	                            mov rsi, rbp	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4007991	          0x4889c7	                            mov rdi, rax	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4007994	      0xe800000000	                          call 0x4007999	      2677	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x4007999	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x400799f	            0x7421	                            je 0x40079c2	      2684	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32
0x40079a1	          0x4d85ff	                           test r15, r15	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x40079a4	     0xf84c6060000	                            je 0x4008070	      2686	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	IF_33
0x40079aa	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x40079af	    0x488d8c241001	                  lea rcx, [rsp + 0x110]	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x40079b7	          0x4c89fa	                            mov rdx, r15	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x40079ba	          0x4c89ef	                            mov rdi, r13	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x40079bd	      0xe8fea9ffff	       call sym.invoke_one_time_callback	      2687	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	CALL_26
0x40079c2	          0x4d85f6	                           test r14, r14	      2700	channel.c	FUNCTION_61	IF_34
0x40079c5	            0x7408	                            je 0x40079cf	      2700	channel.c	FUNCTION_61	IF_34
0x40079c7	          0x4c89f7	                            mov rdi, r14	      2701	channel.c	FUNCTION_61	CALL_30
0x40079ca	      0xe800000000	                          call 0x40079cf	      2701	channel.c	FUNCTION_61	CALL_30
0x40079cf	          0x4889ef	                            mov rdi, rbp	      2702	channel.c	FUNCTION_61	CALL_31
0x40079d2	      0xe800000000	                          call 0x40079d7	      2702	channel.c	FUNCTION_61	CALL_31
0x40079d7	      0xb801000000	                              mov eax, 1	      2704	channel.c	FUNCTION_61
0x40079dc	      0xe9affbffff	                           jmp 0x4007590	      2704	channel.c	FUNCTION_61
0x40079e1	          0x4889f8	                            mov rax, rdi	      1630	channel.c	FUNCTION_45	FOR_1	IF_1
0x40079e4	          0x4889fe	                            mov rsi, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40079e7	          0x4901c3	                            add r11, rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40079ea	          0x4889c7	                            mov rdi, rax	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40079ed	      0xe9eefeffff	                           jmp 0x40078e0	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40079f2	    0x660f1f440000	                    nop word [rax + rax]	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40079f8	      0x498d4c0550	            lea rcx, [r13 + rax + 0x50] 	      2102	channel.c	FUNCTION_55
0x40079fd	          0x4c01e8	                            add rax, r13	      2103	channel.c	FUNCTION_55
0x4007a00	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2103	channel.c	FUNCTION_55
0x4007a04	          0x4d85e4	                           test r12, r12	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a07	            0x7449	                            je 0x4007a52	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a09	     0xf1f80000000	                         nop dword [rax]	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a10	      0x418b542418	            mov edx, dword [r12 + 0x18] 	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a15	            0x85d2	                           test edx, edx	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a17	            0x752f	                           jne 0x4007a48	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a19	        0x4d8b3424	                    mov r14, qword [r12]	      2107	channel.c	FUNCTION_55	WHILE_1
0x4007a1d	        0x498b5608	                mov rdx, qword [r14 + 8]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4007a21	          0x488b12	                    mov rdx, qword [rdx]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4007a24	        0x837a1001	               cmp dword [rdx + 0x10], 1	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a28	     0xf85c8000000	                           jne 0x4007af6	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a2e	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a32	          0x4885d2	                           test rdx, rdx	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a35	     0xf84a2000000	                            je 0x4007add	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a3b	        0x48637070	         movsxd rsi, dword [rax + 0x70] 	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a3f	          0x4839f2	                            cmp rdx, rsi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a42	     0xf8595000000	                           jne 0x4007add	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a48	      0x4d8b642408	                mov r12, qword [r12 + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x4007a4d	          0x4d85e4	                           test r12, r12	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a50	            0x75be	                           jne 0x4007a10	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a52	            0x89ee	                            mov esi, ebp	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4007a54	          0x4c89ef	                            mov rdi, r13	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4007a57	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4007a5c	      0xe88faaffff	             call sym.channel_parse_json	      2522	channel.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x4007a61	          0x4889de	                            mov rsi, rbx	      2103	channel.c	FUNCTION_55
0x4007a64	          0x4889d8	                            mov rax, rbx	      2103	channel.c	FUNCTION_55
0x4007a67	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a6c	        0x48c1e604	                              shl rsi, 4	      2103	channel.c	FUNCTION_55
0x4007a70	        0x48c1e008	                              shl rax, 8	      2103	channel.c	FUNCTION_55
0x4007a74	          0x4801c6	                            add rsi, rax	      2103	channel.c	FUNCTION_55
0x4007a77	          0x4c01ee	                            add rsi, r13	      2103	channel.c	FUNCTION_55
0x4007a7a	        0x4c8b6658	            mov r12, qword [rsi + 0x58] 	      2103	channel.c	FUNCTION_55
0x4007a7e	          0x4d85e4	                           test r12, r12	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a81	     0xf8407fbffff	                            je 0x400758e	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a87	    0x660f1f840000	                    nop word [rax + rax]	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007a90	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a95	            0x85c0	                           test eax, eax	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a97	            0x7523	                           jne 0x4007abc	      2110	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007a99	        0x4d8b3424	                    mov r14, qword [r12]	      2107	channel.c	FUNCTION_55	WHILE_1
0x4007a9d	        0x498b4608	                mov rax, qword [r14 + 8]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4007aa1	          0x488b00	                    mov rax, qword [rax]	      2108	channel.c	FUNCTION_55	WHILE_1
0x4007aa4	        0x83781001	               cmp dword [rax + 0x10], 1	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007aa8	            0x754c	                           jne 0x4007af6	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007aaa	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007aae	          0x4885d2	                           test rdx, rdx	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007ab1	            0x742a	                            je 0x4007add	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007ab3	        0x48634670	         movsxd rax, dword [rsi + 0x70] 	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007ab7	          0x4839c2	                            cmp rdx, rax	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007aba	            0x7521	                           jne 0x4007add	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x4007abc	      0x4d8b642408	                mov r12, qword [r12 + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x4007ac1	          0x4d85e4	                           test r12, r12	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007ac4	            0x75ca	                           jne 0x4007a90	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007ac6	      0xe9c3faffff	                           jmp 0x400758e	      2105	channel.c	FUNCTION_55	WHILE_1
0x4007acb	            0x89ee	                            mov esi, ebp	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4007acd	          0x4c89ef	                            mov rdi, r13	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4007ad0	      0xe87ba3ffff	                call sym.channel_get_all	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4007ad5	          0x4889c5	                            mov rbp, rax	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4007ad8	      0xe952feffff	                           jmp 0x400792f	      2631	channel.c	FUNCTION_61	ELSE_4	ELSE_6	CALL_19
0x4007add	      0xbe00000000	                              mov esi, 0	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4007ae2	          0x4c89ef	                            mov rdi, r13	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4007ae5	            0x31c0	                            xor eax, eax	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4007ae7	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4007aec	      0xe800000000	                          call 0x4007af1	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4007af1	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x4007af6	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4007afb	      0x498b542408	                mov rdx, qword [r12 + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4007b00	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4007b03	     0xf8464030000	                            je 0x4007e6d	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4007b09	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4007b0d	      0x498b542408	                mov rdx, qword [r12 + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4007b12	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4007b15	     0xf8449030000	                            je 0x4007e64	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4007b1b	        0x48894210	             mov qword [rdx + 0x10], rax	      2081	channel.c	FUNCTION_54	ELSE_2
0x4007b1f	          0x4c89e7	                            mov rdi, r12	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4007b22	      0xe800000000	                          call 0x4007b27	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4007b27	        0x498b4608	                mov rax, qword [r14 + 8]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b2b	          0x488b00	                    mov rax, qword [rax]	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b2e	          0x4885c0	                           test rax, rax	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b31	     0xf84e2010000	                            je 0x4007d19	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b37	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b3b	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b3f	    0x4889b4241001	            mov qword [rsp + 0x110], rsi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b47	    0x4889bc241801	            mov qword [rsp + 0x118], rdi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b4f	          0x488b00	                    mov rax, qword [rax]	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b52	          0x4885c0	                           test rax, rax	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b55	     0xf84c6020000	                            je 0x4007e21	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b5b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b5f	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b63	    0x4889b4242001	            mov qword [rsp + 0x120], rsi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b6b	    0x4889bc242801	            mov qword [rsp + 0x128], rdi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b73	          0x488b00	                    mov rax, qword [rax]	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b76	          0x4885c0	                           test rax, rax	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b79	     0xf84de020000	                            je 0x4007e5d	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b7f	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b83	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b87	    0x4889b4243001	            mov qword [rsp + 0x130], rsi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b8f	    0x4889bc243801	            mov qword [rsp + 0x138], rdi	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b97	          0x488b00	                    mov rax, qword [rax]	      2529	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b9a	          0x4885c0	                           test rax, rax	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007b9d	     0xf84ac010000	                            je 0x4007d4f	      2527	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007ba3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007ba7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007bab	    0x488994244801	            mov qword [rsp + 0x148], rdx	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007bb3	    0x488984244001	            mov qword [rsp + 0x140], rax	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007bbb	    0x8b8424100100	           mov eax, dword [rsp + 0x110] 	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x4007bc2	          0x83f802	                              cmp eax, 2	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x4007bc5	     0xf84ab020000	                            je 0x4007e76	      2534	channel.c	FUNCTION_61	IF_6	IF_9
0x4007bcb	          0x83f801	                              cmp eax, 1	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x4007bce	     0xf85a3010000	                           jne 0x4007d77	      2542	channel.c	FUNCTION_61	IF_6	IF_10
0x4007bd4	    0x488bbc241801	           mov rdi, qword [rsp + 0x118] 	      2549	channel.c	FUNCTION_61	IF_6
0x4007bdc	            0x85ff	                           test edi, edi	      2641	channel.c	FUNCTION_61	IF_23
0x4007bde	            0x89f8	                            mov eax, edi	      2549	channel.c	FUNCTION_61	IF_6
0x4007be0	     0xf8eba090000	                           jle 0x40085a0	      2641	channel.c	FUNCTION_61	IF_23
0x4007be6	          0x4889de	                            mov rsi, rbx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007be9	          0x4889d9	                            mov rcx, rbx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007bec	        0x48c1e604	                              shl rsi, 4	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007bf0	        0x48c1e108	                              shl rcx, 8	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007bf4	          0x4801f1	                            add rcx, rsi	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007bf7	    0x498b940dd800	      mov rdx, qword [r13 + rcx + 0xd8] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007bff	          0x4885d2	                           test rdx, rdx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007c02	            0x741e	                            je 0x4007c22	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007c04	          0x3b7a10	            cmp edi, dword [rdx + 0x10] 	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4007c07	            0x7510	                           jne 0x4007c19	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4007c09	      0xe9ef000000	                           jmp 0x4007cfd	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4007c0e	            0x6690	                                     nop	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4007c10	          0x3b4210	            cmp eax, dword [rdx + 0x10] 	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4007c13	     0xf84e4000000	                            je 0x4007cfd	      2647	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24
0x4007c19	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007c1d	          0x4885d2	                           test rdx, rdx	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007c20	            0x75ee	                           jne 0x4007c10	      2646	channel.c	FUNCTION_61	IF_23	FOR_4
0x4007c22	    0x418b85a00400	           mov eax, dword [r13 + 0x4a0] 	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4007c29	            0x85c0	                           test eax, eax	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4007c2b	     0xf842e010000	                            je 0x4007d5f	      2655	channel.c	FUNCTION_61	IF_23	IF_25	IF_26
0x4007c31	          0x4889da	                            mov rdx, rbx	      2139	channel.c	FUNCTION_56	IF_1
0x4007c34	          0x4889d8	                            mov rax, rbx	      2139	channel.c	FUNCTION_56	IF_1
0x4007c37	        0x48c1e204	                              shl rdx, 4	      2139	channel.c	FUNCTION_56	IF_1
0x4007c3b	        0x48c1e008	                              shl rax, 8	      2139	channel.c	FUNCTION_56	IF_1
0x4007c3f	          0x4801d0	                            add rax, rdx	      2139	channel.c	FUNCTION_56	IF_1
0x4007c42	      0x498b440560	      mov rax, qword [r13 + rax + 0x60] 	      2139	channel.c	FUNCTION_56	IF_1
0x4007c47	          0x4885c0	                           test rax, rax	      2139	channel.c	FUNCTION_56	IF_1
0x4007c4a	            0x740b	                            je 0x4007c57	      2139	channel.c	FUNCTION_56	IF_1
0x4007c4c	        0x448b6018	           mov r12d, dword [rax + 0x18] 	      2139	channel.c	FUNCTION_56	IF_1
0x4007c50	            0x31ed	                            xor ebp, ebp	      2141	channel.c	FUNCTION_56	IF_1
0x4007c52	          0x4585e4	                         test r12d, r12d	      2139	channel.c	FUNCTION_56	IF_1
0x4007c55	            0x7533	                           jne 0x4007c8a	      2139	channel.c	FUNCTION_56	IF_1
0x4007c57	          0x4889da	                            mov rdx, rbx	      2136	channel.c	FUNCTION_56
0x4007c5a	          0x4889d8	                            mov rax, rbx	      2136	channel.c	FUNCTION_56
0x4007c5d	        0x48c1e204	                              shl rdx, 4	      2136	channel.c	FUNCTION_56
0x4007c61	        0x48c1e008	                              shl rax, 8	      2136	channel.c	FUNCTION_56
0x4007c65	          0x4801d0	                            add rax, rdx	      2136	channel.c	FUNCTION_56
0x4007c68	      0x498b6c0558	      mov rbp, qword [r13 + rax + 0x58] 	      2136	channel.c	FUNCTION_56
0x4007c6d	          0x4885ed	                           test rbp, rbp	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c70	            0x750f	                           jne 0x4007c81	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c72	            0xeb16	                           jmp 0x4007c8a	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c74	         0xf1f4000	                         nop dword [rax]	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c78	        0x488b6d08	                mov rbp, qword [rbp + 8]	      2144	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c7c	          0x4885ed	                           test rbp, rbp	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c7f	            0x7409	                            je 0x4007c8a	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c81	        0x448b5d18	           mov r11d, dword [rbp + 0x18] 	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c85	          0x4585db	                         test r11d, r11d	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c88	            0x75ee	                           jne 0x4007c78	      2142	channel.c	FUNCTION_56	ELSE_1	WHILE_1
0x4007c8a	      0xbf20000000	                           mov edi, 0x20	      2146	channel.c	FUNCTION_56	CALL_1
0x4007c8f	      0xe800000000	                          call 0x4007c94	      2146	channel.c	FUNCTION_56	CALL_1
0x4007c94	          0x4885c0	                           test rax, rax	      2147	channel.c	FUNCTION_56	IF_2
0x4007c97	          0x4989c4	                            mov r12, rax	      2146	channel.c	FUNCTION_56	CALL_1
0x4007c9a	     0xf84a4020000	                            je 0x4007f44	      2147	channel.c	FUNCTION_56	IF_2
0x4007ca0	      0xe800000000	                          call 0x4007ca5	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x4007ca5	          0x4885c0	                           test rax, rax	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4007ca8	        0x49890424	                    mov qword [r12], rax	      2151	channel.c	FUNCTION_56	ELSE_2	CALL_3
0x4007cac	     0xf848a020000	                            je 0x4007f3c	      2152	channel.c	FUNCTION_56	ELSE_2	IF_3
0x4007cb2	    0x41c744241800	               mov dword [r12 + 0x18], 0	      2159	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4007cbb	          0x498b36	                    mov rsi, qword [r14]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4007cbe	          0x4885ed	                           test rbp, rbp	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007cc1	        0x498b7e08	                mov rdi, qword [r14 + 8]	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4007cc5	          0x488930	                    mov qword [rax], rsi	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4007cc8	        0x48897808	                mov qword [rax + 8], rdi	      2160	channel.c	FUNCTION_56	ELSE_2	ELSE_3
0x4007ccc	     0xf84be020000	                            je 0x4007f90	      2161	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007cd2	        0x488b4508	                mov rax, qword [rbp + 8]	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4007cd6	      0x49896c2410	             mov qword [r12 + 0x10], rbp	      2175	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4007cdb	      0x4989442408	                mov qword [r12 + 8], rax	      2176	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4007ce0	        0x4c896508	                mov qword [rbp + 8], r12	      2177	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5
0x4007ce4	      0x498b442408	                mov rax, qword [r12 + 8]	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4007ce9	          0x4885c0	                           test rax, rax	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4007cec	     0xf8417040000	                            je 0x4008109	      2178	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4007cf2	        0x4c896010	             mov qword [rax + 0x10], r12	      2181	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x4007cf6	            0x31ed	                            xor ebp, ebp	      2353	channel.c	FUNCTION_59
0x4007cf8	      0xe9d2fcffff	                           jmp 0x40079cf	      2353	channel.c	FUNCTION_59
0x4007cfd	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4007d02	    0x488d8c241001	                  lea rcx, [rsp + 0x110]	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4007d0a	          0x4c89ef	                            mov rdi, r13	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4007d0d	            0x31ed	                            xor ebp, ebp	      2353	channel.c	FUNCTION_59
0x4007d0f	      0xe8aca6ffff	       call sym.invoke_one_time_callback	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4007d14	      0xe9aefcffff	                           jmp 0x40079c7	      2649	channel.c	FUNCTION_61	IF_23	FOR_4	IF_24	CALL_20
0x4007d19	    0xc78424100100	              mov dword [rsp + 0x110], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d24	    0xc78424200100	              mov dword [rsp + 0x120], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d2f	      0xba02000000	                              mov edx, 2	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d34	          0x4863c2	                         movsxd rax, edx	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d37	        0x48c1e004	                              shl rax, 4	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d3b	          0x83fa03	                              cmp edx, 3	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d3e	    0xc78404100100	        mov dword [rsp + rax + 0x110], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d49	     0xf846cfeffff	                            je 0x4007bbb	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d4f	    0xc78424400100	              mov dword [rsp + 0x140], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d5a	      0xe95cfeffff	                           jmp 0x4007bbb	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007d5f	            0x89fa	                            mov edx, edi	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4007d61	      0xbe00000000	                              mov esi, 0	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4007d66	          0x4c89ef	                            mov rdi, r13	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4007d69	            0x31c0	                            xor eax, eax	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4007d6b	            0x31ed	                            xor ebp, ebp	      2353	channel.c	FUNCTION_59
0x4007d6d	      0xe800000000	                          call 0x4007d72	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4007d72	      0xe950fcffff	                           jmp 0x40079c7	      2662	channel.c	FUNCTION_61	IF_23	IF_25	ELSE_7	CALL_22
0x4007d77	          0x4c89ef	                            mov rdi, r13	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4007d7a	      0xbe00000000	                              mov esi, 0	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4007d7f	            0x31c0	                            xor eax, eax	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4007d81	      0xe85aa2ffff	                       call sym.ch_error	      2544	channel.c	FUNCTION_61	IF_6	IF_10	CALL_8
0x4007d86	          0x4c89f7	                            mov rdi, r14	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4007d89	      0xe800000000	                          call 0x4007d8e	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4007d8e	      0xe9fbf7ffff	                           jmp 0x400758e	      2546	channel.c	FUNCTION_61	IF_6	IF_10	CALL_9
0x4007d93	            0x89c2	                            mov edx, eax	      2698	channel.c	FUNCTION_61	CALL_29
0x4007d95	      0xbe00000000	                              mov esi, 0	      2698	channel.c	FUNCTION_61	CALL_29
0x4007d9a	          0x4c89ef	                            mov rdi, r13	      2698	channel.c	FUNCTION_61	CALL_29
0x4007d9d	            0x31c0	                            xor eax, eax	      2698	channel.c	FUNCTION_61	CALL_29
0x4007d9f	      0xe800000000	                          call 0x4007da4	      2698	channel.c	FUNCTION_61	CALL_29
0x4007da4	      0xe919fcffff	                           jmp 0x40079c2	      2698	channel.c	FUNCTION_61	CALL_29
0x4007da9	          0x4889da	                            mov rdx, rbx	      1644	channel.c	FUNCTION_46
0x4007dac	          0x4889d8	                            mov rax, rbx	      1644	channel.c	FUNCTION_46
0x4007daf	        0x48c1e204	                              shl rdx, 4	      1644	channel.c	FUNCTION_46
0x4007db3	        0x48c1e008	                              shl rax, 8	      1644	channel.c	FUNCTION_46
0x4007db7	          0x4801d0	                            add rax, rdx	      1644	channel.c	FUNCTION_46
0x4007dba	          0x4c01e8	                            add rax, r13	      1644	channel.c	FUNCTION_46
0x4007dbd	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1644	channel.c	FUNCTION_46
0x4007dc1	          0x4885ff	                           test rdi, rdi	      1647	channel.c	FUNCTION_46	IF_1
0x4007dc4	     0xf84cf070000	                            je 0x4008599	      1647	channel.c	FUNCTION_46	IF_1
0x4007dca	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x4007dce	          0x488b2f	                    mov rbp, qword [rdi]	      1650	channel.c	FUNCTION_46
0x4007dd1	        0x48895040	             mov qword [rax + 0x40], rdx	      1651	channel.c	FUNCTION_46
0x4007dd5	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4007dd9	          0x4885d2	                           test rdx, rdx	      1652	channel.c	FUNCTION_46	IF_2
0x4007ddc	     0xf8406040000	                            je 0x40081e8	      1652	channel.c	FUNCTION_46	IF_2
0x4007de2	    0x48c742180000	               mov qword [rdx + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4007dea	      0x4889742430	             mov qword [rsp + 0x30], rsi	      1655	channel.c	FUNCTION_46	ELSE_1
0x4007def	      0xe800000000	                          call 0x4007df4	      1656	channel.c	FUNCTION_46	CALL_1
0x4007df4	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1656	channel.c	FUNCTION_46	CALL_1
0x4007df9	          0xc60600	                       mov byte [rsi], 0	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4007dfc	      0xe92efbffff	                           jmp 0x400792f	      2616	channel.c	FUNCTION_61	ELSE_4	IF_14	IF_21
0x4007e01	    0x498b85800400	           mov rax, qword [r13 + 0x480] 	      2499	channel.c	FUNCTION_61	ELSE_2
0x4007e08	          0x4531ff	                          xor r15d, r15d	      2500	channel.c	FUNCTION_61	ELSE_2
0x4007e0b	      0x4889442410	             mov qword [rsp + 0x10], rax	      2499	channel.c	FUNCTION_61	ELSE_2
0x4007e10	    0x498b85880400	           mov rax, qword [r13 + 0x488] 	      2500	channel.c	FUNCTION_61	ELSE_2
0x4007e17	      0x4889442428	             mov qword [rsp + 0x28], rax	      2500	channel.c	FUNCTION_61	ELSE_2
0x4007e1c	      0xe9f5f7ffff	                           jmp 0x4007616	      2500	channel.c	FUNCTION_61	ELSE_2
0x4007e21	      0xb801000000	                              mov eax, 1	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007e26	          0x4863d0	                         movsxd rdx, eax	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e29	        0x48c1e204	                              shl rdx, 4	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e2d	    0xc78414100100	        mov dword [rsp + rdx + 0x110], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e38	          0x8d5002	                      lea edx, [rax + 2]	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e3b	          0x83c001	                              add eax, 1	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e3e	            0x4898	                                    cdqe	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e40	        0x48c1e004	                              shl rax, 4	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e44	          0x83fa04	                              cmp edx, 4	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e47	    0xc78404100100	        mov dword [rsp + rax + 0x110], 0	      2532	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e52	     0xf85dcfeffff	                           jne 0x4007d34	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e58	      0xe95efdffff	                           jmp 0x4007bbb	      2531	channel.c	FUNCTION_61	IF_6	WHILE_1
0x4007e5d	      0xb802000000	                              mov eax, 2	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007e62	            0xebc2	                           jmp 0x4007e26	      2530	channel.c	FUNCTION_61	IF_6	FOR_2
0x4007e64	        0x48894110	             mov qword [rcx + 0x10], rax	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4007e68	      0xe9b2fcffff	                           jmp 0x4007b1f	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4007e6d	        0x48895108	                mov qword [rcx + 8], rdx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4007e71	      0xe997fcffff	                           jmp 0x4007b0d	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4007e76	    0x83bc24200100	              cmp dword [rsp + 0x120], 2	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4007e7e	     0xf85cf000000	                           jne 0x4007f53	      2201	channel.c	ELSE_6	FUNCTION_57	IF_1
0x4007e84	    0x4c8ba4242801	           mov r12, qword [rsp + 0x128] 	      2208	channel.c	ELSE_6	FUNCTION_57
0x4007e8c	      0xb800000000	                              mov eax, 0	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4007e91	          0x4d85e4	                           test r12, r12	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4007e94	        0x4c0f44e0	                          cmove r12, rax	      2210	channel.c	ELSE_6	FUNCTION_57	IF_3
0x4007e98	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	      2197	channel.c	ELSE_6	FUNCTION_57
0x4007ea0	        0x440fb638	                  movzx r15d, byte [rax]	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4007ea4	      0x4889442408	                mov qword [rsp + 8], rax	      2197	channel.c	ELSE_6	FUNCTION_57
0x4007ea9	        0x4180ff65	                          cmp r15b, 0x65	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4007ead	     0xf8570020000	                           jne 0x4008123	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4007eb3	        0x80780178	                cmp byte [rax + 1], 0x78	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4007eb7	     0xf8566020000	                           jne 0x4008123	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4007ebd	        0x80780200	                   cmp byte [rax + 2], 0	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4007ec1	     0xf855c020000	                           jne 0x4008123	      2212	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_4
0x4007ec7	            0x31c0	                            xor eax, eax	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4007ec9	          0x4c89e2	                            mov rdx, r12	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4007ecc	      0xbe00000000	                              mov esi, 0	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4007ed1	          0x4c89ef	                            mov rdi, r13	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4007ed4	    0x8b1d00000000	            mov ebx, dword [0x04007eda] 	      2214	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4007eda	    0xc70500000000	               mov dword [0x04007ee4], 0	      2216	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4007ee4	      0xe800000000	                          call 0x4007ee9	      2217	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_5
0x4007ee9	          0x4c89e7	                            mov rdi, r12	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4007eec	    0x830500000000	               add dword [0x04007ef3], 1	      2218	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4007ef3	      0xe800000000	                          call 0x4007ef8	      2219	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_6
0x4007ef8	    0x832d00000000	               sub dword [0x04007eff], 1	      2220	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4007eff	    0x833d00000000	               cmp dword [0x04007f06], 0	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x4007f06	            0x741c	                            je 0x4007f24	      2221	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5
0x4007f08	      0xbf03000000	                              mov edi, 3	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x4007f0d	      0xe800000000	                          call 0x4007f12	      2223	channel.c	ELSE_6	FUNCTION_57	IF_4	CALL_8
0x4007f12	      0xbe00000000	                              mov esi, 0	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4007f17	          0x4889c2	                            mov rdx, rax	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4007f1a	          0x4c89ef	                            mov rdi, r13	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4007f1d	            0x31c0	                            xor eax, eax	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4007f1f	      0xe800000000	                          call 0x4007f24	      2222	channel.c	ELSE_6	FUNCTION_57	IF_4	IF_5	CALL_7
0x4007f24	    0x891d00000000	            mov dword [0x04007f2a], ebx 	      2224	channel.c	ELSE_6	FUNCTION_57	IF_4
0x4007f2a	          0x4c89f7	                            mov rdi, r14	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x4007f2d	      0xe800000000	                          call 0x4007f32	      2538	channel.c	FUNCTION_61	IF_6	IF_9	CALL_7
0x4007f32	      0xb801000000	                              mov eax, 1	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x4007f37	      0xe954f6ffff	                           jmp 0x4007590	      2539	channel.c	FUNCTION_61	IF_6	IF_9
0x4007f3c	          0x4c89e7	                            mov rdi, r12	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4007f3f	      0xe800000000	                          call 0x4007f44	      2154	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_4
0x4007f44	          0x4c89f7	                            mov rdi, r14	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4007f47	            0x31ed	                            xor ebp, ebp	      2353	channel.c	FUNCTION_59
0x4007f49	      0xe800000000	                          call 0x4007f4e	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4007f4e	      0xe97cfaffff	                           jmp 0x40079cf	      2155	channel.c	FUNCTION_56	ELSE_2	IF_3	CALL_5
0x4007f53	            0x31c0	                            xor eax, eax	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4007f55	      0xbe00000000	                              mov esi, 0	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4007f5a	          0x4c89ef	                            mov rdi, r13	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4007f5d	      0xe87ea0ffff	                       call sym.ch_error	      2203	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_1
0x4007f62	    0x48833d000000	               cmp qword [0x04007f6a], 2	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4007f6a	            0x7ebe	                           jle 0x4007f2a	      2204	channel.c	ELSE_6	FUNCTION_57	IF_1	IF_2
0x4007f6c	            0x31ff	                            xor edi, edi	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f6e	      0xba05000000	                              mov edx, 5	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f73	      0xbe00000000	                              mov esi, 0	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f78	      0xe800000000	                          call 0x4007f7d	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f7d	          0x4889c7	                            mov rdi, rax	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f80	      0xe800000000	                          call 0x4007f85	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f85	            0xeba3	                           jmp 0x4007f2a	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f87	    0x660f1f840000	                    nop word [rax + rax]	      2205	channel.c	ELSE_6	FUNCTION_57	IF_1	CALL_3
0x4007f90	          0x4889da	                            mov rdx, rbx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007f93	          0x4889d8	                            mov rax, rbx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007f96	        0x48c1e204	                              shl rdx, 4	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007f9a	        0x48c1e008	                              shl rax, 8	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007f9e	          0x4801d0	                            add rax, rdx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007fa1	          0x4c01e8	                            add rax, r13	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007fa4	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007fa8	      0x4989542410	             mov qword [r12 + 0x10], rdx	      2164	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007fad	        0x4c896060	             mov qword [rax + 0x60], r12	      2165	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007fb1	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4007fb6	    0x49c744240800	                  mov qword [r12 + 8], 0	      2166	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4
0x4007fbf	          0x4885c0	                           test rax, rax	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4007fc2	     0xf84f5040000	                            je 0x40084bd	      2167	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x4007fc8	        0x4c896008	                mov qword [rax + 8], r12	      2170	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4007fcc	            0x31ed	                            xor ebp, ebp	      2353	channel.c	FUNCTION_59
0x4007fce	      0xe9fcf9ffff	                           jmp 0x40079cf	      2353	channel.c	FUNCTION_59
0x4007fd3	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2353	channel.c	FUNCTION_59
0x4007fd9	    0x48c744246000	               mov qword [rsp + 0x60], 0	      2347	channel.c	FUNCTION_59
0x4007fe2	    0xc74424680000	               mov dword [rsp + 0x68], 0	      2347	channel.c	FUNCTION_59
0x4007fea	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	      2347	channel.c	FUNCTION_59
0x4007ff2	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2348	channel.c	FUNCTION_59
0x4007ffb	    0x48c744245000	               mov qword [rsp + 0x50], 0	      2349	channel.c	FUNCTION_59
0x4008004	            0x85c0	                           test eax, eax	      2356	channel.c	FUNCTION_59	IF_1
0x4008006	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2353	channel.c	FUNCTION_59
0x400800a	     0xf850d020000	                           jne 0x400821d	      2356	channel.c	FUNCTION_59	IF_1
0x4008010	          0x4889da	                            mov rdx, rbx	      2356	channel.c	FUNCTION_59	IF_1
0x4008013	          0x4889d8	                            mov rax, rbx	      2356	channel.c	FUNCTION_59	IF_1
0x4008016	        0x48c1e204	                              shl rdx, 4	      2356	channel.c	FUNCTION_59	IF_1
0x400801a	        0x48c1e008	                              shl rax, 8	      2356	channel.c	FUNCTION_59	IF_1
0x400801e	          0x4801d0	                            add rax, rdx	      2356	channel.c	FUNCTION_59	IF_1
0x4008021	    0x458b94050801	    mov r10d, dword [r13 + rax + 0x108] 	      2356	channel.c	FUNCTION_59	IF_1
0x4008029	          0x4585d2	                         test r10d, r10d	      2356	channel.c	FUNCTION_59	IF_1
0x400802c	     0xf85eb010000	                           jne 0x400821d	      2356	channel.c	FUNCTION_59	IF_1
0x4008032	    0x4869db100100	                    imul rbx, rbx, 0x110	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4008039	          0x4c01eb	                            add rbx, r13	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x400803c	    0x83bb0c010000	              cmp dword [rbx + 0x10c], 0	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4008043	     0xf8550f9ffff	                           jne 0x4007999	      2358	channel.c	FUNCTION_59	IF_1	IF_2
0x4008049	      0xbe00000000	                              mov esi, 0	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x400804e	          0x4c89ef	                            mov rdi, r13	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x4008051	            0x31c0	                            xor eax, eax	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x4008053	      0xe8889fffff	                       call sym.ch_error	      2360	channel.c	FUNCTION_59	IF_1	IF_2	CALL_1
0x4008058	    0xc7830c010000	              mov dword [rbx + 0x10c], 1	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x4008062	      0xe932f9ffff	                           jmp 0x4007999	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x4008067	    0x660f1f840000	                    nop word [rax + rax]	      2361	channel.c	FUNCTION_59	IF_1	IF_2
0x4008070	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4008075	            0x31c0	                            xor eax, eax	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4008077	      0xbe00000000	                              mov esi, 0	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x400807c	          0x4c89ef	                            mov rdi, r13	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x400807f	      0xe800000000	                          call 0x4008084	      2691	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x4008084	    0x8b1500000000	            mov edx, dword [0x0400808a] 	      1594	channel.c	FUNCTION_43	IF_1
0x400808a	            0x85d2	                           test edx, edx	      1594	channel.c	FUNCTION_43	IF_1
0x400808c	            0x750a	                           jne 0x4008098	      1594	channel.c	FUNCTION_43	IF_1
0x400808e	      0xbf00000000	                              mov edi, 0	      1595	channel.c	FUNCTION_43	CALL_1
0x4008093	      0xe800000000	                          call 0x4008098	      1595	channel.c	FUNCTION_43	CALL_1
0x4008098	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1600	channel.c	FUNCTION_43	CALL_3
0x400809d	    0xc78424100100	            mov dword [rsp + 0x110], 0xa	      1597	channel.c	FUNCTION_43
0x40080a8	    0x4c89ac241801	            mov qword [rsp + 0x118], r13	      1598	channel.c	FUNCTION_43
0x40080b0	          0x4889df	                            mov rdi, rbx	      1600	channel.c	FUNCTION_43	CALL_3
0x40080b3	      0xe800000000	                          call 0x40080b8	      1600	channel.c	FUNCTION_43	CALL_3
0x40080b8	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40080ba	        0xff742430	                 push qword [rsp + 0x30]	      1600	channel.c	FUNCTION_43	CALL_3
0x40080be	          0x4531c9	                            xor r9d, r9d	      1600	channel.c	FUNCTION_43	CALL_3
0x40080c1	            0x6a01	                                  push 1	      1600	channel.c	FUNCTION_43	CALL_3
0x40080c3	      0xb902000000	                              mov ecx, 2	      1600	channel.c	FUNCTION_43	CALL_3
0x40080c8	            0x89c6	                            mov esi, eax	      1600	channel.c	FUNCTION_43	CALL_3
0x40080ca	          0x4889df	                            mov rdi, rbx	      1600	channel.c	FUNCTION_43	CALL_3
0x40080cd	      0x488d542468	                   lea rdx, [rsp + 0x68]	      1600	channel.c	FUNCTION_43	CALL_3
0x40080d2	              0x52	                                push rdx	      1600	channel.c	FUNCTION_43	CALL_3
0x40080d3	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40080d5	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x40080d7	    0x4c8d84244001	                   lea r8, [rsp + 0x140]	      1600	channel.c	FUNCTION_43	CALL_3
0x40080df	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      1600	channel.c	FUNCTION_43	CALL_3
0x40080e7	      0xe800000000	                          call 0x40080ec	      1600	channel.c	FUNCTION_43	CALL_3
0x40080ec	        0x4883c430	                           add rsp, 0x30	      1602	channel.c	FUNCTION_43	CALL_4
0x40080f0	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1602	channel.c	FUNCTION_43	CALL_4
0x40080f5	      0xe800000000	                          call 0x40080fa	      1602	channel.c	FUNCTION_43	CALL_4
0x40080fa	    0xc70500000000	               mov dword [0x04008104], 1	      1603	channel.c	FUNCTION_43
0x4008104	      0xe9b9f8ffff	                           jmp 0x40079c2	      1603	channel.c	FUNCTION_43
0x4008109	          0x4889d8	                            mov rax, rbx	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400810c	        0x48c1e308	                              shl rbx, 8	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4008110	            0x31ed	                            xor ebp, ebp	      2353	channel.c	FUNCTION_59
0x4008112	        0x48c1e004	                              shl rax, 4	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4008116	          0x4801d8	                            add rax, rbx	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4008119	      0x4d89640560	       mov qword [r13 + rax + 0x60], r12	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x400811e	      0xe9acf8ffff	                           jmp 0x40079cf	      2179	channel.c	FUNCTION_56	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4008123	      0x488b742408	                mov rsi, qword [rsp + 8]	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4008128	      0xbf00000000	                              mov edi, 0	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x400812d	      0xb907000000	                              mov ecx, 7	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4008132	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x4008134	     0xf8496030000	                            je 0x40084d0	      2226	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_9
0x400813a	      0x488b742408	                mov rsi, qword [rsp + 8]	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x400813f	      0xbf00000000	                              mov edi, 0	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4008144	      0xb907000000	                              mov ecx, 7	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4008149	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x400814b	     0xf8401040000	                            je 0x4008552	      2236	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_12
0x4008151	      0x488b742408	                mov rsi, qword [rsp + 8]	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4008156	      0xbf00000000	                              mov edi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400815b	      0xb905000000	                              mov ecx, 5	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4008160	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4008162	            0x7417	                            je 0x400817b	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4008164	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4008169	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400816e	      0xe800000000	                          call 0x4008173	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4008173	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x4008175	     0xf8591030000	                           jne 0x400850c	      2247	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	CALL_19
0x400817b	    0x4869db100100	                    imul rbx, rbx, 0x110	      2199	channel.c	ELSE_6	FUNCTION_57
0x4008182	            0x31c0	                            xor eax, eax	      2199	channel.c	ELSE_6	FUNCTION_57
0x4008184	    0x41837c1d2003	        cmp dword [r13 + rbx + 0x20], 3 	      2199	channel.c	ELSE_6	FUNCTION_57
0x400818a	           0xf94c0	                                 sete al	      2199	channel.c	ELSE_6	FUNCTION_57
0x400818d	        0x4180ff63	                          cmp r15b, 0x63	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x4008191	        0x89442410	             mov dword [rsp + 0x10], eax	      2199	channel.c	ELSE_6	FUNCTION_57
0x4008195	     0xf8469040000	                            je 0x4008604	      2250	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8
0x400819b	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40081a3	     0xf8609040000	                           jbe 0x40085b2	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x40081a9	            0x31c0	                            xor eax, eax	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40081ab	      0xbe00000000	                              mov esi, 0	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40081b0	          0x4c89ef	                            mov rdi, r13	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40081b3	      0xe8289effff	                       call sym.ch_error	      2255	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_20
0x40081b8	    0x48833d000000	               cmp qword [0x040081c0], 2	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x40081c0	     0xf8e64fdffff	                           jle 0x4007f2a	      2256	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	IF_10
0x40081c6	            0x31ff	                            xor edi, edi	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081c8	      0xba05000000	                              mov edx, 5	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081cd	      0xbe00000000	                              mov esi, 0	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081d2	      0xe800000000	                          call 0x40081d7	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081d7	          0x4889c7	                            mov rdi, rax	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081da	      0xe800000000	                          call 0x40081df	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081df	      0xe946fdffff	                           jmp 0x4007f2a	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081e4	         0xf1f4000	                         nop dword [rax]	      2257	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9	CALL_22
0x40081e8	    0x48c740480000	               mov qword [rax + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x40081f0	      0xe9f5fbffff	                           jmp 0x4007dea	      1653	channel.c	FUNCTION_46	IF_2
0x40081f5	        0x8b742408	                mov esi, dword [rsp + 8]	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40081f9	          0x4c89f7	                            mov rdi, r14	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x40081fc	      0xe800000000	                          call 0x4008201	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x4008201	          0x4885c0	                           test rax, rax	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x4008204	          0x4889c5	                            mov rbp, rax	      2672	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	CALL_23
0x4008207	     0xf848cf7ffff	                            je 0x4007999	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x400820d	      0xe966f7ffff	                           jmp 0x4007978	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x4008212	    0x660f1f440000	                    nop word [rax + rax]	      2673	channel.c	FUNCTION_61	ELSE_8	IF_27	IF_28	IF_30
0x4008218	      0xe800000000	                          call 0x400821d	      2705	channel.c	FUNCTION_61
0x400821d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2350	channel.c	FUNCTION_59
0x4008222	    0x8b88341c0000	          mov ecx, dword [rax + 0x1c34] 	      2351	channel.c	FUNCTION_59
0x4008228	          0x4c8b20	                    mov r12, qword [rax]	      2350	channel.c	FUNCTION_59
0x400822b	            0x89cf	                            mov edi, ecx	      2351	channel.c	FUNCTION_59
0x400822d	        0x894c2430	             mov dword [rsp + 0x30], ecx	      2351	channel.c	FUNCTION_59
0x4008231	          0x4889c1	                            mov rcx, rax	      2354	channel.c	FUNCTION_59
0x4008234	            0x85ff	                           test edi, edi	      2368	channel.c	FUNCTION_59	IF_3
0x4008236	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2354	channel.c	FUNCTION_59
0x4008239	            0x740e	                            je 0x4008249	      2368	channel.c	FUNCTION_59	IF_3
0x400823b	        0x4983ec01	                              sub r12, 1	      2370	channel.c	FUNCTION_59	IF_3
0x400823f	    0xc781341c0000	            mov dword [rcx + 0x1c34], 0 	      2371	channel.c	FUNCTION_59	IF_3
0x4008249	      0x418d542401	                      lea edx, [r12 + 1]	      2375	channel.c	FUNCTION_59	CALL_2
0x400824e	          0x83e001	                              and eax, 1	      2354	channel.c	FUNCTION_59
0x4008251	      0xbe00000000	                              mov esi, 0	      2375	channel.c	FUNCTION_59	CALL_2
0x4008256	        0x89442438	             mov dword [rsp + 0x38], eax	      2375	channel.c	FUNCTION_59	CALL_2
0x400825a	          0x4c89ef	                            mov rdi, r13	      2375	channel.c	FUNCTION_59	CALL_2
0x400825d	            0x29c2	                            sub edx, eax	      2375	channel.c	FUNCTION_59	CALL_2
0x400825f	            0x31c0	                            xor eax, eax	      2375	channel.c	FUNCTION_59	CALL_2
0x4008261	      0xe800000000	                          call 0x4008266	      2375	channel.c	FUNCTION_59	CALL_2
0x4008266	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2377	channel.c	FUNCTION_59
0x400826b	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2380	channel.c	FUNCTION_59	CALL_3
0x4008270	      0x488d542450	                   lea rdx, [rsp + 0x50]	      2380	channel.c	FUNCTION_59	CALL_3
0x4008275	      0x488d742448	                   lea rsi, [rsp + 0x48]	      2380	channel.c	FUNCTION_59	CALL_3
0x400827a	    0xc78740150000	            mov dword [rdi + 0x1540], 1 	      2377	channel.c	FUNCTION_59
0x4008284	      0xe800000000	                          call 0x4008289	      2380	channel.c	FUNCTION_59	CALL_3
0x4008289	      0xbf01000000	                              mov edi, 1	      2382	channel.c	FUNCTION_59	CALL_4
0x400828e	      0xe800000000	                          call 0x4008293	      2382	channel.c	FUNCTION_59	CALL_4
0x4008293	      0x4863442438	         movsxd rax, dword [rsp + 0x38] 	      2384	channel.c	FUNCTION_59	CALL_5
0x4008298	      0x498d4c2401	                      lea rcx, [r12 + 1]	      2384	channel.c	FUNCTION_59	CALL_5
0x400829d	          0x4c89e7	                            mov rdi, r12	      2384	channel.c	FUNCTION_59	CALL_5
0x40082a0	          0x4889ce	                            mov rsi, rcx	      2384	channel.c	FUNCTION_59	CALL_5
0x40082a3	      0x48894c2408	                mov qword [rsp + 8], rcx	      2384	channel.c	FUNCTION_59	CALL_5
0x40082a8	          0x4829c7	                            sub rdi, rax	      2384	channel.c	FUNCTION_59	CALL_5
0x40082ab	      0xe800000000	                          call 0x40082b0	      2384	channel.c	FUNCTION_59	CALL_5
0x40082b0	      0x448b4c2438	            mov r9d, dword [rsp + 0x38] 	      2386	channel.c	FUNCTION_59	IF_4
0x40082b5	    0x890500000000	            mov dword [0x040082bb], eax 	      2384	channel.c	FUNCTION_59	CALL_5
0x40082bb	          0x4585c9	                           test r9d, r9d	      2386	channel.c	FUNCTION_59	IF_4
0x40082be	     0xf84e5010000	                            je 0x40084a9	      2386	channel.c	FUNCTION_59	IF_4
0x40082c4	          0x4c89e7	                            mov rdi, r12	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40082c7	      0xba01000000	                              mov edx, 1	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40082cc	          0x4889ee	                            mov rsi, rbp	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40082cf	      0xe800000000	                          call 0x40082d4	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40082d4	          0x4531e4	                          xor r12d, r12d	      2390	channel.c	FUNCTION_59	IF_4
0x40082d7	    0x48c744240801	                  mov qword [rsp + 8], 1	      2389	channel.c	FUNCTION_59	IF_4	CALL_6
0x40082e0	      0xbe01000000	                              mov esi, 1	      2394	channel.c	FUNCTION_59	CALL_8
0x40082e5	          0x4c89e7	                            mov rdi, r12	      2394	channel.c	FUNCTION_59	CALL_8
0x40082e8	      0xe800000000	                          call 0x40082ed	      2394	channel.c	FUNCTION_59	CALL_8
0x40082ed	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2397	channel.c	FUNCTION_59	CALL_9
0x40082f2	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      2397	channel.c	FUNCTION_59	CALL_9
0x40082f7	      0x488d542460	                   lea rdx, [rsp + 0x60]	      2397	channel.c	FUNCTION_59	CALL_9
0x40082fc	      0xe800000000	                          call 0x4008301	      2397	channel.c	FUNCTION_59	CALL_9
0x4008301	          0x4889d8	                            mov rax, rbx	      2399	channel.c	FUNCTION_59	IF_5
0x4008304	        0x48c1e308	                              shl rbx, 8	      2399	channel.c	FUNCTION_59	IF_5
0x4008308	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2399	channel.c	FUNCTION_59	IF_5
0x400830d	        0x48c1e004	                              shl rax, 4	      2399	channel.c	FUNCTION_59	IF_5
0x4008311	          0x4801d8	                            add rax, rbx	      2399	channel.c	FUNCTION_59	IF_5
0x4008314	    0x418bbc050801	     mov edi, dword [r13 + rax + 0x108] 	      2400	channel.c	FUNCTION_59	IF_5
0x400831c	        0x448b4178	            mov r8d, dword [rcx + 0x78] 	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008320	      0xb800000000	                              mov eax, 0	      2400	channel.c	FUNCTION_59	IF_5
0x4008325	            0x85ff	                           test edi, edi	      2400	channel.c	FUNCTION_59	IF_5
0x4008327	       0xf4444243c	           cmove eax, dword [rsp + 0x3c]	      2400	channel.c	FUNCTION_59	IF_5
0x400832c	          0x4585c0	                           test r8d, r8d	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400832f	    0x898140150000	          mov dword [rcx + 0x1540], eax 	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008335	     0xf8e1e010000	                           jle 0x4008459	      2404	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400833b	    0x488b1d000000	            mov rbx, qword [0x04008342] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008342	          0x4885db	                           test rbx, rbx	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008345	     0xf84f5000000	                            je 0x4008440	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400834b	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400834f	            0x85f6	                           test esi, esi	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008351	            0x757d	                           jne 0x40083d0	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008353	      0x498d542401	                      lea rdx, [r12 + 1]	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008358	            0xeb0d	                           jmp 0x4008367	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400835a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x400835e	          0x4885db	                           test rbx, rbx	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008361	     0xf84d9000000	                            je 0x4008440	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008367	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400836c	        0x483b4308	                cmp rax, qword [rbx + 8]	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008370	            0x75e8	                           jne 0x400835a	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008372	        0x4c3b6338	            cmp r12, qword [rbx + 0x38] 	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008376	            0x75e2	                           jne 0x400835a	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008378	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400837c	            0x75dc	                           jne 0x400835a	      2414	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400837e	    0x488b05000000	            mov rax, qword [0x04008385] 	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008385	        0x48895338	             mov qword [rbx + 0x38], rdx	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008389	            0x31f6	                            xor esi, esi	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x400838b	            0x31ff	                            xor edi, edi	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x400838d	      0x4889542408	                mov qword [rsp + 8], rdx	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008392	    0x48891d000000	            mov qword [0x04008399], rbx 	      2418	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008399	      0x4889442448	             mov qword [rsp + 0x48], rax	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400839e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083a3	    0x488905000000	            mov qword [0x040083aa], rax 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083aa	      0xe800000000	                          call 0x40083af	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x40083af	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083b4	      0x488b542408	                mov rdx, qword [rsp + 8]	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083b9	    0x488905000000	            mov qword [0x040083c0], rax 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083c0	        0x488b4008	                mov rax, qword [rax + 8]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083c4	    0x488905000000	            mov qword [0x040083cb], rax 	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083cb	            0xeb8d	                           jmp 0x400835a	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083cd	           0xf1f00	                         nop dword [rax]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083d0	      0x488b442408	                mov rax, qword [rsp + 8]	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083d5	        0x4c8d6001	                      lea r12, [rax + 1]	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083d9	            0xeb09	                           jmp 0x40083e4	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083db	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x40083df	          0x4885db	                           test rbx, rbx	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x40083e2	            0x745c	                            je 0x4008440	      2408	channel.c	FUNCTION_59	ELSE_2	IF_6
0x40083e4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083e9	        0x483b4308	                cmp rax, qword [rbx + 8]	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083ed	            0x75ec	                           jne 0x40083db	      2410	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083ef	      0x488b442408	                mov rax, qword [rsp + 8]	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083f4	        0x483b4338	            cmp rax, qword [rbx + 0x38] 	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083f8	            0x75e1	                           jne 0x40083db	      2411	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x40083fa	    0x488b05000000	            mov rax, qword [0x04008401] 	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008401	        0x4c896338	             mov qword [rbx + 0x38], r12	      2416	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008405	            0x31f6	                            xor esi, esi	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4008407	            0x31ff	                            xor edi, edi	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4008409	    0x48891d000000	            mov qword [0x04008410], rbx 	      2418	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008410	      0x4889442448	             mov qword [rsp + 0x48], rax	      2417	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008415	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400841a	    0x488905000000	            mov qword [0x04008421], rax 	      2419	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008421	      0xe800000000	                          call 0x4008426	      2420	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4008426	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400842b	    0x488905000000	            mov qword [0x04008432], rax 	      2421	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008432	        0x488b4008	                mov rax, qword [rax + 8]	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008436	    0x488905000000	            mov qword [0x0400843d], rax 	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400843d	            0xeb9c	                           jmp 0x40083db	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x400843f	              0x90	                                     nop	      2422	channel.c	FUNCTION_59	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4008440	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x4008445	      0xbe0a000000	                            mov esi, 0xa	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x400844a	      0xe800000000	                          call 0x400844f	      2425	channel.c	FUNCTION_59	ELSE_2	IF_6	CALL_10
0x400844f	    0xc70500000000	               mov dword [0x04008459], 1	      2426	channel.c	FUNCTION_59	ELSE_2	IF_6
0x4008459	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      2429	channel.c	FUNCTION_59	IF_7
0x400845d	            0x85c9	                           test ecx, ecx	      2429	channel.c	FUNCTION_59	IF_7
0x400845f	     0xf8434f5ffff	                            je 0x4007999	      2429	channel.c	FUNCTION_59	IF_7
0x4008465	    0x488b05000000	            mov rax, qword [0x0400846c] 	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x400846c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2435	channel.c	FUNCTION_59	IF_7
0x4008471	          0x4885c0	                           test rax, rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4008474	    0xc782341c0000	            mov dword [rdx + 0x1c34], 1 	      2435	channel.c	FUNCTION_59	IF_7
0x400847e	            0x7514	                           jne 0x4008494	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4008480	      0xe914f5ffff	                           jmp 0x4007999	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4008485	           0xf1f00	                         nop dword [rax]	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4008488	          0x488b00	                    mov rax, qword [rax]	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x400848b	          0x4885c0	                           test rax, rax	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x400848e	     0xf8405f5ffff	                            je 0x4007999	      2436	channel.c	FUNCTION_59	IF_7	FOR_1
0x4008494	    0x483b90280400	           cmp rdx, qword [rax + 0x428] 	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x400849b	            0x75eb	                           jne 0x4008488	      2440	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x400849d	          0x488b0a	                    mov rcx, qword [rdx]	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40084a0	    0x488988500400	            mov qword [rax + 0x450], rcx	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40084a7	            0xebdf	                           jmp 0x4008488	      2441	channel.c	FUNCTION_59	IF_7	FOR_1	IF_8
0x40084a9	            0x31c9	                            xor ecx, ecx	      2393	channel.c	FUNCTION_59	CALL_7
0x40084ab	            0x31d2	                            xor edx, edx	      2393	channel.c	FUNCTION_59	CALL_7
0x40084ad	          0x4889ee	                            mov rsi, rbp	      2393	channel.c	FUNCTION_59	CALL_7
0x40084b0	          0x4c89e7	                            mov rdi, r12	      2393	channel.c	FUNCTION_59	CALL_7
0x40084b3	      0xe800000000	                          call 0x40084b8	      2393	channel.c	FUNCTION_59	CALL_7
0x40084b8	      0xe923feffff	                           jmp 0x40082e0	      2393	channel.c	FUNCTION_59	CALL_7
0x40084bd	    0x4869db100100	                    imul rbx, rbx, 0x110	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40084c4	            0x31ed	                            xor ebp, ebp	      2353	channel.c	FUNCTION_59
0x40084c6	      0x4d89641d58	       mov qword [r13 + rbx + 0x58], r12	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40084cb	      0xe9fff4ffff	                           jmp 0x40079cf	      2168	channel.c	FUNCTION_56	ELSE_2	ELSE_3	IF_4	IF_5
0x40084d0	          0x4c89ef	                            mov rdi, r13	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x40084d3	          0x4c89e2	                            mov rdx, r12	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x40084d6	      0xbe00000000	                              mov esi, 0	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x40084db	            0x31c0	                            xor eax, eax	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x40084dd	      0xe800000000	                          call 0x40084e2	      2230	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_10
0x40084e2	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x40084e7	      0x4c89642460	             mov qword [rsp + 0x60], r12	      2231	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x40084ec	    0xc78424980000	               mov dword [rsp + 0x98], 0	      2232	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x40084f7	    0xc78424940000	               mov dword [rsp + 0x94], 1	      2233	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6
0x4008502	      0xe800000000	                          call 0x4008507	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x4008507	      0xe91efaffff	                           jmp 0x4007f2a	      2234	channel.c	ELSE_6	FUNCTION_57	ELSE_1	IF_6	CALL_11
0x400850c	    0x48833d000000	               cmp qword [0x04008514], 2	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x4008514	     0xf8e10faffff	                           jle 0x4007f2a	      2316	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20
0x400851a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x400851f	          0x4c89ef	                            mov rdi, r13	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4008522	            0x31c0	                            xor eax, eax	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4008524	      0xbe00000000	                              mov esi, 0	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4008529	          0x4889da	                            mov rdx, rbx	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x400852c	      0xe8af9affff	                       call sym.ch_error	      2318	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_38
0x4008531	            0x31ff	                            xor edi, edi	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4008533	      0xba05000000	                              mov edx, 5	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4008538	      0xbe00000000	                              mov esi, 0	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x400853d	      0xe800000000	                          call 0x4008542	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4008542	          0x4889de	                            mov rsi, rbx	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4008545	          0x4889c7	                            mov rdi, rax	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4008548	      0xe800000000	                          call 0x400854d	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x400854d	      0xe9d8f9ffff	                           jmp 0x4007f2a	      2319	channel.c	FUNCTION_57	ELSE_6	ELSE_8	IF_20	CALL_40
0x4008552	      0xbe00000000	                              mov esi, 0	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4008557	          0x4c89ef	                            mov rdi, r13	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x400855a	            0x31c0	                            xor eax, eax	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x400855c	      0xe800000000	                          call 0x4008561	      2240	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_13
0x4008561	            0x31c0	                            xor eax, eax	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4008563	      0x41803c2400	                       cmp byte [r12], 0	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4008568	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x400856d	           0xf95c0	                                setne al	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4008570	    0x898424940000	             mov dword [rsp + 0x94], eax	      2241	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7
0x4008577	      0xe800000000	                          call 0x400857c	      2242	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_14
0x400857c	            0x31ff	                            xor edi, edi	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x400857e	      0xe800000000	                          call 0x4008583	      2243	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_15
0x4008583	      0xe800000000	                          call 0x4008588	      2244	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_16
0x4008588	            0x31f6	                            xor esi, esi	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x400858a	      0xbf01000000	                              mov edi, 1	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x400858f	      0xe800000000	                          call 0x4008594	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4008594	      0xe991f9ffff	                           jmp 0x4007f2a	      2245	channel.c	ELSE_6	FUNCTION_57	ELSE_2	IF_7	CALL_17
0x4008599	            0x31ed	                            xor ebp, ebp	      1648	channel.c	FUNCTION_46	IF_1
0x400859b	      0xe959f8ffff	                           jmp 0x4007df9	      1648	channel.c	FUNCTION_46	IF_1
0x40085a0	            0x31ed	                            xor ebp, ebp	      2466	channel.c	FUNCTION_61
0x40085a2	      0xe9acf3ffff	                           jmp 0x4007953	      2466	channel.c	FUNCTION_61
0x40085a7	          0x4889f8	                            mov rax, rdi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40085aa	          0x4889f7	                            mov rdi, rsi	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40085ad	      0xe932f4ffff	                           jmp 0x40079e4	      2608	channel.c	FUNCTION_61	ELSE_4	IF_14	FOR_3
0x40085b2	            0x31c0	                            xor eax, eax	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40085b4	          0x4c89e2	                            mov rdx, r12	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40085b7	      0xbe00000000	                              mov esi, 0	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40085bc	          0x4c89ef	                            mov rdi, r13	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40085bf	    0x830500000000	               add dword [0x040085c6], 1	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x40085c6	      0xe800000000	                          call 0x40085cb	      2276	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x40085cb	            0x31f6	                            xor esi, esi	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40085cd	          0x4c89e7	                            mov rdi, r12	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40085d0	      0xe800000000	                          call 0x40085d5	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40085d5	    0x83bc24300100	              cmp dword [rsp + 0x130], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40085dd	          0x4889c3	                            mov rbx, rax	      2277	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x40085e0	     0xf8497000000	                            je 0x400867d	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40085e6	      0x4c8d7c2450	                   lea r15, [rsp + 0x50]	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40085eb	    0x832d00000000	               sub dword [0x040085f2], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40085f2	          0x4c39fb	                            cmp rbx, r15	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x40085f5	            0x7479	                            je 0x4008670	      2310	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x40085f7	          0x4889df	                            mov rdi, rbx	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x40085fa	      0xe800000000	                          call 0x40085ff	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x40085ff	      0xe926f9ffff	                           jmp 0x4007f2a	      2313	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x4008604	    0x83bc24400100	              cmp dword [rsp + 0x140], 1	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x400860c	     0xf8797fbffff	                            ja 0x40081a9	      2252	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	IF_9
0x4008612	    0x83bc24300100	              cmp dword [rsp + 0x130], 5	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x400861a	     0xf845e010000	                            je 0x400877e	      2259	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11
0x4008620	            0x31c0	                            xor eax, eax	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4008622	      0xbe00000000	                              mov esi, 0	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4008627	          0x4c89ef	                            mov rdi, r13	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x400862a	      0xe8b199ffff	                       call sym.ch_error	      2261	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x400862f	    0x48833d000000	               cmp qword [0x04008637], 2	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4008637	     0xf8eedf8ffff	                           jle 0x4007f2a	      2262	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x400863d	            0x31ff	                            xor edi, edi	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x400863f	      0xba05000000	                              mov edx, 5	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4008644	      0xbe00000000	                              mov esi, 0	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4008649	      0xe800000000	                          call 0x400864e	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x400864e	          0x4889c7	                            mov rdi, rax	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4008651	      0xe800000000	                          call 0x4008656	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4008656	      0xe9cff8ffff	                           jmp 0x4007f2a	      2263	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x400865b	    0x83bc24400100	              cmp dword [rsp + 0x140], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4008663	     0xf846f010000	                            je 0x40087d8	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4008669	    0x832d00000000	               sub dword [0x04008670], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4008670	          0x4c89ff	                            mov rdi, r15	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x4008673	      0xe800000000	                          call 0x4008678	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x4008678	      0xe9adf8ffff	                           jmp 0x4007f2a	      2311	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x400867d	    0x488bbc243801	           mov rdi, qword [rsp + 0x138] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4008685	          0x4885db	                           test rbx, rbx	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x4008688	          0x4189fc	                           mov r12d, edi	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400868b	     0xf84ad000000	                            je 0x400873e	      2290	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x4008691	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4008695	          0x4889de	                            mov rsi, rbx	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4008698	      0x4c8d7c2450	                   lea r15, [rsp + 0x50]	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x400869d	          0x83ca04	                               or edx, 4	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40086a0	      0xe800000000	                          call 0x40086a5	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40086a5	          0x4885c0	                           test rax, rax	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40086a8	          0x4989c1	                             mov r9, rax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40086ab	     0xf843affffff	                            je 0x40085eb	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40086b1	        0x41803900	                        cmp byte [r9], 0	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40086b5	            0x7539	                           jne 0x40086f0	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40086b7	          0x4c89cf	                             mov rdi, r9	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x40086ba	      0xe800000000	                          call 0x40086bf	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x40086bf	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40086c3	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40086c8	          0x4489e7	                           mov edi, r12d	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40086cb	    0xc74424600200	               mov dword [rsp + 0x60], 2	      2297	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40086d3	    0x48c744246800	               mov qword [rsp + 0x68], 0	      2298	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40086dc	          0x83ca04	                               or edx, 4	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40086df	      0xe800000000	                          call 0x40086e4	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40086e4	          0x4885c0	                           test rax, rax	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x40086e7	          0x4989c1	                             mov r9, rax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x40086ea	     0xf84fbfeffff	                            je 0x40085eb	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x40086f0	          0x4c89cf	                             mov rdi, r9	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x40086f3	            0x31c0	                            xor eax, eax	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x40086f5	        0x4883c9ff	              or rcx, 0xffffffffffffffff	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x40086f9	            0xf2ae	              repne scasb al, byte [rdi]	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x40086fb	          0x83fd01	                              cmp ebp, 1	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x40086fe	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4008703	          0x4c89ca	                             mov rdx, r9	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4008706	          0x4889c8	                            mov rax, rcx	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4008709	            0x19f6	                            sbb esi, esi	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400870b	          0x4c89ef	                            mov rdi, r13	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400870e	          0x48f7d0	                                 not rax	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4008711	            0xf7d6	                                 not esi	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4008713	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4008718	        0x488d48ff	                      lea rcx, [rax - 1]	      2305	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x400871c	          0x83e603	                              and esi, 3	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x400871f	      0xe800000000	                          call 0x4008724	      2303	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4008724	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4008729	          0x4c89cf	                             mov rdi, r9	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x400872c	      0xe800000000	                          call 0x4008731	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4008731	      0xe9b5feffff	                           jmp 0x40085eb	      2306	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4008736	    0x448ba4244801	          mov r12d, dword [rsp + 0x148] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x400873e	            0x31ff	                            xor edi, edi	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4008740	      0xe800000000	                          call 0x4008745	      2296	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x4008745	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4008749	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x400874e	          0x4489e7	                           mov edi, r12d	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4008751	    0xc74424600200	               mov dword [rsp + 0x60], 2	      2297	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4008759	    0x48c744246800	               mov qword [rsp + 0x68], 0	      2298	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4008762	          0x83ca04	                               or edx, 4	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4008765	      0xe800000000	                          call 0x400876a	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x400876a	          0x4885c0	                           test rax, rax	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x400876d	          0x4989c1	                             mov r9, rax	      2299	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4008770	            0x7458	                            je 0x40087ca	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4008772	            0x31db	                            xor ebx, ebx	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4008774	      0x4c8d7c2450	                   lea r15, [rsp + 0x50]	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4008779	      0xe972ffffff	                           jmp 0x40086f0	      2301	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x400877e	            0x31c0	                            xor eax, eax	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4008780	          0x4c89e2	                            mov rdx, r12	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4008783	      0xbe00000000	                              mov esi, 0	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x4008788	          0x4c89ef	                            mov rdi, r13	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x400878b	      0x4c8d7c2450	                   lea r15, [rsp + 0x50]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4008790	    0x830500000000	               add dword [0x04008797], 1	      2273	channel.c	ELSE_6	FUNCTION_57	ELSE_3	IF_8	ELSE_5
0x4008797	      0xe800000000	                          call 0x400879c	      2281	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	CALL_28
0x400879c	    0x488db4243001	                  lea rsi, [rsp + 0x130]	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087a4	            0x31c9	                            xor ecx, ecx	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087a6	            0x31d2	                            xor edx, edx	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087a8	          0x4d89f8	                             mov r8, r15	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087ab	          0x4c89e7	                            mov rdi, r12	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087ae	      0xe800000000	                          call 0x40087b3	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087b3	          0x83e801	                              sub eax, 1	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087b6	     0xf849ffeffff	                            je 0x400865b	      2282	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x40087bc	    0x83bc24400100	              cmp dword [rsp + 0x140], 1	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40087c4	     0xf846cffffff	                            je 0x4008736	      2286	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40087ca	    0x832d00000000	               sub dword [0x040087d1], 1	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40087d1	            0x31db	                            xor ebx, ebx	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40087d3	      0xe91ffeffff	                           jmp 0x40085f7	      2309	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6
0x40087d8	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40087dc	    0x488bbc244801	           mov rdi, qword [rsp + 0x148] 	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40087e4	          0x4c89fe	                            mov rsi, r15	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40087e7	          0x4c89fb	                            mov rbx, r15	      2283	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	IF_14
0x40087ea	          0x83ca04	                               or edx, 4	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40087ed	          0x4189fc	                           mov r12d, edi	      2288	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x40087f0	      0xe800000000	                          call 0x40087f5	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40087f5	          0x4885c0	                           test rax, rax	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x40087f8	          0x4989c1	                             mov r9, rax	      2291	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x40087fb	     0xf85b0feffff	                           jne 0x40086b1	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x4008801	      0xe963feffff	                           jmp 0x4008669	      2292	channel.c	FUNCTION_57	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
job_unref	WHILE,0:FOR,0:CALL,5:IF,4:ELSE,1:functions,0:DO,0:SWITCH,0	105
0x400bf70	          0x4885ff	                           test rdi, rdi	      5333	channel.c	FUNCTION_122	IF_1
0x400bf73	            0x740d	                            je 0x400bf82	      5333	channel.c	FUNCTION_122	IF_1
0x400bf75	          0x8b4758	            mov eax, dword [rdi + 0x58] 	      5333	channel.c	FUNCTION_122	IF_1
0x400bf78	          0x83e801	                              sub eax, 1	      5333	channel.c	FUNCTION_122	IF_1
0x400bf7b	            0x85c0	                           test eax, eax	      5333	channel.c	FUNCTION_122	IF_1
0x400bf7d	          0x894758	             mov dword [rdi + 0x58], eax	      5333	channel.c	FUNCTION_122	IF_1
0x400bf80	            0x7e06	                           jle 0x400bf88	      5333	channel.c	FUNCTION_122	IF_1
0x400bf82	              0xc3	                                     ret	      5356	channel.c	FUNCTION_122
0x400bf83	       0xf1f440000	                   nop dword [rax + rax]	      5356	channel.c	FUNCTION_122
0x400bf88	            0x4156	                                push r14	      5332	channel.c	FUNCTION_122
0x400bf8a	              0x53	                                push rbx	      5332	channel.c	FUNCTION_122
0x400bf8b	          0x4889fb	                            mov rbx, rdi	      5332	channel.c	FUNCTION_122
0x400bf8e	        0x4883ec08	                              sub rsp, 8	      5332	channel.c	FUNCTION_122
0x400bf92	        0x4c8b7760	            mov r14, qword [rdi + 0x60] 	      5332	channel.c	FUNCTION_122
0x400bf96	          0x4d85f6	                           test r14, r14	      5113	channel.c	FUNCTION_114	CALL_1
0x400bf99	            0x7445	                            je 0x400bfe0	      5113	channel.c	FUNCTION_114	CALL_1
0x400bf9b	    0x418bbeb00400	           mov edi, dword [r14 + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400bfa2	            0x85ff	                           test edi, edi	       315	channel.c	FUNCTION_9	IF_1
0x400bfa4	     0xf8586000000	                           jne 0x400c030	       315	channel.c	FUNCTION_9	IF_1
0x400bfaa	    0x4983be900400	              cmp qword [r14 + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400bfb2	            0x740c	                            je 0x400bfc0	       319	channel.c	FUNCTION_9	IF_2
0x400bfb4	        0x4883c408	                              add rsp, 8	      5356	channel.c	FUNCTION_122
0x400bfb8	              0x5b	                                 pop rbx	      5356	channel.c	FUNCTION_122
0x400bfb9	            0x415e	                                 pop r14	      5356	channel.c	FUNCTION_122
0x400bfbb	              0xc3	                                     ret	      5356	channel.c	FUNCTION_122
0x400bfbc	         0xf1f4000	                         nop dword [rax]	      5356	channel.c	FUNCTION_122
0x400bfc0	    0x4983be280400	              cmp qword [r14 + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400bfc8	            0x75ea	                           jne 0x400bfb4	       323	channel.c	FUNCTION_9	IF_3
0x400bfca	          0x4c89f7	                            mov rdi, r14	       323	channel.c	FUNCTION_9	IF_3
0x400bfcd	      0xe8fe43ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400bfd2	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x400bfd4	            0x75de	                           jne 0x400bfb4	      5113	channel.c	FUNCTION_114	CALL_1
0x400bfd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5113	channel.c	FUNCTION_114	CALL_1
0x400bfe0	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5104	channel.c	FUNCTION_113
0x400bfe4	            0x745a	                            je 0x400c040	      5104	channel.c	FUNCTION_113
0x400bfe6	    0x8b0500000000	            mov eax, dword [0x0400bfec] 	      5081	channel.c	FUNCTION_111	IF_1
0x400bfec	            0x85c0	                           test eax, eax	      5081	channel.c	FUNCTION_111	IF_1
0x400bfee	            0x75c4	                           jne 0x400bfb4	      5081	channel.c	FUNCTION_111	IF_1
0x400bff0	          0x4889df	                            mov rdi, rbx	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x400bff3	      0xe8e8d6ffff	              call sym.job_free_contents	      5083	channel.c	FUNCTION_111	IF_1	CALL_1
0x400bff8	          0x488b03	                    mov rax, qword [rbx]	      5069	channel.c	FUNCTION_110	IF_1
0x400bffb	          0x4885c0	                           test rax, rax	      5069	channel.c	FUNCTION_110	IF_1
0x400bffe	            0x7408	                            je 0x400c008	      5069	channel.c	FUNCTION_110	IF_1
0x400c000	        0x488b5308	                mov rdx, qword [rbx + 8]	      5070	channel.c	FUNCTION_110	IF_1
0x400c004	        0x48895008	                mov qword [rax + 8], rdx	      5070	channel.c	FUNCTION_110	IF_1
0x400c008	        0x488b5308	                mov rdx, qword [rbx + 8]	      5071	channel.c	FUNCTION_110	IF_2
0x400c00c	          0x4885d2	                           test rdx, rdx	      5071	channel.c	FUNCTION_110	IF_2
0x400c00f	     0xf84db000000	                            je 0x400c0f0	      5071	channel.c	FUNCTION_110	IF_2
0x400c015	          0x488902	                    mov qword [rdx], rax	      5074	channel.c	FUNCTION_110	ELSE_1
0x400c018	        0x4883c408	                              add rsp, 8	      5356	channel.c	FUNCTION_122
0x400c01c	          0x4889df	                            mov rdi, rbx	      5075	channel.c	FUNCTION_110	CALL_1
0x400c01f	              0x5b	                                 pop rbx	      5356	channel.c	FUNCTION_122
0x400c020	            0x415e	                                 pop r14	      5356	channel.c	FUNCTION_122
0x400c022	      0xe900000000	                           jmp 0x400c027	      5075	channel.c	FUNCTION_110	CALL_1
0x400c027	    0x660f1f840000	                    nop word [rax + rax]	      5075	channel.c	FUNCTION_110	CALL_1
0x400c030	    0x4983bea80400	              cmp qword [r14 + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400c038	     0xf856cffffff	                           jne 0x400bfaa	       315	channel.c	FUNCTION_9	IF_1
0x400c03e	            0xeba0	                           jmp 0x400bfe0	       315	channel.c	FUNCTION_9	IF_1
0x400c040	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      5104	channel.c	FUNCTION_113
0x400c045	            0x7449	                            je 0x400c090	      5104	channel.c	FUNCTION_113
0x400c047	          0x4d85f6	                           test r14, r14	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400c04a	     0xf8464ffffff	                            je 0x400bfb4	      5345	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400c050	            0x31c0	                            xor eax, eax	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c052	          0x4c89f7	                            mov rdi, r14	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c055	      0xbe00000000	                              mov esi, 0	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c05a	      0xe800000000	                          call 0x400c05f	      5349	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c05f	        0x4c8b7360	            mov r14, qword [rbx + 0x60] 	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400c063	    0x418b86b40400	           mov eax, dword [r14 + 0x4b4] 	       419	channel.c	FUNCTION_15	IF_1
0x400c06a	    0x49c786a80400	              mov qword [r14 + 0x4a8], 0	      5350	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400c075	          0x83e801	                              sub eax, 1	       419	channel.c	FUNCTION_15	IF_1
0x400c078	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_15	IF_1
0x400c07a	    0x418986b40400	            mov dword [r14 + 0x4b4], eax	       419	channel.c	FUNCTION_15	IF_1
0x400c081	            0x7e1d	                           jle 0x400c0a0	       419	channel.c	FUNCTION_15	IF_1
0x400c083	    0x48c743600000	               mov qword [rbx + 0x60], 0	      5352	channel.c	FUNCTION_122	IF_1	IF_2	ELSE_1	IF_4
0x400c08b	      0xe924ffffff	                           jmp 0x400bfb4	      5356	channel.c	FUNCTION_122
0x400c090	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      5104	channel.c	FUNCTION_113
0x400c095	            0x75b0	                           jne 0x400c047	      5104	channel.c	FUNCTION_113
0x400c097	      0xe94affffff	                           jmp 0x400bfe6	      5104	channel.c	FUNCTION_113
0x400c09c	         0xf1f4000	                         nop dword [rax]	      5104	channel.c	FUNCTION_113
0x400c0a0	    0x418bb6b00400	           mov esi, dword [r14 + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400c0a7	            0x85f6	                           test esi, esi	       315	channel.c	FUNCTION_9	IF_1
0x400c0a9	            0x7421	                            je 0x400c0cc	       315	channel.c	FUNCTION_9	IF_1
0x400c0ab	    0x8b0d00000000	            mov ecx, dword [0x0400c0b1] 	       382	channel.c	FUNCTION_13	IF_1
0x400c0b1	            0x85c9	                           test ecx, ecx	       382	channel.c	FUNCTION_13	IF_1
0x400c0b3	            0x75ce	                           jne 0x400c083	       382	channel.c	FUNCTION_13	IF_1
0x400c0b5	    0x8b1500000000	            mov edx, dword [0x0400c0bb] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400c0bb	            0x85d2	                           test edx, edx	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400c0bd	            0x753d	                           jne 0x400c0fc	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400c0bf	    0x41c786700400	              mov dword [r14 + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x400c0ca	            0xebb7	                           jmp 0x400c083	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x400c0cc	    0x4983be900400	              cmp qword [r14 + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400c0d4	            0x75ad	                           jne 0x400c083	       319	channel.c	FUNCTION_9	IF_2
0x400c0d6	    0x4983be280400	              cmp qword [r14 + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400c0de	            0x75a3	                           jne 0x400c083	       323	channel.c	FUNCTION_9	IF_3
0x400c0e0	          0x4c89f7	                            mov rdi, r14	       323	channel.c	FUNCTION_9	IF_3
0x400c0e3	      0xe8e842ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400c0e8	            0x85c0	                           test eax, eax	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400c0ea	            0x74bf	                            je 0x400c0ab	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400c0ec	            0xeb95	                           jmp 0x400c083	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400c0ee	            0x6690	                                     nop	       403	channel.c	FUNCTION_14	IF_1	CALL_1
0x400c0f0	    0x488905000000	            mov qword [0x0400c0f7], rax 	      5072	channel.c	FUNCTION_110	IF_2
0x400c0f7	      0xe91cffffff	                           jmp 0x400c018	      5072	channel.c	FUNCTION_110	IF_2
0x400c0fc	          0x4c89f7	                            mov rdi, r14	      5072	channel.c	FUNCTION_110	IF_2
0x400c0ff	      0xe85cccffff	           call sym.channel_free.part.12	      5072	channel.c	FUNCTION_110	IF_2
0x400c104	      0xe97affffff	                           jmp 0x400c083	      5072	channel.c	FUNCTION_110	IF_2
has_any_channel	WHILE,0:FOR,0:CALL,0:IF,0:ELSE,0:functions,0:DO,0:SWITCH,0	4
0x40037d0	            0x31c0	                            xor eax, eax	       299	channel.c	FUNCTION_8
0x40037d2	    0x48833d000000	               cmp qword [0x040037da], 0	       299	channel.c	FUNCTION_8
0x40037da	           0xf95c0	                                setne al	       299	channel.c	FUNCTION_8
0x40037dd	              0xc3	                                     ret	       300	channel.c	FUNCTION_8
channel_any_readahead	WHILE,1:FOR,0:CALL,1:IF,2:ELSE,1:functions,0:DO,0:SWITCH,0	39
0x400a6b0	    0x488b0d000000	            mov rcx, qword [0x0400a6b7] 	      4311	channel.c	FUNCTION_96
0x400a6b7	          0x4885c9	                           test rcx, rcx	      4314	channel.c	FUNCTION_96	WHILE_1
0x400a6ba	            0x7461	                            je 0x400a71d	      4314	channel.c	FUNCTION_96	WHILE_1
0x400a6bc	         0xf1f4000	                         nop dword [rax]	      4314	channel.c	FUNCTION_96	WHILE_1
0x400a6c0	            0x31f6	                            xor esi, esi	      4323	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x400a6c2	            0x89f0	                            mov eax, esi	      2737	channel.c	FUNCTION_64
0x400a6c4	          0x4889c2	                            mov rdx, rax	      2737	channel.c	FUNCTION_64
0x400a6c7	        0x48c1e008	                              shl rax, 8	      2737	channel.c	FUNCTION_64
0x400a6cb	        0x48c1e204	                              shl rdx, 4	      2737	channel.c	FUNCTION_64
0x400a6cf	          0x4801d0	                            add rax, rdx	      2737	channel.c	FUNCTION_64
0x400a6d2	          0x4801c8	                            add rax, rcx	      2737	channel.c	FUNCTION_64
0x400a6d5	          0x8b7820	            mov edi, dword [rax + 0x20] 	      2739	channel.c	FUNCTION_64	IF_1
0x400a6d8	          0x8d57fe	                      lea edx, [rdi - 2]	      2739	channel.c	FUNCTION_64	IF_1
0x400a6db	          0x83fa01	                              cmp edx, 1	      2739	channel.c	FUNCTION_64	IF_1
0x400a6de	            0x7620	                           jbe 0x400a700	      2739	channel.c	FUNCTION_64	IF_1
0x400a6e0	      0x4883784000	               cmp qword [rax + 0x40], 0	      2746	channel.c	FUNCTION_64	CALL_1
0x400a6e5	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_64	CALL_1
0x400a6e8	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_64	CALL_1
0x400a6eb	            0x85c0	                           test eax, eax	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400a6ed	            0x7520	                           jne 0x400a70f	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400a6ef	          0x83fe01	                              cmp esi, 1	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400a6f2	            0x7624	                           jbe 0x400a718	      4318	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400a6f4	          0x488b09	                    mov rcx, qword [rcx]	      4322	channel.c	FUNCTION_96	WHILE_1	ELSE_1
0x400a6f7	          0x4885c9	                           test rcx, rcx	      4314	channel.c	FUNCTION_96	WHILE_1
0x400a6fa	            0x75c4	                           jne 0x400a6c0	      4314	channel.c	FUNCTION_96	WHILE_1
0x400a6fc	            0xf3c3	                                     ret	      4314	channel.c	FUNCTION_96	WHILE_1
0x400a6fe	            0x6690	                                     nop	      4314	channel.c	FUNCTION_96	WHILE_1
0x400a700	      0x4883785800	               cmp qword [rax + 0x58], 0	      2744	channel.c	FUNCTION_64	IF_1
0x400a705	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_64	IF_1
0x400a708	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_64	IF_1
0x400a70b	            0x85c0	                           test eax, eax	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400a70d	            0x74e0	                            je 0x400a6ef	      4316	channel.c	FUNCTION_96	WHILE_1	IF_1	CALL_1
0x400a70f	      0xb801000000	                              mov eax, 1	      4317	channel.c	FUNCTION_96	WHILE_1	IF_1
0x400a714	              0xc3	                                     ret	      4327	channel.c	FUNCTION_96
0x400a715	           0xf1f00	                         nop dword [rax]	      4327	channel.c	FUNCTION_96
0x400a718	          0x83c601	                              add esi, 1	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400a71b	            0xeba5	                           jmp 0x400a6c2	      4319	channel.c	FUNCTION_96	WHILE_1	IF_2
0x400a71d	            0x31c0	                            xor eax, eax	      4326	channel.c	FUNCTION_96
0x400a71f	              0xc3	                                     ret	      4326	channel.c	FUNCTION_96
channel_fill	WHILE,0:FOR,0:CALL,8:IF,3:ELSE,0:functions,0:DO,0:SWITCH,0	80
0x4001d40	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      1644	channel.c	FUNCTION_46
0x4001d43	          0x4889c2	                            mov rdx, rax	      1644	channel.c	FUNCTION_46
0x4001d46	        0x48c1e008	                              shl rax, 8	      1644	channel.c	FUNCTION_46
0x4001d4a	        0x48c1e204	                              shl rdx, 4	      1644	channel.c	FUNCTION_46
0x4001d4e	          0x4801d0	                            add rax, rdx	      1644	channel.c	FUNCTION_46
0x4001d51	        0x48034720	             add rax, qword [rdi + 0x20]	      1644	channel.c	FUNCTION_46
0x4001d55	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1644	channel.c	FUNCTION_46
0x4001d59	          0x4885d2	                           test rdx, rdx	      1647	channel.c	FUNCTION_46	IF_1
0x4001d5c	     0xf84de000000	                            je 0x4001e40	      1647	channel.c	FUNCTION_46	IF_1
0x4001d62	            0x4156	                                push r14	      1866	channel.c	FUNCTION_51
0x4001d64	            0x4155	                                push r13	      1866	channel.c	FUNCTION_51
0x4001d66	            0x4154	                                push r12	      1866	channel.c	FUNCTION_51
0x4001d68	              0x55	                                push rbp	      1866	channel.c	FUNCTION_51
0x4001d69	              0x53	                                push rbx	      1866	channel.c	FUNCTION_51
0x4001d6a	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1651	channel.c	FUNCTION_46
0x4001d6e	          0x4c8b22	                    mov r12, qword [rdx]	      1650	channel.c	FUNCTION_46
0x4001d71	        0x48894840	             mov qword [rax + 0x40], rcx	      1651	channel.c	FUNCTION_46
0x4001d75	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4001d79	          0x4885c9	                           test rcx, rcx	      1652	channel.c	FUNCTION_46	IF_2
0x4001d7c	     0xf84ae000000	                            je 0x4001e30	      1652	channel.c	FUNCTION_46	IF_2
0x4001d82	    0x48c741180000	               mov qword [rcx + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4001d8a	          0x4889fb	                            mov rbx, rdi	      1655	channel.c	FUNCTION_46	ELSE_1
0x4001d8d	          0x4889d7	                            mov rdi, rdx	      1656	channel.c	FUNCTION_46	CALL_1
0x4001d90	      0xe800000000	                          call 0x4001d95	      1656	channel.c	FUNCTION_46	CALL_1
0x4001d95	          0x4d85e4	                           test r12, r12	      1874	channel.c	FUNCTION_51	IF_1
0x4001d98	     0xf8482000000	                            je 0x4001e20	      1874	channel.c	FUNCTION_51	IF_1
0x4001d9e	          0x488b3b	                    mov rdi, qword [rbx]	      1877	channel.c	FUNCTION_51
0x4001da1	        0x488b6b08	                mov rbp, qword [rbx + 8]	      1877	channel.c	FUNCTION_51
0x4001da5	          0x4829fd	                            sub rbp, rdi	      1877	channel.c	FUNCTION_51
0x4001da8	            0x85ed	                           test ebp, ebp	      1878	channel.c	FUNCTION_51	IF_2
0x4001daa	            0x7e64	                           jle 0x4001e10	      1878	channel.c	FUNCTION_51	IF_2
0x4001dac	          0x4c89e7	                            mov rdi, r12	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001daf	      0xe800000000	                          call 0x4001db4	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001db4	        0x8d7c2801	                lea edi, [rax + rbp + 1]	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4001db8	          0x4989c6	                            mov r14, rax	      1881	channel.c	FUNCTION_51	IF_2	CALL_2
0x4001dbb	      0xe800000000	                          call 0x4001dc0	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4001dc0	          0x4885c0	                           test rax, rax	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x4001dc3	          0x4989c5	                            mov r13, rax	      1882	channel.c	FUNCTION_51	IF_2	CALL_3
0x4001dc6	            0x7450	                            je 0x4001e18	      1883	channel.c	FUNCTION_51	IF_2	IF_3
0x4001dc8	          0x488b33	                    mov rsi, qword [rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x4001dcb	          0x4863ed	                         movsxd rbp, ebp	      1888	channel.c	FUNCTION_51	IF_2	CALL_5
0x4001dce	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4001dd1	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_136	CALL_3
0x4001dd4	      0xe800000000	                          call 0x4001dd9	        59	string3.h	FUNCTION_136	CALL_3
0x4001dd9	        0x418d5601	                      lea edx, [r14 + 1]	        59	string3.h	FUNCTION_136	CALL_3
0x4001ddd	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	        59	string3.h	FUNCTION_136	CALL_3
0x4001de2	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_136	CALL_3
0x4001de5	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_136	CALL_3
0x4001de8	      0xe800000000	                          call 0x4001ded	        59	string3.h	FUNCTION_136	CALL_3
0x4001ded	          0x4c89e7	                            mov rdi, r12	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4001df0	      0xe800000000	                          call 0x4001df5	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4001df5	          0x488b3b	                    mov rdi, qword [rbx]	      1890	channel.c	FUNCTION_51	IF_2	CALL_7
0x4001df8	      0xe800000000	                          call 0x4001dfd	      1894	channel.c	FUNCTION_51	CALL_8
0x4001dfd	          0x4c892b	                    mov qword [rbx], r13	      1895	channel.c	FUNCTION_51
0x4001e00	      0xb801000000	                              mov eax, 1	      1896	channel.c	FUNCTION_51
0x4001e05	              0x5b	                                 pop rbx	      1897	channel.c	FUNCTION_51
0x4001e06	              0x5d	                                 pop rbp	      1897	channel.c	FUNCTION_51
0x4001e07	            0x415c	                                 pop r12	      1897	channel.c	FUNCTION_51
0x4001e09	            0x415d	                                 pop r13	      1897	channel.c	FUNCTION_51
0x4001e0b	            0x415e	                                 pop r14	      1897	channel.c	FUNCTION_51
0x4001e0d	              0xc3	                                     ret	      1897	channel.c	FUNCTION_51
0x4001e0e	            0x6690	                                     nop	      1897	channel.c	FUNCTION_51
0x4001e10	          0x4d89e5	                            mov r13, r12	      1897	channel.c	FUNCTION_51
0x4001e13	            0xebe3	                           jmp 0x4001df8	      1897	channel.c	FUNCTION_51
0x4001e15	           0xf1f00	                         nop dword [rax]	      1897	channel.c	FUNCTION_51
0x4001e18	          0x4c89e7	                            mov rdi, r12	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001e1b	      0xe800000000	                          call 0x4001e20	      1885	channel.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001e20	              0x5b	                                 pop rbx	      1897	channel.c	FUNCTION_51
0x4001e21	            0x31c0	                            xor eax, eax	      1886	channel.c	FUNCTION_51	IF_2	IF_3
0x4001e23	              0x5d	                                 pop rbp	      1897	channel.c	FUNCTION_51
0x4001e24	            0x415c	                                 pop r12	      1897	channel.c	FUNCTION_51
0x4001e26	            0x415d	                                 pop r13	      1897	channel.c	FUNCTION_51
0x4001e28	            0x415e	                                 pop r14	      1897	channel.c	FUNCTION_51
0x4001e2a	              0xc3	                                     ret	      1897	channel.c	FUNCTION_51
0x4001e2b	       0xf1f440000	                   nop dword [rax + rax]	      1897	channel.c	FUNCTION_51
0x4001e30	    0x48c740480000	               mov qword [rax + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4001e38	      0xe94dffffff	                           jmp 0x4001d8a	      1653	channel.c	FUNCTION_46	IF_2
0x4001e3d	           0xf1f00	                         nop dword [rax]	      1653	channel.c	FUNCTION_46	IF_2
0x4001e40	            0x31c0	                            xor eax, eax	      1875	channel.c	FUNCTION_51	IF_1
0x4001e42	              0xc3	                                     ret	      1897	channel.c	FUNCTION_51
channel_set_nonblock	WHILE,0:FOR,0:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	17
0x4006f40	            0x89f6	                            mov esi, esi	      3674	channel.c	FUNCTION_86
0x4006f42	              0x53	                                push rbx	      3672	channel.c	FUNCTION_86
0x4006f43	          0x4889f3	                            mov rbx, rsi	      3674	channel.c	FUNCTION_86
0x4006f46	        0x48c1e608	                              shl rsi, 8	      3674	channel.c	FUNCTION_86
0x4006f4a	        0x48c1e304	                              shl rbx, 4	      3674	channel.c	FUNCTION_86
0x4006f4e	          0x4801de	                            add rsi, rbx	      3674	channel.c	FUNCTION_86
0x4006f51	        0x488d1c37	                    lea rbx, [rdi + rsi]	      3674	channel.c	FUNCTION_86
0x4006f55	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	      3674	channel.c	FUNCTION_86
0x4006f58	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3676	channel.c	FUNCTION_86	IF_1
0x4006f5b	            0x741b	                            je 0x4006f78	      3676	channel.c	FUNCTION_86	IF_1
0x4006f5d	      0xba00080000	                          mov edx, 0x800	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4006f62	      0xbe04000000	                              mov esi, 4	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4006f67	            0x31c0	                            xor eax, eax	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4006f69	      0xe800000000	                          call 0x4006f6e	      3683	channel.c	FUNCTION_86	IF_1	CALL_2
0x4006f6e	    0xc78394000000	               mov dword [rbx + 0x94], 1	      3685	channel.c	FUNCTION_86	IF_1
0x4006f78	              0x5b	                                 pop rbx	      3687	channel.c	FUNCTION_86
0x4006f79	              0xc3	                                     ret	      3687	channel.c	FUNCTION_86
channel_any_keep_open	WHILE,0:FOR,1:CALL,0:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	20
0x4006ef0	    0x488b15000000	            mov rdx, qword [0x04006ef7] 	      3659	channel.c	FUNCTION_85	FOR_1
0x4006ef7	          0x4885d2	                           test rdx, rdx	      3659	channel.c	FUNCTION_85	FOR_1
0x4006efa	            0x7432	                            je 0x4006f2e	      3659	channel.c	FUNCTION_85	FOR_1
0x4006efc	    0x8b82a4040000	           mov eax, dword [rdx + 0x4a4] 	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f02	            0x85c0	                           test eax, eax	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f04	            0x7414	                            je 0x4006f1a	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f06	            0xeb20	                           jmp 0x4006f28	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f08	     0xf1f84000000	                   nop dword [rax + rax]	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f10	    0x8b8aa4040000	           mov ecx, dword [rdx + 0x4a4] 	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f16	            0x85c9	                           test ecx, ecx	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f18	            0x750e	                           jne 0x4006f28	      3660	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f1a	          0x488b12	                    mov rdx, qword [rdx]	      3659	channel.c	FUNCTION_85	FOR_1
0x4006f1d	          0x4885d2	                           test rdx, rdx	      3659	channel.c	FUNCTION_85	FOR_1
0x4006f20	            0x75ee	                           jne 0x4006f10	      3659	channel.c	FUNCTION_85	FOR_1
0x4006f22	            0xf3c3	                                     ret	      3659	channel.c	FUNCTION_85	FOR_1
0x4006f24	         0xf1f4000	                         nop dword [rax]	      3659	channel.c	FUNCTION_85	FOR_1
0x4006f28	      0xb801000000	                              mov eax, 1	      3661	channel.c	FUNCTION_85	FOR_1	IF_1
0x4006f2d	              0xc3	                                     ret	      3663	channel.c	FUNCTION_85
0x4006f2e	            0x31c0	                            xor eax, eax	      3662	channel.c	FUNCTION_85
0x4006f30	              0xc3	                                     ret	      3662	channel.c	FUNCTION_85
invoke_one_time_callback	WHILE,0:FOR,0:CALL,5:IF,0:ELSE,0:functions,0:DO,0:SWITCH,0	78
0x40023c0	            0x4156	                                push r14	      2333	channel.c	FUNCTION_58
0x40023c2	            0x4155	                                push r13	      2333	channel.c	FUNCTION_58
0x40023c4	          0x4989fd	                            mov r13, rdi	      2333	channel.c	FUNCTION_58
0x40023c7	            0x4154	                                push r12	      2333	channel.c	FUNCTION_58
0x40023c9	              0x55	                                push rbp	      2333	channel.c	FUNCTION_58
0x40023ca	          0x4989f4	                            mov r12, rsi	      2333	channel.c	FUNCTION_58
0x40023cd	              0x53	                                push rbx	      2333	channel.c	FUNCTION_58
0x40023ce	          0x4889d3	                            mov rbx, rdx	      2333	channel.c	FUNCTION_58
0x40023d1	      0xbe00000000	                              mov esi, 0	      2334	channel.c	FUNCTION_58	CALL_1
0x40023d6	          0x4889cd	                            mov rbp, rcx	      2333	channel.c	FUNCTION_58
0x40023d9	        0x4883ec30	                           sub rsp, 0x30	      2333	channel.c	FUNCTION_58
0x40023dd	          0x488b12	                    mov rdx, qword [rdx]	      2334	channel.c	FUNCTION_58	CALL_1
0x40023e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2333	channel.c	FUNCTION_58
0x40023e9	      0x4889442428	             mov qword [rsp + 0x28], rax	      2333	channel.c	FUNCTION_58
0x40023ee	            0x31c0	                            xor eax, eax	      2333	channel.c	FUNCTION_58
0x40023f0	      0xe800000000	                          call 0x40023f5	      2334	channel.c	FUNCTION_58	CALL_1
0x40023f5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2334	channel.c	FUNCTION_58	CALL_1
0x40023f9	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2058	channel.c	FUNCTION_53	IF_1
0x40023fd	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_53	IF_1
0x4002400	     0xf84ba000000	                            je 0x40024c0	      2057	channel.c	FUNCTION_53	IF_1
0x4002406	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_53	ELSE_1
0x400240a	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x400240e	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x4002411	     0xf84c1000000	                            je 0x40024d8	      2061	channel.c	FUNCTION_53	IF_2
0x4002417	        0x48894220	             mov qword [rdx + 0x20], rax	      2064	channel.c	FUNCTION_53	ELSE_2
0x400241b	    0x8b0500000000	            mov eax, dword [0x04002421] 	      1594	channel.c	FUNCTION_43	IF_1
0x4002421	        0x4c8b7308	                mov r14, qword [rbx + 8]	      2339	channel.c	FUNCTION_58	CALL_3
0x4002425	          0x4c8b23	                    mov r12, qword [rbx]	      2339	channel.c	FUNCTION_58	CALL_3
0x4002428	            0x85c0	                           test eax, eax	      1594	channel.c	FUNCTION_43	IF_1
0x400242a	            0x750a	                           jne 0x4002436	      1594	channel.c	FUNCTION_43	IF_1
0x400242c	      0xbf00000000	                              mov edi, 0	      1595	channel.c	FUNCTION_43	CALL_1
0x4002431	      0xe800000000	                          call 0x4002436	      1595	channel.c	FUNCTION_43	CALL_1
0x4002436	          0x4c89e7	                            mov rdi, r12	      1600	channel.c	FUNCTION_43	CALL_3
0x4002439	    0xc745000a0000	                    mov dword [rbp], 0xa	      1597	channel.c	FUNCTION_43
0x4002440	        0x4c896d08	                mov qword [rbp + 8], r13	      1598	channel.c	FUNCTION_43
0x4002444	      0xe800000000	                          call 0x4002449	      1600	channel.c	FUNCTION_43	CALL_3
0x4002449	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x400244b	            0x4156	                                push r14	      1600	channel.c	FUNCTION_43	CALL_3
0x400244d	          0x4531c9	                            xor r9d, r9d	      1600	channel.c	FUNCTION_43	CALL_3
0x4002450	            0x6a01	                                  push 1	      1600	channel.c	FUNCTION_43	CALL_3
0x4002452	          0x4989e8	                             mov r8, rbp	      1600	channel.c	FUNCTION_43	CALL_3
0x4002455	      0xb902000000	                              mov ecx, 2	      1600	channel.c	FUNCTION_43	CALL_3
0x400245a	            0x89c6	                            mov esi, eax	      1600	channel.c	FUNCTION_43	CALL_3
0x400245c	          0x4c89e7	                            mov rdi, r12	      1600	channel.c	FUNCTION_43	CALL_3
0x400245f	      0x488d542424	                   lea rdx, [rsp + 0x24]	      1600	channel.c	FUNCTION_43	CALL_3
0x4002464	              0x52	                                push rdx	      1600	channel.c	FUNCTION_43	CALL_3
0x4002465	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4002467	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_43	CALL_3
0x4002469	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1600	channel.c	FUNCTION_43	CALL_3
0x400246e	      0xe800000000	                          call 0x4002473	      1600	channel.c	FUNCTION_43	CALL_3
0x4002473	        0x4883c430	                           add rsp, 0x30	      1602	channel.c	FUNCTION_43	CALL_4
0x4002477	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1602	channel.c	FUNCTION_43	CALL_4
0x400247c	      0xe800000000	                          call 0x4002481	      1602	channel.c	FUNCTION_43	CALL_4
0x4002481	        0x488b7308	                mov rsi, qword [rbx + 8]	      2340	channel.c	FUNCTION_58	CALL_4
0x4002485	          0x488b3b	                    mov rdi, qword [rbx]	      2340	channel.c	FUNCTION_58	CALL_4
0x4002488	    0xc70500000000	               mov dword [0x04002492], 1	      1603	channel.c	FUNCTION_43
0x4002492	      0xe800000000	                          call 0x4002497	      2340	channel.c	FUNCTION_58	CALL_4
0x4002497	          0x4889df	                            mov rdi, rbx	      2341	channel.c	FUNCTION_58	CALL_5
0x400249a	      0xe800000000	                          call 0x400249f	      2341	channel.c	FUNCTION_58	CALL_5
0x400249f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2342	channel.c	FUNCTION_58
0x40024a4	    0x644833042528	                xor rax, qword fs:[0x28]	      2342	channel.c	FUNCTION_58
0x40024ad	            0x7533	                           jne 0x40024e2	      2342	channel.c	FUNCTION_58
0x40024af	        0x4883c430	                           add rsp, 0x30	      2342	channel.c	FUNCTION_58
0x40024b3	              0x5b	                                 pop rbx	      2342	channel.c	FUNCTION_58
0x40024b4	              0x5d	                                 pop rbp	      2342	channel.c	FUNCTION_58
0x40024b5	            0x415c	                                 pop r12	      2342	channel.c	FUNCTION_58
0x40024b7	            0x415d	                                 pop r13	      2342	channel.c	FUNCTION_58
0x40024b9	            0x415e	                                 pop r14	      2342	channel.c	FUNCTION_58
0x40024bb	              0xc3	                                     ret	      2342	channel.c	FUNCTION_58
0x40024bc	         0xf1f4000	                         nop dword [rax]	      2342	channel.c	FUNCTION_58
0x40024c0	      0x4989542418	             mov qword [r12 + 0x18], rdx	      2058	channel.c	FUNCTION_53	IF_1
0x40024c5	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x40024c9	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x40024cc	     0xf8545ffffff	                           jne 0x4002417	      2061	channel.c	FUNCTION_53	IF_2
0x40024d2	    0x660f1f440000	                    nop word [rax + rax]	      2061	channel.c	FUNCTION_53	IF_2
0x40024d8	      0x4989442420	             mov qword [r12 + 0x20], rax	      2062	channel.c	FUNCTION_53	IF_2
0x40024dd	      0xe939ffffff	                           jmp 0x400241b	      2062	channel.c	FUNCTION_53	IF_2
0x40024e2	      0xe800000000	                          call 0x40024e7	      2342	channel.c	FUNCTION_58
job_any_running	WHILE,0:FOR,1:CALL,1:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	37
0x400b900	    0x488b35000000	            mov rsi, qword [0x0400b907] 	      5145	channel.c	FUNCTION_117	FOR_1
0x400b907	          0x4885f6	                           test rsi, rsi	      5145	channel.c	FUNCTION_117	FOR_1
0x400b90a	            0x745c	                            je 0x400b968	      5145	channel.c	FUNCTION_117	FOR_1
0x400b90c	         0xf1f4000	                         nop dword [rax]	      5145	channel.c	FUNCTION_117	FOR_1
0x400b910	        0x837e2801	               cmp dword [rsi + 0x28], 1	      5104	channel.c	FUNCTION_113
0x400b914	            0x745a	                            je 0x400b970	      5104	channel.c	FUNCTION_113
0x400b916	        0x488b7e60	            mov rdi, qword [rsi + 0x60] 	      5104	channel.c	FUNCTION_113
0x400b91a	          0x4885ff	                           test rdi, rdi	      5113	channel.c	FUNCTION_114	CALL_1
0x400b91d	            0x7441	                            je 0x400b960	      5113	channel.c	FUNCTION_114	CALL_1
0x400b91f	    0x8b87b0040000	           mov eax, dword [rdi + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400b925	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x400b927	            0x740a	                            je 0x400b933	       315	channel.c	FUNCTION_9	IF_1
0x400b929	    0x4883bfa80400	              cmp qword [rdi + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400b931	            0x742d	                            je 0x400b960	       315	channel.c	FUNCTION_9	IF_1
0x400b933	    0x4883bf900400	              cmp qword [rdi + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400b93b	            0x740b	                            je 0x400b948	       319	channel.c	FUNCTION_9	IF_2
0x400b93d	      0xb801000000	                              mov eax, 1	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x400b942	              0xc3	                                     ret	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x400b943	       0xf1f440000	                   nop dword [rax + rax]	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x400b948	    0x4883bf280400	              cmp qword [rdi + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400b950	            0x75eb	                           jne 0x400b93d	       323	channel.c	FUNCTION_9	IF_3
0x400b952	      0xe8794affff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400b957	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x400b959	            0x75e2	                           jne 0x400b93d	      5113	channel.c	FUNCTION_114	CALL_1
0x400b95b	       0xf1f440000	                   nop dword [rax + rax]	      5113	channel.c	FUNCTION_114	CALL_1
0x400b960	          0x488b36	                    mov rsi, qword [rsi]	      5145	channel.c	FUNCTION_117	FOR_1
0x400b963	          0x4885f6	                           test rsi, rsi	      5145	channel.c	FUNCTION_117	FOR_1
0x400b966	            0x75a8	                           jne 0x400b910	      5145	channel.c	FUNCTION_117	FOR_1
0x400b968	            0x31c0	                            xor eax, eax	      5148	channel.c	FUNCTION_117
0x400b96a	              0xc3	                                     ret	      5148	channel.c	FUNCTION_117
0x400b96b	       0xf1f440000	                   nop dword [rax + rax]	      5148	channel.c	FUNCTION_117
0x400b970	      0x48837e3000	               cmp qword [rsi + 0x30], 0	      5104	channel.c	FUNCTION_113
0x400b975	            0x75c6	                           jne 0x400b93d	      5104	channel.c	FUNCTION_113
0x400b977	      0x48837e4000	               cmp qword [rsi + 0x40], 0	      5104	channel.c	FUNCTION_113
0x400b97c	            0x7498	                            je 0x400b916	      5104	channel.c	FUNCTION_113
0x400b97e	      0xb801000000	                              mov eax, 1	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
0x400b983	              0xc3	                                     ret	      5147	channel.c	FUNCTION_117	FOR_1	IF_1
channel_clear_one	WHILE,4:FOR,0:CALL,10:IF,0:ELSE,0:functions,0:DO,0:SWITCH,0	151
0x4001b10	            0x4157	                                push r15	      2977	channel.c	FUNCTION_71
0x4001b12	            0x4156	                                push r14	      2977	channel.c	FUNCTION_71
0x4001b14	            0x4155	                                push r13	      2977	channel.c	FUNCTION_71
0x4001b16	            0x4154	                                push r12	      2977	channel.c	FUNCTION_71
0x4001b18	          0x4989fc	                            mov r12, rdi	      2977	channel.c	FUNCTION_71
0x4001b1b	              0x55	                                push rbp	      2977	channel.c	FUNCTION_71
0x4001b1c	            0x89f5	                            mov ebp, esi	      2979	channel.c	FUNCTION_71
0x4001b1e	              0x53	                                push rbx	      2977	channel.c	FUNCTION_71
0x4001b1f	          0x4989ef	                            mov r15, rbp	      2979	channel.c	FUNCTION_71
0x4001b22	          0x4889e8	                            mov rax, rbp	      2979	channel.c	FUNCTION_71
0x4001b25	        0x49c1e704	                              shl r15, 4	      2979	channel.c	FUNCTION_71
0x4001b29	        0x48c1e008	                              shl rax, 8	      2979	channel.c	FUNCTION_71
0x4001b2d	        0x4883ec08	                              sub rsp, 8	      2977	channel.c	FUNCTION_71
0x4001b31	          0x4901c7	                            add r15, rax	      2979	channel.c	FUNCTION_71
0x4001b34	      0x4e8d6c3f50	            lea r13, [rdi + r15 + 0x50] 	      2979	channel.c	FUNCTION_71
0x4001b39	    0x4e8db43fc000	            lea r14, [rdi + r15 + 0xc0] 	      2980	channel.c	FUNCTION_71
0x4001b41	          0x4901ff	                            add r15, rdi	      1615	channel.c	FUNCTION_44
0x4001b44	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	      1615	channel.c	FUNCTION_44
0x4001b48	          0x4885ff	                           test rdi, rdi	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4001b4b	            0x7521	                           jne 0x4001b6e	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4001b4d	            0xeb41	                           jmp 0x4001b90	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4001b4f	              0x90	                                     nop	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4001b50	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4001b58	      0xe800000000	                          call 0x4001b5d	      1656	channel.c	FUNCTION_46	CALL_1
0x4001b5d	          0x4889df	                            mov rdi, rbx	      2983	channel.c	FUNCTION_71	CALL_3
0x4001b60	      0xe800000000	                          call 0x4001b65	      2983	channel.c	FUNCTION_71	CALL_3
0x4001b65	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	      1615	channel.c	FUNCTION_44
0x4001b69	          0x4885ff	                           test rdi, rdi	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4001b6c	            0x7422	                            je 0x4001b90	      2982	channel.c	FUNCTION_71	WHILE_1	CALL_1
0x4001b6e	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x4001b72	          0x488b1f	                    mov rbx, qword [rdi]	      1650	channel.c	FUNCTION_46
0x4001b75	        0x49894740	             mov qword [r15 + 0x40], rax	      1651	channel.c	FUNCTION_46
0x4001b79	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4001b7d	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x4001b80	            0x75ce	                           jne 0x4001b50	      1652	channel.c	FUNCTION_46	IF_2
0x4001b82	    0x49c747480000	               mov qword [r15 + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4001b8a	            0xebcc	                           jmp 0x4001b58	      1653	channel.c	FUNCTION_46	IF_2
0x4001b8c	         0xf1f4000	                         nop dword [rax]	      1653	channel.c	FUNCTION_46	IF_2
0x4001b90	          0x4989ef	                            mov r15, rbp	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001b93	          0x4889e8	                            mov rax, rbp	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001b96	        0x49c1e704	                              shl r15, 4	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001b9a	        0x48c1e008	                              shl rax, 8	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001b9e	          0x4901c7	                            add r15, rax	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001ba1	          0x4d01e7	                            add r15, r12	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001ba4	    0x498b9fd80000	            mov rbx, qword [r15 + 0xd8] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001bab	          0x4885db	                           test rbx, rbx	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001bae	            0x7539	                           jne 0x4001be9	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001bb0	            0xeb5e	                           jmp 0x4001c10	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001bb2	    0x660f1f440000	                    nop word [rax + rax]	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001bb8	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_53	ELSE_1
0x4001bbc	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x4001bc0	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x4001bc3	            0x7443	                            je 0x4001c08	      2061	channel.c	FUNCTION_53	IF_2
0x4001bc5	        0x48894220	             mov qword [rdx + 0x20], rax	      2064	channel.c	FUNCTION_53	ELSE_2
0x4001bc9	        0x488b7308	                mov rsi, qword [rbx + 8]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4001bcd	          0x488b3b	                    mov rdi, qword [rbx]	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4001bd0	      0xe800000000	                          call 0x4001bd5	      2990	channel.c	FUNCTION_71	WHILE_2	CALL_5
0x4001bd5	          0x4889df	                            mov rdi, rbx	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x4001bd8	      0xe800000000	                          call 0x4001bdd	      2991	channel.c	FUNCTION_71	WHILE_2	CALL_6
0x4001bdd	    0x498b9fd80000	            mov rbx, qword [r15 + 0xd8] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001be4	          0x4885db	                           test rbx, rbx	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001be7	            0x7427	                            je 0x4001c10	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001be9	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2985	channel.c	FUNCTION_71	WHILE_2
0x4001bed	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2058	channel.c	FUNCTION_53	IF_1
0x4001bf1	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_53	IF_1
0x4001bf4	            0x75c2	                           jne 0x4001bb8	      2057	channel.c	FUNCTION_53	IF_1
0x4001bf6	        0x49895618	             mov qword [r14 + 0x18], rdx	      2058	channel.c	FUNCTION_53	IF_1
0x4001bfa	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2061	channel.c	FUNCTION_53	IF_2
0x4001bfe	          0x4885d2	                           test rdx, rdx	      2061	channel.c	FUNCTION_53	IF_2
0x4001c01	            0x75c2	                           jne 0x4001bc5	      2061	channel.c	FUNCTION_53	IF_2
0x4001c03	       0xf1f440000	                   nop dword [rax + rax]	      2061	channel.c	FUNCTION_53	IF_2
0x4001c08	        0x49894620	             mov qword [r14 + 0x20], rax	      2062	channel.c	FUNCTION_53	IF_2
0x4001c0c	            0xebbb	                           jmp 0x4001bc9	      2062	channel.c	FUNCTION_53	IF_2
0x4001c0e	            0x6690	                                     nop	      2062	channel.c	FUNCTION_53	IF_2
0x4001c10	          0x4889eb	                            mov rbx, rbp	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c13	          0x4889e8	                            mov rax, rbp	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c16	        0x48c1e008	                              shl rax, 8	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c1a	        0x48c1e304	                              shl rbx, 4	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c1e	          0x4801c3	                            add rbx, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c21	          0x4c01e3	                            add rbx, r12	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c24	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c28	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c2b	            0x7522	                           jne 0x4001c4f	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c2d	            0xeb61	                           jmp 0x4001c90	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c2f	              0x90	                                     nop	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c30	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x4001c34	        0x488b5708	                mov rdx, qword [rdi + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c38	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c3b	            0x743b	                            je 0x4001c78	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c3d	        0x48894210	             mov qword [rdx + 0x10], rax	      2081	channel.c	FUNCTION_54	ELSE_2
0x4001c41	      0xe800000000	                          call 0x4001c46	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4001c46	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c4a	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c4d	            0x7441	                            je 0x4001c90	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c4f	          0x488b38	                    mov rdi, qword [rax]	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4001c52	      0xe800000000	                          call 0x4001c57	      2996	channel.c	FUNCTION_71	WHILE_3	CALL_7
0x4001c57	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2997	channel.c	FUNCTION_71	WHILE_3	CALL_8
0x4001c5b	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001c5f	        0x488b5708	                mov rdx, qword [rdi + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001c63	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001c66	            0x75c8	                           jne 0x4001c30	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001c68	        0x49895508	                mov qword [r13 + 8], rdx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x4001c6c	        0x488b5708	                mov rdx, qword [rdi + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c70	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c73	            0x75c8	                           jne 0x4001c3d	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c75	           0xf1f00	                         nop dword [rax]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c78	        0x49894510	             mov qword [r13 + 0x10], rax	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x4001c7c	      0xe800000000	                          call 0x4001c81	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x4001c81	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c85	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c88	            0x75c5	                           jne 0x4001c4f	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c8a	    0x660f1f440000	                    nop word [rax + rax]	      2994	channel.c	FUNCTION_71	WHILE_3
0x4001c90	          0x4989ed	                            mov r13, rbp	      3000	channel.c	FUNCTION_71	CALL_9
0x4001c93	        0x48c1e508	                              shl rbp, 8	      3000	channel.c	FUNCTION_71	CALL_9
0x4001c97	        0x49c1e504	                              shl r13, 4	      3000	channel.c	FUNCTION_71	CALL_9
0x4001c9b	          0x4901ed	                            add r13, rbp	      3000	channel.c	FUNCTION_71	CALL_9
0x4001c9e	        0x4b8d2c2c	                    lea rbp, [r12 + r13]	      3000	channel.c	FUNCTION_71	CALL_9
0x4001ca2	    0x4f8da42c9800	            lea r12, [r12 + r13 + 0x98] 	      3000	channel.c	FUNCTION_71	CALL_9
0x4001caa	    0x488bb5f00000	            mov rsi, qword [rbp + 0xf0] 	      3000	channel.c	FUNCTION_71	CALL_9
0x4001cb1	    0x488bbde80000	            mov rdi, qword [rbp + 0xe8] 	      3000	channel.c	FUNCTION_71	CALL_9
0x4001cb8	      0xe800000000	                          call 0x4001cbd	      3000	channel.c	FUNCTION_71	CALL_9
0x4001cbd	    0x488b9db00000	            mov rbx, qword [rbp + 0xb0] 	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001cc4	    0x48c785e80000	               mov qword [rbp + 0xe8], 0	      3001	channel.c	FUNCTION_71
0x4001ccf	    0x48c785f00000	               mov qword [rbp + 0xf0], 0	      3002	channel.c	FUNCTION_71
0x4001cda	          0x4885db	                           test rbx, rbx	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001cdd	            0x7525	                           jne 0x4001d04	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001cdf	            0xeb47	                           jmp 0x4001d28	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001ce1	     0xf1f80000000	                         nop dword [rax]	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001ce8	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_70	ELSE_1
0x4001cf0	          0x4889df	                            mov rdi, rbx	      2969	channel.c	FUNCTION_70	CALL_2
0x4001cf3	      0xe800000000	                          call 0x4001cf8	      2969	channel.c	FUNCTION_70	CALL_2
0x4001cf8	    0x488b9db00000	            mov rbx, qword [rbp + 0xb0] 	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001cff	          0x4885db	                           test rbx, rbx	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001d02	            0x7424	                            je 0x4001d28	      3004	channel.c	FUNCTION_71	WHILE_4
0x4001d04	          0x4889df	                            mov rdi, rbx	      2963	channel.c	FUNCTION_70	CALL_1
0x4001d07	      0xe800000000	                          call 0x4001d0c	      2963	channel.c	FUNCTION_70	CALL_1
0x4001d0c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2964	channel.c	FUNCTION_70
0x4001d10	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_70	IF_1
0x4001d13	      0x4989442418	             mov qword [r12 + 0x18], rax	      2964	channel.c	FUNCTION_70
0x4001d18	            0x75ce	                           jne 0x4001ce8	      2965	channel.c	FUNCTION_70	IF_1
0x4001d1a	    0x49c744242000	               mov qword [r12 + 0x20], 0	      2966	channel.c	FUNCTION_70	IF_1
0x4001d23	            0xebcb	                           jmp 0x4001cf0	      2966	channel.c	FUNCTION_70	IF_1
0x4001d25	           0xf1f00	                         nop dword [rax]	      2966	channel.c	FUNCTION_70	IF_1
0x4001d28	        0x4883c408	                              add rsp, 8	      3007	channel.c	FUNCTION_71
0x4001d2c	              0x5b	                                 pop rbx	      3007	channel.c	FUNCTION_71
0x4001d2d	              0x5d	                                 pop rbp	      3007	channel.c	FUNCTION_71
0x4001d2e	            0x415c	                                 pop r12	      3007	channel.c	FUNCTION_71
0x4001d30	            0x415d	                                 pop r13	      3007	channel.c	FUNCTION_71
0x4001d32	            0x415e	                                 pop r14	      3007	channel.c	FUNCTION_71
0x4001d34	            0x415f	                                 pop r15	      3007	channel.c	FUNCTION_71
0x4001d36	              0xc3	                                     ret	      3007	channel.c	FUNCTION_71
free_unused_jobs	WHILE,0:FOR,1:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	64
0x400c1d0	    0x4c8b05000000	              mov r8, qword [0x0400c1d7]	      5382	channel.c	FUNCTION_124	FOR_1
0x400c1d7	          0x4d85c0	                             test r8, r8	      5382	channel.c	FUNCTION_124	FOR_1
0x400c1da	     0xf847c000000	                            je 0x400c25c	      5382	channel.c	FUNCTION_124	FOR_1
0x400c1e0	            0x4154	                                push r12	      5378	channel.c	FUNCTION_124
0x400c1e2	          0x4189fc	                           mov r12d, edi	      5378	channel.c	FUNCTION_124
0x400c1e5	              0x55	                                push rbp	      5378	channel.c	FUNCTION_124
0x400c1e6	            0x89f5	                            mov ebp, esi	      5378	channel.c	FUNCTION_124
0x400c1e8	              0x53	                                push rbx	      5378	channel.c	FUNCTION_124
0x400c1e9	            0xeb3d	                           jmp 0x400c228	      5378	channel.c	FUNCTION_124
0x400c1eb	       0xf1f440000	                   nop dword [rax + rax]	      5378	channel.c	FUNCTION_124
0x400c1f0	        0x498b7860	              mov rdi, qword [r8 + 0x60]	      5378	channel.c	FUNCTION_124
0x400c1f4	          0x4885ff	                           test rdi, rdi	      5113	channel.c	FUNCTION_114	CALL_1
0x400c1f7	            0x747f	                            je 0x400c278	      5113	channel.c	FUNCTION_114	CALL_1
0x400c1f9	    0x8b87b0040000	           mov eax, dword [rdi + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400c1ff	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x400c201	            0x740a	                            je 0x400c20d	       315	channel.c	FUNCTION_9	IF_1
0x400c203	    0x4883bfa80400	              cmp qword [rdi + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400c20b	            0x746b	                            je 0x400c278	       315	channel.c	FUNCTION_9	IF_1
0x400c20d	    0x4883bf900400	              cmp qword [rdi + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400c215	            0x7449	                            je 0x400c260	       319	channel.c	FUNCTION_9	IF_2
0x400c217	    0x660f1f840000	                    nop word [rax + rax]	       319	channel.c	FUNCTION_9	IF_2
0x400c220	          0x4885db	                           test rbx, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x400c223	          0x4989d8	                             mov r8, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x400c226	            0x7430	                            je 0x400c258	      5382	channel.c	FUNCTION_124	FOR_1
0x400c228	        0x418b405c	              mov eax, dword [r8 + 0x5c]	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400c22c	          0x498b18	                     mov rbx, qword [r8]	      5384	channel.c	FUNCTION_124	FOR_1
0x400c22f	          0x4431e0	                           xor eax, r12d	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400c232	            0x85e8	                           test eax, ebp	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400c234	            0x74ea	                            je 0x400c220	      5385	channel.c	FUNCTION_124	FOR_1	IF_1
0x400c236	      0x4183782801	                cmp dword [r8 + 0x28], 1	      5104	channel.c	FUNCTION_113
0x400c23b	            0x75b3	                           jne 0x400c1f0	      5104	channel.c	FUNCTION_113
0x400c23d	      0x4983783000	                cmp qword [r8 + 0x30], 0	      5104	channel.c	FUNCTION_113
0x400c242	            0x75dc	                           jne 0x400c220	      5104	channel.c	FUNCTION_113
0x400c244	      0x4983784000	                cmp qword [r8 + 0x40], 0	      5104	channel.c	FUNCTION_113
0x400c249	            0x74a5	                            je 0x400c1f0	      5104	channel.c	FUNCTION_113
0x400c24b	          0x4885db	                           test rbx, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x400c24e	          0x4989d8	                             mov r8, rbx	      5382	channel.c	FUNCTION_124	FOR_1
0x400c251	            0x75d5	                           jne 0x400c228	      5382	channel.c	FUNCTION_124	FOR_1
0x400c253	       0xf1f440000	                   nop dword [rax + rax]	      5382	channel.c	FUNCTION_124	FOR_1
0x400c258	              0x5b	                                 pop rbx	      5392	channel.c	FUNCTION_124
0x400c259	              0x5d	                                 pop rbp	      5392	channel.c	FUNCTION_124
0x400c25a	            0x415c	                                 pop r12	      5392	channel.c	FUNCTION_124
0x400c25c	            0xf3c3	                                     ret	      5392	channel.c	FUNCTION_124
0x400c25e	            0x6690	                                     nop	      5392	channel.c	FUNCTION_124
0x400c260	    0x4883bf280400	              cmp qword [rdi + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400c268	            0x75b6	                           jne 0x400c220	       323	channel.c	FUNCTION_9	IF_3
0x400c26a	      0xe86141ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400c26f	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x400c271	            0x75ad	                           jne 0x400c220	      5113	channel.c	FUNCTION_114	CALL_1
0x400c273	       0xf1f440000	                   nop dword [rax + rax]	      5113	channel.c	FUNCTION_114	CALL_1
0x400c278	          0x4885db	                           test rbx, rbx	      5069	channel.c	FUNCTION_110	IF_1
0x400c27b	            0x7408	                            je 0x400c285	      5069	channel.c	FUNCTION_110	IF_1
0x400c27d	        0x498b4008	                 mov rax, qword [r8 + 8]	      5070	channel.c	FUNCTION_110	IF_1
0x400c281	        0x48894308	                mov qword [rbx + 8], rax	      5070	channel.c	FUNCTION_110	IF_1
0x400c285	        0x498b4008	                 mov rax, qword [r8 + 8]	      5071	channel.c	FUNCTION_110	IF_2
0x400c289	          0x4885c0	                           test rax, rax	      5071	channel.c	FUNCTION_110	IF_2
0x400c28c	            0x7412	                            je 0x400c2a0	      5071	channel.c	FUNCTION_110	IF_2
0x400c28e	          0x488918	                    mov qword [rax], rbx	      5074	channel.c	FUNCTION_110	ELSE_1
0x400c291	          0x4c89c7	                             mov rdi, r8	      5075	channel.c	FUNCTION_110	CALL_1
0x400c294	      0xe800000000	                          call 0x400c299	      5075	channel.c	FUNCTION_110	CALL_1
0x400c299	            0xeb85	                           jmp 0x400c220	      5075	channel.c	FUNCTION_110	CALL_1
0x400c29b	       0xf1f440000	                   nop dword [rax + rax]	      5075	channel.c	FUNCTION_110	CALL_1
0x400c2a0	    0x48891d000000	            mov qword [0x0400c2a7], rbx 	      5072	channel.c	FUNCTION_110	IF_2
0x400c2a7	            0xebe8	                           jmp 0x400c291	      5072	channel.c	FUNCTION_110	IF_2
channel_open	WHILE,1:FOR,0:CALL,52:IF,21:ELSE,0:functions,0:DO,0:SWITCH,0	458
0x4008e60	            0x4157	                                push r15	       654	channel.c	FUNCTION_27
0x4008e62	            0x4156	                                push r14	       654	channel.c	FUNCTION_27
0x4008e64	          0x4189f7	                           mov r15d, esi	       654	channel.c	FUNCTION_27
0x4008e67	            0x4155	                                push r13	       654	channel.c	FUNCTION_27
0x4008e69	            0x4154	                                push r12	       654	channel.c	FUNCTION_27
0x4008e6b	              0x55	                                push rbp	       654	channel.c	FUNCTION_27
0x4008e6c	              0x53	                                push rbx	       654	channel.c	FUNCTION_27
0x4008e6d	            0x89d5	                            mov ebp, edx	       654	channel.c	FUNCTION_27
0x4008e6f	    0x4881ec980100	                          sub rsp, 0x198	       654	channel.c	FUNCTION_27
0x4008e76	      0x48897c2408	                mov qword [rsp + 8], rdi	       654	channel.c	FUNCTION_27
0x4008e7b	      0xbfc0040000	                          mov edi, 0x4c0	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x4008e80	        0x89742410	             mov dword [rsp + 0x10], esi	       654	channel.c	FUNCTION_27
0x4008e84	    0x64488b042528	                mov rax, qword fs:[0x28]	       654	channel.c	FUNCTION_27
0x4008e8d	    0x488984248801	            mov qword [rsp + 0x188], rax	       654	channel.c	FUNCTION_27
0x4008e95	            0x31c0	                            xor eax, eax	       654	channel.c	FUNCTION_27
0x4008e97	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       654	channel.c	FUNCTION_27
0x4008e9c	      0xe800000000	                          call 0x4008ea1	       265	channel.c	ELSE_1	FUNCTION_7	CALL_1
0x4008ea1	          0x4885c0	                           test rax, rax	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4008ea4	     0xf84a6050000	                            je 0x4009450	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4008eaa	          0x4889c3	                            mov rbx, rax	       267	channel.c	ELSE_1	FUNCTION_7	IF_1
0x4008ead	    0x8b0500000000	            mov eax, dword [0x04008eb3] 	       270	channel.c	ELSE_1	FUNCTION_7
0x4008eb3	      0xbe00000000	                              mov esi, 0	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4008eb8	          0x4889df	                            mov rdi, rbx	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4008ebb	          0x8d5001	                      lea edx, [rax + 1]	       270	channel.c	ELSE_1	FUNCTION_7
0x4008ebe	          0x894310	             mov dword [rbx + 0x10], eax	       270	channel.c	ELSE_1	FUNCTION_7
0x4008ec1	            0x31c0	                            xor eax, eax	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4008ec3	    0x891500000000	            mov dword [0x04008ec9], edx 	       270	channel.c	ELSE_1	FUNCTION_7
0x4008ec9	      0xe800000000	                          call 0x4008ece	       271	channel.c	ELSE_1	FUNCTION_7	CALL_2
0x4008ece	    0x488b05000000	            mov rax, qword [0x04008ed5] 	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4008ed5	    0xc74318ffffff	     mov dword [rbx + 0x18], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008edc	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008ee3	    0xc74328d00700	          mov dword [rbx + 0x28], 0x7d0 	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008eea	    0xc78328010000	    mov dword [rbx + 0x128], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008ef4	    0xc7832c010000	              mov dword [rbx + 0x12c], 0	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008efe	          0x4885c0	                           test rax, rax	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4008f01	    0xc78338010000	         mov dword [rbx + 0x138], 0x7d0 	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008f0b	    0xc78338020000	    mov dword [rbx + 0x238], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008f15	    0xc7833c020000	              mov dword [rbx + 0x23c], 0	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008f1f	    0xc78348020000	         mov dword [rbx + 0x248], 0x7d0 	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008f29	    0xc78348030000	    mov dword [rbx + 0x348], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008f33	    0xc7834c030000	              mov dword [rbx + 0x34c], 0	       280	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008f3d	    0xc78358030000	         mov dword [rbx + 0x358], 0x7d0 	       282	channel.c	ELSE_1	FUNCTION_7	FOR_1
0x4008f47	     0xf84ab040000	                            je 0x40093f8	       285	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4008f4d	        0x48895808	                mov qword [rax + 8], rbx	       287	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4008f51	          0x488903	                    mov qword [rbx], rax	       288	channel.c	ELSE_1	FUNCTION_7	IF_2
0x4008f54	      0xb802000000	                              mov eax, 2	       681	channel.c	FUNCTION_27
0x4008f59	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4008f62	    0x48891d000000	            mov qword [0x04008f69], rbx 	       290	channel.c	ELSE_1	FUNCTION_7
0x4008f69	      0x6689442470	               mov word [rsp + 0x70], ax	       681	channel.c	FUNCTION_27
0x4008f6e	    0xc783b4040000	              mov dword [rbx + 0x4b4], 1	       292	channel.c	ELSE_1	FUNCTION_7
0x4008f78	          0x4489f8	                           mov eax, r15d	       682	channel.c	FUNCTION_27	CALL_5
0x4008f7b	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4008f84	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4008f89	        0x66c1c808	                               ror ax, 8	       682	channel.c	FUNCTION_27	CALL_5
0x4008f8d	      0x6689442472	               mov word [rsp + 0x72], ax	       682	channel.c	FUNCTION_27	CALL_5
0x4008f92	      0xe800000000	                          call 0x4008f97	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4008f97	          0x4885c0	                           test rax, rax	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4008f9a	     0xf8400040000	                            je 0x40093a0	       683	channel.c	FUNCTION_27	IF_2	CALL_6
0x4008fa0	        0x48635014	         movsxd rdx, dword [rax + 0x14] 	        53	string3.h	FUNCTION_135	CALL_3
0x4008fa4	        0x488b4018	            mov rax, qword [rax + 0x18] 	        53	string3.h	FUNCTION_135	CALL_3
0x4008fa8	      0x488d7c2474	                   lea rdi, [rsp + 0x74]	        53	string3.h	FUNCTION_135	CALL_3
0x4008fad	      0xb90c000000	                            mov ecx, 0xc	        53	string3.h	FUNCTION_135	CALL_3
0x4008fb2	          0x488b30	                    mov rsi, qword [rax]	        53	string3.h	FUNCTION_135	CALL_3
0x4008fb5	      0xe800000000	                          call 0x4008fba	        53	string3.h	FUNCTION_135	CALL_3
0x4008fba	            0x85ed	                           test ebp, ebp	       703	channel.c	FUNCTION_27	IF_3
0x4008fbc	      0xb801000000	                              mov eax, 1	       703	channel.c	FUNCTION_27	IF_3
0x4008fc1	           0xf44e8	                          cmove ebp, eax	       703	channel.c	FUNCTION_27	IF_3
0x4008fc4	            0x31d2	                            xor edx, edx	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4008fc6	      0xbe01000000	                              mov esi, 1	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4008fcb	      0xbf02000000	                              mov edi, 2	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4008fd0	      0xe800000000	                          call 0x4008fd5	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4008fd5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4008fd8	          0x4189c4	                           mov r12d, eax	       716	channel.c	FUNCTION_27	WHILE_1	CALL_12
0x4008fdb	     0xf84f7040000	                            je 0x40094d8	       717	channel.c	FUNCTION_27	WHILE_1	IF_5
0x4008fe1	            0x85ed	                           test ebp, ebp	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x4008fe3	            0x781b	                            js 0x4009000	       725	channel.c	FUNCTION_27	WHILE_1	IF_6
0x4008fe5	            0x89c7	                            mov edi, eax	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4008fe7	      0xba00080000	                          mov edx, 0x800	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4008fec	            0x31c0	                            xor eax, eax	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4008fee	      0xbe04000000	                              mov esi, 4	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4008ff3	      0xe800000000	                          call 0x4008ff8	       732	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_17
0x4008ff8	            0x85c0	                           test eax, eax	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4008ffa	     0xf88e8050000	                            js 0x40095e8	       728	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4009000	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4009004	      0x488b542408	                mov rdx, qword [rsp + 8]	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4009009	            0x31c0	                            xor eax, eax	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x400900b	      0xbe00000000	                              mov esi, 0	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4009010	          0x4889df	                            mov rdi, rbx	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4009013	      0xe800000000	                          call 0x4009018	       746	channel.c	FUNCTION_27	WHILE_1	CALL_20
0x4009018	      0x488d742470	                   lea rsi, [rsp + 0x70]	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x400901d	      0xba10000000	                           mov edx, 0x10	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4009022	          0x4489e7	                           mov edi, r12d	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x4009025	      0xe800000000	                          call 0x400902a	       747	channel.c	FUNCTION_27	WHILE_1	CALL_21
0x400902a	            0x85c0	                           test eax, eax	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x400902c	     0xf84d6040000	                            je 0x4009508	       749	channel.c	FUNCTION_27	WHILE_1	IF_8
0x4009032	            0x85ed	                           test ebp, ebp	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4009034	     0xf882e040000	                            js 0x4009468	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400903a	      0xe800000000	                          call 0x400903f	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400903f	            0x8b10	                    mov edx, dword [rax]	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4009041	      0x4889442420	             mov qword [rsp + 0x20], rax	       754	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4009046	          0x8d4291	                   lea eax, [rdx - 0x6f]	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4009049	          0x83e0fb	                     and eax, 0xfffffffb	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400904c	            0x7409	                            je 0x4009057	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x400904e	          0x83fa0b	                            cmp edx, 0xb	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4009051	     0xf851d040000	                           jne 0x4009474	       757	channel.c	FUNCTION_27	WHILE_1	IF_9
0x4009057	          0x83fd32	                           cmp ebp, 0x32	       771	channel.c	FUNCTION_27	WHILE_1
0x400905a	    0x41bd32000000	                          mov r13d, 0x32	       771	channel.c	FUNCTION_27	WHILE_1
0x4009060	        0x440f4eed	                        cmovle r13d, ebp	       771	channel.c	FUNCTION_27	WHILE_1
0x4009064	          0x83fa6f	                           cmp edx, 0x6f	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009067	     0xf840b030000	                            je 0x4009378	       776	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400906d	            0x31f6	                            xor esi, esi	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x400906f	      0xba10000000	                           mov edx, 0x10	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4009074	    0xc74424380000	               mov dword [rsp + 0x38], 0	       783	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400907c	    0xc744243c0400	               mov dword [rsp + 0x3c], 4	       784	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009084	          0x4889d1	                            mov rcx, rdx	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4009087	      0x4889542418	             mov qword [rsp + 0x18], rdx	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x400908c	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4009094	            0x89f0	                            mov eax, esi	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x4009096	        0x89742414	             mov dword [rsp + 0x14], esi	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x400909a	              0xfc	                                     cld	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x400909b	          0xf348ab	              rep stosq qword [rdi], rax	       788	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_25
0x400909e	          0x4d63fc	                        movsxd r15, r12d	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090a1	    0x41be01000000	                             mov r14d, 1	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090a7	          0x4c89ff	                            mov rdi, r15	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090aa	      0xe800000000	                          call 0x40090af	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090af	          0x4489e7	                           mov edi, r12d	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090b2	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40090b7	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40090bb	          0xc1ff1f	                           sar edi, 0x1f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090be	          0xc1ef1a	                           shr edi, 0x1a	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090c1	        0x418d0c3c	                    lea ecx, [r12 + rdi]	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090c5	          0x83e13f	                           and ecx, 0x3f	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090c8	            0x29f9	                            sub ecx, edi	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090ca	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40090d2	          0x49d3e6	                             shl r14, cl	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090d5	          0x4889d1	                            mov rcx, rdx	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40090d8	    0x4c09b4c48000	      or qword [rsp + rax*8 + 0x80], r14	       789	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_26
0x40090e0	            0x89f0	                            mov eax, esi	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40090e2	              0xfc	                                     cld	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40090e3	          0xf348ab	              rep stosq qword [rdi], rax	       790	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_27
0x40090e6	          0x4c89ff	                            mov rdi, r15	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40090e9	      0xe800000000	                          call 0x40090ee	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40090ee	    0x4c09b4c40001	     or qword [rsp + rax*8 + 0x100], r14	       791	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_28
0x40090f6	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x40090fb	            0x31f6	                            xor esi, esi	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x40090fd	    0x4169c5e80300	                   imul eax, r13d, 0x3e8	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009104	    0x48c744244000	               mov qword [rsp + 0x40], 0	       793	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400910d	            0x4898	                                    cdqe	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400910f	      0x4889442448	             mov qword [rsp + 0x48], rax	       794	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009114	      0xe800000000	                          call 0x4009119	       796	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_29
0x4009119	            0x31c0	                            xor eax, eax	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400911b	          0x4489ea	                           mov edx, r13d	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400911e	      0xbe00000000	                              mov esi, 0	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4009123	          0x4889df	                            mov rdi, rbx	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x4009126	      0xe800000000	                          call 0x400912b	       798	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_30
0x400912b	      0x418d7c2401	                      lea edi, [r12 + 1]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4009130	      0x4c8d442440	                    lea r8, [rsp + 0x40]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4009135	    0x488d94240001	                  lea rdx, [rsp + 0x100]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400913d	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4009145	            0x31c9	                            xor ecx, ecx	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x4009147	      0xe800000000	                          call 0x400914c	       800	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_31
0x400914c	            0x85c0	                           test eax, eax	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x400914e	     0xf897c000000	                           jns 0x40091d0	       802	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11
0x4009154	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4009159	            0x31c0	                            xor eax, eax	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x400915b	      0xbe00000000	                              mov esi, 0	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4009160	          0x4889df	                            mov rdi, rbx	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4009163	          0x418b16	                    mov edx, dword [r14]	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x4009166	      0xe8758effff	                       call sym.ch_error	       805	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_32
0x400916b	          0x4c89f0	                            mov rax, r14	       807	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_11	CALL_33
0x400916e	            0x8b38	                    mov edi, dword [rax]	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009170	      0xe800000000	                          call 0x4009175	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009175	            0x31ff	                            xor edi, edi	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009177	          0x4889c5	                            mov rbp, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400917a	      0xba05000000	                              mov edx, 5	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400917f	      0xbe00000000	                              mov esi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009184	      0xe800000000	                          call 0x4009189	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009189	          0x4889ea	                            mov rdx, rbp	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400918c	          0x4889c6	                            mov rsi, rax	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400918f	      0xbf00000000	                              mov edi, 0	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009194	      0xe800000000	                          call 0x4009199	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009199	          0x4489e7	                           mov edi, r12d	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400919c	      0xe800000000	                          call 0x40091a1	       848	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x40091a1	    0x8b2d00000000	            mov ebp, dword [0x040091a7] 	       382	channel.c	FUNCTION_13	IF_1
0x40091a7	            0x85ed	                           test ebp, ebp	       382	channel.c	FUNCTION_13	IF_1
0x40091a9	            0x751d	                           jne 0x40091c8	       382	channel.c	FUNCTION_13	IF_1
0x40091ab	    0x448b1d000000	           mov r11d, dword [0x040091b2] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40091b2	          0x4585db	                         test r11d, r11d	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40091b5	     0xf85d5010000	                           jne 0x4009390	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x40091bb	    0xc78370040000	              mov dword [rbx + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40091c5	           0xf1f00	                         nop dword [rax]	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x40091c8	            0x31ed	                            xor ebp, ebp	       894	channel.c	FUNCTION_27	WHILE_1
0x40091ca	      0xe958010000	                           jmp 0x4009327	       894	channel.c	FUNCTION_27	WHILE_1
0x40091cf	              0x90	                                     nop	       894	channel.c	FUNCTION_27	WHILE_1
0x40091d0	          0x4c89ff	                            mov rdi, r15	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40091d3	      0xe800000000	                          call 0x40091d8	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40091d8	    0x4c85b4c48000	   test qword [rsp + rax*8 + 0x80], r14 	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40091e0	     0xf8472010000	                            je 0x4009358	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x40091e6	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x40091eb	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x40091f0	      0xba04000000	                              mov edx, 4	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x40091f5	      0xbe01000000	                              mov esi, 1	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x40091fa	          0x4489e7	                           mov edi, r12d	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x40091fd	      0xe800000000	                          call 0x4009202	       834	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_38
0x4009202	            0x85c0	                           test eax, eax	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009204	     0xf8826020000	                            js 0x4009430	       836	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400920a	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       837	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400920e	          0x8d4291	                   lea eax, [rdx - 0x6f]	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009211	          0x83e0fb	                     and eax, 0xfffffffb	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009214	            0x7413	                            je 0x4009229	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009216	            0x85d2	                           test edx, edx	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009218	           0xf95c1	                                setne cl	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400921b	          0x83fa0b	                            cmp edx, 0xb	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x400921e	           0xf95c0	                                setne al	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009221	            0x84c1	                             test cl, al	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009223	     0xf850b020000	                           jne 0x4009434	       840	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15
0x4009229	          0x4c89ff	                            mov rdi, r15	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400922c	      0xe800000000	                          call 0x4009231	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4009231	    0x4c85b4c40001	  test qword [rsp + rax*8 + 0x100], r14 	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4009239	            0x740e	                            je 0x4009249	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x400923b	      0x448b542438	           mov r10d, dword [rsp + 0x38] 	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4009240	          0x4585d2	                         test r10d, r10d	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4009243	     0xf8474030000	                            je 0x40095bd	       854	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_16	CALL_42
0x4009249	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x400924e	            0x31f6	                            xor esi, esi	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x4009250	      0xe800000000	                          call 0x4009255	       858	channel.c	FUNCTION_27	WHILE_1	IF_10	CALL_43
0x4009255	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400925a	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400925f	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009269	      0x482b442450	             sub rax, qword [rsp + 0x50]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400926e	      0x482b4c2458	             sub rcx, qword [rsp + 0x58]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009273	    0x4869f0e80300	                    imul rsi, rax, 0x3e8	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400927a	          0x4889c8	                            mov rax, rcx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400927d	        0x48c1f93f	                           sar rcx, 0x3f	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009281	          0x48f7ea	                                imul rdx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009284	        0x48c1fa07	                              sar rdx, 7	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009288	          0x4829ca	                            sub rdx, rcx	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x400928b	          0x83fd01	                              cmp ebp, 1	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400928e	        0x488d0416	                    lea rax, [rsi + rdx]	       859	channel.c	FUNCTION_27	WHILE_1	IF_10
0x4009292	            0x7454	                            je 0x40092e8	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4009294	          0x4863d5	                         movsxd rdx, ebp	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4009297	          0x4839d0	                            cmp rax, rdx	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400929a	            0x7d4c	                           jge 0x40092e8	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400929c	          0x4129c5	                           sub r13d, eax	       871	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400929f	            0x29c5	                            sub ebp, eax	       872	channel.c	FUNCTION_27	WHILE_1	IF_17
0x40092a1	          0x4585ed	                         test r13d, r13d	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x40092a4	            0x7e15	                           jle 0x40092bb	       873	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x40092a6	          0x4963fd	                        movsxd rdi, r13d	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x40092a9	      0xbe01000000	                              mov esi, 1	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x40092ae	          0x4429ed	                           sub ebp, r13d	       877	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18
0x40092b1	      0xe800000000	                          call 0x40092b6	       875	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_44
0x40092b6	      0xe800000000	                          call 0x40092bb	       876	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_18	CALL_45
0x40092bb	    0x8b0500000000	            mov eax, dword [0x040092c1] 	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x40092c1	            0x85c0	                           test eax, eax	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x40092c3	            0x7523	                           jne 0x40092e8	       879	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19
0x40092c5	            0x85ed	                           test ebp, ebp	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40092c7	      0xb801000000	                              mov eax, 1	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40092cc	           0xf4ee8	                         cmovle ebp, eax	       883	channel.c	FUNCTION_27	WHILE_1	IF_17	IF_19	IF_20
0x40092cf	          0x4585e4	                         test r12d, r12d	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40092d2	     0xf88ecfcffff	                            js 0x4008fc4	       714	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40092d8	          0x4489e7	                           mov edi, r12d	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40092db	      0xe800000000	                          call 0x40092e0	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40092e0	      0xe9dffcffff	                           jmp 0x4008fc4	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40092e5	           0xf1f00	                         nop dword [rax]	       715	channel.c	FUNCTION_27	WHILE_1	IF_4
0x40092e8	            0x31c0	                            xor eax, eax	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40092ea	      0xbe00000000	                              mov esi, 0	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40092ef	          0x4889df	                            mov rdi, rbx	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40092f2	      0xe8e98cffff	                       call sym.ch_error	       891	channel.c	FUNCTION_27	WHILE_1	CALL_46
0x40092f7	          0x4489e7	                           mov edi, r12d	       892	channel.c	FUNCTION_27	WHILE_1
0x40092fa	      0xe800000000	                          call 0x40092ff	       892	channel.c	FUNCTION_27	WHILE_1
0x40092ff	    0x448b0d000000	            mov r9d, dword [0x04009306] 	       382	channel.c	FUNCTION_13	IF_1
0x4009306	          0x4585c9	                           test r9d, r9d	       382	channel.c	FUNCTION_13	IF_1
0x4009309	     0xf85b9feffff	                           jne 0x40091c8	       382	channel.c	FUNCTION_13	IF_1
0x400930f	    0x448b05000000	            mov r8d, dword [0x04009316] 	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4009316	          0x4585c0	                           test r8d, r8d	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x4009319	            0x7575	                           jne 0x4009390	       384	channel.c	FUNCTION_13	IF_1	IF_2
0x400931b	    0xc78370040000	              mov dword [rbx + 0x470], 1	       385	channel.c	FUNCTION_13	IF_1	IF_2
0x4009325	            0x31ed	                            xor ebp, ebp	       894	channel.c	FUNCTION_27	WHILE_1
0x4009327	    0x488b8c248801	           mov rcx, qword [rsp + 0x188] 	       920	channel.c	FUNCTION_27
0x400932f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       920	channel.c	FUNCTION_27
0x4009338	          0x4889e8	                            mov rax, rbp	       920	channel.c	FUNCTION_27
0x400933b	     0xf85dc020000	                           jne 0x400961d	       920	channel.c	FUNCTION_27
0x4009341	    0x4881c4980100	                          add rsp, 0x198	       920	channel.c	FUNCTION_27
0x4009348	              0x5b	                                 pop rbx	       920	channel.c	FUNCTION_27
0x4009349	              0x5d	                                 pop rbp	       920	channel.c	FUNCTION_27
0x400934a	            0x415c	                                 pop r12	       920	channel.c	FUNCTION_27
0x400934c	            0x415d	                                 pop r13	       920	channel.c	FUNCTION_27
0x400934e	            0x415e	                                 pop r14	       920	channel.c	FUNCTION_27
0x4009350	            0x415f	                                 pop r15	       920	channel.c	FUNCTION_27
0x4009352	              0xc3	                                     ret	       920	channel.c	FUNCTION_27
0x4009353	       0xf1f440000	                   nop dword [rax + rax]	       920	channel.c	FUNCTION_27
0x4009358	          0x4c89ff	                            mov rdi, r15	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400935b	      0xe800000000	                          call 0x4009360	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4009360	    0x4c85b4c40001	  test qword [rsp + rax*8 + 0x100], r14 	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4009368	     0xf8578feffff	                           jne 0x40091e6	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x400936e	      0xe9b6feffff	                           jmp 0x4009229	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4009373	       0xf1f440000	                   nop dword [rax + rax]	       832	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	CALL_37
0x4009378	          0x83fd01	                              cmp ebp, 1	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x400937b	     0xf8467ffffff	                            je 0x40092e8	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4009381	            0x31c0	                            xor eax, eax	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4009383	      0xe914ffffff	                           jmp 0x400929c	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4009388	     0xf1f84000000	                   nop dword [rax + rax]	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4009390	          0x4889df	                            mov rdi, rbx	       865	channel.c	FUNCTION_27	WHILE_1	IF_17
0x4009393	            0x31ed	                            xor ebp, ebp	       894	channel.c	FUNCTION_27	WHILE_1
0x4009395	      0xe8c6f9ffff	           call sym.channel_free.part.12	       894	channel.c	FUNCTION_27	WHILE_1
0x400939a	            0xeb8b	                           jmp 0x4009327	       894	channel.c	FUNCTION_27	WHILE_1
0x400939c	         0xf1f4000	                         nop dword [rax]	       894	channel.c	FUNCTION_27	WHILE_1
0x40093a0	      0xbe00000000	                              mov esi, 0	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x40093a5	          0x4889df	                            mov rdi, rbx	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x40093a8	      0xe8338cffff	                       call sym.ch_error	       685	channel.c	FUNCTION_27	IF_2	CALL_7
0x40093ad	      0xe800000000	                          call 0x40093b2	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40093b2	            0x8b38	                    mov edi, dword [rax]	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40093b4	      0xe800000000	                          call 0x40093b9	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40093b9	      0xba05000000	                              mov edx, 5	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40093be	          0x4889c5	                            mov rbp, rax	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40093c1	      0xbe00000000	                              mov esi, 0	       686	channel.c	FUNCTION_27	IF_2	CALL_8
0x40093c6	            0x31ff	                            xor edi, edi	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40093c8	      0xe800000000	                          call 0x40093cd	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40093cd	          0x4889ea	                            mov rdx, rbp	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40093d0	          0x4889c6	                            mov rsi, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40093d3	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40093d8	      0xe800000000	                          call 0x40093dd	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40093dd	    0x448b35000000	           mov r14d, dword [0x040093e4] 	       382	channel.c	FUNCTION_13	IF_1
0x40093e4	          0x4585f6	                         test r14d, r14d	       382	channel.c	FUNCTION_13	IF_1
0x40093e7	     0xf8422ffffff	                            je 0x400930f	       382	channel.c	FUNCTION_13	IF_1
0x40093ed	            0x31ed	                            xor ebp, ebp	       894	channel.c	FUNCTION_27	WHILE_1
0x40093ef	      0xe933ffffff	                           jmp 0x4009327	       894	channel.c	FUNCTION_27	WHILE_1
0x40093f4	         0xf1f4000	                         nop dword [rax]	       894	channel.c	FUNCTION_27	WHILE_1
0x40093f8	      0xb802000000	                              mov eax, 2	       681	channel.c	FUNCTION_27
0x40093fd	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4009406	    0x48891d000000	            mov qword [0x0400940d], rbx 	       290	channel.c	ELSE_1	FUNCTION_7
0x400940d	      0x6689442470	               mov word [rsp + 0x70], ax	       681	channel.c	FUNCTION_27
0x4009412	    0xc783b4040000	              mov dword [rbx + 0x4b4], 1	       292	channel.c	ELSE_1	FUNCTION_7
0x400941c	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_138	CALL_6
0x4009425	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	       682	channel.c	FUNCTION_27	CALL_5
0x400942a	      0xe955fbffff	                           jmp 0x4008f84	       682	channel.c	FUNCTION_27	CALL_5
0x400942f	              0x90	                                     nop	       682	channel.c	FUNCTION_27	CALL_5
0x4009430	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       682	channel.c	FUNCTION_27	CALL_5
0x4009434	            0x31c0	                            xor eax, eax	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4009436	      0xbe00000000	                              mov esi, 0	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x400943b	          0x4889df	                            mov rdi, rbx	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x400943e	      0xe89d8bffff	                       call sym.ch_error	       844	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_39
0x4009443	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009448	      0xe921fdffff	                           jmp 0x400916e	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x400944d	           0xf1f00	                         nop dword [rax]	       847	channel.c	FUNCTION_27	WHILE_1	IF_10	IF_14	IF_15	CALL_40
0x4009450	      0xbe00000000	                              mov esi, 0	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4009455	            0x31ff	                            xor edi, edi	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4009457	            0x31c0	                            xor eax, eax	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x4009459	      0xe8828bffff	                       call sym.ch_error	       674	channel.c	FUNCTION_27	IF_1	CALL_3
0x400945e	            0x31ed	                            xor ebp, ebp	       675	channel.c	FUNCTION_27	IF_1
0x4009460	      0xe9c2feffff	                           jmp 0x4009327	       675	channel.c	FUNCTION_27	IF_1
0x4009465	           0xf1f00	                         nop dword [rax]	       675	channel.c	FUNCTION_27	IF_1
0x4009468	      0xe800000000	                          call 0x400946d	       675	channel.c	FUNCTION_27	IF_1
0x400946d	            0x8b10	                    mov edx, dword [rax]	       675	channel.c	FUNCTION_27	IF_1
0x400946f	      0x4889442420	             mov qword [rsp + 0x20], rax	       675	channel.c	FUNCTION_27	IF_1
0x4009474	      0xbe00000000	                              mov esi, 0	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4009479	            0x31c0	                            xor eax, eax	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x400947b	          0x4889df	                            mov rdi, rbx	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x400947e	      0xe85d8bffff	                       call sym.ch_error	       761	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_22
0x4009483	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4009488	            0x8b38	                    mov edi, dword [rax]	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400948a	      0xe800000000	                          call 0x400948f	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400948f	            0x31ff	                            xor edi, edi	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4009491	          0x4889c5	                            mov rbp, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4009494	      0xba05000000	                              mov edx, 5	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x4009499	      0xbe00000000	                              mov esi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x400949e	      0xe800000000	                          call 0x40094a3	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x40094a3	          0x4889ea	                            mov rdx, rbp	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x40094a6	          0x4889c6	                            mov rsi, rax	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x40094a9	      0xbf00000000	                              mov edi, 0	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x40094ae	      0xe800000000	                          call 0x40094b3	       763	channel.c	FUNCTION_27	WHILE_1	IF_9	CALL_23
0x40094b3	          0x4489e7	                           mov edi, r12d	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x40094b6	      0xe800000000	                          call 0x40094bb	       764	channel.c	FUNCTION_27	WHILE_1	IF_9
0x40094bb	    0x448b25000000	           mov r12d, dword [0x040094c2] 	       382	channel.c	FUNCTION_13	IF_1
0x40094c2	          0x4585e4	                         test r12d, r12d	       382	channel.c	FUNCTION_13	IF_1
0x40094c5	     0xf8444feffff	                            je 0x400930f	       382	channel.c	FUNCTION_13	IF_1
0x40094cb	            0x31ed	                            xor ebp, ebp	       894	channel.c	FUNCTION_27	WHILE_1
0x40094cd	      0xe955feffff	                           jmp 0x4009327	       894	channel.c	FUNCTION_27	WHILE_1
0x40094d2	    0x660f1f440000	                    nop word [rax + rax]	       894	channel.c	FUNCTION_27	WHILE_1
0x40094d8	      0xbe00000000	                              mov esi, 0	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x40094dd	          0x4889df	                            mov rdi, rbx	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x40094e0	            0x31c0	                            xor eax, eax	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x40094e2	      0xe8f98affff	                       call sym.ch_error	       719	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_13
0x40094e7	      0xe800000000	                          call 0x40094ec	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40094ec	            0x8b38	                    mov edi, dword [rax]	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40094ee	      0xe800000000	                          call 0x40094f3	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40094f3	      0xba05000000	                              mov edx, 5	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40094f8	          0x4889c5	                            mov rbp, rax	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x40094fb	      0xbe00000000	                              mov esi, 0	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4009500	      0xe9c1feffff	                           jmp 0x40093c6	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4009505	           0xf1f00	                         nop dword [rax]	       720	channel.c	FUNCTION_27	WHILE_1	IF_5	CALL_14
0x4009508	            0x31c0	                            xor eax, eax	       897	channel.c	FUNCTION_27	CALL_48
0x400950a	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_27	CALL_48
0x400950f	          0x4889df	                            mov rdi, rbx	       897	channel.c	FUNCTION_27	CALL_48
0x4009512	      0xe800000000	                          call 0x4009517	       897	channel.c	FUNCTION_27	CALL_48
0x4009517	            0x85ed	                           test ebp, ebp	       899	channel.c	FUNCTION_27	IF_21
0x4009519	     0xf89ad000000	                           jns 0x40095cc	       899	channel.c	FUNCTION_27	IF_21
0x400951f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       910	channel.c	FUNCTION_27
0x4009524	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       911	channel.c	FUNCTION_27	CALL_51
0x4009529	        0x44896318	            mov dword [rbx + 0x18], r12d	       909	channel.c	FUNCTION_27
0x400952d	    0x488983780400	            mov qword [rbx + 0x478], rax	       910	channel.c	FUNCTION_27
0x4009534	      0xe800000000	                          call 0x4009539	       911	channel.c	FUNCTION_27	CALL_51
0x4009539	    0x8b3d00000000	            mov edi, dword [0x0400953f] 	       521	channel.c	FUNCTION_22	IF_1
0x400953f	    0x488983600400	            mov qword [rbx + 0x460], rax	       911	channel.c	FUNCTION_27	CALL_51
0x4009546	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       912	channel.c	FUNCTION_27
0x400954a	    0x838b6c040000	               or dword [rbx + 0x46c], 1	       913	channel.c	FUNCTION_27
0x4009551	            0x85ff	                           test edi, edi	       521	channel.c	FUNCTION_22	IF_1
0x4009553	    0x898368040000	            mov dword [rbx + 0x468], eax	       912	channel.c	FUNCTION_27
0x4009559	            0x7511	                           jne 0x400956c	       521	channel.c	FUNCTION_22	IF_1
0x400955b	    0x8b3500000000	            mov esi, dword [0x04009561] 	       521	channel.c	FUNCTION_22	IF_1
0x4009561	          0x4889dd	                            mov rbp, rbx	       521	channel.c	FUNCTION_22	IF_1
0x4009564	            0x85f6	                           test esi, esi	       521	channel.c	FUNCTION_22	IF_1
0x4009566	     0xf84bbfdffff	                            je 0x4009327	       521	channel.c	FUNCTION_22	IF_1
0x400956c	    0x8b8ba4040000	           mov ecx, dword [rbx + 0x4a4] 	       525	channel.c	FUNCTION_22	IF_2
0x4009572	          0x4889dd	                            mov rbp, rbx	       525	channel.c	FUNCTION_22	IF_2
0x4009575	            0x85c9	                           test ecx, ecx	       525	channel.c	FUNCTION_22	IF_2
0x4009577	     0xf85aafdffff	                           jne 0x4009327	       525	channel.c	FUNCTION_22	IF_2
0x400957d	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	       547	channel.c	FUNCTION_22	IF_4
0x4009580	            0x85d2	                           test edx, edx	       547	channel.c	FUNCTION_22	IF_4
0x4009582	     0xf859ffdffff	                           jne 0x4009327	       547	channel.c	FUNCTION_22	IF_4
0x4009588	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x400958b	      0xba00000000	                              mov edx, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4009590	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4009595	          0x4889df	                            mov rdi, rbx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4009598	            0x31c0	                            xor eax, eax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x400959a	      0xe800000000	                          call 0x400959f	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x400959f	        0x48634b18	         movsxd rcx, dword [rbx + 0x18] 	       568	channel.c	FUNCTION_22	IF_4
0x40095a3	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40095a8	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40095ad	          0x4889cf	                            mov rdi, rcx	       568	channel.c	FUNCTION_22	IF_4
0x40095b0	      0xe800000000	                          call 0x40095b5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40095b5	          0x89431c	             mov dword [rbx + 0x1c], eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40095b8	      0xe96afdffff	                           jmp 0x4009327	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x40095bd	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_27	CALL_48
0x40095c2	          0x4889df	                            mov rdi, rbx	       897	channel.c	FUNCTION_27	CALL_48
0x40095c5	            0x31c0	                            xor eax, eax	       897	channel.c	FUNCTION_27	CALL_48
0x40095c7	      0xe800000000	                          call 0x40095cc	       897	channel.c	FUNCTION_27	CALL_48
0x40095cc	            0x31d2	                            xor edx, edx	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x40095ce	      0xbe04000000	                              mov esi, 4	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x40095d3	          0x4489e7	                           mov edi, r12d	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x40095d6	            0x31c0	                            xor eax, eax	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x40095d8	      0xe800000000	                          call 0x40095dd	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x40095dd	      0xe93dffffff	                           jmp 0x400951f	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x40095e2	    0x660f1f440000	                    nop word [rax + rax]	       905	channel.c	FUNCTION_27	IF_21	CALL_50
0x40095e8	      0xe800000000	                          call 0x40095ed	       738	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x40095ed	            0x8b10	                    mov edx, dword [rax]	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x40095ef	      0xbe00000000	                              mov esi, 0	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x40095f4	            0x31c0	                            xor eax, eax	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x40095f6	          0x4889df	                            mov rdi, rbx	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x40095f9	      0xe8e289ffff	                       call sym.ch_error	       737	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7	CALL_18
0x40095fe	          0x4489e7	                           mov edi, r12d	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4009601	      0xe800000000	                          call 0x4009606	       739	channel.c	FUNCTION_27	WHILE_1	IF_6	IF_7
0x4009606	    0x448b2d000000	           mov r13d, dword [0x0400960d] 	       382	channel.c	FUNCTION_13	IF_1
0x400960d	          0x4585ed	                         test r13d, r13d	       382	channel.c	FUNCTION_13	IF_1
0x4009610	     0xf84f9fcffff	                            je 0x400930f	       382	channel.c	FUNCTION_13	IF_1
0x4009616	            0x31ed	                            xor ebp, ebp	       894	channel.c	FUNCTION_27	WHILE_1
0x4009618	      0xe90afdffff	                           jmp 0x4009327	       894	channel.c	FUNCTION_27	WHILE_1
0x400961d	      0xe800000000	                          call 0x4009622	       920	channel.c	FUNCTION_27
job_stop_on_exit	WHILE,0:FOR,1:CALL,1:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	21
0x400c3e0	              0x53	                                push rbx	      5459	channel.c	FUNCTION_127
0x400c3e1	    0x488b1d000000	            mov rbx, qword [0x0400c3e8] 	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3e8	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3eb	            0x750b	                           jne 0x400c3f8	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3ed	            0xeb28	                           jmp 0x400c417	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3ef	              0x90	                                     nop	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3f0	          0x488b1b	                    mov rbx, qword [rbx]	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3f3	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3f6	            0x741f	                            je 0x400c417	      5462	channel.c	FUNCTION_127	FOR_1
0x400c3f8	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400c3fc	            0x75f2	                           jne 0x400c3f0	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400c3fe	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400c402	          0x4885f6	                           test rsi, rsi	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400c405	            0x74e9	                            je 0x400c3f0	      5463	channel.c	FUNCTION_127	FOR_1	IF_1
0x400c407	          0x4889df	                            mov rdi, rbx	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400c40a	      0xe800000000	                          call 0x400c40f	      5464	channel.c	FUNCTION_127	FOR_1	IF_1
0x400c40f	          0x488b1b	                    mov rbx, qword [rbx]	      5462	channel.c	FUNCTION_127	FOR_1
0x400c412	          0x4885db	                           test rbx, rbx	      5462	channel.c	FUNCTION_127	FOR_1
0x400c415	            0x75e1	                           jne 0x400c3f8	      5462	channel.c	FUNCTION_127	FOR_1
0x400c417	              0x5b	                                 pop rbx	      5465	channel.c	FUNCTION_127
0x400c418	              0xc3	                                     ret	      5465	channel.c	FUNCTION_127
common_channel_read	WHILE,0:FOR,0:CALL,10:IF,8:ELSE,2:functions,0:DO,0:SWITCH,0	171
0x400b5c0	            0x4155	                                push r13	      3531	channel.c	FUNCTION_82
0x400b5c2	            0x4154	                                push r12	      3531	channel.c	FUNCTION_82
0x400b5c4	      0xb96f000000	                           mov ecx, 0x6f	        90	string3.h	FUNCTION_138	CALL_6
0x400b5c9	              0x55	                                push rbp	      3531	channel.c	FUNCTION_82
0x400b5ca	              0x53	                                push rbx	      3531	channel.c	FUNCTION_82
0x400b5cb	          0x4889f5	                            mov rbp, rsi	      3531	channel.c	FUNCTION_82
0x400b5ce	          0x4989fc	                            mov r12, rdi	      3531	channel.c	FUNCTION_82
0x400b5d1	            0x89d3	                            mov ebx, edx	      3531	channel.c	FUNCTION_82
0x400b5d3	    0x4881ec980300	                          sub rsp, 0x398	      3531	channel.c	FUNCTION_82
0x400b5da	    0xc70602000000	                      mov dword [rsi], 2	      3541	channel.c	FUNCTION_82
0x400b5e0	    0x48c746080000	                  mov qword [rsi + 8], 0	      3542	channel.c	FUNCTION_82
0x400b5e8	      0x488d742410	                   lea rsi, [rsp + 0x10]	        90	string3.h	FUNCTION_138	CALL_6
0x400b5ed	    0x48c744240800	                  mov qword [rsp + 8], 0	      3538	channel.c	FUNCTION_82
0x400b5f6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3531	channel.c	FUNCTION_82
0x400b5ff	    0x488984248803	            mov qword [rsp + 0x388], rax	      3531	channel.c	FUNCTION_82
0x400b607	            0x31c0	                            xor eax, eax	      3531	channel.c	FUNCTION_82
0x400b609	          0x4889f7	                            mov rdi, rsi	        90	string3.h	FUNCTION_138	CALL_6
0x400b60c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x400b60f	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      4502	channel.c	FUNCTION_107	IF_1
0x400b614	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x400b616	     0xf8474020000	                            je 0x400b890	      4502	channel.c	FUNCTION_107	IF_1
0x400b61c	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_107	IF_2
0x400b61f	     0xf85ab010000	                           jne 0x400b7d0	      4504	channel.c	FUNCTION_107	IF_2
0x400b625	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      4504	channel.c	FUNCTION_107	IF_2
0x400b62a	            0x31c9	                            xor ecx, ecx	      4504	channel.c	FUNCTION_107	IF_2
0x400b62c	      0xba00320000	                         mov edx, 0x3200	      4504	channel.c	FUNCTION_107	IF_2
0x400b631	      0xe8ca4fffff	        call sym.get_job_options.part.14	      4504	channel.c	FUNCTION_107	IF_2
0x400b636	            0x85c0	                           test eax, eax	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400b638	     0xf84ab010000	                            je 0x400b7e9	      3545	channel.c	FUNCTION_82	IF_1	CALL_2
0x400b63e	      0xf644241110	           test byte [rsp + 0x11], 0x10 	      3549	channel.c	FUNCTION_82	IF_2
0x400b643	     0xf8447020000	                            je 0x400b890	      3549	channel.c	FUNCTION_82	IF_2
0x400b649	    0x448bac241802	          mov r13d, dword [rsp + 0x218] 	      3550	channel.c	FUNCTION_82	IF_2
0x400b651	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x400b656	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x400b65b	          0x4c89e7	                            mov rdi, r12	      3551	channel.c	FUNCTION_82	CALL_3
0x400b65e	          0x4489e9	                           mov ecx, r13d	      3551	channel.c	FUNCTION_82	CALL_3
0x400b661	      0xe800000000	                          call 0x400b666	      3551	channel.c	FUNCTION_82	CALL_3
0x400b666	          0x4885c0	                           test rax, rax	      3552	channel.c	FUNCTION_82	IF_3
0x400b669	     0xf847a010000	                            je 0x400b7e9	      3552	channel.c	FUNCTION_82	IF_3
0x400b66f	        0x4183fd04	                             cmp r13d, 4	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x400b673	     0xf8437020000	                            je 0x400b8b0	      3554	channel.c	FUNCTION_82	IF_3	IF_4
0x400b679	          0x4489ea	                           mov edx, r13d	      4380	channel.c	FUNCTION_100
0x400b67c	          0x4889d1	                            mov rcx, rdx	      4380	channel.c	FUNCTION_100
0x400b67f	        0x48c1e208	                              shl rdx, 8	      4380	channel.c	FUNCTION_100
0x400b683	        0x48c1e104	                              shl rcx, 4	      4380	channel.c	FUNCTION_100
0x400b687	          0x4801ca	                            add rdx, rcx	      4380	channel.c	FUNCTION_100
0x400b68a	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      3558	channel.c	FUNCTION_82	IF_3	IF_5
0x400b68e	          0x4801c2	                            add rdx, rax	      4380	channel.c	FUNCTION_100
0x400b691	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      4380	channel.c	FUNCTION_100
0x400b694	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      4389	channel.c	FUNCTION_101
0x400b697	          0xf6c502	                              test ch, 2	      3559	channel.c	FUNCTION_82	IF_3	IF_5
0x400b69a	     0xf4594240802	         cmovne edx, dword [rsp + 0x208]	      3559	channel.c	FUNCTION_82	IF_3	IF_5
0x400b6a2	            0x85db	                           test ebx, ebx	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x400b6a4	     0xf8516020000	                           jne 0x400b8c0	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x400b6aa	          0x83fe01	                              cmp esi, 1	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x400b6ad	     0xf860d020000	                           jbe 0x400b8c0	      3561	channel.c	FUNCTION_82	IF_3	IF_6
0x400b6b3	          0x80e520	                            and ch, 0x20	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x400b6b6	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x400b6bb	     0xf458c241c02	         cmovne ecx, dword [rsp + 0x21c]	      3567	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_7
0x400b6c3	      0x4c8d442408	                       lea r8, [rsp + 8]	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x400b6c8	          0x4889c7	                            mov rdi, rax	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x400b6cb	          0x4489ee	                           mov esi, r13d	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x400b6ce	      0xe8fdecffff	        call sym.channel_read_json_block	      3568	channel.c	FUNCTION_82	IF_3	ELSE_1	CALL_8
0x400b6d3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x400b6d8	          0x4885ff	                           test rdi, rdi	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x400b6db	     0xf84ff010000	                            je 0x400b8e0	      3569	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x400b6e1	          0x488b07	                    mov rax, qword [rdi]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x400b6e4	        0x488b5708	                mov rdx, qword [rdi + 8]	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x400b6e8	        0x48894500	                    mov qword [rbp], rax	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x400b6ec	        0x48895508	                mov qword [rbp + 8], rdx	      3571	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8
0x400b6f0	      0xe800000000	                          call 0x400b6f5	      3572	channel.c	FUNCTION_82	IF_3	ELSE_1	IF_8	CALL_9
0x400b6f5	    0x488bbc24b801	           mov rdi, qword [rsp + 0x1b8] 	      4453	channel.c	FUNCTION_105	IF_1
0x400b6fd	          0x4885ff	                           test rdi, rdi	      4453	channel.c	FUNCTION_105	IF_1
0x400b700	     0xf85f4000000	                           jne 0x400b7fa	      4453	channel.c	FUNCTION_105	IF_1
0x400b706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4453	channel.c	FUNCTION_105	IF_1
0x400b710	    0x488bbc24b001	           mov rdi, qword [rsp + 0x1b0] 	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400b718	          0x4885ff	                           test rdi, rdi	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400b71b	     0xf84de000000	                            je 0x400b7ff	      4455	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400b721	      0xe800000000	                          call 0x400b726	      4456	channel.c	FUNCTION_105	ELSE_1	IF_2
0x400b726	    0x488bbc24c801	           mov rdi, qword [rsp + 0x1c8] 	      4457	channel.c	FUNCTION_105	IF_3
0x400b72e	          0x4885ff	                           test rdi, rdi	      4457	channel.c	FUNCTION_105	IF_3
0x400b731	     0xf85d9000000	                           jne 0x400b810	      4457	channel.c	FUNCTION_105	IF_3
0x400b737	    0x488bbc24c001	           mov rdi, qword [rsp + 0x1c0] 	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x400b73f	          0x4885ff	                           test rdi, rdi	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x400b742	     0xf84cd000000	                            je 0x400b815	      4459	channel.c	FUNCTION_105	ELSE_2	IF_4
0x400b748	      0xe800000000	                          call 0x400b74d	      4460	channel.c	FUNCTION_105	ELSE_2	IF_4
0x400b74d	    0x488bbc24d801	           mov rdi, qword [rsp + 0x1d8] 	      4461	channel.c	FUNCTION_105	IF_5
0x400b755	          0x4885ff	                           test rdi, rdi	      4461	channel.c	FUNCTION_105	IF_5
0x400b758	     0xf85c8000000	                           jne 0x400b826	      4461	channel.c	FUNCTION_105	IF_5
0x400b75e	    0x488bbc24d001	           mov rdi, qword [rsp + 0x1d0] 	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x400b766	          0x4885ff	                           test rdi, rdi	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x400b769	     0xf84bc000000	                            je 0x400b82b	      4463	channel.c	FUNCTION_105	ELSE_3	IF_6
0x400b76f	      0xe800000000	                          call 0x400b774	      4464	channel.c	FUNCTION_105	ELSE_3	IF_6
0x400b774	    0x488bbc24e801	           mov rdi, qword [rsp + 0x1e8] 	      4465	channel.c	FUNCTION_105	IF_7
0x400b77c	          0x4885ff	                           test rdi, rdi	      4465	channel.c	FUNCTION_105	IF_7
0x400b77f	     0xf85b7000000	                           jne 0x400b83c	      4465	channel.c	FUNCTION_105	IF_7
0x400b785	    0x488bbc24e001	           mov rdi, qword [rsp + 0x1e0] 	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400b78d	          0x4885ff	                           test rdi, rdi	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400b790	     0xf84ab000000	                            je 0x400b841	      4467	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400b796	      0xe800000000	                          call 0x400b79b	      4468	channel.c	FUNCTION_105	ELSE_4	IF_8
0x400b79b	    0x488bbc24f801	           mov rdi, qword [rsp + 0x1f8] 	      4469	channel.c	FUNCTION_105	IF_9
0x400b7a3	          0x4885ff	                           test rdi, rdi	      4469	channel.c	FUNCTION_105	IF_9
0x400b7a6	     0xf85a6000000	                           jne 0x400b852	      4469	channel.c	FUNCTION_105	IF_9
0x400b7ac	    0x488bbc24f001	           mov rdi, qword [rsp + 0x1f0] 	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400b7b4	          0x4885ff	                           test rdi, rdi	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400b7b7	     0xf849a000000	                            je 0x400b857	      4471	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400b7bd	      0xe800000000	                          call 0x400b7c2	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400b7c2	      0xe990000000	                           jmp 0x400b857	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400b7c7	    0x660f1f840000	                    nop word [rax + rax]	      4472	channel.c	FUNCTION_105	ELSE_5	IF_10
0x400b7d0	            0x31ff	                            xor edi, edi	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b7d2	      0xba05000000	                              mov edx, 5	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b7d7	      0xbe00000000	                              mov esi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b7dc	      0xe800000000	                          call 0x400b7e1	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b7e1	          0x4889c7	                            mov rdi, rax	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b7e4	      0xe800000000	                          call 0x400b7e9	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400b7e9	    0x488bbc24b801	           mov rdi, qword [rsp + 0x1b8] 	      4453	channel.c	FUNCTION_105	IF_1
0x400b7f1	          0x4885ff	                           test rdi, rdi	      4453	channel.c	FUNCTION_105	IF_1
0x400b7f4	     0xf8416ffffff	                            je 0x400b710	      4453	channel.c	FUNCTION_105	IF_1
0x400b7fa	      0xe800000000	                          call 0x400b7ff	      4454	channel.c	FUNCTION_105	CALL_1
0x400b7ff	    0x488bbc24c801	           mov rdi, qword [rsp + 0x1c8] 	      4457	channel.c	FUNCTION_105	IF_3
0x400b807	          0x4885ff	                           test rdi, rdi	      4457	channel.c	FUNCTION_105	IF_3
0x400b80a	     0xf8427ffffff	                            je 0x400b737	      4457	channel.c	FUNCTION_105	IF_3
0x400b810	      0xe800000000	                          call 0x400b815	      4458	channel.c	FUNCTION_105	CALL_3
0x400b815	    0x488bbc24d801	           mov rdi, qword [rsp + 0x1d8] 	      4461	channel.c	FUNCTION_105	IF_5
0x400b81d	          0x4885ff	                           test rdi, rdi	      4461	channel.c	FUNCTION_105	IF_5
0x400b820	     0xf8438ffffff	                            je 0x400b75e	      4461	channel.c	FUNCTION_105	IF_5
0x400b826	      0xe800000000	                          call 0x400b82b	      4462	channel.c	FUNCTION_105	CALL_5
0x400b82b	    0x488bbc24e801	           mov rdi, qword [rsp + 0x1e8] 	      4465	channel.c	FUNCTION_105	IF_7
0x400b833	          0x4885ff	                           test rdi, rdi	      4465	channel.c	FUNCTION_105	IF_7
0x400b836	     0xf8449ffffff	                            je 0x400b785	      4465	channel.c	FUNCTION_105	IF_7
0x400b83c	      0xe800000000	                          call 0x400b841	      4466	channel.c	FUNCTION_105	CALL_7
0x400b841	    0x488bbc24f801	           mov rdi, qword [rsp + 0x1f8] 	      4469	channel.c	FUNCTION_105	IF_9
0x400b849	          0x4885ff	                           test rdi, rdi	      4469	channel.c	FUNCTION_105	IF_9
0x400b84c	     0xf845affffff	                            je 0x400b7ac	      4469	channel.c	FUNCTION_105	IF_9
0x400b852	      0xe800000000	                          call 0x400b857	      4470	channel.c	FUNCTION_105	CALL_9
0x400b857	    0x488bbc247002	           mov rdi, qword [rsp + 0x270] 	      4473	channel.c	FUNCTION_105	IF_11
0x400b85f	          0x4885ff	                           test rdi, rdi	      4473	channel.c	FUNCTION_105	IF_11
0x400b862	            0x7405	                            je 0x400b869	      4473	channel.c	FUNCTION_105	IF_11
0x400b864	      0xe800000000	                          call 0x400b869	      4474	channel.c	FUNCTION_105	CALL_11
0x400b869	    0x488b84248803	           mov rax, qword [rsp + 0x388] 	      3584	channel.c	FUNCTION_82
0x400b871	    0x644833042528	                xor rax, qword fs:[0x28]	      3584	channel.c	FUNCTION_82
0x400b87a	            0x7578	                           jne 0x400b8f4	      3584	channel.c	FUNCTION_82
0x400b87c	    0x4881c4980300	                          add rsp, 0x398	      3584	channel.c	FUNCTION_82
0x400b883	              0x5b	                                 pop rbx	      3584	channel.c	FUNCTION_82
0x400b884	              0x5d	                                 pop rbp	      3584	channel.c	FUNCTION_82
0x400b885	            0x415c	                                 pop r12	      3584	channel.c	FUNCTION_82
0x400b887	            0x415d	                                 pop r13	      3584	channel.c	FUNCTION_82
0x400b889	              0xc3	                                     ret	      3584	channel.c	FUNCTION_82
0x400b88a	    0x660f1f440000	                    nop word [rax + rax]	      3584	channel.c	FUNCTION_82
0x400b890	      0xb904000000	                              mov ecx, 4	      3551	channel.c	FUNCTION_82	CALL_3
0x400b895	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x400b89a	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_82	CALL_3
0x400b89f	          0x4c89e7	                            mov rdi, r12	      3551	channel.c	FUNCTION_82	CALL_3
0x400b8a2	      0xe800000000	                          call 0x400b8a7	      3551	channel.c	FUNCTION_82	CALL_3
0x400b8a7	          0x4885c0	                           test rax, rax	      3552	channel.c	FUNCTION_82	IF_3
0x400b8aa	     0xf8439ffffff	                            je 0x400b7e9	      3552	channel.c	FUNCTION_82	IF_3
0x400b8b0	          0x4531ed	                          xor r13d, r13d	      3550	channel.c	FUNCTION_82	IF_2
0x400b8b3	        0x837818ff	cmp dword [rax + 0x18], 0xffffffffffffffff	      3550	channel.c	FUNCTION_82	IF_2
0x400b8b7	        0x410f94c5	                               sete r13b	      3550	channel.c	FUNCTION_82	IF_2
0x400b8bb	      0xe9b9fdffff	                           jmp 0x400b679	      3550	channel.c	FUNCTION_82	IF_2
0x400b8c0	            0x89d9	                            mov ecx, ebx	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x400b8c2	          0x4489ee	                           mov esi, r13d	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x400b8c5	          0x4889c7	                            mov rdi, rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x400b8c8	      0xe803adffff	             call sym.channel_read_block	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x400b8cd	        0x48894508	                mov qword [rbp + 8], rax	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x400b8d1	      0xe913ffffff	                           jmp 0x400b7e9	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x400b8d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3562	channel.c	FUNCTION_82	IF_3	IF_6	CALL_7
0x400b8e0	    0xc74500080000	                      mov dword [rbp], 8	      3576	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x400b8e7	    0x48c745080200	                  mov qword [rbp + 8], 2	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x400b8ef	      0xe9f5feffff	                           jmp 0x400b7e9	      3577	channel.c	FUNCTION_82	IF_3	ELSE_1	ELSE_2
0x400b8f4	      0xe800000000	                          call 0x400b8f9	      3584	channel.c	FUNCTION_82
ch_close_part_on_error	WHILE,0:FOR,0:CALL,7:IF,4:ELSE,1:functions,0:DO,0:SWITCH,0	237
0x40029e0	            0x4156	                                push r14	      3232	channel.c	FUNCTION_77
0x40029e2	            0x4155	                                push r13	      3232	channel.c	FUNCTION_77
0x40029e4	          0x4889c8	                            mov rax, rcx	      3232	channel.c	FUNCTION_77
0x40029e7	            0x4154	                                push r12	      3232	channel.c	FUNCTION_77
0x40029e9	              0x55	                                push rbp	      3232	channel.c	FUNCTION_77
0x40029ea	            0x89f5	                            mov ebp, esi	      3232	channel.c	FUNCTION_77
0x40029ec	              0x53	                                push rbx	      3232	channel.c	FUNCTION_77
0x40029ed	    0x48be25732829	          movabs rsi, 0x6552203a29287325	      3233	channel.c	FUNCTION_77
0x40029f7	          0x4889fb	                            mov rbx, rdi	      3232	channel.c	FUNCTION_77
0x40029fa	          0x4189e8	                            mov r8d, ebp	      3237	channel.c	FUNCTION_77	CALL_1
0x40029fd	        0x4883ec40	                           sub rsp, 0x40	      3232	channel.c	FUNCTION_77
0x4002a01	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      3232	channel.c	FUNCTION_77
0x4002a0a	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      3232	channel.c	FUNCTION_77
0x4002a0f	            0x31c9	                            xor ecx, ecx	      3232	channel.c	FUNCTION_77
0x4002a11	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3233	channel.c	FUNCTION_77
0x4002a16	    0x48b961642025	          movabs rcx, 0x7266207325206461	      3233	channel.c	FUNCTION_77
0x4002a20	    0x48be6f6d2063	          movabs rsi, 0x61705f6863206d6f	      3233	channel.c	FUNCTION_77
0x4002a2a	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3233	channel.c	FUNCTION_77
0x4002a2f	      0x4889742420	             mov qword [rsp + 0x20], rsi	      3233	channel.c	FUNCTION_77
0x4002a34	    0x48b972745b25	          movabs rcx, 0x202c5d64255b7472	      3233	channel.c	FUNCTION_77
0x4002a3e	    0x48be636c6f73	            movabs rsi, 0x676e69736f6c63	      3233	channel.c	FUNCTION_77
0x4002a48	            0x85d2	                           test edx, edx	      3235	channel.c	FUNCTION_77	IF_1
0x4002a4a	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      3233	channel.c	FUNCTION_77
0x4002a4f	      0x4889742430	             mov qword [rsp + 0x30], rsi	      3233	channel.c	FUNCTION_77
0x4002a54	     0xf844e020000	                            je 0x4002ca8	      3235	channel.c	FUNCTION_77	IF_1
0x4002a5a	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3237	channel.c	FUNCTION_77	CALL_1
0x4002a5f	          0x4889c2	                            mov rdx, rax	      3237	channel.c	FUNCTION_77	CALL_1
0x4002a62	      0xb900000000	                              mov ecx, 0	      3237	channel.c	FUNCTION_77	CALL_1
0x4002a67	            0x31c0	                            xor eax, eax	      3237	channel.c	FUNCTION_77	CALL_1
0x4002a69	      0xe872f5ffff	                       call sym.ch_error	      3237	channel.c	FUNCTION_77	CALL_1
0x4002a6e	    0x4883bb780400	              cmp qword [rbx + 0x478], 0	      3252	channel.c	FUNCTION_77	IF_2
0x4002a76	     0xf843e010000	                            je 0x4002bba	      3252	channel.c	FUNCTION_77	IF_2
0x4002a7c	      0xbf20000000	                           mov edi, 0x20	      1798	channel.c	FUNCTION_50	CALL_1
0x4002a81	      0xe800000000	                          call 0x4002a86	      1798	channel.c	FUNCTION_50	CALL_1
0x4002a86	          0x4885c0	                           test rax, rax	      1799	channel.c	FUNCTION_50	IF_1
0x4002a89	          0x4989c4	                            mov r12, rax	      1798	channel.c	FUNCTION_50	CALL_1
0x4002a8c	     0xf8428010000	                            je 0x4002bba	      1799	channel.c	FUNCTION_50	IF_1
0x4002a92	      0xbf08000000	                              mov edi, 8	      1803	channel.c	FUNCTION_50	CALL_2
0x4002a97	      0xe800000000	                          call 0x4002a9c	      1803	channel.c	FUNCTION_50	CALL_2
0x4002a9c	          0x4885c0	                           test rax, rax	      1804	channel.c	FUNCTION_50	IF_2
0x4002a9f	        0x49890424	                    mov qword [r12], rax	      1803	channel.c	FUNCTION_50	CALL_2
0x4002aa3	     0xf841f030000	                            je 0x4002dc8	      1804	channel.c	FUNCTION_50	IF_2
0x4002aa9	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      1810	channel.c	FUNCTION_50	IF_3
0x4002aac	            0x85c9	                           test ecx, ecx	      1810	channel.c	FUNCTION_50	IF_3
0x4002aae	     0xf85d4020000	                           jne 0x4002d88	      1810	channel.c	FUNCTION_50	IF_3
0x4002ab4	          0xc60044	                    mov byte [rax], 0x44	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002ab7	        0xc6400145	                mov byte [rax + 1], 0x45	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002abb	        0x4883c007	                              add rax, 7	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002abf	        0xc640fb54	                mov byte [rax - 5], 0x54	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002ac3	        0xc640fc41	                mov byte [rax - 4], 0x41	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002ac7	        0xc640fd43	                mov byte [rax - 3], 0x43	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002acb	        0xc640fe48	                mov byte [rax - 2], 0x48	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002acf	        0xc640ff0a	                 mov byte [rax - 1], 0xa	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002ad3	          0xc60000	                       mov byte [rax], 0	      1817	channel.c	FUNCTION_50	IF_3
0x4002ad6	        0x492b0424	                    sub rax, qword [r12]	      1818	channel.c	FUNCTION_50	IF_3
0x4002ada	      0x4989442408	                mov qword [r12 + 8], rax	      1818	channel.c	FUNCTION_50	IF_3
0x4002adf	    0x49c744241000	               mov qword [r12 + 0x10], 0	      1841	channel.c	FUNCTION_50	ELSE_3
0x4002ae8	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1842	channel.c	FUNCTION_50	ELSE_3
0x4002aec	      0x4989442418	             mov qword [r12 + 0x18], rax	      1842	channel.c	FUNCTION_50	ELSE_3
0x4002af1	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4002af5	          0x4885c0	                           test rax, rax	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4002af8	     0xf84ba020000	                            je 0x4002db8	      1843	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4002afe	        0x4c896010	             mov qword [rax + 0x10], r12	      1846	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4002b02	    0x48833d000000	               cmp qword [0x04002b0a], 0	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x4002b0a	        0x4c896348	             mov qword [rbx + 0x48], r12	      1847	channel.c	FUNCTION_50	ELSE_3	ELSE_4
0x4002b0e	     0xf84a6000000	                            je 0x4002bba	      1850	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_5
0x4002b14	          0x4889e7	                            mov rdi, rsp	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4002b17	      0xe800000000	                          call 0x4002b1c	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x4002b1c	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4002b21	          0x4889e7	                            mov rdi, rsp	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4002b24	      0xe800000000	                          call 0x4002b29	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x4002b29	          0x4889e7	                            mov rdi, rsp	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x4002b2c	      0xe800000000	                          call 0x4002b31	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x4002b31	    0x488b3d000000	            mov rdi, qword [0x04002b38] 	        97	stdio2.h	CALL_20
0x4002b38	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_20
0x4002b3b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4002b40	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002b45	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x4002b47	      0xe800000000	                          call 0x4002b4c	        97	stdio2.h	CALL_20
0x4002b4c	        0x448b4310	            mov r8d, dword [rbx + 0x10] 	        97	stdio2.h	CALL_20
0x4002b50	    0x488b3d000000	            mov rdi, qword [0x04002b57] 	        97	stdio2.h	CALL_20
0x4002b57	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_20
0x4002b5c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4002b61	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002b66	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x4002b68	      0xe800000000	                          call 0x4002b6d	        97	stdio2.h	CALL_20
0x4002b6d	    0x488b35000000	            mov rsi, qword [0x04002b74] 	        97	stdio2.h	CALL_20
0x4002b74	      0xbf27000000	                           mov edi, 0x27	        97	stdio2.h	CALL_20
0x4002b79	      0xe800000000	                          call 0x4002b7e	        97	stdio2.h	CALL_20
0x4002b7e	    0x488b0d000000	            mov rcx, qword [0x04002b85] 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4002b85	      0xba01000000	                              mov edx, 1	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4002b8a	      0xbe07000000	                              mov esi, 7	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4002b8f	      0xbf00000000	                              mov edi, 0	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4002b94	      0xe800000000	                          call 0x4002b99	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4002b99	    0x488b0d000000	            mov rcx, qword [0x04002ba0] 	        97	stdio2.h	CALL_20
0x4002ba0	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_20
0x4002ba5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x4002baa	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x4002baf	    0x890500000000	            mov dword [0x04002bb5], eax 	      1854	channel.c	FUNCTION_50	ELSE_4	IF_8	CALL_7
0x4002bb5	      0xe800000000	                          call 0x4002bba	        97	stdio2.h	CALL_20
0x4002bba	          0x8d45ff	                      lea eax, [rbp - 1]	      3260	channel.c	FUNCTION_77	IF_3
0x4002bbd	          0x4189ec	                           mov r12d, ebp	      3260	channel.c	FUNCTION_77	IF_3
0x4002bc0	          0x83f801	                              cmp eax, 1	      3260	channel.c	FUNCTION_77	IF_3
0x4002bc3	     0xf86ff000000	                           jbe 0x4002cc8	      3260	channel.c	FUNCTION_77	IF_3
0x4002bc9	          0x4c89e2	                            mov rdx, r12	      3260	channel.c	FUNCTION_77	IF_3
0x4002bcc	          0x4c89e0	                            mov rax, r12	      3260	channel.c	FUNCTION_77	IF_3
0x4002bcf	        0x48c1e204	                              shl rdx, 4	      3260	channel.c	FUNCTION_77	IF_3
0x4002bd3	        0x48c1e008	                              shl rax, 8	      3260	channel.c	FUNCTION_77	IF_3
0x4002bd7	          0x4801d0	                            add rax, rdx	      3260	channel.c	FUNCTION_77	IF_3
0x4002bda	        0x8b7c0318	      mov edi, dword [rbx + rax + 0x18] 	      3260	channel.c	FUNCTION_77	IF_3
0x4002bde	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4002be1	            0x745c	                            je 0x4002c3f	       988	channel.c	FUNCTION_29	IF_1
0x4002be3	            0x85ed	                           test ebp, ebp	       990	channel.c	FUNCTION_29	IF_1	IF_2
0x4002be5	            0x742b	                            je 0x4002c12	       990	channel.c	FUNCTION_29	IF_1	IF_2
0x4002be7	          0x83fd03	                              cmp ebp, 3	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002bea	     0xf8478010000	                            je 0x4002d68	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002bf0	    0x3bbb48030000	           cmp edi, dword [rbx + 0x348] 	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002bf6	            0x741f	                            je 0x4002c17	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002bf8	          0x83fd01	                              cmp ebp, 1	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002bfb	            0x740d	                            je 0x4002c0a	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002bfd	    0x3bbb28010000	           cmp edi, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002c03	            0x7412	                            je 0x4002c17	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002c05	          0x83fd02	                              cmp ebp, 2	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002c08	            0x7408	                            je 0x4002c12	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002c0a	    0x3bbb38020000	           cmp edi, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002c10	            0x7405	                            je 0x4002c17	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002c12	      0xe800000000	                          call 0x4002c17	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002c17	          0x4c89e2	                            mov rdx, r12	      1007	channel.c	FUNCTION_29	IF_1
0x4002c1a	          0x4c89e0	                            mov rax, r12	      1007	channel.c	FUNCTION_29	IF_1
0x4002c1d	            0x89e9	                            mov ecx, ebp	      1010	channel.c	FUNCTION_29	IF_1
0x4002c1f	        0x48c1e204	                              shl rdx, 4	      1007	channel.c	FUNCTION_29	IF_1
0x4002c23	        0x48c1e008	                              shl rax, 8	      1007	channel.c	FUNCTION_29	IF_1
0x4002c27	          0x4801d0	                            add rax, rdx	      1007	channel.c	FUNCTION_29	IF_1
0x4002c2a	    0xc7440318ffff	mov dword [rbx + rax + 0x18], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x4002c32	      0xb8feffffff	                     mov eax, 0xfffffffe	      1010	channel.c	FUNCTION_29	IF_1
0x4002c37	            0xd3c0	                             rol eax, cl	      1010	channel.c	FUNCTION_29	IF_1
0x4002c39	    0x21836c040000	            and dword [rbx + 0x46c], eax	      1010	channel.c	FUNCTION_29	IF_1
0x4002c3f	          0x4c89e5	                            mov rbp, r12	       614	channel.c	FUNCTION_25	IF_2
0x4002c42	          0x4c89e0	                            mov rax, r12	       614	channel.c	FUNCTION_25	IF_2
0x4002c45	        0x48c1e008	                              shl rax, 8	       614	channel.c	FUNCTION_25	IF_2
0x4002c49	        0x48c1e504	                              shl rbp, 4	       614	channel.c	FUNCTION_25	IF_2
0x4002c4d	          0x4801c5	                            add rbp, rax	       614	channel.c	FUNCTION_25	IF_2
0x4002c50	          0x4801dd	                            add rbp, rbx	       614	channel.c	FUNCTION_25	IF_2
0x4002c53	          0x8b451c	            mov eax, dword [rbp + 0x1c] 	       614	channel.c	FUNCTION_25	IF_2
0x4002c56	            0x85c0	                           test eax, eax	       614	channel.c	FUNCTION_25	IF_2
0x4002c58	            0x7426	                            je 0x4002c80	       614	channel.c	FUNCTION_25	IF_2
0x4002c5a	    0x4a8b14e50000	                  mov rdx, qword [r12*8]	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4002c62	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4002c67	          0x4889df	                            mov rdi, rbx	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4002c6a	            0x31c0	                            xor eax, eax	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4002c6c	      0xe800000000	                          call 0x4002c71	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4002c71	          0x8b7d1c	            mov edi, dword [rbp + 0x1c] 	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4002c74	      0xe800000000	                          call 0x4002c79	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4002c79	    0xc7451c000000	               mov dword [rbp + 0x1c], 0	       622	channel.c	FUNCTION_25	IF_2
0x4002c80	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3273	channel.c	FUNCTION_77
0x4002c85	    0x644833042528	                xor rax, qword fs:[0x28]	      3273	channel.c	FUNCTION_77
0x4002c8e	     0xf8552010000	                           jne 0x4002de6	      3273	channel.c	FUNCTION_77
0x4002c94	        0x4883c440	                           add rsp, 0x40	      3273	channel.c	FUNCTION_77
0x4002c98	              0x5b	                                 pop rbx	      3273	channel.c	FUNCTION_77
0x4002c99	              0x5d	                                 pop rbp	      3273	channel.c	FUNCTION_77
0x4002c9a	            0x415c	                                 pop r12	      3273	channel.c	FUNCTION_77
0x4002c9c	            0x415d	                                 pop r13	      3273	channel.c	FUNCTION_77
0x4002c9e	            0x415e	                                 pop r14	      3273	channel.c	FUNCTION_77
0x4002ca0	              0xc3	                                     ret	      3273	channel.c	FUNCTION_77
0x4002ca1	     0xf1f80000000	                         nop dword [rax]	      3273	channel.c	FUNCTION_77
0x4002ca8	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3239	channel.c	FUNCTION_77	CALL_2
0x4002cad	          0x4889c2	                            mov rdx, rax	      3239	channel.c	FUNCTION_77	CALL_2
0x4002cb0	      0xb900000000	                              mov ecx, 0	      3239	channel.c	FUNCTION_77	CALL_2
0x4002cb5	            0x31c0	                            xor eax, eax	      3239	channel.c	FUNCTION_77	CALL_2
0x4002cb7	      0xe800000000	                          call 0x4002cbc	      3239	channel.c	FUNCTION_77	CALL_2
0x4002cbc	      0xe9adfdffff	                           jmp 0x4002a6e	      3239	channel.c	FUNCTION_77	CALL_2
0x4002cc1	     0xf1f80000000	                         nop dword [rax]	      3239	channel.c	FUNCTION_77	CALL_2
0x4002cc8	          0x4531f6	                          xor r14d, r14d	      3262	channel.c	FUNCTION_77	IF_3
0x4002ccb	          0x83fd01	                              cmp ebp, 1	      3262	channel.c	FUNCTION_77	IF_3
0x4002cce	          0x4189ec	                           mov r12d, ebp	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002cd1	           0xf94c0	                                 sete al	      3262	channel.c	FUNCTION_77	IF_3
0x4002cd4	          0x4c89e1	                            mov rcx, r12	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002cd7	          0x4c89e2	                            mov rdx, r12	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002cda	           0xfb6c0	                           movzx eax, al	      3262	channel.c	FUNCTION_77	IF_3
0x4002cdd	        0x410f95c6	                              setne r14b	      3262	channel.c	FUNCTION_77	IF_3
0x4002ce1	        0x48c1e104	                              shl rcx, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002ce5	        0x448d6801	                     lea r13d, [rax + 1]	      3262	channel.c	FUNCTION_77	IF_3
0x4002ce9	        0x48c1e208	                              shl rdx, 8	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002ced	      0x478d7436fb	               lea r14d, [r14 + r14 - 5]	      3262	channel.c	FUNCTION_77	IF_3
0x4002cf2	          0x4801ca	                            add rdx, rcx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002cf5	        0x8b7c1318	      mov edi, dword [rbx + rdx + 0x18] 	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002cf9	          0x4c89e9	                            mov rcx, r13	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002cfc	          0x4c89ea	                            mov rdx, r13	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002cff	        0x48c1e104	                              shl rcx, 4	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002d03	        0x48c1e208	                              shl rdx, 8	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002d07	          0x4801ca	                            add rdx, rcx	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002d0a	        0x8b541318	      mov edx, dword [rbx + rdx + 0x18] 	      3264	channel.c	FUNCTION_77	IF_3	IF_4
0x4002d0e	          0x83faff	             cmp edx, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4002d11	     0xf84c7feffff	                            je 0x4002bde	       988	channel.c	FUNCTION_29	IF_1
0x4002d17	            0x39d7	                            cmp edi, edx	       988	channel.c	FUNCTION_29	IF_1
0x4002d19	     0xf85bffeffff	                           jne 0x4002bde	       988	channel.c	FUNCTION_29	IF_1
0x4002d1f	    0x3b9348030000	           cmp edx, dword [rbx + 0x348] 	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d25	            0x7419	                            je 0x4002d40	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d27	        0x4183fd01	                             cmp r13d, 1	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d2b	     0xf84a4000000	                            je 0x4002dd5	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d31	    0x3b9328010000	           cmp edx, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d37	            0x7407	                            je 0x4002d40	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d39	            0x89d7	                            mov edi, edx	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d3b	      0xe800000000	                          call 0x4002d40	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d40	          0x4c89e8	                            mov rax, r13	      1007	channel.c	FUNCTION_29	IF_1
0x4002d43	        0x49c1e508	                              shl r13, 8	      1007	channel.c	FUNCTION_29	IF_1
0x4002d47	        0x48c1e004	                              shl rax, 4	      1007	channel.c	FUNCTION_29	IF_1
0x4002d4b	          0x4c01e8	                            add rax, r13	      1007	channel.c	FUNCTION_29	IF_1
0x4002d4e	    0xc7440318ffff	mov dword [rbx + rax + 0x18], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x4002d56	    0x4421b36c0400	           and dword [rbx + 0x46c], r14d	      1010	channel.c	FUNCTION_29	IF_1
0x4002d5d	      0xe967feffff	                           jmp 0x4002bc9	      1010	channel.c	FUNCTION_29	IF_1
0x4002d62	    0x660f1f440000	                    nop word [rax + rax]	      1010	channel.c	FUNCTION_29	IF_1
0x4002d68	    0x3bbb28010000	           cmp edi, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d6e	     0xf84a3feffff	                            je 0x4002c17	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d74	    0x3bbb38020000	           cmp edi, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d7a	     0xf8592feffff	                           jne 0x4002c12	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d80	      0xe992feffff	                           jmp 0x4002c17	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d85	           0xf1f00	                         nop dword [rax]	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002d88	      0xba43480000	                         mov edx, 0x4843	        59	string3.h	FUNCTION_136	CALL_3
0x4002d8d	    0xc70044455441	            mov dword [rax], 0x41544544 	        59	string3.h	FUNCTION_136	CALL_3
0x4002d93	        0xc640060a	                 mov byte [rax + 6], 0xa	        59	string3.h	FUNCTION_136	CALL_3
0x4002d97	        0x66895004	                  mov word [rax + 4], dx	        59	string3.h	FUNCTION_136	CALL_3
0x4002d9b	        0x498b0424	                    mov rax, qword [r12]	      1823	channel.c	FUNCTION_50	ELSE_1
0x4002d9f	        0xc6400700	                   mov byte [rax + 7], 0	      1823	channel.c	FUNCTION_50	ELSE_1
0x4002da3	    0x49c744240807	                  mov qword [r12 + 8], 7	      1824	channel.c	FUNCTION_50	ELSE_1
0x4002dac	      0xe92efdffff	                           jmp 0x4002adf	      1824	channel.c	FUNCTION_50	ELSE_1
0x4002db1	     0xf1f80000000	                         nop dword [rax]	      1824	channel.c	FUNCTION_50	ELSE_1
0x4002db8	        0x4c896340	             mov qword [rbx + 0x40], r12	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4002dbc	      0xe941fdffff	                           jmp 0x4002b02	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4002dc1	     0xf1f80000000	                         nop dword [rax]	      1844	channel.c	FUNCTION_50	ELSE_3	IF_7
0x4002dc8	          0x4c89e7	                            mov rdi, r12	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x4002dcb	      0xe800000000	                          call 0x4002dd0	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x4002dd0	      0xe9e5fdffff	                           jmp 0x4002bba	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x4002dd5	    0x3b9338020000	           cmp edx, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002ddb	     0xf8558ffffff	                           jne 0x4002d39	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002de1	      0xe95affffff	                           jmp 0x4002d40	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4002de6	      0xe800000000	                          call 0x4002deb	      3273	channel.c	FUNCTION_77
channel_read_json_block	WHILE,0:FOR,1:CALL,9:IF,10:ELSE,2:functions,0:DO,0:SWITCH,0	191
0x400a3d0	            0x4157	                                push r15	      3451	channel.c	FUNCTION_81
0x400a3d2	            0x4156	                                push r14	      3451	channel.c	FUNCTION_81
0x400a3d4	            0x4155	                                push r13	      3451	channel.c	FUNCTION_81
0x400a3d6	            0x4154	                                push r12	      3451	channel.c	FUNCTION_81
0x400a3d8	          0x4189cc	                           mov r12d, ecx	      3451	channel.c	FUNCTION_81
0x400a3db	              0x55	                                push rbp	      3451	channel.c	FUNCTION_81
0x400a3dc	              0x53	                                push rbx	      3451	channel.c	FUNCTION_81
0x400a3dd	            0x89f3	                            mov ebx, esi	      3451	channel.c	FUNCTION_81
0x400a3df	          0x4889fd	                            mov rbp, rdi	      3451	channel.c	FUNCTION_81
0x400a3e2	            0x89db	                            mov ebx, ebx	      3451	channel.c	FUNCTION_81
0x400a3e4	        0x4883ec48	                           sub rsp, 0x48	      3451	channel.c	FUNCTION_81
0x400a3e8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3451	channel.c	FUNCTION_81
0x400a3f1	      0x4889442438	             mov qword [rsp + 0x38], rax	      3451	channel.c	FUNCTION_81
0x400a3f6	            0x31c0	                            xor eax, eax	      3451	channel.c	FUNCTION_81
0x400a3f8	        0x89742410	             mov dword [rsp + 0x10], esi	      3451	channel.c	FUNCTION_81
0x400a3fc	      0xbe00000000	                              mov esi, 0	      3457	channel.c	FUNCTION_81	CALL_1
0x400a401	        0x89542414	             mov dword [rsp + 0x14], edx	      3451	channel.c	FUNCTION_81
0x400a405	        0x4c890424	                     mov qword [rsp], r8	      3451	channel.c	FUNCTION_81
0x400a409	      0xe800000000	                          call 0x400a40e	      3457	channel.c	FUNCTION_81	CALL_1
0x400a40e	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      3458	channel.c	FUNCTION_81	IF_1
0x400a412	            0x7416	                            je 0x400a42a	      3458	channel.c	FUNCTION_81	IF_1
0x400a414	          0x4889da	                            mov rdx, rbx	      3459	channel.c	FUNCTION_81	IF_1
0x400a417	          0x4889d8	                            mov rax, rbx	      3459	channel.c	FUNCTION_81	IF_1
0x400a41a	        0x48c1e204	                              shl rdx, 4	      3459	channel.c	FUNCTION_81	IF_1
0x400a41e	        0x48c1e008	                              shl rax, 8	      3459	channel.c	FUNCTION_81	IF_1
0x400a422	          0x4801d0	                            add rax, rdx	      3459	channel.c	FUNCTION_81	IF_1
0x400a425	      0x4489640570	     mov dword [rbp + rax + 0x70], r12d 	      3459	channel.c	FUNCTION_81	IF_1
0x400a42a	          0x4989d8	                             mov r8, rbx	      3459	channel.c	FUNCTION_81	IF_1
0x400a42d	          0x4889d8	                            mov rax, rbx	      3459	channel.c	FUNCTION_81	IF_1
0x400a430	        0x48c1e008	                              shl rax, 8	      3459	channel.c	FUNCTION_81	IF_1
0x400a434	        0x49c1e004	                               shl r8, 4	      3459	channel.c	FUNCTION_81	IF_1
0x400a438	          0x4901c0	                             add r8, rax	      3459	channel.c	FUNCTION_81	IF_1
0x400a43b	      0x4a8d440550	              lea rax, [rbp + r8 + 0x50]	      3459	channel.c	FUNCTION_81	IF_1
0x400a440	      0x4e8d740500	                     lea r14, [rbp + r8]	      2103	channel.c	FUNCTION_55
0x400a445	      0x4889442408	                mov qword [rsp + 8], rax	      2103	channel.c	FUNCTION_55
0x400a44a	          0x4d63ec	                        movsxd r13, r12d	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a44d	           0xf1f00	                         nop dword [rax]	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a450	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x400a454	          0x4889ef	                            mov rdi, rbp	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x400a457	      0xe89480ffff	             call sym.channel_parse_json	      3462	channel.c	FUNCTION_81	FOR_1	CALL_2
0x400a45c	        0x4d8b7e58	            mov r15, qword [r14 + 0x58] 	      2103	channel.c	FUNCTION_55
0x400a460	          0x4d85ff	                           test r15, r15	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a463	     0xf8417010000	                            je 0x400a580	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a469	          0x4585e4	                         test r12d, r12d	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a46c	            0x7f17	                            jg 0x400a485	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a46e	      0xe98c000000	                           jmp 0x400a4ff	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a473	       0xf1f440000	                   nop dword [rax + rax]	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a478	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x400a47c	          0x4d85ff	                           test r15, r15	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a47f	     0xf84fb000000	                            je 0x400a580	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a485	          0x498b37	                    mov rsi, qword [r15]	      2107	channel.c	FUNCTION_55	WHILE_1
0x400a488	        0x488b5608	                mov rdx, qword [rsi + 8]	      2108	channel.c	FUNCTION_55	WHILE_1
0x400a48c	          0x488b12	                    mov rdx, qword [rdx]	      2108	channel.c	FUNCTION_55	WHILE_1
0x400a48f	        0x837a1001	               cmp dword [rdx + 0x10], 1	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a493	            0x75e3	                           jne 0x400a478	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a495	        0x4c396a18	            cmp qword [rdx + 0x18], r13 	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a499	            0x75dd	                           jne 0x400a478	      2111	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a49b	        0x488b0424	                    mov rax, qword [rsp]	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a49f	          0x4889ef	                            mov rdi, rbp	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400a4a2	          0x488930	                    mov qword [rax], rsi	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a4a5	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400a4a9	            0x31c0	                            xor eax, eax	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400a4ab	      0xbe00000000	                              mov esi, 0	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400a4b0	      0xe800000000	                          call 0x400a4b5	      2118	channel.c	FUNCTION_55	WHILE_1	IF_1	IF_2	CALL_1
0x400a4b5	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a4b9	        0x498b5708	                mov rdx, qword [r15 + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a4bd	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a4c0	            0x7561	                           jne 0x400a523	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a4c2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a4c7	        0x48895108	                mov qword [rcx + 8], rdx	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a4cb	        0x498b5708	                mov rdx, qword [r15 + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a4cf	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a4d2	            0x755c	                           jne 0x400a530	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a4d4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a4d9	        0x48894110	             mov qword [rcx + 0x10], rax	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a4dd	            0xeb55	                           jmp 0x400a534	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a4df	              0x90	                                     nop	      2079	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a4e0	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a4e4	          0x4885ff	                           test rdi, rdi	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a4e7	            0x74b2	                            je 0x400a49b	      2113	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a4e9	        0x4d635670	         movsxd r10, dword [r14 + 0x70] 	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a4ed	          0x4939fa	                            cmp r10, rdi	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a4f0	            0x75a9	                           jne 0x400a49b	      2114	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a4f2	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      2123	channel.c	FUNCTION_55	WHILE_1
0x400a4f6	          0x4d85ff	                           test r15, r15	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a4f9	     0xf8481000000	                            je 0x400a580	      2105	channel.c	FUNCTION_55	WHILE_1
0x400a4ff	          0x498b37	                    mov rsi, qword [r15]	      2107	channel.c	FUNCTION_55	WHILE_1
0x400a502	        0x488b5608	                mov rdx, qword [rsi + 8]	      2108	channel.c	FUNCTION_55	WHILE_1
0x400a506	          0x488b12	                    mov rdx, qword [rdx]	      2108	channel.c	FUNCTION_55	WHILE_1
0x400a509	        0x837a1001	               cmp dword [rdx + 0x10], 1	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a50d	            0x74d1	                            je 0x400a4e0	      2112	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a50f	        0x488b0424	                    mov rax, qword [rsp]	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a513	          0x488930	                    mov qword [rax], rsi	      2116	channel.c	FUNCTION_55	WHILE_1	IF_1
0x400a516	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a51a	        0x498b5708	                mov rdx, qword [r15 + 8]	      2075	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a51e	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a521	            0x749f	                            je 0x400a4c2	      2074	channel.c	ELSE_2	FUNCTION_54	IF_1
0x400a523	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_54	ELSE_1
0x400a527	        0x498b5708	                mov rdx, qword [r15 + 8]	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a52b	          0x4885d2	                           test rdx, rdx	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a52e	            0x74a4	                            je 0x400a4d4	      2078	channel.c	ELSE_2	FUNCTION_54	IF_2
0x400a530	        0x48894210	             mov qword [rdx + 0x10], rax	      2081	channel.c	FUNCTION_54	ELSE_2
0x400a534	          0x4c89ff	                            mov rdi, r15	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x400a537	    0x41bf01000000	                             mov r15d, 1	      3468	channel.c	FUNCTION_81	FOR_1	IF_2
0x400a53d	      0xe800000000	                          call 0x400a542	      2082	channel.c	FUNCTION_54	ELSE_2	CALL_1
0x400a542	          0x4889d8	                            mov rax, rbx	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400a545	        0x48c1e308	                              shl rbx, 8	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400a549	        0x48c1e004	                              shl rax, 4	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400a54d	          0x4801c3	                            add rbx, rax	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400a550	    0xc7441d700000	        mov dword [rbp + rbx + 0x70], 0 	      3467	channel.c	FUNCTION_81	FOR_1	IF_2
0x400a558	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3524	channel.c	FUNCTION_81
0x400a55d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3524	channel.c	FUNCTION_81
0x400a566	          0x4489f8	                           mov eax, r15d	      3524	channel.c	FUNCTION_81
0x400a569	     0xf8533010000	                           jne 0x400a6a2	      3524	channel.c	FUNCTION_81
0x400a56f	        0x4883c448	                           add rsp, 0x48	      3524	channel.c	FUNCTION_81
0x400a573	              0x5b	                                 pop rbx	      3524	channel.c	FUNCTION_81
0x400a574	              0x5d	                                 pop rbp	      3524	channel.c	FUNCTION_81
0x400a575	            0x415c	                                 pop r12	      3524	channel.c	FUNCTION_81
0x400a577	            0x415d	                                 pop r13	      3524	channel.c	FUNCTION_81
0x400a579	            0x415e	                                 pop r14	      3524	channel.c	FUNCTION_81
0x400a57b	            0x415f	                                 pop r15	      3524	channel.c	FUNCTION_81
0x400a57d	              0xc3	                                     ret	      3524	channel.c	FUNCTION_81
0x400a57e	            0x6690	                                     nop	      3524	channel.c	FUNCTION_81
0x400a580	            0x85c0	                           test eax, eax	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x400a582	     0xf85c8feffff	                           jne 0x400a450	      3471	channel.c	FUNCTION_81	FOR_1	IF_3
0x400a588	      0xe800000000	                          call 0x400a58d	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x400a58d	            0x85c0	                           test eax, eax	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x400a58f	          0x4189c7	                           mov r15d, eax	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x400a592	     0xf85b2feffff	                           jne 0x400a44a	      3475	channel.c	FUNCTION_81	FOR_1	IF_3	IF_4	CALL_4
0x400a598	      0x49837e7800	               cmp qword [r14 + 0x78], 0	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a59d	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a5a2	            0x7574	                           jne 0x400a618	      3481	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a5a4	        0x458b5618	           mov r10d, dword [r14 + 0x18] 	      3507	channel.c	FUNCTION_81	FOR_1	IF_3
0x400a5a8	        0x4183faff	            cmp r10d, 0xffffffffffffffff	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x400a5ac	            0x742a	                            je 0x400a5d8	      3508	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8
0x400a5ae	          0x4489ca	                            mov edx, r9d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5b1	          0x4489d6	                           mov esi, r10d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5b4	          0x4889ef	                            mov rdi, rbp	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5b7	      0x44894c241c	             mov dword [rsp + 0x1c], r9d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5bc	      0x4489542418	            mov dword [rsp + 0x18], r10d	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5c1	      0xe82ab7ffff	                   call sym.channel_wait	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5c6	            0x85c0	                           test eax, eax	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5c8	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5cd	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5d2	     0xf84a2000000	                            je 0x400a67a	      3509	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	CALL_7
0x400a5d8	      0x443b4c2414	            cmp r9d, dword [rsp + 0x14] 	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x400a5dd	     0xf8567feffff	                           jne 0x400a44a	      3511	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9
0x400a5e3	        0x4183faff	            cmp r10d, 0xffffffffffffffff	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x400a5e7	            0x740f	                            je 0x400a5f8	      3513	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	IF_10
0x400a5e9	      0xbe00000000	                              mov esi, 0	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x400a5ee	          0x4889ef	                            mov rdi, rbp	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x400a5f1	            0x31c0	                            xor eax, eax	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x400a5f3	      0xe800000000	                          call 0x400a5f8	      3514	channel.c	FUNCTION_81	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x400a5f8	          0x4889d8	                            mov rax, rbx	      3522	channel.c	FUNCTION_81
0x400a5fb	        0x48c1e308	                              shl rbx, 8	      3522	channel.c	FUNCTION_81
0x400a5ff	        0x48c1e004	                              shl rax, 4	      3522	channel.c	FUNCTION_81
0x400a603	          0x4801d8	                            add rax, rbx	      3522	channel.c	FUNCTION_81
0x400a606	    0xc74405700000	        mov dword [rbp + rax + 0x70], 0 	      3522	channel.c	FUNCTION_81
0x400a60e	      0xe945ffffff	                           jmp 0x400a558	      3523	channel.c	FUNCTION_81
0x400a613	       0xf1f440000	                   nop dword [rax + rax]	      3523	channel.c	FUNCTION_81
0x400a618	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x400a61d	            0x31f6	                            xor esi, esi	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x400a61f	      0xe800000000	                          call 0x400a624	      3489	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	CALL_6
0x400a624	    0x498bbe880000	            mov rdi, qword [r14 + 0x88] 	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a62b	      0x482b7c2428	             sub rdi, qword [rsp + 0x28]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a630	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a63a	    0x498bb6800000	            mov rsi, qword [r14 + 0x80] 	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a641	      0x482b742420	             sub rsi, qword [rsp + 0x20]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a646	          0x4889f8	                            mov rax, rdi	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a649	        0x48c1ff3f	                           sar rdi, 0x3f	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a64d	          0x48f7ea	                                imul rdx	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a650	    0x69f6e8030000	                    imul esi, esi, 0x3e8	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a656	          0x4889d0	                            mov rax, rdx	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a659	        0x48c1f807	                              sar rax, 7	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a65d	          0x4829f8	                            sub rax, rdi	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a660	      0x448d4c0601	                lea r9d, [rsi + rax + 1]	      3490	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5
0x400a665	          0x4585c9	                           test r9d, r9d	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a668	            0x7826	                            js 0x400a690	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a66a	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a66e	          0x4439c8	                            cmp eax, r9d	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a671	        0x440f4ec8	                         cmovle r9d, eax	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a675	      0xe92affffff	                           jmp 0x400a5a4	      3497	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a67a	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x400a67e	      0xba00000000	                              mov edx, 0	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x400a683	          0x4889ef	                            mov rdi, rbp	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x400a686	      0xe875b2ffff	                   call sym.channel_read	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x400a68b	      0xe9bafdffff	                           jmp 0x400a44a	      3519	channel.c	FUNCTION_81	FOR_1	IF_3	CALL_9
0x400a690	    0x49c746780000	               mov qword [r14 + 0x78], 0	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a698	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a69d	      0xe902ffffff	                           jmp 0x400a5a4	      3501	channel.c	FUNCTION_81	FOR_1	IF_3	IF_5	IF_6
0x400a6a2	      0xe800000000	                          call 0x400a6a7	      3524	channel.c	FUNCTION_81
ch_logfile	WHILE,0:FOR,0:CALL,5:IF,4:ELSE,0:functions,0:DO,0:SWITCH,0	47
0x4002170	              0x55	                                push rbp	       108	channel.c	FUNCTION_1
0x4002171	              0x53	                                push rbx	       108	channel.c	FUNCTION_1
0x4002172	          0x4889fb	                            mov rbx, rdi	       108	channel.c	FUNCTION_1
0x4002175	          0x4889f5	                            mov rbp, rsi	       108	channel.c	FUNCTION_1
0x4002178	        0x4883ec08	                              sub rsp, 8	       108	channel.c	FUNCTION_1
0x400217c	    0x488b3d000000	            mov rdi, qword [0x04002183] 	       111	channel.c	FUNCTION_1	IF_1
0x4002183	          0x4885ff	                           test rdi, rdi	       111	channel.c	FUNCTION_1	IF_1
0x4002186	            0x7405	                            je 0x400218d	       111	channel.c	FUNCTION_1	IF_1
0x4002188	      0xe800000000	                          call 0x400218d	       112	channel.c	FUNCTION_1	CALL_1
0x400218d	          0x803b00	                       cmp byte [rbx], 0	       114	channel.c	FUNCTION_1	IF_2
0x4002190	            0x744e	                            je 0x40021e0	       114	channel.c	FUNCTION_1	IF_2
0x4002192	        0x807d0077	                    cmp byte [rbp], 0x77	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x4002196	      0xb800000000	                              mov eax, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x400219b	      0xbe00000000	                              mov esi, 0	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x40021a0	          0x4889df	                            mov rdi, rbx	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x40021a3	        0x480f44f0	                          cmove rsi, rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x40021a7	      0xe800000000	                          call 0x40021ac	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x40021ac	          0x4885c0	                           test rax, rax	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x40021af	          0x4889c1	                            mov rcx, rax	       116	channel.c	FUNCTION_1	IF_2	CALL_2
0x40021b2	            0x7444	                            je 0x40021f8	       117	channel.c	FUNCTION_1	IF_2	IF_3
0x40021b4	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_20
0x40021b9	      0xba1c000000	                           mov edx, 0x1c	        97	stdio2.h	CALL_20
0x40021be	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40021c3	    0x488905000000	            mov qword [0x040021ca], rax 	       123	channel.c	FUNCTION_1
0x40021ca	      0xe800000000	                          call 0x40021cf	        97	stdio2.h	CALL_20
0x40021cf	        0x4883c408	                              add rsp, 8	       132	channel.c	FUNCTION_1
0x40021d3	      0xbf00000000	                              mov edi, 0	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x40021d8	              0x5b	                                 pop rbx	       132	channel.c	FUNCTION_1
0x40021d9	              0x5d	                                 pop rbp	       132	channel.c	FUNCTION_1
0x40021da	      0xe900000000	                           jmp 0x40021df	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x40021df	              0x90	                                     nop	       129	channel.c	FUNCTION_1	IF_4	CALL_5
0x40021e0	    0x48c705000000	               mov qword [0x040021eb], 0	       123	channel.c	FUNCTION_1
0x40021eb	        0x4883c408	                              add rsp, 8	       132	channel.c	FUNCTION_1
0x40021ef	              0x5b	                                 pop rbx	       132	channel.c	FUNCTION_1
0x40021f0	              0x5d	                                 pop rbp	       132	channel.c	FUNCTION_1
0x40021f1	              0xc3	                                     ret	       132	channel.c	FUNCTION_1
0x40021f2	    0x660f1f440000	                    nop word [rax + rax]	       132	channel.c	FUNCTION_1
0x40021f8	      0xbe00000000	                              mov esi, 0	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40021fd	            0x31ff	                            xor edi, edi	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40021ff	      0xba05000000	                              mov edx, 5	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4002204	      0xe800000000	                          call 0x4002209	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4002209	        0x4883c408	                              add rsp, 8	       132	channel.c	FUNCTION_1
0x400220d	          0x4889de	                            mov rsi, rbx	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4002210	          0x4889c7	                            mov rdi, rax	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4002213	              0x5b	                                 pop rbx	       132	channel.c	FUNCTION_1
0x4002214	              0x5d	                                 pop rbp	       132	channel.c	FUNCTION_1
0x4002215	      0xe900000000	                           jmp 0x400221a	       119	channel.c	FUNCTION_1	IF_2	IF_3	CALL_4
ch_log	WHILE,0:FOR,0:CALL,6:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	79
0x4002230	              0x55	                                push rbp	       164	channel.c	FUNCTION_4
0x4002231	              0x53	                                push rbx	       164	channel.c	FUNCTION_4
0x4002232	          0x4889f5	                            mov rbp, rsi	       164	channel.c	FUNCTION_4
0x4002235	          0x4889fb	                            mov rbx, rdi	       164	channel.c	FUNCTION_4
0x4002238	    0x4881ece80000	                           sub rsp, 0xe8	       164	channel.c	FUNCTION_4
0x400223f	            0x84c0	                             test al, al	       164	channel.c	FUNCTION_4
0x4002241	      0x4889542440	             mov qword [rsp + 0x40], rdx	       164	channel.c	FUNCTION_4
0x4002246	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       164	channel.c	FUNCTION_4
0x400224b	      0x4c89442450	              mov qword [rsp + 0x50], r8	       164	channel.c	FUNCTION_4
0x4002250	      0x4c894c2458	              mov qword [rsp + 0x58], r9	       164	channel.c	FUNCTION_4
0x4002255	            0x743a	                            je 0x4002291	       164	channel.c	FUNCTION_4
0x4002257	       0xf29442460	       movaps xmmword [rsp + 0x60], xmm0	       164	channel.c	FUNCTION_4
0x400225c	       0xf294c2470	       movaps xmmword [rsp + 0x70], xmm1	       164	channel.c	FUNCTION_4
0x4002261	     0xf2994248000	       movaps xmmword [rsp + 0x80], xmm2	       164	channel.c	FUNCTION_4
0x4002269	     0xf299c249000	       movaps xmmword [rsp + 0x90], xmm3	       164	channel.c	FUNCTION_4
0x4002271	     0xf29a424a000	       movaps xmmword [rsp + 0xa0], xmm4	       164	channel.c	FUNCTION_4
0x4002279	     0xf29ac24b000	       movaps xmmword [rsp + 0xb0], xmm5	       164	channel.c	FUNCTION_4
0x4002281	     0xf29b424c000	       movaps xmmword [rsp + 0xc0], xmm6	       164	channel.c	FUNCTION_4
0x4002289	     0xf29bc24d000	       movaps xmmword [rsp + 0xd0], xmm7	       164	channel.c	FUNCTION_4
0x4002291	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	channel.c	FUNCTION_4
0x400229a	      0x4889442428	             mov qword [rsp + 0x28], rax	       164	channel.c	FUNCTION_4
0x400229f	            0x31c0	                            xor eax, eax	       164	channel.c	FUNCTION_4
0x40022a1	    0x48833d000000	               cmp qword [0x040022a9], 0	       165	channel.c	FUNCTION_4	IF_1
0x40022a9	     0xf84c9000000	                            je 0x4002378	       165	channel.c	FUNCTION_4	IF_1
0x40022af	          0x4889e7	                            mov rdi, rsp	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x40022b2	      0xe800000000	                          call 0x40022b7	       148	channel.c	FUNCTION_3	IF_1	CALL_1
0x40022b7	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x40022bc	          0x4889e7	                            mov rdi, rsp	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x40022bf	      0xe800000000	                          call 0x40022c4	       149	channel.c	FUNCTION_3	IF_1	CALL_2
0x40022c4	          0x4889e7	                            mov rdi, rsp	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x40022c7	      0xe800000000	                          call 0x40022cc	       150	channel.c	FUNCTION_3	IF_1	CALL_3
0x40022cc	    0x488b3d000000	            mov rdi, qword [0x040022d3] 	        97	stdio2.h	CALL_20
0x40022d3	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_20
0x40022d6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x40022db	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x40022dd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40022e2	      0xe800000000	                          call 0x40022e7	        97	stdio2.h	CALL_20
0x40022e7	          0x4885db	                           test rbx, rbx	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x40022ea	     0xf84a8000000	                            je 0x4002398	       152	channel.c	FUNCTION_3	IF_1	IF_2
0x40022f0	        0x448b4310	            mov r8d, dword [rbx + 0x10] 	        97	stdio2.h	CALL_20
0x40022f4	    0x488b3d000000	            mov rdi, qword [0x040022fb] 	        97	stdio2.h	CALL_20
0x40022fb	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_20
0x4002300	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x4002305	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x400230a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x400230c	      0xe800000000	                          call 0x4002311	        97	stdio2.h	CALL_20
0x4002311	    0x488d84240001	                  lea rax, [rsp + 0x100]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4002319	    0x488b3d000000	            mov rdi, qword [0x04002320] 	       127	stdio2.h	FUNCTION_152	CALL_1
0x4002320	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       127	stdio2.h	FUNCTION_152	CALL_1
0x4002325	          0x4889ea	                            mov rdx, rbp	       127	stdio2.h	FUNCTION_152	CALL_1
0x4002328	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_152	CALL_1
0x400232d	    0xc74424101000	           mov dword [rsp + 0x10], 0x10 	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4002335	      0x4889442418	             mov qword [rsp + 0x18], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x400233a	      0x488d442430	                   lea rax, [rsp + 0x30]	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x400233f	    0xc74424143000	           mov dword [rsp + 0x14], 0x30 	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x4002347	      0x4889442420	             mov qword [rsp + 0x20], rax	       170	channel.c	FUNCTION_4	IF_1	CALL_2
0x400234c	      0xe800000000	                          call 0x4002351	       127	stdio2.h	FUNCTION_152	CALL_1
0x4002351	    0x488b35000000	            mov rsi, qword [0x04002358] 	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4002358	      0xbf0a000000	                            mov edi, 0xa	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x400235d	      0xe800000000	                          call 0x4002362	       173	channel.c	FUNCTION_4	IF_1	CALL_5
0x4002362	    0x488b3d000000	            mov rdi, qword [0x04002369] 	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x4002369	      0xe800000000	                          call 0x400236e	       174	channel.c	FUNCTION_4	IF_1	CALL_6
0x400236e	    0xc70500000000	               mov dword [0x04002378], 1	       175	channel.c	FUNCTION_4	IF_1
0x4002378	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       177	channel.c	FUNCTION_4
0x400237d	    0x644833042528	                xor rax, qword fs:[0x28]	       177	channel.c	FUNCTION_4
0x4002386	            0x7532	                           jne 0x40023ba	       177	channel.c	FUNCTION_4
0x4002388	    0x4881c4e80000	                           add rsp, 0xe8	       177	channel.c	FUNCTION_4
0x400238f	              0x5b	                                 pop rbx	       177	channel.c	FUNCTION_4
0x4002390	              0x5d	                                 pop rbp	       177	channel.c	FUNCTION_4
0x4002391	              0xc3	                                     ret	       177	channel.c	FUNCTION_4
0x4002392	    0x660f1f440000	                    nop word [rax + rax]	       177	channel.c	FUNCTION_4
0x4002398	    0x488b3d000000	            mov rdi, qword [0x0400239f] 	        97	stdio2.h	CALL_20
0x400239f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_20
0x40023a4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_20
0x40023a9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_20
0x40023ae	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_20
0x40023b0	      0xe800000000	                          call 0x40023b5	        97	stdio2.h	CALL_20
0x40023b5	      0xe957ffffff	                           jmp 0x4002311	        97	stdio2.h	CALL_20
0x40023ba	      0xe800000000	                          call 0x40023bf	       177	channel.c	FUNCTION_4
channel_close	WHILE,1:FOR,2:CALL,17:IF,7:ELSE,0:functions,0:DO,0:SWITCH,0	215
0x4008810	            0x4155	                                push r13	      2868	channel.c	FUNCTION_68
0x4008812	            0x4154	                                push r12	      2868	channel.c	FUNCTION_68
0x4008814	              0x55	                                push rbp	      2868	channel.c	FUNCTION_68
0x4008815	              0x53	                                push rbx	      2868	channel.c	FUNCTION_68
0x4008816	            0x89f5	                            mov ebp, esi	      2868	channel.c	FUNCTION_68
0x4008818	          0x4889fb	                            mov rbx, rdi	      2868	channel.c	FUNCTION_68
0x400881b	      0xbe00000000	                              mov esi, 0	      2869	channel.c	FUNCTION_68	CALL_1
0x4008820	        0x4883ec48	                           sub rsp, 0x48	      2868	channel.c	FUNCTION_68
0x4008824	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	channel.c	FUNCTION_68
0x400882d	      0x4889442438	             mov qword [rsp + 0x38], rax	      2868	channel.c	FUNCTION_68
0x4008832	            0x31c0	                            xor eax, eax	      2868	channel.c	FUNCTION_68
0x4008834	      0xe800000000	                          call 0x4008839	      2869	channel.c	FUNCTION_68	CALL_1
0x4008839	          0x8b7b1c	            mov edi, dword [rbx + 0x1c] 	       614	channel.c	FUNCTION_25	IF_2
0x400883c	            0x85ff	                           test edi, edi	       614	channel.c	FUNCTION_25	IF_2
0x400883e	     0xf854e030000	                           jne 0x4008b92	       614	channel.c	FUNCTION_25	IF_2
0x4008844	    0x8bb32c010000	           mov esi, dword [rbx + 0x12c] 	       614	channel.c	FUNCTION_25	IF_2
0x400884a	            0x85f6	                           test esi, esi	       614	channel.c	FUNCTION_25	IF_2
0x400884c	     0xf8512030000	                           jne 0x4008b64	       614	channel.c	FUNCTION_25	IF_2
0x4008852	    0x8b8b3c020000	           mov ecx, dword [rbx + 0x23c] 	       614	channel.c	FUNCTION_25	IF_2
0x4008858	            0x85c9	                           test ecx, ecx	       614	channel.c	FUNCTION_25	IF_2
0x400885a	     0xf85d6020000	                           jne 0x4008b36	       614	channel.c	FUNCTION_25	IF_2
0x4008860	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	       988	channel.c	FUNCTION_29	IF_1
0x4008863	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4008866	            0x7413	                            je 0x400887b	       988	channel.c	FUNCTION_29	IF_1
0x4008868	      0xe800000000	                          call 0x400886d	       991	channel.c	FUNCTION_29	IF_1	IF_2
0x400886d	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffffe	      1010	channel.c	FUNCTION_29	IF_1
0x4008874	    0xc74318ffffff	     mov dword [rbx + 0x18], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x400887b	    0x8bbb48030000	           mov edi, dword [rbx + 0x348] 	       988	channel.c	FUNCTION_29	IF_1
0x4008881	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4008887	    0x8b8338020000	           mov eax, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400888d	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4008890	            0x742a	                            je 0x40088bc	       988	channel.c	FUNCTION_29	IF_1
0x4008892	            0x39d7	                            cmp edi, edx	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4008894	            0x7415	                            je 0x40088ab	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4008896	            0x39c7	                            cmp edi, eax	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4008898	            0x7411	                            je 0x40088ab	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400889a	      0xe800000000	                          call 0x400889f	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400889f	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088a5	    0x8b8338020000	           mov eax, dword [rbx + 0x238] 	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088ab	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffff7	      1010	channel.c	FUNCTION_29	IF_1
0x40088b2	    0xc78348030000	    mov dword [rbx + 0x348], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x40088bc	          0x83faff	             cmp edx, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x40088bf	            0x7422	                            je 0x40088e3	       988	channel.c	FUNCTION_29	IF_1
0x40088c1	            0x39c2	                            cmp edx, eax	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088c3	            0x740d	                            je 0x40088d2	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088c5	            0x89d7	                            mov edi, edx	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088c7	      0xe800000000	                          call 0x40088cc	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088cc	    0x8b8338020000	           mov eax, dword [rbx + 0x238] 	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088d2	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffffd	      1010	channel.c	FUNCTION_29	IF_1
0x40088d9	    0xc78328010000	    mov dword [rbx + 0x128], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x40088e3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x40088e6	            0x7420	                            je 0x4008908	       988	channel.c	FUNCTION_29	IF_1
0x40088e8	    0x398348030000	           cmp dword [rbx + 0x348], eax 	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088ee	            0x7407	                            je 0x40088f7	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088f0	            0x89c7	                            mov edi, eax	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088f2	      0xe800000000	                          call 0x40088f7	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x40088f7	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffffb	      1010	channel.c	FUNCTION_29	IF_1
0x40088fe	    0xc78338020000	    mov dword [rbx + 0x238], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x4008908	            0x85ed	                           test ebp, ebp	      2880	channel.c	FUNCTION_68	IF_1
0x400890a	     0xf84c3010000	                            je 0x4008ad3	      2880	channel.c	FUNCTION_68	IF_1
0x4008910	    0x488b93900400	           mov rdx, qword [rbx + 0x490] 	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x4008917	          0x4885d2	                           test rdx, rdx	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x400891a	            0x7416	                            je 0x4008932	      2885	channel.c	FUNCTION_68	IF_1	IF_2
0x400891c	      0xbe00000000	                              mov esi, 0	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4008921	          0x4889df	                            mov rdi, rbx	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4008924	            0x31c0	                            xor eax, eax	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4008926	      0xe800000000	                          call 0x400892b	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x400892b	    0x488b93900400	           mov rdx, qword [rbx + 0x490] 	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4008932	    0x4c8dabf80000	                   lea r13, [rbx + 0xf8]	      2886	channel.c	FUNCTION_68	IF_1	IF_2	CALL_7
0x4008939	          0x4531e4	                          xor r12d, r12d	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x400893c	         0xf1f4000	                         nop dword [rax]	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4008940	          0x4885d2	                           test rdx, rdx	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008943	          0x4489e5	                           mov ebp, r12d	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008946	     0xf84bc010000	                            je 0x4008b08	      2890	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x400894c	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008953	       0xf1f440000	                   nop dword [rax + rax]	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008958	            0x89ee	                            mov esi, ebp	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x400895a	          0x4889df	                            mov rdi, rbx	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x400895d	      0xe8feebffff	            call sym.may_invoke_callback	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4008962	            0x85c0	                           test eax, eax	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4008964	            0x75f2	                           jne 0x4008958	      2899	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x4008966	    0x83abb4040000	              sub dword [rbx + 0x4b4], 1	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x400896d	    0x488b93900400	           mov rdx, qword [rbx + 0x490] 	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008974	        0x4983c401	                              add r12, 1	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008978	    0x4981c5100100	                          add r13, 0x110	      2901	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x400897f	        0x4983fc03	                              cmp r12, 3	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4008983	            0x75bb	                           jne 0x4008940	      2888	channel.c	FUNCTION_68	IF_1	FOR_1
0x4008985	          0x4885d2	                           test rdx, rdx	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x4008988	     0xf8445010000	                            je 0x4008ad3	      2905	channel.c	FUNCTION_68	IF_1	IF_5
0x400898e	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2913	channel.c	FUNCTION_68	IF_1	IF_5
0x4008995	      0xbe00000000	                              mov esi, 0	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x400899a	            0x31c0	                            xor eax, eax	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x400899c	          0x4889df	                            mov rdi, rbx	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x400899f	      0xe800000000	                          call 0x40089a4	      2914	channel.c	FUNCTION_68	IF_1	IF_5	CALL_10
0x40089a4	    0x488bab900400	           mov rbp, qword [rbx + 0x490] 	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089ab	    0xc74424200a00	             mov dword [rsp + 0x20], 0xa	      2916	channel.c	FUNCTION_68	IF_1	IF_5
0x40089b3	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      2917	channel.c	FUNCTION_68	IF_1	IF_5
0x40089b8	          0x4889ef	                            mov rdi, rbp	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089bb	      0xe800000000	                          call 0x40089c0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089c0	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089c2	    0xffb398040000	                push qword [rbx + 0x498]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089c8	          0x4531c9	                            xor r9d, r9d	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089cb	            0x6a01	                                  push 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089cd	      0xb901000000	                              mov ecx, 1	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089d2	            0x89c6	                            mov esi, eax	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089d4	          0x4889ef	                            mov rdi, rbp	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089d7	      0x488d542424	                   lea rdx, [rsp + 0x24]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089dc	              0x52	                                push rdx	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089dd	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089df	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089e1	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089e6	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089eb	      0xe800000000	                          call 0x40089f0	      2918	channel.c	FUNCTION_68	IF_1	IF_5	CALL_12
0x40089f0	        0x4883c430	                           add rsp, 0x30	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x40089f4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x40089f9	      0xe800000000	                          call 0x40089fe	      2921	channel.c	FUNCTION_68	IF_1	IF_5	CALL_13
0x40089fe	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4008a05	    0x488bbb900400	           mov rdi, qword [rbx + 0x490] 	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4008a0c	    0xc70500000000	               mov dword [0x04008a16], 1	      2922	channel.c	FUNCTION_68	IF_1	IF_5
0x4008a16	      0xe800000000	                          call 0x4008a1b	      2925	channel.c	FUNCTION_68	IF_1	IF_5	CALL_14
0x4008a1b	    0x8b1500000000	            mov edx, dword [0x04008a21] 	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4008a21	    0x48c783900400	              mov qword [rbx + 0x490], 0	      2926	channel.c	FUNCTION_68	IF_1	IF_5
0x4008a2c	    0x48c783980400	              mov qword [rbx + 0x498], 0	      2927	channel.c	FUNCTION_68	IF_1	IF_5
0x4008a37	            0x85d2	                           test edx, edx	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4008a39	     0xf857b010000	                           jne 0x4008bba	      2929	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4008a3f	    0x8b83a0040000	           mov eax, dword [rbx + 0x4a0] 	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4008a45	            0x85c0	                           test eax, eax	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4008a47	     0xf857f000000	                           jne 0x4008acc	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4008a4d	        0x4c8d6340	                   lea r12, [rbx + 0x40]	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4008a51	    0x4c8dab700300	                  lea r13, [rbx + 0x370]	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4008a58	            0xeb32	                           jmp 0x4008a8c	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4008a5a	    0x660f1f440000	                    nop word [rax + rax]	      2935	channel.c	FUNCTION_68	IF_1	IF_5	IF_7
0x4008a60	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4008a68	      0xe800000000	                          call 0x4008a6d	      1656	channel.c	FUNCTION_46	CALL_1
0x4008a6d	          0x4885ed	                           test rbp, rbp	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4008a70	            0x744e	                            je 0x4008ac0	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4008a72	          0x4889df	                            mov rdi, rbx	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4008a75	          0x4889ea	                            mov rdx, rbp	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4008a78	      0xbe00000000	                              mov esi, 0	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4008a7d	            0x31c0	                            xor eax, eax	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4008a7f	      0xe800000000	                          call 0x4008a84	      2453	channel.c	FUNCTION_60	WHILE_1	CALL_2
0x4008a84	          0x4889ef	                            mov rdi, rbp	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4008a87	      0xe800000000	                          call 0x4008a8c	      2454	channel.c	FUNCTION_60	WHILE_1	CALL_3
0x4008a8c	        0x498b3c24	                    mov rdi, qword [r12]	      1644	channel.c	FUNCTION_46
0x4008a90	          0x4885ff	                           test rdi, rdi	      1647	channel.c	FUNCTION_46	IF_1
0x4008a93	            0x742b	                            je 0x4008ac0	      1647	channel.c	FUNCTION_46	IF_1
0x4008a95	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x4008a99	          0x488b2f	                    mov rbp, qword [rdi]	      1650	channel.c	FUNCTION_46
0x4008a9c	        0x49890424	                    mov qword [r12], rax	      1651	channel.c	FUNCTION_46
0x4008aa0	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4008aa4	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x4008aa7	            0x75b7	                           jne 0x4008a60	      1652	channel.c	FUNCTION_46	IF_2
0x4008aa9	    0x49c744240800	                  mov qword [r12 + 8], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4008ab2	      0xe800000000	                          call 0x4008ab7	      1656	channel.c	FUNCTION_46	CALL_1
0x4008ab7	          0x4885ed	                           test rbp, rbp	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4008aba	            0x75b6	                           jne 0x4008a72	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4008abc	         0xf1f4000	                         nop dword [rax]	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4008ac0	    0x4981c4100100	                          add r12, 0x110	      2451	channel.c	FUNCTION_60	WHILE_1	CALL_1
0x4008ac7	          0x4d39e5	                            cmp r13, r12	      2937	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4008aca	            0x75c0	                           jne 0x4008a8c	      2937	channel.c	FUNCTION_68	IF_1	IF_5	IF_7	FOR_2
0x4008acc	    0x83abb4040000	              sub dword [rbx + 0x4b4], 1	      2940	channel.c	FUNCTION_68	IF_1	IF_5
0x4008ad3	    0x48c783780400	              mov qword [rbx + 0x478], 0	      2944	channel.c	FUNCTION_68
0x4008ade	          0x4889df	                            mov rdi, rbx	      2947	channel.c	FUNCTION_68	CALL_17
0x4008ae1	      0xe800000000	                          call 0x4008ae6	      2947	channel.c	FUNCTION_68	CALL_17
0x4008ae6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2949	channel.c	FUNCTION_68
0x4008aeb	    0x644833042528	                xor rax, qword fs:[0x28]	      2949	channel.c	FUNCTION_68
0x4008af4	     0xf85d9000000	                           jne 0x4008bd3	      2949	channel.c	FUNCTION_68
0x4008afa	        0x4883c448	                           add rsp, 0x48	      2949	channel.c	FUNCTION_68
0x4008afe	              0x5b	                                 pop rbx	      2949	channel.c	FUNCTION_68
0x4008aff	              0x5d	                                 pop rbp	      2949	channel.c	FUNCTION_68
0x4008b00	            0x415c	                                 pop r12	      2949	channel.c	FUNCTION_68
0x4008b02	            0x415d	                                 pop r13	      2949	channel.c	FUNCTION_68
0x4008b04	              0xc3	                                     ret	      2949	channel.c	FUNCTION_68
0x4008b05	           0xf1f00	                         nop dword [rax]	      2949	channel.c	FUNCTION_68
0x4008b08	      0x49837d0000	                      cmp qword [r13], 0	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008b0d	     0xf8461feffff	                            je 0x4008974	      2891	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008b13	    0x8383b4040000	              add dword [rbx + 0x4b4], 1	      2895	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3
0x4008b1a	    0x4a8b14e50000	                  mov rdx, qword [r12*8]	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4008b22	      0xbe00000000	                              mov esi, 0	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4008b27	          0x4889df	                            mov rdi, rbx	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4008b2a	            0x31c0	                            xor eax, eax	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4008b2c	      0xe800000000	                          call 0x4008b31	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4008b31	      0xe922feffff	                           jmp 0x4008958	      2897	channel.c	FUNCTION_68	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x4008b36	      0xba00000000	                              mov edx, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b3b	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b40	          0x4889df	                            mov rdi, rbx	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b43	            0x31c0	                            xor eax, eax	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b45	      0xe800000000	                          call 0x4008b4a	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b4a	    0x8bbb3c020000	           mov edi, dword [rbx + 0x23c] 	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4008b50	      0xe800000000	                          call 0x4008b55	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4008b55	    0xc7833c020000	              mov dword [rbx + 0x23c], 0	       622	channel.c	FUNCTION_25	IF_2
0x4008b5f	      0xe9fcfcffff	                           jmp 0x4008860	       622	channel.c	FUNCTION_25	IF_2
0x4008b64	      0xba00000000	                              mov edx, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b69	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b6e	          0x4889df	                            mov rdi, rbx	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b71	            0x31c0	                            xor eax, eax	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b73	      0xe800000000	                          call 0x4008b78	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b78	    0x8bbb2c010000	           mov edi, dword [rbx + 0x12c] 	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4008b7e	      0xe800000000	                          call 0x4008b83	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4008b83	    0xc7832c010000	              mov dword [rbx + 0x12c], 0	       622	channel.c	FUNCTION_25	IF_2
0x4008b8d	      0xe9c0fcffff	                           jmp 0x4008852	       622	channel.c	FUNCTION_25	IF_2
0x4008b92	      0xba00000000	                              mov edx, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b97	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b9c	          0x4889df	                            mov rdi, rbx	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008b9f	            0x31c0	                            xor eax, eax	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008ba1	      0xe800000000	                          call 0x4008ba6	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4008ba6	          0x8b7b1c	            mov edi, dword [rbx + 0x1c] 	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4008ba9	      0xe800000000	                          call 0x4008bae	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4008bae	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       622	channel.c	FUNCTION_25	IF_2
0x4008bb5	      0xe98afcffff	                           jmp 0x4008844	       622	channel.c	FUNCTION_25	IF_2
0x4008bba	      0xbf01000000	                              mov edi, 1	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4008bbf	    0xc70500000000	               mov dword [0x04008bc9], 0	      2931	channel.c	FUNCTION_68	IF_1	IF_5	IF_6
0x4008bc9	      0xe800000000	                          call 0x4008bce	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4008bce	      0xe96cfeffff	                           jmp 0x4008a3f	      2932	channel.c	FUNCTION_68	IF_1	IF_5	IF_6	CALL_15
0x4008bd3	      0xe800000000	                          call 0x4008bd8	      2949	channel.c	FUNCTION_68
free_unused_channels	WHILE,0:FOR,1:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	52
0x40037e0	    0x4c8b05000000	              mov r8, qword [0x040037e7]	       454	channel.c	FUNCTION_17	FOR_1
0x40037e7	          0x4d85c0	                             test r8, r8	       454	channel.c	FUNCTION_17	FOR_1
0x40037ea	     0xf8494000000	                            je 0x4003884	       454	channel.c	FUNCTION_17	FOR_1
0x40037f0	            0x4154	                                push r12	       450	channel.c	FUNCTION_17
0x40037f2	          0x4189fc	                           mov r12d, edi	       450	channel.c	FUNCTION_17
0x40037f5	              0x55	                                push rbp	       450	channel.c	FUNCTION_17
0x40037f6	            0x89f5	                            mov ebp, esi	       450	channel.c	FUNCTION_17
0x40037f8	              0x53	                                push rbx	       450	channel.c	FUNCTION_17
0x40037f9	            0xeb0d	                           jmp 0x4003808	       450	channel.c	FUNCTION_17
0x40037fb	       0xf1f440000	                   nop dword [rax + rax]	       450	channel.c	FUNCTION_17
0x4003800	          0x4885db	                           test rbx, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x4003803	          0x4989d8	                             mov r8, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x4003806	            0x7478	                            je 0x4003880	       454	channel.c	FUNCTION_17	FOR_1
0x4003808	    0x418b80b00400	            mov eax, dword [r8 + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400380f	          0x498b18	                     mov rbx, qword [r8]	       456	channel.c	FUNCTION_17	FOR_1
0x4003812	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x4003814	            0x740a	                            je 0x4003820	       315	channel.c	FUNCTION_9	IF_1
0x4003816	    0x4983b8a80400	               cmp qword [r8 + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400381e	            0x7420	                            je 0x4003840	       315	channel.c	FUNCTION_9	IF_1
0x4003820	    0x4983b8900400	               cmp qword [r8 + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x4003828	            0x75d6	                           jne 0x4003800	       319	channel.c	FUNCTION_9	IF_2
0x400382a	    0x4983b8280400	               cmp qword [r8 + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x4003832	            0x75cc	                           jne 0x4003800	       323	channel.c	FUNCTION_9	IF_3
0x4003834	          0x4c89c7	                             mov rdi, r8	       323	channel.c	FUNCTION_9	IF_3
0x4003837	      0xe894cbffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400383c	            0x85c0	                           test eax, eax	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x400383e	            0x75c0	                           jne 0x4003800	       457	channel.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4003840	    0x418b80b80400	            mov eax, dword [r8 + 0x4b8] 	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x4003847	          0x4431e0	                           xor eax, r12d	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x400384a	            0x85e8	                           test eax, ebp	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x400384c	            0x74b2	                            je 0x4003800	       458	channel.c	FUNCTION_17	FOR_1	IF_1
0x400384e	          0x4885db	                           test rbx, rbx	       370	channel.c	FUNCTION_12	IF_1
0x4003851	            0x7408	                            je 0x400385b	       370	channel.c	FUNCTION_12	IF_1
0x4003853	        0x498b4008	                 mov rax, qword [r8 + 8]	       371	channel.c	FUNCTION_12	IF_1
0x4003857	        0x48894308	                mov qword [rbx + 8], rax	       371	channel.c	FUNCTION_12	IF_1
0x400385b	        0x498b4008	                 mov rax, qword [r8 + 8]	       372	channel.c	FUNCTION_12	IF_2
0x400385f	          0x4885c0	                           test rax, rax	       372	channel.c	FUNCTION_12	IF_2
0x4003862	            0x742c	                            je 0x4003890	       372	channel.c	FUNCTION_12	IF_2
0x4003864	          0x488918	                    mov qword [rax], rbx	       375	channel.c	FUNCTION_12	ELSE_1
0x4003867	          0x4c89c7	                             mov rdi, r8	       376	channel.c	FUNCTION_12	CALL_1
0x400386a	      0xe800000000	                          call 0x400386f	       376	channel.c	FUNCTION_12	CALL_1
0x400386f	          0x4885db	                           test rbx, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x4003872	          0x4989d8	                             mov r8, rbx	       454	channel.c	FUNCTION_17	FOR_1
0x4003875	            0x7591	                           jne 0x4003808	       454	channel.c	FUNCTION_17	FOR_1
0x4003877	    0x660f1f840000	                    nop word [rax + rax]	       454	channel.c	FUNCTION_17	FOR_1
0x4003880	              0x5b	                                 pop rbx	       464	channel.c	FUNCTION_17
0x4003881	              0x5d	                                 pop rbp	       464	channel.c	FUNCTION_17
0x4003882	            0x415c	                                 pop r12	       464	channel.c	FUNCTION_17
0x4003884	            0xf3c3	                                     ret	       464	channel.c	FUNCTION_17
0x4003886	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       464	channel.c	FUNCTION_17
0x4003890	    0x48891d000000	            mov qword [0x04003897], rbx 	       373	channel.c	FUNCTION_12	IF_2
0x4003897	            0xebce	                           jmp 0x4003867	       373	channel.c	FUNCTION_12	IF_2
job_check_ended	WHILE,0:FOR,1:CALL,3:IF,3:ELSE,0:functions,0:DO,0:SWITCH,0	30
0x400c4b0	    0x488b3d000000	            mov rdi, qword [0x0400c4b7] 	      5496	channel.c	FUNCTION_129	IF_1
0x400c4b7	          0x4885ff	                           test rdi, rdi	      5496	channel.c	FUNCTION_129	IF_1
0x400c4ba	            0x7447	                            je 0x400c503	      5496	channel.c	FUNCTION_129	IF_1
0x400c4bc	              0x53	                                push rbx	      5493	channel.c	FUNCTION_129
0x400c4bd	      0xbb08000000	                              mov ebx, 8	      5493	channel.c	FUNCTION_129
0x400c4c2	            0xeb10	                           jmp 0x400c4d4	      5493	channel.c	FUNCTION_129
0x400c4c4	         0xf1f4000	                         nop dword [rax]	      5493	channel.c	FUNCTION_129
0x400c4c8	          0x83eb01	                              sub ebx, 1	      5499	channel.c	FUNCTION_129	FOR_1
0x400c4cb	            0x742b	                            je 0x400c4f8	      5499	channel.c	FUNCTION_129	FOR_1
0x400c4cd	    0x488b3d000000	            mov rdi, qword [0x0400c4d4] 	      5499	channel.c	FUNCTION_129	FOR_1
0x400c4d4	      0xe800000000	                          call 0x400c4d9	      5503	channel.c	FUNCTION_129	FOR_1	CALL_1
0x400c4d9	          0x4885c0	                           test rax, rax	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x400c4dc	            0x741a	                            je 0x400c4f8	      5505	channel.c	FUNCTION_129	FOR_1	IF_2
0x400c4de	        0x83782802	               cmp dword [rax + 0x28], 2	      5265	channel.c	FUNCTION_120	IF_1
0x400c4e2	            0x75e4	                           jne 0x400c4c8	      5265	channel.c	FUNCTION_120	IF_1
0x400c4e4	          0x4889c7	                            mov rdi, rax	      5265	channel.c	FUNCTION_120	IF_1
0x400c4e7	      0xe824d3ffff	            call sym.job_cleanup.part.15	      5265	channel.c	FUNCTION_120	IF_1
0x400c4ec	          0x83eb01	                              sub ebx, 1	      5499	channel.c	FUNCTION_129	FOR_1
0x400c4ef	            0x75dc	                           jne 0x400c4cd	      5499	channel.c	FUNCTION_129	FOR_1
0x400c4f1	     0xf1f80000000	                         nop dword [rax]	      5499	channel.c	FUNCTION_129	FOR_1
0x400c4f8	    0x8b0500000000	            mov eax, dword [0x0400c4fe] 	      5510	channel.c	FUNCTION_129	IF_3
0x400c4fe	            0x85c0	                           test eax, eax	      5510	channel.c	FUNCTION_129	IF_3
0x400c500	            0x7506	                           jne 0x400c508	      5510	channel.c	FUNCTION_129	IF_3
0x400c502	              0x5b	                                 pop rbx	      5515	channel.c	FUNCTION_129
0x400c503	            0xf3c3	                                     ret	      5515	channel.c	FUNCTION_129
0x400c505	           0xf1f00	                         nop dword [rax]	      5515	channel.c	FUNCTION_129
0x400c508	              0x5b	                                 pop rbx	      5515	channel.c	FUNCTION_129
0x400c509	      0xbf01000000	                              mov edi, 1	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
0x400c50e	    0xc70500000000	               mov dword [0x0400c518], 0	      5512	channel.c	FUNCTION_129	IF_3
0x400c518	      0xe900000000	                           jmp 0x400c51d	      5513	channel.c	FUNCTION_129	IF_3	CALL_3
has_pending_job	WHILE,0:FOR,1:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	42
0x400c420	    0x488b35000000	            mov rsi, qword [0x0400c427] 	      5476	channel.c	FUNCTION_128	FOR_1
0x400c427	          0x4885f6	                           test rsi, rsi	      5476	channel.c	FUNCTION_128	FOR_1
0x400c42a	            0x7511	                           jne 0x400c43d	      5476	channel.c	FUNCTION_128	FOR_1
0x400c42c	            0xeb75	                           jmp 0x400c4a3	      5476	channel.c	FUNCTION_128	FOR_1
0x400c42e	            0x6690	                                     nop	      5476	channel.c	FUNCTION_128	FOR_1
0x400c430	          0x83f803	                              cmp eax, 3	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x400c433	            0x7453	                            je 0x400c488	      5480	channel.c	FUNCTION_128	FOR_1	IF_1
0x400c435	          0x488b36	                    mov rsi, qword [rsi]	      5476	channel.c	FUNCTION_128	FOR_1
0x400c438	          0x4885f6	                           test rsi, rsi	      5476	channel.c	FUNCTION_128	FOR_1
0x400c43b	            0x7466	                            je 0x400c4a3	      5476	channel.c	FUNCTION_128	FOR_1
0x400c43d	          0x8b4628	            mov eax, dword [rsi + 0x28] 	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400c440	          0x83f801	                              cmp eax, 1	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400c443	            0x75eb	                           jne 0x400c430	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400c445	        0x488b7e60	            mov rdi, qword [rsi + 0x60] 	      5479	channel.c	FUNCTION_128	FOR_1	IF_1	CALL_1
0x400c449	          0x4885ff	                           test rdi, rdi	      5113	channel.c	FUNCTION_114	CALL_1
0x400c44c	            0x7431	                            je 0x400c47f	      5113	channel.c	FUNCTION_114	CALL_1
0x400c44e	    0x8b97b0040000	           mov edx, dword [rdi + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400c454	            0x85d2	                           test edx, edx	       315	channel.c	FUNCTION_9	IF_1
0x400c456	            0x740a	                            je 0x400c462	       315	channel.c	FUNCTION_9	IF_1
0x400c458	    0x4883bfa80400	              cmp qword [rdi + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400c460	            0x741d	                            je 0x400c47f	       315	channel.c	FUNCTION_9	IF_1
0x400c462	    0x4883bf900400	              cmp qword [rdi + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400c46a	            0x75c9	                           jne 0x400c435	       319	channel.c	FUNCTION_9	IF_2
0x400c46c	    0x4883bf280400	              cmp qword [rdi + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400c474	            0x75bf	                           jne 0x400c435	       323	channel.c	FUNCTION_9	IF_3
0x400c476	      0xe8553fffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400c47b	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x400c47d	            0x75b6	                           jne 0x400c435	      5113	channel.c	FUNCTION_114	CALL_1
0x400c47f	      0xb801000000	                              mov eax, 1	      5482	channel.c	FUNCTION_128	FOR_1	IF_1
0x400c484	              0xc3	                                     ret	      5484	channel.c	FUNCTION_128
0x400c485	           0xf1f00	                         nop dword [rax]	      5484	channel.c	FUNCTION_128
0x400c488	        0x488b4660	            mov rax, qword [rsi + 0x60] 	      5484	channel.c	FUNCTION_128
0x400c48c	          0x4885c0	                           test rax, rax	      5122	channel.c	FUNCTION_115	CALL_1
0x400c48f	            0x74a4	                            je 0x400c435	      5122	channel.c	FUNCTION_115	CALL_1
0x400c491	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      5122	channel.c	FUNCTION_115	CALL_1
0x400c497	            0x85c0	                           test eax, eax	      5122	channel.c	FUNCTION_115	CALL_1
0x400c499	            0x74e4	                            je 0x400c47f	      5122	channel.c	FUNCTION_115	CALL_1
0x400c49b	          0x488b36	                    mov rsi, qword [rsi]	      5476	channel.c	FUNCTION_128	FOR_1
0x400c49e	          0x4885f6	                           test rsi, rsi	      5476	channel.c	FUNCTION_128	FOR_1
0x400c4a1	            0x759a	                           jne 0x400c43d	      5476	channel.c	FUNCTION_128	FOR_1
0x400c4a3	            0x31c0	                            xor eax, eax	      5483	channel.c	FUNCTION_128
0x400c4a5	              0xc3	                                     ret	      5483	channel.c	FUNCTION_128
channel_write_new_lines	WHILE,0:FOR,2:CALL,5:IF,7:ELSE,1:functions,0:DO,0:SWITCH,0	149
0x4004bf0	            0x4157	                                push r15	      1542	channel.c	FUNCTION_42
0x4004bf2	            0x4156	                                push r14	      1542	channel.c	FUNCTION_42
0x4004bf4	          0x4531ff	                          xor r15d, r15d	      1384	channel.c	FUNCTION_37	CALL_1
0x4004bf7	            0x4155	                                push r13	      1542	channel.c	FUNCTION_42
0x4004bf9	            0x4154	                                push r12	      1542	channel.c	FUNCTION_42
0x4004bfb	              0x55	                                push rbp	      1542	channel.c	FUNCTION_42
0x4004bfc	              0x53	                                push rbx	      1542	channel.c	FUNCTION_42
0x4004bfd	          0x4889fd	                            mov rbp, rdi	      1542	channel.c	FUNCTION_42
0x4004c00	    0x4881eca80000	                           sub rsp, 0xa8	      1542	channel.c	FUNCTION_42
0x4004c07	    0x4c8b35000000	            mov r14, qword [0x04004c0e] 	      1548	channel.c	FUNCTION_42	FOR_1
0x4004c0e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1542	channel.c	FUNCTION_42
0x4004c17	    0x488984249800	             mov qword [rsp + 0x98], rax	      1542	channel.c	FUNCTION_42
0x4004c1f	            0x31c0	                            xor eax, eax	      1542	channel.c	FUNCTION_42
0x4004c21	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      1542	channel.c	FUNCTION_42
0x4004c26	          0x4d85f6	                           test r14, r14	      1548	channel.c	FUNCTION_42	FOR_1
0x4004c29	            0x7511	                           jne 0x4004c3c	      1548	channel.c	FUNCTION_42	FOR_1
0x4004c2b	      0xe934010000	                           jmp 0x4004d64	      1548	channel.c	FUNCTION_42	FOR_1
0x4004c30	          0x4d8b36	                    mov r14, qword [r14]	      1548	channel.c	FUNCTION_42	FOR_1
0x4004c33	          0x4d85f6	                           test r14, r14	      1548	channel.c	FUNCTION_42	FOR_1
0x4004c36	     0xf8424010000	                            je 0x4004d60	      1548	channel.c	FUNCTION_42	FOR_1
0x4004c3c	    0x4939ae280400	           cmp qword [r14 + 0x428], rbp 	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004c43	            0x75eb	                           jne 0x4004c30	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004c45	    0x418b96400400	           mov edx, dword [r14 + 0x440] 	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004c4c	            0x85d2	                           test edx, edx	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004c4e	            0x74e0	                            je 0x4004c30	      1554	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004c50	    0x4183be480300	cmp dword [r14 + 0x348], 0xffffffffffffffff	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4004c58	            0x74d6	                            je 0x4004c30	      1556	channel.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4004c5a	    0x498b9e500400	           mov rbx, qword [r14 + 0x450] 	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004c61	          0x4531ed	                          xor r13d, r13d	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004c64	        0x483b5d00	                    cmp rbx, qword [rbp]	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004c68	     0xf8dd5000000	                           jge 0x4004d43	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004c6e	            0x6690	                                     nop	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004c70	    0x418b86c00300	           mov eax, dword [r14 + 0x3c0] 	      1371	channel.c	FUNCTION_37	IF_2
0x4004c77	          0x83f801	                              cmp eax, 1	      1371	channel.c	FUNCTION_37	IF_2
0x4004c7a	     0xf8430010000	                            je 0x4004db0	      1371	channel.c	FUNCTION_37	IF_2
0x4004c80	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4004c83	     0xf8437010000	                            je 0x4004dc0	      1373	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4004c89	      0xb910000000	                           mov ecx, 0x10	      1384	channel.c	FUNCTION_37	CALL_1
0x4004c8e	          0x4c89e7	                            mov rdi, r12	      1384	channel.c	FUNCTION_37	CALL_1
0x4004c91	          0x4489f8	                           mov eax, r15d	      1384	channel.c	FUNCTION_37	CALL_1
0x4004c94	              0xfc	                                     cld	      1384	channel.c	FUNCTION_37	CALL_1
0x4004c95	          0xf348ab	              rep stosq qword [rdi], rax	      1384	channel.c	FUNCTION_37	CALL_1
0x4004c98	    0x4963be480300	        movsxd rdi, dword [r14 + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x4004c9f	      0xe800000000	                          call 0x4004ca4	      1385	channel.c	FUNCTION_37	CALL_2
0x4004ca4	    0x418bbe480300	           mov edi, dword [r14 + 0x348] 	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cab	    0x48c704240000	                      mov qword [rsp], 0	      1386	channel.c	FUNCTION_37
0x4004cb3	    0x48c744240800	                  mov qword [rsp + 8], 0	      1387	channel.c	FUNCTION_37
0x4004cbc	            0x89fa	                            mov edx, edi	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cbe	          0xc1fa1f	                           sar edx, 0x1f	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cc1	          0xc1ea1a	                           shr edx, 0x1a	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cc4	          0x8d0c17	                    lea ecx, [rdi + rdx]	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cc7	          0x83e13f	                           and ecx, 0x3f	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cca	            0x29d1	                            sub ecx, edx	      1385	channel.c	FUNCTION_37	CALL_2
0x4004ccc	      0xba01000000	                              mov edx, 1	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cd1	          0x48d3e2	                             shl rdx, cl	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cd4	      0x480954c410	      or qword [rsp + rax*8 + 0x10], rdx	      1385	channel.c	FUNCTION_37	CALL_2
0x4004cd9	          0x83c701	                              add edi, 1	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4004cdc	            0x31c9	                            xor ecx, ecx	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4004cde	            0x31f6	                            xor esi, esi	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4004ce0	          0x4989e0	                             mov r8, rsp	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4004ce3	          0x4c89e2	                            mov rdx, r12	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4004ce6	      0xe800000000	                          call 0x4004ceb	      1390	channel.c	FUNCTION_37	FOR_1	CALL_3
0x4004ceb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4004cee	     0xf85dc000000	                           jne 0x4004dd0	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4004cf4	      0xe800000000	                          call 0x4004cf9	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4004cf9	          0x833804	                      cmp dword [rax], 4	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4004cfc	     0xf849e000000	                            je 0x4004da0	      1393	channel.c	FUNCTION_37	FOR_1	IF_4
0x4004d02	      0xbe00000000	                              mov esi, 0	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4004d07	          0x4c89f7	                            mov rdi, r14	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4004d0a	            0x31c0	                            xor eax, eax	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4004d0c	      0xe800000000	                          call 0x4004d11	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4004d11	     0xf1f80000000	                         nop dword [rax]	      1401	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_5
0x4004d18	        0x4183fd01	                             cmp r13d, 1	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x4004d1c	     0xf8431010000	                            je 0x4004e53	      1568	channel.c	FUNCTION_42	FOR_1	IF_1	IF_4
0x4004d22	            0x7e12	                           jle 0x4004d36	      1570	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4004d24	          0x4489ea	                           mov edx, r13d	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4004d27	      0xbe00000000	                              mov esi, 0	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4004d2c	          0x4c89f7	                            mov rdi, r14	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4004d2f	            0x31c0	                            xor eax, eax	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4004d31	      0xe800000000	                          call 0x4004d36	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4004d36	        0x488b5500	                    mov rdx, qword [rbp]	      1571	channel.c	FUNCTION_42	FOR_1	IF_1	ELSE_1	IF_5
0x4004d3a	          0x4839da	                            cmp rdx, rbx	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4004d3d	     0xf8fed000000	                            jg 0x4004e30	      1572	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6
0x4004d43	    0x49899e500400	            mov qword [r14 + 0x450], rbx	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004d4a	      0xb801000000	                              mov eax, 1	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004d4f	          0x4d8b36	                    mov r14, qword [r14]	      1548	channel.c	FUNCTION_42	FOR_1
0x4004d52	          0x4d85f6	                           test r14, r14	      1548	channel.c	FUNCTION_42	FOR_1
0x4004d55	     0xf85e1feffff	                           jne 0x4004c3c	      1548	channel.c	FUNCTION_42	FOR_1
0x4004d5b	       0xf1f440000	                   nop dword [rax + rax]	      1548	channel.c	FUNCTION_42	FOR_1
0x4004d60	            0x85c0	                           test eax, eax	      1579	channel.c	FUNCTION_42	IF_7
0x4004d62	            0x750a	                           jne 0x4004d6e	      1579	channel.c	FUNCTION_42	IF_7
0x4004d64	    0xc785341c0000	            mov dword [rbp + 0x1c34], 0 	      1580	channel.c	FUNCTION_42	IF_7
0x4004d6e	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1581	channel.c	FUNCTION_42
0x4004d76	    0x644833042528	                xor rax, qword fs:[0x28]	      1581	channel.c	FUNCTION_42
0x4004d7f	     0xf85e9000000	                           jne 0x4004e6e	      1581	channel.c	FUNCTION_42
0x4004d85	    0x4881c4a80000	                           add rsp, 0xa8	      1581	channel.c	FUNCTION_42
0x4004d8c	              0x5b	                                 pop rbx	      1581	channel.c	FUNCTION_42
0x4004d8d	              0x5d	                                 pop rbp	      1581	channel.c	FUNCTION_42
0x4004d8e	            0x415c	                                 pop r12	      1581	channel.c	FUNCTION_42
0x4004d90	            0x415d	                                 pop r13	      1581	channel.c	FUNCTION_42
0x4004d92	            0x415e	                                 pop r14	      1581	channel.c	FUNCTION_42
0x4004d94	            0x415f	                                 pop r15	      1581	channel.c	FUNCTION_42
0x4004d96	              0xc3	                                     ret	      1581	channel.c	FUNCTION_42
0x4004d97	    0x660f1f840000	                    nop word [rax + rax]	      1581	channel.c	FUNCTION_42
0x4004da0	    0x418bbe480300	           mov edi, dword [r14 + 0x348] 	      1581	channel.c	FUNCTION_42
0x4004da7	      0xe92dffffff	                           jmp 0x4004cd9	      1581	channel.c	FUNCTION_42
0x4004dac	         0xf1f4000	                         nop dword [rax]	      1581	channel.c	FUNCTION_42
0x4004db0	    0x41c786c00300	    mov dword [r14 + 0x3c0], 0xffffffff 	      1372	channel.c	FUNCTION_37	IF_2
0x4004dbb	      0xe9c9feffff	                           jmp 0x4004c89	      1372	channel.c	FUNCTION_37	IF_2
0x4004dc0	    0x41c786c00300	              mov dword [r14 + 0x3c0], 1	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4004dcb	      0xe9b9feffff	                           jmp 0x4004c89	      1374	channel.c	FUNCTION_37	ELSE_1	IF_3
0x4004dd0	            0x85c0	                           test eax, eax	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4004dd2	     0xf8e2affffff	                           jle 0x4004d02	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4004dd8	    0x4183bec00300	              cmp dword [r14 + 0x3c0], 1	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4004de0	            0x7436	                            je 0x4004e18	      1396	channel.c	FUNCTION_37	FOR_1	IF_5
0x4004de2	          0x4889de	                            mov rsi, rbx	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4004de5	          0x4c89f2	                            mov rdx, r14	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4004de8	          0x4889ef	                            mov rdi, rbp	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4004deb	      0xe800e0ffff	                 call sym.write_buf_line	      1564	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2	CALL_2
0x4004df0	        0x4183c501	                             add r13d, 1	      1565	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004df4	        0x4883c301	                              add rbx, 1	      1560	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004df8	        0x48395d00	                    cmp qword [rbp], rbx	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004dfc	     0xf8e16ffffff	                           jle 0x4004d18	      1559	channel.c	FUNCTION_42	FOR_1	IF_1	FOR_2
0x4004e02	    0x4183be480300	cmp dword [r14 + 0x348], 0xffffffffffffffff	      1367	channel.c	FUNCTION_37	IF_1
0x4004e0a	     0xf8560feffff	                           jne 0x4004c70	      1367	channel.c	FUNCTION_37	IF_1
0x4004e10	      0xe903ffffff	                           jmp 0x4004d18	      1367	channel.c	FUNCTION_37	IF_1
0x4004e15	           0xf1f00	                         nop dword [rax]	      1367	channel.c	FUNCTION_37	IF_1
0x4004e18	      0xbe00000000	                              mov esi, 0	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4004e1d	          0x4c89f7	                            mov rdi, r14	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4004e20	            0x31c0	                            xor eax, eax	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4004e22	      0xe800000000	                          call 0x4004e27	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4004e27	      0xe9ecfeffff	                           jmp 0x4004d18	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4004e2c	         0xf1f4000	                         nop dword [rax]	      1399	channel.c	FUNCTION_37	FOR_1	IF_5	CALL_4
0x4004e30	            0x31c0	                            xor eax, eax	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4004e32	          0x4829da	                            sub rdx, rbx	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4004e35	      0xbe00000000	                              mov esi, 0	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4004e3a	          0x4c89f7	                            mov rdi, r14	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4004e3d	      0xe800000000	                          call 0x4004e42	      1573	channel.c	FUNCTION_42	FOR_1	IF_1	IF_6	CALL_5
0x4004e42	    0x49899e500400	            mov qword [r14 + 0x450], rbx	      1576	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004e49	      0xb801000000	                              mov eax, 1	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004e4e	      0xe9fcfeffff	                           jmp 0x4004d4f	      1558	channel.c	FUNCTION_42	FOR_1	IF_1
0x4004e53	          0x8d53ff	                      lea edx, [rbx - 1]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004e56	      0xbe00000000	                              mov esi, 0	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004e5b	          0x4c89f7	                            mov rdi, r14	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004e5e	            0x31c0	                            xor eax, eax	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004e60	      0xe800000000	                          call 0x4004e65	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004e65	        0x488b5500	                    mov rdx, qword [rbp]	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004e69	      0xe9ccfeffff	                           jmp 0x4004d3a	      1569	channel.c	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4004e6e	      0xe800000000	                          call 0x4004e73	      1581	channel.c	FUNCTION_42
channel_select_check	WHILE,0:FOR,2:CALL,7:IF,3:ELSE,1:functions,0:DO,0:SWITCH,0	227
0x4009cb0	            0x4157	                                push r15	      4166	channel.c	FUNCTION_94
0x4009cb2	            0x4156	                                push r14	      4166	channel.c	FUNCTION_94
0x4009cb4	            0x4155	                                push r13	      4166	channel.c	FUNCTION_94
0x4009cb6	            0x4154	                                push r12	      4166	channel.c	FUNCTION_94
0x4009cb8	          0x4989f5	                            mov r13, rsi	      4166	channel.c	FUNCTION_94
0x4009cbb	              0x55	                                push rbp	      4166	channel.c	FUNCTION_94
0x4009cbc	              0x53	                                push rbx	      4166	channel.c	FUNCTION_94
0x4009cbd	            0x89fd	                            mov ebp, edi	      4166	channel.c	FUNCTION_94
0x4009cbf	    0x41bc01000000	                             mov r12d, 1	      4166	channel.c	FUNCTION_94
0x4009cc5	        0x4883ec28	                           sub rsp, 0x28	      4166	channel.c	FUNCTION_94
0x4009cc9	    0x488b1d000000	            mov rbx, qword [0x04009cd0] 	      4174	channel.c	FUNCTION_94	FOR_1
0x4009cd0	      0x4889542408	                mov qword [rsp + 8], rdx	      4166	channel.c	FUNCTION_94
0x4009cd5	          0x4885db	                           test rbx, rbx	      4174	channel.c	FUNCTION_94	FOR_1
0x4009cd8	     0xf85a9010000	                           jne 0x4009e87	      4174	channel.c	FUNCTION_94	FOR_1
0x4009cde	      0xe94d030000	                           jmp 0x400a030	      4174	channel.c	FUNCTION_94	FOR_1
0x4009ce3	       0xf1f440000	                   nop dword [rax + rax]	      4174	channel.c	FUNCTION_94	FOR_1
0x4009ce8	          0x4584f6	                         test r14b, r14b	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009ceb	     0xf84aa010000	                            je 0x4009e9b	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009cf1	          0x4963c7	                        movsxd rax, r15d	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009cf4	          0x4889c7	                            mov rdi, rax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009cf7	      0x4889442410	             mov qword [rsp + 0x10], rax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009cfc	      0xe800000000	                          call 0x4009d01	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d01	          0x4489fe	                           mov esi, r15d	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d04	          0x4c89e7	                            mov rdi, r12	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d07	          0xc1fe1f	                           sar esi, 0x1f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d0a	          0xc1ee1a	                           shr esi, 0x1a	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d0d	        0x418d0c37	                    lea ecx, [r15 + rsi]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d11	          0x83e13f	                           and ecx, 0x3f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d14	            0x29f1	                            sub ecx, esi	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d16	          0x48d3e7	                             shl rdi, cl	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d19	      0x49857cc500	          test qword [r13 + rax*8], rdi 	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d1e	     0xf852c020000	                           jne 0x4009f50	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d24	    0x8b8ba4040000	           mov ecx, dword [rbx + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009d2a	            0x85c9	                           test ecx, ecx	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009d2c	     0xf8581010000	                           jne 0x4009eb3	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009d32	    0x448bbb280100	          mov r15d, dword [rbx + 0x128] 	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4009d39	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d3d	     0xf8495010000	                            je 0x4009ed8	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d43	          0x4584f6	                         test r14b, r14b	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d46	     0xf848c010000	                            je 0x4009ed8	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d4c	          0x4963c7	                        movsxd rax, r15d	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d4f	          0x4889c7	                            mov rdi, rax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d52	      0x4889442410	             mov qword [rsp + 0x10], rax	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d57	      0xe800000000	                          call 0x4009d5c	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d5c	          0x4489fe	                           mov esi, r15d	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d5f	          0x4c89e2	                            mov rdx, r12	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d62	          0xc1fe1f	                           sar esi, 0x1f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d65	          0xc1ee1a	                           shr esi, 0x1a	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d68	        0x418d0c37	                    lea ecx, [r15 + rsi]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d6c	          0x83e13f	                           and ecx, 0x3f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d6f	            0x29f1	                            sub ecx, esi	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d71	          0x48d3e2	                             shl rdx, cl	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d74	      0x498554c500	          test qword [r13 + rax*8], rdx 	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d79	     0xf8549020000	                           jne 0x4009fc8	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d7f	    0x8b93a4040000	           mov edx, dword [rbx + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009d85	            0x85d2	                           test edx, edx	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009d87	     0xf8563010000	                           jne 0x4009ef0	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009d8d	    0x448bbb380200	          mov r15d, dword [rbx + 0x238] 	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4009d94	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d98	     0xf847a010000	                            je 0x4009f18	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009d9e	          0x4584f6	                         test r14b, r14b	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009da1	     0xf8471010000	                            je 0x4009f18	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009da7	          0x4d63f7	                        movsxd r14, r15d	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009daa	          0x4c89f7	                            mov rdi, r14	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dad	      0xe800000000	                          call 0x4009db2	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009db2	          0x4489fe	                           mov esi, r15d	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009db5	          0x4c89e7	                            mov rdi, r12	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009db8	          0xc1fe1f	                           sar esi, 0x1f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dbb	          0xc1ee1a	                           shr esi, 0x1a	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dbe	        0x418d0c37	                    lea ecx, [r15 + rsi]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dc2	          0x83e13f	                           and ecx, 0x3f	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dc5	            0x29f1	                            sub ecx, esi	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dc7	          0x48d3e7	                             shl rdi, cl	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dca	      0x49857cc500	          test qword [r13 + rax*8], rdi 	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dcf	     0xf85bb010000	                           jne 0x4009f90	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009dd5	    0x8b83a4040000	           mov eax, dword [rbx + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009ddb	            0x85c0	                           test eax, eax	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009ddd	     0xf854d010000	                           jne 0x4009f30	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009de3	            0x85ed	                           test ebp, ebp	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4009de5	     0xf8e90000000	                           jle 0x4009e7b	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4009deb	    0x4863bb480300	        movsxd rdi, dword [rbx + 0x348] 	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4009df2	          0x83ffff	             cmp edi, 0xffffffffffffffff	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4009df5	     0xf8480000000	                            je 0x4009e7b	      4194	channel.c	FUNCTION_94	FOR_1	IF_3
0x4009dfb	      0xe800000000	                          call 0x4009e00	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e00	    0x4863bb480300	        movsxd rdi, dword [rbx + 0x348] 	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e07	      0x4c8b742408	                mov r14, qword [rsp + 8]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e0c	            0x89fa	                            mov edx, edi	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e0e	          0xc1fa1f	                           sar edx, 0x1f	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e11	          0xc1ea1a	                           shr edx, 0x1a	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e14	          0x8d0c17	                    lea ecx, [rdi + rdx]	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e17	          0x83e13f	                           and ecx, 0x3f	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e1a	            0x29d1	                            sub ecx, edx	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e1c	          0x4c89e2	                            mov rdx, r12	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e1f	          0x48d3e2	                             shl rdx, cl	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e22	        0x498514c6	          test qword [r14 + rax*8], rdx 	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e26	            0x7453	                            je 0x4009e7b	      4195	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_5
0x4009e28	      0xe800000000	                          call 0x4009e2d	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e2d	    0x8b9348030000	           mov edx, dword [rbx + 0x348] 	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e33	            0x89d6	                            mov esi, edx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e35	          0xc1fe1f	                           sar esi, 0x1f	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e38	          0xc1ee1a	                           shr esi, 0x1a	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e3b	          0x8d0c32	                    lea ecx, [rdx + rsi]	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e3e	          0x4c89e2	                            mov rdx, r12	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e41	          0x83e13f	                           and ecx, 0x3f	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e44	            0x29f1	                            sub ecx, esi	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e46	          0x48d3e2	                             shl rdx, cl	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e49	          0x48f7d2	                                 not rdx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e4c	        0x492114c6	            and qword [r14 + rax*8], rdx	      4198	channel.c	FUNCTION_94	FOR_1	IF_3	CALL_6
0x4009e50	    0x4883bbe00300	              cmp qword [rbx + 0x3e0], 0	      1514	channel.c	FUNCTION_40	IF_1
0x4009e58	     0xf84aa010000	                            je 0x400a008	      1514	channel.c	FUNCTION_40	IF_1
0x4009e5e	    0x41b800000000	                              mov r8d, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x4009e64	            0x31c9	                            xor ecx, ecx	      1515	channel.c	FUNCTION_40	CALL_1
0x4009e66	      0xba00000000	                              mov edx, 0	      1515	channel.c	FUNCTION_40	CALL_1
0x4009e6b	      0xbe03000000	                              mov esi, 3	      1515	channel.c	FUNCTION_40	CALL_1
0x4009e70	          0x4889df	                            mov rdi, rbx	      1515	channel.c	FUNCTION_40	CALL_1
0x4009e73	      0xe800000000	                          call 0x4009e78	      1515	channel.c	FUNCTION_40	CALL_1
0x4009e78	          0x83ed01	                              sub ebp, 1	      4200	channel.c	FUNCTION_94	FOR_1	IF_3
0x4009e7b	          0x488b1b	                    mov rbx, qword [rbx]	      4174	channel.c	FUNCTION_94	FOR_1
0x4009e7e	          0x4885db	                           test rbx, rbx	      4174	channel.c	FUNCTION_94	FOR_1
0x4009e81	     0xf84a9010000	                            je 0x400a030	      4174	channel.c	FUNCTION_94	FOR_1
0x4009e87	        0x448b7b18	           mov r15d, dword [rbx + 0x18] 	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4009e8b	            0x85ed	                           test ebp, ebp	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009e8d	        0x410f9fc6	                               setg r14b	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009e91	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009e95	     0xf854dfeffff	                           jne 0x4009ce8	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009e9b	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009e9f	     0xf848dfeffff	                            je 0x4009d32	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009ea5	    0x8b8ba4040000	           mov ecx, dword [rbx + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009eab	            0x85c9	                           test ecx, ecx	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009ead	     0xf847ffeffff	                            je 0x4009d32	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009eb3	            0x31f6	                            xor esi, esi	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009eb5	      0xba00000000	                              mov edx, 0	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009eba	          0x4889df	                            mov rdi, rbx	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009ebd	      0xe83ebaffff	                   call sym.channel_read	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009ec2	    0x448bbb280100	          mov r15d, dword [rbx + 0x128] 	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4009ec9	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009ecd	     0xf8570feffff	                           jne 0x4009d43	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009ed3	       0xf1f440000	                   nop dword [rax + rax]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009ed8	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009edc	     0xf84abfeffff	                            je 0x4009d8d	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009ee2	    0x8b93a4040000	           mov edx, dword [rbx + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009ee8	            0x85d2	                           test edx, edx	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009eea	     0xf849dfeffff	                            je 0x4009d8d	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009ef0	      0xba00000000	                              mov edx, 0	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009ef5	      0xbe01000000	                              mov esi, 1	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009efa	          0x4889df	                            mov rdi, rbx	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009efd	      0xe8feb9ffff	                   call sym.channel_read	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009f02	    0x448bbb380200	          mov r15d, dword [rbx + 0x238] 	      4178	channel.c	FUNCTION_94	FOR_1	FOR_2
0x4009f09	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009f0d	     0xf858bfeffff	                           jne 0x4009d9e	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009f13	       0xf1f440000	                   nop dword [rax + rax]	      4180	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_1
0x4009f18	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009f1c	     0xf84c1feffff	                            je 0x4009de3	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009f22	    0x8b83a4040000	           mov eax, dword [rbx + 0x4a4] 	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009f28	            0x85c0	                           test eax, eax	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009f2a	     0xf84b3feffff	                            je 0x4009de3	      4186	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2
0x4009f30	      0xba00000000	                              mov edx, 0	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009f35	      0xbe02000000	                              mov esi, 2	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009f3a	          0x4889df	                            mov rdi, rbx	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009f3d	      0xe8beb9ffff	                   call sym.channel_read	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009f42	      0xe99cfeffff	                           jmp 0x4009de3	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009f47	    0x660f1f840000	                    nop word [rax + rax]	      4189	channel.c	FUNCTION_94	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x4009f50	            0x31f6	                            xor esi, esi	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009f52	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009f57	      0xba00000000	                              mov edx, 0	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009f5c	          0x4889df	                            mov rdi, rbx	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009f5f	          0x83ed01	                              sub ebp, 1	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x4009f62	      0xe899b9ffff	                   call sym.channel_read	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009f67	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f6c	      0xe800000000	                          call 0x4009f71	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f71	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f76	          0x48f7d1	                                 not rcx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f79	      0x49214cc500	            and qword [r13 + rax*8], rcx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f7e	            0x85ed	                           test ebp, ebp	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f80	        0x410f9fc6	                               setg r14b	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f84	      0xe9a9fdffff	                           jmp 0x4009d32	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f89	     0xf1f80000000	                         nop dword [rax]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f90	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009f95	      0xba00000000	                              mov edx, 0	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009f9a	      0xbe02000000	                              mov esi, 2	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009f9f	          0x4889df	                            mov rdi, rbx	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009fa2	          0x83ed01	                              sub ebp, 1	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x4009fa5	      0xe856b9ffff	                   call sym.channel_read	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009faa	          0x4c89f7	                            mov rdi, r14	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fad	      0xe800000000	                          call 0x4009fb2	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fb2	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fb7	          0x48f7d1	                                 not rcx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fba	      0x49214cc500	            and qword [r13 + rax*8], rcx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fbf	      0xe91ffeffff	                           jmp 0x4009de3	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fc4	         0xf1f4000	                         nop dword [rax]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fc8	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fcd	      0xbe01000000	                              mov esi, 1	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009fd2	      0xba00000000	                              mov edx, 0	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009fd7	          0x4889df	                            mov rdi, rbx	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009fda	          0x83ed01	                              sub ebp, 1	      4184	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1
0x4009fdd	      0xe81eb9ffff	                   call sym.channel_read	      4182	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_2
0x4009fe2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fe7	      0xe800000000	                          call 0x4009fec	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fec	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009ff1	          0x48f7d1	                                 not rcx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009ff4	      0x49214cc500	            and qword [r13 + rax*8], rcx	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009ff9	            0x85ed	                           test ebp, ebp	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009ffb	        0x410f9fc6	                               setg r14b	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x4009fff	      0xe989fdffff	                           jmp 0x4009d8d	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x400a004	         0xf1f4000	                         nop dword [rax]	      4183	channel.c	FUNCTION_94	FOR_1	FOR_2	IF_1	CALL_3
0x400a008	    0x488bbb280400	           mov rdi, qword [rbx + 0x428] 	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x400a00f	          0x4885ff	                           test rdi, rdi	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x400a012	     0xf8460feffff	                            je 0x4009e78	      1516	channel.c	FUNCTION_40	ELSE_1	IF_2
0x400a018	    0x8bb340040000	           mov esi, dword [rbx + 0x440] 	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x400a01e	            0x85f6	                           test esi, esi	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x400a020	            0x7526	                           jne 0x400a048	      1518	channel.c	FUNCTION_40	ELSE_1	IF_2	IF_3
0x400a022	          0x4889df	                            mov rdi, rbx	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x400a025	      0xe89693ffff	               call sym.channel_write_in	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x400a02a	      0xe949feffff	                           jmp 0x4009e78	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x400a02f	              0x90	                                     nop	      1521	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_3
0x400a030	        0x4883c428	                           add rsp, 0x28	      4205	channel.c	FUNCTION_94
0x400a034	            0x89e8	                            mov eax, ebp	      4205	channel.c	FUNCTION_94
0x400a036	              0x5b	                                 pop rbx	      4205	channel.c	FUNCTION_94
0x400a037	              0x5d	                                 pop rbp	      4205	channel.c	FUNCTION_94
0x400a038	            0x415c	                                 pop r12	      4205	channel.c	FUNCTION_94
0x400a03a	            0x415d	                                 pop r13	      4205	channel.c	FUNCTION_94
0x400a03c	            0x415e	                                 pop r14	      4205	channel.c	FUNCTION_94
0x400a03e	            0x415f	                                 pop r15	      4205	channel.c	FUNCTION_94
0x400a040	              0xc3	                                     ret	      4205	channel.c	FUNCTION_94
0x400a041	     0xf1f80000000	                         nop dword [rax]	      4205	channel.c	FUNCTION_94
0x400a048	      0xe800000000	                          call 0x400a04d	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
0x400a04d	      0xe926feffff	                           jmp 0x4009e78	      1519	channel.c	FUNCTION_40	ELSE_1	IF_2	CALL_2
channel_select_setup	WHILE,0:FOR,2:CALL,2:IF,4:ELSE,1:functions,0:DO,0:SWITCH,0	175
0x40099c0	            0x4157	                                push r15	      4118	channel.c	FUNCTION_93
0x40099c2	            0x4156	                                push r14	      4118	channel.c	FUNCTION_93
0x40099c4	            0x4155	                                push r13	      4118	channel.c	FUNCTION_93
0x40099c6	            0x4154	                                push r12	      4118	channel.c	FUNCTION_93
0x40099c8	              0x55	                                push rbp	      4118	channel.c	FUNCTION_93
0x40099c9	              0x53	                                push rbx	      4118	channel.c	FUNCTION_93
0x40099ca	            0x89fd	                            mov ebp, edi	      4118	channel.c	FUNCTION_93
0x40099cc	        0x4883ec18	                           sub rsp, 0x18	      4118	channel.c	FUNCTION_93
0x40099d0	    0x488b1d000000	            mov rbx, qword [0x040099d7] 	      4125	channel.c	FUNCTION_93	FOR_1
0x40099d7	      0x4c89442408	                 mov qword [rsp + 8], r8	      4118	channel.c	FUNCTION_93
0x40099dc	          0x4885db	                           test rbx, rbx	      4125	channel.c	FUNCTION_93	FOR_1
0x40099df	     0xf8400020000	                            je 0x4009be5	      4125	channel.c	FUNCTION_93	FOR_1
0x40099e5	          0x4989f7	                            mov r15, rsi	      4125	channel.c	FUNCTION_93	FOR_1
0x40099e8	          0x4989d4	                            mov r12, rdx	      4125	channel.c	FUNCTION_93	FOR_1
0x40099eb	          0x4989ce	                            mov r14, rcx	      4125	channel.c	FUNCTION_93	FOR_1
0x40099ee	      0xe9d1000000	                           jmp 0x4009ac4	      4125	channel.c	FUNCTION_93	FOR_1
0x40099f3	       0xf1f440000	                   nop dword [rax + rax]	      4125	channel.c	FUNCTION_93	FOR_1
0x40099f8	          0x4963fd	                        movsxd rdi, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x40099fb	      0xe800000000	                          call 0x4009a00	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a00	          0x4489ef	                           mov edi, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a03	      0xba01000000	                              mov edx, 1	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a08	          0xc1ff1f	                           sar edi, 0x1f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a0b	          0xc1ef1a	                           shr edi, 0x1a	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a0e	      0x418d4c3d00	                    lea ecx, [r13 + rdi]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a13	          0x83e13f	                           and ecx, 0x3f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a16	            0x29f9	                            sub ecx, edi	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a18	          0x48d3e2	                             shl rdx, cl	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a1b	        0x490914c7	             or qword [r15 + rax*8], rdx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a1f	          0x4439ed	                           cmp ebp, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a22	        0x410f4ced	                         cmovl ebp, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a26	    0x448bab280100	          mov r13d, dword [rbx + 0x128] 	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4009a2d	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009a31	            0x743c	                            je 0x4009a6f	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009a33	    0x8b93a4040000	           mov edx, dword [rbx + 0x4a4] 	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009a39	            0x85d2	                           test edx, edx	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009a3b	     0xf85bf010000	                           jne 0x4009c00	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009a41	          0x4963fd	                        movsxd rdi, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a44	      0xe800000000	                          call 0x4009a49	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a49	          0x4489ef	                           mov edi, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a4c	      0xba01000000	                              mov edx, 1	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a51	          0xc1ff1f	                           sar edi, 0x1f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a54	          0xc1ef1a	                           shr edi, 0x1a	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a57	      0x418d4c3d00	                    lea ecx, [r13 + rdi]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a5c	          0x83e13f	                           and ecx, 0x3f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a5f	            0x29f9	                            sub ecx, edi	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a61	          0x48d3e2	                             shl rdx, cl	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a64	        0x490914c7	             or qword [r15 + rax*8], rdx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a68	          0x4439ed	                           cmp ebp, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a6b	        0x410f4ced	                         cmovl ebp, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a6f	    0x448bab380200	          mov r13d, dword [rbx + 0x238] 	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4009a76	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009a7a	            0x743c	                            je 0x4009ab8	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009a7c	    0x8b83a4040000	           mov eax, dword [rbx + 0x4a4] 	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009a82	            0x85c0	                           test eax, eax	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009a84	     0xf8503020000	                           jne 0x4009c8d	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009a8a	          0x4963fd	                        movsxd rdi, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a8d	      0xe800000000	                          call 0x4009a92	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a92	          0x4489ef	                           mov edi, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a95	      0xba01000000	                              mov edx, 1	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a9a	          0xc1ff1f	                           sar edi, 0x1f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009a9d	          0xc1ef1a	                           shr edi, 0x1a	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009aa0	      0x418d4c3d00	                    lea ecx, [r13 + rdi]	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009aa5	          0x83e13f	                           and ecx, 0x3f	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009aa8	            0x29f9	                            sub ecx, edi	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009aaa	          0x48d3e2	                             shl rdx, cl	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009aad	        0x490914c7	             or qword [r15 + rax*8], rdx	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009ab1	          0x4439ed	                           cmp ebp, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009ab4	        0x410f4ced	                         cmovl ebp, r13d	      4148	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x4009ab8	          0x488b1b	                    mov rbx, qword [rbx]	      4125	channel.c	FUNCTION_93	FOR_1
0x4009abb	          0x4885db	                           test rbx, rbx	      4125	channel.c	FUNCTION_93	FOR_1
0x4009abe	     0xf84ab000000	                            je 0x4009b6f	      4125	channel.c	FUNCTION_93	FOR_1
0x4009ac4	        0x448b6b18	           mov r13d, dword [rbx + 0x18] 	      4129	channel.c	FUNCTION_93	FOR_1	FOR_2
0x4009ac8	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009acc	     0xf8454ffffff	                            je 0x4009a26	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009ad2	    0x8b8ba4040000	           mov ecx, dword [rbx + 0x4a4] 	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009ad8	            0x85c9	                           test ecx, ecx	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009ada	     0xf8418ffffff	                            je 0x40099f8	      4133	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2
0x4009ae0	      0x488b442408	                mov rax, qword [rsp + 8]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009ae5	        0x48833800	                      cmp qword [rax], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009ae9	            0x740a	                            je 0x4009af5	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009aeb	        0x49833e00	                      cmp qword [r14], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009aef	     0xf8e6b010000	                           jle 0x4009c60	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009af5	    0x83bb28010000	cmp dword [rbx + 0x128], 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009afc	          0x4c8930	                    mov qword [rax], r14	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009aff	    0x49c706000000	                      mov qword [r14], 0	      4142	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b06	    0x49c74608204e	            mov qword [r14 + 8], 0x4e20 	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b0e	     0xf846c010000	                            je 0x4009c80	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009b14	        0x49833e00	                      cmp qword [r14], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b18	     0xf8e02010000	                           jle 0x4009c20	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b1e	    0x83bb38020000	cmp dword [rbx + 0x238], 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009b25	      0x488b442408	                mov rax, qword [rsp + 8]	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b2a	          0x4c8930	                    mov qword [rax], r14	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b2d	    0x49c706000000	                      mov qword [r14], 0	      4142	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b34	    0x49c74608204e	            mov qword [r14 + 8], 0x4e20 	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b3c	     0xf8476ffffff	                            je 0x4009ab8	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009b42	        0x49833e00	                      cmp qword [r14], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b46	     0xf8efc000000	                           jle 0x4009c48	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b4c	      0x488b442408	                mov rax, qword [rsp + 8]	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b51	          0x4c8930	                    mov qword [rax], r14	      4141	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b54	          0x488b1b	                    mov rbx, qword [rbx]	      4125	channel.c	FUNCTION_93	FOR_1
0x4009b57	    0x49c706000000	                      mov qword [r14], 0	      4142	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b5e	    0x49c74608204e	            mov qword [r14 + 8], 0x4e20 	      4143	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009b66	          0x4885db	                           test rbx, rbx	      4125	channel.c	FUNCTION_93	FOR_1
0x4009b69	     0xf8555ffffff	                           jne 0x4009ac4	      4125	channel.c	FUNCTION_93	FOR_1
0x4009b6f	    0x488b1d000000	            mov rbx, qword [0x04009b76] 	      3058	channel.c	FUNCTION_74	FOR_1
0x4009b76	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x4009b79	            0x746a	                            je 0x4009be5	      3058	channel.c	FUNCTION_74	FOR_1
0x4009b7b	    0x41bd01000000	                             mov r13d, 1	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b81	            0xeb3a	                           jmp 0x4009bbd	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b83	       0xf1f440000	                   nop dword [rax + rax]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b88	      0xe800000000	                          call 0x4009b8d	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b8d	    0x8b9348030000	           mov edx, dword [rbx + 0x348] 	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b93	            0x89d6	                            mov esi, edx	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b95	          0xc1fe1f	                           sar esi, 0x1f	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b98	          0xc1ee1a	                           shr esi, 0x1a	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b9b	          0x8d0c32	                    lea ecx, [rdx + rsi]	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009b9e	          0x83e13f	                           and ecx, 0x3f	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009ba1	            0x29f1	                            sub ecx, esi	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009ba3	          0x4c89ee	                            mov rsi, r13	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009ba6	          0x48d3e6	                             shl rsi, cl	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009ba9	        0x490934c4	             or qword [r12 + rax*8], rsi	      3066	channel.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4009bad	          0x8d4201	                      lea eax, [rdx + 1]	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4009bb0	            0x39d5	                            cmp ebp, edx	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4009bb2	           0xf4ee8	                         cmovle ebp, eax	      3068	channel.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4009bb5	          0x488b1b	                    mov rbx, qword [rbx]	      3058	channel.c	FUNCTION_74	FOR_1
0x4009bb8	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x4009bbb	            0x7428	                            je 0x4009be5	      3058	channel.c	FUNCTION_74	FOR_1
0x4009bbd	    0x4863bb480300	        movsxd rdi, dword [rbx + 0x348] 	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x4009bc4	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x4009bc7	            0x74ec	                            je 0x4009bb5	      3062	channel.c	FUNCTION_74	FOR_1	IF_1
0x4009bc9	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x4009bd1	            0x75b5	                           jne 0x4009b88	      3063	channel.c	FUNCTION_74	FOR_1	IF_1
0x4009bd3	    0x4883bbe00300	              cmp qword [rbx + 0x3e0], 0	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x4009bdb	            0x75ab	                           jne 0x4009b88	      3064	channel.c	FUNCTION_74	FOR_1	IF_1
0x4009bdd	          0x488b1b	                    mov rbx, qword [rbx]	      3058	channel.c	FUNCTION_74	FOR_1
0x4009be0	          0x4885db	                           test rbx, rbx	      3058	channel.c	FUNCTION_74	FOR_1
0x4009be3	            0x75d8	                           jne 0x4009bbd	      3058	channel.c	FUNCTION_74	FOR_1
0x4009be5	        0x4883c418	                           add rsp, 0x18	      4159	channel.c	FUNCTION_93
0x4009be9	            0x89e8	                            mov eax, ebp	      4159	channel.c	FUNCTION_93
0x4009beb	              0x5b	                                 pop rbx	      4159	channel.c	FUNCTION_93
0x4009bec	              0x5d	                                 pop rbp	      4159	channel.c	FUNCTION_93
0x4009bed	            0x415c	                                 pop r12	      4159	channel.c	FUNCTION_93
0x4009bef	            0x415d	                                 pop r13	      4159	channel.c	FUNCTION_93
0x4009bf1	            0x415e	                                 pop r14	      4159	channel.c	FUNCTION_93
0x4009bf3	            0x415f	                                 pop r15	      4159	channel.c	FUNCTION_93
0x4009bf5	              0xc3	                                     ret	      4159	channel.c	FUNCTION_93
0x4009bf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4159	channel.c	FUNCTION_93
0x4009c00	      0x488b442408	                mov rax, qword [rsp + 8]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c05	        0x48833800	                      cmp qword [rax], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c09	     0xf840fffffff	                            je 0x4009b1e	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c0f	        0x49833e00	                      cmp qword [r14], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c13	     0xf8f05ffffff	                            jg 0x4009b1e	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c19	     0xf1f80000000	                         nop dword [rax]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c20	    0x49817e08204e	            cmp qword [r14 + 8], 0x4e20 	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c28	     0xf8ff0feffff	                            jg 0x4009b1e	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c2e	    0x83bb38020000	cmp dword [rbx + 0x238], 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009c35	     0xf847dfeffff	                            je 0x4009ab8	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009c3b	        0x49833e00	                      cmp qword [r14], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c3f	     0xf8f07ffffff	                            jg 0x4009b4c	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c45	           0xf1f00	                         nop dword [rax]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c48	    0x49817e08204e	            cmp qword [r14 + 8], 0x4e20 	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c50	     0xf8ff6feffff	                            jg 0x4009b4c	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c56	      0xe95dfeffff	                           jmp 0x4009ab8	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c5b	       0xf1f440000	                   nop dword [rax + rax]	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c60	    0x49817e08204e	            cmp qword [r14 + 8], 0x4e20 	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c68	     0xf8f87feffff	                            jg 0x4009af5	      4139	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c6e	    0x83bb28010000	cmp dword [rbx + 0x128], 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009c75	     0xf8599feffff	                           jne 0x4009b14	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009c7b	       0xf1f440000	                   nop dword [rax + rax]	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009c80	    0x83bb38020000	cmp dword [rbx + 0x238], 0xffffffffffffffff	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009c87	     0xf842bfeffff	                            je 0x4009ab8	      4131	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1
0x4009c8d	      0x488b442408	                mov rax, qword [rsp + 8]	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c92	        0x48833800	                      cmp qword [rax], 0	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c96	     0xf84b0feffff	                            je 0x4009b4c	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x4009c9c	      0xe9a1feffff	                           jmp 0x4009b42	      4138	channel.c	FUNCTION_93	FOR_1	FOR_2	IF_1	IF_2	IF_3
channel_set_pipes	WHILE,0:FOR,0:CALL,8:IF,4:ELSE,0:functions,0:DO,0:SWITCH,0	153
0x4003a20	            0x4154	                                push r12	      1016	channel.c	FUNCTION_30
0x4003a22	              0x55	                                push rbp	      1016	channel.c	FUNCTION_30
0x4003a23	          0x4189d4	                           mov r12d, edx	      1016	channel.c	FUNCTION_30
0x4003a26	              0x53	                                push rbx	      1016	channel.c	FUNCTION_30
0x4003a27	            0x89cd	                            mov ebp, ecx	      1016	channel.c	FUNCTION_30
0x4003a29	          0x4889fb	                            mov rbx, rdi	      1016	channel.c	FUNCTION_30
0x4003a2c	        0x4883ec10	                           sub rsp, 0x10	      1016	channel.c	FUNCTION_30
0x4003a30	          0x83feff	             cmp esi, 0xffffffffffffffff	      1017	channel.c	FUNCTION_30	IF_1
0x4003a33	            0x7444	                            je 0x4003a79	      1017	channel.c	FUNCTION_30	IF_1
0x4003a35	    0x8bbf48030000	           mov edi, dword [rdi + 0x348] 	       988	channel.c	FUNCTION_29	IF_1
0x4003a3b	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4003a3e	            0x7424	                            je 0x4003a64	       988	channel.c	FUNCTION_29	IF_1
0x4003a40	    0x3bbb28010000	           cmp edi, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003a46	            0x7415	                            je 0x4003a5d	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003a48	    0x3bbb38020000	           cmp edi, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003a4e	            0x740d	                            je 0x4003a5d	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003a50	        0x8974240c	              mov dword [rsp + 0xc], esi	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003a54	      0xe800000000	                          call 0x4003a59	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003a59	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003a5d	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffff7	      1010	channel.c	FUNCTION_29	IF_1
0x4003a64	    0x89b348030000	            mov dword [rbx + 0x348], esi	      1020	channel.c	FUNCTION_30	IF_1
0x4003a6a	            0x89f7	                            mov edi, esi	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4003a6c	      0xe800000000	                          call 0x4003a71	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4003a71	            0x85c0	                           test eax, eax	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4003a73	     0xf850f010000	                           jne 0x4003b88	      1024	channel.c	FUNCTION_30	IF_1	IF_2	CALL_2
0x4003a79	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      1028	channel.c	FUNCTION_30	IF_3
0x4003a7d	            0x747f	                            je 0x4003afe	      1028	channel.c	FUNCTION_30	IF_3
0x4003a7f	    0x8b832c010000	           mov eax, dword [rbx + 0x12c] 	       614	channel.c	FUNCTION_25	IF_2
0x4003a85	            0x85c0	                           test eax, eax	       614	channel.c	FUNCTION_25	IF_2
0x4003a87	     0xf8553010000	                           jne 0x4003be0	       614	channel.c	FUNCTION_25	IF_2
0x4003a8d	    0x8bbb28010000	           mov edi, dword [rbx + 0x128] 	       988	channel.c	FUNCTION_29	IF_1
0x4003a93	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4003a96	     0xf847c010000	                            je 0x4003c18	       988	channel.c	FUNCTION_29	IF_1
0x4003a9c	    0x3bbb48030000	           cmp edi, dword [rbx + 0x348] 	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003aa2	            0x740d	                            je 0x4003ab1	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003aa4	    0x3bbb38020000	           cmp edi, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003aaa	            0x7405	                            je 0x4003ab1	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003aac	      0xe800000000	                          call 0x4003ab1	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003ab1	    0x8b836c040000	           mov eax, dword [rbx + 0x46c] 	      1010	channel.c	FUNCTION_29	IF_1
0x4003ab7	          0x83e0fd	                     and eax, 0xfffffffd	      1010	channel.c	FUNCTION_29	IF_1
0x4003aba	    0x448b1d000000	           mov r11d, dword [0x04003ac1] 	       521	channel.c	FUNCTION_22	IF_1
0x4003ac1	          0x83c802	                               or eax, 2	      1035	channel.c	FUNCTION_30	IF_3
0x4003ac4	    0x4489a3280100	           mov dword [rbx + 0x128], r12d	      1034	channel.c	FUNCTION_30	IF_3
0x4003acb	    0x89836c040000	            mov dword [rbx + 0x46c], eax	      1035	channel.c	FUNCTION_30	IF_3
0x4003ad1	          0x4585db	                         test r11d, r11d	       521	channel.c	FUNCTION_22	IF_1
0x4003ad4	            0x750c	                           jne 0x4003ae2	       521	channel.c	FUNCTION_22	IF_1
0x4003ad6	    0x448b15000000	           mov r10d, dword [0x04003add] 	       521	channel.c	FUNCTION_22	IF_1
0x4003add	          0x4585d2	                         test r10d, r10d	       521	channel.c	FUNCTION_22	IF_1
0x4003ae0	            0x741c	                            je 0x4003afe	       521	channel.c	FUNCTION_22	IF_1
0x4003ae2	    0x448b8ba40400	           mov r9d, dword [rbx + 0x4a4] 	       525	channel.c	FUNCTION_22	IF_2
0x4003ae9	          0x4585c9	                           test r9d, r9d	       525	channel.c	FUNCTION_22	IF_2
0x4003aec	            0x7510	                           jne 0x4003afe	       525	channel.c	FUNCTION_22	IF_2
0x4003aee	    0x448b832c0100	           mov r8d, dword [rbx + 0x12c] 	       547	channel.c	FUNCTION_22	IF_4
0x4003af5	          0x4585c0	                           test r8d, r8d	       547	channel.c	FUNCTION_22	IF_4
0x4003af8	     0xf8472010000	                            je 0x4003c70	       547	channel.c	FUNCTION_22	IF_4
0x4003afe	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      1040	channel.c	FUNCTION_30	IF_4
0x4003b01	            0x7476	                            je 0x4003b79	      1040	channel.c	FUNCTION_30	IF_4
0x4003b03	    0x8bbb3c020000	           mov edi, dword [rbx + 0x23c] 	       614	channel.c	FUNCTION_25	IF_2
0x4003b09	            0x85ff	                           test edi, edi	       614	channel.c	FUNCTION_25	IF_2
0x4003b0b	     0xf8587000000	                           jne 0x4003b98	       614	channel.c	FUNCTION_25	IF_2
0x4003b11	    0x8bbb38020000	           mov edi, dword [rbx + 0x238] 	       988	channel.c	FUNCTION_29	IF_1
0x4003b17	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4003b1a	     0xf84b0000000	                            je 0x4003bd0	       988	channel.c	FUNCTION_29	IF_1
0x4003b20	    0x3bbb48030000	           cmp edi, dword [rbx + 0x348] 	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003b26	            0x740d	                            je 0x4003b35	       996	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003b28	    0x3bbb28010000	           cmp edi, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003b2e	            0x7405	                            je 0x4003b35	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003b30	      0xe800000000	                          call 0x4003b35	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4003b35	    0x8b836c040000	           mov eax, dword [rbx + 0x46c] 	      1010	channel.c	FUNCTION_29	IF_1
0x4003b3b	          0x83e0fb	                     and eax, 0xfffffffb	      1010	channel.c	FUNCTION_29	IF_1
0x4003b3e	    0x8b3500000000	            mov esi, dword [0x04003b44] 	       521	channel.c	FUNCTION_22	IF_1
0x4003b44	          0x83c804	                               or eax, 4	      1047	channel.c	FUNCTION_30	IF_4
0x4003b47	    0x89ab38020000	            mov dword [rbx + 0x238], ebp	      1046	channel.c	FUNCTION_30	IF_4
0x4003b4d	    0x89836c040000	            mov dword [rbx + 0x46c], eax	      1047	channel.c	FUNCTION_30	IF_4
0x4003b53	            0x85f6	                           test esi, esi	       521	channel.c	FUNCTION_22	IF_1
0x4003b55	            0x750a	                           jne 0x4003b61	       521	channel.c	FUNCTION_22	IF_1
0x4003b57	    0x8b0d00000000	            mov ecx, dword [0x04003b5d] 	       521	channel.c	FUNCTION_22	IF_1
0x4003b5d	            0x85c9	                           test ecx, ecx	       521	channel.c	FUNCTION_22	IF_1
0x4003b5f	            0x7418	                            je 0x4003b79	       521	channel.c	FUNCTION_22	IF_1
0x4003b61	    0x8b93a4040000	           mov edx, dword [rbx + 0x4a4] 	       525	channel.c	FUNCTION_22	IF_2
0x4003b67	            0x85d2	                           test edx, edx	       525	channel.c	FUNCTION_22	IF_2
0x4003b69	            0x750e	                           jne 0x4003b79	       525	channel.c	FUNCTION_22	IF_2
0x4003b6b	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	       547	channel.c	FUNCTION_22	IF_4
0x4003b71	            0x85c0	                           test eax, eax	       547	channel.c	FUNCTION_22	IF_4
0x4003b73	     0xf84af000000	                            je 0x4003c28	       547	channel.c	FUNCTION_22	IF_4
0x4003b79	        0x4883c410	                           add rsp, 0x10	      1052	channel.c	FUNCTION_30
0x4003b7d	              0x5b	                                 pop rbx	      1052	channel.c	FUNCTION_30
0x4003b7e	              0x5d	                                 pop rbp	      1052	channel.c	FUNCTION_30
0x4003b7f	            0x415c	                                 pop r12	      1052	channel.c	FUNCTION_30
0x4003b81	              0xc3	                                     ret	      1052	channel.c	FUNCTION_30
0x4003b82	    0x660f1f440000	                    nop word [rax + rax]	      1052	channel.c	FUNCTION_30
0x4003b88	    0x838b6c040000	               or dword [rbx + 0x46c], 8	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4003b8f	      0xe9e5feffff	                           jmp 0x4003a79	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4003b94	         0xf1f4000	                         nop dword [rax]	      1025	channel.c	FUNCTION_30	IF_1	IF_2
0x4003b98	            0x31c0	                            xor eax, eax	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003b9a	      0xba00000000	                              mov edx, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003b9f	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003ba4	          0x4889df	                            mov rdi, rbx	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003ba7	      0xe800000000	                          call 0x4003bac	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003bac	    0x8bbb3c020000	           mov edi, dword [rbx + 0x23c] 	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4003bb2	      0xe800000000	                          call 0x4003bb7	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4003bb7	    0x8bbb38020000	           mov edi, dword [rbx + 0x238] 	       988	channel.c	FUNCTION_29	IF_1
0x4003bbd	    0xc7833c020000	              mov dword [rbx + 0x23c], 0	       622	channel.c	FUNCTION_25	IF_2
0x4003bc7	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4003bca	     0xf8550ffffff	                           jne 0x4003b20	       988	channel.c	FUNCTION_29	IF_1
0x4003bd0	    0x8b836c040000	           mov eax, dword [rbx + 0x46c] 	       988	channel.c	FUNCTION_29	IF_1
0x4003bd6	      0xe963ffffff	                           jmp 0x4003b3e	       988	channel.c	FUNCTION_29	IF_1
0x4003bdb	       0xf1f440000	                   nop dword [rax + rax]	       988	channel.c	FUNCTION_29	IF_1
0x4003be0	            0x31c0	                            xor eax, eax	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003be2	      0xba00000000	                              mov edx, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003be7	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003bec	          0x4889df	                            mov rdi, rbx	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003bef	      0xe800000000	                          call 0x4003bf4	       616	channel.c	FUNCTION_25	IF_2	CALL_3
0x4003bf4	    0x8bbb2c010000	           mov edi, dword [rbx + 0x12c] 	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4003bfa	      0xe800000000	                          call 0x4003bff	       620	channel.c	FUNCTION_25	IF_2	CALL_5
0x4003bff	    0x8bbb28010000	           mov edi, dword [rbx + 0x128] 	       988	channel.c	FUNCTION_29	IF_1
0x4003c05	    0xc7832c010000	              mov dword [rbx + 0x12c], 0	       622	channel.c	FUNCTION_25	IF_2
0x4003c0f	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4003c12	     0xf8584feffff	                           jne 0x4003a9c	       988	channel.c	FUNCTION_29	IF_1
0x4003c18	    0x8b836c040000	           mov eax, dword [rbx + 0x46c] 	       988	channel.c	FUNCTION_29	IF_1
0x4003c1e	      0xe997feffff	                           jmp 0x4003aba	       988	channel.c	FUNCTION_29	IF_1
0x4003c23	       0xf1f440000	                   nop dword [rax + rax]	       988	channel.c	FUNCTION_29	IF_1
0x4003c28	            0x89e9	                            mov ecx, ebp	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c2a	          0x4889df	                            mov rdi, rbx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c2d	      0xba00000000	                              mov edx, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c32	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c37	            0x31c0	                            xor eax, eax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c39	      0xe800000000	                          call 0x4003c3e	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c3e	    0x48638b380200	        movsxd rcx, dword [rbx + 0x238] 	       568	channel.c	FUNCTION_22	IF_4
0x4003c45	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003c4a	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003c4f	          0x4889cf	                            mov rdi, rcx	       568	channel.c	FUNCTION_22	IF_4
0x4003c52	      0xe800000000	                          call 0x4003c57	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003c57	    0x89833c020000	            mov dword [rbx + 0x23c], eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003c5d	        0x4883c410	                           add rsp, 0x10	      1052	channel.c	FUNCTION_30
0x4003c61	              0x5b	                                 pop rbx	      1052	channel.c	FUNCTION_30
0x4003c62	              0x5d	                                 pop rbp	      1052	channel.c	FUNCTION_30
0x4003c63	            0x415c	                                 pop r12	      1052	channel.c	FUNCTION_30
0x4003c65	              0xc3	                                     ret	      1052	channel.c	FUNCTION_30
0x4003c66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1052	channel.c	FUNCTION_30
0x4003c70	          0x4489e1	                           mov ecx, r12d	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c73	      0xba00000000	                              mov edx, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c78	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c7d	          0x4889df	                            mov rdi, rbx	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c80	            0x31c0	                            xor eax, eax	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c82	      0xe800000000	                          call 0x4003c87	       549	channel.c	FUNCTION_22	IF_4	CALL_3
0x4003c87	    0x48638b280100	        movsxd rcx, dword [rbx + 0x128] 	       568	channel.c	FUNCTION_22	IF_4
0x4003c8e	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003c93	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003c98	          0x4889cf	                            mov rdi, rcx	       568	channel.c	FUNCTION_22	IF_4
0x4003c9b	      0xe800000000	                          call 0x4003ca0	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003ca0	    0x89832c010000	            mov dword [rbx + 0x12c], eax	       563	channel.c	FUNCTION_22	IF_4	CALL_8
0x4003ca6	      0xe953feffff	                           jmp 0x4003afe	       563	channel.c	FUNCTION_22	IF_4	CALL_8
channel_get_all	WHILE,1:FOR,2:CALL,5:IF,3:ELSE,0:functions,0:DO,1:SWITCH,0	117
0x4001e50	            0x4156	                                push r14	      1666	channel.c	FUNCTION_47
0x4001e52	            0x4155	                                push r13	      1666	channel.c	FUNCTION_47
0x4001e54	            0x4154	                                push r12	      1666	channel.c	FUNCTION_47
0x4001e56	          0x4189f4	                           mov r12d, esi	      1674	channel.c	FUNCTION_47	IF_1
0x4001e59	              0x55	                                push rbp	      1666	channel.c	FUNCTION_47
0x4001e5a	          0x4c89e2	                            mov rdx, r12	      1674	channel.c	FUNCTION_47	IF_1
0x4001e5d	          0x4c89e0	                            mov rax, r12	      1674	channel.c	FUNCTION_47	IF_1
0x4001e60	              0x53	                                push rbx	      1666	channel.c	FUNCTION_47
0x4001e61	        0x48c1e204	                              shl rdx, 4	      1674	channel.c	FUNCTION_47	IF_1
0x4001e65	        0x48c1e008	                              shl rax, 8	      1674	channel.c	FUNCTION_47	IF_1
0x4001e69	          0x4801c2	                            add rdx, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4001e6c	          0x4801fa	                            add rdx, rdi	      1674	channel.c	FUNCTION_47	IF_1
0x4001e6f	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      1674	channel.c	FUNCTION_47	IF_1
0x4001e73	          0x4885c9	                           test rcx, rcx	      1674	channel.c	FUNCTION_47	IF_1
0x4001e76	     0xf8454010000	                            je 0x4001fd0	      1674	channel.c	FUNCTION_47	IF_1
0x4001e7c	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      1674	channel.c	FUNCTION_47	IF_1
0x4001e80	          0x4989fe	                            mov r14, rdi	      1674	channel.c	FUNCTION_47	IF_1
0x4001e83	          0x4885c0	                           test rax, rax	      1674	channel.c	FUNCTION_47	IF_1
0x4001e86	     0xf8414010000	                            je 0x4001fa0	      1674	channel.c	FUNCTION_47	IF_1
0x4001e8c	            0x31d2	                            xor edx, edx	      1674	channel.c	FUNCTION_47	IF_1
0x4001e8e	            0xeb07	                           jmp 0x4001e97	      1674	channel.c	FUNCTION_47	IF_1
0x4001e90	          0x4889c1	                            mov rcx, rax	      1678	channel.c	FUNCTION_47	FOR_1
0x4001e93	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1678	channel.c	FUNCTION_47	FOR_1
0x4001e97	        0x48035108	                add rdx, qword [rcx + 8]	      1679	channel.c	FUNCTION_47	FOR_1
0x4001e9b	          0x4885c0	                           test rax, rax	      1678	channel.c	FUNCTION_47	FOR_1
0x4001e9e	          0x4889d5	                            mov rbp, rdx	      1679	channel.c	FUNCTION_47	FOR_1
0x4001ea1	            0x75ed	                           jne 0x4001e90	      1678	channel.c	FUNCTION_47	FOR_1
0x4001ea3	        0x488d7a01	                      lea rdi, [rdx + 1]	      1680	channel.c	FUNCTION_47	CALL_2
0x4001ea7	      0xbe01000000	                              mov esi, 1	      1680	channel.c	FUNCTION_47	CALL_2
0x4001eac	      0xe800000000	                          call 0x4001eb1	      1680	channel.c	FUNCTION_47	CALL_2
0x4001eb1	          0x4885c0	                           test rax, rax	      1681	channel.c	FUNCTION_47	IF_2
0x4001eb4	          0x4989c5	                            mov r13, rax	      1680	channel.c	FUNCTION_47	CALL_2
0x4001eb7	     0xf8413010000	                            je 0x4001fd0	      1681	channel.c	FUNCTION_47	IF_2
0x4001ebd	          0x4c89e2	                            mov rdx, r12	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ec0	          0x4c89e0	                            mov rax, r12	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ec3	          0x4c89e9	                            mov rcx, r13	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ec6	        0x48c1e204	                              shl rdx, 4	      1684	channel.c	FUNCTION_47	FOR_2
0x4001eca	        0x48c1e008	                              shl rax, 8	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ece	          0x4801d0	                            add rax, rdx	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ed1	      0x498b5c0640	      mov rbx, qword [r14 + rax + 0x40] 	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ed6	          0x4885db	                           test rbx, rbx	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ed9	            0x7424	                            je 0x4001eff	      1684	channel.c	FUNCTION_47	FOR_2
0x4001edb	       0xf1f440000	                   nop dword [rax + rax]	      1684	channel.c	FUNCTION_47	FOR_2
0x4001ee0	        0x488b5308	                mov rdx, qword [rbx + 8]	        59	string3.h	FUNCTION_136	CALL_3
0x4001ee4	          0x488b33	                    mov rsi, qword [rbx]	        59	string3.h	FUNCTION_136	CALL_3
0x4001ee7	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_136	CALL_3
0x4001eea	      0xe800000000	                          call 0x4001eef	        59	string3.h	FUNCTION_136	CALL_3
0x4001eef	          0x4889c1	                            mov rcx, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4001ef2	        0x48034b08	                add rcx, qword [rbx + 8]	      1687	channel.c	FUNCTION_47	FOR_2
0x4001ef6	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1684	channel.c	FUNCTION_47	FOR_2
0x4001efa	          0x4885db	                           test rbx, rbx	      1684	channel.c	FUNCTION_47	FOR_2
0x4001efd	            0x75e1	                           jne 0x4001ee0	      1684	channel.c	FUNCTION_47	FOR_2
0x4001eff	          0x4c89e0	                            mov rax, r12	      1644	channel.c	FUNCTION_46
0x4001f02	        0x49c1e408	                              shl r12, 8	      1644	channel.c	FUNCTION_46
0x4001f06	          0xc60100	                       mov byte [rcx], 0	      1689	channel.c	FUNCTION_47
0x4001f09	        0x48c1e004	                              shl rax, 4	      1644	channel.c	FUNCTION_46
0x4001f0d	          0x4901c4	                            add r12, rax	      1644	channel.c	FUNCTION_46
0x4001f10	          0x4d01e6	                            add r14, r12	      1644	channel.c	FUNCTION_46
0x4001f13	            0xeb1d	                           jmp 0x4001f32	      1644	channel.c	FUNCTION_46
0x4001f15	           0xf1f00	                         nop dword [rax]	      1644	channel.c	FUNCTION_46
0x4001f18	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4001f20	      0xe800000000	                          call 0x4001f25	      1656	channel.c	FUNCTION_46	CALL_1
0x4001f25	          0x4889df	                            mov rdi, rbx	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x4001f28	      0xe800000000	                          call 0x4001f2d	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x4001f2d	          0x4885db	                           test rbx, rbx	      1696	channel.c	FUNCTION_47	DO_1
0x4001f30	            0x7435	                            je 0x4001f67	      1696	channel.c	FUNCTION_47	DO_1
0x4001f32	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      1644	channel.c	FUNCTION_46
0x4001f36	          0x4885ff	                           test rdi, rdi	      1647	channel.c	FUNCTION_46	IF_1
0x4001f39	            0x7425	                            je 0x4001f60	      1647	channel.c	FUNCTION_46	IF_1
0x4001f3b	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x4001f3f	          0x488b1f	                    mov rbx, qword [rdi]	      1650	channel.c	FUNCTION_46
0x4001f42	        0x49894640	             mov qword [r14 + 0x40], rax	      1651	channel.c	FUNCTION_46
0x4001f46	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4001f4a	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x4001f4d	            0x75c9	                           jne 0x4001f18	      1652	channel.c	FUNCTION_46	IF_2
0x4001f4f	    0x49c746480000	               mov qword [r14 + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4001f57	            0xebc7	                           jmp 0x4001f20	      1653	channel.c	FUNCTION_46	IF_2
0x4001f59	     0xf1f80000000	                         nop dword [rax]	      1653	channel.c	FUNCTION_46	IF_2
0x4001f60	            0x31ff	                            xor edi, edi	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x4001f62	      0xe800000000	                          call 0x4001f67	      1695	channel.c	FUNCTION_47	DO_1	CALL_5
0x4001f67	          0x4885ed	                           test rbp, rbp	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001f6a	            0x741f	                            je 0x4001f8b	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001f6c	      0x498d542d00	                    lea rdx, [r13 + rbp]	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001f71	     0xf1f80000000	                         nop dword [rax]	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001f78	        0x807aff00	                   cmp byte [rdx - 1], 0	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001f7c	            0x7504	                           jne 0x4001f82	      1702	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001f7e	        0xc642ff0a	                 mov byte [rdx - 1], 0xa	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001f82	        0x4883ea01	                              sub rdx, 1	      1703	channel.c	FUNCTION_47	WHILE_1	IF_3
0x4001f86	          0x4939d5	                            cmp r13, rdx	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001f89	            0x75ed	                           jne 0x4001f78	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001f8b	          0x4c89e8	                            mov rax, r13	      1699	channel.c	FUNCTION_47	WHILE_1
0x4001f8e	              0x5b	                                 pop rbx	      1707	channel.c	FUNCTION_47
0x4001f8f	              0x5d	                                 pop rbp	      1707	channel.c	FUNCTION_47
0x4001f90	            0x415c	                                 pop r12	      1707	channel.c	FUNCTION_47
0x4001f92	            0x415d	                                 pop r13	      1707	channel.c	FUNCTION_47
0x4001f94	            0x415e	                                 pop r14	      1707	channel.c	FUNCTION_47
0x4001f96	              0xc3	                                     ret	      1707	channel.c	FUNCTION_47
0x4001f97	    0x660f1f840000	                    nop word [rax + rax]	      1707	channel.c	FUNCTION_47
0x4001fa0	          0x4c8b29	                    mov r13, qword [rcx]	      1650	channel.c	FUNCTION_46
0x4001fa3	    0x48c742400000	               mov qword [rdx + 0x40], 0	      1651	channel.c	FUNCTION_46
0x4001fab	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4001faf	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x4001fb2	            0x7420	                            je 0x4001fd4	      1652	channel.c	FUNCTION_46	IF_2
0x4001fb4	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4001fbc	          0x4889cf	                            mov rdi, rcx	      1656	channel.c	FUNCTION_46	CALL_1
0x4001fbf	      0xe800000000	                          call 0x4001fc4	      1656	channel.c	FUNCTION_46	CALL_1
0x4001fc4	              0x5b	                                 pop rbx	      1707	channel.c	FUNCTION_47
0x4001fc5	          0x4c89e8	                            mov rax, r13	      1657	channel.c	FUNCTION_46
0x4001fc8	              0x5d	                                 pop rbp	      1707	channel.c	FUNCTION_47
0x4001fc9	            0x415c	                                 pop r12	      1707	channel.c	FUNCTION_47
0x4001fcb	            0x415d	                                 pop r13	      1707	channel.c	FUNCTION_47
0x4001fcd	            0x415e	                                 pop r14	      1707	channel.c	FUNCTION_47
0x4001fcf	              0xc3	                                     ret	      1707	channel.c	FUNCTION_47
0x4001fd0	            0x31c0	                            xor eax, eax	      1648	channel.c	FUNCTION_46	IF_1
0x4001fd2	            0xebba	                           jmp 0x4001f8e	      1648	channel.c	FUNCTION_46	IF_1
0x4001fd4	    0x48c742480000	               mov qword [rdx + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4001fdc	            0xebde	                           jmp 0x4001fbc	      1653	channel.c	FUNCTION_46	IF_2
free_unused_jobs_contents	WHILE,0:FOR,1:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	56
0x400c110	            0x4154	                                push r12	      5360	channel.c	FUNCTION_123
0x400c112	              0x55	                                push rbp	      5360	channel.c	FUNCTION_123
0x400c113	              0x53	                                push rbx	      5360	channel.c	FUNCTION_123
0x400c114	    0x488b1d000000	            mov rbx, qword [0x0400c11b] 	      5364	channel.c	FUNCTION_123	FOR_1
0x400c11b	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x400c11e	     0xf849b000000	                            je 0x400c1bf	      5364	channel.c	FUNCTION_123	FOR_1
0x400c124	          0x4189f4	                           mov r12d, esi	      5364	channel.c	FUNCTION_123	FOR_1
0x400c127	            0x89fd	                            mov ebp, edi	      5364	channel.c	FUNCTION_123	FOR_1
0x400c129	            0x31f6	                            xor esi, esi	      5364	channel.c	FUNCTION_123	FOR_1
0x400c12b	            0xeb3b	                           jmp 0x400c168	      5364	channel.c	FUNCTION_123	FOR_1
0x400c12d	           0xf1f00	                         nop dword [rax]	      5364	channel.c	FUNCTION_123	FOR_1
0x400c130	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5364	channel.c	FUNCTION_123	FOR_1
0x400c134	          0x4885ff	                           test rdi, rdi	      5113	channel.c	FUNCTION_114	CALL_1
0x400c137	            0x7477	                            je 0x400c1b0	      5113	channel.c	FUNCTION_114	CALL_1
0x400c139	    0x8b87b0040000	           mov eax, dword [rdi + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x400c13f	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x400c141	            0x740a	                            je 0x400c14d	       315	channel.c	FUNCTION_9	IF_1
0x400c143	    0x4883bfa80400	              cmp qword [rdi + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x400c14b	            0x7463	                            je 0x400c1b0	       315	channel.c	FUNCTION_9	IF_1
0x400c14d	    0x4883bf900400	              cmp qword [rdi + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x400c155	            0x7441	                            je 0x400c198	       319	channel.c	FUNCTION_9	IF_2
0x400c157	    0x660f1f840000	                    nop word [rax + rax]	       319	channel.c	FUNCTION_9	IF_2
0x400c160	          0x488b1b	                    mov rbx, qword [rbx]	      5364	channel.c	FUNCTION_123	FOR_1
0x400c163	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x400c166	            0x7426	                            je 0x400c18e	      5364	channel.c	FUNCTION_123	FOR_1
0x400c168	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400c16b	            0x31e8	                            xor eax, ebp	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400c16d	          0x4485e0	                          test eax, r12d	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400c170	            0x74ee	                            je 0x400c160	      5365	channel.c	FUNCTION_123	FOR_1	IF_1
0x400c172	        0x837b2801	               cmp dword [rbx + 0x28], 1	      5104	channel.c	FUNCTION_113
0x400c176	            0x75b8	                           jne 0x400c130	      5104	channel.c	FUNCTION_113
0x400c178	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      5104	channel.c	FUNCTION_113
0x400c17d	            0x75e1	                           jne 0x400c160	      5104	channel.c	FUNCTION_113
0x400c17f	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      5104	channel.c	FUNCTION_113
0x400c184	            0x74aa	                            je 0x400c130	      5104	channel.c	FUNCTION_113
0x400c186	          0x488b1b	                    mov rbx, qword [rbx]	      5364	channel.c	FUNCTION_123	FOR_1
0x400c189	          0x4885db	                           test rbx, rbx	      5364	channel.c	FUNCTION_123	FOR_1
0x400c18c	            0x75da	                           jne 0x400c168	      5364	channel.c	FUNCTION_123	FOR_1
0x400c18e	              0x5b	                                 pop rbx	      5374	channel.c	FUNCTION_123
0x400c18f	            0x89f0	                            mov eax, esi	      5374	channel.c	FUNCTION_123
0x400c191	              0x5d	                                 pop rbp	      5374	channel.c	FUNCTION_123
0x400c192	            0x415c	                                 pop r12	      5374	channel.c	FUNCTION_123
0x400c194	              0xc3	                                     ret	      5374	channel.c	FUNCTION_123
0x400c195	           0xf1f00	                         nop dword [rax]	      5374	channel.c	FUNCTION_123
0x400c198	    0x4883bf280400	              cmp qword [rdi + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x400c1a0	            0x75be	                           jne 0x400c160	       323	channel.c	FUNCTION_9	IF_3
0x400c1a2	      0xe82942ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x400c1a7	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_114	CALL_1
0x400c1a9	            0x75b5	                           jne 0x400c160	      5113	channel.c	FUNCTION_114	CALL_1
0x400c1ab	       0xf1f440000	                   nop dword [rax + rax]	      5113	channel.c	FUNCTION_114	CALL_1
0x400c1b0	          0x4889df	                            mov rdi, rbx	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x400c1b3	      0xe828d5ffff	              call sym.job_free_contents	      5370	channel.c	FUNCTION_123	FOR_1	IF_1	CALL_2
0x400c1b8	      0xbe01000000	                              mov esi, 1	      5371	channel.c	FUNCTION_123	FOR_1	IF_1
0x400c1bd	            0xeba1	                           jmp 0x400c160	      5371	channel.c	FUNCTION_123	FOR_1	IF_1
0x400c1bf	            0x31f6	                            xor esi, esi	      5361	channel.c	FUNCTION_123
0x400c1c1	            0xebcb	                           jmp 0x400c18e	      5373	channel.c	FUNCTION_123
free_unused_channels_contents	WHILE,0:FOR,1:CALL,2:IF,1:ELSE,0:functions,0:DO,0:SWITCH,0	87
0x4008be0	            0x4154	                                push r12	       426	channel.c	FUNCTION_16
0x4008be2	    0x8b0500000000	            mov eax, dword [0x04008be8] 	       432	channel.c	FUNCTION_16
0x4008be8	              0x55	                                push rbp	       426	channel.c	FUNCTION_16
0x4008be9	              0x53	                                push rbx	       426	channel.c	FUNCTION_16
0x4008bea	    0x488b1d000000	            mov rbx, qword [0x04008bf1] 	       434	channel.c	FUNCTION_16	FOR_1
0x4008bf1	          0x83c001	                              add eax, 1	       432	channel.c	FUNCTION_16
0x4008bf4	    0x890500000000	            mov dword [0x04008bfa], eax 	       432	channel.c	FUNCTION_16
0x4008bfa	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x4008bfd	     0xf8453010000	                            je 0x4008d56	       434	channel.c	FUNCTION_16	FOR_1
0x4008c03	          0x4189f4	                           mov r12d, esi	       434	channel.c	FUNCTION_16	FOR_1
0x4008c06	            0x89fd	                            mov ebp, edi	       434	channel.c	FUNCTION_16	FOR_1
0x4008c08	            0x31f6	                            xor esi, esi	       434	channel.c	FUNCTION_16	FOR_1
0x4008c0a	            0xeb10	                           jmp 0x4008c1c	       434	channel.c	FUNCTION_16	FOR_1
0x4008c0c	         0xf1f4000	                         nop dword [rax]	       434	channel.c	FUNCTION_16	FOR_1
0x4008c10	          0x488b1b	                    mov rbx, qword [rbx]	       434	channel.c	FUNCTION_16	FOR_1
0x4008c13	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x4008c16	     0xf8424010000	                            je 0x4008d40	       434	channel.c	FUNCTION_16	FOR_1
0x4008c1c	    0x8b83b0040000	           mov eax, dword [rbx + 0x4b0] 	       315	channel.c	FUNCTION_9	IF_1
0x4008c22	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_9	IF_1
0x4008c24	            0x740a	                            je 0x4008c30	       315	channel.c	FUNCTION_9	IF_1
0x4008c26	    0x4883bba80400	              cmp qword [rbx + 0x4a8], 0	       315	channel.c	FUNCTION_9	IF_1
0x4008c2e	            0x7420	                            je 0x4008c50	       315	channel.c	FUNCTION_9	IF_1
0x4008c30	    0x4883bb900400	              cmp qword [rbx + 0x490], 0	       319	channel.c	FUNCTION_9	IF_2
0x4008c38	            0x75d6	                           jne 0x4008c10	       319	channel.c	FUNCTION_9	IF_2
0x4008c3a	    0x4883bb280400	              cmp qword [rbx + 0x428], 0	       323	channel.c	FUNCTION_9	IF_3
0x4008c42	            0x75cc	                           jne 0x4008c10	       323	channel.c	FUNCTION_9	IF_3
0x4008c44	          0x4889df	                            mov rdi, rbx	       323	channel.c	FUNCTION_9	IF_3
0x4008c47	      0xe88477ffff	    call sym.channel_still_useful.part.0	       323	channel.c	FUNCTION_9	IF_3
0x4008c4c	            0x85c0	                           test eax, eax	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4008c4e	            0x75c0	                           jne 0x4008c10	       435	channel.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4008c50	    0x8b83b8040000	           mov eax, dword [rbx + 0x4b8] 	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x4008c56	            0x31e8	                            xor eax, ebp	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x4008c58	          0x4485e0	                          test eax, r12d	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x4008c5b	            0x74b3	                            je 0x4008c10	       436	channel.c	FUNCTION_16	FOR_1	IF_1
0x4008c5d	      0xbe01000000	                              mov esi, 1	       362	channel.c	FUNCTION_11	CALL_1
0x4008c62	          0x4889df	                            mov rdi, rbx	       362	channel.c	FUNCTION_11	CALL_1
0x4008c65	      0xe800000000	                          call 0x4008c6a	       362	channel.c	FUNCTION_11	CALL_1
0x4008c6a	          0x4889df	                            mov rdi, rbx	      3015	channel.c	FUNCTION_72	CALL_1
0x4008c6d	            0x31c0	                            xor eax, eax	      3015	channel.c	FUNCTION_72	CALL_1
0x4008c6f	      0xbe00000000	                              mov esi, 0	      3015	channel.c	FUNCTION_72	CALL_1
0x4008c74	      0xe800000000	                          call 0x4008c79	      3015	channel.c	FUNCTION_72	CALL_1
0x4008c79	    0x488bbb600400	           mov rdi, qword [rbx + 0x460] 	      3016	channel.c	FUNCTION_72	CALL_2
0x4008c80	          0x4885ff	                           test rdi, rdi	      3016	channel.c	FUNCTION_72	CALL_2
0x4008c83	            0x7410	                            je 0x4008c95	      3016	channel.c	FUNCTION_72	CALL_2
0x4008c85	      0xe800000000	                          call 0x4008c8a	      3016	channel.c	FUNCTION_72	CALL_2
0x4008c8a	    0x48c783600400	              mov qword [rbx + 0x460], 0	      3016	channel.c	FUNCTION_72	CALL_2
0x4008c95	            0x31f6	                            xor esi, esi	      3017	channel.c	FUNCTION_72	CALL_3
0x4008c97	          0x4889df	                            mov rdi, rbx	      3017	channel.c	FUNCTION_72	CALL_3
0x4008c9a	      0xe8718effff	              call sym.channel_clear_one	      3017	channel.c	FUNCTION_72	CALL_3
0x4008c9f	          0x4889df	                            mov rdi, rbx	      3018	channel.c	FUNCTION_72	CALL_4
0x4008ca2	      0xbe01000000	                              mov esi, 1	      3018	channel.c	FUNCTION_72	CALL_4
0x4008ca7	      0xe8648effff	              call sym.channel_clear_one	      3018	channel.c	FUNCTION_72	CALL_4
0x4008cac	          0x4889df	                            mov rdi, rbx	      3019	channel.c	FUNCTION_72	CALL_5
0x4008caf	      0xbe02000000	                              mov esi, 2	      3019	channel.c	FUNCTION_72	CALL_5
0x4008cb4	      0xe8578effff	              call sym.channel_clear_one	      3019	channel.c	FUNCTION_72	CALL_5
0x4008cb9	          0x4889df	                            mov rdi, rbx	      3020	channel.c	FUNCTION_72	CALL_6
0x4008cbc	      0xbe03000000	                              mov esi, 3	      3020	channel.c	FUNCTION_72	CALL_6
0x4008cc1	      0xe84a8effff	              call sym.channel_clear_one	      3020	channel.c	FUNCTION_72	CALL_6
0x4008cc6	    0x488bb3880400	           mov rsi, qword [rbx + 0x488] 	      3021	channel.c	FUNCTION_72	CALL_7
0x4008ccd	    0x488bbb800400	           mov rdi, qword [rbx + 0x480] 	      3021	channel.c	FUNCTION_72	CALL_7
0x4008cd4	      0xe800000000	                          call 0x4008cd9	      3021	channel.c	FUNCTION_72	CALL_7
0x4008cd9	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	      3024	channel.c	FUNCTION_72	CALL_8
0x4008ce0	    0x488bbb900400	           mov rdi, qword [rbx + 0x490] 	      3024	channel.c	FUNCTION_72	CALL_8
0x4008ce7	    0x48c783800400	              mov qword [rbx + 0x480], 0	      3022	channel.c	FUNCTION_72
0x4008cf2	    0x48c783880400	              mov qword [rbx + 0x488], 0	      3023	channel.c	FUNCTION_72
0x4008cfd	      0xe800000000	                          call 0x4008d02	      3024	channel.c	FUNCTION_72	CALL_8
0x4008d02	    0x48c783900400	              mov qword [rbx + 0x490], 0	      3025	channel.c	FUNCTION_72
0x4008d0d	    0x48c783980400	              mov qword [rbx + 0x498], 0	      3026	channel.c	FUNCTION_72
0x4008d18	      0xbe00000000	                              mov esi, 0	       364	channel.c	FUNCTION_11	CALL_3
0x4008d1d	          0x4889df	                            mov rdi, rbx	       364	channel.c	FUNCTION_11	CALL_3
0x4008d20	            0x31c0	                            xor eax, eax	       364	channel.c	FUNCTION_11	CALL_3
0x4008d22	      0xe800000000	                          call 0x4008d27	       364	channel.c	FUNCTION_11	CALL_3
0x4008d27	          0x488b1b	                    mov rbx, qword [rbx]	       434	channel.c	FUNCTION_16	FOR_1
0x4008d2a	      0xbe01000000	                              mov esi, 1	       441	channel.c	FUNCTION_16	FOR_1	IF_1
0x4008d2f	          0x4885db	                           test rbx, rbx	       434	channel.c	FUNCTION_16	FOR_1
0x4008d32	     0xf85e4feffff	                           jne 0x4008c1c	       434	channel.c	FUNCTION_16	FOR_1
0x4008d38	     0xf1f84000000	                   nop dword [rax + rax]	       434	channel.c	FUNCTION_16	FOR_1
0x4008d40	    0x8b0500000000	            mov eax, dword [0x04008d46] 	       434	channel.c	FUNCTION_16	FOR_1
0x4008d46	          0x83e801	                              sub eax, 1	       444	channel.c	FUNCTION_16
0x4008d49	              0x5b	                                 pop rbx	       446	channel.c	FUNCTION_16
0x4008d4a	    0x890500000000	            mov dword [0x04008d50], eax 	       444	channel.c	FUNCTION_16
0x4008d50	            0x89f0	                            mov eax, esi	       446	channel.c	FUNCTION_16
0x4008d52	              0x5d	                                 pop rbp	       446	channel.c	FUNCTION_16
0x4008d53	            0x415c	                                 pop r12	       446	channel.c	FUNCTION_16
0x4008d55	              0xc3	                                     ret	       446	channel.c	FUNCTION_16
0x4008d56	            0x31f6	                            xor esi, esi	       427	channel.c	FUNCTION_16
0x4008d58	            0xebec	                           jmp 0x4008d46	       427	channel.c	FUNCTION_16
channel_close_in	WHILE,0:FOR,0:CALL,1:IF,0:ELSE,0:functions,0:DO,0:SWITCH,0	14
0x4006cd0	              0x53	                                push rbx	      2956	channel.c	FUNCTION_69
0x4006cd1	          0x4889fb	                            mov rbx, rdi	      2956	channel.c	FUNCTION_69
0x4006cd4	    0x8bbf48030000	           mov edi, dword [rdi + 0x348] 	       988	channel.c	FUNCTION_29	IF_1
0x4006cda	          0x83ffff	             cmp edi, 0xffffffffffffffff	       988	channel.c	FUNCTION_29	IF_1
0x4006cdd	            0x7426	                            je 0x4006d05	       988	channel.c	FUNCTION_29	IF_1
0x4006cdf	    0x3bbb28010000	           cmp edi, dword [rbx + 0x128] 	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4006ce5	            0x740d	                            je 0x4006cf4	       997	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4006ce7	    0x3bbb38020000	           cmp edi, dword [rbx + 0x238] 	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4006ced	            0x7405	                            je 0x4006cf4	       998	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4006cef	      0xe800000000	                          call 0x4006cf4	      1004	channel.c	FUNCTION_29	IF_1	ELSE_1	IF_3
0x4006cf4	    0x83a36c040000	     and dword [rbx + 0x46c], 0xfffffff7	      1010	channel.c	FUNCTION_29	IF_1
0x4006cfb	    0xc78348030000	    mov dword [rbx + 0x348], 0xffffffff 	      1007	channel.c	FUNCTION_29	IF_1
0x4006d05	              0x5b	                                 pop rbx	      2958	channel.c	FUNCTION_69
0x4006d06	              0xc3	                                     ret	      2958	channel.c	FUNCTION_69
channel_parse_json	WHILE,0:FOR,0:CALL,22:IF,14:ELSE,10:functions,0:DO,0:SWITCH,0	295
0x40024f0	            0x4157	                                push r15	      1906	channel.c	FUNCTION_52
0x40024f2	            0x4156	                                push r14	      1906	channel.c	FUNCTION_52
0x40024f4	            0x4155	                                push r13	      1906	channel.c	FUNCTION_52
0x40024f6	            0x4154	                                push r12	      1906	channel.c	FUNCTION_52
0x40024f8	              0x55	                                push rbp	      1906	channel.c	FUNCTION_52
0x40024f9	              0x53	                                push rbx	      1906	channel.c	FUNCTION_52
0x40024fa	            0x89f3	                            mov ebx, esi	      1906	channel.c	FUNCTION_52
0x40024fc	          0x4889da	                            mov rdx, rbx	      1615	channel.c	FUNCTION_44
0x40024ff	          0x4889fd	                            mov rbp, rdi	      1906	channel.c	FUNCTION_52
0x4002502	        0x4883ec68	                           sub rsp, 0x68	      1906	channel.c	FUNCTION_52
0x4002506	        0x48c1e204	                              shl rdx, 4	      1615	channel.c	FUNCTION_44
0x400250a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	channel.c	FUNCTION_52
0x4002513	      0x4889442458	             mov qword [rsp + 0x58], rax	      1906	channel.c	FUNCTION_52
0x4002518	            0x31c0	                            xor eax, eax	      1906	channel.c	FUNCTION_52
0x400251a	          0x4889d8	                            mov rax, rbx	      1615	channel.c	FUNCTION_44
0x400251d	        0x48c1e008	                              shl rax, 8	      1615	channel.c	FUNCTION_44
0x4002521	          0x4801c2	                            add rdx, rax	      1615	channel.c	FUNCTION_44
0x4002524	            0x31c0	                            xor eax, eax	      1615	channel.c	FUNCTION_44
0x4002526	          0x4801fa	                            add rdx, rdi	      1615	channel.c	FUNCTION_44
0x4002529	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      1615	channel.c	FUNCTION_44
0x400252d	          0x4885ff	                           test rdi, rdi	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4002530	     0xf84c5000000	                            je 0x40025fb	      1915	channel.c	FUNCTION_52	IF_1	CALL_1
0x4002536	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1651	channel.c	FUNCTION_46
0x400253a	          0x4c8b2f	                    mov r13, qword [rdi]	      1650	channel.c	FUNCTION_46
0x400253d	          0x4989dc	                            mov r12, rbx	      1650	channel.c	FUNCTION_46
0x4002540	        0x48894240	             mov qword [rdx + 0x40], rax	      1651	channel.c	FUNCTION_46
0x4002544	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1652	channel.c	FUNCTION_46	IF_2
0x4002548	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_46	IF_2
0x400254b	     0xf84bf030000	                            je 0x4002910	      1652	channel.c	FUNCTION_46	IF_2
0x4002551	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_46	ELSE_1
0x4002559	      0xe800000000	                          call 0x400255e	      1656	channel.c	FUNCTION_46	CALL_1
0x400255e	      0x4489642448	            mov dword [rsp + 0x48], r12d	      1922	channel.c	FUNCTION_52
0x4002563	          0x4889d8	                            mov rax, rbx	      1930	channel.c	FUNCTION_52
0x4002566	          0x4989dc	                            mov r12, rbx	      1930	channel.c	FUNCTION_52
0x4002569	        0x48c1e008	                              shl rax, 8	      1930	channel.c	FUNCTION_52
0x400256d	        0x49c1e404	                              shl r12, 4	      1930	channel.c	FUNCTION_52
0x4002571	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      1918	channel.c	FUNCTION_52	CALL_2
0x4002576	          0x4901c4	                            add r12, rax	      1930	channel.c	FUNCTION_52
0x4002579	    0x830500000000	               add dword [0x04002580], 1	      1928	channel.c	FUNCTION_52
0x4002580	            0x31d2	                            xor edx, edx	      1929	channel.c	FUNCTION_52	CALL_3
0x4002582	      0x4e8d6c2500	                    lea r13, [rbp + r12]	      1930	channel.c	FUNCTION_52
0x4002587	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1929	channel.c	FUNCTION_52	CALL_3
0x400258c	          0x4889e6	                            mov rsi, rsp	      1929	channel.c	FUNCTION_52	CALL_3
0x400258f	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1919	channel.c	FUNCTION_52
0x4002597	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1920	channel.c	FUNCTION_52
0x40025a0	      0x41837d2003	               cmp dword [r13 + 0x20], 3	      1929	channel.c	FUNCTION_52	CALL_3
0x40025a5	      0x48896c2440	             mov qword [rsp + 0x40], rbp	      1921	channel.c	FUNCTION_52
0x40025aa	           0xf94c2	                                 sete dl	      1929	channel.c	FUNCTION_52	CALL_3
0x40025ad	      0xe800000000	                          call 0x40025b2	      1929	channel.c	FUNCTION_52	CALL_3
0x40025b2	    0x832d00000000	               sub dword [0x040025b9], 1	      1931	channel.c	FUNCTION_52
0x40025b9	          0x83f801	                              cmp eax, 1	      1932	channel.c	FUNCTION_52	IF_2
0x40025bc	          0x4189c6	                           mov r14d, eax	      1929	channel.c	FUNCTION_52	CALL_3
0x40025bf	     0xf84db000000	                            je 0x40026a0	      1932	channel.c	FUNCTION_52	IF_2
0x40025c5	          0x83f802	                              cmp eax, 2	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x40025c8	     0xf8412010000	                            je 0x40026e0	      1976	channel.c	FUNCTION_52	ELSE_6	IF_9
0x40025ce	          0x4585f6	                         test r14d, r14d	      2030	channel.c	FUNCTION_52	IF_13
0x40025d1	     0xf8491000000	                            je 0x4002668	      2030	channel.c	FUNCTION_52	IF_13
0x40025d7	      0x4863742430	         movsxd rsi, dword [rsp + 0x30] 	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40025dc	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40025e1	          0x4531ed	                          xor r13d, r13d	      2045	channel.c	FUNCTION_52	ELSE_10
0x40025e4	        0x4c8d2437	                    lea r12, [rdi + rsi]	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40025e8	      0x41803c2400	                       cmp byte [r12], 0	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40025ed	     0xf8505020000	                           jne 0x40027f8	      2036	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40025f3	      0xe800000000	                          call 0x40025f8	      2047	channel.c	FUNCTION_52	CALL_22
0x40025f8	          0x4489e8	                           mov eax, r13d	      2048	channel.c	FUNCTION_52
0x40025fb	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      2049	channel.c	FUNCTION_52
0x4002600	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2049	channel.c	FUNCTION_52
0x4002609	     0xf85b5030000	                           jne 0x40029c4	      2049	channel.c	FUNCTION_52
0x400260f	        0x4883c468	                           add rsp, 0x68	      2049	channel.c	FUNCTION_52
0x4002613	              0x5b	                                 pop rbx	      2049	channel.c	FUNCTION_52
0x4002614	              0x5d	                                 pop rbp	      2049	channel.c	FUNCTION_52
0x4002615	            0x415c	                                 pop r12	      2049	channel.c	FUNCTION_52
0x4002617	            0x415d	                                 pop r13	      2049	channel.c	FUNCTION_52
0x4002619	            0x415e	                                 pop r14	      2049	channel.c	FUNCTION_52
0x400261b	            0x415f	                                 pop r15	      2049	channel.c	FUNCTION_52
0x400261d	              0xc3	                                     ret	      2049	channel.c	FUNCTION_52
0x400261e	            0x6690	                                     nop	      2049	channel.c	FUNCTION_52
0x4002620	    0x498b85880000	            mov rax, qword [r13 + 0x88] 	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4002627	      0x4839442418	            cmp qword [rsp + 0x18], rax 	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x400262c	     0xf8e12030000	                           jle 0x4002944	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4002632	    0x660f1f440000	                    nop word [rax + rax]	      2013	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4002638	          0x4889da	                            mov rdx, rbx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x400263b	          0x4889d8	                            mov rax, rbx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x400263e	      0xbe00000000	                              mov esi, 0	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4002643	        0x48c1e204	                              shl rdx, 4	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4002647	        0x48c1e008	                              shl rax, 8	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x400264b	          0x4889ef	                            mov rdi, rbp	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x400264e	          0x4801d0	                            add rax, rdx	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x4002651	    0x48c744057800	        mov qword [rbp + rax + 0x78], 0 	      2019	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12
0x400265a	            0x31c0	                            xor eax, eax	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x400265c	      0xe800000000	                          call 0x4002661	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4002661	     0xf1f80000000	                         nop dword [rax]	      2020	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x4002668	          0x4889ef	                            mov rdi, rbp	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x400266b	            0x31c0	                            xor eax, eax	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x400266d	      0xbe00000000	                              mov esi, 0	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4002672	      0xe869f9ffff	                       call sym.ch_error	      2032	channel.c	FUNCTION_52	IF_13	CALL_20
0x4002677	          0x4889d8	                            mov rax, rbx	      2034	channel.c	FUNCTION_52	IF_13
0x400267a	        0x48c1e308	                              shl rbx, 8	      2034	channel.c	FUNCTION_52	IF_13
0x400267e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2034	channel.c	FUNCTION_52	IF_13
0x4002683	        0x48c1e004	                              shl rax, 4	      2034	channel.c	FUNCTION_52	IF_13
0x4002687	          0x4531ed	                          xor r13d, r13d	      2033	channel.c	FUNCTION_52	IF_13
0x400268a	          0x4801c3	                            add rbx, rax	      2034	channel.c	FUNCTION_52	IF_13
0x400268d	    0x48c7441d7800	        mov qword [rbp + rbx + 0x78], 0 	      2034	channel.c	FUNCTION_52	IF_13
0x4002696	      0xe958ffffff	                           jmp 0x40025f3	      2034	channel.c	FUNCTION_52	IF_13
0x400269b	       0xf1f440000	                   nop dword [rax + rax]	      2034	channel.c	FUNCTION_52	IF_13
0x40026a0	        0x833c2405	                      cmp dword [rsp], 5	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40026a4	     0xf84b6000000	                            je 0x4002760	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x40026aa	      0xbe00000000	                              mov esi, 0	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x40026af	          0x4889ef	                            mov rdi, rbp	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x40026b2	            0x31c0	                            xor eax, eax	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x40026b4	      0xe827f9ffff	                       call sym.ch_error	      1939	channel.c	FUNCTION_52	IF_2	IF_3	CALL_4
0x40026b9	          0x4889e7	                            mov rdi, rsp	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x40026bc	      0xe800000000	                          call 0x40026c1	      1957	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x40026c1	          0x4889da	                            mov rdx, rbx	      1975	channel.c	FUNCTION_52	IF_8
0x40026c4	          0x4889d8	                            mov rax, rbx	      1975	channel.c	FUNCTION_52	IF_8
0x40026c7	        0x48c1e204	                              shl rdx, 4	      1975	channel.c	FUNCTION_52	IF_8
0x40026cb	        0x48c1e008	                              shl rax, 8	      1975	channel.c	FUNCTION_52	IF_8
0x40026cf	          0x4801d0	                            add rax, rdx	      1975	channel.c	FUNCTION_52	IF_8
0x40026d2	    0x48c744057800	        mov qword [rbp + rax + 0x78], 0 	      1975	channel.c	FUNCTION_52	IF_8
0x40026db	      0xe9f7feffff	                           jmp 0x40025d7	      1975	channel.c	FUNCTION_52	IF_8
0x40026e0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x40026e5	      0xe800000000	                          call 0x40026ea	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x40026ea	        0x493b4578	            cmp rax, qword [r13 + 0x78] 	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x40026ee	          0x4989c7	                            mov r15, rax	      1978	channel.c	FUNCTION_52	ELSE_6	IF_9	CALL_12
0x40026f1	     0xf8629020000	                           jbe 0x4002920	      1980	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x40026f7	            0x89c2	                            mov edx, eax	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x40026f9	      0xbe00000000	                              mov esi, 0	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x40026fe	            0x31c0	                            xor eax, eax	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4002700	          0x4889ef	                            mov rdi, rbp	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4002703	      0xe800000000	                          call 0x4002708	      1984	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_13
0x4002708	    0x4a8dbc258000	            lea rdi, [rbp + r12 + 0x80] 	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4002710	            0x31f6	                            xor esi, esi	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4002712	        0x4d897d78	             mov qword [r13 + 0x78], r15	      1988	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4002716	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1987	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x400271e	      0xe800000000	                          call 0x4002723	      1992	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	CALL_15
0x4002723	    0x498b85880000	            mov rax, qword [r13 + 0x88] 	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x400272a	    0x488d90a08601	                lea rdx, [rax + 0x186a0]	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4002731	    0x4881fa40420f	                        cmp rdx, 0xf4240	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4002738	     0xf8e22020000	                           jle 0x4002960	      1994	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x400273e	    0x482da0bb0d00	                        sub rax, 0xdbba0	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4002744	    0x498385800000	               add qword [r13 + 0x80], 1	      1997	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x400274c	    0x498985880000	             mov qword [r13 + 0x88], rax	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4002753	      0xe97ffeffff	                           jmp 0x40025d7	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4002758	     0xf1f84000000	                   nop dword [rax + rax]	      1996	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10	IF_11
0x4002760	      0x488b442408	                mov rax, qword [rsp + 8]	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4002765	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x4002768	          0x83fa01	                              cmp edx, 1	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x400276b	            0x7e73	                           jle 0x40027e0	      1936	channel.c	FUNCTION_52	IF_2	IF_3
0x400276d	      0xbf20000000	                           mov edi, 0x20	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x4002772	      0xe800000000	                          call 0x4002777	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x4002777	          0x4885c0	                           test rax, rax	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x400277a	          0x4989c4	                            mov r12, rax	      1947	channel.c	FUNCTION_52	IF_2	ELSE_2	CALL_7
0x400277d	     0xf8436ffffff	                            je 0x40026b9	      1948	channel.c	FUNCTION_52	IF_2	ELSE_2	IF_5
0x4002783	    0xc74018000000	               mov dword [rax + 0x18], 0	      1952	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3
0x400278a	      0xe800000000	                          call 0x400278f	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x400278f	          0x4885c0	                           test rax, rax	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x4002792	        0x49890424	                    mov qword [r12], rax	      1953	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	CALL_9
0x4002796	     0xf841b020000	                            je 0x40029b7	      1954	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6
0x400279c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027a1	        0x488b3424	                    mov rsi, qword [rsp]	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027a5	        0x48897808	                mov qword [rax + 8], rdi	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027a9	          0x488930	                    mov qword [rax], rsi	      1961	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027ac	        0x498b4560	            mov rax, qword [r13 + 0x60] 	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027b0	      0x4989442410	             mov qword [r12 + 0x10], rax	      1962	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027b5	        0x4d896560	             mov qword [r13 + 0x60], r12	      1963	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027b9	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40027be	    0x49c744240800	                  mov qword [r12 + 8], 0	      1964	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4
0x40027c7	          0x4885c0	                           test rax, rax	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40027ca	     0xf84de010000	                            je 0x40029ae	      1965	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40027d0	        0x4c896008	                mov qword [rax + 8], r12	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x40027d4	      0xe9e8feffff	                           jmp 0x40026c1	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x40027d9	     0xf1f80000000	                         nop dword [rax]	      1968	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x40027e0	      0xbe00000000	                              mov esi, 0	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x40027e5	          0x4889ef	                            mov rdi, rbp	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x40027e8	            0x31c0	                            xor eax, eax	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x40027ea	      0xe8f1f7ffff	                       call sym.ch_error	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x40027ef	      0xe9c5feffff	                           jmp 0x40026b9	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x40027f4	         0xf1f4000	                         nop dword [rax]	      1941	channel.c	FUNCTION_52	IF_2	IF_3	ELSE_1	CALL_5
0x40027f8	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x40027fd	          0x4929fd	                            sub r13, rdi	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002800	      0xbf20000000	                           mov edi, 0x20	      1798	channel.c	FUNCTION_50	CALL_1
0x4002805	          0x4129f5	                           sub r13d, esi	      2039	channel.c	FUNCTION_52	ELSE_9	IF_14	CALL_21
0x4002808	      0xe800000000	                          call 0x400280d	      1798	channel.c	FUNCTION_50	CALL_1
0x400280d	          0x4885c0	                           test rax, rax	      1799	channel.c	FUNCTION_50	IF_1
0x4002810	          0x4989c7	                            mov r15, rax	      1798	channel.c	FUNCTION_50	CALL_1
0x4002813	     0xf84da000000	                            je 0x40028f3	      1799	channel.c	FUNCTION_50	IF_1
0x4002819	        0x418d7d01	                      lea edi, [r13 + 1]	      1803	channel.c	FUNCTION_50	CALL_2
0x400281d	      0xe800000000	                          call 0x4002822	      1803	channel.c	FUNCTION_50	CALL_2
0x4002822	          0x4885c0	                           test rax, rax	      1804	channel.c	FUNCTION_50	IF_2
0x4002825	          0x498907	                    mov qword [r15], rax	      1803	channel.c	FUNCTION_50	CALL_2
0x4002828	     0xf8473010000	                            je 0x40029a1	      1804	channel.c	FUNCTION_50	IF_2
0x400282e	          0x4889d9	                            mov rcx, rbx	      1810	channel.c	FUNCTION_50	IF_3
0x4002831	          0x4889da	                            mov rdx, rbx	      1810	channel.c	FUNCTION_50	IF_3
0x4002834	        0x48c1e104	                              shl rcx, 4	      1810	channel.c	FUNCTION_50	IF_3
0x4002838	        0x48c1e208	                              shl rdx, 8	      1810	channel.c	FUNCTION_50	IF_3
0x400283c	          0x4801ca	                            add rdx, rcx	      1810	channel.c	FUNCTION_50	IF_3
0x400283f	        0x8b541520	      mov edx, dword [rbp + rdx + 0x20] 	      1810	channel.c	FUNCTION_50	IF_3
0x4002843	            0x85d2	                           test edx, edx	      1810	channel.c	FUNCTION_50	IF_3
0x4002845	     0xf8525010000	                           jne 0x4002970	      1810	channel.c	FUNCTION_50	IF_3
0x400284b	          0x4585ed	                         test r13d, r13d	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x400284e	            0x7e48	                           jle 0x4002898	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4002850	          0x4c89e6	                            mov rsi, r12	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4002853	      0xba01000000	                              mov edx, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4002858	            0xeb1b	                           jmp 0x4002875	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x400285a	    0x660f1f440000	                    nop word [rax + rax]	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4002860	          0x4139d5	                           cmp r13d, edx	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4002863	        0x4c8d4001	                       lea r8, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002867	            0x8808	                      mov byte [rax], cl	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002869	            0x7e35	                           jle 0x40028a0	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x400286b	        0x4883c601	                              add rsi, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x400286f	          0x83c201	                              add edx, 1	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4002872	          0x4c89c0	                             mov rax, r8	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x4002875	           0xfb60e	                   movzx ecx, byte [rsi]	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002878	          0x80f90d	                             cmp cl, 0xd	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400287b	            0x75e3	                           jne 0x4002860	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400287d	          0x4139d5	                           cmp r13d, edx	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002880	     0xf8e43010000	                           jle 0x40029c9	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002886	        0x807e010a	                 cmp byte [rsi + 1], 0xa	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400288a	          0x4989c0	                             mov r8, rax	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400288d	            0x74dc	                            je 0x400286b	      1815	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x400288f	        0x4c8d4001	                       lea r8, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002893	          0xc6000d	                     mov byte [rax], 0xd	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002896	            0xebd3	                           jmp 0x400286b	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x4002898	          0x4989c0	                             mov r8, rax	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x400289b	       0xf1f440000	                   nop dword [rax + rax]	      1814	channel.c	FUNCTION_50	IF_3	FOR_1
0x40028a0	        0x41c60000	                        mov byte [r8], 0	      1817	channel.c	FUNCTION_50	IF_3
0x40028a4	          0x4d2b07	                     sub r8, qword [r15]	      1818	channel.c	FUNCTION_50	IF_3
0x40028a7	        0x4d894708	                 mov qword [r15 + 8], r8	      1818	channel.c	FUNCTION_50	IF_3
0x40028ab	          0x4889da	                            mov rdx, rbx	      1830	channel.c	FUNCTION_50	IF_5
0x40028ae	          0x4889d8	                            mov rax, rbx	      1830	channel.c	FUNCTION_50	IF_5
0x40028b1	        0x48c1e204	                              shl rdx, 4	      1830	channel.c	FUNCTION_50	IF_5
0x40028b5	        0x48c1e008	                              shl rax, 8	      1830	channel.c	FUNCTION_50	IF_5
0x40028b9	          0x4801d0	                            add rax, rdx	      1830	channel.c	FUNCTION_50	IF_5
0x40028bc	          0x4801e8	                            add rax, rbp	      1830	channel.c	FUNCTION_50	IF_5
0x40028bf	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1830	channel.c	FUNCTION_50	IF_5
0x40028c3	    0x49c747180000	               mov qword [r15 + 0x18], 0	      1831	channel.c	FUNCTION_50	IF_5
0x40028cb	        0x49895710	             mov qword [r15 + 0x10], rdx	      1830	channel.c	FUNCTION_50	IF_5
0x40028cf	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x40028d3	          0x4885d2	                           test rdx, rdx	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x40028d6	     0xf84bc000000	                            je 0x4002998	      1832	channel.c	FUNCTION_50	IF_5	IF_6
0x40028dc	        0x4c897a18	             mov qword [rdx + 0x18], r15	      1835	channel.c	FUNCTION_50	IF_5	ELSE_2
0x40028e0	          0x4889d8	                            mov rax, rbx	      1836	channel.c	FUNCTION_50	IF_5
0x40028e3	        0x48c1e308	                              shl rbx, 8	      1836	channel.c	FUNCTION_50	IF_5
0x40028e7	        0x48c1e004	                              shl rax, 4	      1836	channel.c	FUNCTION_50	IF_5
0x40028eb	          0x4801c3	                            add rbx, rax	      1836	channel.c	FUNCTION_50	IF_5
0x40028ee	      0x4c897c1d40	      mov qword [rbp + rbx + 0x40], r15 	      1836	channel.c	FUNCTION_50	IF_5
0x40028f3	          0x4531ed	                          xor r13d, r13d	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40028f6	        0x4183fe02	                             cmp r14d, 2	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40028fa	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x40028ff	        0x410f95c5	                              setne r13b	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4002903	      0xe9ebfcffff	                           jmp 0x40025f3	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4002908	     0xf1f84000000	                   nop dword [rax + rax]	      2042	channel.c	FUNCTION_52	ELSE_9	IF_14
0x4002910	    0x48c742480000	               mov qword [rdx + 0x48], 0	      1653	channel.c	FUNCTION_46	IF_2
0x4002918	      0xe93cfcffff	                           jmp 0x4002559	      1653	channel.c	FUNCTION_46	IF_2
0x400291d	           0xf1f00	                         nop dword [rax]	      1653	channel.c	FUNCTION_46	IF_2
0x4002920	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4002925	            0x31f6	                            xor esi, esi	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x4002927	      0xe800000000	                          call 0x400292c	      2010	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	CALL_17
0x400292c	    0x498b85800000	            mov rax, qword [r13 + 0x80] 	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4002933	      0x4839442410	            cmp qword [rsp + 0x10], rax 	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4002938	     0xf8ffafcffff	                            jg 0x4002638	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x400293e	     0xf84dcfcffff	                            je 0x4002620	      2012	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7
0x4002944	      0xbe00000000	                              mov esi, 0	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4002949	          0x4889ef	                            mov rdi, rbp	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x400294c	            0x31c0	                            xor eax, eax	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x400294e	    0xc74424300000	               mov dword [rsp + 0x30], 0	      2024	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8
0x4002956	      0xe800000000	                          call 0x400295b	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x400295b	      0xe977fcffff	                           jmp 0x40025d7	      2025	channel.c	FUNCTION_52	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x4002960	    0x498995880000	             mov qword [r13 + 0x88], rdx	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4002967	      0xe96bfcffff	                           jmp 0x40025d7	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x400296c	         0xf1f4000	                         nop dword [rax]	      1993	channel.c	FUNCTION_52	ELSE_6	IF_9	IF_10
0x4002970	          0x4d63ed	                        movsxd r13, r13d	      1822	channel.c	FUNCTION_50	ELSE_1	CALL_4
0x4002973	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_136	CALL_3
0x4002976	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_136	CALL_3
0x4002979	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_136	CALL_3
0x400297c	      0xe800000000	                          call 0x4002981	        59	string3.h	FUNCTION_136	CALL_3
0x4002981	          0x498b07	                    mov rax, qword [r15]	      1823	channel.c	FUNCTION_50	ELSE_1
0x4002984	      0x42c6042800	                 mov byte [rax + r13], 0	      1823	channel.c	FUNCTION_50	ELSE_1
0x4002989	        0x4d896f08	                mov qword [r15 + 8], r13	      1824	channel.c	FUNCTION_50	ELSE_1
0x400298d	      0xe919ffffff	                           jmp 0x40028ab	      1824	channel.c	FUNCTION_50	ELSE_1
0x4002992	    0x660f1f440000	                    nop word [rax + rax]	      1824	channel.c	FUNCTION_50	ELSE_1
0x4002998	        0x4c897848	             mov qword [rax + 0x48], r15	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x400299c	      0xe93fffffff	                           jmp 0x40028e0	      1833	channel.c	FUNCTION_50	IF_5	IF_6
0x40029a1	          0x4c89ff	                            mov rdi, r15	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x40029a4	      0xe800000000	                          call 0x40029a9	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x40029a9	      0xe945ffffff	                           jmp 0x40028f3	      1806	channel.c	FUNCTION_50	IF_2	CALL_3
0x40029ae	        0x4d896558	             mov qword [r13 + 0x58], r12	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40029b2	      0xe90afdffff	                           jmp 0x40026c1	      1966	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40029b7	          0x4c89e7	                            mov rdi, r12	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40029ba	      0xe800000000	                          call 0x40029bf	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40029bf	      0xe9f5fcffff	                           jmp 0x40026b9	      1956	channel.c	FUNCTION_52	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x40029c4	      0xe800000000	                          call 0x40029c9	      2049	channel.c	FUNCTION_52
0x40029c9	        0x4c8d4001	                       lea r8, [rax + 1]	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40029cd	          0xc6000d	                     mov byte [rax], 0xd	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
0x40029d0	      0xe9cbfeffff	                           jmp 0x40028a0	      1816	channel.c	FUNCTION_50	IF_3	FOR_1	IF_4
ch_expr_common	WHILE,0:FOR,0:CALL,12:IF,6:ELSE,1:functions,0:DO,0:SWITCH,0	296
0x400abe0	            0x4157	                                push r15	      3922	channel.c	FUNCTION_89
0x400abe2	            0x4156	                                push r14	      3922	channel.c	FUNCTION_89
0x400abe4	          0x4989f8	                             mov r8, rdi	      3922	channel.c	FUNCTION_89
0x400abe7	            0x4155	                                push r13	      3922	channel.c	FUNCTION_89
0x400abe9	            0x4154	                                push r12	      3922	channel.c	FUNCTION_89
0x400abeb	          0x4989f5	                            mov r13, rsi	      3922	channel.c	FUNCTION_89
0x400abee	              0x55	                                push rbp	      3922	channel.c	FUNCTION_89
0x400abef	              0x53	                                push rbx	      3922	channel.c	FUNCTION_89
0x400abf0	          0x4189d7	                           mov r15d, edx	      3922	channel.c	FUNCTION_89
0x400abf3	    0x4881ecc80300	                          sub rsp, 0x3c8	      3922	channel.c	FUNCTION_89
0x400abfa	    0xc70602000000	                      mov dword [rsi], 2	      3934	channel.c	FUNCTION_89
0x400ac00	    0x48c746080000	                  mov qword [rsi + 8], 0	      3935	channel.c	FUNCTION_89
0x400ac08	    0x64488b042528	                mov rax, qword fs:[0x28]	      3922	channel.c	FUNCTION_89
0x400ac11	    0x48898424b803	            mov qword [rsp + 0x3b8], rax	      3922	channel.c	FUNCTION_89
0x400ac19	            0x31c0	                            xor eax, eax	      3922	channel.c	FUNCTION_89
0x400ac1b	            0x8b07	                    mov eax, dword [rdi]	      5007	channel.c	FUNCTION_108	IF_1
0x400ac1d	          0x83f809	                              cmp eax, 9	      5007	channel.c	FUNCTION_108	IF_1
0x400ac20	     0xf8412030000	                            je 0x400af38	      5007	channel.c	FUNCTION_108	IF_1
0x400ac26	          0x83f80a	                            cmp eax, 0xa	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400ac29	     0xf85f1030000	                           jne 0x400b020	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400ac2f	        0x488b5708	                mov rdx, qword [rdi + 8]	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400ac33	          0x4885d2	                           test rdx, rdx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400ac36	     0xf8414030000	                            je 0x400af50	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400ac3c	            0x31c0	                            xor eax, eax	      4357	channel.c	FUNCTION_98
0x400ac3e	        0x837a18ff	cmp dword [rdx + 0x18], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x400ac42	     0xf8428030000	                            je 0x400af70	      2725	channel.c	FUNCTION_63
0x400ac48	          0x4889c1	                            mov rcx, rax	      4380	channel.c	FUNCTION_100
0x400ac4b	        0x48c1e008	                              shl rax, 8	      4380	channel.c	FUNCTION_100
0x400ac4f	        0x48c1e104	                              shl rcx, 4	      4380	channel.c	FUNCTION_100
0x400ac53	          0x4801c8	                            add rax, rcx	      4380	channel.c	FUNCTION_100
0x400ac56	        0x8b440220	      mov eax, dword [rdx + rax + 0x20] 	      4380	channel.c	FUNCTION_100
0x400ac5a	          0x83f801	                              cmp eax, 1	      3943	channel.c	FUNCTION_89	IF_2
0x400ac5d	     0xf869d030000	                           jbe 0x400b000	      3943	channel.c	FUNCTION_89	IF_2
0x400ac63	          0x8b5a14	            mov ebx, dword [rdx + 0x14] 	      3949	channel.c	FUNCTION_89
0x400ac66	        0x498d7010	                    lea rsi, [r8 + 0x10]	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac6a	      0x4c89442408	                 mov qword [rsp + 8], r8	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac6f	          0x83c301	                              add ebx, 1	      3949	channel.c	FUNCTION_89
0x400ac72	          0x895a14	             mov dword [rdx + 0x14], ebx	      3949	channel.c	FUNCTION_89
0x400ac75	            0x31d2	                            xor edx, edx	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac77	          0x83f803	                              cmp eax, 3	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac7a	           0xf94c2	                                 sete dl	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac7d	            0x89df	                            mov edi, ebx	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac7f	          0x83c204	                              add edx, 4	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac82	      0xe800000000	                          call 0x400ac87	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac87	          0x4885c0	                           test rax, rax	      3952	channel.c	FUNCTION_89	IF_3
0x400ac8a	          0x4889c5	                            mov rbp, rax	      3950	channel.c	FUNCTION_89	CALL_6
0x400ac8d	     0xf84fd010000	                            je 0x400ae90	      3952	channel.c	FUNCTION_89	IF_3
0x400ac93	          0x4585ff	                         test r15d, r15d	      3955	channel.c	FUNCTION_89	CALL_7
0x400ac96	      0xb800000000	                              mov eax, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x400ac9b	      0xba00000000	                              mov edx, 0	      3955	channel.c	FUNCTION_89	CALL_7
0x400aca0	      0x4c8d742440	                   lea r14, [rsp + 0x40]	        90	string3.h	FUNCTION_138	CALL_6
0x400aca5	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      5007	channel.c	FUNCTION_108	IF_1
0x400acaa	        0x480f44c2	                          cmove rax, rdx	      3955	channel.c	FUNCTION_89	CALL_7
0x400acae	      0x4889442410	             mov qword [rsp + 0x10], rax	      3955	channel.c	FUNCTION_89	CALL_7
0x400acb3	      0xb96f000000	                           mov ecx, 0x6f	        90	string3.h	FUNCTION_138	CALL_6
0x400acb8	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_138	CALL_6
0x400acba	          0x4c89f7	                            mov rdi, r14	        90	string3.h	FUNCTION_138	CALL_6
0x400acbd	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_138	CALL_6
0x400acc0	          0x418b00	                     mov eax, dword [r8]	      5007	channel.c	FUNCTION_108	IF_1
0x400acc3	          0x83f809	                              cmp eax, 9	      5007	channel.c	FUNCTION_108	IF_1
0x400acc6	     0xf84e4020000	                            je 0x400afb0	      5007	channel.c	FUNCTION_108	IF_1
0x400accc	          0x83f80a	                            cmp eax, 0xa	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400accf	     0xf85ab030000	                           jne 0x400b080	      5012	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400acd5	        0x4d8b6008	                 mov r12, qword [r8 + 8]	      5014	channel.c	FUNCTION_108	ELSE_1	IF_3
0x400acd9	          0x4d85e4	                           test r12, r12	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400acdc	     0xf841e020000	                            je 0x400af00	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400ace2	    0x41837c2418ff	cmp dword [r12 + 0x18], 0xffffffffffffffff	      2725	channel.c	FUNCTION_63
0x400ace8	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4357	channel.c	FUNCTION_98
0x400acf0	    0xc74424080000	                  mov dword [rsp + 8], 0	      4368	channel.c	FUNCTION_99
0x400acf8	     0xf84c2010000	                            je 0x400aec0	      2725	channel.c	FUNCTION_63
0x400acfe	        0x418b4020	              mov eax, dword [r8 + 0x20]	      4502	channel.c	FUNCTION_107	IF_1
0x400ad02	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_107	IF_1
0x400ad04	     0xf84cb000000	                            je 0x400add5	      4502	channel.c	FUNCTION_107	IF_1
0x400ad0a	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_107	IF_2
0x400ad0d	     0xf85bd020000	                           jne 0x400afd0	      4504	channel.c	FUNCTION_107	IF_2
0x400ad13	        0x498d7820	                    lea rdi, [r8 + 0x20]	      4504	channel.c	FUNCTION_107	IF_2
0x400ad17	            0x31c9	                            xor ecx, ecx	      4504	channel.c	FUNCTION_107	IF_2
0x400ad19	      0xba10020000	                          mov edx, 0x210	      4504	channel.c	FUNCTION_107	IF_2
0x400ad1e	          0x4c89f6	                            mov rsi, r14	      4504	channel.c	FUNCTION_107	IF_2
0x400ad21	      0xe8da58ffff	        call sym.get_job_options.part.14	      4504	channel.c	FUNCTION_107	IF_2
0x400ad26	            0x85c0	                           test eax, eax	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400ad28	     0xf84f2010000	                            je 0x400af20	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400ad2e	    0x488b8c24e001	           mov rcx, qword [rsp + 0x1e0] 	      3894	channel.c	FUNCTION_88	IF_2	CALL_5
0x400ad36	          0x4885c9	                           test rcx, rcx	      3900	channel.c	FUNCTION_88	IF_3
0x400ad39	     0xf8496000000	                            je 0x400add5	      3900	channel.c	FUNCTION_88	IF_3
0x400ad3f	          0x803900	                       cmp byte [rcx], 0	      3900	channel.c	FUNCTION_88	IF_3
0x400ad42	     0xf848d000000	                            je 0x400add5	      3900	channel.c	FUNCTION_88	IF_3
0x400ad48	          0x4585ff	                         test r15d, r15d	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x400ad4b	     0xf855f030000	                           jne 0x400b0b0	      3902	channel.c	FUNCTION_88	IF_3	IF_4
0x400ad51	    0x488bb424e801	           mov rsi, qword [rsp + 0x1e8] 	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x400ad59	      0xbf28000000	                           mov edi, 0x28	      1304	channel.c	FUNCTION_35	CALL_1
0x400ad5e	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      1304	channel.c	FUNCTION_35	CALL_1
0x400ad63	      0x4889742420	             mov qword [rsp + 0x20], rsi	      3907	channel.c	FUNCTION_88	IF_3	CALL_8
0x400ad68	      0xe800000000	                          call 0x400ad6d	      1304	channel.c	FUNCTION_35	CALL_1
0x400ad6d	          0x4885c0	                           test rax, rax	      1306	channel.c	FUNCTION_35	IF_1
0x400ad70	          0x4889c2	                            mov rdx, rax	      1304	channel.c	FUNCTION_35	CALL_1
0x400ad73	            0x7460	                            je 0x400add5	      1306	channel.c	FUNCTION_35	IF_1
0x400ad75	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1308	channel.c	FUNCTION_35	IF_1
0x400ad7a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x400ad7f	          0x4885f6	                           test rsi, rsi	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x400ad82	        0x48897008	                mov qword [rax + 8], rsi	      1308	channel.c	FUNCTION_35	IF_1
0x400ad86	     0xf84c4020000	                            je 0x400b050	      1309	channel.c	FUNCTION_35	IF_1	IF_2
0x400ad8c	          0x830601	                      add dword [rsi], 1	      1311	channel.c	FUNCTION_35	IF_1	IF_2
0x400ad8f	          0x488908	                    mov qword [rax], rcx	      1312	channel.c	FUNCTION_35	IF_1	IF_2
0x400ad92	        0x8b442408	                mov eax, dword [rsp + 8]	      1320	channel.c	FUNCTION_35	IF_1
0x400ad96	          0x895a10	             mov dword [rdx + 0x10], ebx	      1319	channel.c	FUNCTION_35	IF_1
0x400ad99	          0x4889c1	                            mov rcx, rax	      1320	channel.c	FUNCTION_35	IF_1
0x400ad9c	        0x48c1e008	                              shl rax, 8	      1320	channel.c	FUNCTION_35	IF_1
0x400ada0	        0x48c1e104	                              shl rcx, 4	      1320	channel.c	FUNCTION_35	IF_1
0x400ada4	          0x4801c8	                            add rax, rcx	      1320	channel.c	FUNCTION_35	IF_1
0x400ada7	          0x4c01e0	                            add rax, r12	      1320	channel.c	FUNCTION_35	IF_1
0x400adaa	    0x488b88e00000	            mov rcx, qword [rax + 0xe0] 	      1320	channel.c	FUNCTION_35	IF_1
0x400adb1	        0x48894a20	             mov qword [rdx + 0x20], rcx	      1320	channel.c	FUNCTION_35	IF_1
0x400adb5	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1321	channel.c	FUNCTION_35	IF_1
0x400adbc	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x400adc0	    0x48c742180000	               mov qword [rdx + 0x18], 0	      1322	channel.c	FUNCTION_35	IF_1
0x400adc8	          0x4885c9	                           test rcx, rcx	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x400adcb	     0xf8407030000	                            je 0x400b0d8	      1323	channel.c	FUNCTION_35	IF_1	IF_3
0x400add1	        0x48895118	             mov qword [rcx + 0x18], rdx	      1326	channel.c	FUNCTION_35	IF_1	ELSE_2
0x400add5	          0x4889ef	                            mov rdi, rbp	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400add8	      0xe800000000	                          call 0x400addd	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400addd	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400ade2	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400ade6	            0x89c1	                            mov ecx, eax	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400ade8	          0x4889ea	                            mov rdx, rbp	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400adeb	          0x4c89e7	                            mov rdi, r12	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400adee	      0xe800000000	                          call 0x400adf3	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400adf3	          0x83f801	                              cmp eax, 1	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400adf6	     0xf8524010000	                           jne 0x400af20	      3911	channel.c	FUNCTION_88	IF_5	CALL_10
0x400adfc	    0x4883bc24e001	              cmp qword [rsp + 0x1e0], 0	      3912	channel.c	FUNCTION_88	IF_5
0x400ae05	     0xf8515010000	                           jne 0x400af20	      3912	channel.c	FUNCTION_88	IF_5
0x400ae0b	          0x4889ef	                            mov rdi, rbp	      3957	channel.c	FUNCTION_89	CALL_8
0x400ae0e	      0xe800000000	                          call 0x400ae13	      3957	channel.c	FUNCTION_89	CALL_8
0x400ae13	          0x4585ff	                         test r15d, r15d	      3958	channel.c	FUNCTION_89	IF_4
0x400ae16	            0x7468	                            je 0x400ae80	      3958	channel.c	FUNCTION_89	IF_4
0x400ae18	      0xf644244102	               test byte [rsp + 0x41], 2	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x400ae1d	     0xf857d010000	                           jne 0x400afa0	      3960	channel.c	FUNCTION_89	IF_4	IF_5
0x400ae23	        0x8b442408	                mov eax, dword [rsp + 8]	      4389	channel.c	FUNCTION_101
0x400ae27	          0x4889c2	                            mov rdx, rax	      4389	channel.c	FUNCTION_101
0x400ae2a	        0x48c1e008	                              shl rax, 8	      4389	channel.c	FUNCTION_101
0x400ae2e	        0x48c1e204	                              shl rdx, 4	      4389	channel.c	FUNCTION_101
0x400ae32	          0x4801d0	                            add rax, rdx	      4389	channel.c	FUNCTION_101
0x400ae35	      0x418b540428	      mov edx, dword [r12 + rax + 0x28] 	      4389	channel.c	FUNCTION_101
0x400ae3a	        0x8b742408	                mov esi, dword [rsp + 8]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400ae3e	      0x4c8d442438	                    lea r8, [rsp + 0x38]	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400ae43	            0x89d9	                            mov ecx, ebx	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400ae45	          0x4c89e7	                            mov rdi, r12	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400ae48	      0xe883f5ffff	        call sym.channel_read_json_block	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400ae4d	          0x83f801	                              cmp eax, 1	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400ae50	            0x752e	                           jne 0x400ae80	      3964	channel.c	FUNCTION_89	IF_4	IF_6	CALL_10
0x400ae52	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae57	        0x488b4708	                mov rax, qword [rdi + 8]	      3967	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae5b	        0x488b5008	                mov rdx, qword [rax + 8]	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae5f	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae63	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae67	        0x49894d00	                    mov qword [r13], rcx	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae6b	        0x49895d08	                mov qword [r13 + 8], rbx	      3971	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae6f	        0x488b4008	                mov rax, qword [rax + 8]	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae73	    0xc74010010000	               mov dword [rax + 0x10], 1	      3972	channel.c	FUNCTION_89	IF_4	IF_6
0x400ae7a	      0xe800000000	                          call 0x400ae7f	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x400ae7f	              0x90	                                     nop	      3973	channel.c	FUNCTION_89	IF_4	IF_6	CALL_11
0x400ae80	          0x4c89f7	                            mov rdi, r14	      3976	channel.c	FUNCTION_89	CALL_12
0x400ae83	      0xe800000000	                          call 0x400ae88	      3976	channel.c	FUNCTION_89	CALL_12
0x400ae88	     0xf1f84000000	                   nop dword [rax + rax]	      3976	channel.c	FUNCTION_89	CALL_12
0x400ae90	    0x488b8424b803	           mov rax, qword [rsp + 0x3b8] 	      3977	channel.c	FUNCTION_89
0x400ae98	    0x644833042528	                xor rax, qword fs:[0x28]	      3977	channel.c	FUNCTION_89
0x400aea1	     0xf853d020000	                           jne 0x400b0e4	      3977	channel.c	FUNCTION_89
0x400aea7	    0x4881c4c80300	                          add rsp, 0x3c8	      3977	channel.c	FUNCTION_89
0x400aeae	              0x5b	                                 pop rbx	      3977	channel.c	FUNCTION_89
0x400aeaf	              0x5d	                                 pop rbp	      3977	channel.c	FUNCTION_89
0x400aeb0	            0x415c	                                 pop r12	      3977	channel.c	FUNCTION_89
0x400aeb2	            0x415d	                                 pop r13	      3977	channel.c	FUNCTION_89
0x400aeb4	            0x415e	                                 pop r14	      3977	channel.c	FUNCTION_89
0x400aeb6	            0x415f	                                 pop r15	      3977	channel.c	FUNCTION_89
0x400aeb8	              0xc3	                                     ret	      3977	channel.c	FUNCTION_89
0x400aeb9	     0xf1f80000000	                         nop dword [rax]	      3977	channel.c	FUNCTION_89
0x400aec0	    0x4183bc244803	cmp dword [r12 + 0x348], 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x400aec9	    0xc744241c0300	               mov dword [rsp + 0x1c], 3	      4356	channel.c	FUNCTION_98	IF_1
0x400aed1	    0xc74424080100	                  mov dword [rsp + 8], 1	      4367	channel.c	FUNCTION_99	IF_1
0x400aed9	     0xf851ffeffff	                           jne 0x400acfe	      2726	channel.c	FUNCTION_63
0x400aedf	    0x4183bc242801	cmp dword [r12 + 0x128], 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x400aee8	     0xf8510feffff	                           jne 0x400acfe	      2727	channel.c	FUNCTION_63
0x400aeee	    0x4183bc243802	cmp dword [r12 + 0x238], 0xffffffffffffffff	      2728	channel.c	FUNCTION_63
0x400aef7	     0xf8501feffff	                           jne 0x400acfe	      2728	channel.c	FUNCTION_63
0x400aefd	           0xf1f00	                         nop dword [rax]	      2728	channel.c	FUNCTION_63
0x400af00	            0x31ff	                            xor edi, edi	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af02	      0xba05000000	                              mov edx, 5	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af07	      0xbe00000000	                              mov esi, 0	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af0c	      0xe800000000	                          call 0x400af11	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af11	          0x4889c7	                            mov rdi, rax	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af14	      0xe800000000	                          call 0x400af19	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af19	     0xf1f80000000	                         nop dword [rax]	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af20	          0x4889ef	                            mov rdi, rbp	      3957	channel.c	FUNCTION_89	CALL_8
0x400af23	      0xe800000000	                          call 0x400af28	      3957	channel.c	FUNCTION_89	CALL_8
0x400af28	          0x4c89f7	                            mov rdi, r14	      3976	channel.c	FUNCTION_89	CALL_12
0x400af2b	      0xe800000000	                          call 0x400af30	      3976	channel.c	FUNCTION_89	CALL_12
0x400af30	      0xe95bffffff	                           jmp 0x400ae90	      3976	channel.c	FUNCTION_89	CALL_12
0x400af35	           0xf1f00	                         nop dword [rax]	      3976	channel.c	FUNCTION_89	CALL_12
0x400af38	        0x488b4708	                mov rax, qword [rdi + 8]	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400af3c	          0x4885c0	                           test rax, rax	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400af3f	            0x740f	                            je 0x400af50	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400af41	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400af45	          0x4885d2	                           test rdx, rdx	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400af48	     0xf85eefcffff	                           jne 0x400ac3c	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400af4e	            0x6690	                                     nop	      5025	channel.c	FUNCTION_108	IF_5	CALL_6
0x400af50	            0x31ff	                            xor edi, edi	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af52	      0xba05000000	                              mov edx, 5	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af57	      0xbe00000000	                              mov esi, 0	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af5c	      0xe800000000	                          call 0x400af61	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af61	          0x4889c7	                            mov rdi, rax	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af64	      0xe800000000	                          call 0x400af69	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af69	      0xe922ffffff	                           jmp 0x400ae90	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af6e	            0x6690	                                     nop	      5028	channel.c	FUNCTION_108	IF_5	CALL_8
0x400af70	    0x83ba48030000	cmp dword [rdx + 0x348], 0xffffffffffffffff	      2726	channel.c	FUNCTION_63
0x400af77	      0xb803000000	                              mov eax, 3	      4356	channel.c	FUNCTION_98	IF_1
0x400af7c	     0xf85c6fcffff	                           jne 0x400ac48	      2726	channel.c	FUNCTION_63
0x400af82	    0x83ba28010000	cmp dword [rdx + 0x128], 0xffffffffffffffff	      2727	channel.c	FUNCTION_63
0x400af89	     0xf85b9fcffff	                           jne 0x400ac48	      2727	channel.c	FUNCTION_63
0x400af8f	    0x83ba38020000	cmp dword [rdx + 0x238], 0xffffffffffffffff	      2728	channel.c	FUNCTION_63
0x400af96	     0xf85acfcffff	                           jne 0x400ac48	      2728	channel.c	FUNCTION_63
0x400af9c	            0xebb2	                           jmp 0x400af50	      2728	channel.c	FUNCTION_63
0x400af9e	            0x6690	                                     nop	      2728	channel.c	FUNCTION_63
0x400afa0	    0x8b9424380200	           mov edx, dword [rsp + 0x238] 	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x400afa7	      0xe98efeffff	                           jmp 0x400ae3a	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x400afac	         0xf1f4000	                         nop dword [rax]	      3961	channel.c	FUNCTION_89	IF_4	IF_5
0x400afb0	        0x498b4008	                 mov rax, qword [r8 + 8]	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400afb4	          0x4885c0	                           test rax, rax	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400afb7	     0xf8443ffffff	                            je 0x400af00	      5009	channel.c	FUNCTION_108	IF_1	IF_2
0x400afbd	        0x4c8b6060	            mov r12, qword [rax + 0x60] 	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400afc1	      0xe913fdffff	                           jmp 0x400acd9	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400afc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5010	channel.c	FUNCTION_108	IF_1	IF_2
0x400afd0	      0xba05000000	                              mov edx, 5	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400afd5	      0xbe00000000	                              mov esi, 0	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400afda	            0x31ff	                            xor edi, edi	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400afdc	      0xe800000000	                          call 0x400afe1	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400afe1	          0x4889c7	                            mov rdi, rax	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400afe4	      0xe800000000	                          call 0x400afe9	      4506	channel.c	FUNCTION_107	IF_2	CALL_2
0x400afe9	          0x4889ef	                            mov rdi, rbp	      3957	channel.c	FUNCTION_89	CALL_8
0x400afec	      0xe800000000	                          call 0x400aff1	      3957	channel.c	FUNCTION_89	CALL_8
0x400aff1	          0x4c89f7	                            mov rdi, r14	      3976	channel.c	FUNCTION_89	CALL_12
0x400aff4	      0xe800000000	                          call 0x400aff9	      3976	channel.c	FUNCTION_89	CALL_12
0x400aff9	      0xe992feffff	                           jmp 0x400ae90	      3976	channel.c	FUNCTION_89	CALL_12
0x400affe	            0x6690	                                     nop	      3976	channel.c	FUNCTION_89	CALL_12
0x400b000	            0x31ff	                            xor edi, edi	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400b002	      0xba05000000	                              mov edx, 5	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400b007	      0xbe00000000	                              mov esi, 0	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400b00c	      0xe800000000	                          call 0x400b011	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400b011	          0x4889c7	                            mov rdi, rax	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400b014	      0xe800000000	                          call 0x400b019	      3945	channel.c	FUNCTION_89	IF_2	CALL_5
0x400b019	      0xe972feffff	                           jmp 0x400ae90	      3946	channel.c	FUNCTION_89	IF_2
0x400b01e	            0x6690	                                     nop	      3946	channel.c	FUNCTION_89	IF_2
0x400b020	      0xe800000000	                          call 0x400b025	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b025	            0x31ff	                            xor edi, edi	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b027	          0x4889c3	                            mov rbx, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b02a	      0xba05000000	                              mov edx, 5	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b02f	      0xbe00000000	                              mov esi, 0	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b034	      0xe800000000	                          call 0x400b039	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b039	          0x4889de	                            mov rsi, rbx	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b03c	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b03f	      0xe800000000	                          call 0x400b044	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b044	      0xe947feffff	                           jmp 0x400ae90	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b049	     0xf1f80000000	                         nop dword [rax]	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b050	          0x4889cf	                            mov rdi, rcx	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b053	      0x4889442420	             mov qword [rsp + 0x20], rax	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b058	      0xe800000000	                          call 0x400b05d	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b05d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b062	          0x4889c7	                            mov rdi, rax	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b065	          0x488902	                    mov qword [rdx], rax	      1316	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_2
0x400b068	      0xe800000000	                          call 0x400b06d	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b06d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b072	      0xe91bfdffff	                           jmp 0x400ad92	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b077	    0x660f1f840000	                    nop word [rax + rax]	      1317	channel.c	FUNCTION_35	IF_1	ELSE_1	CALL_3
0x400b080	          0x4c89c7	                             mov rdi, r8	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b083	      0xe800000000	                          call 0x400b088	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b088	            0x31ff	                            xor edi, edi	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b08a	          0x4889c3	                            mov rbx, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b08d	      0xba05000000	                              mov edx, 5	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b092	      0xbe00000000	                              mov esi, 0	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b097	      0xe800000000	                          call 0x400b09c	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b09c	          0x4889de	                            mov rsi, rbx	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b09f	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b0a2	      0xe800000000	                          call 0x400b0a7	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b0a7	      0xe974feffff	                           jmp 0x400af20	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b0ac	         0xf1f4000	                         nop dword [rax]	      5018	channel.c	FUNCTION_108	ELSE_2	CALL_3
0x400b0b0	            0x31ff	                            xor edi, edi	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0b2	      0xba05000000	                              mov edx, 5	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0b7	      0xbe00000000	                              mov esi, 0	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0bc	      0xe800000000	                          call 0x400b0c1	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0c1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0c6	          0x4889c7	                            mov rdi, rax	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0c9	      0xe800000000	                          call 0x400b0ce	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0ce	      0xe94dfeffff	                           jmp 0x400af20	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0d3	       0xf1f440000	                   nop dword [rax + rax]	      3904	channel.c	FUNCTION_88	IF_3	IF_4	CALL_7
0x400b0d8	    0x488990d80000	             mov qword [rax + 0xd8], rdx	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x400b0df	      0xe9f1fcffff	                           jmp 0x400add5	      1324	channel.c	FUNCTION_35	IF_1	IF_3
0x400b0e4	      0xe800000000	                          call 0x400b0e9	      3977	channel.c	FUNCTION_89
