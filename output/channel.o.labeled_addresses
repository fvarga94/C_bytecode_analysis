channel_any_keep_open	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	19
0x6ff7	              0x55	                                push rbp	      3656	channel.c	FUNCTION_88
0x6ff8	          0x4889e5	                            mov rbp, rsp	      3656	channel.c	FUNCTION_88
0x6ffb	    0x488b05000000	            mov rax, qword [0x04007042] 	      3659	channel.c	FUNCTION_88	FOR_1
0x7002	        0x488945f8	                mov qword [rbp - 8], rax	      3659	channel.c	FUNCTION_88	FOR_1
0x7006	            0xeb20	                           jmp 0x4007068	      3659	channel.c	FUNCTION_88	FOR_1
0x7008	        0x488b45f8	                mov rax, qword [rbp - 8]	      3660	channel.c	FUNCTION_88	FOR_1	IF_1
0x700c	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      3660	channel.c	FUNCTION_88	FOR_1	IF_1
0x7012	            0x85c0	                           test eax, eax	      3660	channel.c	FUNCTION_88	FOR_1	IF_1
0x7014	            0x7407	                            je 0x400705d	      3660	channel.c	FUNCTION_88	FOR_1	IF_1
0x7016	      0xb801000000	                              mov eax, 1	      3661	channel.c	FUNCTION_88	FOR_1	IF_1
0x701b	            0xeb17	                           jmp 0x4007074	      3661	channel.c	FUNCTION_88	FOR_1	IF_1
0x701d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3659	channel.c	FUNCTION_88	FOR_1
0x7021	          0x488b00	                    mov rax, qword [rax]	      3659	channel.c	FUNCTION_88	FOR_1
0x7024	        0x488945f8	                mov qword [rbp - 8], rax	      3659	channel.c	FUNCTION_88	FOR_1
0x7028	      0x48837df800	                  cmp qword [rbp - 8], 0	      3659	channel.c	FUNCTION_88	FOR_1
0x702d	            0x75d9	                           jne 0x4007048	      3659	channel.c	FUNCTION_88	FOR_1
0x702f	      0xb800000000	                              mov eax, 0	      3662	channel.c	FUNCTION_88
0x7034	              0x5d	                                 pop rbp	      3663	channel.c	FUNCTION_88
0x7035	              0xc3	                                     ret	      3663	channel.c	FUNCTION_88
channel_first_nl	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	26
0x2e77	              0x55	                                push rbp	      1625	channel.c	FUNCTION_48
0x2e78	          0x4889e5	                            mov rbp, rsp	      1625	channel.c	FUNCTION_48
0x2e7b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1625	channel.c	FUNCTION_48
0x2e7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1626	channel.c	FUNCTION_48
0x2e83	          0x488b00	                    mov rax, qword [rax]	      1626	channel.c	FUNCTION_48
0x2e86	        0x488945f8	                mov qword [rbp - 8], rax	      1626	channel.c	FUNCTION_48
0x2e8a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1629	channel.c	FUNCTION_48	FOR_1
0x2e92	            0xeb24	                           jmp 0x4002ef8	      1629	channel.c	FUNCTION_48	FOR_1
0x2e94	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1630	channel.c	FUNCTION_48	FOR_1	IF_1
0x2e98	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1630	channel.c	FUNCTION_48	FOR_1	IF_1
0x2e9c	          0x4801d0	                            add rax, rdx	      1630	channel.c	FUNCTION_48	FOR_1	IF_1
0x2e9f	           0xfb600	                   movzx eax, byte [rax]	      1630	channel.c	FUNCTION_48	FOR_1	IF_1
0x2ea2	            0x3c0a	                             cmp al, 0xa	      1630	channel.c	FUNCTION_48	FOR_1	IF_1
0x2ea4	            0x750d	                           jne 0x4002ef3	      1630	channel.c	FUNCTION_48	FOR_1	IF_1
0x2ea6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1631	channel.c	FUNCTION_48	FOR_1	IF_1
0x2eaa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1631	channel.c	FUNCTION_48	FOR_1	IF_1
0x2eae	          0x4801d0	                            add rax, rdx	      1631	channel.c	FUNCTION_48	FOR_1	IF_1
0x2eb1	            0xeb18	                           jmp 0x4002f0b	      1631	channel.c	FUNCTION_48	FOR_1	IF_1
0x2eb3	      0x488345f001	               add qword [rbp - 0x10], 1	      1629	channel.c	FUNCTION_48	FOR_1
0x2eb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1629	channel.c	FUNCTION_48	FOR_1
0x2ebc	        0x488b4008	                mov rax, qword [rax + 8]	      1629	channel.c	FUNCTION_48	FOR_1
0x2ec0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1629	channel.c	FUNCTION_48	FOR_1
0x2ec4	            0x77ce	                            ja 0x4002ed4	      1629	channel.c	FUNCTION_48	FOR_1
0x2ec6	      0xb800000000	                              mov eax, 0	      1632	channel.c	FUNCTION_48
0x2ecb	              0x5d	                                 pop rbp	      1633	channel.c	FUNCTION_48
0x2ecc	              0xc3	                                     ret	      1633	channel.c	FUNCTION_48
add_channel	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,2:FOR,1:WHILE,0:DO,0	68
0x3ff	              0x55	                                push rbp	       263	channel.c	ELSE_1	FUNCTION_10
0x400	          0x4889e5	                            mov rbp, rsp	       263	channel.c	ELSE_1	FUNCTION_10
0x403	        0x4883ec10	                           sub rsp, 0x10	       263	channel.c	ELSE_1	FUNCTION_10
0x407	      0xbfc0040000	                          mov edi, 0x4c0	       265	channel.c	ELSE_1	FUNCTION_10	CALL_1
0x40c	      0xe800000000	                          call 0x4000451	       265	channel.c	ELSE_1	FUNCTION_10	CALL_1
0x411	        0x488945f8	                mov qword [rbp - 8], rax	       265	channel.c	ELSE_1	FUNCTION_10	CALL_1
0x415	      0x48837df800	                  cmp qword [rbp - 8], 0	       267	channel.c	ELSE_1	FUNCTION_10	IF_1
0x41a	            0x750a	                           jne 0x4000466	       267	channel.c	ELSE_1	FUNCTION_10	IF_1
0x41c	      0xb800000000	                              mov eax, 0	       268	channel.c	ELSE_1	FUNCTION_10	IF_1
0x421	      0xe9eb000000	                           jmp 0x4000551	       268	channel.c	ELSE_1	FUNCTION_10	IF_1
0x426	    0x8b0500000000	            mov eax, dword [0x0400046c] 	       270	channel.c	ELSE_1	FUNCTION_10
0x42c	          0x8d5001	                      lea edx, [rax + 1]	       270	channel.c	ELSE_1	FUNCTION_10
0x42f	    0x891500000000	            mov dword [0x04000475], edx 	       270	channel.c	ELSE_1	FUNCTION_10
0x435	        0x488b55f8	                mov rdx, qword [rbp - 8]	       270	channel.c	ELSE_1	FUNCTION_10
0x439	          0x894210	             mov dword [rdx + 0x10], eax	       270	channel.c	ELSE_1	FUNCTION_10
0x43c	        0x488b45f8	                mov rax, qword [rbp - 8]	       271	channel.c	ELSE_1	FUNCTION_10	CALL_2
0x440	      0xbe00000000	                              mov esi, 0	       271	channel.c	ELSE_1	FUNCTION_10	CALL_2
0x445	          0x4889c7	                            mov rdi, rax	       271	channel.c	ELSE_1	FUNCTION_10	CALL_2
0x448	      0xb800000000	                              mov eax, 0	       271	channel.c	ELSE_1	FUNCTION_10	CALL_2
0x44d	      0xe800000000	                          call 0x4000492	       271	channel.c	ELSE_1	FUNCTION_10	CALL_2
0x452	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       273	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x459	            0xeb6a	                           jmp 0x4000505	       273	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x45b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x45f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x462	        0x48c1e004	                              shl rax, 4	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x466	          0x4889c1	                            mov rcx, rax	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x469	        0x48c1e104	                              shl rcx, 4	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x46d	          0x4801c8	                            add rax, rcx	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x470	          0x4801d0	                            add rax, rdx	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x473	        0x4883c018	                           add rax, 0x18	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x477	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       275	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x47d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x481	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x484	        0x48c1e004	                              shl rax, 4	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x488	          0x4889c1	                            mov rcx, rax	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x48b	        0x48c1e104	                              shl rcx, 4	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x48f	          0x4801c8	                            add rax, rcx	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x492	          0x4801d0	                            add rax, rdx	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x495	        0x4883c01c	                           add rax, 0x1c	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x499	    0xc70000000000	                      mov dword [rax], 0	       280	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x49f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4a3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4a6	        0x48c1e004	                              shl rax, 4	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4aa	          0x4889c1	                            mov rcx, rax	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4ad	        0x48c1e104	                              shl rcx, 4	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4b1	          0x4801c8	                            add rax, rcx	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4b4	          0x4801d0	                            add rax, rdx	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4b7	        0x4883c028	                           add rax, 0x28	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4bb	    0xc700d0070000	                  mov dword [rax], 0x7d0	       282	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4c1	        0x8345f401	                add dword [rbp - 0xc], 1	       273	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4c5	        0x837df403	                cmp dword [rbp - 0xc], 3	       273	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4c9	            0x7690	                           jbe 0x400049b	       273	channel.c	ELSE_1	FUNCTION_10	FOR_1
0x4cb	    0x488b05000000	            mov rax, qword [0x04000512] 	       285	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4d2	          0x4885c0	                           test rax, rax	       285	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4d5	            0x741d	                            je 0x4000534	       285	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4d7	    0x488b05000000	            mov rax, qword [0x0400051e] 	       287	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4de	        0x488b55f8	                mov rdx, qword [rbp - 8]	       287	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4e2	        0x48895008	                mov qword [rax + 8], rdx	       287	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4e6	    0x488b15000000	            mov rdx, qword [0x0400052d] 	       288	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4f1	          0x488910	                    mov qword [rax], rdx	       288	channel.c	ELSE_1	FUNCTION_10	IF_2
0x4f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	channel.c	ELSE_1	FUNCTION_10
0x4f8	    0x488905000000	            mov qword [0x0400053f], rax 	       290	channel.c	ELSE_1	FUNCTION_10
0x4ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	channel.c	ELSE_1	FUNCTION_10
0x503	    0xc780b4040000	              mov dword [rax + 0x4b4], 1	       292	channel.c	ELSE_1	FUNCTION_10
0x50d	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	channel.c	ELSE_1	FUNCTION_10
0x511	              0xc9	                                   leave	       294	channel.c	ELSE_1	FUNCTION_10
0x512	              0xc3	                                     ret	       294	channel.c	ELSE_1	FUNCTION_10
free_unused_jobs	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	32
0xad8c	              0x55	                                push rbp	      5378	channel.c	FUNCTION_127
0xad8d	          0x4889e5	                            mov rbp, rsp	      5378	channel.c	FUNCTION_127
0xad90	        0x4883ec20	                           sub rsp, 0x20	      5378	channel.c	FUNCTION_127
0xad94	          0x897dec	             mov dword [rbp - 0x14], edi	      5378	channel.c	FUNCTION_127
0xad97	          0x8975e8	             mov dword [rbp - 0x18], esi	      5378	channel.c	FUNCTION_127
0xad9a	    0x488b05000000	            mov rax, qword [0x0400ade1] 	      5382	channel.c	FUNCTION_127	FOR_1
0xada1	        0x488945f0	             mov qword [rbp - 0x10], rax	      5382	channel.c	FUNCTION_127	FOR_1
0xada5	            0xeb40	                           jmp 0x400ae27	      5382	channel.c	FUNCTION_127	FOR_1
0xada7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5384	channel.c	FUNCTION_127	FOR_1
0xadab	          0x488b00	                    mov rax, qword [rax]	      5384	channel.c	FUNCTION_127	FOR_1
0xadae	        0x488945f8	                mov qword [rbp - 8], rax	      5384	channel.c	FUNCTION_127	FOR_1
0xadb2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5385	channel.c	FUNCTION_127	FOR_1	IF_1
0xadb6	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      5385	channel.c	FUNCTION_127	FOR_1	IF_1
0xadb9	          0x3345ec	             xor eax, dword [rbp - 0x14]	      5385	channel.c	FUNCTION_127	FOR_1	IF_1
0xadbc	          0x2345e8	             and eax, dword [rbp - 0x18]	      5385	channel.c	FUNCTION_127	FOR_1	IF_1
0xadbf	            0x85c0	                           test eax, eax	      5385	channel.c	FUNCTION_127	FOR_1	IF_1
0xadc1	            0x741c	                            je 0x400ae1f	      5385	channel.c	FUNCTION_127	FOR_1	IF_1
0xadc3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5386	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_1
0xadc7	          0x4889c7	                            mov rdi, rax	      5386	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_1
0xadca	      0xe8b1f8ffff	               call sym.job_still_useful	      5386	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_1
0xadcf	            0x85c0	                           test eax, eax	      5386	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_1
0xadd1	            0x750c	                           jne 0x400ae1f	      5386	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_1
0xadd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5389	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_2
0xadd7	          0x4889c7	                            mov rdi, rax	      5389	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_2
0xadda	      0xe855f7ffff	                   call sym.job_free_job	      5389	channel.c	FUNCTION_127	FOR_1	IF_1	CALL_2
0xaddf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5382	channel.c	FUNCTION_127	FOR_1
0xade3	        0x488945f0	             mov qword [rbp - 0x10], rax	      5382	channel.c	FUNCTION_127	FOR_1
0xade7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5382	channel.c	FUNCTION_127	FOR_1
0xadec	            0x75b9	                           jne 0x400ade7	      5382	channel.c	FUNCTION_127	FOR_1
0xadee	              0x90	                                     nop	      5392	channel.c	FUNCTION_127
0xadef	              0xc9	                                   leave	      5392	channel.c	FUNCTION_127
0xadf0	              0xc3	                                     ret	      5392	channel.c	FUNCTION_127
channel_set_req_callback	functions,0:SWITCH,0:CALL,3:ELSE,2:IF,3:FOR,0:WHILE,0:DO,0	74
0x2494	              0x55	                                push rbp	      1302	channel.c	FUNCTION_38
0x2495	          0x4889e5	                            mov rbp, rsp	      1302	channel.c	FUNCTION_38
0x2498	        0x4883ec30	                           sub rsp, 0x30	      1302	channel.c	FUNCTION_38
0x249c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1302	channel.c	FUNCTION_38
0x24a0	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1302	channel.c	FUNCTION_38
0x24a3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1302	channel.c	FUNCTION_38
0x24a7	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1302	channel.c	FUNCTION_38
0x24ab	        0x448945e0	             mov dword [rbp - 0x20], r8d	      1302	channel.c	FUNCTION_38
0x24af	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1303	channel.c	FUNCTION_38
0x24b2	        0x48c1e004	                              shl rax, 4	      1303	channel.c	FUNCTION_38
0x24b6	          0x4889c2	                            mov rdx, rax	      1303	channel.c	FUNCTION_38
0x24b9	        0x48c1e204	                              shl rdx, 4	      1303	channel.c	FUNCTION_38
0x24bd	          0x4801d0	                            add rax, rdx	      1303	channel.c	FUNCTION_38
0x24c0	    0x488d90b00000	                   lea rdx, [rax + 0xb0]	      1303	channel.c	FUNCTION_38
0x24c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1303	channel.c	FUNCTION_38
0x24cb	          0x4801d0	                            add rax, rdx	      1303	channel.c	FUNCTION_38
0x24ce	        0x4883c010	                           add rax, 0x10	      1303	channel.c	FUNCTION_38
0x24d2	        0x488945f0	             mov qword [rbp - 0x10], rax	      1303	channel.c	FUNCTION_38
0x24d6	      0xbf28000000	                           mov edi, 0x28	      1304	channel.c	FUNCTION_38	CALL_1
0x24db	      0xe800000000	                          call 0x4002520	      1304	channel.c	FUNCTION_38	CALL_1
0x24e0	        0x488945f8	                mov qword [rbp - 8], rax	      1304	channel.c	FUNCTION_38	CALL_1
0x24e4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1306	channel.c	FUNCTION_38	IF_1
0x24e9	     0xf84b1000000	                            je 0x40025e0	      1306	channel.c	FUNCTION_38	IF_1
0x24ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1308	channel.c	FUNCTION_38	IF_1
0x24f3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1308	channel.c	FUNCTION_38	IF_1
0x24f7	        0x48895008	                mov qword [rax + 8], rdx	      1308	channel.c	FUNCTION_38	IF_1
0x24fb	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1309	channel.c	FUNCTION_38	IF_1	IF_2
0x2500	            0x741c	                            je 0x400255e	      1309	channel.c	FUNCTION_38	IF_1	IF_2
0x2502	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	channel.c	FUNCTION_38	IF_1	IF_2
0x2506	            0x8b00	                    mov eax, dword [rax]	      1311	channel.c	FUNCTION_38	IF_1	IF_2
0x2508	          0x8d5001	                      lea edx, [rax + 1]	      1311	channel.c	FUNCTION_38	IF_1	IF_2
0x250b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	channel.c	FUNCTION_38	IF_1	IF_2
0x250f	            0x8910	                    mov dword [rax], edx	      1311	channel.c	FUNCTION_38	IF_1	IF_2
0x2511	        0x488b45f8	                mov rax, qword [rbp - 8]	      1312	channel.c	FUNCTION_38	IF_1	IF_2
0x2515	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1312	channel.c	FUNCTION_38	IF_1	IF_2
0x2519	          0x488910	                    mov qword [rax], rdx	      1312	channel.c	FUNCTION_38	IF_1	IF_2
0x251c	            0xeb25	                           jmp 0x4002583	      1312	channel.c	FUNCTION_38	IF_1	IF_2
0x251e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1316	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_2
0x2522	          0x4889c7	                            mov rdi, rax	      1316	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_2
0x2525	      0xe800000000	                          call 0x400256a	      1316	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_2
0x252a	          0x4889c2	                            mov rdx, rax	      1316	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_2
0x252d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1316	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_2
0x2531	          0x488910	                    mov qword [rax], rdx	      1316	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_2
0x2534	        0x488b45f8	                mov rax, qword [rbp - 8]	      1317	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_3
0x2538	          0x488b00	                    mov rax, qword [rax]	      1317	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_3
0x253b	          0x4889c7	                            mov rdi, rax	      1317	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_3
0x253e	      0xe800000000	                          call 0x4002583	      1317	channel.c	FUNCTION_38	IF_1	ELSE_1	CALL_3
0x2543	        0x488b45f8	                mov rax, qword [rbp - 8]	      1319	channel.c	FUNCTION_38	IF_1
0x2547	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1319	channel.c	FUNCTION_38	IF_1
0x254a	          0x895010	             mov dword [rax + 0x10], edx	      1319	channel.c	FUNCTION_38	IF_1
0x254d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1320	channel.c	FUNCTION_38	IF_1
0x2551	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1320	channel.c	FUNCTION_38	IF_1
0x2555	        0x488b45f8	                mov rax, qword [rbp - 8]	      1320	channel.c	FUNCTION_38	IF_1
0x2559	        0x48895020	             mov qword [rax + 0x20], rdx	      1320	channel.c	FUNCTION_38	IF_1
0x255d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1321	channel.c	FUNCTION_38	IF_1
0x2561	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1321	channel.c	FUNCTION_38	IF_1
0x2565	        0x48895020	             mov qword [rax + 0x20], rdx	      1321	channel.c	FUNCTION_38	IF_1
0x2569	        0x488b45f8	                mov rax, qword [rbp - 8]	      1322	channel.c	FUNCTION_38	IF_1
0x256d	    0x48c740180000	               mov qword [rax + 0x18], 0	      1322	channel.c	FUNCTION_38	IF_1
0x2575	        0x488b45f8	                mov rax, qword [rbp - 8]	      1323	channel.c	FUNCTION_38	IF_1	IF_3
0x2579	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1323	channel.c	FUNCTION_38	IF_1	IF_3
0x257d	          0x4885c0	                           test rax, rax	      1323	channel.c	FUNCTION_38	IF_1	IF_3
0x2580	            0x750e	                           jne 0x40025d0	      1323	channel.c	FUNCTION_38	IF_1	IF_3
0x2582	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1324	channel.c	FUNCTION_38	IF_1	IF_3
0x2586	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1324	channel.c	FUNCTION_38	IF_1	IF_3
0x258a	        0x48895018	             mov qword [rax + 0x18], rdx	      1324	channel.c	FUNCTION_38	IF_1	IF_3
0x258e	            0xeb10	                           jmp 0x40025e0	      1328	channel.c	FUNCTION_38	ELSE_2
0x2590	        0x488b45f8	                mov rax, qword [rbp - 8]	      1326	channel.c	FUNCTION_38	IF_1	ELSE_2
0x2594	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1326	channel.c	FUNCTION_38	IF_1	ELSE_2
0x2598	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1326	channel.c	FUNCTION_38	IF_1	ELSE_2
0x259c	        0x48895018	             mov qword [rax + 0x18], rdx	      1326	channel.c	FUNCTION_38	IF_1	ELSE_2
0x25a0	              0x90	                                     nop	      1328	channel.c	FUNCTION_38	ELSE_2
0x25a1	              0xc9	                                   leave	      1328	channel.c	FUNCTION_38	ELSE_2
0x25a2	              0xc3	                                     ret	      1328	channel.c	FUNCTION_38	ELSE_2
messageFromServerGtk2	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	12
0x9c4	              0x55	                                push rbp	       512	channel.c	FUNCTION_24
0x9c5	          0x4889e5	                            mov rbp, rsp	       512	channel.c	FUNCTION_24
0x9c8	        0x4883ec10	                           sub rsp, 0x10	       512	channel.c	FUNCTION_24
0x9cc	        0x48897df8	                mov qword [rbp - 8], rdi	       512	channel.c	FUNCTION_24
0x9d0	          0x8975f4	              mov dword [rbp - 0xc], esi	       512	channel.c	FUNCTION_24
0x9d3	          0x8955f0	             mov dword [rbp - 0x10], edx	       512	channel.c	FUNCTION_24
0x9d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       513	channel.c	FUNCTION_24	CALL_1
0x9da	            0x89c7	                            mov edi, eax	       513	channel.c	FUNCTION_24	CALL_1
0x9dc	      0xe865ffffff	                call sym.channel_read_fd	       513	channel.c	FUNCTION_24	CALL_1
0x9e1	              0x90	                                     nop	       514	channel.c	FUNCTION_24
0x9e2	              0xc9	                                   leave	       514	channel.c	FUNCTION_24
0x9e3	              0xc3	                                     ret	       514	channel.c	FUNCTION_24
get_channel_arg	functions,0:SWITCH,0:CALL,8:ELSE,2:IF,5:FOR,0:WHILE,0:DO,0	82
0xa308	              0x55	                                push rbp	      5003	channel.c	FUNCTION_111
0xa309	          0x4889e5	                            mov rbp, rsp	      5003	channel.c	FUNCTION_111
0xa30c	              0x53	                                push rbx	      5003	channel.c	FUNCTION_111
0xa30d	        0x4883ec38	                           sub rsp, 0x38	      5003	channel.c	FUNCTION_111
0xa311	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5003	channel.c	FUNCTION_111
0xa315	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5003	channel.c	FUNCTION_111
0xa318	          0x8955d0	             mov dword [rbp - 0x30], edx	      5003	channel.c	FUNCTION_111
0xa31b	          0x894dcc	             mov dword [rbp - 0x34], ecx	      5003	channel.c	FUNCTION_111
0xa31e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5004	channel.c	FUNCTION_111
0xa326	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      5005	channel.c	FUNCTION_111
0xa32d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5007	channel.c	FUNCTION_111	IF_1
0xa331	            0x8b00	                    mov eax, dword [rax]	      5007	channel.c	FUNCTION_111	IF_1
0xa333	          0x83f809	                              cmp eax, 9	      5007	channel.c	FUNCTION_111	IF_1
0xa336	            0x751f	                           jne 0x400a397	      5007	channel.c	FUNCTION_111	IF_1
0xa338	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5009	channel.c	FUNCTION_111	IF_1	IF_2
0xa33c	        0x488b4008	                mov rax, qword [rax + 8]	      5009	channel.c	FUNCTION_111	IF_1	IF_2
0xa340	          0x4885c0	                           test rax, rax	      5009	channel.c	FUNCTION_111	IF_1	IF_2
0xa343	            0x7456	                            je 0x400a3db	      5009	channel.c	FUNCTION_111	IF_1	IF_2
0xa345	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5010	channel.c	FUNCTION_111	IF_1	IF_2
0xa349	        0x488b4008	                mov rax, qword [rax + 8]	      5010	channel.c	FUNCTION_111	IF_1	IF_2
0xa34d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5010	channel.c	FUNCTION_111	IF_1	IF_2
0xa351	        0x488945e8	             mov qword [rbp - 0x18], rax	      5010	channel.c	FUNCTION_111	IF_1	IF_2
0xa355	            0xeb44	                           jmp 0x400a3db	      5010	channel.c	FUNCTION_111	IF_1	IF_2
0xa357	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5012	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa35b	            0x8b00	                    mov eax, dword [rax]	      5012	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa35d	          0x83f80a	                            cmp eax, 0xa	      5012	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa360	            0x750e	                           jne 0x400a3b0	      5012	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa362	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5014	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa366	        0x488b4008	                mov rax, qword [rax + 8]	      5014	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa36a	        0x488945e8	             mov qword [rbp - 0x18], rax	      5014	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa36e	            0xeb2b	                           jmp 0x400a3db	      5014	channel.c	FUNCTION_111	ELSE_1	IF_3
0xa370	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa374	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa377	      0xe800000000	                          call 0x400a3bc	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa37c	          0x4889c3	                            mov rbx, rax	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa37f	      0xbf00000000	                              mov edi, 0	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa384	      0xe800000000	                          call 0x400a3c9	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa389	          0x4889de	                            mov rsi, rbx	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa38c	          0x4889c7	                            mov rdi, rax	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa38f	      0xe800000000	                          call 0x400a3d4	      5018	channel.c	FUNCTION_111	ELSE_2	CALL_3
0xa394	      0xb800000000	                              mov eax, 0	      5019	channel.c	FUNCTION_111	ELSE_2
0xa399	            0xeb7b	                           jmp 0x400a456	      5019	channel.c	FUNCTION_111	ELSE_2
0xa39b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5021	channel.c	FUNCTION_111	IF_4
0xa3a0	            0x742e	                            je 0x400a410	      5021	channel.c	FUNCTION_111	IF_4
0xa3a2	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5021	channel.c	FUNCTION_111	IF_4
0xa3a6	            0x7428	                            je 0x400a410	      5021	channel.c	FUNCTION_111	IF_4
0xa3a8	        0x837dcc04	               cmp dword [rbp - 0x34], 4	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3ac	            0x750e	                           jne 0x400a3fc	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3b2	          0x4889c7	                            mov rdi, rax	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3b5	      0xe800000000	                          call 0x400a3fa	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3ba	            0xeb03	                           jmp 0x400a3ff	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3bc	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3bf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3c3	            0x89c6	                            mov esi, eax	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3c5	          0x4889d7	                            mov rdi, rdx	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3c8	      0xe800000000	                          call 0x400a40d	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3cd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      5022	channel.c	FUNCTION_111	IF_4	CALL_4
0xa3d0	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3d4	            0x743c	                            je 0x400a452	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3d6	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3db	            0x741c	                            je 0x400a439	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3e1	          0x4889c7	                            mov rdi, rax	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3e4	      0xe800000000	                          call 0x400a429	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3e9	            0x85c0	                           test eax, eax	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3eb	            0x7525	                           jne 0x400a452	      5025	channel.c	FUNCTION_111	IF_5	CALL_6
0xa3ed	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5026	channel.c	FUNCTION_111	IF_5
0xa3f1	            0x7406	                            je 0x400a439	      5026	channel.c	FUNCTION_111	IF_5
0xa3f3	        0x837de400	               cmp dword [rbp - 0x1c], 0	      5026	channel.c	FUNCTION_111	IF_5
0xa3f7	            0x7519	                           jne 0x400a452	      5026	channel.c	FUNCTION_111	IF_5
0xa3f9	      0xbf00000000	                              mov edi, 0	      5028	channel.c	FUNCTION_111	IF_5	CALL_8
0xa3fe	      0xe800000000	                          call 0x400a443	      5028	channel.c	FUNCTION_111	IF_5	CALL_8
0xa403	          0x4889c7	                            mov rdi, rax	      5028	channel.c	FUNCTION_111	IF_5	CALL_8
0xa406	      0xe800000000	                          call 0x400a44b	      5028	channel.c	FUNCTION_111	IF_5	CALL_8
0xa40b	      0xb800000000	                              mov eax, 0	      5029	channel.c	FUNCTION_111	IF_5
0xa410	            0xeb04	                           jmp 0x400a456	      5029	channel.c	FUNCTION_111	IF_5
0xa412	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5031	channel.c	FUNCTION_111
0xa416	        0x4883c438	                           add rsp, 0x38	      5032	channel.c	FUNCTION_111
0xa41a	              0x5b	                                 pop rbx	      5032	channel.c	FUNCTION_111
0xa41b	              0x5d	                                 pop rbp	      5032	channel.c	FUNCTION_111
0xa41c	              0xc3	                                     ret	      5032	channel.c	FUNCTION_111
job_set_options	functions,0:SWITCH,0:CALL,5:ELSE,3:IF,5:FOR,0:WHILE,0:DO,0	91
0xae68	              0x55	                                push rbp	      5420	channel.c	FUNCTION_129
0xae69	          0x4889e5	                            mov rbp, rsp	      5420	channel.c	FUNCTION_129
0xae6c	        0x4883ec10	                           sub rsp, 0x10	      5420	channel.c	FUNCTION_129
0xae70	        0x48897df8	                mov qword [rbp - 8], rdi	      5420	channel.c	FUNCTION_129
0xae74	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5420	channel.c	FUNCTION_129
0xae78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5421	channel.c	FUNCTION_129	IF_1
0xae7c	            0x8b00	                    mov eax, dword [rax]	      5421	channel.c	FUNCTION_129	IF_1
0xae7e	      0x2500400000	                         and eax, 0x4000	      5421	channel.c	FUNCTION_129	IF_1
0xae83	            0x85c0	                           test eax, eax	      5421	channel.c	FUNCTION_129	IF_1
0xae85	            0x745e	                            je 0x400af25	      5421	channel.c	FUNCTION_129	IF_1
0xae87	        0x488b45f8	                mov rax, qword [rbp - 8]	      5423	channel.c	FUNCTION_129	IF_1	CALL_1
0xae8b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5423	channel.c	FUNCTION_129	IF_1	CALL_1
0xae8f	          0x4889c7	                            mov rdi, rax	      5423	channel.c	FUNCTION_129	IF_1	CALL_1
0xae92	      0xe800000000	                          call 0x400aed7	      5423	channel.c	FUNCTION_129	IF_1	CALL_1
0xae97	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xae9b	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaea2	          0x4885c0	                           test rax, rax	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaea5	            0x7412	                            je 0x400aef9	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaea7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaeab	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaeb2	           0xfb600	                   movzx eax, byte [rax]	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaeb5	            0x84c0	                             test al, al	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaeb7	            0x750e	                           jne 0x400af07	      5424	channel.c	FUNCTION_129	IF_1	IF_2
0xaeb9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5425	channel.c	FUNCTION_129	IF_1	IF_2
0xaebd	    0x48c740300000	               mov qword [rax + 0x30], 0	      5425	channel.c	FUNCTION_129	IF_1	IF_2
0xaec5	            0xeb1e	                           jmp 0x400af25	      5425	channel.c	FUNCTION_129	IF_1	IF_2
0xaec7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5427	channel.c	FUNCTION_129	IF_1	CALL_2
0xaecb	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      5427	channel.c	FUNCTION_129	IF_1	CALL_2
0xaed2	          0x4889c7	                            mov rdi, rax	      5427	channel.c	FUNCTION_129	IF_1	CALL_2
0xaed5	      0xe800000000	                          call 0x400af1a	      5427	channel.c	FUNCTION_129	IF_1	CALL_2
0xaeda	          0x4889c2	                            mov rdx, rax	      5427	channel.c	FUNCTION_129	IF_1	CALL_2
0xaedd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5427	channel.c	FUNCTION_129	IF_1	CALL_2
0xaee1	        0x48895030	             mov qword [rax + 0x30], rdx	      5427	channel.c	FUNCTION_129	IF_1	CALL_2
0xaee5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5429	channel.c	FUNCTION_129	IF_3
0xaee9	            0x8b00	                    mov eax, dword [rax]	      5429	channel.c	FUNCTION_129	IF_3
0xaeeb	      0x2500800000	                         and eax, 0x8000	      5429	channel.c	FUNCTION_129	IF_3
0xaef0	            0x85c0	                           test eax, eax	      5429	channel.c	FUNCTION_129	IF_3
0xaef2	     0xf84c9000000	                            je 0x400b001	      5429	channel.c	FUNCTION_129	IF_3
0xaef8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5431	channel.c	FUNCTION_129	IF_3	CALL_3
0xaefc	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5431	channel.c	FUNCTION_129	IF_3	CALL_3
0xaf00	        0x488b45f8	                mov rax, qword [rbp - 8]	      5431	channel.c	FUNCTION_129	IF_3	CALL_3
0xaf04	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5431	channel.c	FUNCTION_129	IF_3	CALL_3
0xaf08	          0x4889d6	                            mov rsi, rdx	      5431	channel.c	FUNCTION_129	IF_3	CALL_3
0xaf0b	          0x4889c7	                            mov rdi, rax	      5431	channel.c	FUNCTION_129	IF_3	CALL_3
0xaf0e	      0xe800000000	                          call 0x400af53	      5431	channel.c	FUNCTION_129	IF_3	CALL_3
0xaf13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf17	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf1e	          0x4885c0	                           test rax, rax	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf21	            0x7412	                            je 0x400af75	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf27	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf2e	           0xfb600	                   movzx eax, byte [rax]	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf31	            0x84c0	                             test al, al	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf33	            0x751a	                           jne 0x400af8f	      5432	channel.c	FUNCTION_129	IF_3	IF_4
0xaf35	        0x488b45f8	                mov rax, qword [rbp - 8]	      5434	channel.c	FUNCTION_129	IF_3	IF_4
0xaf39	    0x48c740400000	               mov qword [rax + 0x40], 0	      5434	channel.c	FUNCTION_129	IF_3	IF_4
0xaf41	        0x488b45f8	                mov rax, qword [rbp - 8]	      5435	channel.c	FUNCTION_129	IF_3	IF_4
0xaf45	    0x48c740480000	               mov qword [rax + 0x48], 0	      5435	channel.c	FUNCTION_129	IF_3	IF_4
0xaf4d	            0xeb72	                           jmp 0x400b001	      5452	channel.c	FUNCTION_129
0xaf4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5439	channel.c	FUNCTION_129	IF_3	ELSE_2
0xaf53	    0x488b90e80100	           mov rdx, qword [rax + 0x1e8] 	      5439	channel.c	FUNCTION_129	IF_3	ELSE_2
0xaf5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5439	channel.c	FUNCTION_129	IF_3	ELSE_2
0xaf5e	        0x48895048	             mov qword [rax + 0x48], rdx	      5439	channel.c	FUNCTION_129	IF_3	ELSE_2
0xaf62	        0x488b45f8	                mov rax, qword [rbp - 8]	      5440	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf66	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5440	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf6a	          0x4885c0	                           test rax, rax	      5440	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf6d	            0x7424	                            je 0x400afd3	      5440	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5442	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf73	    0x488b90e00100	           mov rdx, qword [rax + 0x1e0] 	      5442	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5442	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf7e	        0x48895040	             mov qword [rax + 0x40], rdx	      5442	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf82	        0x488b45f8	                mov rax, qword [rbp - 8]	      5443	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf86	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5443	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf8a	            0x8b10	                    mov edx, dword [rax]	      5443	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf8c	          0x83c201	                              add edx, 1	      5443	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf8f	            0x8910	                    mov dword [rax], edx	      5443	channel.c	FUNCTION_129	IF_3	ELSE_2	IF_5
0xaf91	            0xeb2e	                           jmp 0x400b001	      5452	channel.c	FUNCTION_129
0xaf93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5447	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_4
0xaf97	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      5447	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_4
0xaf9e	          0x4889c7	                            mov rdi, rax	      5447	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_4
0xafa1	      0xe800000000	                          call 0x400afe6	      5447	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_4
0xafa6	          0x4889c2	                            mov rdx, rax	      5447	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_4
0xafa9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5447	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_4
0xafad	        0x48895040	             mov qword [rax + 0x40], rdx	      5447	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_4
0xafb1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5448	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_5
0xafb5	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5448	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_5
0xafb9	          0x4889c7	                            mov rdi, rax	      5448	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_5
0xafbc	      0xe800000000	                          call 0x400b001	      5448	channel.c	FUNCTION_129	IF_3	ELSE_2	ELSE_3	CALL_5
0xafc1	              0x90	                                     nop	      5452	channel.c	FUNCTION_129
0xafc2	              0xc9	                                   leave	      5452	channel.c	FUNCTION_129
0xafc3	              0xc3	                                     ret	      5452	channel.c	FUNCTION_129
channel_select_setup	functions,0:SWITCH,0:CALL,2:ELSE,1:IF,4:FOR,2:WHILE,0:DO,0	101
0x7b08	              0x55	                                push rbp	      4118	channel.c	FUNCTION_96
0x7b09	          0x4889e5	                            mov rbp, rsp	      4118	channel.c	FUNCTION_96
0x7b0c	        0x4883ec58	                           sub rsp, 0x58	      4118	channel.c	FUNCTION_96
0x7b10	          0x897dcc	             mov dword [rbp - 0x34], edi	      4118	channel.c	FUNCTION_96
0x7b13	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4118	channel.c	FUNCTION_96
0x7b17	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4118	channel.c	FUNCTION_96
0x7b1b	        0x48894db0	             mov qword [rbp - 0x50], rcx	      4118	channel.c	FUNCTION_96
0x7b1f	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      4118	channel.c	FUNCTION_96
0x7b23	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4119	channel.c	FUNCTION_96
0x7b26	          0x8945dc	             mov dword [rbp - 0x24], eax	      4119	channel.c	FUNCTION_96
0x7b29	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4121	channel.c	FUNCTION_96
0x7b2d	        0x488945f0	             mov qword [rbp - 0x10], rax	      4121	channel.c	FUNCTION_96
0x7b31	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4122	channel.c	FUNCTION_96
0x7b35	        0x488945f8	                mov qword [rbp - 8], rax	      4122	channel.c	FUNCTION_96
0x7b39	    0x488b05000000	            mov rax, qword [0x04007b80] 	      4125	channel.c	FUNCTION_96	FOR_1
0x7b40	        0x488945e8	             mov qword [rbp - 0x18], rax	      4125	channel.c	FUNCTION_96	FOR_1
0x7b44	      0xe9ff000000	                           jmp 0x4007c88	      4125	channel.c	FUNCTION_96	FOR_1
0x7b49	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4127	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b50	      0xe9de000000	                           jmp 0x4007c73	      4127	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b55	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b59	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b5c	        0x48c1e004	                              shl rax, 4	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b60	          0x4889c1	                            mov rcx, rax	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b63	        0x48c1e104	                              shl rcx, 4	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b67	          0x4801c8	                            add rax, rcx	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b6a	          0x4801d0	                            add rax, rdx	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b6d	        0x4883c018	                           add rax, 0x18	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b71	            0x8b00	                    mov eax, dword [rax]	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b73	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4129	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7b76	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	      4131	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x7b7a	     0xf84af000000	                            je 0x4007c6f	      4131	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1
0x7b80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4133	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2
0x7b84	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      4133	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2
0x7b8a	            0x85c0	                           test eax, eax	      4133	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2
0x7b8c	            0x744c	                            je 0x4007c1a	      4133	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2
0x7b8e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7b92	          0x488b00	                    mov rax, qword [rax]	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7b95	          0x4885c0	                           test rax, rax	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7b98	            0x741c	                            je 0x4007bf6	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7b9a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7b9e	          0x488b00	                    mov rax, qword [rax]	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7ba1	          0x4885c0	                           test rax, rax	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7ba4	            0x7f10	                            jg 0x4007bf6	      4138	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7ba6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4139	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7baa	        0x488b4008	                mov rax, qword [rax + 8]	      4139	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bae	    0x483d204e0000	                         cmp rax, 0x4e20	      4139	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bb4	            0x7e79	                           jle 0x4007c6f	      4139	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bb6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4141	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bba	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4141	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bbe	          0x488910	                    mov qword [rax], rdx	      4141	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bc1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4142	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bc5	    0x48c700000000	                      mov qword [rax], 0	      4142	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bcc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4143	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bd0	    0x48c74008204e	            mov qword [rax + 8], 0x4e20 	      4143	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bd8	            0xeb55	                           jmp 0x4007c6f	      4143	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	IF_2	IF_3
0x7bda	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bdd	          0x8d503f	                   lea edx, [rax + 0x3f]	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7be0	            0x85c0	                           test eax, eax	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7be2	           0xf48c2	                          cmovs eax, edx	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7be5	          0xc1f806	                              sar eax, 6	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7be8	            0x89c6	                            mov esi, eax	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bee	          0x4863d6	                         movsxd rdx, esi	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bf1	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bf5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bf8	              0x99	                                     cdq	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bf9	          0xc1ea1a	                           shr edx, 0x1a	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bfc	             0x1d0	                            add eax, edx	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7bfe	          0x83e03f	                           and eax, 0x3f	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c01	            0x29d0	                            sub eax, edx	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c03	      0xba01000000	                              mov edx, 1	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c08	            0x89c1	                            mov ecx, eax	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c0a	          0x48d3e2	                             shl rdx, cl	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c0d	          0x4889d0	                            mov rax, rdx	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c10	          0x4809c7	                             or rdi, rax	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c13	          0x4889f9	                            mov rcx, rdi	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c1a	          0x4863d6	                         movsxd rdx, esi	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c1d	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4148	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	CALL_1
0x7c21	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4149	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x7c24	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4149	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x7c27	            0x7d06	                           jge 0x4007c6f	      4149	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x7c29	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4150	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x7c2c	          0x8945dc	             mov dword [rbp - 0x24], eax	      4150	channel.c	FUNCTION_96	FOR_1	FOR_2	IF_1	ELSE_1	IF_4
0x7c2f	        0x8345e001	               add dword [rbp - 0x20], 1	      4127	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7c33	        0x837de002	               cmp dword [rbp - 0x20], 2	      4127	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7c37	     0xf8618ffffff	                           jbe 0x4007b95	      4127	channel.c	FUNCTION_96	FOR_1	FOR_2
0x7c3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4125	channel.c	FUNCTION_96	FOR_1
0x7c41	          0x488b00	                    mov rax, qword [rax]	      4125	channel.c	FUNCTION_96	FOR_1
0x7c44	        0x488945e8	             mov qword [rbp - 0x18], rax	      4125	channel.c	FUNCTION_96	FOR_1
0x7c48	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4125	channel.c	FUNCTION_96	FOR_1
0x7c4d	     0xf85f6feffff	                           jne 0x4007b89	      4125	channel.c	FUNCTION_96	FOR_1
0x7c53	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4156	channel.c	FUNCTION_96	CALL_2
0x7c57	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4156	channel.c	FUNCTION_96	CALL_2
0x7c5a	          0x4889d6	                            mov rsi, rdx	      4156	channel.c	FUNCTION_96	CALL_2
0x7c5d	            0x89c7	                            mov edi, eax	      4156	channel.c	FUNCTION_96	CALL_2
0x7c5f	      0xe84fe4ffff	              call sym.channel_fill_wfds	      4156	channel.c	FUNCTION_96	CALL_2
0x7c64	          0x8945dc	             mov dword [rbp - 0x24], eax	      4156	channel.c	FUNCTION_96	CALL_2
0x7c67	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4158	channel.c	FUNCTION_96
0x7c6a	              0xc9	                                   leave	      4159	channel.c	FUNCTION_96
0x7c6b	              0xc3	                                     ret	      4159	channel.c	FUNCTION_96
job_channel_can_close	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	19
0xa645	              0x55	                                push rbp	      5121	channel.c	FUNCTION_118
0xa646	          0x4889e5	                            mov rbp, rsp	      5121	channel.c	FUNCTION_118
0xa649	        0x4883ec08	                              sub rsp, 8	      5121	channel.c	FUNCTION_118
0xa64d	        0x48897df8	                mov qword [rbp - 8], rdi	      5121	channel.c	FUNCTION_118
0xa651	        0x488b45f8	                mov rax, qword [rbp - 8]	      5122	channel.c	FUNCTION_118	CALL_1
0xa655	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5122	channel.c	FUNCTION_118	CALL_1
0xa659	          0x4885c0	                           test rax, rax	      5122	channel.c	FUNCTION_118	CALL_1
0xa65c	            0x741b	                            je 0x400a6b9	      5122	channel.c	FUNCTION_118	CALL_1
0xa65e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5122	channel.c	FUNCTION_118	CALL_1
0xa662	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5122	channel.c	FUNCTION_118	CALL_1
0xa666	          0x4889c7	                            mov rdi, rax	      5122	channel.c	FUNCTION_118	CALL_1
0xa669	      0xe84d60ffff	              call sym.channel_can_close	      5122	channel.c	FUNCTION_118	CALL_1
0xa66e	            0x85c0	                           test eax, eax	      5122	channel.c	FUNCTION_118	CALL_1
0xa670	            0x7407	                            je 0x400a6b9	      5122	channel.c	FUNCTION_118	CALL_1
0xa672	      0xb801000000	                              mov eax, 1	      5122	channel.c	FUNCTION_118	CALL_1
0xa677	            0xeb05	                           jmp 0x400a6be	      5122	channel.c	FUNCTION_118	CALL_1
0xa679	      0xb800000000	                              mov eax, 0	      5122	channel.c	FUNCTION_118	CALL_1
0xa67e	              0xc9	                                   leave	      5123	channel.c	FUNCTION_118
0xa67f	              0xc3	                                     ret	      5123	channel.c	FUNCTION_118
handle_io	functions,0:SWITCH,0:CALL,8:ELSE,5:IF,5:FOR,0:WHILE,0:DO,0	90
0x8388	              0x55	                                push rbp	      4416	channel.c	FUNCTION_106
0x8389	          0x4889e5	                            mov rbp, rsp	      4416	channel.c	FUNCTION_106
0x838c	        0x4883ec30	                           sub rsp, 0x30	      4416	channel.c	FUNCTION_106
0x8390	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4416	channel.c	FUNCTION_106
0x8394	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4416	channel.c	FUNCTION_106
0x8397	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4416	channel.c	FUNCTION_106
0x839b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4417	channel.c	FUNCTION_106	CALL_1
0x839f	          0x4889c7	                            mov rdi, rax	      4417	channel.c	FUNCTION_106	CALL_1
0x83a2	      0xe800000000	                          call 0x40083e7	      4417	channel.c	FUNCTION_106	CALL_1
0x83a7	        0x488945f8	                mov qword [rbp - 8], rax	      4417	channel.c	FUNCTION_106	CALL_1
0x83ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4419	channel.c	FUNCTION_106
0x83af	            0x8b00	                    mov eax, dword [rax]	      4419	channel.c	FUNCTION_106
0x83b1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4419	channel.c	FUNCTION_106
0x83b4	          0x83ea01	                              sub edx, 1	      4419	channel.c	FUNCTION_106
0x83b7	      0xbe00000100	                        mov esi, 0x10000	      4419	channel.c	FUNCTION_106
0x83bc	            0x89d1	                            mov ecx, edx	      4419	channel.c	FUNCTION_106
0x83be	            0xd3e6	                             shl esi, cl	      4419	channel.c	FUNCTION_106
0x83c0	            0x89f2	                            mov edx, esi	      4419	channel.c	FUNCTION_106
0x83c2	             0x9c2	                             or edx, eax	      4419	channel.c	FUNCTION_106
0x83c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4419	channel.c	FUNCTION_106
0x83c8	            0x8910	                    mov dword [rax], edx	      4419	channel.c	FUNCTION_106
0x83ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      4420	channel.c	FUNCTION_106	IF_1	CALL_2
0x83ce	      0xbe00000000	                              mov esi, 0	      4420	channel.c	FUNCTION_106	IF_1	CALL_2
0x83d3	          0x4889c7	                            mov rdi, rax	      4420	channel.c	FUNCTION_106	IF_1	CALL_2
0x83d6	      0xe800000000	                          call 0x400841b	      4420	channel.c	FUNCTION_106	IF_1	CALL_2
0x83db	            0x85c0	                           test eax, eax	      4420	channel.c	FUNCTION_106	IF_1	CALL_2
0x83dd	            0x7518	                           jne 0x4008437	      4420	channel.c	FUNCTION_106	IF_1	CALL_2
0x83df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4421	channel.c	FUNCTION_106	IF_1
0x83e3	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4421	channel.c	FUNCTION_106	IF_1
0x83e6	        0x4883c204	                              add rdx, 4	      4421	channel.c	FUNCTION_106	IF_1
0x83ea	    0xc74490080100	          mov dword [rax + rdx*4 + 8], 1	      4421	channel.c	FUNCTION_106	IF_1
0x83f2	      0xe9d4000000	                           jmp 0x400850b	      4421	channel.c	FUNCTION_106	IF_1
0x83f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4422	channel.c	FUNCTION_106	ELSE_1	IF_2	CALL_3
0x83fb	      0xbe00000000	                              mov esi, 0	      4422	channel.c	FUNCTION_106	ELSE_1	IF_2	CALL_3
0x8400	          0x4889c7	                            mov rdi, rax	      4422	channel.c	FUNCTION_106	ELSE_1	IF_2	CALL_3
0x8403	      0xe800000000	                          call 0x4008448	      4422	channel.c	FUNCTION_106	ELSE_1	IF_2	CALL_3
0x8408	            0x85c0	                           test eax, eax	      4422	channel.c	FUNCTION_106	ELSE_1	IF_2	CALL_3
0x840a	            0x7518	                           jne 0x4008464	      4422	channel.c	FUNCTION_106	ELSE_1	IF_2	CALL_3
0x840c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4423	channel.c	FUNCTION_106	ELSE_1	IF_2
0x8410	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4423	channel.c	FUNCTION_106	ELSE_1	IF_2
0x8413	        0x4883c204	                              add rdx, 4	      4423	channel.c	FUNCTION_106	ELSE_1	IF_2
0x8417	    0xc74490080000	          mov dword [rax + rdx*4 + 8], 0	      4423	channel.c	FUNCTION_106	ELSE_1	IF_2
0x841f	      0xe9a7000000	                           jmp 0x400850b	      4423	channel.c	FUNCTION_106	ELSE_1	IF_2
0x8424	        0x488b45f8	                mov rax, qword [rbp - 8]	      4424	channel.c	FUNCTION_106	ELSE_2	IF_3	CALL_4
0x8428	      0xbe00000000	                              mov esi, 0	      4424	channel.c	FUNCTION_106	ELSE_2	IF_3	CALL_4
0x842d	          0x4889c7	                            mov rdi, rax	      4424	channel.c	FUNCTION_106	ELSE_2	IF_3	CALL_4
0x8430	      0xe800000000	                          call 0x4008475	      4424	channel.c	FUNCTION_106	ELSE_2	IF_3	CALL_4
0x8435	            0x85c0	                           test eax, eax	      4424	channel.c	FUNCTION_106	ELSE_2	IF_3	CALL_4
0x8437	            0x7515	                           jne 0x400848e	      4424	channel.c	FUNCTION_106	ELSE_2	IF_3	CALL_4
0x8439	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4425	channel.c	FUNCTION_106	ELSE_2	IF_3
0x843d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4425	channel.c	FUNCTION_106	ELSE_2	IF_3
0x8440	        0x4883c204	                              add rdx, 4	      4425	channel.c	FUNCTION_106	ELSE_2	IF_3
0x8444	    0xc74490080200	          mov dword [rax + rdx*4 + 8], 2	      4425	channel.c	FUNCTION_106	ELSE_2	IF_3
0x844c	            0xeb7d	                           jmp 0x400850b	      4425	channel.c	FUNCTION_106	ELSE_2	IF_3
0x844e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4426	channel.c	FUNCTION_106	ELSE_3	IF_4	CALL_5
0x8452	      0xbe00000000	                              mov esi, 0	      4426	channel.c	FUNCTION_106	ELSE_3	IF_4	CALL_5
0x8457	          0x4889c7	                            mov rdi, rax	      4426	channel.c	FUNCTION_106	ELSE_3	IF_4	CALL_5
0x845a	      0xe800000000	                          call 0x400849f	      4426	channel.c	FUNCTION_106	ELSE_3	IF_4	CALL_5
0x845f	            0x85c0	                           test eax, eax	      4426	channel.c	FUNCTION_106	ELSE_3	IF_4	CALL_5
0x8461	            0x7515	                           jne 0x40084b8	      4426	channel.c	FUNCTION_106	ELSE_3	IF_4	CALL_5
0x8463	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4427	channel.c	FUNCTION_106	ELSE_3	IF_4
0x8467	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4427	channel.c	FUNCTION_106	ELSE_3	IF_4
0x846a	        0x4883c204	                              add rdx, 4	      4427	channel.c	FUNCTION_106	ELSE_3	IF_4
0x846e	    0xc74490080300	          mov dword [rax + rdx*4 + 8], 3	      4427	channel.c	FUNCTION_106	ELSE_3	IF_4
0x8476	            0xeb53	                           jmp 0x400850b	      4427	channel.c	FUNCTION_106	ELSE_3	IF_4
0x8478	        0x488b45f8	                mov rax, qword [rbp - 8]	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x847c	      0xbe00000000	                              mov esi, 0	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x8481	          0x4889c7	                            mov rdi, rax	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x8484	      0xe800000000	                          call 0x40084c9	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x8489	            0x85c0	                           test eax, eax	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x848b	            0x751b	                           jne 0x40084e8	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x848d	        0x837de402	               cmp dword [rbp - 0x1c], 2	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x8491	            0x7515	                           jne 0x40084e8	      4428	channel.c	FUNCTION_106	ELSE_4	IF_5	CALL_6
0x8493	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4429	channel.c	FUNCTION_106	ELSE_4	IF_5
0x8497	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4429	channel.c	FUNCTION_106	ELSE_4	IF_5
0x849a	        0x4883c204	                              add rdx, 4	      4429	channel.c	FUNCTION_106	ELSE_4	IF_5
0x849e	    0xc74490080400	          mov dword [rax + rdx*4 + 8], 4	      4429	channel.c	FUNCTION_106	ELSE_4	IF_5
0x84a6	            0xeb23	                           jmp 0x400850b	      4429	channel.c	FUNCTION_106	ELSE_4	IF_5
0x84a8	      0xbf00000000	                              mov edi, 0	      4432	channel.c	FUNCTION_106	ELSE_5	CALL_8
0x84ad	      0xe800000000	                          call 0x40084f2	      4432	channel.c	FUNCTION_106	ELSE_5	CALL_8
0x84b2	          0x4889c2	                            mov rdx, rax	      4432	channel.c	FUNCTION_106	ELSE_5	CALL_8
0x84b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4432	channel.c	FUNCTION_106	ELSE_5	CALL_8
0x84b9	          0x4889c6	                            mov rsi, rax	      4432	channel.c	FUNCTION_106	ELSE_5	CALL_8
0x84bc	          0x4889d7	                            mov rdi, rdx	      4432	channel.c	FUNCTION_106	ELSE_5	CALL_8
0x84bf	      0xe800000000	                          call 0x4008504	      4432	channel.c	FUNCTION_106	ELSE_5	CALL_8
0x84c4	      0xb800000000	                              mov eax, 0	      4433	channel.c	FUNCTION_106	ELSE_5
0x84c9	            0xeb05	                           jmp 0x4008510	      4433	channel.c	FUNCTION_106	ELSE_5
0x84cb	      0xb801000000	                              mov eax, 1	      4435	channel.c	FUNCTION_106
0x84d0	              0xc9	                                   leave	      4436	channel.c	FUNCTION_106
0x84d1	              0xc3	                                     ret	      4436	channel.c	FUNCTION_106
channel_exe_cmd	functions,0:SWITCH,0:CALL,40:ELSE,8:IF,20:FOR,0:WHILE,0:DO,0	358
0x4074	              0x55	                                push rbp	      2196	channel.c	ELSE_6	FUNCTION_60
0x4075	          0x4889e5	                            mov rbp, rsp	      2196	channel.c	ELSE_6	FUNCTION_60
0x4078	    0x4881ec300100	                          sub rsp, 0x130	      2196	channel.c	ELSE_6	FUNCTION_60
0x407f	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      2196	channel.c	ELSE_6	FUNCTION_60
0x4086	    0x89b5e4feffff	            mov dword [rbp - 0x11c], esi	      2196	channel.c	ELSE_6	FUNCTION_60
0x408c	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      2196	channel.c	ELSE_6	FUNCTION_60
0x4093	    0x64488b042528	                mov rax, qword fs:[0x28]	      2196	channel.c	ELSE_6	FUNCTION_60
0x409c	        0x488945f8	                mov qword [rbp - 8], rax	      2196	channel.c	ELSE_6	FUNCTION_60
0x40a0	            0x31c0	                            xor eax, eax	      2196	channel.c	ELSE_6	FUNCTION_60
0x40a2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2197	channel.c	ELSE_6	FUNCTION_60
0x40a9	        0x488b4008	                mov rax, qword [rax + 8]	      2197	channel.c	ELSE_6	FUNCTION_60
0x40ad	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2197	channel.c	ELSE_6	FUNCTION_60
0x40b4	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      2199	channel.c	ELSE_6	FUNCTION_60
0x40bb	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      2199	channel.c	ELSE_6	FUNCTION_60
0x40c1	        0x48c1e004	                              shl rax, 4	      2199	channel.c	ELSE_6	FUNCTION_60
0x40c5	          0x4889c1	                            mov rcx, rax	      2199	channel.c	ELSE_6	FUNCTION_60
0x40c8	        0x48c1e104	                              shl rcx, 4	      2199	channel.c	ELSE_6	FUNCTION_60
0x40cc	          0x4801c8	                            add rax, rcx	      2199	channel.c	ELSE_6	FUNCTION_60
0x40cf	          0x4801d0	                            add rax, rdx	      2199	channel.c	ELSE_6	FUNCTION_60
0x40d2	        0x4883c020	                           add rax, 0x20	      2199	channel.c	ELSE_6	FUNCTION_60
0x40d6	            0x8b00	                    mov eax, dword [rax]	      2199	channel.c	ELSE_6	FUNCTION_60
0x40d8	          0x83f803	                              cmp eax, 3	      2199	channel.c	ELSE_6	FUNCTION_60
0x40db	           0xf94c0	                                 sete al	      2199	channel.c	ELSE_6	FUNCTION_60
0x40de	           0xfb6c0	                           movzx eax, al	      2199	channel.c	ELSE_6	FUNCTION_60
0x40e1	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2199	channel.c	ELSE_6	FUNCTION_60
0x40e7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2201	channel.c	ELSE_6	FUNCTION_60	IF_1
0x40ee	        0x4883c010	                           add rax, 0x10	      2201	channel.c	ELSE_6	FUNCTION_60	IF_1
0x40f2	            0x8b00	                    mov eax, dword [rax]	      2201	channel.c	ELSE_6	FUNCTION_60	IF_1
0x40f4	          0x83f802	                              cmp eax, 2	      2201	channel.c	ELSE_6	FUNCTION_60	IF_1
0x40f7	            0x7441	                            je 0x400417a	      2201	channel.c	ELSE_6	FUNCTION_60	IF_1
0x40f9	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2203	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_1
0x4100	      0xbe00000000	                              mov esi, 0	      2203	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_1
0x4105	          0x4889c7	                            mov rdi, rax	      2203	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_1
0x4108	      0xb800000000	                              mov eax, 0	      2203	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_1
0x410d	      0xe8cac1ffff	                       call sym.ch_error	      2203	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_1
0x4112	    0x488b05000000	            mov rax, qword [0x04004159] 	      2204	channel.c	ELSE_6	FUNCTION_60	IF_1	IF_2
0x4119	        0x4883f802	                              cmp rax, 2	      2204	channel.c	ELSE_6	FUNCTION_60	IF_1	IF_2
0x411d	     0xf8ed5050000	                           jle 0x4004738	      2204	channel.c	ELSE_6	FUNCTION_60	IF_1	IF_2
0x4123	      0xbf00000000	                              mov edi, 0	      2205	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_3
0x4128	      0xe800000000	                          call 0x400416d	      2205	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_3
0x412d	          0x4889c7	                            mov rdi, rax	      2205	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_3
0x4130	      0xe800000000	                          call 0x4004175	      2205	channel.c	ELSE_6	FUNCTION_60	IF_1	CALL_3
0x4135	      0xe9be050000	                           jmp 0x4004738	      2206	channel.c	ELSE_6	FUNCTION_60	IF_1
0x413a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2208	channel.c	ELSE_6	FUNCTION_60
0x4141	        0x4883c010	                           add rax, 0x10	      2208	channel.c	ELSE_6	FUNCTION_60
0x4145	        0x488b4008	                mov rax, qword [rax + 8]	      2208	channel.c	ELSE_6	FUNCTION_60
0x4149	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      2208	channel.c	ELSE_6	FUNCTION_60
0x4150	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      2209	channel.c	ELSE_6	FUNCTION_60	IF_3
0x4158	            0x750b	                           jne 0x40041a5	      2209	channel.c	ELSE_6	FUNCTION_60	IF_3
0x415a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2210	channel.c	ELSE_6	FUNCTION_60	IF_3
0x4165	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2212	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_4
0x416c	      0xbe00000000	                              mov esi, 0	      2212	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_4
0x4171	          0x4889c7	                            mov rdi, rax	      2212	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_4
0x4174	      0xe800000000	                          call 0x40041b9	      2212	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_4
0x4179	            0x85c0	                           test eax, eax	      2212	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_4
0x417b	     0xf85a4000000	                           jne 0x4004265	      2212	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_4
0x4181	    0x8b0500000000	            mov eax, dword [0x040041c7] 	      2214	channel.c	ELSE_6	FUNCTION_60	IF_4
0x4187	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      2214	channel.c	ELSE_6	FUNCTION_60	IF_4
0x418d	    0xc70500000000	               mov dword [0x040041d7], 0	      2216	channel.c	ELSE_6	FUNCTION_60	IF_4
0x4197	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2217	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_5
0x419e	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2217	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_5
0x41a5	      0xbe00000000	                              mov esi, 0	      2217	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_5
0x41aa	          0x4889c7	                            mov rdi, rax	      2217	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_5
0x41ad	      0xb800000000	                              mov eax, 0	      2217	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_5
0x41b2	      0xe800000000	                          call 0x40041f7	      2217	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_5
0x41b7	    0x8b0500000000	            mov eax, dword [0x040041fd] 	      2218	channel.c	ELSE_6	FUNCTION_60	IF_4
0x41bd	          0x83c001	                              add eax, 1	      2218	channel.c	ELSE_6	FUNCTION_60	IF_4
0x41c0	    0x890500000000	            mov dword [0x04004206], eax 	      2218	channel.c	ELSE_6	FUNCTION_60	IF_4
0x41c6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2219	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_6
0x41cd	          0x4889c7	                            mov rdi, rax	      2219	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_6
0x41d0	      0xe800000000	                          call 0x4004215	      2219	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_6
0x41d5	    0x8b0500000000	            mov eax, dword [0x0400421b] 	      2220	channel.c	ELSE_6	FUNCTION_60	IF_4
0x41db	          0x83e801	                              sub eax, 1	      2220	channel.c	ELSE_6	FUNCTION_60	IF_4
0x41de	    0x890500000000	            mov dword [0x04004224], eax 	      2220	channel.c	ELSE_6	FUNCTION_60	IF_4
0x41e4	    0x8b0500000000	            mov eax, dword [0x0400422a] 	      2221	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5
0x41ea	            0x85c0	                           test eax, eax	      2221	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5
0x41ec	            0x7426	                            je 0x4004254	      2221	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5
0x41ee	      0xbf03000000	                              mov edi, 3	      2223	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_8
0x41f3	      0xe800000000	                          call 0x4004238	      2223	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_8
0x41f8	          0x4889c2	                            mov rdx, rax	      2223	channel.c	ELSE_6	FUNCTION_60	IF_4	CALL_8
0x41fb	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2222	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5	CALL_7
0x4202	      0xbe00000000	                              mov esi, 0	      2222	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5	CALL_7
0x4207	          0x4889c7	                            mov rdi, rax	      2222	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5	CALL_7
0x420a	      0xb800000000	                              mov eax, 0	      2222	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5	CALL_7
0x420f	      0xe800000000	                          call 0x4004254	      2222	channel.c	ELSE_6	FUNCTION_60	IF_4	IF_5	CALL_7
0x4214	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      2224	channel.c	ELSE_6	FUNCTION_60	IF_4
0x421a	    0x890500000000	            mov dword [0x04004260], eax 	      2224	channel.c	ELSE_6	FUNCTION_60	IF_4
0x4220	      0xe9d4040000	                           jmp 0x4004739	      2224	channel.c	ELSE_6	FUNCTION_60	IF_4
0x4225	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2226	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_9
0x422c	      0xbe00000000	                              mov esi, 0	      2226	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_9
0x4231	          0x4889c7	                            mov rdi, rax	      2226	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_9
0x4234	      0xe800000000	                          call 0x4004279	      2226	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_9
0x4239	            0x85c0	                           test eax, eax	      2226	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_9
0x423b	            0x7556	                           jne 0x40042d3	      2226	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_9
0x423d	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2230	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_10
0x4244	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2230	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_10
0x424b	      0xbe00000000	                              mov esi, 0	      2230	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_10
0x4250	          0x4889c7	                            mov rdi, rax	      2230	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_10
0x4253	      0xb800000000	                              mov eax, 0	      2230	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_10
0x4258	      0xe800000000	                          call 0x400429d	      2230	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_10
0x425d	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2231	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6
0x4264	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2231	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6
0x426b	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2232	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6
0x4275	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      2233	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6
0x427f	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2234	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_11
0x4286	          0x4889c7	                            mov rdi, rax	      2234	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_11
0x4289	      0xe800000000	                          call 0x40042ce	      2234	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_11
0x428e	      0xe966040000	                           jmp 0x4004739	      2234	channel.c	ELSE_6	FUNCTION_60	ELSE_1	IF_6	CALL_11
0x4293	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2236	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_12
0x429a	      0xbe00000000	                              mov esi, 0	      2236	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_12
0x429f	          0x4889c7	                            mov rdi, rax	      2236	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_12
0x42a2	      0xe800000000	                          call 0x40042e7	      2236	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_12
0x42a7	            0x85c0	                           test eax, eax	      2236	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_12
0x42a9	            0x7563	                           jne 0x400434e	      2236	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_12
0x42ab	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2240	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_13
0x42b2	      0xbe00000000	                              mov esi, 0	      2240	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_13
0x42b7	          0x4889c7	                            mov rdi, rax	      2240	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_13
0x42ba	      0xb800000000	                              mov eax, 0	      2240	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_13
0x42bf	      0xe800000000	                          call 0x4004304	      2240	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_13
0x42c4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2241	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7
0x42cb	           0xfb600	                   movzx eax, byte [rax]	      2241	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7
0x42ce	            0x84c0	                             test al, al	      2241	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7
0x42d0	           0xf95c0	                                setne al	      2241	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7
0x42d3	           0xfb6c0	                           movzx eax, al	      2241	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7
0x42d6	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      2241	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7
0x42dc	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2242	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_14
0x42e3	          0x4889c7	                            mov rdi, rax	      2242	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_14
0x42e6	      0xe800000000	                          call 0x400432b	      2242	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_14
0x42eb	      0xbf00000000	                              mov edi, 0	      2243	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_15
0x42f0	      0xe800000000	                          call 0x4004335	      2243	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_15
0x42f5	      0xe800000000	                          call 0x400433a	      2244	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_16
0x42fa	      0xbe00000000	                              mov esi, 0	      2245	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_17
0x42ff	      0xbf01000000	                              mov edi, 1	      2245	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_17
0x4304	      0xe800000000	                          call 0x4004349	      2245	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_17
0x4309	      0xe9eb030000	                           jmp 0x4004739	      2245	channel.c	ELSE_6	FUNCTION_60	ELSE_2	IF_7	CALL_17
0x430e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x4315	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x431a	          0x4889c7	                            mov rdi, rax	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x431d	      0xe800000000	                          call 0x4004362	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x4322	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x4324	            0x741c	                            je 0x4004382	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x4326	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x432d	      0xbe00000000	                              mov esi, 0	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x4332	          0x4889c7	                            mov rdi, rax	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x4335	      0xe800000000	                          call 0x400437a	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x433a	            0x85c0	                           test eax, eax	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x433c	     0xf8568030000	                           jne 0x40046ea	      2247	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	CALL_19
0x4342	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2249	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4349	           0xfb600	                   movzx eax, byte [rax]	      2249	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x434c	            0x3c63	                            cmp al, 0x63	      2249	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x434e	           0xf94c0	                                 sete al	      2249	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4351	           0xfb6c0	                           movzx eax, al	      2249	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4354	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2249	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x435a	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2250	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4361	            0x7407	                            je 0x40043aa	      2250	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4363	      0xb803000000	                              mov eax, 3	      2250	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4368	            0xeb05	                           jmp 0x40043af	      2250	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x436a	      0xb802000000	                              mov eax, 2	      2250	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x436f	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2250	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4375	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x437b	            0x4898	                                    cdqe	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x437d	        0x48c1e004	                              shl rax, 4	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4381	          0x4889c2	                            mov rdx, rax	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4384	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x438b	          0x4801d0	                            add rax, rdx	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x438e	            0x8b00	                    mov eax, dword [rax]	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4390	            0x85c0	                           test eax, eax	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4392	            0x7461	                            je 0x4004435	      2252	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4394	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x439a	            0x4898	                                    cdqe	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x439c	        0x48c1e004	                              shl rax, 4	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x43a0	          0x4889c2	                            mov rdx, rax	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x43a3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x43aa	          0x4801d0	                            add rax, rdx	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x43ad	            0x8b00	                    mov eax, dword [rax]	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x43af	          0x83f801	                              cmp eax, 1	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x43b2	            0x7441	                            je 0x4004435	      2253	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9
0x43b4	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2255	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_20
0x43bb	      0xbe00000000	                              mov esi, 0	      2255	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_20
0x43c0	          0x4889c7	                            mov rdi, rax	      2255	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_20
0x43c3	      0xb800000000	                              mov eax, 0	      2255	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_20
0x43c8	      0xe80fbfffff	                       call sym.ch_error	      2255	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_20
0x43cd	    0x488b05000000	            mov rax, qword [0x04004414] 	      2256	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	IF_10
0x43d4	        0x4883f802	                              cmp rax, 2	      2256	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	IF_10
0x43d8	     0xf8eca020000	                           jle 0x40046e8	      2256	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	IF_10
0x43de	      0xbf00000000	                              mov edi, 0	      2257	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_22
0x43e3	      0xe800000000	                          call 0x4004428	      2257	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_22
0x43e8	          0x4889c7	                            mov rdi, rax	      2257	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_22
0x43eb	      0xe800000000	                          call 0x4004430	      2257	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	CALL_22
0x43f0	      0xe9b3020000	                           jmp 0x40046e8	      2256	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	IF_9	IF_10
0x43f5	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2259	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11
0x43fc	            0x7453	                            je 0x4004491	      2259	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11
0x43fe	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2259	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11
0x4405	        0x4883c020	                           add rax, 0x20	      2259	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11
0x4409	            0x8b00	                    mov eax, dword [rax]	      2259	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11
0x440b	          0x83f805	                              cmp eax, 5	      2259	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11
0x440e	            0x7441	                            je 0x4004491	      2259	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11
0x4410	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2261	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4417	      0xbe00000000	                              mov esi, 0	      2261	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x441c	          0x4889c7	                            mov rdi, rax	      2261	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x441f	      0xb800000000	                              mov eax, 0	      2261	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4424	      0xe8b3beffff	                       call sym.ch_error	      2261	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_23
0x4429	    0x488b05000000	            mov rax, qword [0x04004470] 	      2262	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4430	        0x4883f802	                              cmp rax, 2	      2262	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4434	     0xf8e6e020000	                           jle 0x40046e8	      2262	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x443a	      0xbf00000000	                              mov edi, 0	      2263	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x443f	      0xe800000000	                          call 0x4004484	      2263	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4444	          0x4889c7	                            mov rdi, rax	      2263	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x4447	      0xe800000000	                          call 0x400448c	      2263	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	CALL_25
0x444c	      0xe957020000	                           jmp 0x40046e8	      2262	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_4	IF_11	IF_12
0x4451	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      2267	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5
0x445c	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      2270	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5
0x4467	    0x8b0500000000	            mov eax, dword [0x040044ad] 	      2273	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5
0x446d	          0x83c001	                              add eax, 1	      2273	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5
0x4470	    0x890500000000	            mov dword [0x040044b6], eax 	      2273	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5
0x4476	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2274	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13
0x447d	            0x753d	                           jne 0x40044fc	      2274	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13
0x447f	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2276	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4486	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2276	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x448d	      0xbe00000000	                              mov esi, 0	      2276	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4492	          0x4889c7	                            mov rdi, rax	      2276	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x4495	      0xb800000000	                              mov eax, 0	      2276	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x449a	      0xe800000000	                          call 0x40044df	      2276	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_26
0x449f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2277	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x44a6	      0xbe00000000	                              mov esi, 0	      2277	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x44ab	          0x4889c7	                            mov rdi, rax	      2277	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x44ae	      0xe800000000	                          call 0x40044f3	      2277	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x44b3	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2277	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x44ba	            0xeb61	                           jmp 0x400455d	      2277	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_13	CALL_27
0x44bc	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2281	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	CALL_28
0x44c3	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2281	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	CALL_28
0x44ca	      0xbe00000000	                              mov esi, 0	      2281	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	CALL_28
0x44cf	          0x4889c7	                            mov rdi, rax	      2281	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	CALL_28
0x44d2	      0xb800000000	                              mov eax, 0	      2281	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	CALL_28
0x44d7	      0xe800000000	                          call 0x400451c	      2281	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	CALL_28
0x44dc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x44e3	        0x488d7020	                   lea rsi, [rax + 0x20]	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x44e7	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x44ee	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x44f5	          0x4989d0	                             mov r8, rdx	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x44f8	      0xb900000000	                              mov ecx, 0	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x44fd	      0xba00000000	                              mov edx, 0	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4502	          0x4889c7	                            mov rdi, rax	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x4505	      0xe800000000	                          call 0x400454a	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x450a	          0x83f801	                              cmp eax, 1	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x450d	            0x750e	                           jne 0x400455d	      2282	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14	CALL_29
0x450f	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2283	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14
0x4516	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2283	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	IF_14
0x451d	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4523	            0x4898	                                    cdqe	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4525	        0x48c1e004	                              shl rax, 4	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4529	          0x4889c2	                            mov rdx, rax	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x452c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4533	          0x4801d0	                            add rax, rdx	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4536	            0x8b00	                    mov eax, dword [rax]	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4538	          0x83f801	                              cmp eax, 1	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x453b	     0xf8526010000	                           jne 0x40046a7	      2286	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4541	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4547	            0x4898	                                    cdqe	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4549	        0x48c1e004	                              shl rax, 4	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x454d	          0x4889c2	                            mov rdx, rax	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4550	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4557	          0x4801d0	                            add rax, rdx	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x455a	        0x488b4008	                mov rax, qword [rax + 8]	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x455e	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      2288	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15
0x4564	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2290	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x456c	            0x7429	                            je 0x40045d7	      2290	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_16
0x456e	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4574	          0x83c804	                               or eax, 4	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4577	            0x89c2	                            mov edx, eax	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4579	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4580	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4586	          0x4889ce	                            mov rsi, rcx	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4589	            0x89c7	                            mov edi, eax	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x458b	      0xe800000000	                          call 0x40045d0	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4590	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2291	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	CALL_30
0x4597	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x459f	            0x7418	                            je 0x40045f9	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45a1	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45a9	            0x745b	                            je 0x4004646	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45ab	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45b2	           0xfb600	                   movzx eax, byte [rax]	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45b5	            0x84c0	                             test al, al	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45b7	            0x754d	                           jne 0x4004646	      2292	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45b9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2296	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x45c0	          0x4889c7	                            mov rdi, rax	      2296	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x45c3	      0xe800000000	                          call 0x4004608	      2296	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_31
0x45c8	    0xc78540ffffff	               mov dword [rbp - 0xc0], 2	      2297	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45d2	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      2298	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17
0x45dd	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45e3	          0x83c804	                               or eax, 4	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45e6	            0x89c2	                            mov edx, eax	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45e8	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45ef	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45f5	          0x4889ce	                            mov rsi, rcx	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45f8	            0x89c7	                            mov edi, eax	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45fa	      0xe800000000	                          call 0x400463f	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x45ff	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2299	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_17	CALL_32
0x4606	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2301	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x460e	            0x7457	                            je 0x40046a7	      2301	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18
0x4610	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2305	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x4617	          0x4889c7	                            mov rdi, rax	      2305	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x461a	      0xe800000000	                          call 0x400465f	      2305	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_34
0x461f	            0x89c7	                            mov edi, eax	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4621	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4628	            0x7507	                           jne 0x4004671	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x462a	      0xbe00000000	                              mov esi, 0	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x462f	            0xeb05	                           jmp 0x4004676	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4631	      0xbe03000000	                              mov esi, 3	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4636	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x463d	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4644	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x464b	          0x4989c8	                             mov r8, rcx	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x464e	            0x89f9	                            mov ecx, edi	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4650	          0x4889c7	                            mov rdi, rax	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4653	      0xe800000000	                          call 0x4004698	      2303	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_33
0x4658	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2306	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x465f	          0x4889c7	                            mov rdi, rax	      2306	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4662	      0xe800000000	                          call 0x40046a7	      2306	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_15	IF_18	CALL_35
0x4667	    0x8b0500000000	            mov eax, dword [0x040046ad] 	      2309	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6
0x466d	          0x83e801	                              sub eax, 1	      2309	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4670	    0x890500000000	            mov dword [0x040046b6], eax 	      2309	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6
0x4676	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2310	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x467d	    0x48398518ffff	            cmp qword [rbp - 0xe8], rax 	      2310	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x4684	            0x7511	                           jne 0x40046d7	      2310	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	IF_19
0x4686	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2311	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x468d	          0x4889c7	                            mov rdi, rax	      2311	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x4690	      0xe800000000	                          call 0x40046d5	      2311	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_36
0x4695	            0xeb62	                           jmp 0x4004739	      2248	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x4697	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2313	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x469e	          0x4889c7	                            mov rdi, rax	      2313	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x46a1	      0xe800000000	                          call 0x40046e6	      2313	channel.c	FUNCTION_60	ELSE_3	IF_8	ELSE_5	ELSE_6	CALL_37
0x46a6	            0xeb51	                           jmp 0x4004739	      2248	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x46a8	            0xeb4f	                           jmp 0x4004739	      2248	channel.c	ELSE_6	FUNCTION_60	ELSE_3	IF_8
0x46aa	    0x488b05000000	            mov rax, qword [0x040046f1] 	      2316	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20
0x46b1	        0x4883f802	                              cmp rax, 2	      2316	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20
0x46b5	            0x7e42	                           jle 0x4004739	      2316	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20
0x46b7	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2318	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_38
0x46be	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2318	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_38
0x46c5	      0xbe00000000	                              mov esi, 0	      2318	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_38
0x46ca	          0x4889c7	                            mov rdi, rax	      2318	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_38
0x46cd	      0xb800000000	                              mov eax, 0	      2318	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_38
0x46d2	      0xe805bcffff	                       call sym.ch_error	      2318	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_38
0x46d7	      0xbf00000000	                              mov edi, 0	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46dc	      0xe800000000	                          call 0x4004721	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46e1	          0x4889c2	                            mov rdx, rax	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46e4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46eb	          0x4889c6	                            mov rsi, rax	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46ee	          0x4889d7	                            mov rdi, rdx	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46f1	      0xe800000000	                          call 0x4004736	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46f6	            0xeb01	                           jmp 0x4004739	      2319	channel.c	FUNCTION_60	ELSE_6	ELSE_8	IF_20	CALL_40
0x46f8	              0x90	                                     nop	      2206	channel.c	ELSE_6	FUNCTION_60	IF_1
0x46f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2321	channel.c	FUNCTION_60	ELSE_6
0x46fd	    0x644833042528	                xor rax, qword fs:[0x28]	      2321	channel.c	FUNCTION_60	ELSE_6
0x4706	            0x7405	                            je 0x400474d	      2321	channel.c	FUNCTION_60	ELSE_6
0x4708	      0xe800000000	                          call 0x400474d	      2321	channel.c	FUNCTION_60	ELSE_6
0x470d	              0xc9	                                   leave	      2321	channel.c	FUNCTION_60	ELSE_6
0x470e	              0xc3	                                     ret	      2321	channel.c	FUNCTION_60	ELSE_6
channel_can_close	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	10
0x6bb	              0x55	                                push rbp	       352	channel.c	FUNCTION_13
0x6bc	          0x4889e5	                            mov rbp, rsp	       352	channel.c	FUNCTION_13
0x6bf	        0x48897df8	                mov qword [rbp - 8], rdi	       352	channel.c	FUNCTION_13
0x6c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       353	channel.c	FUNCTION_13
0x6c7	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	       353	channel.c	FUNCTION_13
0x6cd	            0x85c0	                           test eax, eax	       353	channel.c	FUNCTION_13
0x6cf	           0xf94c0	                                 sete al	       353	channel.c	FUNCTION_13
0x6d2	           0xfb6c0	                           movzx eax, al	       353	channel.c	FUNCTION_13
0x6d5	              0x5d	                                 pop rbp	       354	channel.c	FUNCTION_13
0x6d6	              0xc3	                                     ret	       354	channel.c	FUNCTION_13
channel_close_now	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	23
0x6562	              0x55	                                push rbp	      3277	channel.c	FUNCTION_81
0x6563	          0x4889e5	                            mov rbp, rsp	      3277	channel.c	FUNCTION_81
0x6566	        0x4883ec10	                           sub rsp, 0x10	      3277	channel.c	FUNCTION_81
0x656a	        0x48897df8	                mov qword [rbp - 8], rdi	      3277	channel.c	FUNCTION_81
0x656e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3278	channel.c	FUNCTION_81	CALL_1
0x6572	      0xbe00000000	                              mov esi, 0	      3278	channel.c	FUNCTION_81	CALL_1
0x6577	          0x4889c7	                            mov rdi, rax	      3278	channel.c	FUNCTION_81	CALL_1
0x657a	      0xb800000000	                              mov eax, 0	      3278	channel.c	FUNCTION_81	CALL_1
0x657f	      0xe800000000	                          call 0x40065c4	      3278	channel.c	FUNCTION_81	CALL_1
0x6584	        0x488b45f8	                mov rax, qword [rbp - 8]	      3279	channel.c	FUNCTION_81	IF_1
0x6588	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      3279	channel.c	FUNCTION_81	IF_1
0x658f	          0x4885c0	                           test rax, rax	      3279	channel.c	FUNCTION_81	IF_1
0x6592	            0x740d	                            je 0x40065e1	      3279	channel.c	FUNCTION_81	IF_1
0x6594	        0x488b45f8	                mov rax, qword [rbp - 8]	      3280	channel.c	FUNCTION_81	IF_1
0x6598	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      3280	channel.c	FUNCTION_81	IF_1
0x659f	            0xffd0	                                call rax	      3280	channel.c	FUNCTION_81	IF_1
0x65a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3281	channel.c	FUNCTION_81	CALL_2
0x65a5	      0xbe01000000	                              mov esi, 1	      3281	channel.c	FUNCTION_81	CALL_2
0x65aa	          0x4889c7	                            mov rdi, rax	      3281	channel.c	FUNCTION_81	CALL_2
0x65ad	      0xe800000000	                          call 0x40065f2	      3281	channel.c	FUNCTION_81	CALL_2
0x65b2	              0x90	                                     nop	      3282	channel.c	FUNCTION_81
0x65b3	              0xc9	                                   leave	      3282	channel.c	FUNCTION_81
0x65b4	              0xc3	                                     ret	      3282	channel.c	FUNCTION_81
channel_fd2channel	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,2:FOR,2:WHILE,0:DO,0	38
0x6e95	              0x55	                                push rbp	      3594	channel.c	FUNCTION_86
0x6e96	          0x4889e5	                            mov rbp, rsp	      3594	channel.c	FUNCTION_86
0x6e99	          0x897dec	             mov dword [rbp - 0x14], edi	      3594	channel.c	FUNCTION_86
0x6e9c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3594	channel.c	FUNCTION_86
0x6ea0	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	      3598	channel.c	FUNCTION_86	IF_1
0x6ea4	            0x7464	                            je 0x4006f4a	      3598	channel.c	FUNCTION_86	IF_1
0x6ea6	    0x488b05000000	            mov rax, qword [0x04006eed] 	      3599	channel.c	FUNCTION_86	IF_1	FOR_1
0x6ead	        0x488945f8	                mov qword [rbp - 8], rax	      3599	channel.c	FUNCTION_86	IF_1	FOR_1
0x6eb1	            0xeb50	                           jmp 0x4006f43	      3599	channel.c	FUNCTION_86	IF_1	FOR_1
0x6eb3	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3602	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2
0x6eba	            0xeb36	                           jmp 0x4006f32	      3602	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2
0x6ebc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ec0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ec3	        0x48c1e004	                              shl rax, 4	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ec7	          0x4889c1	                            mov rcx, rax	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6eca	        0x48c1e104	                              shl rcx, 4	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ece	          0x4801c8	                            add rax, rcx	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ed1	          0x4801d0	                            add rax, rdx	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ed4	        0x4883c018	                           add rax, 0x18	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ed8	            0x8b00	                    mov eax, dword [rax]	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6eda	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6edd	            0x750f	                           jne 0x4006f2e	      3603	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6edf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3605	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ee3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3605	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ee6	            0x8910	                    mov dword [rax], edx	      3605	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6ee8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3606	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6eec	            0xeb21	                           jmp 0x4006f4f	      3606	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2	IF_2
0x6eee	        0x8345f401	                add dword [rbp - 0xc], 1	      3602	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2
0x6ef2	        0x837df402	                cmp dword [rbp - 0xc], 2	      3602	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2
0x6ef6	            0x76c4	                           jbe 0x4006efc	      3602	channel.c	FUNCTION_86	IF_1	FOR_1	FOR_2
0x6ef8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3600	channel.c	FUNCTION_86	IF_1	FOR_1
0x6efc	          0x488b00	                    mov rax, qword [rax]	      3600	channel.c	FUNCTION_86	IF_1	FOR_1
0x6eff	        0x488945f8	                mov qword [rbp - 8], rax	      3600	channel.c	FUNCTION_86	IF_1	FOR_1
0x6f03	      0x48837df800	                  cmp qword [rbp - 8], 0	      3599	channel.c	FUNCTION_86	IF_1	FOR_1
0x6f08	            0x75a9	                           jne 0x4006ef3	      3599	channel.c	FUNCTION_86	IF_1	FOR_1
0x6f0a	      0xb800000000	                              mov eax, 0	      3609	channel.c	FUNCTION_86
0x6f0f	              0x5d	                                 pop rbp	      3610	channel.c	FUNCTION_86
0x6f10	              0xc3	                                     ret	      3610	channel.c	FUNCTION_86
channel_open_func	functions,0:SWITCH,0:CALL,16:ELSE,0:IF,6:FOR,0:WHILE,0:DO,0	131
0x16a5	              0x55	                                push rbp	       927	channel.c	FUNCTION_31
0x16a6	          0x4889e5	                            mov rbp, rsp	       927	channel.c	FUNCTION_31
0x16a9	    0x4881ecc00300	                          sub rsp, 0x3c0	       927	channel.c	FUNCTION_31
0x16b0	    0x4889bd48fcff	            mov qword [rbp - 0x3b8], rdi	       927	channel.c	FUNCTION_31
0x16b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	channel.c	FUNCTION_31
0x16c0	        0x488945f8	                mov qword [rbp - 8], rax	       927	channel.c	FUNCTION_31
0x16c4	            0x31c0	                            xor eax, eax	       927	channel.c	FUNCTION_31
0x16c6	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	       933	channel.c	FUNCTION_31
0x16d1	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       935	channel.c	FUNCTION_31	CALL_1
0x16d8	          0x4889c7	                            mov rdi, rax	       935	channel.c	FUNCTION_31	CALL_1
0x16db	      0xe800000000	                          call 0x4001720	       935	channel.c	FUNCTION_31	CALL_1
0x16e0	    0x48898570fcff	            mov qword [rbp - 0x390], rax	       935	channel.c	FUNCTION_31	CALL_1
0x16e7	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       936	channel.c	FUNCTION_31	IF_1
0x16ee	        0x4883c010	                           add rax, 0x10	       936	channel.c	FUNCTION_31	IF_1
0x16f2	            0x8b00	                    mov eax, dword [rax]	       936	channel.c	FUNCTION_31	IF_1
0x16f4	            0x85c0	                           test eax, eax	       936	channel.c	FUNCTION_31	IF_1
0x16f6	            0x7442	                            je 0x400177a	       936	channel.c	FUNCTION_31	IF_1
0x16f8	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       937	channel.c	FUNCTION_31	IF_1
0x16ff	        0x4883c010	                           add rax, 0x10	       937	channel.c	FUNCTION_31	IF_1
0x1703	            0x8b00	                    mov eax, dword [rax]	       937	channel.c	FUNCTION_31	IF_1
0x1705	          0x83f806	                              cmp eax, 6	       937	channel.c	FUNCTION_31	IF_1
0x1708	            0x7514	                           jne 0x400175e	       937	channel.c	FUNCTION_31	IF_1
0x170a	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       937	channel.c	FUNCTION_31	IF_1
0x1711	        0x4883c010	                           add rax, 0x10	       937	channel.c	FUNCTION_31	IF_1
0x1715	        0x488b4008	                mov rax, qword [rax + 8]	       937	channel.c	FUNCTION_31	IF_1
0x1719	          0x4885c0	                           test rax, rax	       937	channel.c	FUNCTION_31	IF_1
0x171c	            0x751c	                           jne 0x400177a	       937	channel.c	FUNCTION_31	IF_1
0x171e	      0xbf00000000	                              mov edi, 0	       939	channel.c	FUNCTION_31	IF_1	CALL_3
0x1723	      0xe800000000	                          call 0x4001768	       939	channel.c	FUNCTION_31	IF_1	CALL_3
0x1728	          0x4889c7	                            mov rdi, rax	       939	channel.c	FUNCTION_31	IF_1	CALL_3
0x172b	      0xe800000000	                          call 0x4001770	       939	channel.c	FUNCTION_31	IF_1	CALL_3
0x1730	      0xb800000000	                              mov eax, 0	       940	channel.c	FUNCTION_31	IF_1
0x1735	      0xe9b9010000	                           jmp 0x4001933	       940	channel.c	FUNCTION_31	IF_1
0x173a	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       944	channel.c	FUNCTION_31	CALL_4
0x1741	      0xbe3a000000	                           mov esi, 0x3a	       944	channel.c	FUNCTION_31	CALL_4
0x1746	          0x4889c7	                            mov rdi, rax	       944	channel.c	FUNCTION_31	CALL_4
0x1749	      0xe800000000	                          call 0x400178e	       944	channel.c	FUNCTION_31	CALL_4
0x174e	    0x48898578fcff	            mov qword [rbp - 0x388], rax	       944	channel.c	FUNCTION_31	CALL_4
0x1755	    0x4883bd78fcff	              cmp qword [rbp - 0x388], 0	       945	channel.c	FUNCTION_31	IF_2
0x175d	            0x7529	                           jne 0x40017c8	       945	channel.c	FUNCTION_31	IF_2
0x175f	      0xbf00000000	                              mov edi, 0	       947	channel.c	FUNCTION_31	IF_2	CALL_6
0x1764	      0xe800000000	                          call 0x40017a9	       947	channel.c	FUNCTION_31	IF_2	CALL_6
0x1769	          0x4889c2	                            mov rdx, rax	       947	channel.c	FUNCTION_31	IF_2	CALL_6
0x176c	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       947	channel.c	FUNCTION_31	IF_2	CALL_6
0x1773	          0x4889c6	                            mov rsi, rax	       947	channel.c	FUNCTION_31	IF_2	CALL_6
0x1776	          0x4889d7	                            mov rdi, rdx	       947	channel.c	FUNCTION_31	IF_2	CALL_6
0x1779	      0xe800000000	                          call 0x40017be	       947	channel.c	FUNCTION_31	IF_2	CALL_6
0x177e	      0xb800000000	                              mov eax, 0	       948	channel.c	FUNCTION_31	IF_2
0x1783	      0xe96b010000	                           jmp 0x4001933	       948	channel.c	FUNCTION_31	IF_2
0x1788	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       950	channel.c	FUNCTION_31
0x178f	        0x488d5001	                      lea rdx, [rax + 1]	       950	channel.c	FUNCTION_31
0x1793	    0x48899578fcff	            mov qword [rbp - 0x388], rdx	       950	channel.c	FUNCTION_31
0x179a	          0xc60000	                       mov byte [rax], 0	       950	channel.c	FUNCTION_31
0x179d	    0x488d8d60fcff	                  lea rcx, [rbp - 0x3a0]	       951	channel.c	FUNCTION_31	CALL_7
0x17a4	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       951	channel.c	FUNCTION_31	CALL_7
0x17ab	      0xba0a000000	                            mov edx, 0xa	       951	channel.c	FUNCTION_31	CALL_7
0x17b0	          0x4889ce	                            mov rsi, rcx	       951	channel.c	FUNCTION_31	CALL_7
0x17b3	          0x4889c7	                            mov rdi, rax	       951	channel.c	FUNCTION_31	CALL_7
0x17b6	      0xe800000000	                          call 0x40017fb	       951	channel.c	FUNCTION_31	CALL_7
0x17bb	    0x89855cfcffff	            mov dword [rbp - 0x3a4], eax	       951	channel.c	FUNCTION_31	CALL_7
0x17c1	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       952	channel.c	FUNCTION_31	IF_3
0x17c8	           0xfb600	                   movzx eax, byte [rax]	       952	channel.c	FUNCTION_31	IF_3
0x17cb	            0x84c0	                             test al, al	       952	channel.c	FUNCTION_31	IF_3
0x17cd	            0x7417	                            je 0x4001826	       952	channel.c	FUNCTION_31	IF_3
0x17cf	    0x83bd5cfcffff	              cmp dword [rbp - 0x3a4], 0	       952	channel.c	FUNCTION_31	IF_3
0x17d6	            0x7e0e	                           jle 0x4001826	       952	channel.c	FUNCTION_31	IF_3
0x17d8	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	       952	channel.c	FUNCTION_31	IF_3
0x17df	           0xfb600	                   movzx eax, byte [rax]	       952	channel.c	FUNCTION_31	IF_3
0x17e2	            0x84c0	                             test al, al	       952	channel.c	FUNCTION_31	IF_3
0x17e4	            0x7437	                            je 0x400185d	       952	channel.c	FUNCTION_31	IF_3
0x17e6	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       954	channel.c	FUNCTION_31	IF_3
0x17ed	        0x4883e801	                              sub rax, 1	       954	channel.c	FUNCTION_31	IF_3
0x17f1	          0xc6003a	                    mov byte [rax], 0x3a	       954	channel.c	FUNCTION_31	IF_3
0x17f4	      0xbf00000000	                              mov edi, 0	       955	channel.c	FUNCTION_31	IF_3	CALL_9
0x17f9	      0xe800000000	                          call 0x400183e	       955	channel.c	FUNCTION_31	IF_3	CALL_9
0x17fe	          0x4889c2	                            mov rdx, rax	       955	channel.c	FUNCTION_31	IF_3	CALL_9
0x1801	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       955	channel.c	FUNCTION_31	IF_3	CALL_9
0x1808	          0x4889c6	                            mov rsi, rax	       955	channel.c	FUNCTION_31	IF_3	CALL_9
0x180b	          0x4889d7	                            mov rdi, rdx	       955	channel.c	FUNCTION_31	IF_3	CALL_9
0x180e	      0xe800000000	                          call 0x4001853	       955	channel.c	FUNCTION_31	IF_3	CALL_9
0x1813	      0xb800000000	                              mov eax, 0	       956	channel.c	FUNCTION_31	IF_3
0x1818	      0xe9d6000000	                           jmp 0x4001933	       956	channel.c	FUNCTION_31	IF_3
0x181d	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       960	channel.c	FUNCTION_31	CALL_10
0x1824	          0x4889c7	                            mov rdi, rax	       960	channel.c	FUNCTION_31	CALL_10
0x1827	      0xe800000000	                          call 0x400186c	       960	channel.c	FUNCTION_31	CALL_10
0x182c	    0xc78588fcffff	              mov dword [rbp - 0x378], 2	       961	channel.c	FUNCTION_31
0x1836	    0xc78578feffff	         mov dword [rbp - 0x188], 0x7d0 	       962	channel.c	FUNCTION_31
0x1840	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x1847	        0x488d7810	                   lea rdi, [rax + 0x10]	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x184b	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x1852	      0xb900000000	                              mov ecx, 0	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x1857	      0xbaff0f0000	                          mov edx, 0xfff	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x185c	          0x4889c6	                            mov rsi, rax	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x185f	      0xe800000000	                          call 0x40018a4	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x1864	            0x85c0	                           test eax, eax	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x1866	            0x7474	                            je 0x400191c	       963	channel.c	FUNCTION_31	IF_4	CALL_11
0x1868	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	       966	channel.c	FUNCTION_31	IF_5
0x186e	            0x85c0	                           test eax, eax	       966	channel.c	FUNCTION_31	IF_5
0x1870	            0x7914	                           jns 0x40018c6	       966	channel.c	FUNCTION_31	IF_5
0x1872	      0xbf00000000	                              mov edi, 0	       968	channel.c	FUNCTION_31	IF_5	CALL_13
0x1877	      0xe800000000	                          call 0x40018bc	       968	channel.c	FUNCTION_31	IF_5	CALL_13
0x187c	          0x4889c7	                            mov rdi, rax	       968	channel.c	FUNCTION_31	IF_5	CALL_13
0x187f	      0xe800000000	                          call 0x40018c4	       968	channel.c	FUNCTION_31	IF_5	CALL_13
0x1884	            0xeb57	                           jmp 0x400191d	       969	channel.c	FUNCTION_31	IF_5
0x1886	    0x8b9574feffff	            mov edx, dword [rbp - 0x18c]	       972	channel.c	FUNCTION_31	CALL_14
0x188c	    0x8bb55cfcffff	            mov esi, dword [rbp - 0x3a4]	       972	channel.c	FUNCTION_31	CALL_14
0x1892	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       972	channel.c	FUNCTION_31	CALL_14
0x1899	      0xb900000000	                              mov ecx, 0	       972	channel.c	FUNCTION_31	CALL_14
0x189e	          0x4889c7	                            mov rdi, rax	       972	channel.c	FUNCTION_31	CALL_14
0x18a1	      0xe800000000	                          call 0x40018e6	       972	channel.c	FUNCTION_31	CALL_14
0x18a6	    0x48898568fcff	            mov qword [rbp - 0x398], rax	       972	channel.c	FUNCTION_31	CALL_14
0x18ad	    0x4883bd68fcff	              cmp qword [rbp - 0x398], 0	       973	channel.c	FUNCTION_31	IF_6
0x18b5	            0x7426	                            je 0x400191d	       973	channel.c	FUNCTION_31	IF_6
0x18b7	    0xc78580fcffff	     mov dword [rbp - 0x380], 0x7fffffff	       975	channel.c	FUNCTION_31	IF_6
0x18c1	    0x488d9580fcff	                  lea rdx, [rbp - 0x380]	       976	channel.c	FUNCTION_31	IF_6	CALL_15
0x18c8	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	       976	channel.c	FUNCTION_31	IF_6	CALL_15
0x18cf	          0x4889d6	                            mov rsi, rdx	       976	channel.c	FUNCTION_31	IF_6	CALL_15
0x18d2	          0x4889c7	                            mov rdi, rax	       976	channel.c	FUNCTION_31	IF_6	CALL_15
0x18d5	      0xe800000000	                          call 0x400191a	       976	channel.c	FUNCTION_31	IF_6	CALL_15
0x18da	            0xeb01	                           jmp 0x400191d	       976	channel.c	FUNCTION_31	IF_6	CALL_15
0x18dc	              0x90	                                     nop	       965	channel.c	FUNCTION_31	IF_4
0x18dd	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       979	channel.c	FUNCTION_31	CALL_16
0x18e4	          0x4889c7	                            mov rdi, rax	       979	channel.c	FUNCTION_31	CALL_16
0x18e7	      0xe800000000	                          call 0x400192c	       979	channel.c	FUNCTION_31	CALL_16
0x18ec	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	       980	channel.c	FUNCTION_31
0x18f3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       981	channel.c	FUNCTION_31
0x18f7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       981	channel.c	FUNCTION_31
0x1900	            0x7405	                            je 0x4001947	       981	channel.c	FUNCTION_31
0x1902	      0xe800000000	                          call 0x4001947	       981	channel.c	FUNCTION_31
0x1907	              0xc9	                                   leave	       981	channel.c	FUNCTION_31
0x1908	              0xc3	                                     ret	       981	channel.c	FUNCTION_31
channel_peek	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	18
0x2e3e	              0x55	                                push rbp	      1612	channel.c	FUNCTION_47
0x2e3f	          0x4889e5	                            mov rbp, rsp	      1612	channel.c	FUNCTION_47
0x2e42	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1612	channel.c	FUNCTION_47
0x2e46	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1612	channel.c	FUNCTION_47
0x2e49	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1613	channel.c	FUNCTION_47
0x2e4c	        0x48c1e004	                              shl rax, 4	      1613	channel.c	FUNCTION_47
0x2e50	          0x4889c2	                            mov rdx, rax	      1613	channel.c	FUNCTION_47
0x2e53	        0x48c1e204	                              shl rdx, 4	      1613	channel.c	FUNCTION_47
0x2e57	          0x4801d0	                            add rax, rdx	      1613	channel.c	FUNCTION_47
0x2e5a	        0x488d5020	                   lea rdx, [rax + 0x20]	      1613	channel.c	FUNCTION_47
0x2e5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1613	channel.c	FUNCTION_47
0x2e62	          0x4801d0	                            add rax, rdx	      1613	channel.c	FUNCTION_47
0x2e65	        0x4883c010	                           add rax, 0x10	      1613	channel.c	FUNCTION_47
0x2e69	        0x488945f8	                mov qword [rbp - 8], rax	      1613	channel.c	FUNCTION_47
0x2e6d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1615	channel.c	FUNCTION_47
0x2e71	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1615	channel.c	FUNCTION_47
0x2e75	              0x5d	                                 pop rbp	      1616	channel.c	FUNCTION_47
0x2e76	              0xc3	                                     ret	      1616	channel.c	FUNCTION_47
channel_free_channel	functions,0:SWITCH,0:CALL,1:ELSE,1:IF,2:FOR,0:WHILE,0:DO,0	32
0x719	              0x55	                                push rbp	       369	channel.c	FUNCTION_15
0x71a	          0x4889e5	                            mov rbp, rsp	       369	channel.c	FUNCTION_15
0x71d	        0x4883ec10	                           sub rsp, 0x10	       369	channel.c	FUNCTION_15
0x721	        0x48897df8	                mov qword [rbp - 8], rdi	       369	channel.c	FUNCTION_15
0x725	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	channel.c	FUNCTION_15	IF_1
0x729	          0x488b00	                    mov rax, qword [rax]	       370	channel.c	FUNCTION_15	IF_1
0x72c	          0x4885c0	                           test rax, rax	       370	channel.c	FUNCTION_15	IF_1
0x72f	            0x7413	                            je 0x4000784	       370	channel.c	FUNCTION_15	IF_1
0x731	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	channel.c	FUNCTION_15	IF_1
0x735	          0x488b00	                    mov rax, qword [rax]	       371	channel.c	FUNCTION_15	IF_1
0x738	        0x488b55f8	                mov rdx, qword [rbp - 8]	       371	channel.c	FUNCTION_15	IF_1
0x73c	        0x488b5208	                mov rdx, qword [rdx + 8]	       371	channel.c	FUNCTION_15	IF_1
0x740	        0x48895008	                mov qword [rax + 8], rdx	       371	channel.c	FUNCTION_15	IF_1
0x744	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	channel.c	FUNCTION_15	IF_2
0x748	        0x488b4008	                mov rax, qword [rax + 8]	       372	channel.c	FUNCTION_15	IF_2
0x74c	          0x4885c0	                           test rax, rax	       372	channel.c	FUNCTION_15	IF_2
0x74f	            0x7510	                           jne 0x40007a1	       372	channel.c	FUNCTION_15	IF_2
0x751	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	channel.c	FUNCTION_15	IF_2
0x755	          0x488b00	                    mov rax, qword [rax]	       373	channel.c	FUNCTION_15	IF_2
0x758	    0x488905000000	            mov qword [0x0400079f], rax 	       373	channel.c	FUNCTION_15	IF_2
0x75f	            0xeb12	                           jmp 0x40007b3	       373	channel.c	FUNCTION_15	IF_2
0x761	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	channel.c	FUNCTION_15	ELSE_1
0x765	        0x488b4008	                mov rax, qword [rax + 8]	       375	channel.c	FUNCTION_15	ELSE_1
0x769	        0x488b55f8	                mov rdx, qword [rbp - 8]	       375	channel.c	FUNCTION_15	ELSE_1
0x76d	          0x488b12	                    mov rdx, qword [rdx]	       375	channel.c	FUNCTION_15	ELSE_1
0x770	          0x488910	                    mov qword [rax], rdx	       375	channel.c	FUNCTION_15	ELSE_1
0x773	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	channel.c	FUNCTION_15	CALL_1
0x777	          0x4889c7	                            mov rdi, rax	       376	channel.c	FUNCTION_15	CALL_1
0x77a	      0xe800000000	                          call 0x40007bf	       376	channel.c	FUNCTION_15	CALL_1
0x77f	              0x90	                                     nop	       377	channel.c	FUNCTION_15
0x780	              0xc9	                                   leave	       377	channel.c	FUNCTION_15
0x781	              0xc3	                                     ret	       377	channel.c	FUNCTION_15
channel_parse_json	functions,0:SWITCH,0:CALL,22:ELSE,10:IF,14:FOR,0:WHILE,0:DO,0	285
0x379b	              0x55	                                push rbp	      1906	channel.c	FUNCTION_55
0x379c	          0x4889e5	                            mov rbp, rsp	      1906	channel.c	FUNCTION_55
0x379f	    0x4881eca00000	                           sub rsp, 0xa0	      1906	channel.c	FUNCTION_55
0x37a6	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1906	channel.c	FUNCTION_55
0x37ad	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      1906	channel.c	FUNCTION_55
0x37b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	channel.c	FUNCTION_55
0x37bc	        0x488945f8	                mov qword [rbp - 8], rax	      1906	channel.c	FUNCTION_55
0x37c0	            0x31c0	                            xor eax, eax	      1906	channel.c	FUNCTION_55
0x37c2	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1910	channel.c	FUNCTION_55
0x37c8	        0x48c1e004	                              shl rax, 4	      1910	channel.c	FUNCTION_55
0x37cc	          0x4889c2	                            mov rdx, rax	      1910	channel.c	FUNCTION_55
0x37cf	        0x48c1e204	                              shl rdx, 4	      1910	channel.c	FUNCTION_55
0x37d3	          0x4801d0	                            add rax, rdx	      1910	channel.c	FUNCTION_55
0x37d6	        0x488d5010	                   lea rdx, [rax + 0x10]	      1910	channel.c	FUNCTION_55
0x37da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1910	channel.c	FUNCTION_55
0x37e1	          0x4801d0	                            add rax, rdx	      1910	channel.c	FUNCTION_55
0x37e4	        0x4883c008	                              add rax, 8	      1910	channel.c	FUNCTION_55
0x37e8	        0x48894580	             mov qword [rbp - 0x80], rax	      1910	channel.c	FUNCTION_55
0x37ec	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1911	channel.c	FUNCTION_55
0x37f0	        0x4883c038	                           add rax, 0x38	      1911	channel.c	FUNCTION_55
0x37f4	        0x48894588	             mov qword [rbp - 0x78], rax	      1911	channel.c	FUNCTION_55
0x37f8	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1915	channel.c	FUNCTION_55	IF_1	CALL_1
0x37fe	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1915	channel.c	FUNCTION_55	IF_1	CALL_1
0x3805	            0x89d6	                            mov esi, edx	      1915	channel.c	FUNCTION_55	IF_1	CALL_1
0x3807	          0x4889c7	                            mov rdi, rax	      1915	channel.c	FUNCTION_55	IF_1	CALL_1
0x380a	      0xe800000000	                          call 0x400384f	      1915	channel.c	FUNCTION_55	IF_1	CALL_1
0x380f	          0x4885c0	                           test rax, rax	      1915	channel.c	FUNCTION_55	IF_1	CALL_1
0x3812	            0x750a	                           jne 0x400385e	      1915	channel.c	FUNCTION_55	IF_1	CALL_1
0x3814	      0xb800000000	                              mov eax, 0	      1916	channel.c	FUNCTION_55	IF_1
0x3819	      0xe929040000	                           jmp 0x4003c87	      1916	channel.c	FUNCTION_55	IF_1
0x381e	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1918	channel.c	FUNCTION_55	CALL_2
0x3824	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1918	channel.c	FUNCTION_55	CALL_2
0x382b	            0x89d6	                            mov esi, edx	      1918	channel.c	FUNCTION_55	CALL_2
0x382d	          0x4889c7	                            mov rdi, rax	      1918	channel.c	FUNCTION_55	CALL_2
0x3830	      0xe800000000	                          call 0x4003875	      1918	channel.c	FUNCTION_55	CALL_2
0x3835	        0x488945c0	             mov qword [rbp - 0x40], rax	      1918	channel.c	FUNCTION_55	CALL_2
0x3839	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1919	channel.c	FUNCTION_55
0x3840	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1920	channel.c	FUNCTION_55
0x3848	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1921	channel.c	FUNCTION_55
0x384f	        0x488945e0	             mov qword [rbp - 0x20], rax	      1921	channel.c	FUNCTION_55
0x3853	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1922	channel.c	FUNCTION_55
0x3859	          0x8945e8	             mov dword [rbp - 0x18], eax	      1922	channel.c	FUNCTION_55
0x385c	    0x8b0500000000	            mov eax, dword [0x040038a2] 	      1928	channel.c	FUNCTION_55
0x3862	          0x83c001	                              add eax, 1	      1928	channel.c	FUNCTION_55
0x3865	    0x890500000000	            mov dword [0x040038ab], eax 	      1928	channel.c	FUNCTION_55
0x386b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1930	channel.c	FUNCTION_55
0x386f	          0x8b4008	                mov eax, dword [rax + 8]	      1930	channel.c	FUNCTION_55
0x3872	          0x83f803	                              cmp eax, 3	      1929	channel.c	FUNCTION_55	CALL_3
0x3875	           0xf94c0	                                 sete al	      1929	channel.c	FUNCTION_55	CALL_3
0x3878	           0xfb6d0	                           movzx edx, al	      1929	channel.c	FUNCTION_55	CALL_3
0x387b	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      1929	channel.c	FUNCTION_55	CALL_3
0x387f	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1929	channel.c	FUNCTION_55	CALL_3
0x3883	          0x4889ce	                            mov rsi, rcx	      1929	channel.c	FUNCTION_55	CALL_3
0x3886	          0x4889c7	                            mov rdi, rax	      1929	channel.c	FUNCTION_55	CALL_3
0x3889	      0xe800000000	                          call 0x40038ce	      1929	channel.c	FUNCTION_55	CALL_3
0x388e	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1929	channel.c	FUNCTION_55	CALL_3
0x3894	    0x8b0500000000	            mov eax, dword [0x040038da] 	      1931	channel.c	FUNCTION_55
0x389a	          0x83e801	                              sub eax, 1	      1931	channel.c	FUNCTION_55
0x389d	    0x890500000000	            mov dword [0x040038e3], eax 	      1931	channel.c	FUNCTION_55
0x38a3	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 1	      1932	channel.c	FUNCTION_55	IF_2
0x38aa	     0xf8537010000	                           jne 0x4003a27	      1932	channel.c	FUNCTION_55	IF_2
0x38b0	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1936	channel.c	FUNCTION_55	IF_2	IF_3
0x38b3	          0x83f805	                              cmp eax, 5	      1936	channel.c	FUNCTION_55	IF_2	IF_3
0x38b6	            0x750c	                           jne 0x4003904	      1936	channel.c	FUNCTION_55	IF_2	IF_3
0x38b8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1936	channel.c	FUNCTION_55	IF_2	IF_3
0x38bc	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1936	channel.c	FUNCTION_55	IF_2	IF_3
0x38bf	          0x83f801	                              cmp eax, 1	      1936	channel.c	FUNCTION_55	IF_2	IF_3
0x38c2	            0x7f54	                            jg 0x4003958	      1936	channel.c	FUNCTION_55	IF_2	IF_3
0x38c4	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1938	channel.c	FUNCTION_55	IF_2	IF_3	IF_4
0x38c7	          0x83f805	                              cmp eax, 5	      1938	channel.c	FUNCTION_55	IF_2	IF_3	IF_4
0x38ca	            0x741b	                            je 0x4003927	      1938	channel.c	FUNCTION_55	IF_2	IF_3	IF_4
0x38cc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1939	channel.c	FUNCTION_55	IF_2	IF_3	CALL_4
0x38d3	      0xbe00000000	                              mov esi, 0	      1939	channel.c	FUNCTION_55	IF_2	IF_3	CALL_4
0x38d8	          0x4889c7	                            mov rdi, rax	      1939	channel.c	FUNCTION_55	IF_2	IF_3	CALL_4
0x38db	      0xb800000000	                              mov eax, 0	      1939	channel.c	FUNCTION_55	IF_2	IF_3	CALL_4
0x38e0	      0xe8f7c9ffff	                       call sym.ch_error	      1939	channel.c	FUNCTION_55	IF_2	IF_3	CALL_4
0x38e5	            0xeb20	                           jmp 0x4003947	      1939	channel.c	FUNCTION_55	IF_2	IF_3	CALL_4
0x38e7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1942	channel.c	FUNCTION_55	IF_2	IF_3	ELSE_1
0x38eb	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1941	channel.c	FUNCTION_55	IF_2	IF_3	ELSE_1	CALL_5
0x38ee	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	channel.c	FUNCTION_55	IF_2	IF_3	ELSE_1	CALL_5
0x38f5	      0xbe00000000	                              mov esi, 0	      1941	channel.c	FUNCTION_55	IF_2	IF_3	ELSE_1	CALL_5
0x38fa	          0x4889c7	                            mov rdi, rax	      1941	channel.c	FUNCTION_55	IF_2	IF_3	ELSE_1	CALL_5
0x38fd	      0xb800000000	                              mov eax, 0	      1941	channel.c	FUNCTION_55	IF_2	IF_3	ELSE_1	CALL_5
0x3902	      0xe8d5c9ffff	                       call sym.ch_error	      1941	channel.c	FUNCTION_55	IF_2	IF_3	ELSE_1	CALL_5
0x3907	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1943	channel.c	FUNCTION_55	IF_2	IF_3	CALL_6
0x390b	          0x4889c7	                            mov rdi, rax	      1943	channel.c	FUNCTION_55	IF_2	IF_3	CALL_6
0x390e	      0xe800000000	                          call 0x4003953	      1943	channel.c	FUNCTION_55	IF_2	IF_3	CALL_6
0x3913	      0xe9cf000000	                           jmp 0x4003a27	      1943	channel.c	FUNCTION_55	IF_2	IF_3	CALL_6
0x3918	      0xbf20000000	                           mov edi, 0x20	      1947	channel.c	FUNCTION_55	IF_2	ELSE_2	CALL_7
0x391d	      0xe800000000	                          call 0x4003962	      1947	channel.c	FUNCTION_55	IF_2	ELSE_2	CALL_7
0x3922	        0x48894590	             mov qword [rbp - 0x70], rax	      1947	channel.c	FUNCTION_55	IF_2	ELSE_2	CALL_7
0x3926	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      1948	channel.c	FUNCTION_55	IF_2	ELSE_2	IF_5
0x392b	            0x7511	                           jne 0x400397e	      1948	channel.c	FUNCTION_55	IF_2	ELSE_2	IF_5
0x392d	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1949	channel.c	FUNCTION_55	IF_2	ELSE_2	CALL_8
0x3931	          0x4889c7	                            mov rdi, rax	      1949	channel.c	FUNCTION_55	IF_2	ELSE_2	CALL_8
0x3934	      0xe800000000	                          call 0x4003979	      1949	channel.c	FUNCTION_55	IF_2	ELSE_2	CALL_8
0x3939	      0xe9a9000000	                           jmp 0x4003a27	      1949	channel.c	FUNCTION_55	IF_2	ELSE_2	CALL_8
0x393e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1952	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3
0x3942	    0xc74018000000	               mov dword [rax + 0x18], 0	      1952	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3
0x3949	      0xe800000000	                          call 0x400398e	      1953	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	CALL_9
0x394e	          0x4889c2	                            mov rdx, rax	      1953	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	CALL_9
0x3951	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1953	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	CALL_9
0x3955	          0x488910	                    mov qword [rax], rdx	      1953	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	CALL_9
0x3958	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1954	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6
0x395c	          0x488b00	                    mov rax, qword [rax]	      1954	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6
0x395f	          0x4885c0	                           test rax, rax	      1954	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6
0x3962	            0x751a	                           jne 0x40039be	      1954	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6
0x3964	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1956	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x3968	          0x4889c7	                            mov rdi, rax	      1956	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x396b	      0xe800000000	                          call 0x40039b0	      1956	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x3970	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1957	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x3974	          0x4889c7	                            mov rdi, rax	      1957	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x3977	      0xe800000000	                          call 0x40039bc	      1957	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x397c	            0xeb69	                           jmp 0x4003a27	      1957	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	IF_6	CALL_11
0x397e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1961	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x3982	          0x488b08	                    mov rcx, qword [rax]	      1961	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x3985	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1961	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x3989	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1961	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x398d	          0x488901	                    mov qword [rcx], rax	      1961	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x3990	        0x48895108	                mov qword [rcx + 8], rdx	      1961	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x3994	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1962	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x3998	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1962	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x399c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1962	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x39a0	        0x48895010	             mov qword [rax + 0x10], rdx	      1962	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x39a4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1963	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x39a8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1963	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x39ac	        0x48895010	             mov qword [rax + 0x10], rdx	      1963	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x39b0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1964	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x39b4	    0x48c740080000	                  mov qword [rax + 8], 0	      1964	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4
0x39bc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1965	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1965	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39c4	          0x4885c0	                           test rax, rax	      1965	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39c7	            0x750e	                           jne 0x4003a17	      1965	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39c9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1966	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39cd	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1966	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39d1	        0x48895008	                mov qword [rax + 8], rdx	      1966	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39d5	            0xeb10	                           jmp 0x4003a27	      1966	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	IF_7
0x39d7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1968	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x39db	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1968	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x39df	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1968	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x39e3	        0x48895008	                mov qword [rax + 8], rdx	      1968	channel.c	FUNCTION_55	IF_2	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x39e7	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 1	      1974	channel.c	FUNCTION_55	IF_8
0x39ee	            0x7511	                           jne 0x4003a41	      1974	channel.c	FUNCTION_55	IF_8
0x39f0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1975	channel.c	FUNCTION_55	IF_8
0x39f4	    0x48c740600000	               mov qword [rax + 0x60], 0	      1975	channel.c	FUNCTION_55	IF_8
0x39fc	      0xe981010000	                           jmp 0x4003bc2	      1975	channel.c	FUNCTION_55	IF_8
0x3a01	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 2	      1976	channel.c	FUNCTION_55	ELSE_6	IF_9
0x3a08	     0xf8574010000	                           jne 0x4003bc2	      1976	channel.c	FUNCTION_55	ELSE_6	IF_9
0x3a0e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1978	channel.c	FUNCTION_55	ELSE_6	IF_9	CALL_12
0x3a12	          0x4889c7	                            mov rdi, rax	      1978	channel.c	FUNCTION_55	ELSE_6	IF_9	CALL_12
0x3a15	      0xe800000000	                          call 0x4003a5a	      1978	channel.c	FUNCTION_55	ELSE_6	IF_9	CALL_12
0x3a1a	        0x48894598	             mov qword [rbp - 0x68], rax	      1978	channel.c	FUNCTION_55	ELSE_6	IF_9	CALL_12
0x3a1e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1980	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a22	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1980	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a26	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1980	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a2a	     0xf83a2000000	                           jae 0x4003b12	      1980	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a30	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1984	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_13
0x3a34	            0x89c2	                            mov edx, eax	      1984	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_13
0x3a36	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1984	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_13
0x3a3d	      0xbe00000000	                              mov esi, 0	      1984	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_13
0x3a42	          0x4889c7	                            mov rdi, rax	      1984	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_13
0x3a45	      0xb800000000	                              mov eax, 0	      1984	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_13
0x3a4a	      0xe800000000	                          call 0x4003a8f	      1984	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_13
0x3a4f	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1987	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a56	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1988	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a5a	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1988	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a5e	        0x48895060	             mov qword [rax + 0x60], rdx	      1988	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a62	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1992	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_15
0x3a66	        0x4883c068	                           add rax, 0x68	      1992	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_15
0x3a6a	      0xbe00000000	                              mov esi, 0	      1992	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_15
0x3a6f	          0x4889c7	                            mov rdi, rax	      1992	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_15
0x3a72	      0xe800000000	                          call 0x4003ab7	      1992	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	CALL_15
0x3a77	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1993	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a7b	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1993	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a7f	    0x488d90a08601	                lea rdx, [rax + 0x186a0]	      1993	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a86	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1993	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a8a	        0x48895070	             mov qword [rax + 0x70], rdx	      1993	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10
0x3a8e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1994	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3a92	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1994	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3a96	    0x483d40420f00	                        cmp rax, 0xf4240	      1994	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3a9c	     0xf8ee0000000	                           jle 0x4003bc2	      1994	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3aa2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1996	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3aa6	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1996	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3aaa	    0x488d90c0bdf0	                lea rdx, [rax - 0xf4240]	      1996	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3ab1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1996	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3ab5	        0x48895070	             mov qword [rax + 0x70], rdx	      1996	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3ab9	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1997	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3abd	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1997	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3ac1	        0x488d5001	                      lea rdx, [rax + 1]	      1997	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3ac5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1997	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3ac9	        0x48895068	             mov qword [rax + 0x68], rdx	      1997	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3acd	      0xe9b0000000	                           jmp 0x4003bc2	      1997	channel.c	FUNCTION_55	ELSE_6	IF_9	IF_10	IF_11
0x3ad2	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2010	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	CALL_17
0x3ad6	      0xbe00000000	                              mov esi, 0	      2010	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	CALL_17
0x3adb	          0x4889c7	                            mov rdi, rax	      2010	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	CALL_17
0x3ade	      0xe800000000	                          call 0x4003b23	      2010	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	CALL_17
0x3ae3	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2011	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3ae7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2011	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3aeb	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2011	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3aef	          0x4839c2	                            cmp rdx, rax	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3af2	            0x7f22	                            jg 0x4003b56	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3af4	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3af8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3afc	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b00	          0x4839c2	                            cmp rdx, rax	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b03	            0x7518	                           jne 0x4003b5d	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b05	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2013	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b09	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2013	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b0d	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2013	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b11	          0x4839c2	                            cmp rdx, rax	      2013	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b14	            0x7e07	                           jle 0x4003b5d	      2013	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b16	      0xb801000000	                              mov eax, 1	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b1b	            0xeb05	                           jmp 0x4003b62	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b1d	      0xb800000000	                              mov eax, 0	      2012	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b22	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2011	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7
0x3b28	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      2016	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12
0x3b2f	            0x7431	                            je 0x4003ba2	      2016	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12
0x3b31	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      2018	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12
0x3b3b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2019	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12
0x3b3f	    0x48c740600000	               mov qword [rax + 0x60], 0	      2019	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12
0x3b47	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2020	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x3b4e	      0xbe00000000	                              mov esi, 0	      2020	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x3b53	          0x4889c7	                            mov rdi, rax	      2020	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x3b56	      0xb800000000	                              mov eax, 0	      2020	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x3b5b	      0xe800000000	                          call 0x4003ba0	      2020	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x3b60	            0xeb20	                           jmp 0x4003bc2	      2020	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	IF_12	CALL_18
0x3b62	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2024	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	ELSE_8
0x3b69	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2025	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x3b70	      0xbe00000000	                              mov esi, 0	      2025	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x3b75	          0x4889c7	                            mov rdi, rax	      2025	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x3b78	      0xb800000000	                              mov eax, 0	      2025	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x3b7d	      0xe800000000	                          call 0x4003bc2	      2025	channel.c	FUNCTION_55	ELSE_6	IF_9	ELSE_7	ELSE_8	CALL_19
0x3b82	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2030	channel.c	FUNCTION_55	IF_13
0x3b89	            0x7531	                           jne 0x4003bfc	      2030	channel.c	FUNCTION_55	IF_13
0x3b8b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2032	channel.c	FUNCTION_55	IF_13	CALL_20
0x3b92	      0xbe00000000	                              mov esi, 0	      2032	channel.c	FUNCTION_55	IF_13	CALL_20
0x3b97	          0x4889c7	                            mov rdi, rax	      2032	channel.c	FUNCTION_55	IF_13	CALL_20
0x3b9a	      0xb800000000	                              mov eax, 0	      2032	channel.c	FUNCTION_55	IF_13	CALL_20
0x3b9f	      0xe838c7ffff	                       call sym.ch_error	      2032	channel.c	FUNCTION_55	IF_13	CALL_20
0x3ba4	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2033	channel.c	FUNCTION_55	IF_13
0x3bae	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2034	channel.c	FUNCTION_55	IF_13
0x3bb2	    0x48c740600000	               mov qword [rax + 0x60], 0	      2034	channel.c	FUNCTION_55	IF_13
0x3bba	            0xeb79	                           jmp 0x4003c75	      2034	channel.c	FUNCTION_55	IF_13
0x3bbc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2036	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bc0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2036	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bc3	            0x4898	                                    cdqe	      2036	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bc5	          0x4801d0	                            add rax, rdx	      2036	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bc8	           0xfb600	                   movzx eax, byte [rax]	      2036	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bcb	            0x84c0	                             test al, al	      2036	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bcd	            0x745c	                            je 0x4003c6b	      2036	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bcf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2040	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bd3	          0x4889c2	                            mov rdx, rax	      2040	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bd6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2040	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bda	          0x4829c2	                            sub rdx, rax	      2040	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3bdd	          0x4889d0	                            mov rax, rdx	      2040	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3be0	            0x89c2	                            mov edx, eax	      2040	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3be2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2040	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3be5	            0x89d1	                            mov ecx, edx	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3be7	            0x29c1	                            sub ecx, eax	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3be9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3bed	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3bf0	            0x4898	                                    cdqe	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3bf2	          0x4801c2	                            add rdx, rax	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3bf5	    0x8bb564ffffff	             mov esi, dword [rbp - 0x9c]	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3bfb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3c02	    0x41b900000000	                              mov r9d, 0	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3c08	    0x41b801000000	                              mov r8d, 1	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3c0e	          0x4889c7	                            mov rdi, rax	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3c11	      0xe89df7ffff	                   call sym.channel_save	      2039	channel.c	FUNCTION_55	ELSE_9	IF_14	CALL_21
0x3c16	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 2	      2042	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3c1d	           0xf95c0	                                setne al	      2042	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3c20	           0xfb6c0	                           movzx eax, al	      2042	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3c23	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2042	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3c29	            0xeb0a	                           jmp 0x4003c75	      2042	channel.c	FUNCTION_55	ELSE_9	IF_14
0x3c2b	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      2045	channel.c	FUNCTION_55	ELSE_10
0x3c35	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2047	channel.c	FUNCTION_55	CALL_22
0x3c39	          0x4889c7	                            mov rdi, rax	      2047	channel.c	FUNCTION_55	CALL_22
0x3c3c	      0xe800000000	                          call 0x4003c81	      2047	channel.c	FUNCTION_55	CALL_22
0x3c41	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2048	channel.c	FUNCTION_55
0x3c47	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2049	channel.c	FUNCTION_55
0x3c4b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2049	channel.c	FUNCTION_55
0x3c54	            0x7405	                            je 0x4003c9b	      2049	channel.c	FUNCTION_55
0x3c56	      0xe800000000	                          call 0x4003c9b	      2049	channel.c	FUNCTION_55
0x3c5b	              0xc9	                                   leave	      2049	channel.c	FUNCTION_55
0x3c5c	              0xc3	                                     ret	      2049	channel.c	FUNCTION_55
ch_raw_common	functions,0:SWITCH,0:CALL,5:ELSE,1:IF,2:FOR,0:WHILE,0:DO,0	76
0x799e	              0x55	                                push rbp	      3984	channel.c	FUNCTION_93
0x799f	          0x4889e5	                            mov rbp, rsp	      3984	channel.c	FUNCTION_93
0x79a2	    0x4881ec100400	                          sub rsp, 0x410	      3984	channel.c	FUNCTION_93
0x79a9	    0x4889bd08fcff	            mov qword [rbp - 0x3f8], rdi	      3984	channel.c	FUNCTION_93
0x79b0	    0x4889b500fcff	            mov qword [rbp - 0x400], rsi	      3984	channel.c	FUNCTION_93
0x79b7	    0x8995fcfbffff	            mov dword [rbp - 0x404], edx	      3984	channel.c	FUNCTION_93
0x79bd	    0x64488b042528	                mov rax, qword fs:[0x28]	      3984	channel.c	FUNCTION_93
0x79c6	        0x488945f8	                mov qword [rbp - 8], rax	      3984	channel.c	FUNCTION_93
0x79ca	            0x31c0	                            xor eax, eax	      3984	channel.c	FUNCTION_93
0x79cc	    0x488b8500fcff	            mov rax, qword [rbp - 0x400]	      3993	channel.c	FUNCTION_93
0x79d3	    0xc70002000000	                      mov dword [rax], 2	      3993	channel.c	FUNCTION_93
0x79d9	    0x488b8500fcff	            mov rax, qword [rbp - 0x400]	      3994	channel.c	FUNCTION_93
0x79e0	    0x48c740080000	                  mov qword [rax + 8], 0	      3994	channel.c	FUNCTION_93
0x79e8	    0x488b8508fcff	            mov rax, qword [rbp - 0x3f8]	      3996	channel.c	FUNCTION_93	CALL_1
0x79ef	        0x488d5010	                   lea rdx, [rax + 0x10]	      3996	channel.c	FUNCTION_93	CALL_1
0x79f3	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3996	channel.c	FUNCTION_93	CALL_1
0x79f7	          0x4889c6	                            mov rsi, rax	      3996	channel.c	FUNCTION_93	CALL_1
0x79fa	          0x4889d7	                            mov rdi, rdx	      3996	channel.c	FUNCTION_93	CALL_1
0x79fd	      0xe800000000	                          call 0x4007a42	      3996	channel.c	FUNCTION_93	CALL_1
0x7a02	    0x48898520fcff	            mov qword [rbp - 0x3e0], rax	      3996	channel.c	FUNCTION_93	CALL_1
0x7a09	    0x83bdfcfbffff	              cmp dword [rbp - 0x404], 0	      3997	channel.c	FUNCTION_93	CALL_2
0x7a10	            0x7408	                            je 0x4007a5a	      3997	channel.c	FUNCTION_93	CALL_2
0x7a12	    0x41b800000000	                              mov r8d, 0	      3997	channel.c	FUNCTION_93	CALL_2
0x7a18	            0xeb06	                           jmp 0x4007a60	      3997	channel.c	FUNCTION_93	CALL_2
0x7a1a	    0x41b800000000	                              mov r8d, 0	      3997	channel.c	FUNCTION_93	CALL_2
0x7a20	    0x488dbd30fcff	                  lea rdi, [rbp - 0x3d0]	      3997	channel.c	FUNCTION_93	CALL_2
0x7a27	    0x8b95fcfbffff	            mov edx, dword [rbp - 0x404]	      3997	channel.c	FUNCTION_93	CALL_2
0x7a2d	    0x488bb520fcff	            mov rsi, qword [rbp - 0x3e0]	      3997	channel.c	FUNCTION_93	CALL_2
0x7a34	    0x488b8508fcff	            mov rax, qword [rbp - 0x3f8]	      3997	channel.c	FUNCTION_93	CALL_2
0x7a3b	        0x4883ec08	                              sub rsp, 8	      3997	channel.c	FUNCTION_93	CALL_2
0x7a3f	    0x488d8d18fcff	                  lea rcx, [rbp - 0x3e8]	      3997	channel.c	FUNCTION_93	CALL_2
0x7a46	              0x51	                                push rcx	      3997	channel.c	FUNCTION_93	CALL_2
0x7a47	          0x4d89c1	                              mov r9, r8	      3997	channel.c	FUNCTION_93	CALL_2
0x7a4a	          0x4989f8	                             mov r8, rdi	      3997	channel.c	FUNCTION_93	CALL_2
0x7a4d	            0x89d1	                            mov ecx, edx	      3997	channel.c	FUNCTION_93	CALL_2
0x7a4f	      0xba00000000	                              mov edx, 0	      3997	channel.c	FUNCTION_93	CALL_2
0x7a54	          0x4889c7	                            mov rdi, rax	      3997	channel.c	FUNCTION_93	CALL_2
0x7a57	      0xe826fbffff	                    call sym.send_common	      3997	channel.c	FUNCTION_93	CALL_2
0x7a5c	        0x4883c410	                           add rsp, 0x10	      3997	channel.c	FUNCTION_93	CALL_2
0x7a60	    0x48898528fcff	            mov qword [rbp - 0x3d8], rax	      3997	channel.c	FUNCTION_93	CALL_2
0x7a67	    0x4883bd28fcff	              cmp qword [rbp - 0x3d8], 0	      3999	channel.c	FUNCTION_93	IF_1
0x7a6f	            0x7471	                            je 0x4007b22	      3999	channel.c	FUNCTION_93	IF_1
0x7a71	    0x83bdfcfbffff	              cmp dword [rbp - 0x404], 0	      3999	channel.c	FUNCTION_93	IF_1
0x7a78	            0x7468	                            je 0x4007b22	      3999	channel.c	FUNCTION_93	IF_1
0x7a7a	    0x8b8530fcffff	            mov eax, dword [rbp - 0x3d0]	      4001	channel.c	FUNCTION_93	IF_1	IF_2
0x7a80	      0x2500020000	                          and eax, 0x200	      4001	channel.c	FUNCTION_93	IF_1	IF_2
0x7a85	            0x85c0	                           test eax, eax	      4001	channel.c	FUNCTION_93	IF_1	IF_2
0x7a87	            0x740e	                            je 0x4007ad7	      4001	channel.c	FUNCTION_93	IF_1	IF_2
0x7a89	    0x8b8528feffff	            mov eax, dword [rbp - 0x1d8]	      4002	channel.c	FUNCTION_93	IF_1	IF_2
0x7a8f	    0x89851cfcffff	            mov dword [rbp - 0x3e4], eax	      4002	channel.c	FUNCTION_93	IF_1	IF_2
0x7a95	            0xeb1d	                           jmp 0x4007af4	      4002	channel.c	FUNCTION_93	IF_1	IF_2
0x7a97	    0x8b9518fcffff	            mov edx, dword [rbp - 0x3e8]	      4004	channel.c	FUNCTION_93	IF_1	CALL_3
0x7a9d	    0x488b8528fcff	            mov rax, qword [rbp - 0x3d8]	      4004	channel.c	FUNCTION_93	IF_1	CALL_3
0x7aa4	            0x89d6	                            mov esi, edx	      4004	channel.c	FUNCTION_93	IF_1	CALL_3
0x7aa6	          0x4889c7	                            mov rdi, rax	      4004	channel.c	FUNCTION_93	IF_1	CALL_3
0x7aa9	      0xe800000000	                          call 0x4007aee	      4004	channel.c	FUNCTION_93	IF_1	CALL_3
0x7aae	    0x89851cfcffff	            mov dword [rbp - 0x3e4], eax	      4004	channel.c	FUNCTION_93	IF_1	CALL_3
0x7ab4	    0x8bb518fcffff	            mov esi, dword [rbp - 0x3e8]	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7aba	    0x8b951cfcffff	            mov edx, dword [rbp - 0x3e4]	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7ac0	    0x488b8528fcff	            mov rax, qword [rbp - 0x3d8]	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7ac7	      0xb901000000	                              mov ecx, 1	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7acc	          0x4889c7	                            mov rdi, rax	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7acf	      0xe88fecffff	             call sym.channel_read_block	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7ad4	          0x4889c2	                            mov rdx, rax	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7ad7	    0x488b8500fcff	            mov rax, qword [rbp - 0x400]	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7ade	        0x48895008	                mov qword [rax + 8], rdx	      4005	channel.c	FUNCTION_93	IF_1	CALL_4
0x7ae2	    0x488d8530fcff	                  lea rax, [rbp - 0x3d0]	      4008	channel.c	FUNCTION_93	CALL_5
0x7ae9	          0x4889c7	                            mov rdi, rax	      4008	channel.c	FUNCTION_93	CALL_5
0x7aec	      0xe800000000	                          call 0x4007b31	      4008	channel.c	FUNCTION_93	CALL_5
0x7af1	              0x90	                                     nop	      4009	channel.c	FUNCTION_93
0x7af2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4009	channel.c	FUNCTION_93
0x7af6	    0x644833042528	                xor rax, qword fs:[0x28]	      4009	channel.c	FUNCTION_93
0x7aff	            0x7405	                            je 0x4007b46	      4009	channel.c	FUNCTION_93
0x7b01	      0xe800000000	                          call 0x4007b46	      4009	channel.c	FUNCTION_93
0x7b06	              0xc9	                                   leave	      4009	channel.c	FUNCTION_93
0x7b07	              0xc3	                                     ret	      4009	channel.c	FUNCTION_93
channel_gui_unregister	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,1:WHILE,0:DO,0	17
0xc7f	              0x55	                                push rbp	       630	channel.c	FUNCTION_29
0xc80	          0x4889e5	                            mov rbp, rsp	       630	channel.c	FUNCTION_29
0xc83	        0x4883ec20	                           sub rsp, 0x20	       630	channel.c	FUNCTION_29
0xc87	        0x48897de8	             mov qword [rbp - 0x18], rdi	       630	channel.c	FUNCTION_29
0xc8b	    0xc745fc000000	                  mov dword [rbp - 4], 0	       633	channel.c	FUNCTION_29	FOR_1
0xc92	            0xeb15	                           jmp 0x4000ce9	       633	channel.c	FUNCTION_29	FOR_1
0xc94	          0x8b55fc	                mov edx, dword [rbp - 4]	       634	channel.c	FUNCTION_29	CALL_1
0xc97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       634	channel.c	FUNCTION_29	CALL_1
0xc9b	            0x89d6	                            mov esi, edx	       634	channel.c	FUNCTION_29	CALL_1
0xc9d	          0x4889c7	                            mov rdi, rax	       634	channel.c	FUNCTION_29	CALL_1
0xca0	      0xe83effffff	     call sym.channel_gui_unregister_one	       634	channel.c	FUNCTION_29	CALL_1
0xca5	        0x8345fc01	                  add dword [rbp - 4], 1	       633	channel.c	FUNCTION_29	FOR_1
0xca9	        0x837dfc02	                  cmp dword [rbp - 4], 2	       633	channel.c	FUNCTION_29	FOR_1
0xcad	            0x76e5	                           jbe 0x4000cd4	       633	channel.c	FUNCTION_29	FOR_1
0xcaf	              0x90	                                     nop	       635	channel.c	FUNCTION_29
0xcb0	              0xc9	                                   leave	       635	channel.c	FUNCTION_29
0xcb1	              0xc3	                                     ret	       635	channel.c	FUNCTION_29
channel_write_any_lines	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,1:WHILE,0:DO,0	17
0x2bca	              0x55	                                push rbp	      1530	channel.c	FUNCTION_44
0x2bcb	          0x4889e5	                            mov rbp, rsp	      1530	channel.c	FUNCTION_44
0x2bce	        0x4883ec10	                           sub rsp, 0x10	      1530	channel.c	FUNCTION_44
0x2bd2	    0x488b05000000	            mov rax, qword [0x04002c19] 	      1533	channel.c	FUNCTION_44	FOR_1
0x2bd9	        0x488945f8	                mov qword [rbp - 8], rax	      1533	channel.c	FUNCTION_44	FOR_1
0x2bdd	            0xeb17	                           jmp 0x4002c36	      1533	channel.c	FUNCTION_44	FOR_1
0x2bdf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1534	channel.c	FUNCTION_44	CALL_1
0x2be3	          0x4889c7	                            mov rdi, rax	      1534	channel.c	FUNCTION_44	CALL_1
0x2be6	      0xe850ffffff	            call sym.channel_write_input	      1534	channel.c	FUNCTION_44	CALL_1
0x2beb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1533	channel.c	FUNCTION_44	FOR_1
0x2bef	          0x488b00	                    mov rax, qword [rax]	      1533	channel.c	FUNCTION_44	FOR_1
0x2bf2	        0x488945f8	                mov qword [rbp - 8], rax	      1533	channel.c	FUNCTION_44	FOR_1
0x2bf6	      0x48837df800	                  cmp qword [rbp - 8], 0	      1533	channel.c	FUNCTION_44	FOR_1
0x2bfb	            0x75e2	                           jne 0x4002c1f	      1533	channel.c	FUNCTION_44	FOR_1
0x2bfd	              0x90	                                     nop	      1535	channel.c	FUNCTION_44
0x2bfe	              0xc9	                                   leave	      1535	channel.c	FUNCTION_44
0x2bff	              0xc3	                                     ret	      1535	channel.c	FUNCTION_44
job_any_running	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	21
0xa6ba	              0x55	                                push rbp	      5142	channel.c	FUNCTION_120
0xa6bb	          0x4889e5	                            mov rbp, rsp	      5142	channel.c	FUNCTION_120
0xa6be	        0x4883ec10	                           sub rsp, 0x10	      5142	channel.c	FUNCTION_120
0xa6c2	    0x488b05000000	            mov rax, qword [0x0400a709] 	      5145	channel.c	FUNCTION_120	FOR_1
0xa6c9	        0x488945f8	                mov qword [rbp - 8], rax	      5145	channel.c	FUNCTION_120	FOR_1
0xa6cd	            0xeb22	                           jmp 0x400a731	      5145	channel.c	FUNCTION_120	FOR_1
0xa6cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5146	channel.c	FUNCTION_120	FOR_1	IF_1	CALL_1
0xa6d3	          0x4889c7	                            mov rdi, rax	      5146	channel.c	FUNCTION_120	FOR_1	IF_1	CALL_1
0xa6d6	      0xe8a5ffffff	               call sym.job_still_useful	      5146	channel.c	FUNCTION_120	FOR_1	IF_1	CALL_1
0xa6db	            0x85c0	                           test eax, eax	      5146	channel.c	FUNCTION_120	FOR_1	IF_1	CALL_1
0xa6dd	            0x7407	                            je 0x400a726	      5146	channel.c	FUNCTION_120	FOR_1	IF_1	CALL_1
0xa6df	      0xb801000000	                              mov eax, 1	      5147	channel.c	FUNCTION_120	FOR_1	IF_1
0xa6e4	            0xeb17	                           jmp 0x400a73d	      5147	channel.c	FUNCTION_120	FOR_1	IF_1
0xa6e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5145	channel.c	FUNCTION_120	FOR_1
0xa6ea	          0x488b00	                    mov rax, qword [rax]	      5145	channel.c	FUNCTION_120	FOR_1
0xa6ed	        0x488945f8	                mov qword [rbp - 8], rax	      5145	channel.c	FUNCTION_120	FOR_1
0xa6f1	      0x48837df800	                  cmp qword [rbp - 8], 0	      5145	channel.c	FUNCTION_120	FOR_1
0xa6f6	            0x75d7	                           jne 0x400a70f	      5145	channel.c	FUNCTION_120	FOR_1
0xa6f8	      0xb800000000	                              mov eax, 0	      5148	channel.c	FUNCTION_120
0xa6fd	              0xc9	                                   leave	      5149	channel.c	FUNCTION_120
0xa6fe	              0xc3	                                     ret	      5149	channel.c	FUNCTION_120
channel_handle_events	functions,0:SWITCH,0:CALL,3:ELSE,1:IF,4:FOR,2:WHILE,0:DO,0	64
0x6f11	              0x55	                                push rbp	      3621	channel.c	FUNCTION_87
0x6f12	          0x4889e5	                            mov rbp, rsp	      3621	channel.c	FUNCTION_87
0x6f15	        0x4883ec30	                           sub rsp, 0x30	      3621	channel.c	FUNCTION_87
0x6f19	          0x897ddc	             mov dword [rbp - 0x24], edi	      3621	channel.c	FUNCTION_87
0x6f1c	    0x488b05000000	            mov rax, qword [0x04006f63] 	      3626	channel.c	FUNCTION_87	FOR_1
0x6f23	        0x488945f8	                mov qword [rbp - 8], rax	      3626	channel.c	FUNCTION_87	FOR_1
0x6f27	      0xe9bd000000	                           jmp 0x4007029	      3626	channel.c	FUNCTION_87	FOR_1
0x6f2c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3628	channel.c	FUNCTION_87	FOR_1	IF_1
0x6f30	            0x7412	                            je 0x4006f84	      3628	channel.c	FUNCTION_87	FOR_1	IF_1
0x6f32	        0x488b45f8	                mov rax, qword [rbp - 8]	      3628	channel.c	FUNCTION_87	FOR_1	IF_1
0x6f36	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      3628	channel.c	FUNCTION_87	FOR_1	IF_1
0x6f3c	            0x85c0	                           test eax, eax	      3628	channel.c	FUNCTION_87	FOR_1	IF_1
0x6f3e	     0xf8499000000	                            je 0x400701d	      3628	channel.c	FUNCTION_87	FOR_1	IF_1
0x6f44	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3632	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f4b	      0xe981000000	                           jmp 0x4007011	      3632	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f50	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f54	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f57	        0x48c1e004	                              shl rax, 4	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f5b	          0x4889c1	                            mov rcx, rax	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f5e	        0x48c1e104	                              shl rcx, 4	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f62	          0x4801c8	                            add rax, rcx	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f65	          0x4801d0	                            add rax, rdx	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f68	        0x4883c018	                           add rax, 0x18	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f6c	            0x8b00	                    mov eax, dword [rax]	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f6e	          0x8945f0	             mov dword [rbp - 0x10], eax	      3634	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6f71	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	      3635	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2
0x6f75	            0x7456	                            je 0x400700d	      3635	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2
0x6f77	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      3637	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_1
0x6f7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3637	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_1
0x6f7e	      0xba00000000	                              mov edx, 0	      3637	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_1
0x6f83	            0x89ce	                            mov esi, ecx	      3637	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_1
0x6f85	          0x4889c7	                            mov rdi, rax	      3637	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_1
0x6f88	      0xe803f2ffff	                   call sym.channel_wait	      3637	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_1
0x6f8d	          0x8945f4	              mov dword [rbp - 0xc], eax	      3637	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_1
0x6f90	        0x837df400	                cmp dword [rbp - 0xc], 0	      3639	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	IF_3
0x6f94	            0x7518	                           jne 0x4006fee	      3639	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	IF_3
0x6f96	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      3640	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_2
0x6f99	        0x488b45f8	                mov rax, qword [rbp - 8]	      3640	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_2
0x6f9d	      0xba00000000	                              mov edx, 0	      3640	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_2
0x6fa2	            0x89ce	                            mov esi, ecx	      3640	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_2
0x6fa4	          0x4889c7	                            mov rdi, rax	      3640	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_2
0x6fa7	      0xe809f6ffff	                   call sym.channel_read	      3640	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_2
0x6fac	            0xeb1f	                           jmp 0x400700d	      3640	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	CALL_2
0x6fae	        0x837df402	                cmp dword [rbp - 0xc], 2	      3641	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x6fb2	            0x7519	                           jne 0x400700d	      3641	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4
0x6fb4	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      3642	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x6fb7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3642	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x6fbb	      0xb900000000	                              mov ecx, 0	      3642	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x6fc0	      0xba01000000	                              mov edx, 1	      3642	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x6fc5	          0x4889c7	                            mov rdi, rax	      3642	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x6fc8	      0xe8f8f3ffff	         call sym.ch_close_part_on_error	      3642	channel.c	FUNCTION_87	FOR_1	FOR_2	IF_2	ELSE_1	IF_4	CALL_3
0x6fcd	        0x8345ec01	               add dword [rbp - 0x14], 1	      3632	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6fd1	        0x837dec02	               cmp dword [rbp - 0x14], 2	      3632	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6fd5	     0xf8675ffffff	                           jbe 0x4006f90	      3632	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6fdb	            0xeb01	                           jmp 0x400701e	      3632	channel.c	FUNCTION_87	FOR_1	FOR_2
0x6fdd	              0x90	                                     nop	      3629	channel.c	FUNCTION_87	FOR_1	IF_1
0x6fde	        0x488b45f8	                mov rax, qword [rbp - 8]	      3626	channel.c	FUNCTION_87	FOR_1
0x6fe2	          0x488b00	                    mov rax, qword [rax]	      3626	channel.c	FUNCTION_87	FOR_1
0x6fe5	        0x488945f8	                mov qword [rbp - 8], rax	      3626	channel.c	FUNCTION_87	FOR_1
0x6fe9	      0x48837df800	                  cmp qword [rbp - 8], 0	      3626	channel.c	FUNCTION_87	FOR_1
0x6fee	     0xf8538ffffff	                           jne 0x4006f6c	      3626	channel.c	FUNCTION_87	FOR_1
0x6ff4	              0x90	                                     nop	      3647	channel.c	FUNCTION_87
0x6ff5	              0xc9	                                   leave	      3647	channel.c	FUNCTION_87
0x6ff6	              0xc3	                                     ret	      3647	channel.c	FUNCTION_87
channel_get_mode	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	19
0x823b	              0x55	                                push rbp	      4377	channel.c	FUNCTION_103
0x823c	          0x4889e5	                            mov rbp, rsp	      4377	channel.c	FUNCTION_103
0x823f	        0x48897df8	                mov qword [rbp - 8], rdi	      4377	channel.c	FUNCTION_103
0x8243	          0x8975f4	              mov dword [rbp - 0xc], esi	      4377	channel.c	FUNCTION_103
0x8246	      0x48837df800	                  cmp qword [rbp - 8], 0	      4378	channel.c	FUNCTION_103	IF_1
0x824b	            0x7507	                           jne 0x4008294	      4378	channel.c	FUNCTION_103	IF_1
0x824d	      0xb802000000	                              mov eax, 2	      4379	channel.c	FUNCTION_103	IF_1
0x8252	            0xeb1e	                           jmp 0x40082b2	      4379	channel.c	FUNCTION_103	IF_1
0x8254	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4380	channel.c	FUNCTION_103
0x8258	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4380	channel.c	FUNCTION_103
0x825b	        0x48c1e004	                              shl rax, 4	      4380	channel.c	FUNCTION_103
0x825f	          0x4889c1	                            mov rcx, rax	      4380	channel.c	FUNCTION_103
0x8262	        0x48c1e104	                              shl rcx, 4	      4380	channel.c	FUNCTION_103
0x8266	          0x4801c8	                            add rax, rcx	      4380	channel.c	FUNCTION_103
0x8269	          0x4801d0	                            add rax, rdx	      4380	channel.c	FUNCTION_103
0x826c	        0x4883c020	                           add rax, 0x20	      4380	channel.c	FUNCTION_103
0x8270	            0x8b00	                    mov eax, dword [rax]	      4380	channel.c	FUNCTION_103
0x8272	              0x5d	                                 pop rbp	      4381	channel.c	FUNCTION_103
0x8273	              0xc3	                                     ret	      4381	channel.c	FUNCTION_103
win32_build_cmd	functions,0:SWITCH,0:CALL,5:ELSE,0:IF,3:FOR,1:WHILE,0:DO,0	50
0xa97f	              0x55	                                push rbp	      5236	channel.c	FUNCTION_122
0xa980	          0x4889e5	                            mov rbp, rsp	      5236	channel.c	FUNCTION_122
0xa983	        0x4883ec20	                           sub rsp, 0x20	      5236	channel.c	FUNCTION_122
0xa987	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5236	channel.c	FUNCTION_122
0xa98b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5236	channel.c	FUNCTION_122
0xa98f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5240	channel.c	FUNCTION_122	FOR_1
0xa993	          0x488b00	                    mov rax, qword [rax]	      5240	channel.c	FUNCTION_122	FOR_1
0xa996	        0x488945f0	             mov qword [rbp - 0x10], rax	      5240	channel.c	FUNCTION_122	FOR_1
0xa99a	      0xe987000000	                           jmp 0x400aa66	      5240	channel.c	FUNCTION_122	FOR_1
0xa99f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5242	channel.c	FUNCTION_122	FOR_1	CALL_1
0xa9a3	        0x4883c010	                           add rax, 0x10	      5242	channel.c	FUNCTION_122	FOR_1	CALL_1
0xa9a7	          0x4889c7	                            mov rdi, rax	      5242	channel.c	FUNCTION_122	FOR_1	CALL_1
0xa9aa	      0xe800000000	                          call 0x400a9ef	      5242	channel.c	FUNCTION_122	FOR_1	CALL_1
0xa9af	        0x488945f8	                mov qword [rbp - 8], rax	      5242	channel.c	FUNCTION_122	FOR_1	CALL_1
0xa9b3	      0x48837df800	                  cmp qword [rbp - 8], 0	      5243	channel.c	FUNCTION_122	FOR_1	IF_1
0xa9b8	            0x7507	                           jne 0x400aa01	      5243	channel.c	FUNCTION_122	FOR_1	IF_1
0xa9ba	      0xb800000000	                              mov eax, 0	      5244	channel.c	FUNCTION_122	FOR_1	IF_1
0xa9bf	            0xeb75	                           jmp 0x400aa76	      5244	channel.c	FUNCTION_122	FOR_1	IF_1
0xa9c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5245	channel.c	FUNCTION_122	FOR_1	CALL_2
0xa9c5	          0x4889c7	                            mov rdi, rax	      5245	channel.c	FUNCTION_122	FOR_1	CALL_2
0xa9c8	      0xe832fdffff	               call sym.win32_escape_arg	      5245	channel.c	FUNCTION_122	FOR_1	CALL_2
0xa9cd	        0x488945f8	                mov qword [rbp - 8], rax	      5245	channel.c	FUNCTION_122	FOR_1	CALL_2
0xa9d1	      0x48837df800	                  cmp qword [rbp - 8], 0	      5246	channel.c	FUNCTION_122	FOR_1	IF_2
0xa9d6	            0x7507	                           jne 0x400aa1f	      5246	channel.c	FUNCTION_122	FOR_1	IF_2
0xa9d8	      0xb800000000	                              mov eax, 0	      5247	channel.c	FUNCTION_122	FOR_1	IF_2
0xa9dd	            0xeb57	                           jmp 0x400aa76	      5247	channel.c	FUNCTION_122	FOR_1	IF_2
0xa9df	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5248	channel.c	FUNCTION_122	FOR_1	CALL_3
0xa9e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5248	channel.c	FUNCTION_122	FOR_1	CALL_3
0xa9e7	          0x4889d6	                            mov rsi, rdx	      5248	channel.c	FUNCTION_122	FOR_1	CALL_3
0xa9ea	          0x4889c7	                            mov rdi, rax	      5248	channel.c	FUNCTION_122	FOR_1	CALL_3
0xa9ed	      0xe800000000	                          call 0x400aa32	      5248	channel.c	FUNCTION_122	FOR_1	CALL_3
0xa9f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5249	channel.c	FUNCTION_122	FOR_1	CALL_4
0xa9f6	          0x4889c7	                            mov rdi, rax	      5249	channel.c	FUNCTION_122	FOR_1	CALL_4
0xa9f9	      0xe800000000	                          call 0x400aa3e	      5249	channel.c	FUNCTION_122	FOR_1	CALL_4
0xa9fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5250	channel.c	FUNCTION_122	FOR_1	IF_3
0xaa02	          0x488b00	                    mov rax, qword [rax]	      5250	channel.c	FUNCTION_122	FOR_1	IF_3
0xaa05	          0x4885c0	                           test rax, rax	      5250	channel.c	FUNCTION_122	FOR_1	IF_3
0xaa08	            0x7411	                            je 0x400aa5b	      5250	channel.c	FUNCTION_122	FOR_1	IF_3
0xaa0a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5251	channel.c	FUNCTION_122	FOR_1	CALL_5
0xaa0e	      0xbe20000000	                           mov esi, 0x20	      5251	channel.c	FUNCTION_122	FOR_1	CALL_5
0xaa13	          0x4889c7	                            mov rdi, rax	      5251	channel.c	FUNCTION_122	FOR_1	CALL_5
0xaa16	      0xe800000000	                          call 0x400aa5b	      5251	channel.c	FUNCTION_122	FOR_1	CALL_5
0xaa1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5240	channel.c	FUNCTION_122	FOR_1
0xaa1f	          0x488b00	                    mov rax, qword [rax]	      5240	channel.c	FUNCTION_122	FOR_1
0xaa22	        0x488945f0	             mov qword [rbp - 0x10], rax	      5240	channel.c	FUNCTION_122	FOR_1
0xaa26	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5240	channel.c	FUNCTION_122	FOR_1
0xaa2b	     0xf856effffff	                           jne 0x400a9df	      5240	channel.c	FUNCTION_122	FOR_1
0xaa31	      0xb801000000	                              mov eax, 1	      5253	channel.c	FUNCTION_122
0xaa36	              0xc9	                                   leave	      5254	channel.c	FUNCTION_122
0xaa37	              0xc3	                                     ret	      5254	channel.c	FUNCTION_122
channel_collapse	functions,0:SWITCH,0:CALL,8:ELSE,1:IF,4:FOR,2:WHILE,1:DO,0	150
0x318e	              0x55	                                push rbp	      1731	channel.c	FUNCTION_52
0x318f	          0x4889e5	                            mov rbp, rsp	      1731	channel.c	FUNCTION_52
0x3192	        0x4883ec50	                           sub rsp, 0x50	      1731	channel.c	FUNCTION_52
0x3196	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1731	channel.c	FUNCTION_52
0x319a	          0x8975b4	             mov dword [rbp - 0x4c], esi	      1731	channel.c	FUNCTION_52
0x319d	          0x8955b0	             mov dword [rbp - 0x50], edx	      1731	channel.c	FUNCTION_52
0x31a0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1732	channel.c	FUNCTION_52
0x31a3	        0x48c1e004	                              shl rax, 4	      1732	channel.c	FUNCTION_52
0x31a7	          0x4889c2	                            mov rdx, rax	      1732	channel.c	FUNCTION_52
0x31aa	        0x48c1e204	                              shl rdx, 4	      1732	channel.c	FUNCTION_52
0x31ae	          0x4801d0	                            add rax, rdx	      1732	channel.c	FUNCTION_52
0x31b1	        0x488d5020	                   lea rdx, [rax + 0x20]	      1732	channel.c	FUNCTION_52
0x31b5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1732	channel.c	FUNCTION_52
0x31b9	          0x4801d0	                            add rax, rdx	      1732	channel.c	FUNCTION_52
0x31bc	        0x4883c010	                           add rax, 0x10	      1732	channel.c	FUNCTION_52
0x31c0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1732	channel.c	FUNCTION_52
0x31c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1733	channel.c	FUNCTION_52
0x31c8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1733	channel.c	FUNCTION_52
0x31cc	        0x488945f0	             mov qword [rbp - 0x10], rax	      1733	channel.c	FUNCTION_52
0x31d0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1740	channel.c	FUNCTION_52	IF_1
0x31d5	            0x740d	                            je 0x4003224	      1740	channel.c	FUNCTION_52	IF_1
0x31d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1740	channel.c	FUNCTION_52	IF_1
0x31db	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1740	channel.c	FUNCTION_52	IF_1
0x31df	          0x4885c0	                           test rax, rax	      1740	channel.c	FUNCTION_52	IF_1
0x31e2	            0x750a	                           jne 0x400322e	      1740	channel.c	FUNCTION_52	IF_1
0x31e4	      0xb800000000	                              mov eax, 0	      1741	channel.c	FUNCTION_52	IF_1
0x31e9	      0xe9c3010000	                           jmp 0x40033f1	      1741	channel.c	FUNCTION_52	IF_1
0x31ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1743	channel.c	FUNCTION_52
0x31f2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1743	channel.c	FUNCTION_52
0x31f6	        0x488945c8	             mov qword [rbp - 0x38], rax	      1743	channel.c	FUNCTION_52
0x31fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1744	channel.c	FUNCTION_52
0x31fe	        0x488b5008	                mov rdx, qword [rax + 8]	      1744	channel.c	FUNCTION_52
0x3202	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1744	channel.c	FUNCTION_52
0x3206	        0x488b4008	                mov rax, qword [rax + 8]	      1744	channel.c	FUNCTION_52
0x320a	          0x4801d0	                            add rax, rdx	      1744	channel.c	FUNCTION_52
0x320d	        0x4883c001	                              add rax, 1	      1744	channel.c	FUNCTION_52
0x3211	        0x488945e0	             mov qword [rbp - 0x20], rax	      1744	channel.c	FUNCTION_52
0x3215	        0x837db000	               cmp dword [rbp - 0x50], 0	      1745	channel.c	FUNCTION_52	IF_2
0x3219	            0x7438	                            je 0x4003293	      1745	channel.c	FUNCTION_52	IF_2
0x321b	            0xeb18	                           jmp 0x4003275	      1746	channel.c	FUNCTION_52	IF_2	WHILE_1
0x321d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1749	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3221	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1749	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3225	        0x488945c8	             mov qword [rbp - 0x38], rax	      1749	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3229	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1750	channel.c	FUNCTION_52	IF_2	WHILE_1
0x322d	        0x488b4008	                mov rax, qword [rax + 8]	      1750	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3231	        0x480145e0	            add qword [rbp - 0x20], rax 	      1750	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3235	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1746	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3239	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1746	channel.c	FUNCTION_52	IF_2	WHILE_1
0x323d	          0x4885c0	                           test rax, rax	      1746	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3240	            0x7411	                            je 0x4003293	      1746	channel.c	FUNCTION_52	IF_2	WHILE_1
0x3242	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1747	channel.c	FUNCTION_52	IF_2	WHILE_1	CALL_1
0x3246	          0x4889c7	                            mov rdi, rax	      1747	channel.c	FUNCTION_52	IF_2	WHILE_1	CALL_1
0x3249	      0xe800000000	                          call 0x400328e	      1747	channel.c	FUNCTION_52	IF_2	WHILE_1	CALL_1
0x324e	          0x4885c0	                           test rax, rax	      1747	channel.c	FUNCTION_52	IF_2	WHILE_1	CALL_1
0x3251	            0x74ca	                            je 0x400325d	      1747	channel.c	FUNCTION_52	IF_2	WHILE_1	CALL_1
0x3253	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1753	channel.c	FUNCTION_52	CALL_2
0x3257	            0x89c7	                            mov edi, eax	      1753	channel.c	FUNCTION_52	CALL_2
0x3259	      0xe800000000	                          call 0x400329e	      1753	channel.c	FUNCTION_52	CALL_2
0x325e	        0x488945f8	                mov qword [rbp - 8], rax	      1753	channel.c	FUNCTION_52	CALL_2
0x3262	        0x488b45f8	                mov rax, qword [rbp - 8]	      1753	channel.c	FUNCTION_52	CALL_2
0x3266	        0x488945d8	             mov qword [rbp - 0x28], rax	      1753	channel.c	FUNCTION_52	CALL_2
0x326a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1754	channel.c	FUNCTION_52	IF_3
0x326f	            0x750a	                           jne 0x40032bb	      1754	channel.c	FUNCTION_52	IF_3
0x3271	      0xb800000000	                              mov eax, 0	      1755	channel.c	FUNCTION_52	IF_3
0x3276	      0xe936010000	                           jmp 0x40033f1	      1755	channel.c	FUNCTION_52	IF_3
0x327b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1756	channel.c	FUNCTION_52	CALL_3
0x327f	        0x488b5008	                mov rdx, qword [rax + 8]	      1756	channel.c	FUNCTION_52	CALL_3
0x3283	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1756	channel.c	FUNCTION_52	CALL_3
0x3287	          0x488b08	                    mov rcx, qword [rax]	      1756	channel.c	FUNCTION_52	CALL_3
0x328a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1756	channel.c	FUNCTION_52	CALL_3
0x328e	          0x4889ce	                            mov rsi, rcx	      1756	channel.c	FUNCTION_52	CALL_3
0x3291	          0x4889c7	                            mov rdi, rax	      1756	channel.c	FUNCTION_52	CALL_3
0x3294	      0xe800000000	                          call 0x40032d9	      1756	channel.c	FUNCTION_52	CALL_3
0x3299	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1757	channel.c	FUNCTION_52
0x329d	        0x488b4008	                mov rax, qword [rax + 8]	      1757	channel.c	FUNCTION_52
0x32a1	        0x480145d8	            add qword [rbp - 0x28], rax 	      1757	channel.c	FUNCTION_52
0x32a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1758	channel.c	FUNCTION_52	CALL_4
0x32a9	          0x488b00	                    mov rax, qword [rax]	      1758	channel.c	FUNCTION_52	CALL_4
0x32ac	          0x4889c7	                            mov rdi, rax	      1758	channel.c	FUNCTION_52	CALL_4
0x32af	      0xe800000000	                          call 0x40032f4	      1758	channel.c	FUNCTION_52	CALL_4
0x32b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1759	channel.c	FUNCTION_52
0x32b8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1759	channel.c	FUNCTION_52
0x32bc	          0x488910	                    mov qword [rax], rdx	      1759	channel.c	FUNCTION_52
0x32bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1760	channel.c	FUNCTION_52	FOR_1
0x32c3	        0x488945d0	             mov qword [rbp - 0x30], rax	      1760	channel.c	FUNCTION_52	FOR_1
0x32c7	            0xeb45	                           jmp 0x400334e	      1760	channel.c	FUNCTION_52	FOR_1
0x32c9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1762	channel.c	FUNCTION_52	FOR_1
0x32cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1762	channel.c	FUNCTION_52	FOR_1
0x32d1	        0x488945d0	             mov qword [rbp - 0x30], rax	      1762	channel.c	FUNCTION_52	FOR_1
0x32d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32d9	        0x488b5008	                mov rdx, qword [rax + 8]	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32e1	          0x488b08	                    mov rcx, qword [rax]	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32e8	          0x4889ce	                            mov rsi, rcx	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32eb	          0x4889c7	                            mov rdi, rax	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32ee	      0xe800000000	                          call 0x4003333	      1763	channel.c	FUNCTION_52	FOR_1	CALL_5
0x32f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1764	channel.c	FUNCTION_52	FOR_1
0x32f7	        0x488b4008	                mov rax, qword [rax + 8]	      1764	channel.c	FUNCTION_52	FOR_1
0x32fb	        0x480145d8	            add qword [rbp - 0x28], rax 	      1764	channel.c	FUNCTION_52	FOR_1
0x32ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1765	channel.c	FUNCTION_52	FOR_1	CALL_6
0x3303	          0x488b00	                    mov rax, qword [rax]	      1765	channel.c	FUNCTION_52	FOR_1	CALL_6
0x3306	          0x4889c7	                            mov rdi, rax	      1765	channel.c	FUNCTION_52	FOR_1	CALL_6
0x3309	      0xe800000000	                          call 0x400334e	      1765	channel.c	FUNCTION_52	FOR_1	CALL_6
0x330e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1760	channel.c	FUNCTION_52	FOR_1
0x3312	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1760	channel.c	FUNCTION_52	FOR_1
0x3316	            0x75b1	                           jne 0x4003309	      1760	channel.c	FUNCTION_52	FOR_1
0x3318	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1767	channel.c	FUNCTION_52
0x331c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1767	channel.c	FUNCTION_52
0x3320	          0x4829c2	                            sub rdx, rax	      1767	channel.c	FUNCTION_52
0x3323	          0x4889d0	                            mov rax, rdx	      1767	channel.c	FUNCTION_52
0x3326	          0x4889c2	                            mov rdx, rax	      1767	channel.c	FUNCTION_52
0x3329	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1767	channel.c	FUNCTION_52
0x332d	        0x48895008	                mov qword [rax + 8], rdx	      1767	channel.c	FUNCTION_52
0x3331	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1770	channel.c	FUNCTION_52	FOR_2
0x3335	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1770	channel.c	FUNCTION_52	FOR_2
0x3339	        0x488945d0	             mov qword [rbp - 0x30], rax	      1770	channel.c	FUNCTION_52	FOR_2
0x333d	            0xeb1c	                           jmp 0x400339b	      1770	channel.c	FUNCTION_52	FOR_2
0x333f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1772	channel.c	FUNCTION_52	FOR_2
0x3343	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1772	channel.c	FUNCTION_52	FOR_2
0x3347	        0x488945d0	             mov qword [rbp - 0x30], rax	      1772	channel.c	FUNCTION_52	FOR_2
0x334b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1773	channel.c	FUNCTION_52	FOR_2	CALL_7
0x334f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1773	channel.c	FUNCTION_52	FOR_2	CALL_7
0x3353	          0x4889c7	                            mov rdi, rax	      1773	channel.c	FUNCTION_52	FOR_2	CALL_7
0x3356	      0xe800000000	                          call 0x400339b	      1773	channel.c	FUNCTION_52	FOR_2	CALL_7
0x335b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1770	channel.c	FUNCTION_52	FOR_2
0x335f	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1770	channel.c	FUNCTION_52	FOR_2
0x3363	            0x75da	                           jne 0x400337f	      1770	channel.c	FUNCTION_52	FOR_2
0x3365	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1775	channel.c	FUNCTION_52
0x3369	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1775	channel.c	FUNCTION_52
0x336d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1775	channel.c	FUNCTION_52
0x3371	        0x48895010	             mov qword [rax + 0x10], rdx	      1775	channel.c	FUNCTION_52
0x3375	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1776	channel.c	FUNCTION_52	IF_4
0x3379	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1776	channel.c	FUNCTION_52	IF_4
0x337d	          0x4885c0	                           test rax, rax	      1776	channel.c	FUNCTION_52	IF_4
0x3380	            0x750e	                           jne 0x40033d0	      1776	channel.c	FUNCTION_52	IF_4
0x3382	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1777	channel.c	FUNCTION_52	IF_4
0x3386	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1777	channel.c	FUNCTION_52	IF_4
0x338a	        0x48895018	             mov qword [rax + 0x18], rdx	      1777	channel.c	FUNCTION_52	IF_4
0x338e	            0xeb10	                           jmp 0x40033e0	      1777	channel.c	FUNCTION_52	IF_4
0x3390	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1779	channel.c	FUNCTION_52	ELSE_1
0x3394	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1779	channel.c	FUNCTION_52	ELSE_1
0x3398	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1779	channel.c	FUNCTION_52	ELSE_1
0x339c	        0x48895018	             mov qword [rax + 0x18], rdx	      1779	channel.c	FUNCTION_52	ELSE_1
0x33a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1780	channel.c	FUNCTION_52	CALL_8
0x33a4	          0x4889c7	                            mov rdi, rax	      1780	channel.c	FUNCTION_52	CALL_8
0x33a7	      0xe800000000	                          call 0x40033ec	      1780	channel.c	FUNCTION_52	CALL_8
0x33ac	      0xb801000000	                              mov eax, 1	      1781	channel.c	FUNCTION_52
0x33b1	              0xc9	                                   leave	      1782	channel.c	FUNCTION_52
0x33b2	              0xc3	                                     ret	      1782	channel.c	FUNCTION_52
channel_get_all	functions,0:SWITCH,0:CALL,5:ELSE,0:IF,3:FOR,2:WHILE,1:DO,1	108
0x2f72	              0x55	                                push rbp	      1666	channel.c	FUNCTION_50
0x2f73	          0x4889e5	                            mov rbp, rsp	      1666	channel.c	FUNCTION_50
0x2f76	        0x4883ec40	                           sub rsp, 0x40	      1666	channel.c	FUNCTION_50
0x2f7a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1666	channel.c	FUNCTION_50
0x2f7e	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1666	channel.c	FUNCTION_50
0x2f81	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1667	channel.c	FUNCTION_50
0x2f84	        0x48c1e004	                              shl rax, 4	      1667	channel.c	FUNCTION_50
0x2f88	          0x4889c2	                            mov rdx, rax	      1667	channel.c	FUNCTION_50
0x2f8b	        0x48c1e204	                              shl rdx, 4	      1667	channel.c	FUNCTION_50
0x2f8f	          0x4801d0	                            add rax, rdx	      1667	channel.c	FUNCTION_50
0x2f92	        0x488d5020	                   lea rdx, [rax + 0x20]	      1667	channel.c	FUNCTION_50
0x2f96	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1667	channel.c	FUNCTION_50
0x2f9a	          0x4801d0	                            add rax, rdx	      1667	channel.c	FUNCTION_50
0x2f9d	        0x4883c010	                           add rax, 0x10	      1667	channel.c	FUNCTION_50
0x2fa1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1667	channel.c	FUNCTION_50
0x2fa5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1668	channel.c	FUNCTION_50
0x2fa9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1668	channel.c	FUNCTION_50
0x2fad	        0x488945d8	             mov qword [rbp - 0x28], rax	      1668	channel.c	FUNCTION_50
0x2fb1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1669	channel.c	FUNCTION_50
0x2fb9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1674	channel.c	FUNCTION_50	IF_1
0x2fbd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1674	channel.c	FUNCTION_50	IF_1
0x2fc1	          0x4885c0	                           test rax, rax	      1674	channel.c	FUNCTION_50	IF_1
0x2fc4	            0x7411	                            je 0x4003017	      1674	channel.c	FUNCTION_50	IF_1
0x2fc6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1674	channel.c	FUNCTION_50	IF_1
0x2fca	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1674	channel.c	FUNCTION_50	IF_1
0x2fce	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1674	channel.c	FUNCTION_50	IF_1
0x2fd2	          0x4885c0	                           test rax, rax	      1674	channel.c	FUNCTION_50	IF_1
0x2fd5	            0x7516	                           jne 0x400302d	      1674	channel.c	FUNCTION_50	IF_1
0x2fd7	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1675	channel.c	FUNCTION_50	CALL_1
0x2fda	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1675	channel.c	FUNCTION_50	CALL_1
0x2fde	            0x89d6	                            mov esi, edx	      1675	channel.c	FUNCTION_50	CALL_1
0x2fe0	          0x4889c7	                            mov rdi, rax	      1675	channel.c	FUNCTION_50	CALL_1
0x2fe3	      0xe800000000	                          call 0x4003028	      1675	channel.c	FUNCTION_50	CALL_1
0x2fe8	      0xe90b010000	                           jmp 0x4003138	      1675	channel.c	FUNCTION_50	CALL_1
0x2fed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1678	channel.c	FUNCTION_50	FOR_1
0x2ff1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1678	channel.c	FUNCTION_50	FOR_1
0x2ff5	        0x488945d8	             mov qword [rbp - 0x28], rax	      1678	channel.c	FUNCTION_50	FOR_1
0x2ff9	            0xeb18	                           jmp 0x4003053	      1678	channel.c	FUNCTION_50	FOR_1
0x2ffb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1679	channel.c	FUNCTION_50	FOR_1
0x2fff	        0x488b4008	                mov rax, qword [rax + 8]	      1679	channel.c	FUNCTION_50	FOR_1
0x3003	        0x480145e0	            add qword [rbp - 0x20], rax 	      1679	channel.c	FUNCTION_50	FOR_1
0x3007	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1678	channel.c	FUNCTION_50	FOR_1
0x300b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1678	channel.c	FUNCTION_50	FOR_1
0x300f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1678	channel.c	FUNCTION_50	FOR_1
0x3013	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1678	channel.c	FUNCTION_50	FOR_1
0x3018	            0x75e1	                           jne 0x400303b	      1678	channel.c	FUNCTION_50	FOR_1
0x301a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1680	channel.c	FUNCTION_50	CALL_2
0x301e	        0x4883c001	                              add rax, 1	      1680	channel.c	FUNCTION_50	CALL_2
0x3022	      0xbe01000000	                              mov esi, 1	      1680	channel.c	FUNCTION_50	CALL_2
0x3027	          0x4889c7	                            mov rdi, rax	      1680	channel.c	FUNCTION_50	CALL_2
0x302a	      0xe800000000	                          call 0x400306f	      1680	channel.c	FUNCTION_50	CALL_2
0x302f	        0x488945f8	                mov qword [rbp - 8], rax	      1680	channel.c	FUNCTION_50	CALL_2
0x3033	      0x48837df800	                  cmp qword [rbp - 8], 0	      1681	channel.c	FUNCTION_50	IF_2
0x3038	            0x750a	                           jne 0x4003084	      1681	channel.c	FUNCTION_50	IF_2
0x303a	      0xb800000000	                              mov eax, 0	      1682	channel.c	FUNCTION_50	IF_2
0x303f	      0xe9b4000000	                           jmp 0x4003138	      1682	channel.c	FUNCTION_50	IF_2
0x3044	        0x488b45f8	                mov rax, qword [rbp - 8]	      1683	channel.c	FUNCTION_50
0x3048	        0x488945e8	             mov qword [rbp - 0x18], rax	      1683	channel.c	FUNCTION_50
0x304c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1684	channel.c	FUNCTION_50	FOR_2
0x3050	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1684	channel.c	FUNCTION_50	FOR_2
0x3054	        0x488945d8	             mov qword [rbp - 0x28], rax	      1684	channel.c	FUNCTION_50	FOR_2
0x3058	            0xeb36	                           jmp 0x40030d0	      1684	channel.c	FUNCTION_50	FOR_2
0x305a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x305e	        0x488b5008	                mov rdx, qword [rax + 8]	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x3062	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x3066	          0x488b08	                    mov rcx, qword [rax]	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x3069	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x306d	          0x4889ce	                            mov rsi, rcx	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x3070	          0x4889c7	                            mov rdi, rax	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x3073	      0xe800000000	                          call 0x40030b8	      1686	channel.c	FUNCTION_50	FOR_2	CALL_3
0x3078	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1687	channel.c	FUNCTION_50	FOR_2
0x307c	        0x488b4008	                mov rax, qword [rax + 8]	      1687	channel.c	FUNCTION_50	FOR_2
0x3080	        0x480145e8	            add qword [rbp - 0x18], rax 	      1687	channel.c	FUNCTION_50	FOR_2
0x3084	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1684	channel.c	FUNCTION_50	FOR_2
0x3088	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1684	channel.c	FUNCTION_50	FOR_2
0x308c	        0x488945d8	             mov qword [rbp - 0x28], rax	      1684	channel.c	FUNCTION_50	FOR_2
0x3090	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1684	channel.c	FUNCTION_50	FOR_2
0x3095	            0x75c3	                           jne 0x400309a	      1684	channel.c	FUNCTION_50	FOR_2
0x3097	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1689	channel.c	FUNCTION_50
0x309b	          0xc60000	                       mov byte [rax], 0	      1689	channel.c	FUNCTION_50
0x309e	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1694	channel.c	FUNCTION_50	DO_1	CALL_4
0x30a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1694	channel.c	FUNCTION_50	DO_1	CALL_4
0x30a5	            0x89d6	                            mov esi, edx	      1694	channel.c	FUNCTION_50	DO_1	CALL_4
0x30a7	          0x4889c7	                            mov rdi, rax	      1694	channel.c	FUNCTION_50	DO_1	CALL_4
0x30aa	      0xe800000000	                          call 0x40030ef	      1694	channel.c	FUNCTION_50	DO_1	CALL_4
0x30af	        0x488945e8	             mov qword [rbp - 0x18], rax	      1694	channel.c	FUNCTION_50	DO_1	CALL_4
0x30b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1695	channel.c	FUNCTION_50	DO_1	CALL_5
0x30b7	          0x4889c7	                            mov rdi, rax	      1695	channel.c	FUNCTION_50	DO_1	CALL_5
0x30ba	      0xe800000000	                          call 0x40030ff	      1695	channel.c	FUNCTION_50	DO_1	CALL_5
0x30bf	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1696	channel.c	FUNCTION_50	DO_1
0x30c4	            0x75d8	                           jne 0x40030de	      1696	channel.c	FUNCTION_50	DO_1
0x30c6	            0xeb25	                           jmp 0x400312d	      1699	channel.c	FUNCTION_50	WHILE_1
0x30c8	      0x48836de001	               sub qword [rbp - 0x20], 1	      1701	channel.c	FUNCTION_50	WHILE_1
0x30cd	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1702	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1702	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30d5	          0x4801d0	                            add rax, rdx	      1702	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30d8	           0xfb600	                   movzx eax, byte [rax]	      1702	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30db	            0x84c0	                             test al, al	      1702	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30dd	            0x750e	                           jne 0x400312d	      1702	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30df	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1703	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1703	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30e7	          0x4801d0	                            add rax, rdx	      1703	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30ea	          0xc6000a	                     mov byte [rax], 0xa	      1703	channel.c	FUNCTION_50	WHILE_1	IF_3
0x30ed	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1699	channel.c	FUNCTION_50	WHILE_1
0x30f2	            0x75d4	                           jne 0x4003108	      1699	channel.c	FUNCTION_50	WHILE_1
0x30f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	channel.c	FUNCTION_50
0x30f8	              0xc9	                                   leave	      1707	channel.c	FUNCTION_50
0x30f9	              0xc3	                                     ret	      1707	channel.c	FUNCTION_50
invoke_one_time_callback	functions,0:SWITCH,0:CALL,5:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	40
0x470f	              0x55	                                push rbp	      2333	channel.c	FUNCTION_61
0x4710	          0x4889e5	                            mov rbp, rsp	      2333	channel.c	FUNCTION_61
0x4713	        0x4883ec20	                           sub rsp, 0x20	      2333	channel.c	FUNCTION_61
0x4717	        0x48897df8	                mov qword [rbp - 8], rdi	      2333	channel.c	FUNCTION_61
0x471b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2333	channel.c	FUNCTION_61
0x471f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2333	channel.c	FUNCTION_61
0x4723	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2333	channel.c	FUNCTION_61
0x4727	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2335	channel.c	FUNCTION_61
0x472b	          0x488b10	                    mov rdx, qword [rax]	      2335	channel.c	FUNCTION_61
0x472e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2334	channel.c	FUNCTION_61	CALL_1
0x4732	      0xbe00000000	                              mov esi, 0	      2334	channel.c	FUNCTION_61	CALL_1
0x4737	          0x4889c7	                            mov rdi, rax	      2334	channel.c	FUNCTION_61	CALL_1
0x473a	      0xb800000000	                              mov eax, 0	      2334	channel.c	FUNCTION_61	CALL_1
0x473f	      0xe800000000	                          call 0x4004784	      2334	channel.c	FUNCTION_61	CALL_1
0x4744	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2338	channel.c	FUNCTION_61	CALL_2
0x4748	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2338	channel.c	FUNCTION_61	CALL_2
0x474c	          0x4889d6	                            mov rsi, rdx	      2338	channel.c	FUNCTION_61	CALL_2
0x474f	          0x4889c7	                            mov rdi, rax	      2338	channel.c	FUNCTION_61	CALL_2
0x4752	      0xe806f5ffff	                 call sym.remove_cb_node	      2338	channel.c	FUNCTION_61	CALL_2
0x4757	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2339	channel.c	FUNCTION_61	CALL_3
0x475b	        0x488b5008	                mov rdx, qword [rax + 8]	      2339	channel.c	FUNCTION_61	CALL_3
0x475f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2339	channel.c	FUNCTION_61	CALL_3
0x4763	          0x488b30	                    mov rsi, qword [rax]	      2339	channel.c	FUNCTION_61	CALL_3
0x4766	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2339	channel.c	FUNCTION_61	CALL_3
0x476a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2339	channel.c	FUNCTION_61	CALL_3
0x476e	          0x4889c7	                            mov rdi, rax	      2339	channel.c	FUNCTION_61	CALL_3
0x4771	      0xe804e6ffff	                call sym.invoke_callback	      2339	channel.c	FUNCTION_61	CALL_3
0x4776	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2340	channel.c	FUNCTION_61	CALL_4
0x477a	        0x488b5008	                mov rdx, qword [rax + 8]	      2340	channel.c	FUNCTION_61	CALL_4
0x477e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2340	channel.c	FUNCTION_61	CALL_4
0x4782	          0x488b00	                    mov rax, qword [rax]	      2340	channel.c	FUNCTION_61	CALL_4
0x4785	          0x4889d6	                            mov rsi, rdx	      2340	channel.c	FUNCTION_61	CALL_4
0x4788	          0x4889c7	                            mov rdi, rax	      2340	channel.c	FUNCTION_61	CALL_4
0x478b	      0xe800000000	                          call 0x40047d0	      2340	channel.c	FUNCTION_61	CALL_4
0x4790	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2341	channel.c	FUNCTION_61	CALL_5
0x4794	          0x4889c7	                            mov rdi, rax	      2341	channel.c	FUNCTION_61	CALL_5
0x4797	      0xe800000000	                          call 0x40047dc	      2341	channel.c	FUNCTION_61	CALL_5
0x479c	              0x90	                                     nop	      2342	channel.c	FUNCTION_61
0x479d	              0xc9	                                   leave	      2342	channel.c	FUNCTION_61
0x479e	              0xc3	                                     ret	      2342	channel.c	FUNCTION_61
channel_write_input	functions,0:SWITCH,0:CALL,3:ELSE,2:IF,3:FOR,0:WHILE,0:DO,0	38
0x2b3b	              0x55	                                push rbp	      1511	channel.c	FUNCTION_43
0x2b3c	          0x4889e5	                            mov rbp, rsp	      1511	channel.c	FUNCTION_43
0x2b3f	        0x4883ec20	                           sub rsp, 0x20	      1511	channel.c	FUNCTION_43
0x2b43	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1511	channel.c	FUNCTION_43
0x2b47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1512	channel.c	FUNCTION_43
0x2b4b	    0x480548030000	                          add rax, 0x348	      1512	channel.c	FUNCTION_43
0x2b51	        0x488945f8	                mov qword [rbp - 8], rax	      1512	channel.c	FUNCTION_43
0x2b55	        0x488b45f8	                mov rax, qword [rbp - 8]	      1514	channel.c	FUNCTION_43	IF_1
0x2b59	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1514	channel.c	FUNCTION_43	IF_1
0x2b60	          0x4885c0	                           test rax, rax	      1514	channel.c	FUNCTION_43	IF_1
0x2b63	            0x7423	                            je 0x4002bc8	      1514	channel.c	FUNCTION_43	IF_1
0x2b65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1515	channel.c	FUNCTION_43	CALL_1
0x2b69	    0x41b800000000	                              mov r8d, 0	      1515	channel.c	FUNCTION_43	CALL_1
0x2b6f	      0xb900000000	                              mov ecx, 0	      1515	channel.c	FUNCTION_43	CALL_1
0x2b74	      0xba00000000	                              mov edx, 0	      1515	channel.c	FUNCTION_43	CALL_1
0x2b79	      0xbe03000000	                              mov esi, 3	      1515	channel.c	FUNCTION_43	CALL_1
0x2b7e	          0x4889c7	                            mov rdi, rax	      1515	channel.c	FUNCTION_43	CALL_1
0x2b81	      0xe800000000	                          call 0x4002bc6	      1515	channel.c	FUNCTION_43	CALL_1
0x2b86	            0xeb3f	                           jmp 0x4002c07	      1523	channel.c	FUNCTION_43
0x2b88	        0x488b45f8	                mov rax, qword [rbp - 8]	      1516	channel.c	FUNCTION_43	ELSE_1	IF_2
0x2b8c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1516	channel.c	FUNCTION_43	ELSE_1	IF_2
0x2b93	          0x4885c0	                           test rax, rax	      1516	channel.c	FUNCTION_43	ELSE_1	IF_2
0x2b96	            0x742f	                            je 0x4002c07	      1516	channel.c	FUNCTION_43	ELSE_1	IF_2
0x2b98	        0x488b45f8	                mov rax, qword [rbp - 8]	      1518	channel.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x2b9c	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1518	channel.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x2ba2	            0x85c0	                           test eax, eax	      1518	channel.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x2ba4	            0x7415	                            je 0x4002bfb	      1518	channel.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x2ba6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1519	channel.c	FUNCTION_43	ELSE_1	IF_2	CALL_2
0x2baa	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1519	channel.c	FUNCTION_43	ELSE_1	IF_2	CALL_2
0x2bb1	          0x4889c7	                            mov rdi, rax	      1519	channel.c	FUNCTION_43	ELSE_1	IF_2	CALL_2
0x2bb4	      0xe800000000	                          call 0x4002bf9	      1519	channel.c	FUNCTION_43	ELSE_1	IF_2	CALL_2
0x2bb9	            0xeb0c	                           jmp 0x4002c07	      1523	channel.c	FUNCTION_43
0x2bbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1521	channel.c	FUNCTION_43	ELSE_1	IF_2	CALL_3
0x2bbf	          0x4889c7	                            mov rdi, rax	      1521	channel.c	FUNCTION_43	ELSE_1	IF_2	CALL_3
0x2bc2	      0xe8dcfcffff	               call sym.channel_write_in	      1521	channel.c	FUNCTION_43	ELSE_1	IF_2	CALL_3
0x2bc7	              0x90	                                     nop	      1523	channel.c	FUNCTION_43
0x2bc8	              0xc9	                                   leave	      1523	channel.c	FUNCTION_43
0x2bc9	              0xc3	                                     ret	      1523	channel.c	FUNCTION_43
channel_can_write_to	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	18
0x54c7	              0x55	                                push rbp	      2713	channel.c	FUNCTION_65
0x54c8	          0x4889e5	                            mov rbp, rsp	      2713	channel.c	FUNCTION_65
0x54cb	        0x48897df8	                mov qword [rbp - 8], rdi	      2713	channel.c	FUNCTION_65
0x54cf	      0x48837df800	                  cmp qword [rbp - 8], 0	      2714	channel.c	FUNCTION_65
0x54d4	            0x7422	                            je 0x4005538	      2714	channel.c	FUNCTION_65
0x54d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2714	channel.c	FUNCTION_65
0x54da	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2714	channel.c	FUNCTION_65
0x54dd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2714	channel.c	FUNCTION_65
0x54e0	            0x750f	                           jne 0x4005531	      2714	channel.c	FUNCTION_65
0x54e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2715	channel.c	FUNCTION_65
0x54e6	    0x8b8048030000	           mov eax, dword [rax + 0x348] 	      2715	channel.c	FUNCTION_65
0x54ec	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2715	channel.c	FUNCTION_65
0x54ef	            0x7407	                            je 0x4005538	      2715	channel.c	FUNCTION_65
0x54f1	      0xb801000000	                              mov eax, 1	      2714	channel.c	FUNCTION_65
0x54f6	            0xeb05	                           jmp 0x400553d	      2714	channel.c	FUNCTION_65
0x54f8	      0xb800000000	                              mov eax, 0	      2714	channel.c	FUNCTION_65
0x54fd	              0x5d	                                 pop rbp	      2716	channel.c	FUNCTION_65
0x54fe	              0xc3	                                     ret	      2716	channel.c	FUNCTION_65
job_channel_still_useful	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	19
0xa60a	              0x55	                                push rbp	      5112	channel.c	FUNCTION_117
0xa60b	          0x4889e5	                            mov rbp, rsp	      5112	channel.c	FUNCTION_117
0xa60e	        0x4883ec08	                              sub rsp, 8	      5112	channel.c	FUNCTION_117
0xa612	        0x48897df8	                mov qword [rbp - 8], rdi	      5112	channel.c	FUNCTION_117
0xa616	        0x488b45f8	                mov rax, qword [rbp - 8]	      5113	channel.c	FUNCTION_117	CALL_1
0xa61a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5113	channel.c	FUNCTION_117	CALL_1
0xa61e	          0x4885c0	                           test rax, rax	      5113	channel.c	FUNCTION_117	CALL_1
0xa621	            0x741b	                            je 0x400a67e	      5113	channel.c	FUNCTION_117	CALL_1
0xa623	        0x488b45f8	                mov rax, qword [rbp - 8]	      5113	channel.c	FUNCTION_117	CALL_1
0xa627	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5113	channel.c	FUNCTION_117	CALL_1
0xa62b	          0x4889c7	                            mov rdi, rax	      5113	channel.c	FUNCTION_117	CALL_1
0xa62e	      0xe8f65effff	           call sym.channel_still_useful	      5113	channel.c	FUNCTION_117	CALL_1
0xa633	            0x85c0	                           test eax, eax	      5113	channel.c	FUNCTION_117	CALL_1
0xa635	            0x7407	                            je 0x400a67e	      5113	channel.c	FUNCTION_117	CALL_1
0xa637	      0xb801000000	                              mov eax, 1	      5113	channel.c	FUNCTION_117	CALL_1
0xa63c	            0xeb05	                           jmp 0x400a683	      5113	channel.c	FUNCTION_117	CALL_1
0xa63e	      0xb800000000	                              mov eax, 0	      5113	channel.c	FUNCTION_117	CALL_1
0xa643	              0xc9	                                   leave	      5114	channel.c	FUNCTION_117
0xa644	              0xc3	                                     ret	      5114	channel.c	FUNCTION_117
channel_close_in	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	11
0x5d97	              0x55	                                push rbp	      2956	channel.c	FUNCTION_72
0x5d98	          0x4889e5	                            mov rbp, rsp	      2956	channel.c	FUNCTION_72
0x5d9b	        0x4883ec10	                           sub rsp, 0x10	      2956	channel.c	FUNCTION_72
0x5d9f	        0x48897df8	                mov qword [rbp - 8], rdi	      2956	channel.c	FUNCTION_72
0x5da3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2957	channel.c	FUNCTION_72	CALL_1
0x5da7	      0xbe03000000	                              mov esi, 3	      2957	channel.c	FUNCTION_72	CALL_1
0x5dac	          0x4889c7	                            mov rdi, rax	      2957	channel.c	FUNCTION_72	CALL_1
0x5daf	      0xe855bbffff	                  call sym.ch_close_part	      2957	channel.c	FUNCTION_72	CALL_1
0x5db4	              0x90	                                     nop	      2958	channel.c	FUNCTION_72
0x5db5	              0xc9	                                   leave	      2958	channel.c	FUNCTION_72
0x5db6	              0xc3	                                     ret	      2958	channel.c	FUNCTION_72
channel_send	functions,0:SWITCH,0:CALL,27:ELSE,7:IF,22:FOR,1:WHILE,0:DO,0	331
0x709f	              0x55	                                push rbp	      3701	channel.c	FUNCTION_90
0x70a0	          0x4889e5	                            mov rbp, rsp	      3701	channel.c	FUNCTION_90
0x70a3	        0x4883ec60	                           sub rsp, 0x60	      3701	channel.c	FUNCTION_90
0x70a7	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3701	channel.c	FUNCTION_90
0x70ab	          0x8975b4	             mov dword [rbp - 0x4c], esi	      3701	channel.c	FUNCTION_90
0x70ae	        0x488955a8	             mov qword [rbp - 0x58], rdx	      3701	channel.c	FUNCTION_90
0x70b2	          0x894db0	             mov dword [rbp - 0x50], ecx	      3701	channel.c	FUNCTION_90
0x70b5	        0x4c8945a0	              mov qword [rbp - 0x60], r8	      3701	channel.c	FUNCTION_90
0x70b9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3704	channel.c	FUNCTION_90
0x70bc	        0x48c1e004	                              shl rax, 4	      3704	channel.c	FUNCTION_90
0x70c0	          0x4889c2	                            mov rdx, rax	      3704	channel.c	FUNCTION_90
0x70c3	        0x48c1e204	                              shl rdx, 4	      3704	channel.c	FUNCTION_90
0x70c7	          0x4801d0	                            add rax, rdx	      3704	channel.c	FUNCTION_90
0x70ca	        0x488d5010	                   lea rdx, [rax + 0x10]	      3704	channel.c	FUNCTION_90
0x70ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3704	channel.c	FUNCTION_90
0x70d2	          0x4801d0	                            add rax, rdx	      3704	channel.c	FUNCTION_90
0x70d5	        0x4883c008	                              add rax, 8	      3704	channel.c	FUNCTION_90
0x70d9	        0x488945d8	             mov qword [rbp - 0x28], rax	      3704	channel.c	FUNCTION_90
0x70dd	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3705	channel.c	FUNCTION_90
0x70e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3707	channel.c	FUNCTION_90
0x70e8	            0x8b00	                    mov eax, dword [rax]	      3707	channel.c	FUNCTION_90
0x70ea	          0x8945cc	             mov dword [rbp - 0x34], eax	      3707	channel.c	FUNCTION_90
0x70ed	        0x837dccff	cmp dword [rbp - 0x34], 0xffffffffffffffff	      3708	channel.c	FUNCTION_90	IF_1
0x70f1	            0x7563	                           jne 0x4007196	      3708	channel.c	FUNCTION_90	IF_1
0x70f3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3710	channel.c	FUNCTION_90	IF_1	IF_2
0x70f7	    0x8b8074040000	           mov eax, dword [rax + 0x474] 	      3710	channel.c	FUNCTION_90	IF_1	IF_2
0x70fd	            0x85c0	                           test eax, eax	      3710	channel.c	FUNCTION_90	IF_1	IF_2
0x70ff	            0x753d	                           jne 0x400717e	      3710	channel.c	FUNCTION_90	IF_1	IF_2
0x7101	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3710	channel.c	FUNCTION_90	IF_1	IF_2
0x7106	            0x7436	                            je 0x400717e	      3710	channel.c	FUNCTION_90	IF_1	IF_2
0x7108	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3712	channel.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x710c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3712	channel.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x7110	      0xbe00000000	                              mov esi, 0	      3712	channel.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x7115	          0x4889c7	                            mov rdi, rax	      3712	channel.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x7118	      0xb800000000	                              mov eax, 0	      3712	channel.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x711d	      0xe8ba91ffff	                       call sym.ch_error	      3712	channel.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x7122	      0xbf00000000	                              mov edi, 0	      3713	channel.c	FUNCTION_90	IF_1	IF_2	CALL_3
0x7127	      0xe800000000	                          call 0x400716c	      3713	channel.c	FUNCTION_90	IF_1	IF_2	CALL_3
0x712c	          0x4889c2	                            mov rdx, rax	      3713	channel.c	FUNCTION_90	IF_1	IF_2	CALL_3
0x712f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3713	channel.c	FUNCTION_90	IF_1	IF_2	CALL_3
0x7133	          0x4889c6	                            mov rsi, rax	      3713	channel.c	FUNCTION_90	IF_1	IF_2	CALL_3
0x7136	          0x4889d7	                            mov rdi, rdx	      3713	channel.c	FUNCTION_90	IF_1	IF_2	CALL_3
0x7139	      0xe800000000	                          call 0x400717e	      3713	channel.c	FUNCTION_90	IF_1	IF_2	CALL_3
0x713e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3715	channel.c	FUNCTION_90	IF_1
0x7142	    0xc78074040000	              mov dword [rax + 0x474], 1	      3715	channel.c	FUNCTION_90	IF_1
0x714c	      0xb800000000	                              mov eax, 0	      3716	channel.c	FUNCTION_90	IF_1
0x7151	      0xe92a040000	                           jmp 0x40075c0	      3716	channel.c	FUNCTION_90	IF_1
0x7156	      0xe800000000	                          call 0x400719b	      3719	channel.c	FUNCTION_90	IF_3	CALL_4
0x715b	            0x85c0	                           test eax, eax	      3719	channel.c	FUNCTION_90	IF_3	CALL_4
0x715d	     0xf8483000000	                            je 0x4007226	      3719	channel.c	FUNCTION_90	IF_3	CALL_4
0x7163	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3721	channel.c	FUNCTION_90	IF_3	CALL_5
0x7167	          0x4889c6	                            mov rsi, rax	      3721	channel.c	FUNCTION_90	IF_3	CALL_5
0x716a	      0xbf00000000	                              mov edi, 0	      3721	channel.c	FUNCTION_90	IF_3	CALL_5
0x716f	      0xe8708fffff	                    call sym.ch_log_lead	      3721	channel.c	FUNCTION_90	IF_3	CALL_5
0x7174	    0x488b05000000	            mov rax, qword [0x040071bb] 	      3722	channel.c	FUNCTION_90	IF_3	CALL_6
0x717b	          0x4889c6	                            mov rsi, rax	      3722	channel.c	FUNCTION_90	IF_3	CALL_6
0x717e	      0xbf27000000	                           mov edi, 0x27	      3722	channel.c	FUNCTION_90	IF_3	CALL_6
0x7183	      0xe800000000	                          call 0x40071c8	      3722	channel.c	FUNCTION_90	IF_3	CALL_6
0x7188	    0x488b15000000	            mov rdx, qword [0x040071cf] 	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x718f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x7192	          0x4863f0	                         movsxd rsi, eax	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x7195	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x7199	          0x4889d1	                            mov rcx, rdx	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x719c	      0xba01000000	                              mov edx, 1	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x71a1	          0x4889c7	                            mov rdi, rax	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x71a4	      0xe800000000	                          call 0x40071e9	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x71a9	    0x890500000000	            mov dword [0x040071ef], eax 	      3723	channel.c	FUNCTION_90	IF_3	CALL_7
0x71af	    0x488b05000000	            mov rax, qword [0x040071f6] 	      3724	channel.c	FUNCTION_90	IF_3	CALL_8
0x71b6	          0x4889c1	                            mov rcx, rax	      3724	channel.c	FUNCTION_90	IF_3	CALL_8
0x71b9	      0xba02000000	                              mov edx, 2	      3724	channel.c	FUNCTION_90	IF_3	CALL_8
0x71be	      0xbe01000000	                              mov esi, 1	      3724	channel.c	FUNCTION_90	IF_3	CALL_8
0x71c3	      0xbf00000000	                              mov edi, 0	      3724	channel.c	FUNCTION_90	IF_3	CALL_8
0x71c8	      0xe800000000	                          call 0x400720d	      3724	channel.c	FUNCTION_90	IF_3	CALL_8
0x71cd	    0x488b05000000	            mov rax, qword [0x04007214] 	      3725	channel.c	FUNCTION_90	IF_3	CALL_9
0x71d4	          0x4889c7	                            mov rdi, rax	      3725	channel.c	FUNCTION_90	IF_3	CALL_9
0x71d7	      0xe800000000	                          call 0x400721c	      3725	channel.c	FUNCTION_90	IF_3	CALL_9
0x71dc	    0xc70500000000	               mov dword [0x04007226], 1	      3726	channel.c	FUNCTION_90	IF_3
0x71e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3731	channel.c	FUNCTION_90	FOR_1
0x71ea	        0x4883e880	             sub rax, 0xffffffffffffff80	      3731	channel.c	FUNCTION_90	FOR_1
0x71ee	        0x488945e0	             mov qword [rbp - 0x20], rax	      3731	channel.c	FUNCTION_90	FOR_1
0x71f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3735	channel.c	FUNCTION_90	FOR_1	IF_4
0x71f6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3735	channel.c	FUNCTION_90	FOR_1	IF_4
0x71fa	          0x4885c0	                           test rax, rax	      3735	channel.c	FUNCTION_90	FOR_1	IF_4
0x71fd	            0x7426	                            je 0x4007265	      3735	channel.c	FUNCTION_90	FOR_1	IF_4
0x71ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3738	channel.c	FUNCTION_90	FOR_1	IF_4
0x7203	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3738	channel.c	FUNCTION_90	FOR_1	IF_4
0x7207	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3738	channel.c	FUNCTION_90	FOR_1	IF_4
0x720b	        0x488945d0	             mov qword [rbp - 0x30], rax	      3738	channel.c	FUNCTION_90	FOR_1	IF_4
0x720f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3739	channel.c	FUNCTION_90	FOR_1	IF_4
0x7213	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3739	channel.c	FUNCTION_90	FOR_1	IF_4
0x7217	            0x8b00	                    mov eax, dword [rax]	      3739	channel.c	FUNCTION_90	FOR_1	IF_4
0x7219	          0x8945c8	             mov dword [rbp - 0x38], eax	      3739	channel.c	FUNCTION_90	FOR_1	IF_4
0x721c	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      3740	channel.c	FUNCTION_90	FOR_1	IF_4
0x7223	            0xeb1e	                           jmp 0x4007283	      3740	channel.c	FUNCTION_90	FOR_1	IF_4
0x7225	        0x837db000	               cmp dword [rbp - 0x50], 0	      3744	channel.c	FUNCTION_90	FOR_1	ELSE_1	IF_5
0x7229	            0x750a	                           jne 0x4007275	      3744	channel.c	FUNCTION_90	FOR_1	ELSE_1	IF_5
0x722b	      0xb801000000	                              mov eax, 1	      3746	channel.c	FUNCTION_90	FOR_1	ELSE_1	IF_5
0x7230	      0xe94b030000	                           jmp 0x40075c0	      3746	channel.c	FUNCTION_90	FOR_1	ELSE_1	IF_5
0x7235	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3747	channel.c	FUNCTION_90	FOR_1	ELSE_1
0x7239	        0x488945d0	             mov qword [rbp - 0x30], rax	      3747	channel.c	FUNCTION_90	FOR_1	ELSE_1
0x723d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3748	channel.c	FUNCTION_90	FOR_1	ELSE_1
0x7240	          0x8945c8	             mov dword [rbp - 0x38], eax	      3748	channel.c	FUNCTION_90	FOR_1	ELSE_1
0x7243	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3751	channel.c	FUNCTION_90	FOR_1	IF_6
0x7247	            0x751c	                           jne 0x40072a5	      3751	channel.c	FUNCTION_90	FOR_1	IF_6
0x7249	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x724c	          0x4863d0	                         movsxd rdx, eax	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x724f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x7253	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x7256	          0x4889ce	                            mov rsi, rcx	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x7259	            0x89c7	                            mov edi, eax	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x725b	      0xe800000000	                          call 0x40072a0	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x7260	          0x8945c0	             mov dword [rbp - 0x40], eax	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x7263	            0xeb1a	                           jmp 0x40072bf	      3752	channel.c	FUNCTION_90	FOR_1	CALL_10
0x7265	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x7268	          0x4863d0	                         movsxd rdx, eax	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x726b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x726f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x7272	          0x4889ce	                            mov rsi, rcx	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x7275	            0x89c7	                            mov edi, eax	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x7277	      0xe800000000	                          call 0x40072bc	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x727c	          0x8945c0	             mov dword [rbp - 0x40], eax	      3755	channel.c	FUNCTION_90	FOR_1	ELSE_2	CALL_11
0x727f	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3765	channel.c	FUNCTION_90	FOR_1	IF_8
0x7283	            0x791f	                           jns 0x40072e4	      3765	channel.c	FUNCTION_90	FOR_1	IF_8
0x7285	      0xe800000000	                          call 0x40072ca	      3765	channel.c	FUNCTION_90	FOR_1	IF_8
0x728a	            0x8b00	                    mov eax, dword [rax]	      3765	channel.c	FUNCTION_90	FOR_1	IF_8
0x728c	          0x83f80b	                            cmp eax, 0xb	      3765	channel.c	FUNCTION_90	FOR_1	IF_8
0x728f	            0x740c	                            je 0x40072dd	      3765	channel.c	FUNCTION_90	FOR_1	IF_8
0x7291	      0xe800000000	                          call 0x40072d6	      3767	channel.c	FUNCTION_90	FOR_1	IF_8
0x7296	            0x8b00	                    mov eax, dword [rax]	      3767	channel.c	FUNCTION_90	FOR_1	IF_8
0x7298	          0x83f80b	                            cmp eax, 0xb	      3767	channel.c	FUNCTION_90	FOR_1	IF_8
0x729b	            0x7507	                           jne 0x40072e4	      3767	channel.c	FUNCTION_90	FOR_1	IF_8
0x729d	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      3770	channel.c	FUNCTION_90	FOR_1	IF_8
0x72a4	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3772	channel.c	FUNCTION_90	FOR_1	IF_9
0x72a8	     0xf8856020000	                            js 0x4007544	      3772	channel.c	FUNCTION_90	FOR_1	IF_9
0x72ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3772	channel.c	FUNCTION_90	FOR_1	IF_9
0x72b2	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3772	channel.c	FUNCTION_90	FOR_1	IF_9
0x72b5	            0x85c0	                           test eax, eax	      3772	channel.c	FUNCTION_90	FOR_1	IF_9
0x72b7	     0xf8447020000	                            je 0x4007544	      3772	channel.c	FUNCTION_90	FOR_1	IF_9
0x72bd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3774	channel.c	FUNCTION_90	FOR_1	IF_9
0x72c1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3774	channel.c	FUNCTION_90	FOR_1	IF_9
0x72c5	        0x488945e8	             mov qword [rbp - 0x18], rax	      3774	channel.c	FUNCTION_90	FOR_1	IF_9
0x72c9	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3776	channel.c	FUNCTION_90	FOR_1	IF_9	IF_10
0x72cd	            0x7419	                            je 0x4007328	      3776	channel.c	FUNCTION_90	FOR_1	IF_9	IF_10
0x72cf	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3777	channel.c	FUNCTION_90	FOR_1	IF_9	CALL_14
0x72d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3777	channel.c	FUNCTION_90	FOR_1	IF_9	CALL_14
0x72d6	      0xbe00000000	                              mov esi, 0	      3777	channel.c	FUNCTION_90	FOR_1	IF_9	CALL_14
0x72db	          0x4889c7	                            mov rdi, rax	      3777	channel.c	FUNCTION_90	FOR_1	IF_9	CALL_14
0x72de	      0xb800000000	                              mov eax, 0	      3777	channel.c	FUNCTION_90	FOR_1	IF_9	CALL_14
0x72e3	      0xe800000000	                          call 0x4007328	      3777	channel.c	FUNCTION_90	FOR_1	IF_9	CALL_14
0x72e8	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3778	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11
0x72eb	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      3778	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11
0x72ee	            0x7544	                           jne 0x4007374	      3778	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11
0x72f0	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3781	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_12
0x72f5	            0x7418	                            je 0x400734f	      3781	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_12
0x72f7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3784	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_12	CALL_15
0x72fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3784	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_12	CALL_15
0x72ff	          0x4889d6	                            mov rsi, rdx	      3784	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_12	CALL_15
0x7302	          0x4889c7	                            mov rdi, rax	      3784	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_12	CALL_15
0x7305	      0xe8adeaffff	           call sym.remove_from_writeque	      3784	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_12	CALL_15
0x730a	      0xe9d7feffff	                           jmp 0x4007226	      3865	channel.c	FUNCTION_90	FOR_1
0x730f	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3787	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_13
0x7313	     0xf8453020000	                            je 0x40075ac	      3787	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	IF_13
0x7319	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3788	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	CALL_16
0x731d	      0xbe00000000	                              mov esi, 0	      3788	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	CALL_16
0x7322	          0x4889c7	                            mov rdi, rax	      3788	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	CALL_16
0x7325	      0xb800000000	                              mov eax, 0	      3788	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	CALL_16
0x732a	      0xe800000000	                          call 0x400736f	      3788	channel.c	FUNCTION_90	FOR_1	IF_9	IF_11	CALL_16
0x732f	      0xe938020000	                           jmp 0x40075ac	      3773	channel.c	FUNCTION_90	FOR_1	IF_9
0x7334	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3793	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14
0x7339	            0x7453	                            je 0x40073ce	      3793	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14
0x733b	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3795	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x733f	            0x7e3d	                           jle 0x40073be	      3795	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x7341	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7344	          0x2b45c0	             sub eax, dword [rbp - 0x40]	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7347	          0x4863d0	                         movsxd rdx, eax	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x734a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x734e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7352	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7355	            0x4898	                                    cdqe	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7357	          0x4801c1	                            add rcx, rax	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x735a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x735e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7362	          0x4889ce	                            mov rsi, rcx	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7365	          0x4889c7	                            mov rdi, rax	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x7368	      0xe800000000	                          call 0x40073ad	      3798	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15	CALL_17
0x736d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3801	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x7371	            0x8b00	                    mov eax, dword [rax]	      3801	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x7373	          0x2b45c0	             sub eax, dword [rbp - 0x40]	      3801	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x7376	            0x89c2	                            mov edx, eax	      3801	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x7378	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3801	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x737c	            0x8910	                    mov dword [rax], edx	      3801	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14	IF_15
0x737e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3803	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14
0x7382	        0x488945d0	             mov qword [rbp - 0x30], rax	      3803	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14
0x7386	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3804	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14
0x7389	          0x8945c8	             mov dword [rbp - 0x38], eax	      3804	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14
0x738c	            0xeb0f	                           jmp 0x40073dd	      3804	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_14
0x738e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3808	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_4
0x7391	            0x4898	                                    cdqe	      3808	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_4
0x7393	        0x480145d0	            add qword [rbp - 0x30], rax 	      3808	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_4
0x7397	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3809	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_4
0x739a	          0x2945c8	             sub dword [rbp - 0x38], eax	      3809	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_4
0x739d	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3811	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	CALL_18
0x73a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3811	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	CALL_18
0x73a4	      0xbe00000000	                              mov esi, 0	      3811	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	CALL_18
0x73a9	          0x4889c7	                            mov rdi, rax	      3811	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	CALL_18
0x73ac	      0xb800000000	                              mov eax, 0	      3811	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	CALL_18
0x73b1	      0xe800000000	                          call 0x40073f6	      3811	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	CALL_18
0x73b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3815	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73ba	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3815	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73be	          0x4885c0	                           test rax, rax	      3815	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73c1	            0x747a	                            je 0x400747d	      3815	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3816	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73c7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3816	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73cb	            0x8b10	                    mov edx, dword [rax]	      3816	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73cd	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3816	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73d0	             0x1d0	                            add eax, edx	      3816	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73d2	      0x3d9f0f0000	                          cmp eax, 0xf9f	      3816	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73d7	            0x7f64	                            jg 0x400747d	      3816	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3818	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73dd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3818	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73e1	        0x488945f0	             mov qword [rbp - 0x10], rax	      3818	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x73e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3821	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_19
0x73e9	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3821	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_19
0x73ec	            0x89d6	                            mov esi, edx	      3821	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_19
0x73ee	          0x4889c7	                            mov rdi, rax	      3821	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_19
0x73f1	      0xe800000000	                          call 0x4007436	      3821	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_19
0x73f6	          0x83f801	                              cmp eax, 1	      3821	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_19
0x73f9	     0xf8502010000	                           jne 0x4007541	      3821	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_19
0x73ff	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7402	          0x4863d0	                         movsxd rdx, eax	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7405	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7409	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x740d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7411	            0x8b00	                    mov eax, dword [rax]	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7413	            0x4898	                                    cdqe	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7415	          0x4801c1	                            add rcx, rax	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7418	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x741c	          0x4889c6	                            mov rsi, rax	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x741f	          0x4889cf	                            mov rdi, rcx	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7422	      0xe800000000	                          call 0x4007467	      3823	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17	CALL_20
0x7427	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3826	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x742b	            0x8b10	                    mov edx, dword [rax]	      3826	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x742d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3826	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x7430	             0x1c2	                            add edx, eax	      3826	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x7432	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3826	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x7436	            0x8910	                    mov dword [rax], edx	      3826	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16	IF_17
0x7438	      0xe9c4000000	                           jmp 0x4007541	      3817	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x743d	      0xbf28000000	                           mov edi, 0x28	      3831	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_21
0x7442	      0xe800000000	                          call 0x4007487	      3831	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_21
0x7447	        0x488945f8	                mov qword [rbp - 8], rax	      3831	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	CALL_21
0x744b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3833	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x7450	     0xf8416010000	                            je 0x40075ac	      3833	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x7456	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3835	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x745a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3835	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x745e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3835	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x7462	        0x48895020	             mov qword [rax + 0x20], rdx	      3835	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x7466	        0x488b45f8	                mov rax, qword [rbp - 8]	      3836	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x746a	    0x48c740180000	               mov qword [rax + 0x18], 0	      3836	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x7472	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3837	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x7476	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3837	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x747a	          0x4885c0	                           test rax, rax	      3837	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x747d	            0x750e	                           jne 0x40074cd	      3837	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x747f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3838	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x7483	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3838	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x7487	        0x48895018	             mov qword [rax + 0x18], rdx	      3838	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x748b	            0xeb10	                           jmp 0x40074dd	      3838	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_19
0x748d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3840	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x7491	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3840	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x7495	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3840	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x7499	        0x48895018	             mov qword [rax + 0x18], rdx	      3840	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	ELSE_6
0x749d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3841	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x74a1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3841	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x74a5	        0x48895020	             mov qword [rax + 0x20], rdx	      3841	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18
0x74a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3842	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_22
0x74ad	      0xbae8030000	                          mov edx, 0x3e8	      3842	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_22
0x74b2	      0xbe01000000	                              mov esi, 1	      3842	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_22
0x74b7	          0x4889c7	                            mov rdi, rax	      3842	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_22
0x74ba	      0xe800000000	                          call 0x40074ff	      3842	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	CALL_22
0x74bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3843	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_23
0x74c3	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3843	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_23
0x74c6	            0x89d6	                            mov esi, edx	      3843	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_23
0x74c8	          0x4889c7	                            mov rdi, rax	      3843	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_23
0x74cb	      0xe800000000	                          call 0x4007510	      3843	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_23
0x74d0	          0x83f801	                              cmp eax, 1	      3843	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_23
0x74d3	     0xf8593000000	                           jne 0x40075ac	      3843	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_23
0x74d9	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74dc	          0x4863d0	                         movsxd rdx, eax	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74df	        0x488b45f8	                mov rax, qword [rbp - 8]	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74e7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74eb	          0x4889ce	                            mov rsi, rcx	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74ee	          0x4889c7	                            mov rdi, rax	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74f1	      0xe800000000	                          call 0x4007536	      3845	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20	CALL_24
0x74f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3846	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x74fa	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3846	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x74fd	            0x8910	                    mov dword [rax], edx	      3846	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	ELSE_5	IF_18	IF_20
0x74ff	            0xeb6b	                           jmp 0x40075ac	      3773	channel.c	FUNCTION_90	FOR_1	IF_9
0x7501	              0x90	                                     nop	      3817	channel.c	FUNCTION_90	FOR_1	IF_9	ELSE_3	IF_16
0x7502	            0xeb68	                           jmp 0x40075ac	      3773	channel.c	FUNCTION_90	FOR_1	IF_9
0x7504	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3852	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21
0x7507	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      3852	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21
0x750a	            0x7461	                            je 0x40075ad	      3852	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21
0x750c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3854	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22
0x7510	    0x8b8074040000	           mov eax, dword [rax + 0x474] 	      3854	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22
0x7516	            0x85c0	                           test eax, eax	      3854	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22
0x7518	            0x753d	                           jne 0x4007597	      3854	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22
0x751a	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3854	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22
0x751f	            0x7436	                            je 0x4007597	      3854	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22
0x7521	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3856	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x7525	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3856	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x7529	      0xbe00000000	                              mov esi, 0	      3856	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x752e	          0x4889c7	                            mov rdi, rax	      3856	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x7531	      0xb800000000	                              mov eax, 0	      3856	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x7536	      0xe8a18dffff	                       call sym.ch_error	      3856	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_25
0x753b	      0xbf00000000	                              mov edi, 0	      3857	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_27
0x7540	      0xe800000000	                          call 0x4007585	      3857	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_27
0x7545	          0x4889c2	                            mov rdx, rax	      3857	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_27
0x7548	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3857	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_27
0x754c	          0x4889c6	                            mov rsi, rax	      3857	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_27
0x754f	          0x4889d7	                            mov rdi, rdx	      3857	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_27
0x7552	      0xe800000000	                          call 0x4007597	      3857	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21	IF_22	CALL_27
0x7557	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3859	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21
0x755b	    0xc78074040000	              mov dword [rax + 0x474], 1	      3859	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21
0x7565	      0xb800000000	                              mov eax, 0	      3860	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21
0x756a	            0xeb14	                           jmp 0x40075c0	      3860	channel.c	FUNCTION_90	FOR_1	ELSE_7	IF_21
0x756c	              0x90	                                     nop	      3773	channel.c	FUNCTION_90	FOR_1	IF_9
0x756d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3863	channel.c	FUNCTION_90	FOR_1
0x7571	    0xc78074040000	              mov dword [rax + 0x474], 0	      3863	channel.c	FUNCTION_90	FOR_1
0x757b	      0xb801000000	                              mov eax, 1	      3864	channel.c	FUNCTION_90	FOR_1
0x7580	              0xc9	                                   leave	      3866	channel.c	FUNCTION_90
0x7581	              0xc3	                                     ret	      3866	channel.c	FUNCTION_90
channel_any_readahead	functions,0:SWITCH,0:CALL,1:ELSE,1:IF,2:FOR,0:WHILE,1:DO,0	29
0x80e9	              0x55	                                push rbp	      4310	channel.c	FUNCTION_99
0x80ea	          0x4889e5	                            mov rbp, rsp	      4310	channel.c	FUNCTION_99
0x80ed	        0x4883ec10	                           sub rsp, 0x10	      4310	channel.c	FUNCTION_99
0x80f1	    0x488b05000000	            mov rax, qword [0x04008138] 	      4311	channel.c	FUNCTION_99
0x80f8	        0x488945f8	                mov qword [rbp - 8], rax	      4311	channel.c	FUNCTION_99
0x80fc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4312	channel.c	FUNCTION_99
0x8103	            0xeb3a	                           jmp 0x400817f	      4314	channel.c	FUNCTION_99	WHILE_1
0x8105	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4316	channel.c	FUNCTION_99	WHILE_1	IF_1	CALL_1
0x8108	        0x488b45f8	                mov rax, qword [rbp - 8]	      4316	channel.c	FUNCTION_99	WHILE_1	IF_1	CALL_1
0x810c	            0x89d6	                            mov esi, edx	      4316	channel.c	FUNCTION_99	WHILE_1	IF_1	CALL_1
0x810e	          0x4889c7	                            mov rdi, rax	      4316	channel.c	FUNCTION_99	WHILE_1	IF_1	CALL_1
0x8111	      0xe800000000	                          call 0x4008156	      4316	channel.c	FUNCTION_99	WHILE_1	IF_1	CALL_1
0x8116	            0x85c0	                           test eax, eax	      4316	channel.c	FUNCTION_99	WHILE_1	IF_1	CALL_1
0x8118	            0x7407	                            je 0x4008161	      4316	channel.c	FUNCTION_99	WHILE_1	IF_1	CALL_1
0x811a	      0xb801000000	                              mov eax, 1	      4317	channel.c	FUNCTION_99	WHILE_1	IF_1
0x811f	            0xeb2a	                           jmp 0x400818b	      4317	channel.c	FUNCTION_99	WHILE_1	IF_1
0x8121	        0x837df401	                cmp dword [rbp - 0xc], 1	      4318	channel.c	FUNCTION_99	WHILE_1	IF_2
0x8125	            0x7706	                            ja 0x400816d	      4318	channel.c	FUNCTION_99	WHILE_1	IF_2
0x8127	        0x8345f401	                add dword [rbp - 0xc], 1	      4319	channel.c	FUNCTION_99	WHILE_1	IF_2
0x812b	            0xeb12	                           jmp 0x400817f	      4319	channel.c	FUNCTION_99	WHILE_1	IF_2
0x812d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4322	channel.c	FUNCTION_99	WHILE_1	ELSE_1
0x8131	          0x488b00	                    mov rax, qword [rax]	      4322	channel.c	FUNCTION_99	WHILE_1	ELSE_1
0x8134	        0x488945f8	                mov qword [rbp - 8], rax	      4322	channel.c	FUNCTION_99	WHILE_1	ELSE_1
0x8138	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4323	channel.c	FUNCTION_99	WHILE_1	ELSE_1
0x813f	      0x48837df800	                  cmp qword [rbp - 8], 0	      4314	channel.c	FUNCTION_99	WHILE_1
0x8144	            0x75bf	                           jne 0x4008145	      4314	channel.c	FUNCTION_99	WHILE_1
0x8146	      0xb800000000	                              mov eax, 0	      4326	channel.c	FUNCTION_99
0x814b	              0xc9	                                   leave	      4327	channel.c	FUNCTION_99
0x814c	              0xc3	                                     ret	      4327	channel.c	FUNCTION_99
set_ref_in_job	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	45
0xabb7	              0x55	                                push rbp	      5312	channel.c	FUNCTION_124
0xabb8	          0x4889e5	                            mov rbp, rsp	      5312	channel.c	FUNCTION_124
0xabbb	        0x4883ec40	                           sub rsp, 0x40	      5312	channel.c	FUNCTION_124
0xabbf	          0x897dcc	             mov dword [rbp - 0x34], edi	      5312	channel.c	FUNCTION_124
0xabc2	    0x64488b042528	                mov rax, qword fs:[0x28]	      5312	channel.c	FUNCTION_124
0xabcb	        0x488945f8	                mov qword [rbp - 8], rax	      5312	channel.c	FUNCTION_124
0xabcf	            0x31c0	                            xor eax, eax	      5312	channel.c	FUNCTION_124
0xabd1	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5313	channel.c	FUNCTION_124
0xabd8	    0x488b05000000	            mov rax, qword [0x0400ac1f] 	      5317	channel.c	FUNCTION_124	FOR_1
0xabdf	        0x488945d8	             mov qword [rbp - 0x28], rax	      5317	channel.c	FUNCTION_124	FOR_1
0xabe3	            0xeb5c	                           jmp 0x400ac81	      5317	channel.c	FUNCTION_124	FOR_1
0xabe5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5318	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0xabe9	          0x4889c7	                            mov rdi, rax	      5318	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0xabec	      0xe88ffaffff	               call sym.job_still_useful	      5318	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0xabf1	            0x85c0	                           test eax, eax	      5318	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0xabf3	            0x7441	                            je 0x400ac76	      5318	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_1
0xabf5	    0xc745e0090000	               mov dword [rbp - 0x20], 9	      5320	channel.c	FUNCTION_124	FOR_1	IF_1
0xabfc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5321	channel.c	FUNCTION_124	FOR_1	IF_1
0xac00	        0x488945e8	             mov qword [rbp - 0x18], rax	      5321	channel.c	FUNCTION_124	FOR_1	IF_1
0xac04	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac08	            0x751d	                           jne 0x400ac67	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac0a	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac0d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac11	      0xb900000000	                              mov ecx, 0	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac16	      0xba00000000	                              mov edx, 0	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac1b	          0x4889c7	                            mov rdi, rax	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac1e	      0xe800000000	                          call 0x400ac63	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac23	            0x85c0	                           test eax, eax	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac25	            0x7407	                            je 0x400ac6e	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac27	      0xb801000000	                              mov eax, 1	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac2c	            0xeb05	                           jmp 0x400ac73	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac2e	      0xb800000000	                              mov eax, 0	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac33	          0x8945d4	             mov dword [rbp - 0x2c], eax	      5322	channel.c	FUNCTION_124	FOR_1	IF_1	CALL_2
0xac36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5317	channel.c	FUNCTION_124	FOR_1
0xac3a	          0x488b00	                    mov rax, qword [rax]	      5317	channel.c	FUNCTION_124	FOR_1
0xac3d	        0x488945d8	             mov qword [rbp - 0x28], rax	      5317	channel.c	FUNCTION_124	FOR_1
0xac41	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5317	channel.c	FUNCTION_124	FOR_1
0xac46	            0x759d	                           jne 0x400ac25	      5317	channel.c	FUNCTION_124	FOR_1
0xac48	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5324	channel.c	FUNCTION_124
0xac4b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5325	channel.c	FUNCTION_124
0xac4f	    0x644833142528	                xor rdx, qword fs:[0x28]	      5325	channel.c	FUNCTION_124
0xac58	            0x7405	                            je 0x400ac9f	      5325	channel.c	FUNCTION_124
0xac5a	      0xe800000000	                          call 0x400ac9f	      5325	channel.c	FUNCTION_124
0xac5f	              0xc9	                                   leave	      5325	channel.c	FUNCTION_124
0xac60	              0xc3	                                     ret	      5325	channel.c	FUNCTION_124
clear_job_options	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	12
0x84d2	              0x55	                                push rbp	      4443	channel.c	FUNCTION_107
0x84d3	          0x4889e5	                            mov rbp, rsp	      4443	channel.c	FUNCTION_107
0x84d6	        0x4883ec10	                           sub rsp, 0x10	      4443	channel.c	FUNCTION_107
0x84da	        0x48897df8	                mov qword [rbp - 8], rdi	      4443	channel.c	FUNCTION_107
0x84de	        0x488b45f8	                mov rax, qword [rbp - 8]	      4444	channel.c	FUNCTION_107	CALL_1
0x84e2	      0xba78030000	                          mov edx, 0x378	      4444	channel.c	FUNCTION_107	CALL_1
0x84e7	      0xbe00000000	                              mov esi, 0	      4444	channel.c	FUNCTION_107	CALL_1
0x84ec	          0x4889c7	                            mov rdi, rax	      4444	channel.c	FUNCTION_107	CALL_1
0x84ef	      0xe800000000	                          call 0x4008534	      4444	channel.c	FUNCTION_107	CALL_1
0x84f4	              0x90	                                     nop	      4445	channel.c	FUNCTION_107
0x84f5	              0xc9	                                   leave	      4445	channel.c	FUNCTION_107
0x84f6	              0xc3	                                     ret	      4445	channel.c	FUNCTION_107
set_ref_in_channel	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	45
0x814d	              0x55	                                push rbp	      4334	channel.c	FUNCTION_100
0x814e	          0x4889e5	                            mov rbp, rsp	      4334	channel.c	FUNCTION_100
0x8151	        0x4883ec40	                           sub rsp, 0x40	      4334	channel.c	FUNCTION_100
0x8155	          0x897dcc	             mov dword [rbp - 0x34], edi	      4334	channel.c	FUNCTION_100
0x8158	    0x64488b042528	                mov rax, qword fs:[0x28]	      4334	channel.c	FUNCTION_100
0x8161	        0x488945f8	                mov qword [rbp - 8], rax	      4334	channel.c	FUNCTION_100
0x8165	            0x31c0	                            xor eax, eax	      4334	channel.c	FUNCTION_100
0x8167	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      4335	channel.c	FUNCTION_100
0x816e	    0x488b05000000	            mov rax, qword [0x040081b5] 	      4339	channel.c	FUNCTION_100	FOR_1
0x8175	        0x488945d8	             mov qword [rbp - 0x28], rax	      4339	channel.c	FUNCTION_100	FOR_1
0x8179	            0xeb5c	                           jmp 0x4008217	      4339	channel.c	FUNCTION_100	FOR_1
0x817b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4340	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_1
0x817f	          0x4889c7	                            mov rdi, rax	      4340	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_1
0x8182	      0xe8a283ffff	           call sym.channel_still_useful	      4340	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_1
0x8187	            0x85c0	                           test eax, eax	      4340	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_1
0x8189	            0x7441	                            je 0x400820c	      4340	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_1
0x818b	    0xc745e00a0000	             mov dword [rbp - 0x20], 0xa	      4342	channel.c	FUNCTION_100	FOR_1	IF_1
0x8192	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4343	channel.c	FUNCTION_100	FOR_1	IF_1
0x8196	        0x488945e8	             mov qword [rbp - 0x18], rax	      4343	channel.c	FUNCTION_100	FOR_1	IF_1
0x819a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x819e	            0x751d	                           jne 0x40081fd	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81a0	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81a3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81a7	      0xb900000000	                              mov ecx, 0	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81ac	      0xba00000000	                              mov edx, 0	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81b1	          0x4889c7	                            mov rdi, rax	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81b4	      0xe800000000	                          call 0x40081f9	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81b9	            0x85c0	                           test eax, eax	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81bb	            0x7407	                            je 0x4008204	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81bd	      0xb801000000	                              mov eax, 1	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81c2	            0xeb05	                           jmp 0x4008209	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81c4	      0xb800000000	                              mov eax, 0	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81c9	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4344	channel.c	FUNCTION_100	FOR_1	IF_1	CALL_2
0x81cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4339	channel.c	FUNCTION_100	FOR_1
0x81d0	          0x488b00	                    mov rax, qword [rax]	      4339	channel.c	FUNCTION_100	FOR_1
0x81d3	        0x488945d8	             mov qword [rbp - 0x28], rax	      4339	channel.c	FUNCTION_100	FOR_1
0x81d7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4339	channel.c	FUNCTION_100	FOR_1
0x81dc	            0x759d	                           jne 0x40081bb	      4339	channel.c	FUNCTION_100	FOR_1
0x81de	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4346	channel.c	FUNCTION_100
0x81e1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4347	channel.c	FUNCTION_100
0x81e5	    0x644833142528	                xor rdx, qword fs:[0x28]	      4347	channel.c	FUNCTION_100
0x81ee	            0x7405	                            je 0x4008235	      4347	channel.c	FUNCTION_100
0x81f0	      0xe800000000	                          call 0x4008235	      4347	channel.c	FUNCTION_100
0x81f5	              0xc9	                                   leave	      4347	channel.c	FUNCTION_100
0x81f6	              0xc3	                                     ret	      4347	channel.c	FUNCTION_100
remove_from_writeque	functions,0:SWITCH,0:CALL,2:ELSE,1:IF,1:FOR,0:WHILE,0:DO,0	28
0x5db7	              0x55	                                push rbp	      2962	channel.c	FUNCTION_73
0x5db8	          0x4889e5	                            mov rbp, rsp	      2962	channel.c	FUNCTION_73
0x5dbb	        0x4883ec10	                           sub rsp, 0x10	      2962	channel.c	FUNCTION_73
0x5dbf	        0x48897df8	                mov qword [rbp - 8], rdi	      2962	channel.c	FUNCTION_73
0x5dc3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2962	channel.c	FUNCTION_73
0x5dc7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2963	channel.c	FUNCTION_73	CALL_1
0x5dcb	          0x4889c7	                            mov rdi, rax	      2963	channel.c	FUNCTION_73	CALL_1
0x5dce	      0xe800000000	                          call 0x4005e13	      2963	channel.c	FUNCTION_73	CALL_1
0x5dd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2964	channel.c	FUNCTION_73
0x5dd7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2964	channel.c	FUNCTION_73
0x5ddb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2964	channel.c	FUNCTION_73
0x5ddf	        0x48895018	             mov qword [rax + 0x18], rdx	      2964	channel.c	FUNCTION_73
0x5de3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2965	channel.c	FUNCTION_73	IF_1
0x5de7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2965	channel.c	FUNCTION_73	IF_1
0x5deb	          0x4885c0	                           test rax, rax	      2965	channel.c	FUNCTION_73	IF_1
0x5dee	            0x750e	                           jne 0x4005e3e	      2965	channel.c	FUNCTION_73	IF_1
0x5df0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2966	channel.c	FUNCTION_73	IF_1
0x5df4	    0x48c740200000	               mov qword [rax + 0x20], 0	      2966	channel.c	FUNCTION_73	IF_1
0x5dfc	            0xeb10	                           jmp 0x4005e4e	      2966	channel.c	FUNCTION_73	IF_1
0x5dfe	        0x488b45f8	                mov rax, qword [rbp - 8]	      2968	channel.c	FUNCTION_73	ELSE_1
0x5e02	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2968	channel.c	FUNCTION_73	ELSE_1
0x5e06	    0x48c740200000	               mov qword [rax + 0x20], 0	      2968	channel.c	FUNCTION_73	ELSE_1
0x5e0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2969	channel.c	FUNCTION_73	CALL_2
0x5e12	          0x4889c7	                            mov rdi, rax	      2969	channel.c	FUNCTION_73	CALL_2
0x5e15	      0xe800000000	                          call 0x4005e5a	      2969	channel.c	FUNCTION_73	CALL_2
0x5e1a	              0x90	                                     nop	      2970	channel.c	FUNCTION_73
0x5e1b	              0xc9	                                   leave	      2970	channel.c	FUNCTION_73
0x5e1c	              0xc3	                                     ret	      2970	channel.c	FUNCTION_73
channel_is_open	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	26
0x54ff	              0x55	                                push rbp	      2724	channel.c	FUNCTION_66
0x5500	          0x4889e5	                            mov rbp, rsp	      2724	channel.c	FUNCTION_66
0x5503	        0x48897df8	                mov qword [rbp - 8], rdi	      2724	channel.c	FUNCTION_66
0x5507	      0x48837df800	                  cmp qword [rbp - 8], 0	      2725	channel.c	FUNCTION_66
0x550c	            0x7440	                            je 0x400558e	      2725	channel.c	FUNCTION_66
0x550e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2725	channel.c	FUNCTION_66
0x5512	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2725	channel.c	FUNCTION_66
0x5515	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2725	channel.c	FUNCTION_66
0x5518	            0x752d	                           jne 0x4005587	      2725	channel.c	FUNCTION_66
0x551a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2726	channel.c	FUNCTION_66
0x551e	    0x8b8048030000	           mov eax, dword [rax + 0x348] 	      2726	channel.c	FUNCTION_66
0x5524	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2726	channel.c	FUNCTION_66
0x5527	            0x751e	                           jne 0x4005587	      2726	channel.c	FUNCTION_66
0x5529	        0x488b45f8	                mov rax, qword [rbp - 8]	      2727	channel.c	FUNCTION_66
0x552d	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      2727	channel.c	FUNCTION_66
0x5533	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2727	channel.c	FUNCTION_66
0x5536	            0x750f	                           jne 0x4005587	      2727	channel.c	FUNCTION_66
0x5538	        0x488b45f8	                mov rax, qword [rbp - 8]	      2728	channel.c	FUNCTION_66
0x553c	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      2728	channel.c	FUNCTION_66
0x5542	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2728	channel.c	FUNCTION_66
0x5545	            0x7407	                            je 0x400558e	      2728	channel.c	FUNCTION_66
0x5547	      0xb801000000	                              mov eax, 1	      2725	channel.c	FUNCTION_66
0x554c	            0xeb05	                           jmp 0x4005593	      2725	channel.c	FUNCTION_66
0x554e	      0xb800000000	                              mov eax, 0	      2725	channel.c	FUNCTION_66
0x5553	              0x5d	                                 pop rbp	      2729	channel.c	FUNCTION_66
0x5554	              0xc3	                                     ret	      2729	channel.c	FUNCTION_66
job_free_contents	functions,0:SWITCH,0:CALL,9:ELSE,0:IF,2:FOR,1:WHILE,0:DO,0	75
0xa41d	              0x55	                                push rbp	      5038	channel.c	FUNCTION_112
0xa41e	          0x4889e5	                            mov rbp, rsp	      5038	channel.c	FUNCTION_112
0xa421	        0x4883ec20	                           sub rsp, 0x20	      5038	channel.c	FUNCTION_112
0xa425	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5038	channel.c	FUNCTION_112
0xa429	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5041	channel.c	FUNCTION_112	CALL_1
0xa42d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5041	channel.c	FUNCTION_112	CALL_1
0xa431	      0xbe00000000	                              mov esi, 0	      5041	channel.c	FUNCTION_112	CALL_1
0xa436	          0x4889c7	                            mov rdi, rax	      5041	channel.c	FUNCTION_112	CALL_1
0xa439	      0xb800000000	                              mov eax, 0	      5041	channel.c	FUNCTION_112	CALL_1
0xa43e	      0xe800000000	                          call 0x400a483	      5041	channel.c	FUNCTION_112	CALL_1
0xa443	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5042	channel.c	FUNCTION_112	IF_1
0xa447	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5042	channel.c	FUNCTION_112	IF_1
0xa44b	          0x4885c0	                           test rax, rax	      5042	channel.c	FUNCTION_112	IF_1
0xa44e	            0x7423	                            je 0x400a4b3	      5042	channel.c	FUNCTION_112	IF_1
0xa450	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5049	channel.c	FUNCTION_112	IF_1
0xa454	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5049	channel.c	FUNCTION_112	IF_1
0xa458	    0x48c780a80400	              mov qword [rax + 0x4a8], 0	      5049	channel.c	FUNCTION_112	IF_1
0xa463	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5050	channel.c	FUNCTION_112	IF_1	CALL_2
0xa467	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5050	channel.c	FUNCTION_112	IF_1	CALL_2
0xa46b	          0x4889c7	                            mov rdi, rax	      5050	channel.c	FUNCTION_112	IF_1	CALL_2
0xa46e	      0xe800000000	                          call 0x400a4b3	      5050	channel.c	FUNCTION_112	IF_1	CALL_2
0xa473	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5052	channel.c	FUNCTION_112	CALL_3
0xa477	          0x4889c7	                            mov rdi, rax	      5052	channel.c	FUNCTION_112	CALL_3
0xa47a	      0xe800000000	                          call 0x400a4bf	      5052	channel.c	FUNCTION_112	CALL_3
0xa47f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5054	channel.c	FUNCTION_112	CALL_4
0xa483	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5054	channel.c	FUNCTION_112	CALL_4
0xa487	          0x4889c7	                            mov rdi, rax	      5054	channel.c	FUNCTION_112	CALL_4
0xa48a	      0xe800000000	                          call 0x400a4cf	      5054	channel.c	FUNCTION_112	CALL_4
0xa48f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5055	channel.c	FUNCTION_112	CALL_5
0xa493	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5055	channel.c	FUNCTION_112	CALL_5
0xa497	          0x4889c7	                            mov rdi, rax	      5055	channel.c	FUNCTION_112	CALL_5
0xa49a	      0xe800000000	                          call 0x400a4df	      5055	channel.c	FUNCTION_112	CALL_5
0xa49f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5056	channel.c	FUNCTION_112	CALL_6
0xa4a3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5056	channel.c	FUNCTION_112	CALL_6
0xa4a7	          0x4889c7	                            mov rdi, rax	      5056	channel.c	FUNCTION_112	CALL_6
0xa4aa	      0xe800000000	                          call 0x400a4ef	      5056	channel.c	FUNCTION_112	CALL_6
0xa4af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5057	channel.c	FUNCTION_112	CALL_7
0xa4b3	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5057	channel.c	FUNCTION_112	CALL_7
0xa4b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5057	channel.c	FUNCTION_112	CALL_7
0xa4bb	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5057	channel.c	FUNCTION_112	CALL_7
0xa4bf	          0x4889d6	                            mov rsi, rdx	      5057	channel.c	FUNCTION_112	CALL_7
0xa4c2	          0x4889c7	                            mov rdi, rax	      5057	channel.c	FUNCTION_112	CALL_7
0xa4c5	      0xe800000000	                          call 0x400a50a	      5057	channel.c	FUNCTION_112	CALL_7
0xa4ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5058	channel.c	FUNCTION_112	IF_2
0xa4ce	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5058	channel.c	FUNCTION_112	IF_2
0xa4d2	          0x4885c0	                           test rax, rax	      5058	channel.c	FUNCTION_112	IF_2
0xa4d5	            0x745a	                            je 0x400a571	      5058	channel.c	FUNCTION_112	IF_2
0xa4d7	    0xc745fc000000	                  mov dword [rbp - 4], 0	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa4de	            0xeb24	                           jmp 0x400a544	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa4e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4e4	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4e8	          0x8b55fc	                mov edx, dword [rbp - 4]	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4eb	          0x4863d2	                         movsxd rdx, edx	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4ee	        0x48c1e203	                              shl rdx, 3	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4f2	          0x4801d0	                            add rax, rdx	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4f5	          0x488b00	                    mov rax, qword [rax]	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4f8	          0x4889c7	                            mov rdi, rax	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa4fb	      0xe800000000	                          call 0x400a540	      5061	channel.c	FUNCTION_112	IF_2	CALL_8
0xa500	        0x8345fc01	                  add dword [rbp - 4], 1	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa504	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa508	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa50c	          0x8b55fc	                mov edx, dword [rbp - 4]	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa50f	          0x4863d2	                         movsxd rdx, edx	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa512	        0x48c1e203	                              shl rdx, 3	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa516	          0x4801d0	                            add rax, rdx	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa519	          0x488b00	                    mov rax, qword [rax]	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa51c	          0x4885c0	                           test rax, rax	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa51f	            0x75bf	                           jne 0x400a520	      5060	channel.c	FUNCTION_112	IF_2	FOR_1
0xa521	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5062	channel.c	FUNCTION_112	IF_2	CALL_9
0xa525	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5062	channel.c	FUNCTION_112	IF_2	CALL_9
0xa529	          0x4889c7	                            mov rdi, rax	      5062	channel.c	FUNCTION_112	IF_2	CALL_9
0xa52c	      0xe800000000	                          call 0x400a571	      5062	channel.c	FUNCTION_112	IF_2	CALL_9
0xa531	              0x90	                                     nop	      5064	channel.c	FUNCTION_112
0xa532	              0xc9	                                   leave	      5064	channel.c	FUNCTION_112
0xa533	              0xc3	                                     ret	      5064	channel.c	FUNCTION_112
ch_error	functions,0:SWITCH,0:CALL,6:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	56
0x2dc	              0x55	                                push rbp	       189	channel.c	FUNCTION_8
0x2dd	          0x4889e5	                            mov rbp, rsp	       189	channel.c	FUNCTION_8
0x2e0	    0x4881ece00000	                           sub rsp, 0xe0	       189	channel.c	FUNCTION_8
0x2e7	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       189	channel.c	FUNCTION_8
0x2ee	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       189	channel.c	FUNCTION_8
0x2f5	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       189	channel.c	FUNCTION_8
0x2fc	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       189	channel.c	FUNCTION_8
0x303	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       189	channel.c	FUNCTION_8
0x30a	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       189	channel.c	FUNCTION_8
0x311	            0x84c0	                             test al, al	       189	channel.c	FUNCTION_8
0x313	            0x7420	                            je 0x4000375	       189	channel.c	FUNCTION_8
0x315	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       189	channel.c	FUNCTION_8
0x319	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       189	channel.c	FUNCTION_8
0x31d	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       189	channel.c	FUNCTION_8
0x321	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       189	channel.c	FUNCTION_8
0x325	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       189	channel.c	FUNCTION_8
0x329	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       189	channel.c	FUNCTION_8
0x32d	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       189	channel.c	FUNCTION_8
0x331	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       189	channel.c	FUNCTION_8
0x335	    0x64488b042528	                mov rax, qword fs:[0x28]	       189	channel.c	FUNCTION_8
0x33e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       189	channel.c	FUNCTION_8
0x345	            0x31c0	                            xor eax, eax	       189	channel.c	FUNCTION_8
0x347	    0x488b05000000	            mov rax, qword [0x0400038e] 	       190	channel.c	FUNCTION_8	IF_1
0x34e	          0x4885c0	                           test rax, rax	       190	channel.c	FUNCTION_8	IF_1
0x351	     0xf848e000000	                            je 0x4000425	       190	channel.c	FUNCTION_8	IF_1
0x357	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       194	channel.c	FUNCTION_8	IF_1	CALL_1
0x35e	          0x4889c6	                            mov rsi, rax	       194	channel.c	FUNCTION_8	IF_1	CALL_1
0x361	      0xbf00000000	                              mov edi, 0	       194	channel.c	FUNCTION_8	IF_1	CALL_1
0x366	      0xe879fdffff	                    call sym.ch_log_lead	       194	channel.c	FUNCTION_8	IF_1	CALL_1
0x36b	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       195	channel.c	FUNCTION_8	IF_1	CALL_2
0x375	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       195	channel.c	FUNCTION_8	IF_1	CALL_2
0x37f	        0x488d4510	                   lea rax, [rbp + 0x10]	       195	channel.c	FUNCTION_8	IF_1	CALL_2
0x383	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       195	channel.c	FUNCTION_8	IF_1	CALL_2
0x38a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       195	channel.c	FUNCTION_8	IF_1	CALL_2
0x391	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       195	channel.c	FUNCTION_8	IF_1	CALL_2
0x398	    0x488b05000000	            mov rax, qword [0x040003df] 	       196	channel.c	FUNCTION_8	IF_1	CALL_3
0x39f	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       196	channel.c	FUNCTION_8	IF_1	CALL_3
0x3a6	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       196	channel.c	FUNCTION_8	IF_1	CALL_3
0x3ad	          0x4889ce	                            mov rsi, rcx	       196	channel.c	FUNCTION_8	IF_1	CALL_3
0x3b0	          0x4889c7	                            mov rdi, rax	       196	channel.c	FUNCTION_8	IF_1	CALL_3
0x3b3	      0xe800000000	                          call 0x40003f8	       196	channel.c	FUNCTION_8	IF_1	CALL_3
0x3b8	    0x488b05000000	            mov rax, qword [0x040003ff] 	       198	channel.c	FUNCTION_8	IF_1	CALL_5
0x3bf	          0x4889c6	                            mov rsi, rax	       198	channel.c	FUNCTION_8	IF_1	CALL_5
0x3c2	      0xbf0a000000	                            mov edi, 0xa	       198	channel.c	FUNCTION_8	IF_1	CALL_5
0x3c7	      0xe800000000	                          call 0x400040c	       198	channel.c	FUNCTION_8	IF_1	CALL_5
0x3cc	    0x488b05000000	            mov rax, qword [0x04000413] 	       199	channel.c	FUNCTION_8	IF_1	CALL_6
0x3d3	          0x4889c7	                            mov rdi, rax	       199	channel.c	FUNCTION_8	IF_1	CALL_6
0x3d6	      0xe800000000	                          call 0x400041b	       199	channel.c	FUNCTION_8	IF_1	CALL_6
0x3db	    0xc70500000000	               mov dword [0x04000425], 1	       200	channel.c	FUNCTION_8	IF_1
0x3e5	              0x90	                                     nop	       202	channel.c	FUNCTION_8
0x3e6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       202	channel.c	FUNCTION_8
0x3ed	    0x644833042528	                xor rax, qword fs:[0x28]	       202	channel.c	FUNCTION_8
0x3f6	            0x7405	                            je 0x400043d	       202	channel.c	FUNCTION_8
0x3f8	      0xe800000000	                          call 0x400043d	       202	channel.c	FUNCTION_8
0x3fd	              0xc9	                                   leave	       202	channel.c	FUNCTION_8
0x3fe	              0xc3	                                     ret	       202	channel.c	FUNCTION_8
channel_read	functions,0:SWITCH,0:CALL,9:ELSE,2:IF,10:FOR,1:WHILE,0:DO,0	118
0x65b5	              0x55	                                push rbp	      3291	channel.c	FUNCTION_82
0x65b6	          0x4889e5	                            mov rbp, rsp	      3291	channel.c	FUNCTION_82
0x65b9	        0x4883ec30	                           sub rsp, 0x30	      3291	channel.c	FUNCTION_82
0x65bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3291	channel.c	FUNCTION_82
0x65c1	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3291	channel.c	FUNCTION_82
0x65c4	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3291	channel.c	FUNCTION_82
0x65c8	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3293	channel.c	FUNCTION_82
0x65cf	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3294	channel.c	FUNCTION_82
0x65d6	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3296	channel.c	FUNCTION_82
0x65dd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3298	channel.c	FUNCTION_82
0x65e1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3298	channel.c	FUNCTION_82
0x65e4	        0x48c1e004	                              shl rax, 4	      3298	channel.c	FUNCTION_82
0x65e8	          0x4889c1	                            mov rcx, rax	      3298	channel.c	FUNCTION_82
0x65eb	        0x48c1e104	                              shl rcx, 4	      3298	channel.c	FUNCTION_82
0x65ef	          0x4801c8	                            add rax, rcx	      3298	channel.c	FUNCTION_82
0x65f2	          0x4801d0	                            add rax, rdx	      3298	channel.c	FUNCTION_82
0x65f5	        0x4883c018	                           add rax, 0x18	      3298	channel.c	FUNCTION_82
0x65f9	            0x8b00	                    mov eax, dword [rax]	      3298	channel.c	FUNCTION_82
0x65fb	          0x8945fc	                mov dword [rbp - 4], eax	      3298	channel.c	FUNCTION_82
0x65fe	        0x837dfcff	 cmp dword [rbp - 4], 0xffffffffffffffff	      3299	channel.c	FUNCTION_82	IF_1
0x6602	            0x7526	                           jne 0x400666a	      3299	channel.c	FUNCTION_82	IF_1
0x6604	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3301	channel.c	FUNCTION_82	IF_1	CALL_1
0x6607	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3301	channel.c	FUNCTION_82	IF_1	CALL_1
0x660f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3301	channel.c	FUNCTION_82	IF_1	CALL_1
0x6613	      0xbe00000000	                              mov esi, 0	      3301	channel.c	FUNCTION_82	IF_1	CALL_1
0x6618	          0x4889c7	                            mov rdi, rax	      3301	channel.c	FUNCTION_82	IF_1	CALL_1
0x661b	      0xb800000000	                              mov eax, 0	      3301	channel.c	FUNCTION_82	IF_1	CALL_1
0x6620	      0xe8b79cffff	                       call sym.ch_error	      3301	channel.c	FUNCTION_82	IF_1	CALL_1
0x6625	      0xe937010000	                           jmp 0x40067a1	      3303	channel.c	FUNCTION_82	IF_1
0x662a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3305	channel.c	FUNCTION_82
0x662e	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3305	channel.c	FUNCTION_82
0x6631	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3305	channel.c	FUNCTION_82
0x6634	           0xf94c0	                                 sete al	      3305	channel.c	FUNCTION_82
0x6637	           0xfb6c0	                           movzx eax, al	      3305	channel.c	FUNCTION_82
0x663a	          0x8945f8	                mov dword [rbp - 8], eax	      3305	channel.c	FUNCTION_82
0x663d	    0x488b05000000	            mov rax, qword [0x04006684] 	      3308	channel.c	FUNCTION_82	IF_2
0x6644	          0x4885c0	                           test rax, rax	      3308	channel.c	FUNCTION_82	IF_2
0x6647	            0x7521	                           jne 0x40066aa	      3308	channel.c	FUNCTION_82	IF_2
0x6649	      0xbf00100000	                         mov edi, 0x1000	      3310	channel.c	FUNCTION_82	IF_2	CALL_2
0x664e	      0xe800000000	                          call 0x4006693	      3310	channel.c	FUNCTION_82	IF_2	CALL_2
0x6653	    0x488905000000	            mov qword [0x0400669a], rax 	      3310	channel.c	FUNCTION_82	IF_2	CALL_2
0x665a	    0x488b05000000	            mov rax, qword [0x040066a1] 	      3311	channel.c	FUNCTION_82	IF_2	IF_3
0x6661	          0x4885c0	                           test rax, rax	      3311	channel.c	FUNCTION_82	IF_2	IF_3
0x6664	     0xf84f6000000	                            je 0x40067a0	      3311	channel.c	FUNCTION_82	IF_2	IF_3
0x666a	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x666d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x6671	      0xba00000000	                              mov edx, 0	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x6676	            0x89ce	                            mov esi, ecx	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x6678	          0x4889c7	                            mov rdi, rax	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x667b	      0xe810fbffff	                   call sym.channel_wait	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x6680	            0x85c0	                           test eax, eax	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x6682	            0x757f	                           jne 0x4006743	      3320	channel.c	FUNCTION_82	FOR_1	IF_4	CALL_3
0x6684	        0x837df800	                  cmp dword [rbp - 8], 0	      3322	channel.c	FUNCTION_82	FOR_1	IF_5
0x6688	            0x741e	                            je 0x40066e8	      3322	channel.c	FUNCTION_82	FOR_1	IF_5
0x668a	    0x488b0d000000	            mov rcx, qword [0x040066d1] 	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x6691	          0x8b45fc	                mov eax, dword [rbp - 4]	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x6694	      0xba00100000	                         mov edx, 0x1000	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x6699	          0x4889ce	                            mov rsi, rcx	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x669c	            0x89c7	                            mov edi, eax	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x669e	      0xe800000000	                          call 0x40066e3	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x66a3	          0x8945f0	             mov dword [rbp - 0x10], eax	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x66a6	            0xeb1c	                           jmp 0x4006704	      3323	channel.c	FUNCTION_82	FOR_1	CALL_4
0x66a8	    0x488b0d000000	            mov rcx, qword [0x040066ef] 	      3325	channel.c	FUNCTION_82	FOR_1	CALL_5
0x66af	          0x8b45fc	                mov eax, dword [rbp - 4]	      3325	channel.c	FUNCTION_82	FOR_1	CALL_5
0x66b2	      0xba00100000	                         mov edx, 0x1000	      3325	channel.c	FUNCTION_82	FOR_1	CALL_5
0x66b7	          0x4889ce	                            mov rsi, rcx	      3325	channel.c	FUNCTION_82	FOR_1	CALL_5
0x66ba	            0x89c7	                            mov edi, eax	      3325	channel.c	FUNCTION_82	FOR_1	CALL_5
0x66bc	      0xe800000000	                          call 0x4006701	      3325	channel.c	FUNCTION_82	FOR_1	CALL_5
0x66c1	          0x8945f0	             mov dword [rbp - 0x10], eax	      3325	channel.c	FUNCTION_82	FOR_1	CALL_5
0x66c4	        0x837df000	               cmp dword [rbp - 0x10], 0	      3326	channel.c	FUNCTION_82	FOR_1	IF_6
0x66c8	            0x7e3c	                           jle 0x4006746	      3326	channel.c	FUNCTION_82	FOR_1	IF_6
0x66ca	    0x488b15000000	            mov rdx, qword [0x04006711] 	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66d1	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66d4	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66db	    0x41b900000000	                              mov r9d, 0	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66e1	    0x41b800000000	                              mov r8d, 0	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66e7	          0x4889c7	                            mov rdi, rax	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66ea	      0xe8c4ccffff	                   call sym.channel_save	      3330	channel.c	FUNCTION_82	FOR_1	CALL_6
0x66ef	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3331	channel.c	FUNCTION_82	FOR_1
0x66f2	           0x145f4	              add dword [rbp - 0xc], eax	      3331	channel.c	FUNCTION_82	FOR_1
0x66f5	    0x817df0ff0f00	          cmp dword [rbp - 0x10], 0xfff 	      3332	channel.c	FUNCTION_82	FOR_1	IF_7
0x66fc	            0x7e0b	                           jle 0x4006749	      3332	channel.c	FUNCTION_82	FOR_1	IF_7
0x66fe	      0xe967ffffff	                           jmp 0x40066aa	      3334	channel.c	FUNCTION_82	FOR_1
0x6703	              0x90	                                     nop	      3321	channel.c	FUNCTION_82	FOR_1	IF_4
0x6704	            0xeb04	                           jmp 0x400674a	      3321	channel.c	FUNCTION_82	FOR_1	IF_4
0x6706	              0x90	                                     nop	      3327	channel.c	FUNCTION_82	FOR_1	IF_6
0x6707	            0xeb01	                           jmp 0x400674a	      3327	channel.c	FUNCTION_82	FOR_1	IF_6
0x6709	              0x90	                                     nop	      3333	channel.c	FUNCTION_82	FOR_1	IF_7
0x670a	        0x837df400	                cmp dword [rbp - 0xc], 0	      3337	channel.c	FUNCTION_82	IF_8
0x670e	            0x7f2c	                            jg 0x400677c	      3337	channel.c	FUNCTION_82	IF_8
0x6710	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3339	channel.c	FUNCTION_82	IF_8	IF_9
0x6714	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      3339	channel.c	FUNCTION_82	IF_8	IF_9
0x671a	            0x85c0	                           test eax, eax	      3339	channel.c	FUNCTION_82	IF_8	IF_9
0x671c	            0x7543	                           jne 0x40067a1	      3339	channel.c	FUNCTION_82	IF_8	IF_9
0x671e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x6721	          0xc1e81f	                           shr eax, 0x1f	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x6724	           0xfb6d0	                           movzx edx, al	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x6727	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x672b	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x672e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x6732	          0x4889c7	                            mov rdi, rax	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x6735	      0xe88bfcffff	         call sym.ch_close_part_on_error	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x673a	            0xeb25	                           jmp 0x40067a1	      3340	channel.c	FUNCTION_82	IF_8	CALL_7
0x673c	    0x8b0500000000	            mov eax, dword [0x04006782] 	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x6742	            0x85c0	                           test eax, eax	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x6744	            0x750a	                           jne 0x4006790	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x6746	    0x8b0500000000	            mov eax, dword [0x0400678c] 	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x674c	            0x85c0	                           test eax, eax	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x674e	            0x7411	                            je 0x40067a1	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x6750	      0xe800000000	                          call 0x4006795	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x6755	            0x85c0	                           test eax, eax	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x6757	            0x7408	                            je 0x40067a1	      3343	channel.c	FUNCTION_82	ELSE_2	IF_10	CALL_8
0x6759	      0xe800000000	                          call 0x400679e	      3345	channel.c	FUNCTION_82	ELSE_2	IF_10
0x675e	            0xeb01	                           jmp 0x40067a1	      3345	channel.c	FUNCTION_82	ELSE_2	IF_10
0x6760	              0x90	                                     nop	      3312	channel.c	FUNCTION_82	IF_2	IF_3
0x6761	              0xc9	                                   leave	      3347	channel.c	FUNCTION_82
0x6762	              0xc3	                                     ret	      3347	channel.c	FUNCTION_82
channel_get_timeout	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	15
0x8274	              0x55	                                push rbp	      4388	channel.c	FUNCTION_104
0x8275	          0x4889e5	                            mov rbp, rsp	      4388	channel.c	FUNCTION_104
0x8278	        0x48897df8	                mov qword [rbp - 8], rdi	      4388	channel.c	FUNCTION_104
0x827c	          0x8975f4	              mov dword [rbp - 0xc], esi	      4388	channel.c	FUNCTION_104
0x827f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4389	channel.c	FUNCTION_104
0x8283	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4389	channel.c	FUNCTION_104
0x8286	        0x48c1e004	                              shl rax, 4	      4389	channel.c	FUNCTION_104
0x828a	          0x4889c1	                            mov rcx, rax	      4389	channel.c	FUNCTION_104
0x828d	        0x48c1e104	                              shl rcx, 4	      4389	channel.c	FUNCTION_104
0x8291	          0x4801c8	                            add rax, rcx	      4389	channel.c	FUNCTION_104
0x8294	          0x4801d0	                            add rax, rdx	      4389	channel.c	FUNCTION_104
0x8297	        0x4883c028	                           add rax, 0x28	      4389	channel.c	FUNCTION_104
0x829b	            0x8b00	                    mov eax, dword [rax]	      4389	channel.c	FUNCTION_104
0x829d	              0x5d	                                 pop rbp	      4390	channel.c	FUNCTION_104
0x829e	              0xc3	                                     ret	      4390	channel.c	FUNCTION_104
channel_read_fd	functions,0:SWITCH,0:CALL,3:ELSE,1:IF,1:FOR,0:WHILE,0:DO,0	35
0x946	              0x55	                                push rbp	       471	channel.c	FUNCTION_21
0x947	          0x4889e5	                            mov rbp, rsp	       471	channel.c	FUNCTION_21
0x94a	        0x4883ec30	                           sub rsp, 0x30	       471	channel.c	FUNCTION_21
0x94e	          0x897ddc	             mov dword [rbp - 0x24], edi	       471	channel.c	FUNCTION_21
0x951	    0x64488b042528	                mov rax, qword fs:[0x28]	       471	channel.c	FUNCTION_21
0x95a	        0x488945f8	                mov qword [rbp - 8], rax	       471	channel.c	FUNCTION_21
0x95e	            0x31c0	                            xor eax, eax	       471	channel.c	FUNCTION_21
0x960	        0x488d55ec	                   lea rdx, [rbp - 0x14]	       475	channel.c	FUNCTION_21	CALL_1
0x964	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       475	channel.c	FUNCTION_21	CALL_1
0x967	          0x4889d6	                            mov rsi, rdx	       475	channel.c	FUNCTION_21	CALL_1
0x96a	            0x89c7	                            mov edi, eax	       475	channel.c	FUNCTION_21	CALL_1
0x96c	      0xe800000000	                          call 0x40009b1	       475	channel.c	FUNCTION_21	CALL_1
0x971	        0x488945f0	             mov qword [rbp - 0x10], rax	       475	channel.c	FUNCTION_21	CALL_1
0x975	      0x48837df000	               cmp qword [rbp - 0x10], 0	       476	channel.c	FUNCTION_21	IF_1
0x97a	            0x751b	                           jne 0x40009d7	       476	channel.c	FUNCTION_21	IF_1
0x97c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       477	channel.c	FUNCTION_21	CALL_2
0x97f	            0x89c2	                            mov edx, eax	       477	channel.c	FUNCTION_21	CALL_2
0x981	      0xbe00000000	                              mov esi, 0	       477	channel.c	FUNCTION_21	CALL_2
0x986	      0xbf00000000	                              mov edi, 0	       477	channel.c	FUNCTION_21	CALL_2
0x98b	      0xb800000000	                              mov eax, 0	       477	channel.c	FUNCTION_21	CALL_2
0x990	      0xe847f9ffff	                       call sym.ch_error	       477	channel.c	FUNCTION_21	CALL_2
0x995	            0xeb16	                           jmp 0x40009ed	       480	channel.c	FUNCTION_21
0x997	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       479	channel.c	FUNCTION_21	CALL_3
0x99a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       479	channel.c	FUNCTION_21	CALL_3
0x99e	      0xba00000000	                              mov edx, 0	       479	channel.c	FUNCTION_21	CALL_3
0x9a3	            0x89ce	                            mov esi, ecx	       479	channel.c	FUNCTION_21	CALL_3
0x9a5	          0x4889c7	                            mov rdi, rax	       479	channel.c	FUNCTION_21	CALL_3
0x9a8	      0xe8085c0000	                   call sym.channel_read	       479	channel.c	FUNCTION_21	CALL_3
0x9ad	              0x90	                                     nop	       480	channel.c	FUNCTION_21
0x9ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	channel.c	FUNCTION_21
0x9b2	    0x644833042528	                xor rax, qword fs:[0x28]	       480	channel.c	FUNCTION_21
0x9bb	            0x7405	                            je 0x4000a02	       480	channel.c	FUNCTION_21
0x9bd	      0xe800000000	                          call 0x4000a02	       480	channel.c	FUNCTION_21
0x9c2	              0xc9	                                   leave	       480	channel.c	FUNCTION_21
0x9c3	              0xc3	                                     ret	       480	channel.c	FUNCTION_21
channel_read_block	functions,0:SWITCH,0:CALL,16:ELSE,3:IF,11:FOR,1:WHILE,1:DO,0	197
0x6763	              0x55	                                push rbp	      3358	channel.c	FUNCTION_83
0x6764	          0x4889e5	                            mov rbp, rsp	      3358	channel.c	FUNCTION_83
0x6767	        0x4883ec50	                           sub rsp, 0x50	      3358	channel.c	FUNCTION_83
0x676b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3358	channel.c	FUNCTION_83
0x676f	          0x8975c4	             mov dword [rbp - 0x3c], esi	      3358	channel.c	FUNCTION_83
0x6772	          0x8955c0	             mov dword [rbp - 0x40], edx	      3358	channel.c	FUNCTION_83
0x6775	          0x894dbc	             mov dword [rbp - 0x44], ecx	      3358	channel.c	FUNCTION_83
0x6778	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3361	channel.c	FUNCTION_83
0x677c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3361	channel.c	FUNCTION_83
0x677f	        0x48c1e004	                              shl rax, 4	      3361	channel.c	FUNCTION_83
0x6783	          0x4889c1	                            mov rcx, rax	      3361	channel.c	FUNCTION_83
0x6786	        0x48c1e104	                              shl rcx, 4	      3361	channel.c	FUNCTION_83
0x678a	          0x4801c8	                            add rax, rcx	      3361	channel.c	FUNCTION_83
0x678d	          0x4801d0	                            add rax, rdx	      3361	channel.c	FUNCTION_83
0x6790	        0x4883c020	                           add rax, 0x20	      3361	channel.c	FUNCTION_83
0x6794	            0x8b00	                    mov eax, dword [rax]	      3361	channel.c	FUNCTION_83
0x6796	          0x8945d0	             mov dword [rbp - 0x30], eax	      3361	channel.c	FUNCTION_83
0x6799	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3362	channel.c	FUNCTION_83
0x679d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3362	channel.c	FUNCTION_83
0x67a0	        0x48c1e004	                              shl rax, 4	      3362	channel.c	FUNCTION_83
0x67a4	          0x4889c1	                            mov rcx, rax	      3362	channel.c	FUNCTION_83
0x67a7	        0x48c1e104	                              shl rcx, 4	      3362	channel.c	FUNCTION_83
0x67ab	          0x4801c8	                            add rax, rcx	      3362	channel.c	FUNCTION_83
0x67ae	          0x4801d0	                            add rax, rdx	      3362	channel.c	FUNCTION_83
0x67b1	        0x4883c018	                           add rax, 0x18	      3362	channel.c	FUNCTION_83
0x67b5	            0x8b00	                    mov eax, dword [rax]	      3362	channel.c	FUNCTION_83
0x67b7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3362	channel.c	FUNCTION_83
0x67ba	        0x837dd001	               cmp dword [rbp - 0x30], 1	      3366	channel.c	FUNCTION_83	CALL_1
0x67be	            0x7507	                           jne 0x4006807	      3366	channel.c	FUNCTION_83	CALL_1
0x67c0	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_83	CALL_1
0x67c5	            0xeb05	                           jmp 0x400680c	      3366	channel.c	FUNCTION_83	CALL_1
0x67c7	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_83	CALL_1
0x67cc	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3366	channel.c	FUNCTION_83	CALL_1
0x67cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3366	channel.c	FUNCTION_83	CALL_1
0x67d3	            0x89d1	                            mov ecx, edx	      3366	channel.c	FUNCTION_83	CALL_1
0x67d5	          0x4889f2	                            mov rdx, rsi	      3366	channel.c	FUNCTION_83	CALL_1
0x67d8	      0xbe00000000	                              mov esi, 0	      3366	channel.c	FUNCTION_83	CALL_1
0x67dd	          0x4889c7	                            mov rdi, rax	      3366	channel.c	FUNCTION_83	CALL_1
0x67e0	      0xb800000000	                              mov eax, 0	      3366	channel.c	FUNCTION_83	CALL_1
0x67e5	      0xe800000000	                          call 0x400682a	      3366	channel.c	FUNCTION_83	CALL_1
0x67ea	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3371	channel.c	FUNCTION_83	WHILE_1	CALL_2
0x67ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3371	channel.c	FUNCTION_83	WHILE_1	CALL_2
0x67f1	            0x89d6	                            mov esi, edx	      3371	channel.c	FUNCTION_83	WHILE_1	CALL_2
0x67f3	          0x4889c7	                            mov rdi, rax	      3371	channel.c	FUNCTION_83	WHILE_1	CALL_2
0x67f6	      0xe800000000	                          call 0x400683b	      3371	channel.c	FUNCTION_83	WHILE_1	CALL_2
0x67fb	        0x488945e8	             mov qword [rbp - 0x18], rax	      3371	channel.c	FUNCTION_83	WHILE_1	CALL_2
0x67ff	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3372	channel.c	FUNCTION_83	WHILE_1	IF_1
0x6804	            0x7451	                            je 0x4006897	      3372	channel.c	FUNCTION_83	WHILE_1	IF_1
0x6806	        0x837dd001	               cmp dword [rbp - 0x30], 1	      3374	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2
0x680a	     0xf84b0000000	                            je 0x4006900	      3374	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2
0x6810	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3374	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2
0x6814	            0x7515	                           jne 0x400686b	      3374	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2
0x6816	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3375	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2	CALL_3
0x681a	          0x4889c7	                            mov rdi, rax	      3375	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2	CALL_3
0x681d	      0xe800000000	                          call 0x4006862	      3375	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2	CALL_3
0x6822	          0x4885c0	                           test rax, rax	      3375	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2	CALL_3
0x6825	     0xf8595000000	                           jne 0x4006900	      3375	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_2	CALL_3
0x682b	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x682f	           0xf94c0	                                 sete al	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x6832	           0xfb6d0	                           movzx edx, al	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x6835	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x6838	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x683c	            0x89ce	                            mov esi, ecx	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x683e	          0x4889c7	                            mov rdi, rax	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x6841	      0xe800000000	                          call 0x4006886	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x6846	          0x83f801	                              cmp eax, 1	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x6849	            0x746f	                            je 0x40068fa	      3378	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3	CALL_4
0x684b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3382	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_4
0x684f	            0x756f	                           jne 0x4006900	      3382	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_4
0x6851	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3382	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_4
0x6855	            0x7469	                            je 0x4006900	      3382	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_4
0x6857	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3387	channel.c	FUNCTION_83	WHILE_1	IF_5
0x685b	            0x750a	                           jne 0x40068a7	      3387	channel.c	FUNCTION_83	WHILE_1	IF_5
0x685d	      0xb800000000	                              mov eax, 0	      3388	channel.c	FUNCTION_83	WHILE_1	IF_5
0x6862	      0xe9a8010000	                           jmp 0x4006a4f	      3388	channel.c	FUNCTION_83	WHILE_1	IF_5
0x6867	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x686a	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x686d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x6871	            0x89ce	                            mov esi, ecx	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x6873	          0x4889c7	                            mov rdi, rax	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x6876	      0xe815f9ffff	                   call sym.channel_wait	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x687b	            0x85c0	                           test eax, eax	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x687d	            0x7420	                            je 0x40068df	      3389	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_5
0x687f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3391	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_6
0x6883	      0xbe00000000	                              mov esi, 0	      3391	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_6
0x6888	          0x4889c7	                            mov rdi, rax	      3391	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_6
0x688b	      0xb800000000	                              mov eax, 0	      3391	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_6
0x6890	      0xe800000000	                          call 0x40068d5	      3391	channel.c	FUNCTION_83	WHILE_1	IF_6	CALL_6
0x6895	      0xb800000000	                              mov eax, 0	      3392	channel.c	FUNCTION_83	WHILE_1	IF_6
0x689a	      0xe970010000	                           jmp 0x4006a4f	      3392	channel.c	FUNCTION_83	WHILE_1	IF_6
0x689f	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      3394	channel.c	FUNCTION_83	WHILE_1	CALL_7
0x68a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3394	channel.c	FUNCTION_83	WHILE_1	CALL_7
0x68a6	      0xba00000000	                              mov edx, 0	      3394	channel.c	FUNCTION_83	WHILE_1	CALL_7
0x68ab	            0x89ce	                            mov esi, ecx	      3394	channel.c	FUNCTION_83	WHILE_1	CALL_7
0x68ad	          0x4889c7	                            mov rdi, rax	      3394	channel.c	FUNCTION_83	WHILE_1	CALL_7
0x68b0	      0xe800fdffff	                   call sym.channel_read	      3394	channel.c	FUNCTION_83	WHILE_1	CALL_7
0x68b5	      0xe930ffffff	                           jmp 0x400682a	      3394	channel.c	FUNCTION_83	WHILE_1	CALL_7
0x68ba	              0x90	                                     nop	      3379	channel.c	FUNCTION_83	WHILE_1	IF_1	IF_3
0x68bb	      0xe92affffff	                           jmp 0x400682a	      3395	channel.c	FUNCTION_83	WHILE_1
0x68c0	        0x837dd001	               cmp dword [rbp - 0x30], 1	      3398	channel.c	FUNCTION_83	IF_7
0x68c4	            0x751a	                           jne 0x4006920	      3398	channel.c	FUNCTION_83	IF_7
0x68c6	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3400	channel.c	FUNCTION_83	IF_7	CALL_8
0x68c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3400	channel.c	FUNCTION_83	IF_7	CALL_8
0x68cd	            0x89d6	                            mov esi, edx	      3400	channel.c	FUNCTION_83	IF_7	CALL_8
0x68cf	          0x4889c7	                            mov rdi, rax	      3400	channel.c	FUNCTION_83	IF_7	CALL_8
0x68d2	      0xe89bc6ffff	                call sym.channel_get_all	      3400	channel.c	FUNCTION_83	IF_7	CALL_8
0x68d7	        0x488945d8	             mov qword [rbp - 0x28], rax	      3400	channel.c	FUNCTION_83	IF_7	CALL_8
0x68db	      0xe9fe000000	                           jmp 0x4006a1e	      3400	channel.c	FUNCTION_83	IF_7	CALL_8
0x68e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3406	channel.c	FUNCTION_83	ELSE_1
0x68e4	          0x488b00	                    mov rax, qword [rax]	      3406	channel.c	FUNCTION_83	ELSE_1
0x68e7	        0x488945f0	             mov qword [rbp - 0x10], rax	      3406	channel.c	FUNCTION_83	ELSE_1
0x68eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3407	channel.c	FUNCTION_83	ELSE_1	CALL_9
0x68ef	          0x4889c7	                            mov rdi, rax	      3407	channel.c	FUNCTION_83	ELSE_1	CALL_9
0x68f2	      0xe800000000	                          call 0x4006937	      3407	channel.c	FUNCTION_83	ELSE_1	CALL_9
0x68f7	        0x488945f8	                mov qword [rbp - 8], rax	      3407	channel.c	FUNCTION_83	ELSE_1	CALL_9
0x68fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x68ff	        0x488945e0	             mov qword [rbp - 0x20], rax	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6903	            0xeb17	                           jmp 0x400695c	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6905	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3411	channel.c	FUNCTION_83	ELSE_1	FOR_1	IF_8
0x6909	           0xfb600	                   movzx eax, byte [rax]	      3411	channel.c	FUNCTION_83	ELSE_1	FOR_1	IF_8
0x690c	            0x84c0	                             test al, al	      3411	channel.c	FUNCTION_83	ELSE_1	FOR_1	IF_8
0x690e	            0x7507	                           jne 0x4006957	      3411	channel.c	FUNCTION_83	ELSE_1	FOR_1	IF_8
0x6910	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3412	channel.c	FUNCTION_83	ELSE_1	FOR_1	IF_8
0x6914	          0xc6000a	                     mov byte [rax], 0xa	      3412	channel.c	FUNCTION_83	ELSE_1	FOR_1	IF_8
0x6917	      0x488345e001	               add qword [rbp - 0x20], 1	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x691c	      0x48837df800	                  cmp qword [rbp - 8], 0	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6921	            0x740a	                            je 0x400696d	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6923	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6927	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x692b	            0x7315	                           jae 0x4006982	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x692d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6931	        0x488b5008	                mov rdx, qword [rax + 8]	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6935	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6939	          0x4801d0	                            add rax, rdx	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x693c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6940	            0x77c3	                            ja 0x4006945	      3410	channel.c	FUNCTION_83	ELSE_1	FOR_1
0x6942	      0x48837df800	                  cmp qword [rbp - 8], 0	      3414	channel.c	FUNCTION_83	ELSE_1	IF_9
0x6947	            0x7517	                           jne 0x40069a0	      3414	channel.c	FUNCTION_83	ELSE_1	IF_9
0x6949	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3417	channel.c	FUNCTION_83	ELSE_1	IF_9	CALL_10
0x694c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3417	channel.c	FUNCTION_83	ELSE_1	IF_9	CALL_10
0x6950	            0x89d6	                            mov esi, edx	      3417	channel.c	FUNCTION_83	ELSE_1	IF_9	CALL_10
0x6952	          0x4889c7	                            mov rdi, rax	      3417	channel.c	FUNCTION_83	ELSE_1	IF_9	CALL_10
0x6955	      0xe800000000	                          call 0x400699a	      3417	channel.c	FUNCTION_83	ELSE_1	IF_9	CALL_10
0x695a	        0x488945d8	             mov qword [rbp - 0x28], rax	      3417	channel.c	FUNCTION_83	ELSE_1	IF_9	CALL_10
0x695e	            0xeb7e	                           jmp 0x4006a1e	      3417	channel.c	FUNCTION_83	ELSE_1	IF_9	CALL_10
0x6960	        0x488b45f8	                mov rax, qword [rbp - 8]	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x6964	        0x488d4801	                      lea rcx, [rax + 1]	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x6968	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x696c	        0x488b5008	                mov rdx, qword [rax + 8]	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x6970	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x6974	          0x4801d0	                            add rax, rdx	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x6977	          0x4839c1	                            cmp rcx, rax	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x697a	            0x751e	                           jne 0x40069da	      3419	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x697c	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3422	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10	CALL_11
0x697f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3422	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10	CALL_11
0x6983	            0x89d6	                            mov esi, edx	      3422	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10	CALL_11
0x6985	          0x4889c7	                            mov rdi, rax	      3422	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10	CALL_11
0x6988	      0xe800000000	                          call 0x40069cd	      3422	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10	CALL_11
0x698d	        0x488945d8	             mov qword [rbp - 0x28], rax	      3422	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10	CALL_11
0x6991	        0x488b45f8	                mov rax, qword [rbp - 8]	      3423	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x6995	          0xc60000	                       mov byte [rax], 0	      3423	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x6998	            0xeb44	                           jmp 0x4006a1e	      3423	channel.c	FUNCTION_83	ELSE_1	ELSE_2	IF_10
0x699a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x699e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69a2	          0x4829c2	                            sub rdx, rax	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69a5	          0x4889d0	                            mov rax, rdx	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69a8	            0x89c2	                            mov edx, eax	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69ae	            0x89d6	                            mov esi, edx	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69b0	          0x4889c7	                            mov rdi, rax	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69b3	      0xe800000000	                          call 0x40069f8	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69b8	        0x488945d8	             mov qword [rbp - 0x28], rax	      3429	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_12
0x69bc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69c4	          0x4829c2	                            sub rdx, rax	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69c7	          0x4889d0	                            mov rax, rdx	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69ca	          0x8d5001	                      lea edx, [rax + 1]	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69cd	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69d4	            0x89ce	                            mov esi, ecx	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69d6	          0x4889c7	                            mov rdi, rax	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69d9	      0xe800000000	                          call 0x4006a1e	      3430	channel.c	FUNCTION_83	ELSE_1	ELSE_3	CALL_13
0x69de	      0xe800000000	                          call 0x4006a23	      3433	channel.c	FUNCTION_83	IF_11	CALL_14
0x69e3	            0x85c0	                           test eax, eax	      3433	channel.c	FUNCTION_83	IF_11	CALL_14
0x69e5	            0x7424	                            je 0x4006a4b	      3433	channel.c	FUNCTION_83	IF_11	CALL_14
0x69e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3434	channel.c	FUNCTION_83	CALL_16
0x69eb	          0x4889c7	                            mov rdi, rax	      3434	channel.c	FUNCTION_83	CALL_16
0x69ee	      0xe800000000	                          call 0x4006a33	      3434	channel.c	FUNCTION_83	CALL_16
0x69f3	            0x89c2	                            mov edx, eax	      3434	channel.c	FUNCTION_83	CALL_16
0x69f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3434	channel.c	FUNCTION_83	CALL_16
0x69f9	      0xbe00000000	                              mov esi, 0	      3434	channel.c	FUNCTION_83	CALL_16
0x69fe	          0x4889c7	                            mov rdi, rax	      3434	channel.c	FUNCTION_83	CALL_16
0x6a01	      0xb800000000	                              mov eax, 0	      3434	channel.c	FUNCTION_83	CALL_16
0x6a06	      0xe800000000	                          call 0x4006a4b	      3434	channel.c	FUNCTION_83	CALL_16
0x6a0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3435	channel.c	FUNCTION_83
0x6a0f	              0xc9	                                   leave	      3436	channel.c	FUNCTION_83
0x6a10	              0xc3	                                     ret	      3436	channel.c	FUNCTION_83
get_job_options	functions,0:SWITCH,0:CALL,153:ELSE,44:IF,117:FOR,2:WHILE,0:DO,0	1636
0x86b9	              0x55	                                push rbp	      4494	channel.c	FUNCTION_110
0x86ba	          0x4889e5	                            mov rbp, rsp	      4494	channel.c	FUNCTION_110
0x86bd	            0x4154	                                push r12	      4494	channel.c	FUNCTION_110
0x86bf	              0x53	                                push rbx	      4494	channel.c	FUNCTION_110
0x86c0	    0x4881ec100100	                          sub rsp, 0x110	      4494	channel.c	FUNCTION_110
0x86c7	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	      4494	channel.c	FUNCTION_110
0x86ce	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      4494	channel.c	FUNCTION_110
0x86d5	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	      4494	channel.c	FUNCTION_110
0x86db	    0x898de8feffff	            mov dword [rbp - 0x118], ecx	      4494	channel.c	FUNCTION_110
0x86e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      4494	channel.c	FUNCTION_110
0x86ea	        0x488945e8	             mov qword [rbp - 0x18], rax	      4494	channel.c	FUNCTION_110
0x86ee	            0x31c0	                            xor eax, eax	      4494	channel.c	FUNCTION_110
0x86f0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4502	channel.c	FUNCTION_110	IF_1
0x86f7	            0x8b00	                    mov eax, dword [rax]	      4502	channel.c	FUNCTION_110	IF_1
0x86f9	            0x85c0	                           test eax, eax	      4502	channel.c	FUNCTION_110	IF_1
0x86fb	            0x750a	                           jne 0x4008747	      4502	channel.c	FUNCTION_110	IF_1
0x86fd	      0xb801000000	                              mov eax, 1	      4503	channel.c	FUNCTION_110	IF_1
0x8702	      0xe9e11b0000	                           jmp 0x400a328	      4503	channel.c	FUNCTION_110	IF_1
0x8707	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4504	channel.c	FUNCTION_110	IF_2
0x870e	            0x8b00	                    mov eax, dword [rax]	      4504	channel.c	FUNCTION_110	IF_2
0x8710	          0x83f806	                              cmp eax, 6	      4504	channel.c	FUNCTION_110	IF_2
0x8713	            0x741c	                            je 0x4008771	      4504	channel.c	FUNCTION_110	IF_2
0x8715	      0xbf00000000	                              mov edi, 0	      4506	channel.c	FUNCTION_110	IF_2	CALL_2
0x871a	      0xe800000000	                          call 0x400875f	      4506	channel.c	FUNCTION_110	IF_2	CALL_2
0x871f	          0x4889c7	                            mov rdi, rax	      4506	channel.c	FUNCTION_110	IF_2	CALL_2
0x8722	      0xe800000000	                          call 0x4008767	      4506	channel.c	FUNCTION_110	IF_2	CALL_2
0x8727	      0xb800000000	                              mov eax, 0	      4507	channel.c	FUNCTION_110	IF_2
0x872c	      0xe9b71b0000	                           jmp 0x400a328	      4507	channel.c	FUNCTION_110	IF_2
0x8731	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4509	channel.c	FUNCTION_110
0x8738	        0x488b4008	                mov rax, qword [rax + 8]	      4509	channel.c	FUNCTION_110
0x873c	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4509	channel.c	FUNCTION_110
0x8743	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      4510	channel.c	FUNCTION_110	IF_3
0x874b	            0x750a	                           jne 0x4008797	      4510	channel.c	FUNCTION_110	IF_3
0x874d	      0xb801000000	                              mov eax, 1	      4511	channel.c	FUNCTION_110	IF_3
0x8752	      0xe9911b0000	                           jmp 0x400a328	      4511	channel.c	FUNCTION_110	IF_3
0x8757	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4513	channel.c	FUNCTION_110
0x875e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4513	channel.c	FUNCTION_110
0x8762	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      4513	channel.c	FUNCTION_110
0x8768	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4514	channel.c	FUNCTION_110	FOR_1
0x876f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4514	channel.c	FUNCTION_110	FOR_1
0x8773	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4514	channel.c	FUNCTION_110	FOR_1
0x877a	      0xe9af1a0000	                           jmp 0x400a26e	      4514	channel.c	FUNCTION_110	FOR_1
0x877f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x8786	        0x488b4008	                mov rax, qword [rax + 8]	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x878a	          0x4885c0	                           test rax, rax	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x878d	     0xf84931a0000	                            je 0x400a266	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x8793	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x879a	        0x488b4008	                mov rax, qword [rax + 8]	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x879e	    0x483d00000000	                              cmp rax, 0	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x87a4	     0xf847c1a0000	                            je 0x400a266	      4515	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_3
0x87aa	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4517	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_4
0x87b1	          0x4889c7	                            mov rdi, rax	      4517	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_4
0x87b4	      0xe800000000	                          call 0x40087f9	      4517	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_4
0x87b9	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4517	channel.c	FUNCTION_110	FOR_1	IF_4	CALL_4
0x87c0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4519	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	CALL_5
0x87c7	        0x488b4008	                mov rax, qword [rax + 8]	      4519	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	CALL_5
0x87cb	      0xbe00000000	                              mov esi, 0	      4519	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	CALL_5
0x87d0	          0x4889c7	                            mov rdi, rax	      4519	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	CALL_5
0x87d3	      0xe800000000	                          call 0x4008818	      4519	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	CALL_5
0x87d8	            0x85c0	                           test eax, eax	      4519	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	CALL_5
0x87da	            0x7549	                           jne 0x4008865	      4519	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	CALL_5
0x87dc	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4521	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_6
0x87e2	          0x83e001	                              and eax, 1	      4521	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_6
0x87e5	            0x85c0	                           test eax, eax	      4521	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_6
0x87e7	     0xf84501a0000	                            je 0x400a27d	      4521	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_6
0x87ed	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x87f4	        0x488d5008	                      lea rdx, [rax + 8]	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x87f8	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x87ff	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x8806	      0xb901000000	                              mov ecx, 1	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x880b	          0x4889c7	                            mov rdi, rax	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x880e	      0xe88cfaffff	                    call sym.handle_mode	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x8813	            0x85c0	                           test eax, eax	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x8815	     0xf85041a0000	                           jne 0x400a25f	      4523	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7	CALL_6
0x881b	      0xb800000000	                              mov eax, 0	      4524	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7
0x8820	      0xe9c31a0000	                           jmp 0x400a328	      4524	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_7
0x8825	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4526	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x882c	        0x488b4008	                mov rax, qword [rax + 8]	      4526	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x8830	      0xbe00000000	                              mov esi, 0	      4526	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x8835	          0x4889c7	                            mov rdi, rax	      4526	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x8838	      0xe800000000	                          call 0x400887d	      4526	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x883d	            0x85c0	                           test eax, eax	      4526	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x883f	            0x7549	                           jne 0x40088ca	      4526	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	CALL_7
0x8841	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4528	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x8847	          0x83e002	                              and eax, 2	      4528	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x884a	            0x85c0	                           test eax, eax	      4528	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x884c	     0xf84ee190000	                            je 0x400a280	      4528	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0x8852	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x8859	        0x488d500c	                    lea rdx, [rax + 0xc]	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x885d	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x8864	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x886b	      0xb902000000	                              mov ecx, 2	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x8870	          0x4889c7	                            mov rdi, rax	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x8873	      0xe827faffff	                    call sym.handle_mode	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x8878	            0x85c0	                           test eax, eax	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x887a	     0xf859f190000	                           jne 0x400a25f	      4530	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10	CALL_8
0x8880	      0xb800000000	                              mov eax, 0	      4532	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10
0x8885	      0xe95e1a0000	                           jmp 0x400a328	      4532	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_10
0x888a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4534	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x8891	        0x488b4008	                mov rax, qword [rax + 8]	      4534	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x8895	      0xbe00000000	                              mov esi, 0	      4534	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x889a	          0x4889c7	                            mov rdi, rax	      4534	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x889d	      0xe800000000	                          call 0x40088e2	      4534	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x88a2	            0x85c0	                           test eax, eax	      4534	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x88a4	            0x7549	                           jne 0x400892f	      4534	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	CALL_9
0x88a6	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4536	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x88ac	          0x83e004	                              and eax, 4	      4536	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x88af	            0x85c0	                           test eax, eax	      4536	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x88b1	     0xf848c190000	                            je 0x400a283	      4536	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0x88b7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88be	        0x488d5010	                   lea rdx, [rax + 0x10]	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88c2	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88c9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88d0	      0xb904000000	                              mov ecx, 4	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88d5	          0x4889c7	                            mov rdi, rax	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88d8	      0xe8c2f9ffff	                    call sym.handle_mode	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88dd	            0x85c0	                           test eax, eax	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88df	     0xf853a190000	                           jne 0x400a25f	      4538	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13	CALL_10
0x88e5	      0xb800000000	                              mov eax, 0	      4540	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13
0x88ea	      0xe9f9190000	                           jmp 0x400a328	      4540	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_13
0x88ef	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4542	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x88f6	        0x488b4008	                mov rax, qword [rax + 8]	      4542	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x88fa	      0xbe00000000	                              mov esi, 0	      4542	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x88ff	          0x4889c7	                            mov rdi, rax	      4542	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x8902	      0xe800000000	                          call 0x4008947	      4542	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x8907	            0x85c0	                           test eax, eax	      4542	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x8909	            0x7549	                           jne 0x4008994	      4542	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	CALL_11
0x890b	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4544	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x8911	          0x83e008	                              and eax, 8	      4544	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x8914	            0x85c0	                           test eax, eax	      4544	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x8916	     0xf842a190000	                            je 0x400a286	      4544	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0x891c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x8923	        0x488d5014	                   lea rdx, [rax + 0x14]	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x8927	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x892e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x8935	      0xb908000000	                              mov ecx, 8	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x893a	          0x4889c7	                            mov rdi, rax	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x893d	      0xe85df9ffff	                    call sym.handle_mode	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x8942	            0x85c0	                           test eax, eax	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x8944	     0xf85d5180000	                           jne 0x400a25f	      4546	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16	CALL_12
0x894a	      0xb800000000	                              mov eax, 0	      4548	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16
0x894f	      0xe994190000	                           jmp 0x400a328	      4548	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_16
0x8954	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4550	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x895b	        0x488b4008	                mov rax, qword [rax + 8]	      4550	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x895f	      0xbe00000000	                              mov esi, 0	      4550	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x8964	          0x4889c7	                            mov rdi, rax	      4550	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x8967	      0xe800000000	                          call 0x40089ac	      4550	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x896c	            0x85c0	                           test eax, eax	      4550	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x896e	            0x7438	                            je 0x40089e8	      4550	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_13
0x8970	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4551	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x8977	        0x488b4008	                mov rax, qword [rax + 8]	      4551	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x897b	      0xbe00000000	                              mov esi, 0	      4551	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x8980	          0x4889c7	                            mov rdi, rax	      4551	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x8983	      0xe800000000	                          call 0x40089c8	      4551	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x8988	            0x85c0	                           test eax, eax	      4551	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x898a	            0x741c	                            je 0x40089e8	      4551	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_14
0x898c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4552	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x8993	        0x488b4008	                mov rax, qword [rax + 8]	      4552	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x8997	      0xbe00000000	                              mov esi, 0	      4552	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x899c	          0x4889c7	                            mov rdi, rax	      4552	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x899f	      0xe800000000	                          call 0x40089e4	      4552	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x89a4	            0x85c0	                           test eax, eax	      4552	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x89a6	            0x7557	                           jne 0x4008a3f	      4552	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	CALL_15
0x89a8	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4554	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x89ae	      0x2500000100	                        and eax, 0x10000	      4554	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x89b3	            0x85c0	                           test eax, eax	      4554	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x89b5	     0xf848e180000	                            je 0x400a289	      4554	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0x89bb	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89c2	        0x488b4008	                mov rax, qword [rax + 8]	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89c6	           0xfb600	                   movzx eax, byte [rax]	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89c9	           0xfb6c0	                           movzx eax, al	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89cc	            0x89c7	                            mov edi, eax	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89ce	      0xe8befcffff	                 call sym.part_from_char	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89d3	            0x89c1	                            mov ecx, eax	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89d5	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89dc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89e3	            0x89ce	                            mov esi, ecx	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89e5	          0x4889c7	                            mov rdi, rax	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89e8	      0xe89bf9ffff	                      call sym.handle_io	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89ed	            0x85c0	                           test eax, eax	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89ef	     0xf852a180000	                           jne 0x400a25f	      4556	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19	CALL_17
0x89f5	      0xb800000000	                              mov eax, 0	      4557	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19
0x89fa	      0xe9e9180000	                           jmp 0x400a328	      4557	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_19
0x89ff	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4559	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x8a06	        0x488b4008	                mov rax, qword [rax + 8]	      4559	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x8a0a	      0xbe00000000	                              mov esi, 0	      4559	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x8a0f	          0x4889c7	                            mov rdi, rax	      4559	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x8a12	      0xe800000000	                          call 0x4008a57	      4559	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x8a17	            0x85c0	                           test eax, eax	      4559	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x8a19	            0x743c	                            je 0x4008a97	      4559	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_18
0x8a1b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4560	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x8a22	        0x488b4008	                mov rax, qword [rax + 8]	      4560	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x8a26	      0xbe00000000	                              mov esi, 0	      4560	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x8a2b	          0x4889c7	                            mov rdi, rax	      4560	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x8a2e	      0xe800000000	                          call 0x4008a73	      4560	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x8a33	            0x85c0	                           test eax, eax	      4560	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x8a35	            0x7420	                            je 0x4008a97	      4560	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_19
0x8a37	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4561	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x8a3e	        0x488b4008	                mov rax, qword [rax + 8]	      4561	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x8a42	      0xbe00000000	                              mov esi, 0	      4561	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x8a47	          0x4889c7	                            mov rdi, rax	      4561	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x8a4a	      0xe800000000	                          call 0x4008a8f	      4561	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x8a4f	            0x85c0	                           test eax, eax	      4561	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x8a51	     0xf85aa000000	                           jne 0x4008b41	      4561	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_20
0x8a57	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4563	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x8a5e	        0x488b4008	                mov rax, qword [rax + 8]	      4563	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x8a62	           0xfb600	                   movzx eax, byte [rax]	      4563	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x8a65	           0xfb6c0	                           movzx eax, al	      4563	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x8a68	            0x89c7	                            mov edi, eax	      4563	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x8a6a	      0xe822fcffff	                 call sym.part_from_char	      4563	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x8a6f	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4563	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_21
0x8a75	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4565	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x8a7b	      0x2500000100	                        and eax, 0x10000	      4565	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x8a80	            0x85c0	                           test eax, eax	      4565	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x8a82	     0xf84c4170000	                            je 0x400a28c	      4565	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0x8a88	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8a8f	            0x8b00	                    mov eax, dword [rax]	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8a91	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8a97	          0x83ea01	                              sub edx, 1	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8a9a	      0xbe00000800	                        mov esi, 0x80000	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8a9f	            0x89d1	                            mov ecx, edx	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8aa1	            0xd3e6	                             shl esi, cl	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8aa3	            0x89f2	                            mov edx, esi	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8aa5	             0x9c2	                             or edx, eax	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8aa7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8aae	            0x8910	                    mov dword [rax], edx	      4567	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8ab0	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ab6	          0x4889d0	                            mov rax, rdx	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ab9	        0x48c1e006	                              shl rax, 6	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8abd	          0x4801d0	                            add rax, rdx	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ac0	        0x488d5020	                   lea rdx, [rax + 0x20]	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ac4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8acb	          0x4801d0	                            add rax, rdx	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ace	        0x488d5008	                      lea rdx, [rax + 8]	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ad2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ad9	          0x4889d6	                            mov rsi, rdx	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8adc	          0x4889c7	                            mov rdi, rax	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8adf	      0xe800000000	                          call 0x4008b24	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ae4	          0x4889c1	                            mov rcx, rax	      4569	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	CALL_22
0x8ae7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4568	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8aee	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4568	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8af4	        0x4883c226	                           add rdx, 0x26	      4568	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8af8	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4568	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8afc	      0xe91e170000	                           jmp 0x400a25f	      4568	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20
0x8b01	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4571	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x8b08	        0x488b4008	                mov rax, qword [rax + 8]	      4571	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x8b0c	      0xbe00000000	                              mov esi, 0	      4571	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x8b11	          0x4889c7	                            mov rdi, rax	      4571	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x8b14	      0xe800000000	                          call 0x4008b59	      4571	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x8b19	            0x85c0	                           test eax, eax	      4571	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x8b1b	            0x7534	                           jne 0x4008b91	      4571	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_23
0x8b1d	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4573	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x8b23	          0x83e001	                              and eax, 1	      4573	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x8b26	            0x85c0	                           test eax, eax	      4573	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x8b28	     0xf8421170000	                            je 0x400a28f	      4573	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0x8b2e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4575	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x8b35	          0x4889c7	                            mov rdi, rax	      4575	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x8b38	      0xe800000000	                          call 0x4008b7d	      4575	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x8b3d	            0x89c2	                            mov edx, eax	      4575	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x8b3f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4575	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x8b46	    0x899060010000	            mov dword [rax + 0x160], edx	      4575	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x8b4c	      0xe9ce160000	                           jmp 0x400a25f	      4575	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	CALL_24
0x8b51	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4577	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x8b58	        0x488b4008	                mov rax, qword [rax + 8]	      4577	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x8b5c	      0xbe00000000	                              mov esi, 0	      4577	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x8b61	          0x4889c7	                            mov rdi, rax	      4577	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x8b64	      0xe800000000	                          call 0x4008ba9	      4577	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x8b69	            0x85c0	                           test eax, eax	      4577	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x8b6b	            0x743c	                            je 0x4008be9	      4577	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_25
0x8b6d	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4578	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x8b74	        0x488b4008	                mov rax, qword [rax + 8]	      4578	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x8b78	      0xbe00000000	                              mov esi, 0	      4578	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x8b7d	          0x4889c7	                            mov rdi, rax	      4578	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x8b80	      0xe800000000	                          call 0x4008bc5	      4578	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x8b85	            0x85c0	                           test eax, eax	      4578	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x8b87	            0x7420	                            je 0x4008be9	      4578	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_26
0x8b89	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4579	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x8b90	        0x488b4008	                mov rax, qword [rax + 8]	      4579	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x8b94	      0xbe00000000	                              mov esi, 0	      4579	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x8b99	          0x4889c7	                            mov rdi, rax	      4579	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x8b9c	      0xe800000000	                          call 0x4008be1	      4579	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x8ba1	            0x85c0	                           test eax, eax	      4579	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x8ba3	     0xf852f010000	                           jne 0x4008d18	      4579	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_27
0x8ba9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4581	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x8bb0	        0x488b4008	                mov rax, qword [rax + 8]	      4581	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x8bb4	           0xfb600	                   movzx eax, byte [rax]	      4581	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x8bb7	           0xfb6c0	                           movzx eax, al	      4581	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x8bba	            0x89c7	                            mov edi, eax	      4581	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x8bbc	      0xe8d0faffff	                 call sym.part_from_char	      4581	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x8bc1	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4581	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_28
0x8bc7	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4583	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x8bcd	      0x2500000100	                        and eax, 0x10000	      4583	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x8bd2	            0x85c0	                           test eax, eax	      4583	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x8bd4	     0xf8478160000	                            je 0x400a292	      4583	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0x8bda	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8be1	            0x8b00	                    mov eax, dword [rax]	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8be3	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8be9	          0x83ea01	                              sub edx, 1	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8bec	      0xbe00000001	                      mov esi, 0x1000000	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8bf1	            0x89d1	                            mov ecx, edx	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8bf3	            0xd3e6	                             shl esi, cl	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8bf5	            0x89f2	                            mov edx, esi	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8bf7	             0x9c2	                             or edx, eax	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8bf9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8c00	            0x8910	                    mov dword [rax], edx	      4585	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24
0x8c02	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c09	          0x4889c7	                            mov rdi, rax	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c0c	      0xe800000000	                          call 0x4008c51	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c11	            0x89c1	                            mov ecx, eax	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c13	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c1a	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c20	        0x4883c254	                           add rdx, 0x54	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c24	          0x890c90	            mov dword [rax + rdx*4], ecx	      4586	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	CALL_29
0x8c27	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4587	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c2e	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4587	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c34	        0x4883c254	                           add rdx, 0x54	      4587	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c38	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4587	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c3b	            0x85c0	                           test eax, eax	      4587	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c3d	            0x7f3f	                            jg 0x4008cbe	      4587	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c3f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c46	          0x4889c7	                            mov rdi, rax	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c49	      0xe800000000	                          call 0x4008c8e	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c4e	          0x4989c4	                            mov r12, rax	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c51	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c58	        0x488b5808	                mov rbx, qword [rax + 8]	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c5c	      0xbf00000000	                              mov edi, 0	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c61	      0xe800000000	                          call 0x4008ca6	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c66	          0x4c89e2	                            mov rdx, r12	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c69	          0x4889de	                            mov rsi, rbx	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c6c	          0x4889c7	                            mov rdi, rax	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c6f	      0xe800000000	                          call 0x4008cb4	      4589	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26	CALL_32
0x8c74	      0xb800000000	                              mov eax, 0	      4590	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c79	      0xe96a160000	                           jmp 0x400a328	      4590	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_26
0x8c7e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8c85	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8c8b	        0x4883c254	                           add rdx, 0x54	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8c8f	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8c92	            0x89c7	                            mov edi, eax	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8c94	      0xe800000000	                          call 0x4008cd9	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8c99	          0x4885c0	                           test rax, rax	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8c9c	     0xf857d150000	                           jne 0x400a25f	      4592	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_33
0x8ca2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8ca9	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8caf	        0x4883c254	                           add rdx, 0x54	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cb3	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cb6	          0x4863d8	                         movsxd rbx, eax	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cb9	      0xbf00000000	                              mov edi, 0	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cbe	      0xe800000000	                          call 0x4008d03	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cc3	          0x4889de	                            mov rsi, rbx	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cc6	          0x4889c7	                            mov rdi, rax	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cc9	      0xe800000000	                          call 0x4008d0e	      4594	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27	CALL_35
0x8cce	      0xb800000000	                              mov eax, 0	      4595	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27
0x8cd3	      0xe910160000	                           jmp 0x400a328	      4595	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_27
0x8cd8	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4598	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x8cdf	        0x488b4008	                mov rax, qword [rax + 8]	      4598	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x8ce3	      0xbe00000000	                              mov esi, 0	      4598	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x8ce8	          0x4889c7	                            mov rdi, rax	      4598	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x8ceb	      0xe800000000	                          call 0x4008d30	      4598	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x8cf0	            0x85c0	                           test eax, eax	      4598	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x8cf2	            0x7420	                            je 0x4008d54	      4598	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_36
0x8cf4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4599	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x8cfb	        0x488b4008	                mov rax, qword [rax + 8]	      4599	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x8cff	      0xbe00000000	                              mov esi, 0	      4599	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x8d04	          0x4889c7	                            mov rdi, rax	      4599	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x8d07	      0xe800000000	                          call 0x4008d4c	      4599	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x8d0c	            0x85c0	                           test eax, eax	      4599	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x8d0e	     0xf8584000000	                           jne 0x4008dd8	      4599	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_37
0x8d14	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4601	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x8d1b	        0x488b4008	                mov rax, qword [rax + 8]	      4601	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x8d1f	           0xfb600	                   movzx eax, byte [rax]	      4601	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x8d22	           0xfb6c0	                           movzx eax, al	      4601	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x8d25	            0x89c7	                            mov edi, eax	      4601	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x8d27	      0xe865f9ffff	                 call sym.part_from_char	      4601	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x8d2c	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4601	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_38
0x8d32	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4603	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x8d38	      0x2500000100	                        and eax, 0x10000	      4603	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x8d3d	            0x85c0	                           test eax, eax	      4603	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x8d3f	     0xf8410150000	                            je 0x400a295	      4603	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0x8d45	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d4c	            0x8b00	                    mov eax, dword [rax]	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d4e	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d54	          0x83ea01	                              sub edx, 1	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d57	      0xbe00000020	                     mov esi, 0x20000000	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d5c	            0x89d1	                            mov ecx, edx	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d5e	            0xd3e6	                             shl esi, cl	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d60	            0x89f2	                            mov edx, esi	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d62	             0x9c2	                             or edx, eax	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d64	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d6b	            0x8910	                    mov dword [rax], edx	      4605	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28
0x8d6d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d74	          0x4889c7	                            mov rdi, rax	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d77	      0xe800000000	                          call 0x4008dbc	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d7c	            0x89c1	                            mov ecx, eax	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d7e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d85	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d8b	        0x4883c258	                           add rdx, 0x58	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d8f	        0x894c9004	        mov dword [rax + rdx*4 + 4], ecx	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d93	      0xe987140000	                           jmp 0x400a25f	      4606	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	CALL_39
0x8d98	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4608	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x8d9f	        0x488b4008	                mov rax, qword [rax + 8]	      4608	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x8da3	      0xbe00000000	                              mov esi, 0	      4608	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x8da8	          0x4889c7	                            mov rdi, rax	      4608	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x8dab	      0xe800000000	                          call 0x4008df0	      4608	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x8db0	            0x85c0	                           test eax, eax	      4608	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x8db2	            0x7420	                            je 0x4008e14	      4608	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_40
0x8db4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4609	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x8dbb	        0x488b4008	                mov rax, qword [rax + 8]	      4609	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x8dbf	      0xbe00000000	                              mov esi, 0	      4609	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x8dc4	          0x4889c7	                            mov rdi, rax	      4609	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x8dc7	      0xe800000000	                          call 0x4008e0c	      4609	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x8dcc	            0x85c0	                           test eax, eax	      4609	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x8dce	     0xf8586000000	                           jne 0x4008e9a	      4609	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_41
0x8dd4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4611	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x8ddb	        0x488b4008	                mov rax, qword [rax + 8]	      4611	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x8ddf	           0xfb600	                   movzx eax, byte [rax]	      4611	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x8de2	           0xfb6c0	                           movzx eax, al	      4611	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x8de5	            0x89c7	                            mov edi, eax	      4611	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x8de7	      0xe8a5f8ffff	                 call sym.part_from_char	      4611	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x8dec	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4611	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_42
0x8df2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4613	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x8df8	      0x2500000100	                        and eax, 0x10000	      4613	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x8dfd	            0x85c0	                           test eax, eax	      4613	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x8dff	     0xf8453140000	                            je 0x400a298	      4613	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0x8e05	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e0c	          0x8b4004	                mov eax, dword [rax + 4]	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e0f	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e15	          0x83ea01	                              sub edx, 1	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e18	      0xbe01000000	                              mov esi, 1	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e1d	            0x89d1	                            mov ecx, edx	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e1f	            0xd3e6	                             shl esi, cl	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e21	            0x89f2	                            mov edx, esi	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e23	             0x9c2	                             or edx, eax	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e25	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e2c	          0x895004	                mov dword [rax + 4], edx	      4615	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30
0x8e2f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e36	          0x4889c7	                            mov rdi, rax	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e39	      0xe800000000	                          call 0x4008e7e	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e3e	            0x89c1	                            mov ecx, eax	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e40	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e47	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e4d	        0x4883c25c	                           add rdx, 0x5c	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e51	        0x894c9004	        mov dword [rax + rdx*4 + 4], ecx	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e55	      0xe9c5130000	                           jmp 0x400a25f	      4616	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	CALL_43
0x8e5a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4618	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x8e61	        0x488b4008	                mov rax, qword [rax + 8]	      4618	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x8e65	      0xbe00000000	                              mov esi, 0	      4618	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x8e6a	          0x4889c7	                            mov rdi, rax	      4618	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x8e6d	      0xe800000000	                          call 0x4008eb2	      4618	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x8e72	            0x85c0	                           test eax, eax	      4618	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x8e74	            0x7420	                            je 0x4008ed6	      4618	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_44
0x8e76	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4619	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x8e7d	        0x488b4008	                mov rax, qword [rax + 8]	      4619	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x8e81	      0xbe00000000	                              mov esi, 0	      4619	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x8e86	          0x4889c7	                            mov rdi, rax	      4619	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x8e89	      0xe800000000	                          call 0x4008ece	      4619	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x8e8e	            0x85c0	                           test eax, eax	      4619	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x8e90	     0xf85f3000000	                           jne 0x4008fc9	      4619	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_45
0x8e96	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4623	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x8e9c	      0x2500000100	                        and eax, 0x10000	      4623	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x8ea1	            0x85c0	                           test eax, eax	      4623	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x8ea3	     0xf84b2130000	                            je 0x400a29b	      4623	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0x8ea9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4625	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8eb0	        0x488b4008	                mov rax, qword [rax + 8]	      4625	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8eb4	        0x4883c003	                              add rax, 3	      4625	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8eb8	           0xfb600	                   movzx eax, byte [rax]	      4625	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ebb	            0x3c74	                            cmp al, 0x74	      4625	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ebd	            0x752f	                           jne 0x4008f2e	      4625	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ebf	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4627	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ec6	    0x480590010000	                          add rax, 0x190	      4627	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ecc	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4627	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ed3	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4628	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8eda	            0x8b00	                    mov eax, dword [rax]	      4628	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8edc	       0xd00004000	                        or eax, 0x400000	      4628	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ee1	            0x89c2	                            mov edx, eax	      4628	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8ee3	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4628	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8eea	            0x8910	                    mov dword [rax], edx	      4628	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8eec	            0xeb2d	                           jmp 0x4008f5b	      4628	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_34
0x8eee	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4632	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8ef5	    0x480598010000	                          add rax, 0x198	      4632	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8efb	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4632	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8f02	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4633	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8f09	            0x8b00	                    mov eax, dword [rax]	      4633	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8f0b	       0xd00008000	                        or eax, 0x800000	      4633	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8f10	            0x89c2	                            mov edx, eax	      4633	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8f12	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4633	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8f19	            0x8910	                    mov dword [rax], edx	      4633	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	ELSE_11
0x8f1b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4635	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x8f22	          0x4889c7	                            mov rdi, rax	      4635	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x8f25	      0xe800000000	                          call 0x4008f6a	      4635	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x8f2a	          0x4889c2	                            mov rdx, rax	      4635	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x8f2d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4635	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x8f34	          0x488910	                    mov qword [rax], rdx	      4635	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	CALL_46
0x8f37	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4636	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x8f3e	          0x488b00	                    mov rax, qword [rax]	      4636	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x8f41	          0x4885c0	                           test rax, rax	      4636	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x8f44	     0xf89d4120000	                           jns 0x400a25e	      4636	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x8f4a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f51	          0x4889c7	                            mov rdi, rax	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f54	      0xe800000000	                          call 0x4008f99	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f59	          0x4989c4	                            mov r12, rax	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f5c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f63	        0x488b5808	                mov rbx, qword [rax + 8]	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f67	      0xbf00000000	                              mov edi, 0	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f6c	      0xe800000000	                          call 0x4008fb1	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f71	          0x4c89e2	                            mov rdx, r12	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f74	          0x4889de	                            mov rsi, rbx	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f77	          0x4889c7	                            mov rdi, rax	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f7a	      0xe800000000	                          call 0x4008fbf	      4638	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35	CALL_49
0x8f7f	      0xb800000000	                              mov eax, 0	      4639	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x8f84	      0xe95f130000	                           jmp 0x400a328	      4639	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_35
0x8f89	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4642	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x8f90	        0x488b4008	                mov rax, qword [rax + 8]	      4642	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x8f94	      0xbe00000000	                              mov esi, 0	      4642	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x8f99	          0x4889c7	                            mov rdi, rax	      4642	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x8f9c	      0xe800000000	                          call 0x4008fe1	      4642	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x8fa1	            0x85c0	                           test eax, eax	      4642	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x8fa3	            0x7579	                           jne 0x400905e	      4642	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	CALL_50
0x8fa5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4644	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x8fab	      0x2500000100	                        and eax, 0x10000	      4644	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x8fb0	            0x85c0	                           test eax, eax	      4644	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x8fb2	     0xf84a6120000	                            je 0x400a29e	      4644	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0x8fb8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4646	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x8fbf	            0x8b00	                    mov eax, dword [rax]	      4646	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x8fc1	       0xd00000008	                    or eax, section_end.	      4646	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x8fc6	            0x89c2	                            mov edx, eax	      4646	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x8fc8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4646	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x8fcf	            0x8910	                    mov dword [rax], edx	      4646	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x8fd1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4647	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x8fd8	            0x8b00	                    mov eax, dword [rax]	      4647	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x8fda	          0x83f80a	                            cmp eax, 0xa	      4647	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x8fdd	            0x7421	                            je 0x4009040	      4647	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x8fdf	      0xbf00000000	                              mov edi, 0	      4649	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x8fe4	      0xe800000000	                          call 0x4009029	      4649	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x8fe9	      0xbe00000000	                              mov esi, 0	      4649	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x8fee	          0x4889c7	                            mov rdi, rax	      4649	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x8ff1	      0xe800000000	                          call 0x4009036	      4649	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38	CALL_52
0x8ff6	      0xb800000000	                              mov eax, 0	      4650	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x8ffb	      0xe9e8120000	                           jmp 0x400a328	      4650	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_38
0x9000	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4652	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x9007	        0x488b5008	                mov rdx, qword [rax + 8]	      4652	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x900b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4652	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x9012	    0x488990880100	            mov qword [rax + 0x188], rdx	      4652	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x9019	      0xe901120000	                           jmp 0x400a25f	      4652	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36
0x901e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4654	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x9025	        0x488b4008	                mov rax, qword [rax + 8]	      4654	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x9029	      0xbe00000000	                              mov esi, 0	      4654	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x902e	          0x4889c7	                            mov rdi, rax	      4654	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x9031	      0xe800000000	                          call 0x4009076	      4654	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x9036	            0x85c0	                           test eax, eax	      4654	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x9038	     0xf8591000000	                           jne 0x400910f	      4654	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_53
0x903e	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4656	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x9044	          0x83e010	                           and eax, 0x10	      4656	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x9047	            0x85c0	                           test eax, eax	      4656	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x9049	     0xf8412120000	                            je 0x400a2a1	      4656	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0x904f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4658	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39
0x9056	            0x8b00	                    mov eax, dword [rax]	      4658	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39
0x9058	          0x83c810	                            or eax, 0x10	      4658	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39
0x905b	            0x89c2	                            mov edx, eax	      4658	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39
0x905d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4658	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39
0x9064	            0x8910	                    mov dword [rax], edx	      4658	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39
0x9066	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x906d	    0x488d90a80100	                  lea rdx, [rax + 0x1a8]	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x9074	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x907b	          0x4889d6	                            mov rsi, rdx	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x907e	          0x4889c7	                            mov rdi, rax	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x9081	      0xe800000000	                          call 0x40090c6	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x9086	          0x4889c2	                            mov rdx, rax	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x9089	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x9090	    0x488990a00100	            mov qword [rax + 0x1a0], rdx	      4659	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	CALL_54
0x9097	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4660	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x909e	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      4660	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x90a5	          0x4885c0	                           test rax, rax	      4660	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x90a8	     0xf8571110000	                           jne 0x400a25f	      4660	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x90ae	      0xbf00000000	                              mov edi, 0	      4662	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x90b3	      0xe800000000	                          call 0x40090f8	      4662	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x90b8	      0xbe00000000	                              mov esi, 0	      4662	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x90bd	          0x4889c7	                            mov rdi, rax	      4662	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x90c0	      0xe800000000	                          call 0x4009105	      4662	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41	CALL_56
0x90c5	      0xb800000000	                              mov eax, 0	      4663	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x90ca	      0xe919120000	                           jmp 0x400a328	      4663	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_41
0x90cf	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4666	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x90d6	        0x488b4008	                mov rax, qword [rax + 8]	      4666	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x90da	      0xbe00000000	                              mov esi, 0	      4666	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x90df	          0x4889c7	                            mov rdi, rax	      4666	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x90e2	      0xe800000000	                          call 0x4009127	      4666	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x90e7	            0x85c0	                           test eax, eax	      4666	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x90e9	     0xf8591000000	                           jne 0x40091c0	      4666	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_57
0x90ef	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4668	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x90f5	          0x83e020	                           and eax, 0x20	      4668	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x90f8	            0x85c0	                           test eax, eax	      4668	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x90fa	     0xf8464110000	                            je 0x400a2a4	      4668	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0x9100	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4670	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42
0x9107	            0x8b00	                    mov eax, dword [rax]	      4670	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42
0x9109	          0x83c820	                            or eax, 0x20	      4670	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42
0x910c	            0x89c2	                            mov edx, eax	      4670	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42
0x910e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4670	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42
0x9115	            0x8910	                    mov dword [rax], edx	      4670	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42
0x9117	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x911e	    0x488d90b80100	                  lea rdx, [rax + 0x1b8]	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x9125	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x912c	          0x4889d6	                            mov rsi, rdx	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x912f	          0x4889c7	                            mov rdi, rax	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x9132	      0xe800000000	                          call 0x4009177	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x9137	          0x4889c2	                            mov rdx, rax	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x913a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x9141	    0x488990b00100	            mov qword [rax + 0x1b0], rdx	      4671	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	CALL_58
0x9148	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4672	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x914f	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      4672	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x9156	          0x4885c0	                           test rax, rax	      4672	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x9159	     0xf85c0100000	                           jne 0x400a25f	      4672	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x915f	      0xbf00000000	                              mov edi, 0	      4674	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x9164	      0xe800000000	                          call 0x40091a9	      4674	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x9169	      0xbe00000000	                              mov esi, 0	      4674	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x916e	          0x4889c7	                            mov rdi, rax	      4674	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x9171	      0xe800000000	                          call 0x40091b6	      4674	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44	CALL_60
0x9176	      0xb800000000	                              mov eax, 0	      4675	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x917b	      0xe968110000	                           jmp 0x400a328	      4675	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_44
0x9180	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4678	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x9187	        0x488b4008	                mov rax, qword [rax + 8]	      4678	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x918b	      0xbe00000000	                              mov esi, 0	      4678	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x9190	          0x4889c7	                            mov rdi, rax	      4678	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x9193	      0xe800000000	                          call 0x40091d8	      4678	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x9198	            0x85c0	                           test eax, eax	      4678	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x919a	     0xf8591000000	                           jne 0x4009271	      4678	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_61
0x91a0	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4680	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x91a6	          0x83e040	                           and eax, 0x40	      4680	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x91a9	            0x85c0	                           test eax, eax	      4680	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x91ab	     0xf84b6100000	                            je 0x400a2a7	      4680	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0x91b1	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4682	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45
0x91b8	            0x8b00	                    mov eax, dword [rax]	      4682	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45
0x91ba	          0x83c840	                            or eax, 0x40	      4682	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45
0x91bd	            0x89c2	                            mov edx, eax	      4682	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45
0x91bf	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4682	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45
0x91c6	            0x8910	                    mov dword [rax], edx	      4682	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45
0x91c8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91cf	    0x488d90c80100	                  lea rdx, [rax + 0x1c8]	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91d6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91dd	          0x4889d6	                            mov rsi, rdx	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91e0	          0x4889c7	                            mov rdi, rax	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91e3	      0xe800000000	                          call 0x4009228	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91e8	          0x4889c2	                            mov rdx, rax	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91eb	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91f2	    0x488990c00100	            mov qword [rax + 0x1c0], rdx	      4683	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	CALL_62
0x91f9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4684	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x9200	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      4684	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x9207	          0x4885c0	                           test rax, rax	      4684	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x920a	     0xf850f100000	                           jne 0x400a25f	      4684	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x9210	      0xbf00000000	                              mov edi, 0	      4686	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x9215	      0xe800000000	                          call 0x400925a	      4686	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x921a	      0xbe00000000	                              mov esi, 0	      4686	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x921f	          0x4889c7	                            mov rdi, rax	      4686	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x9222	      0xe800000000	                          call 0x4009267	      4686	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47	CALL_64
0x9227	      0xb800000000	                              mov eax, 0	      4687	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x922c	      0xe9b7100000	                           jmp 0x400a328	      4687	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_47
0x9231	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4690	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x9238	        0x488b4008	                mov rax, qword [rax + 8]	      4690	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x923c	      0xbe00000000	                              mov esi, 0	      4690	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x9241	          0x4889c7	                            mov rdi, rax	      4690	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x9244	      0xe800000000	                          call 0x4009289	      4690	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x9249	            0x85c0	                           test eax, eax	      4690	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x924b	     0xf8592000000	                           jne 0x4009323	      4690	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_65
0x9251	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4692	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x9257	      0x2580000000	                           and eax, 0x80	      4692	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x925c	            0x85c0	                           test eax, eax	      4692	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x925e	     0xf8406100000	                            je 0x400a2aa	      4692	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0x9264	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4694	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48
0x926b	            0x8b00	                    mov eax, dword [rax]	      4694	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48
0x926d	             0xc80	                             or al, 0x80	      4694	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48
0x926f	            0x89c2	                            mov edx, eax	      4694	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48
0x9271	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4694	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48
0x9278	            0x8910	                    mov dword [rax], edx	      4694	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48
0x927a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x9281	    0x488d90d80100	                  lea rdx, [rax + 0x1d8]	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x9288	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x928f	          0x4889d6	                            mov rsi, rdx	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x9292	          0x4889c7	                            mov rdi, rax	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x9295	      0xe800000000	                          call 0x40092da	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x929a	          0x4889c2	                            mov rdx, rax	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x929d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x92a4	    0x488990d00100	            mov qword [rax + 0x1d0], rdx	      4695	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	CALL_66
0x92ab	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4696	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x92b2	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      4696	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x92b9	          0x4885c0	                           test rax, rax	      4696	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x92bc	     0xf855d0f0000	                           jne 0x400a25f	      4696	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x92c2	      0xbf00000000	                              mov edi, 0	      4698	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x92c7	      0xe800000000	                          call 0x400930c	      4698	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x92cc	      0xbe00000000	                              mov esi, 0	      4698	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x92d1	          0x4889c7	                            mov rdi, rax	      4698	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x92d4	      0xe800000000	                          call 0x4009319	      4698	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50	CALL_68
0x92d9	      0xb800000000	                              mov eax, 0	      4699	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x92de	      0xe905100000	                           jmp 0x400a328	      4699	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_50
0x92e3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4702	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x92ea	        0x488b4008	                mov rax, qword [rax + 8]	      4702	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x92ee	      0xbe00000000	                              mov esi, 0	      4702	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x92f3	          0x4889c7	                            mov rdi, rax	      4702	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x92f6	      0xe800000000	                          call 0x400933b	      4702	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x92fb	            0x85c0	                           test eax, eax	      4702	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x92fd	     0xf85a2000000	                           jne 0x40093e5	      4702	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_69
0x9303	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      4704	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51
0x930d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4705	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x9314	          0x4889c7	                            mov rdi, rax	      4705	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x9317	      0xe800000000	                          call 0x400935c	      4705	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x931c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4705	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	CALL_70
0x9323	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4707	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x932a	      0xbe00000000	                              mov esi, 0	      4707	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x932f	          0x4889c7	                            mov rdi, rax	      4707	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x9332	      0xe800000000	                          call 0x4009377	      4707	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x9337	            0x85c0	                           test eax, eax	      4707	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x9339	            0x750c	                           jne 0x4009387	      4707	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52	CALL_71
0x933b	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	      4708	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52
0x9345	            0xeb46	                           jmp 0x40093cd	      4708	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	IF_52
0x9347	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4709	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x934e	      0xbe00000000	                              mov esi, 0	      4709	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x9353	          0x4889c7	                            mov rdi, rax	      4709	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x9356	      0xe800000000	                          call 0x400939b	      4709	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x935b	            0x85c0	                           test eax, eax	      4709	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x935d	            0x742e	                            je 0x40093cd	      4709	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_72
0x935f	      0xbf00000000	                              mov edi, 0	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x9364	      0xe800000000	                          call 0x40093a9	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x9369	          0x4889c1	                            mov rcx, rax	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x936c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x9373	          0x4889c2	                            mov rdx, rax	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x9376	      0xbe00000000	                              mov esi, 0	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x937b	          0x4889cf	                            mov rdi, rcx	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x937e	      0xe800000000	                          call 0x40093c3	      4711	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53	CALL_74
0x9383	      0xb800000000	                              mov eax, 0	      4712	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53
0x9388	      0xe95b0f0000	                           jmp 0x400a328	      4712	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51	ELSE_18	IF_53
0x938d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4714	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51
0x9394	    0x8b9504ffffff	             mov edx, dword [rbp - 0xfc]	      4714	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51
0x939a	    0x8990f0010000	            mov dword [rax + 0x1f0], edx	      4714	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51
0x93a0	      0xe97a0e0000	                           jmp 0x400a25f	      4714	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_17	IF_51
0x93a5	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4716	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x93ac	        0x488b4008	                mov rax, qword [rax + 8]	      4716	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x93b0	      0xbe00000000	                              mov esi, 0	      4716	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x93b5	          0x4889c7	                            mov rdi, rax	      4716	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x93b8	      0xe800000000	                          call 0x40093fd	      4716	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x93bd	            0x85c0	                           test eax, eax	      4716	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x93bf	     0xf8593000000	                           jne 0x4009498	      4716	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_75
0x93c5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4718	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x93cb	      0x2500800000	                         and eax, 0x8000	      4718	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x93d0	            0x85c0	                           test eax, eax	      4718	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x93d2	     0xf84950e0000	                            je 0x400a2ad	      4718	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0x93d8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4720	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54
0x93df	            0x8b00	                    mov eax, dword [rax]	      4720	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54
0x93e1	          0x80cc80	                             or ah, 0x80	      4720	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54
0x93e4	            0x89c2	                            mov edx, eax	      4720	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54
0x93e6	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4720	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54
0x93ed	            0x8910	                    mov dword [rax], edx	      4720	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54
0x93ef	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x93f6	    0x488d90e80100	                  lea rdx, [rax + 0x1e8]	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x93fd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x9404	          0x4889d6	                            mov rsi, rdx	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x9407	          0x4889c7	                            mov rdi, rax	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x940a	      0xe800000000	                          call 0x400944f	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x940f	          0x4889c2	                            mov rdx, rax	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x9412	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x9419	    0x488990e00100	            mov qword [rax + 0x1e0], rdx	      4721	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	CALL_76
0x9420	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4722	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x9427	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      4722	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x942e	          0x4885c0	                           test rax, rax	      4722	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x9431	     0xf85e80d0000	                           jne 0x400a25f	      4722	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x9437	      0xbf00000000	                              mov edi, 0	      4724	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x943c	      0xe800000000	                          call 0x4009481	      4724	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x9441	      0xbe00000000	                              mov esi, 0	      4724	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x9446	          0x4889c7	                            mov rdi, rax	      4724	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x9449	      0xe800000000	                          call 0x400948e	      4724	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56	CALL_78
0x944e	      0xb800000000	                              mov eax, 0	      4725	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x9453	      0xe9900e0000	                           jmp 0x400a328	      4725	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_56
0x9458	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4729	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x945f	        0x488b4008	                mov rax, qword [rax + 8]	      4729	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x9463	      0xbe00000000	                              mov esi, 0	      4729	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x9468	          0x4889c7	                            mov rdi, rax	      4729	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x946b	      0xe800000000	                          call 0x40094b0	      4729	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x9470	            0x85c0	                           test eax, eax	      4729	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x9472	     0xf8582000000	                           jne 0x400953a	      4729	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_79
0x9478	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4731	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x947e	          0x83e004	                              and eax, 4	      4731	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x9481	            0x85c0	                           test eax, eax	      4731	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x9483	     0xf84e70d0000	                            je 0x400a2b0	      4731	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0x9489	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4733	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57
0x9490	          0x8b4004	                mov eax, dword [rax + 4]	      4733	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57
0x9493	          0x83c804	                               or eax, 4	      4733	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57
0x9496	            0x89c2	                            mov edx, eax	      4733	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57
0x9498	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4733	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57
0x949f	          0x895004	                mov dword [rax + 4], edx	      4733	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57
0x94a2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4734	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x94a9	          0x4889c7	                            mov rdi, rax	      4734	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x94ac	      0xe800000000	                          call 0x40094f1	      4734	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x94b1	          0x4889c2	                            mov rdx, rax	      4734	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x94b4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4734	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x94bb	    0x488990d00200	            mov qword [rax + 0x2d0], rdx	      4734	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	CALL_80
0x94c2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4735	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x94c9	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	      4735	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x94d0	          0x4885c0	                           test rax, rax	      4735	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x94d3	     0xf85460d0000	                           jne 0x400a25f	      4735	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x94d9	      0xbf00000000	                              mov edi, 0	      4737	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x94de	      0xe800000000	                          call 0x4009523	      4737	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x94e3	      0xbe00000000	                              mov esi, 0	      4737	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x94e8	          0x4889c7	                            mov rdi, rax	      4737	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x94eb	      0xe800000000	                          call 0x4009530	      4737	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59	CALL_82
0x94f0	      0xb800000000	                              mov eax, 0	      4738	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x94f5	      0xe9ee0d0000	                           jmp 0x400a328	      4738	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_59
0x94fa	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4741	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x9501	        0x488b4008	                mov rax, qword [rax + 8]	      4741	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x9505	      0xbe00000000	                              mov esi, 0	      4741	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x950a	          0x4889c7	                            mov rdi, rax	      4741	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x950d	      0xe800000000	                          call 0x4009552	      4741	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x9512	            0x85c0	                           test eax, eax	      4741	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x9514	     0xf85bd000000	                           jne 0x4009617	      4741	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_83
0x951a	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4743	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x9520	          0x83e008	                              and eax, 8	      4743	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x9523	            0x85c0	                           test eax, eax	      4743	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x9525	     0xf84480d0000	                            je 0x400a2b3	      4743	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0x952b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4745	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x9532	          0x4889c7	                            mov rdi, rax	      4745	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x9535	      0xe800000000	                          call 0x400957a	      4745	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x953a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4745	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	CALL_84
0x9541	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9548	      0xbe00000000	                              mov esi, 0	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x954d	          0x4889c7	                            mov rdi, rax	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9550	      0xe800000000	                          call 0x4009595	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9555	            0x85c0	                           test eax, eax	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9557	            0x7446	                            je 0x40095df	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9559	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9560	      0xbe00000000	                              mov esi, 0	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9565	          0x4889c7	                            mov rdi, rax	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9568	      0xe800000000	                          call 0x40095ad	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x956d	            0x85c0	                           test eax, eax	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x956f	            0x742e	                            je 0x40095df	      4746	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_86
0x9571	      0xbf00000000	                              mov edi, 0	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x9576	      0xe800000000	                          call 0x40095bb	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x957b	          0x4889c1	                            mov rcx, rax	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x957e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x9585	          0x4889c2	                            mov rdx, rax	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x9588	      0xbe00000000	                              mov esi, 0	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x958d	          0x4889cf	                            mov rdi, rcx	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x9590	      0xe800000000	                          call 0x40095d5	      4748	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62	CALL_88
0x9595	      0xb800000000	                              mov eax, 0	      4749	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62
0x959a	      0xe9490d0000	                           jmp 0x400a328	      4749	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_62
0x959f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4751	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95a6	          0x8b4004	                mov eax, dword [rax + 4]	      4751	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95a9	          0x83c808	                               or eax, 8	      4751	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95ac	            0x89c2	                            mov edx, eax	      4751	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95ae	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4751	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95b5	          0x895004	                mov dword [rax + 4], edx	      4751	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95b8	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4752	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95bf	           0xfb600	                   movzx eax, byte [rax]	      4752	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95c2	           0xfb6d0	                           movzx edx, al	      4752	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95c5	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4752	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95cc	    0x8990e0020000	            mov dword [rax + 0x2e0], edx	      4752	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95d2	      0xe9480c0000	                           jmp 0x400a25f	      4752	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60
0x95d7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4754	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x95de	        0x488b4008	                mov rax, qword [rax + 8]	      4754	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x95e2	      0xbe00000000	                              mov esi, 0	      4754	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x95e7	          0x4889c7	                            mov rdi, rax	      4754	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x95ea	      0xe800000000	                          call 0x400962f	      4754	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x95ef	            0x85c0	                           test eax, eax	      4754	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x95f1	     0xf85f9000000	                           jne 0x4009730	      4754	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_89
0x95f7	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4758	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x95fd	      0x2500080000	                          and eax, 0x800	      4758	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x9602	            0x85c0	                           test eax, eax	      4758	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x9604	     0xf846c0c0000	                            je 0x400a2b6	      4758	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0x960a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4760	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63
0x9611	          0x8b4004	                mov eax, dword [rax + 4]	      4760	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63
0x9614	          0x80cc08	                                or ah, 8	      4760	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63
0x9617	            0x89c2	                            mov edx, eax	      4760	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63
0x9619	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4760	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63
0x9620	          0x895004	                mov dword [rax + 4], edx	      4760	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63
0x9623	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x962a	          0x4889c7	                            mov rdi, rax	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x962d	      0xe800000000	                          call 0x4009672	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x9632	          0x4889c2	                            mov rdx, rax	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x9635	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x963c	    0x488990d80200	            mov qword [rax + 0x2d8], rdx	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x9643	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x964a	    0x488b80d80200	           mov rax, qword [rax + 0x2d8] 	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x9651	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4761	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	CALL_90
0x9658	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4762	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65
0x9660	            0x745f	                            je 0x4009701	      4762	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65
0x9662	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4765	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x9669	      0xbe25000000	                           mov esi, 0x25	      4765	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x966e	          0x4889c7	                            mov rdi, rax	      4765	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x9671	      0xe800000000	                          call 0x40096b6	      4765	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x9676	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4765	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	CALL_91
0x967d	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4766	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x9685	            0x743a	                            je 0x4009701	      4766	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x9687	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4766	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x968e	        0x4883c001	                              add rax, 1	      4766	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x9692	           0xfb600	                   movzx eax, byte [rax]	      4766	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x9695	            0x3c64	                            cmp al, 0x64	      4766	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x9697	            0x751d	                           jne 0x40096f6	      4766	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x9699	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4767	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x96a0	        0x4883c002	                              add rax, 2	      4767	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x96a4	      0xbe25000000	                           mov esi, 0x25	      4767	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x96a9	          0x4889c7	                            mov rdi, rax	      4767	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x96ac	      0xe800000000	                          call 0x40096f1	      4767	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x96b1	          0x4885c0	                           test rax, rax	      4767	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x96b4	            0x740b	                            je 0x4009701	      4767	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66	CALL_92
0x96b6	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      4768	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_65	IF_66
0x96c1	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4770	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x96c9	     0xf85500b0000	                           jne 0x400a25f	      4770	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x96cf	      0xbf00000000	                              mov edi, 0	      4772	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x96d4	      0xe800000000	                          call 0x4009719	      4772	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x96d9	      0xbe00000000	                              mov esi, 0	      4772	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x96de	          0x4889c7	                            mov rdi, rax	      4772	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x96e1	      0xe800000000	                          call 0x4009726	      4772	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67	CALL_94
0x96e6	      0xb800000000	                              mov eax, 0	      4773	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x96eb	      0xe9f80b0000	                           jmp 0x400a328	      4773	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_67
0x96f0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4776	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x96f7	        0x488b4008	                mov rax, qword [rax + 8]	      4776	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x96fb	      0xbe00000000	                              mov esi, 0	      4776	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x9700	          0x4889c7	                            mov rdi, rax	      4776	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x9703	      0xe800000000	                          call 0x4009748	      4776	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x9708	            0x85c0	                           test eax, eax	      4776	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x970a	     0xf8590000000	                           jne 0x40097e0	      4776	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_95
0x9710	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4780	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x9716	      0x2500100000	                         and eax, 0x1000	      4780	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x971b	            0x85c0	                           test eax, eax	      4780	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x971d	     0xf84560b0000	                            je 0x400a2b9	      4780	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0x9723	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4782	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68
0x972a	          0x8b4004	                mov eax, dword [rax + 4]	      4782	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68
0x972d	          0x80cc10	                             or ah, 0x10	      4782	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68
0x9730	            0x89c2	                            mov edx, eax	      4782	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68
0x9732	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4782	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68
0x9739	          0x895004	                mov dword [rax + 4], edx	      4782	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68
0x973c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x9743	          0x4889c7	                            mov rdi, rax	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x9746	      0xe800000000	                          call 0x400978b	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x974b	          0x4889c2	                            mov rdx, rax	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x974e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x9755	    0x488990e80200	            mov qword [rax + 0x2e8], rdx	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x975c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x9763	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x976a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4783	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	CALL_96
0x9771	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4784	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x9779	     0xf85a00a0000	                           jne 0x400a25f	      4784	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x977f	      0xbf00000000	                              mov edi, 0	      4786	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x9784	      0xe800000000	                          call 0x40097c9	      4786	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x9789	      0xbe00000000	                              mov esi, 0	      4786	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x978e	          0x4889c7	                            mov rdi, rax	      4786	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x9791	      0xe800000000	                          call 0x40097d6	      4786	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70	CALL_98
0x9796	      0xb800000000	                              mov eax, 0	      4787	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x979b	      0xe9480b0000	                           jmp 0x400a328	      4787	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_70
0x97a0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4790	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x97a7	        0x488b4008	                mov rax, qword [rax + 8]	      4790	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x97ab	      0xbe00000000	                              mov esi, 0	      4790	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x97b0	          0x4889c7	                            mov rdi, rax	      4790	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x97b3	      0xe800000000	                          call 0x40097f8	      4790	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x97b8	            0x85c0	                           test eax, eax	      4790	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x97ba	            0x754d	                           jne 0x4009849	      4790	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_99
0x97bc	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4792	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x97c2	          0x83e040	                           and eax, 0x40	      4792	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x97c5	            0x85c0	                           test eax, eax	      4792	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x97c7	     0xf84af0a0000	                            je 0x400a2bc	      4792	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0x97cd	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4794	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71
0x97d4	          0x8b4004	                mov eax, dword [rax + 4]	      4794	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71
0x97d7	          0x83c840	                            or eax, 0x40	      4794	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71
0x97da	            0x89c2	                            mov edx, eax	      4794	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71
0x97dc	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4794	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71
0x97e3	          0x895004	                mov dword [rax + 4], edx	      4794	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71
0x97e6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4795	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x97ed	          0x4889c7	                            mov rdi, rax	      4795	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x97f0	      0xe800000000	                          call 0x4009835	      4795	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x97f5	            0x89c2	                            mov edx, eax	      4795	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x97f7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4795	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x97fe	    0x8990b8020000	            mov dword [rax + 0x2b8], edx	      4795	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x9804	      0xe9160a0000	                           jmp 0x400a25f	      4795	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	CALL_100
0x9809	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4797	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x9810	        0x488b4008	                mov rax, qword [rax + 8]	      4797	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x9814	      0xbe00000000	                              mov esi, 0	      4797	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x9819	          0x4889c7	                            mov rdi, rax	      4797	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x981c	      0xe800000000	                          call 0x4009861	      4797	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x9821	            0x85c0	                           test eax, eax	      4797	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x9823	            0x754e	                           jne 0x40098b3	      4797	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_101
0x9825	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4799	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x982b	      0x2580000000	                           and eax, 0x80	      4799	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x9830	            0x85c0	                           test eax, eax	      4799	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x9832	     0xf84470a0000	                            je 0x400a2bf	      4799	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0x9838	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4801	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73
0x983f	          0x8b4004	                mov eax, dword [rax + 4]	      4801	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73
0x9842	             0xc80	                             or al, 0x80	      4801	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73
0x9844	            0x89c2	                            mov edx, eax	      4801	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73
0x9846	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4801	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73
0x984d	          0x895004	                mov dword [rax + 4], edx	      4801	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73
0x9850	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4802	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x9857	          0x4889c7	                            mov rdi, rax	      4802	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x985a	      0xe800000000	                          call 0x400989f	      4802	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x985f	            0x89c2	                            mov edx, eax	      4802	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x9861	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4802	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x9868	    0x8990bc020000	            mov dword [rax + 0x2bc], edx	      4802	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x986e	      0xe9ac090000	                           jmp 0x400a25f	      4802	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	CALL_102
0x9873	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4804	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x987a	        0x488b4008	                mov rax, qword [rax + 8]	      4804	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x987e	      0xbe00000000	                              mov esi, 0	      4804	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x9883	          0x4889c7	                            mov rdi, rax	      4804	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x9886	      0xe800000000	                          call 0x40098cb	      4804	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x988b	            0x85c0	                           test eax, eax	      4804	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x988d	            0x754f	                           jne 0x400991e	      4804	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_103
0x988f	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4806	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x9895	      0x2500010000	                          and eax, 0x100	      4806	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x989a	            0x85c0	                           test eax, eax	      4806	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x989c	     0xf84e0090000	                            je 0x400a2c2	      4806	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0x98a2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4808	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75
0x98a9	          0x8b4004	                mov eax, dword [rax + 4]	      4808	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75
0x98ac	          0x80cc01	                                or ah, 1	      4808	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75
0x98af	            0x89c2	                            mov edx, eax	      4808	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75
0x98b1	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4808	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75
0x98b8	          0x895004	                mov dword [rax + 4], edx	      4808	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75
0x98bb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4809	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x98c2	          0x4889c7	                            mov rdi, rax	      4809	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x98c5	      0xe800000000	                          call 0x400990a	      4809	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x98ca	            0x89c2	                            mov edx, eax	      4809	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x98cc	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4809	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x98d3	    0x8990c0020000	            mov dword [rax + 0x2c0], edx	      4809	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x98d9	      0xe941090000	                           jmp 0x400a25f	      4809	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	CALL_104
0x98de	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4811	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x98e5	        0x488b4008	                mov rax, qword [rax + 8]	      4811	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x98e9	      0xbe00000000	                              mov esi, 0	      4811	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x98ee	          0x4889c7	                            mov rdi, rax	      4811	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x98f1	      0xe800000000	                          call 0x4009936	      4811	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x98f6	            0x85c0	                           test eax, eax	      4811	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x98f8	            0x754f	                           jne 0x4009989	      4811	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_105
0x98fa	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4813	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x9900	      0x2500020000	                          and eax, 0x200	      4813	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x9905	            0x85c0	                           test eax, eax	      4813	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x9907	     0xf8478090000	                            je 0x400a2c5	      4813	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0x990d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4815	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77
0x9914	          0x8b4004	                mov eax, dword [rax + 4]	      4815	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77
0x9917	          0x80cc02	                                or ah, 2	      4815	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77
0x991a	            0x89c2	                            mov edx, eax	      4815	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77
0x991c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4815	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77
0x9923	          0x895004	                mov dword [rax + 4], edx	      4815	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77
0x9926	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4816	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x992d	          0x4889c7	                            mov rdi, rax	      4816	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x9930	      0xe800000000	                          call 0x4009975	      4816	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x9935	            0x89c2	                            mov edx, eax	      4816	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x9937	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4816	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x993e	    0x8990c4020000	            mov dword [rax + 0x2c4], edx	      4816	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x9944	      0xe9d6080000	                           jmp 0x400a25f	      4816	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	CALL_106
0x9949	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4818	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x9950	        0x488b4008	                mov rax, qword [rax + 8]	      4818	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x9954	      0xbe00000000	                              mov esi, 0	      4818	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x9959	          0x4889c7	                            mov rdi, rax	      4818	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x995c	      0xe800000000	                          call 0x40099a1	      4818	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x9961	            0x85c0	                           test eax, eax	      4818	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x9963	            0x754f	                           jne 0x40099f4	      4818	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_107
0x9965	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4820	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x996b	      0x2500040000	                          and eax, 0x400	      4820	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x9970	            0x85c0	                           test eax, eax	      4820	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x9972	     0xf8410090000	                            je 0x400a2c8	      4820	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0x9978	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4822	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79
0x997f	          0x8b4004	                mov eax, dword [rax + 4]	      4822	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79
0x9982	          0x80cc04	                                or ah, 4	      4822	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79
0x9985	            0x89c2	                            mov edx, eax	      4822	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79
0x9987	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4822	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79
0x998e	          0x895004	                mov dword [rax + 4], edx	      4822	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79
0x9991	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4823	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x9998	          0x4889c7	                            mov rdi, rax	      4823	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x999b	      0xe800000000	                          call 0x40099e0	      4823	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x99a0	            0x89c2	                            mov edx, eax	      4823	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x99a2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4823	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x99a9	    0x8990c8020000	            mov dword [rax + 0x2c8], edx	      4823	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x99af	      0xe96b080000	                           jmp 0x400a25f	      4823	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	CALL_108
0x99b4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4825	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x99bb	        0x488b4008	                mov rax, qword [rax + 8]	      4825	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x99bf	      0xbe00000000	                              mov esi, 0	      4825	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x99c4	          0x4889c7	                            mov rdi, rax	      4825	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x99c7	      0xe800000000	                          call 0x4009a0c	      4825	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x99cc	            0x85c0	                           test eax, eax	      4825	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x99ce	            0x754f	                           jne 0x4009a5f	      4825	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_109
0x99d0	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4827	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x99d6	      0x2500200000	                         and eax, 0x2000	      4827	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x99db	            0x85c0	                           test eax, eax	      4827	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x99dd	     0xf84a8080000	                            je 0x400a2cb	      4827	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0x99e3	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4829	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81
0x99ea	          0x8b4004	                mov eax, dword [rax + 4]	      4829	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81
0x99ed	          0x80cc20	                             or ah, 0x20	      4829	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81
0x99f0	            0x89c2	                            mov edx, eax	      4829	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81
0x99f2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4829	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81
0x99f9	          0x895004	                mov dword [rax + 4], edx	      4829	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81
0x99fc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4830	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x9a03	          0x4889c7	                            mov rdi, rax	      4830	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x9a06	      0xe800000000	                          call 0x4009a4b	      4830	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x9a0b	            0x89c2	                            mov edx, eax	      4830	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x9a0d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4830	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x9a14	    0x8990cc020000	            mov dword [rax + 0x2cc], edx	      4830	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x9a1a	      0xe900080000	                           jmp 0x400a25f	      4830	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	CALL_110
0x9a1f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4832	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x9a26	        0x488b4008	                mov rax, qword [rax + 8]	      4832	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x9a2a	      0xbe00000000	                              mov esi, 0	      4832	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x9a2f	          0x4889c7	                            mov rdi, rax	      4832	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x9a32	      0xe800000000	                          call 0x4009a77	      4832	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x9a37	            0x85c0	                           test eax, eax	      4832	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x9a39	            0x7551	                           jne 0x4009acc	      4832	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_111
0x9a3b	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4834	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x9a41	      0x2500400000	                         and eax, 0x4000	      4834	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x9a46	            0x85c0	                           test eax, eax	      4834	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x9a48	     0xf8440080000	                            je 0x400a2ce	      4834	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0x9a4e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4836	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83
0x9a55	          0x8b4004	                mov eax, dword [rax + 4]	      4836	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83
0x9a58	          0x80cc40	                             or ah, 0x40	      4836	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83
0x9a5b	            0x89c2	                            mov edx, eax	      4836	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83
0x9a5d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4836	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83
0x9a64	          0x895004	                mov dword [rax + 4], edx	      4836	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83
0x9a67	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4837	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x9a6e	          0x4889c7	                            mov rdi, rax	      4837	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x9a71	      0xe800000000	                          call 0x4009ab6	      4837	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x9a76	          0x4889c2	                            mov rdx, rax	      4837	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x9a79	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4837	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x9a80	    0x488990f00200	            mov qword [rax + 0x2f0], rdx	      4837	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x9a87	      0xe993070000	                           jmp 0x400a25f	      4837	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	CALL_112
0x9a8c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4840	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x9a93	        0x488b4008	                mov rax, qword [rax + 8]	      4840	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x9a97	      0xbe00000000	                              mov esi, 0	      4840	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x9a9c	          0x4889c7	                            mov rdi, rax	      4840	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x9a9f	      0xe800000000	                          call 0x4009ae4	      4840	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x9aa4	            0x85c0	                           test eax, eax	      4840	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x9aa6	     0xf85c9010000	                           jne 0x4009cb5	      4840	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_113
0x9aac	    0xc78508ffffff	               mov dword [rbp - 0xf8], 0	      4842	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9ab6	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4846	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x9abc	      0x2500800000	                         and eax, 0x8000	      4846	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x9ac1	            0x85c0	                           test eax, eax	      4846	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x9ac3	     0xf84c8070000	                            je 0x400a2d1	      4846	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0x9ac9	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      4849	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9ad1	            0x741e	                            je 0x4009b31	      4849	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9ad3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4849	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9ada	            0x8b00	                    mov eax, dword [rax]	      4849	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9adc	          0x83f805	                              cmp eax, 5	      4849	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9adf	            0x7510	                           jne 0x4009b31	      4849	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9ae1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4850	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9ae8	        0x488b4008	                mov rax, qword [rax + 8]	      4850	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9aec	          0x4885c0	                           test rax, rax	      4850	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9aef	            0x7521	                           jne 0x4009b52	      4850	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9af1	      0xbf00000000	                              mov edi, 0	      4852	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x9af6	      0xe800000000	                          call 0x4009b3b	      4852	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x9afb	      0xbe00000000	                              mov esi, 0	      4852	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x9b00	          0x4889c7	                            mov rdi, rax	      4852	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x9b03	      0xe800000000	                          call 0x4009b48	      4852	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87	CALL_115
0x9b08	      0xb800000000	                              mov eax, 0	      4853	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9b0d	      0xe9d6070000	                           jmp 0x400a328	      4853	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_87
0x9b12	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4856	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9b19	        0x488b4008	                mov rax, qword [rax + 8]	      4856	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9b1d	          0x488b00	                    mov rax, qword [rax]	      4856	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9b20	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4856	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9b27	      0xe9bb000000	                           jmp 0x4009c27	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9b2c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4862	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x9b33	        0x4883c010	                           add rax, 0x10	      4862	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x9b37	          0x4889c7	                            mov rdi, rax	      4862	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x9b3a	      0xe800000000	                          call 0x4009b7f	      4862	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x9b3f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4862	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_116
0x9b46	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      4863	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x9b4e	            0x750a	                           jne 0x4009b9a	      4863	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x9b50	      0xb800000000	                              mov eax, 0	      4864	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x9b55	      0xe98e070000	                           jmp 0x400a328	      4864	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_88
0x9b5a	    0x8b0500000000	            mov eax, dword [0x04009ba0] 	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b60	            0x85c0	                           test eax, eax	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b62	            0x7407	                            je 0x4009bab	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b64	      0xba00000000	                              mov edx, 0	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b69	            0xeb05	                           jmp 0x4009bb0	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b6b	      0xba00000000	                              mov edx, 0	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b70	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b77	          0x4889c7	                            mov rdi, rax	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b7a	            0xffd2	                                call rdx	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b7c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4866	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_117
0x9b83	    0x4881bd58ffff	cmp qword [rbp - 0xa8], 0xffffffffffffd499	      4867	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x9b8e	            0x750a	                           jne 0x4009bda	      4867	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x9b90	      0xb800000000	                              mov eax, 0	      4868	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x9b95	      0xe94e070000	                           jmp 0x400a328	      4868	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	IF_89
0x9b9a	    0x8b0500000000	            mov eax, dword [0x04009be0] 	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9ba0	            0x85c0	                           test eax, eax	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9ba2	            0x7407	                            je 0x4009beb	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9ba4	      0xba00000000	                              mov edx, 0	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9ba9	            0xeb05	                           jmp 0x4009bf0	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bab	      0xba00000000	                              mov edx, 0	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bb0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bb7	          0x4889c7	                            mov rdi, rax	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bba	            0xffd2	                                call rdx	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bbc	          0x4889c2	                            mov rdx, rax	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bbf	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bc5	            0x4898	                                    cdqe	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bc7	    0x488994c560ff	     mov qword [rbp + rax*8 - 0xa0], rdx	      4870	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2	CALL_118
0x9bcf	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9bd6	          0x488b00	                    mov rax, qword [rax]	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9bd9	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9be0	    0x838508ffffff	               add dword [rbp - 0xf8], 1	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9be7	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9bef	            0x740d	                            je 0x4009c3e	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9bf1	    0x83bd08ffffff	            cmp dword [rbp - 0xf8], 0xf 	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9bf8	     0xf8e2effffff	                           jle 0x4009b6c	      4857	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	FOR_2
0x9bfe	    0x83bd08ffffff	           cmp dword [rbp - 0xf8], 0x10 	      4873	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x9c05	            0x750a	                           jne 0x4009c51	      4873	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x9c07	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4873	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x9c0f	            0x7421	                            je 0x4009c72	      4873	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x9c11	      0xbf00000000	                              mov edi, 0	      4875	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x9c16	      0xe800000000	                          call 0x4009c5b	      4875	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x9c1b	      0xbe00000000	                              mov esi, 0	      4875	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x9c20	          0x4889c7	                            mov rdi, rax	      4875	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x9c23	      0xe800000000	                          call 0x4009c68	      4875	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90	CALL_120
0x9c28	      0xb800000000	                              mov eax, 0	      4876	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x9c2d	      0xe9b6060000	                           jmp 0x400a328	      4876	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_90
0x9c32	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4879	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9c39	          0x8b4004	                mov eax, dword [rax + 4]	      4879	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9c3c	          0x80cc80	                             or ah, 0x80	      4879	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9c3f	            0x89c2	                            mov edx, eax	      4879	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9c41	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4879	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9c48	          0x895004	                mov dword [rax + 4], edx	      4879	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85
0x9c4b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c52	    0x488d88f80200	                  lea rcx, [rax + 0x2f8]	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c59	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c60	      0xba80000000	                           mov edx, 0x80	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c65	          0x4889c6	                            mov rsi, rax	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c68	          0x4889cf	                            mov rdi, rcx	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c6b	      0xe800000000	                          call 0x4009cb0	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c70	      0xe9aa050000	                           jmp 0x400a25f	      4880	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	CALL_121
0x9c75	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4884	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x9c7c	        0x488b4008	                mov rax, qword [rax + 8]	      4884	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x9c80	      0xbe00000000	                              mov esi, 0	      4884	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x9c85	          0x4889c7	                            mov rdi, rax	      4884	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x9c88	      0xe800000000	                          call 0x4009ccd	      4884	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x9c8d	            0x85c0	                           test eax, eax	      4884	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x9c8f	     0xf85a5000000	                           jne 0x4009d7a	      4884	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	CALL_122
0x9c95	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4886	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x9c9b	          0x83e010	                           and eax, 0x10	      4886	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x9c9e	            0x85c0	                           test eax, eax	      4886	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x9ca0	     0xf84ee050000	                            je 0x400a2d4	      4886	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0x9ca6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4888	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x9cad	            0x8b00	                    mov eax, dword [rax]	      4888	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x9caf	          0x83f806	                              cmp eax, 6	      4888	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x9cb2	            0x7421	                            je 0x4009d15	      4888	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x9cb4	      0xbf00000000	                              mov edi, 0	      4890	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x9cb9	      0xe800000000	                          call 0x4009cfe	      4890	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x9cbe	      0xbe00000000	                              mov esi, 0	      4890	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x9cc3	          0x4889c7	                            mov rdi, rax	      4890	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x9cc6	      0xe800000000	                          call 0x4009d0b	      4890	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93	CALL_124
0x9ccb	      0xb800000000	                              mov eax, 0	      4891	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x9cd0	      0xe913060000	                           jmp 0x400a328	      4891	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_93
0x9cd5	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4893	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9cdc	          0x8b4004	                mov eax, dword [rax + 4]	      4893	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9cdf	          0x83c810	                            or eax, 0x10	      4893	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9ce2	            0x89c2	                            mov edx, eax	      4893	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9ce4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4893	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9ceb	          0x895004	                mov dword [rax + 4], edx	      4893	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9cee	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4894	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9cf5	        0x488b5008	                mov rdx, qword [rax + 8]	      4894	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9cf9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4894	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9d00	    0x488990600200	            mov qword [rax + 0x260], rdx	      4894	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91
0x9d07	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4895	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d0e	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4895	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d15	          0x4885c0	                           test rax, rax	      4895	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d18	     0xf8401050000	                            je 0x400a25f	      4895	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d1e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4896	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d25	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4896	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d2c	          0x8b5004	                mov edx, dword [rax + 4]	      4896	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d2f	          0x83c201	                              add edx, 1	      4896	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d32	          0x895004	                mov dword [rax + 4], edx	      4896	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d35	      0xe9e5040000	                           jmp 0x400a25f	      4896	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_94
0x9d3a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4898	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x9d41	        0x488b4008	                mov rax, qword [rax + 8]	      4898	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x9d45	      0xbe00000000	                              mov esi, 0	      4898	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x9d4a	          0x4889c7	                            mov rdi, rax	      4898	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x9d4d	      0xe800000000	                          call 0x4009d92	      4898	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x9d52	            0x85c0	                           test eax, eax	      4898	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x9d54	     0xf85ae000000	                           jne 0x4009e48	      4898	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_125
0x9d5a	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4900	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x9d60	          0x83e020	                           and eax, 0x20	      4900	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x9d63	            0x85c0	                           test eax, eax	      4900	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x9d65	     0xf842c050000	                            je 0x400a2d7	      4900	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0x9d6b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d72	    0x488d90680200	                  lea rdx, [rax + 0x268]	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d79	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d80	          0x4889d6	                            mov rsi, rdx	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d83	          0x4889c7	                            mov rdi, rax	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d86	      0xe800000000	                          call 0x4009dcb	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d8b	          0x4889c2	                            mov rdx, rax	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d8e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d95	    0x488990b00200	            mov qword [rax + 0x2b0], rdx	      4902	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	CALL_126
0x9d9c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9da3	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9daa	          0x4885c0	                           test rax, rax	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9dad	            0x741a	                            je 0x4009e09	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9daf	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9db6	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9dbd	          0x4889c7	                            mov rdi, rax	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9dc0	      0xe800000000	                          call 0x4009e05	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9dc5	            0x85c0	                           test eax, eax	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9dc7	            0x7521	                           jne 0x4009e2a	      4903	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_127
0x9dc9	      0xbf00000000	                              mov edi, 0	      4905	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x9dce	      0xe800000000	                          call 0x4009e13	      4905	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x9dd3	      0xbe00000000	                              mov esi, 0	      4905	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x9dd8	          0x4889c7	                            mov rdi, rax	      4905	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x9ddb	      0xe800000000	                          call 0x4009e20	      4905	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97	CALL_129
0x9de0	      0xb800000000	                              mov eax, 0	      4906	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97
0x9de5	      0xe9fe040000	                           jmp 0x400a328	      4906	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_97
0x9dea	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4908	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95
0x9df1	          0x8b4004	                mov eax, dword [rax + 4]	      4908	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95
0x9df4	          0x83c820	                            or eax, 0x20	      4908	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95
0x9df7	            0x89c2	                            mov edx, eax	      4908	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95
0x9df9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4908	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95
0x9e00	          0x895004	                mov dword [rax + 4], edx	      4908	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95
0x9e03	      0xe917040000	                           jmp 0x400a25f	      4908	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95
0x9e08	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4910	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x9e0f	        0x488b4008	                mov rax, qword [rax + 8]	      4910	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x9e13	      0xbe00000000	                              mov esi, 0	      4910	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x9e18	          0x4889c7	                            mov rdi, rax	      4910	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x9e1b	      0xe800000000	                          call 0x4009e60	      4910	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x9e20	            0x85c0	                           test eax, eax	      4910	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x9e22	            0x754d	                           jne 0x4009eb1	      4910	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_130
0x9e24	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4912	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x9e2a	      0x2500010000	                          and eax, 0x100	      4912	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x9e2f	            0x85c0	                           test eax, eax	      4912	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x9e31	     0xf8463040000	                            je 0x400a2da	      4912	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0x9e37	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4914	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98
0x9e3e	            0x8b00	                    mov eax, dword [rax]	      4914	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98
0x9e40	          0x80cc01	                                or ah, 1	      4914	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98
0x9e43	            0x89c2	                            mov edx, eax	      4914	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98
0x9e45	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4914	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98
0x9e4c	            0x8910	                    mov dword [rax], edx	      4914	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98
0x9e4e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4915	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x9e55	          0x4889c7	                            mov rdi, rax	      4915	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x9e58	      0xe800000000	                          call 0x4009e9d	      4915	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x9e5d	            0x89c2	                            mov edx, eax	      4915	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x9e5f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4915	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x9e66	    0x8990f4010000	            mov dword [rax + 0x1f4], edx	      4915	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x9e6c	      0xe9ae030000	                           jmp 0x400a25f	      4915	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	CALL_131
0x9e71	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4917	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x9e78	        0x488b4008	                mov rax, qword [rax + 8]	      4917	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x9e7c	      0xbe00000000	                              mov esi, 0	      4917	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x9e81	          0x4889c7	                            mov rdi, rax	      4917	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x9e84	      0xe800000000	                          call 0x4009ec9	      4917	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x9e89	            0x85c0	                           test eax, eax	      4917	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x9e8b	            0x754d	                           jne 0x4009f1a	      4917	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_132
0x9e8d	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4919	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x9e93	      0x2500020000	                          and eax, 0x200	      4919	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x9e98	            0x85c0	                           test eax, eax	      4919	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x9e9a	     0xf84fd030000	                            je 0x400a2dd	      4919	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0x9ea0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4921	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100
0x9ea7	            0x8b00	                    mov eax, dword [rax]	      4921	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100
0x9ea9	          0x80cc02	                                or ah, 2	      4921	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100
0x9eac	            0x89c2	                            mov edx, eax	      4921	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100
0x9eae	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4921	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100
0x9eb5	            0x8910	                    mov dword [rax], edx	      4921	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100
0x9eb7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4922	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x9ebe	          0x4889c7	                            mov rdi, rax	      4922	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x9ec1	      0xe800000000	                          call 0x4009f06	      4922	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x9ec6	            0x89c2	                            mov edx, eax	      4922	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x9ec8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4922	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x9ecf	    0x8990f8010000	            mov dword [rax + 0x1f8], edx	      4922	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x9ed5	      0xe945030000	                           jmp 0x400a25f	      4922	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	CALL_133
0x9eda	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4924	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x9ee1	        0x488b4008	                mov rax, qword [rax + 8]	      4924	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x9ee5	      0xbe00000000	                              mov esi, 0	      4924	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x9eea	          0x4889c7	                            mov rdi, rax	      4924	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x9eed	      0xe800000000	                          call 0x4009f32	      4924	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x9ef2	            0x85c0	                           test eax, eax	      4924	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x9ef4	            0x754d	                           jne 0x4009f83	      4924	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_134
0x9ef6	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4926	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x9efc	      0x2500040000	                          and eax, 0x400	      4926	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x9f01	            0x85c0	                           test eax, eax	      4926	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x9f03	     0xf8497030000	                            je 0x400a2e0	      4926	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0x9f09	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4928	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102
0x9f10	            0x8b00	                    mov eax, dword [rax]	      4928	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102
0x9f12	          0x80cc04	                                or ah, 4	      4928	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102
0x9f15	            0x89c2	                            mov edx, eax	      4928	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102
0x9f17	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4928	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102
0x9f1e	            0x8910	                    mov dword [rax], edx	      4928	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102
0x9f20	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4929	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x9f27	          0x4889c7	                            mov rdi, rax	      4929	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x9f2a	      0xe800000000	                          call 0x4009f6f	      4929	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x9f2f	            0x89c2	                            mov edx, eax	      4929	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x9f31	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4929	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x9f38	    0x8990fc010000	            mov dword [rax + 0x1fc], edx	      4929	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x9f3e	      0xe9dc020000	                           jmp 0x400a25f	      4929	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	CALL_135
0x9f43	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4931	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x9f4a	        0x488b4008	                mov rax, qword [rax + 8]	      4931	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x9f4e	      0xbe00000000	                              mov esi, 0	      4931	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x9f53	          0x4889c7	                            mov rdi, rax	      4931	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x9f56	      0xe800000000	                          call 0x4009f9b	      4931	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x9f5b	            0x85c0	                           test eax, eax	      4931	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x9f5d	            0x754d	                           jne 0x4009fec	      4931	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_136
0x9f5f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4933	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x9f65	      0x2500080000	                          and eax, 0x800	      4933	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x9f6a	            0x85c0	                           test eax, eax	      4933	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x9f6c	     0xf8431030000	                            je 0x400a2e3	      4933	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0x9f72	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4935	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104
0x9f79	            0x8b00	                    mov eax, dword [rax]	      4935	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104
0x9f7b	          0x80cc08	                                or ah, 8	      4935	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104
0x9f7e	            0x89c2	                            mov edx, eax	      4935	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104
0x9f80	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4935	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104
0x9f87	            0x8910	                    mov dword [rax], edx	      4935	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104
0x9f89	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4936	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x9f90	          0x4889c7	                            mov rdi, rax	      4936	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x9f93	      0xe800000000	                          call 0x4009fd8	      4936	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x9f98	            0x89c2	                            mov edx, eax	      4936	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x9f9a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4936	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x9fa1	    0x899000020000	            mov dword [rax + 0x200], edx	      4936	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x9fa7	      0xe973020000	                           jmp 0x400a25f	      4936	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	CALL_137
0x9fac	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4938	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x9fb3	        0x488b4008	                mov rax, qword [rax + 8]	      4938	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x9fb7	      0xbe00000000	                              mov esi, 0	      4938	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x9fbc	          0x4889c7	                            mov rdi, rax	      4938	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x9fbf	      0xe800000000	                          call 0x400a004	      4938	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x9fc4	            0x85c0	                           test eax, eax	      4938	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x9fc6	     0xf85ca000000	                           jne 0x400a0d6	      4938	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_138
0x9fcc	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4940	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x9fd2	      0x2500100000	                         and eax, 0x1000	      4940	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x9fd7	            0x85c0	                           test eax, eax	      4940	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x9fd9	     0xf84c7020000	                            je 0x400a2e6	      4940	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0x9fdf	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4942	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106
0x9fe6	            0x8b00	                    mov eax, dword [rax]	      4942	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106
0x9fe8	          0x80cc10	                             or ah, 0x10	      4942	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106
0x9feb	            0x89c2	                            mov edx, eax	      4942	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106
0x9fed	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4942	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106
0x9ff4	            0x8910	                    mov dword [rax], edx	      4942	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106
0x9ff6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4943	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0x9ffd	          0x4889c7	                            mov rdi, rax	      4943	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0xa000	      0xe800000000	                          call 0x400a045	      4943	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0xa005	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4943	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	CALL_139
0xa00c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4944	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0xa013	      0xbe00000000	                              mov esi, 0	      4944	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0xa018	          0x4889c7	                            mov rdi, rax	      4944	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0xa01b	      0xe800000000	                          call 0x400a060	      4944	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0xa020	            0x85c0	                           test eax, eax	      4944	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0xa022	            0x7516	                           jne 0x400a07a	      4944	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108	CALL_140
0xa024	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4945	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0xa02b	    0xc78008020000	              mov dword [rax + 0x208], 2	      4945	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0xa035	      0xe9e5010000	                           jmp 0x400a25f	      4945	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_108
0xa03a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4946	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0xa041	      0xbe00000000	                              mov esi, 0	      4946	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0xa046	          0x4889c7	                            mov rdi, rax	      4946	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0xa049	      0xe800000000	                          call 0x400a08e	      4946	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0xa04e	            0x85c0	                           test eax, eax	      4946	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0xa050	            0x7516	                           jne 0x400a0a8	      4946	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109	CALL_141
0xa052	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4947	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0xa059	    0xc78008020000	              mov dword [rax + 0x208], 1	      4947	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0xa063	      0xe9b7010000	                           jmp 0x400a25f	      4947	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_39	IF_109
0xa068	      0xbf00000000	                              mov edi, 0	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa06d	      0xe800000000	                          call 0x400a0b2	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa072	          0x4889c1	                            mov rcx, rax	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa075	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa07c	          0x4889c2	                            mov rdx, rax	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa07f	      0xbe00000000	                              mov esi, 0	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa084	          0x4889cf	                            mov rdi, rcx	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa087	      0xe800000000	                          call 0x400a0cc	      4950	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40	CALL_143
0xa08c	      0xb800000000	                              mov eax, 0	      4951	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40
0xa091	      0xe952020000	                           jmp 0x400a328	      4951	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	ELSE_40
0xa096	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4954	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0xa09d	        0x488b4008	                mov rax, qword [rax + 8]	      4954	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0xa0a1	      0xbe00000000	                              mov esi, 0	      4954	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0xa0a6	          0x4889c7	                            mov rdi, rax	      4954	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0xa0a9	      0xe800000000	                          call 0x400a0ee	      4954	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0xa0ae	            0x85c0	                           test eax, eax	      4954	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0xa0b0	            0x754d	                           jne 0x400a13f	      4954	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_144
0xa0b2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4956	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0xa0b8	      0x2500200000	                         and eax, 0x2000	      4956	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0xa0bd	            0x85c0	                           test eax, eax	      4956	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0xa0bf	     0xf84e4010000	                            je 0x400a2e9	      4956	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0xa0c5	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4958	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110
0xa0cc	            0x8b00	                    mov eax, dword [rax]	      4958	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110
0xa0ce	          0x80cc20	                             or ah, 0x20	      4958	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110
0xa0d1	            0x89c2	                            mov edx, eax	      4958	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110
0xa0d3	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4958	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110
0xa0da	            0x8910	                    mov dword [rax], edx	      4958	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110
0xa0dc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4959	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0xa0e3	          0x4889c7	                            mov rdi, rax	      4959	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0xa0e6	      0xe800000000	                          call 0x400a12b	      4959	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0xa0eb	            0x89c2	                            mov edx, eax	      4959	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0xa0ed	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4959	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0xa0f4	    0x89900c020000	            mov dword [rax + 0x20c], edx	      4959	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0xa0fa	      0xe920010000	                           jmp 0x400a25f	      4959	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	CALL_145
0xa0ff	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4961	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0xa106	        0x488b4008	                mov rax, qword [rax + 8]	      4961	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0xa10a	      0xbe00000000	                              mov esi, 0	      4961	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0xa10f	          0x4889c7	                            mov rdi, rax	      4961	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0xa112	      0xe800000000	                          call 0x400a157	      4961	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0xa117	            0x85c0	                           test eax, eax	      4961	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0xa119	     0xf8593000000	                           jne 0x400a1f2	      4961	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_146
0xa11f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4963	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0xa125	      0x2500400000	                         and eax, 0x4000	      4963	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0xa12a	            0x85c0	                           test eax, eax	      4963	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0xa12c	     0xf847a010000	                            je 0x400a2ec	      4963	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0xa132	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4965	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa139	            0x8b00	                    mov eax, dword [rax]	      4965	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa13b	          0x80cc40	                             or ah, 0x40	      4965	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa13e	            0x89c2	                            mov edx, eax	      4965	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa140	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4965	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa147	            0x8910	                    mov dword [rax], edx	      4965	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa149	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4967	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa150	    0x488d90100200	                  lea rdx, [rax + 0x210]	      4967	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112
0xa157	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4966	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0xa15e	          0x4889d6	                            mov rsi, rdx	      4966	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0xa161	          0x4889c7	                            mov rdi, rax	      4966	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0xa164	      0xe800000000	                          call 0x400a1a9	      4966	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0xa169	          0x4889c2	                            mov rdx, rax	      4966	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0xa16c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4966	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0xa173	    0x488990580200	            mov qword [rax + 0x258], rdx	      4966	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	CALL_147
0xa17a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4968	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0xa181	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      4968	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0xa188	          0x4885c0	                           test rax, rax	      4968	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0xa18b	     0xf858e000000	                           jne 0x400a25f	      4968	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0xa191	      0xbf00000000	                              mov edi, 0	      4970	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0xa196	      0xe800000000	                          call 0x400a1db	      4970	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0xa19b	      0xbe00000000	                              mov esi, 0	      4970	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0xa1a0	          0x4889c7	                            mov rdi, rax	      4970	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0xa1a3	      0xe800000000	                          call 0x400a1e8	      4970	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114	CALL_149
0xa1a8	      0xb800000000	                              mov eax, 0	      4971	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0xa1ad	      0xe936010000	                           jmp 0x400a328	      4971	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_114
0xa1b2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4974	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0xa1b9	        0x488b4008	                mov rax, qword [rax + 8]	      4974	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0xa1bd	      0xbe00000000	                              mov esi, 0	      4974	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0xa1c2	          0x4889c7	                            mov rdi, rax	      4974	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0xa1c5	      0xe800000000	                          call 0x400a20a	      4974	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0xa1ca	            0x85c0	                           test eax, eax	      4974	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0xa1cc	     0xf85dd000000	                           jne 0x400a2ef	      4974	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_150
0xa1d2	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4976	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0xa1d8	      0x2500000010	                     and eax, 0x10000000	      4976	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0xa1dd	            0x85c0	                           test eax, eax	      4976	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0xa1df	     0xf84cd000000	                            je 0x400a2f2	      4976	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0xa1e5	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4978	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115
0xa1ec	            0x8b00	                    mov eax, dword [rax]	      4978	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115
0xa1ee	       0xd00000010	                      or eax, 0x10000000	      4978	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115
0xa1f3	            0x89c2	                            mov edx, eax	      4978	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115
0xa1f5	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4978	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115
0xa1fc	            0x8910	                    mov dword [rax], edx	      4978	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115
0xa1fe	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4979	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0xa205	          0x4889c7	                            mov rdi, rax	      4979	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0xa208	      0xe800000000	                          call 0x400a24d	      4979	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0xa20d	            0x89c2	                            mov edx, eax	      4979	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0xa20f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4979	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0xa216	    0x899004020000	            mov dword [rax + 0x204], edx	      4979	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0xa21c	            0xeb01	                           jmp 0x400a25f	      4979	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	CALL_151
0xa21e	              0x90	                                     nop	      4620	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32
0xa21f	    0x83ad00ffffff	              sub dword [rbp - 0x100], 1	      4983	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_44
0xa226	    0x48838510ffff	            add qword [rbp - 0xf0], 0x10	      4514	channel.c	FUNCTION_110	FOR_1
0xa22e	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4514	channel.c	FUNCTION_110	FOR_1
0xa235	     0xf8f44e5ffff	                            jg 0x40087bf	      4514	channel.c	FUNCTION_110	FOR_1
0xa23b	            0xeb76	                           jmp 0x400a2f3	      4514	channel.c	FUNCTION_110	FOR_1
0xa23d	              0x90	                                     nop	      4522	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_6
0xa23e	            0xeb73	                           jmp 0x400a2f3	      4522	channel.c	FUNCTION_110	FOR_1	IF_4	IF_5	IF_6
0xa240	              0x90	                                     nop	      4529	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0xa241	            0xeb70	                           jmp 0x400a2f3	      4529	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_1	IF_8	IF_9
0xa243	              0x90	                                     nop	      4537	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0xa244	            0xeb6d	                           jmp 0x400a2f3	      4537	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_2	IF_11	IF_12
0xa246	              0x90	                                     nop	      4545	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0xa247	            0xeb6a	                           jmp 0x400a2f3	      4545	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_3	IF_14	IF_15
0xa249	              0x90	                                     nop	      4555	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0xa24a	            0xeb67	                           jmp 0x400a2f3	      4555	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_4	IF_17	IF_18
0xa24c	              0x90	                                     nop	      4566	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0xa24d	            0xeb64	                           jmp 0x400a2f3	      4566	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_5	IF_20	IF_21
0xa24f	              0x90	                                     nop	      4574	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0xa250	            0xeb61	                           jmp 0x400a2f3	      4574	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_6	IF_22	IF_23
0xa252	              0x90	                                     nop	      4584	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0xa253	            0xeb5e	                           jmp 0x400a2f3	      4584	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_7	IF_24	IF_25
0xa255	              0x90	                                     nop	      4604	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0xa256	            0xeb5b	                           jmp 0x400a2f3	      4604	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_8	IF_28	IF_29
0xa258	              0x90	                                     nop	      4614	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0xa259	            0xeb58	                           jmp 0x400a2f3	      4614	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_9	IF_30	IF_31
0xa25b	              0x90	                                     nop	      4624	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0xa25c	            0xeb55	                           jmp 0x400a2f3	      4624	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_10	IF_32	IF_33
0xa25e	              0x90	                                     nop	      4645	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0xa25f	            0xeb52	                           jmp 0x400a2f3	      4645	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_12	IF_36	IF_37
0xa261	              0x90	                                     nop	      4657	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0xa262	            0xeb4f	                           jmp 0x400a2f3	      4657	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_13	IF_39	IF_40
0xa264	              0x90	                                     nop	      4669	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0xa265	            0xeb4c	                           jmp 0x400a2f3	      4669	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_14	IF_42	IF_43
0xa267	              0x90	                                     nop	      4681	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0xa268	            0xeb49	                           jmp 0x400a2f3	      4681	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_15	IF_45	IF_46
0xa26a	              0x90	                                     nop	      4693	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0xa26b	            0xeb46	                           jmp 0x400a2f3	      4693	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_16	IF_48	IF_49
0xa26d	              0x90	                                     nop	      4719	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0xa26e	            0xeb43	                           jmp 0x400a2f3	      4719	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_19	IF_54	IF_55
0xa270	              0x90	                                     nop	      4732	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0xa271	            0xeb40	                           jmp 0x400a2f3	      4732	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_20	IF_57	IF_58
0xa273	              0x90	                                     nop	      4744	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0xa274	            0xeb3d	                           jmp 0x400a2f3	      4744	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_21	IF_60	IF_61
0xa276	              0x90	                                     nop	      4759	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0xa277	            0xeb3a	                           jmp 0x400a2f3	      4759	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_22	IF_63	IF_64
0xa279	              0x90	                                     nop	      4781	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0xa27a	            0xeb37	                           jmp 0x400a2f3	      4781	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_23	IF_68	IF_69
0xa27c	              0x90	                                     nop	      4793	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0xa27d	            0xeb34	                           jmp 0x400a2f3	      4793	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_24	IF_71	IF_72
0xa27f	              0x90	                                     nop	      4800	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0xa280	            0xeb31	                           jmp 0x400a2f3	      4800	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_25	IF_73	IF_74
0xa282	              0x90	                                     nop	      4807	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0xa283	            0xeb2e	                           jmp 0x400a2f3	      4807	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_26	IF_75	IF_76
0xa285	              0x90	                                     nop	      4814	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0xa286	            0xeb2b	                           jmp 0x400a2f3	      4814	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_27	IF_77	IF_78
0xa288	              0x90	                                     nop	      4821	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0xa289	            0xeb28	                           jmp 0x400a2f3	      4821	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_28	IF_79	IF_80
0xa28b	              0x90	                                     nop	      4828	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0xa28c	            0xeb25	                           jmp 0x400a2f3	      4828	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_29	IF_81	IF_82
0xa28e	              0x90	                                     nop	      4835	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0xa28f	            0xeb22	                           jmp 0x400a2f3	      4835	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_30	IF_83	IF_84
0xa291	              0x90	                                     nop	      4847	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0xa292	            0xeb1f	                           jmp 0x400a2f3	      4847	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_31	IF_85	IF_86
0xa294	              0x90	                                     nop	      4887	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0xa295	            0xeb1c	                           jmp 0x400a2f3	      4887	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_32	IF_91	IF_92
0xa297	              0x90	                                     nop	      4901	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0xa298	            0xeb19	                           jmp 0x400a2f3	      4901	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_33	IF_95	IF_96
0xa29a	              0x90	                                     nop	      4913	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0xa29b	            0xeb16	                           jmp 0x400a2f3	      4913	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_34	IF_98	IF_99
0xa29d	              0x90	                                     nop	      4920	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0xa29e	            0xeb13	                           jmp 0x400a2f3	      4920	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_35	IF_100	IF_101
0xa2a0	              0x90	                                     nop	      4927	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0xa2a1	            0xeb10	                           jmp 0x400a2f3	      4927	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_36	IF_102	IF_103
0xa2a3	              0x90	                                     nop	      4934	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0xa2a4	            0xeb0d	                           jmp 0x400a2f3	      4934	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_37	IF_104	IF_105
0xa2a6	              0x90	                                     nop	      4941	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0xa2a7	            0xeb0a	                           jmp 0x400a2f3	      4941	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_38	IF_106	IF_107
0xa2a9	              0x90	                                     nop	      4957	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0xa2aa	            0xeb07	                           jmp 0x400a2f3	      4957	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_41	IF_110	IF_111
0xa2ac	              0x90	                                     nop	      4964	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0xa2ad	            0xeb04	                           jmp 0x400a2f3	      4964	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_42	IF_112	IF_113
0xa2af	              0x90	                                     nop	      4982	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_44
0xa2b0	            0xeb01	                           jmp 0x400a2f3	      4982	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_44
0xa2b2	              0x90	                                     nop	      4977	channel.c	FUNCTION_110	FOR_1	IF_4	ELSE_43	IF_115	IF_116
0xa2b3	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4985	channel.c	FUNCTION_110	ELSE_44	IF_117
0xa2ba	            0x7e27	                           jle 0x400a323	      4985	channel.c	FUNCTION_110	ELSE_44	IF_117
0xa2bc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4987	channel.c	FUNCTION_110	ELSE_44	IF_117	CALL_153
0xa2c3	        0x488b5808	                mov rbx, qword [rax + 8]	      4987	channel.c	FUNCTION_110	ELSE_44	IF_117	CALL_153
0xa2c7	      0xbf00000000	                              mov edi, 0	      4987	channel.c	FUNCTION_110	ELSE_44	IF_117	CALL_153
0xa2cc	      0xe800000000	                          call 0x400a311	      4987	channel.c	FUNCTION_110	ELSE_44	IF_117	CALL_153
0xa2d1	          0x4889de	                            mov rsi, rbx	      4987	channel.c	FUNCTION_110	ELSE_44	IF_117	CALL_153
0xa2d4	          0x4889c7	                            mov rdi, rax	      4987	channel.c	FUNCTION_110	ELSE_44	IF_117	CALL_153
0xa2d7	      0xe800000000	                          call 0x400a31c	      4987	channel.c	FUNCTION_110	ELSE_44	IF_117	CALL_153
0xa2dc	      0xb800000000	                              mov eax, 0	      4988	channel.c	FUNCTION_110	ELSE_44	IF_117
0xa2e1	            0xeb05	                           jmp 0x400a328	      4988	channel.c	FUNCTION_110	ELSE_44	IF_117
0xa2e3	      0xb801000000	                              mov eax, 1	      4991	channel.c	FUNCTION_110
0xa2e8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4992	channel.c	FUNCTION_110
0xa2ec	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4992	channel.c	FUNCTION_110
0xa2f5	            0x7405	                            je 0x400a33c	      4992	channel.c	FUNCTION_110
0xa2f7	      0xe800000000	                          call 0x400a33c	      4992	channel.c	FUNCTION_110
0xa2fc	    0x4881c4100100	                          add rsp, 0x110	      4992	channel.c	FUNCTION_110
0xa303	              0x5b	                                 pop rbx	      4992	channel.c	FUNCTION_110
0xa304	            0x415c	                                 pop r12	      4992	channel.c	FUNCTION_110
0xa306	              0x5d	                                 pop rbp	      4992	channel.c	FUNCTION_110
0xa307	              0xc3	                                     ret	      4992	channel.c	FUNCTION_110
channel_set_pipes	functions,0:SWITCH,0:CALL,8:ELSE,0:IF,4:FOR,0:WHILE,0:DO,0	76
0x19f2	              0x55	                                push rbp	      1016	channel.c	FUNCTION_33
0x19f3	          0x4889e5	                            mov rbp, rsp	      1016	channel.c	FUNCTION_33
0x19f6	        0x4883ec20	                           sub rsp, 0x20	      1016	channel.c	FUNCTION_33
0x19fa	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	channel.c	FUNCTION_33
0x19fe	          0x8975f4	              mov dword [rbp - 0xc], esi	      1016	channel.c	FUNCTION_33
0x1a01	          0x8955f0	             mov dword [rbp - 0x10], edx	      1016	channel.c	FUNCTION_33
0x1a04	          0x894dec	             mov dword [rbp - 0x14], ecx	      1016	channel.c	FUNCTION_33
0x1a07	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	      1017	channel.c	FUNCTION_33	IF_1
0x1a0b	            0x7445	                            je 0x4001a92	      1017	channel.c	FUNCTION_33	IF_1
0x1a0d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1019	channel.c	FUNCTION_33	IF_1	CALL_1
0x1a11	      0xbe03000000	                              mov esi, 3	      1019	channel.c	FUNCTION_33	IF_1	CALL_1
0x1a16	          0x4889c7	                            mov rdi, rax	      1019	channel.c	FUNCTION_33	IF_1	CALL_1
0x1a19	      0xe8ebfeffff	                  call sym.ch_close_part	      1019	channel.c	FUNCTION_33	IF_1	CALL_1
0x1a1e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1020	channel.c	FUNCTION_33	IF_1
0x1a22	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1020	channel.c	FUNCTION_33	IF_1
0x1a25	    0x899048030000	            mov dword [rax + 0x348], edx	      1020	channel.c	FUNCTION_33	IF_1
0x1a2b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1024	channel.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x1a2e	            0x89c7	                            mov edi, eax	      1024	channel.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x1a30	      0xe800000000	                          call 0x4001a75	      1024	channel.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x1a35	            0x85c0	                           test eax, eax	      1024	channel.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x1a37	            0x7419	                            je 0x4001a92	      1024	channel.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x1a39	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	channel.c	FUNCTION_33	IF_1	IF_2
0x1a3d	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1025	channel.c	FUNCTION_33	IF_1	IF_2
0x1a43	          0x83c808	                               or eax, 8	      1025	channel.c	FUNCTION_33	IF_1	IF_2
0x1a46	            0x89c2	                            mov edx, eax	      1025	channel.c	FUNCTION_33	IF_1	IF_2
0x1a48	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	channel.c	FUNCTION_33	IF_1	IF_2
0x1a4c	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1025	channel.c	FUNCTION_33	IF_1	IF_2
0x1a52	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	      1028	channel.c	FUNCTION_33	IF_3
0x1a56	            0x7459	                            je 0x4001af1	      1028	channel.c	FUNCTION_33	IF_3
0x1a58	        0x488b45f8	                mov rax, qword [rbp - 8]	      1031	channel.c	FUNCTION_33	IF_3	CALL_3
0x1a5c	      0xbe01000000	                              mov esi, 1	      1031	channel.c	FUNCTION_33	IF_3	CALL_3
0x1a61	          0x4889c7	                            mov rdi, rax	      1031	channel.c	FUNCTION_33	IF_3	CALL_3
0x1a64	      0xe87af1ffff	     call sym.channel_gui_unregister_one	      1031	channel.c	FUNCTION_33	IF_3	CALL_3
0x1a69	        0x488b45f8	                mov rax, qword [rbp - 8]	      1033	channel.c	FUNCTION_33	IF_3	CALL_4
0x1a6d	      0xbe01000000	                              mov esi, 1	      1033	channel.c	FUNCTION_33	IF_3	CALL_4
0x1a72	          0x4889c7	                            mov rdi, rax	      1033	channel.c	FUNCTION_33	IF_3	CALL_4
0x1a75	      0xe88ffeffff	                  call sym.ch_close_part	      1033	channel.c	FUNCTION_33	IF_3	CALL_4
0x1a7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1034	channel.c	FUNCTION_33	IF_3
0x1a7e	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1034	channel.c	FUNCTION_33	IF_3
0x1a81	    0x899028010000	            mov dword [rax + 0x128], edx	      1034	channel.c	FUNCTION_33	IF_3
0x1a87	        0x488b45f8	                mov rax, qword [rbp - 8]	      1035	channel.c	FUNCTION_33	IF_3
0x1a8b	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1035	channel.c	FUNCTION_33	IF_3
0x1a91	          0x83c802	                               or eax, 2	      1035	channel.c	FUNCTION_33	IF_3
0x1a94	            0x89c2	                            mov edx, eax	      1035	channel.c	FUNCTION_33	IF_3
0x1a96	        0x488b45f8	                mov rax, qword [rbp - 8]	      1035	channel.c	FUNCTION_33	IF_3
0x1a9a	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1035	channel.c	FUNCTION_33	IF_3
0x1aa0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1037	channel.c	FUNCTION_33	IF_3	CALL_5
0x1aa4	      0xbe01000000	                              mov esi, 1	      1037	channel.c	FUNCTION_33	IF_3	CALL_5
0x1aa9	          0x4889c7	                            mov rdi, rax	      1037	channel.c	FUNCTION_33	IF_3	CALL_5
0x1aac	      0xe833efffff	       call sym.channel_gui_register_one	      1037	channel.c	FUNCTION_33	IF_3	CALL_5
0x1ab1	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	      1040	channel.c	FUNCTION_33	IF_4
0x1ab5	            0x7459	                            je 0x4001b50	      1040	channel.c	FUNCTION_33	IF_4
0x1ab7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1043	channel.c	FUNCTION_33	IF_4	CALL_6
0x1abb	      0xbe02000000	                              mov esi, 2	      1043	channel.c	FUNCTION_33	IF_4	CALL_6
0x1ac0	          0x4889c7	                            mov rdi, rax	      1043	channel.c	FUNCTION_33	IF_4	CALL_6
0x1ac3	      0xe81bf1ffff	     call sym.channel_gui_unregister_one	      1043	channel.c	FUNCTION_33	IF_4	CALL_6
0x1ac8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1045	channel.c	FUNCTION_33	IF_4	CALL_7
0x1acc	      0xbe02000000	                              mov esi, 2	      1045	channel.c	FUNCTION_33	IF_4	CALL_7
0x1ad1	          0x4889c7	                            mov rdi, rax	      1045	channel.c	FUNCTION_33	IF_4	CALL_7
0x1ad4	      0xe830feffff	                  call sym.ch_close_part	      1045	channel.c	FUNCTION_33	IF_4	CALL_7
0x1ad9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1046	channel.c	FUNCTION_33	IF_4
0x1add	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1046	channel.c	FUNCTION_33	IF_4
0x1ae0	    0x899038020000	            mov dword [rax + 0x238], edx	      1046	channel.c	FUNCTION_33	IF_4
0x1ae6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1047	channel.c	FUNCTION_33	IF_4
0x1aea	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1047	channel.c	FUNCTION_33	IF_4
0x1af0	          0x83c804	                               or eax, 4	      1047	channel.c	FUNCTION_33	IF_4
0x1af3	            0x89c2	                            mov edx, eax	      1047	channel.c	FUNCTION_33	IF_4
0x1af5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1047	channel.c	FUNCTION_33	IF_4
0x1af9	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1047	channel.c	FUNCTION_33	IF_4
0x1aff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	channel.c	FUNCTION_33	IF_4	CALL_8
0x1b03	      0xbe02000000	                              mov esi, 2	      1049	channel.c	FUNCTION_33	IF_4	CALL_8
0x1b08	          0x4889c7	                            mov rdi, rax	      1049	channel.c	FUNCTION_33	IF_4	CALL_8
0x1b0b	      0xe8d4eeffff	       call sym.channel_gui_register_one	      1049	channel.c	FUNCTION_33	IF_4	CALL_8
0x1b10	              0x90	                                     nop	      1052	channel.c	FUNCTION_33
0x1b11	              0xc9	                                   leave	      1052	channel.c	FUNCTION_33
0x1b12	              0xc3	                                     ret	      1052	channel.c	FUNCTION_33
job_free_job	functions,0:SWITCH,0:CALL,1:ELSE,1:IF,2:FOR,0:WHILE,0:DO,0	32
0xa534	              0x55	                                push rbp	      5068	channel.c	FUNCTION_113
0xa535	          0x4889e5	                            mov rbp, rsp	      5068	channel.c	FUNCTION_113
0xa538	        0x4883ec10	                           sub rsp, 0x10	      5068	channel.c	FUNCTION_113
0xa53c	        0x48897df8	                mov qword [rbp - 8], rdi	      5068	channel.c	FUNCTION_113
0xa540	        0x488b45f8	                mov rax, qword [rbp - 8]	      5069	channel.c	FUNCTION_113	IF_1
0xa544	          0x488b00	                    mov rax, qword [rax]	      5069	channel.c	FUNCTION_113	IF_1
0xa547	          0x4885c0	                           test rax, rax	      5069	channel.c	FUNCTION_113	IF_1
0xa54a	            0x7413	                            je 0x400a59f	      5069	channel.c	FUNCTION_113	IF_1
0xa54c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5070	channel.c	FUNCTION_113	IF_1
0xa550	          0x488b00	                    mov rax, qword [rax]	      5070	channel.c	FUNCTION_113	IF_1
0xa553	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5070	channel.c	FUNCTION_113	IF_1
0xa557	        0x488b5208	                mov rdx, qword [rdx + 8]	      5070	channel.c	FUNCTION_113	IF_1
0xa55b	        0x48895008	                mov qword [rax + 8], rdx	      5070	channel.c	FUNCTION_113	IF_1
0xa55f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5071	channel.c	FUNCTION_113	IF_2
0xa563	        0x488b4008	                mov rax, qword [rax + 8]	      5071	channel.c	FUNCTION_113	IF_2
0xa567	          0x4885c0	                           test rax, rax	      5071	channel.c	FUNCTION_113	IF_2
0xa56a	            0x7510	                           jne 0x400a5bc	      5071	channel.c	FUNCTION_113	IF_2
0xa56c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5072	channel.c	FUNCTION_113	IF_2
0xa570	          0x488b00	                    mov rax, qword [rax]	      5072	channel.c	FUNCTION_113	IF_2
0xa573	    0x488905000000	            mov qword [0x0400a5ba], rax 	      5072	channel.c	FUNCTION_113	IF_2
0xa57a	            0xeb12	                           jmp 0x400a5ce	      5072	channel.c	FUNCTION_113	IF_2
0xa57c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5074	channel.c	FUNCTION_113	ELSE_1
0xa580	        0x488b4008	                mov rax, qword [rax + 8]	      5074	channel.c	FUNCTION_113	ELSE_1
0xa584	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5074	channel.c	FUNCTION_113	ELSE_1
0xa588	          0x488b12	                    mov rdx, qword [rdx]	      5074	channel.c	FUNCTION_113	ELSE_1
0xa58b	          0x488910	                    mov qword [rax], rdx	      5074	channel.c	FUNCTION_113	ELSE_1
0xa58e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5075	channel.c	FUNCTION_113	CALL_1
0xa592	          0x4889c7	                            mov rdi, rax	      5075	channel.c	FUNCTION_113	CALL_1
0xa595	      0xe800000000	                          call 0x400a5da	      5075	channel.c	FUNCTION_113	CALL_1
0xa59a	              0x90	                                     nop	      5076	channel.c	FUNCTION_113
0xa59b	              0xc9	                                   leave	      5076	channel.c	FUNCTION_113
0xa59c	              0xc3	                                     ret	      5076	channel.c	FUNCTION_113
channel_get	functions,0:SWITCH,0:CALL,1:ELSE,1:IF,2:FOR,0:WHILE,0:DO,0	45
0x2ecd	              0x55	                                push rbp	      1642	channel.c	FUNCTION_49
0x2ece	          0x4889e5	                            mov rbp, rsp	      1642	channel.c	FUNCTION_49
0x2ed1	        0x4883ec30	                           sub rsp, 0x30	      1642	channel.c	FUNCTION_49
0x2ed5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1642	channel.c	FUNCTION_49
0x2ed9	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1642	channel.c	FUNCTION_49
0x2edc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1643	channel.c	FUNCTION_49
0x2edf	        0x48c1e004	                              shl rax, 4	      1643	channel.c	FUNCTION_49
0x2ee3	          0x4889c2	                            mov rdx, rax	      1643	channel.c	FUNCTION_49
0x2ee6	        0x48c1e204	                              shl rdx, 4	      1643	channel.c	FUNCTION_49
0x2eea	          0x4801d0	                            add rax, rdx	      1643	channel.c	FUNCTION_49
0x2eed	        0x488d5020	                   lea rdx, [rax + 0x20]	      1643	channel.c	FUNCTION_49
0x2ef1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1643	channel.c	FUNCTION_49
0x2ef5	          0x4801d0	                            add rax, rdx	      1643	channel.c	FUNCTION_49
0x2ef8	        0x4883c010	                           add rax, 0x10	      1643	channel.c	FUNCTION_49
0x2efc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1643	channel.c	FUNCTION_49
0x2f00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1644	channel.c	FUNCTION_49
0x2f04	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1644	channel.c	FUNCTION_49
0x2f08	        0x488945f0	             mov qword [rbp - 0x10], rax	      1644	channel.c	FUNCTION_49
0x2f0c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1647	channel.c	FUNCTION_49	IF_1
0x2f11	            0x7507	                           jne 0x4002f5a	      1647	channel.c	FUNCTION_49	IF_1
0x2f13	      0xb800000000	                              mov eax, 0	      1648	channel.c	FUNCTION_49	IF_1
0x2f18	            0xeb56	                           jmp 0x4002fb0	      1648	channel.c	FUNCTION_49	IF_1
0x2f1a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1650	channel.c	FUNCTION_49
0x2f1e	          0x488b00	                    mov rax, qword [rax]	      1650	channel.c	FUNCTION_49
0x2f21	        0x488945f8	                mov qword [rbp - 8], rax	      1650	channel.c	FUNCTION_49
0x2f25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1651	channel.c	FUNCTION_49
0x2f29	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1651	channel.c	FUNCTION_49
0x2f2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1651	channel.c	FUNCTION_49
0x2f31	        0x48895010	             mov qword [rax + 0x10], rdx	      1651	channel.c	FUNCTION_49
0x2f35	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1652	channel.c	FUNCTION_49	IF_2
0x2f39	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1652	channel.c	FUNCTION_49	IF_2
0x2f3d	          0x4885c0	                           test rax, rax	      1652	channel.c	FUNCTION_49	IF_2
0x2f40	            0x750e	                           jne 0x4002f90	      1652	channel.c	FUNCTION_49	IF_2
0x2f42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1653	channel.c	FUNCTION_49	IF_2
0x2f46	    0x48c740180000	               mov qword [rax + 0x18], 0	      1653	channel.c	FUNCTION_49	IF_2
0x2f4e	            0xeb10	                           jmp 0x4002fa0	      1653	channel.c	FUNCTION_49	IF_2
0x2f50	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1655	channel.c	FUNCTION_49	ELSE_1
0x2f54	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1655	channel.c	FUNCTION_49	ELSE_1
0x2f58	    0x48c740180000	               mov qword [rax + 0x18], 0	      1655	channel.c	FUNCTION_49	ELSE_1
0x2f60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1656	channel.c	FUNCTION_49	CALL_1
0x2f64	          0x4889c7	                            mov rdi, rax	      1656	channel.c	FUNCTION_49	CALL_1
0x2f67	      0xe800000000	                          call 0x4002fac	      1656	channel.c	FUNCTION_49	CALL_1
0x2f6c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1657	channel.c	FUNCTION_49
0x2f70	              0xc9	                                   leave	      1658	channel.c	FUNCTION_49
0x2f71	              0xc3	                                     ret	      1658	channel.c	FUNCTION_49
win32_escape_arg	functions,0:SWITCH,1:CALL,6:ELSE,0:IF,7:FOR,4:WHILE,0:DO,0	180
0xa6ff	              0x55	                                push rbp	      5159	channel.c	FUNCTION_121
0xa700	          0x4889e5	                            mov rbp, rsp	      5159	channel.c	FUNCTION_121
0xa703	        0x4883ec50	                           sub rsp, 0x50	      5159	channel.c	FUNCTION_121
0xa707	        0x48897db8	             mov qword [rbp - 0x48], rdi	      5159	channel.c	FUNCTION_121
0xa70b	    0x64488b042528	                mov rax, qword fs:[0x28]	      5159	channel.c	FUNCTION_121
0xa714	        0x488945f8	                mov qword [rbp - 8], rax	      5159	channel.c	FUNCTION_121
0xa718	            0x31c0	                            xor eax, eax	      5159	channel.c	FUNCTION_121
0xa71a	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      5161	channel.c	FUNCTION_121
0xa721	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      5165	channel.c	FUNCTION_121
0xa728	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5168	channel.c	FUNCTION_121	CALL_1
0xa72c	          0x4889c7	                            mov rdi, rax	      5168	channel.c	FUNCTION_121	CALL_1
0xa72f	      0xe800000000	                          call 0x400a774	      5168	channel.c	FUNCTION_121	CALL_1
0xa734	          0x8945dc	             mov dword [rbp - 0x24], eax	      5168	channel.c	FUNCTION_121	CALL_1
0xa737	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5169	channel.c	FUNCTION_121
0xa73a	          0x8945cc	             mov dword [rbp - 0x34], eax	      5169	channel.c	FUNCTION_121
0xa73d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa741	        0x488945e0	             mov qword [rbp - 0x20], rax	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa745	            0xeb65	                           jmp 0x400a7ec	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa747	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa74b	           0xfb600	                   movzx eax, byte [rax]	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa74e	            0x3c22	                            cmp al, 0x22	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa750	            0x740b	                            je 0x400a79d	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa752	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa756	           0xfb600	                   movzx eax, byte [rax]	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa759	            0x3c5c	                            cmp al, 0x5c	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa75b	            0x7504	                           jne 0x400a7a1	      5172	channel.c	FUNCTION_121	FOR_1	IF_1
0xa75d	        0x8345cc01	               add dword [rbp - 0x34], 1	      5173	channel.c	FUNCTION_121	FOR_1	IF_1
0xa761	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa765	           0xfb600	                   movzx eax, byte [rax]	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa768	            0x3c20	                            cmp al, 0x20	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa76a	            0x740b	                            je 0x400a7b7	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa76c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa770	           0xfb600	                   movzx eax, byte [rax]	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa773	            0x3c09	                               cmp al, 9	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa775	            0x7507	                           jne 0x400a7be	      5174	channel.c	FUNCTION_121	FOR_1	IF_2
0xa777	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      5175	channel.c	FUNCTION_121	FOR_1	IF_2
0xa77e	    0x8b0500000000	            mov eax, dword [0x0400a7c4] 	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa784	            0x85c0	                           test eax, eax	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa786	            0x7412	                            je 0x400a7da	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa788	    0x488b05000000	            mov rax, qword [0x0400a7cf] 	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa78f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa793	          0x4889d7	                            mov rdi, rdx	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa796	            0xffd0	                                call rax	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa798	            0xeb05	                           jmp 0x400a7df	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa79a	      0xb801000000	                              mov eax, 1	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa79f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7a3	            0x4898	                                    cdqe	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7a5	          0x4801d0	                            add rax, rdx	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7a8	        0x488945e0	             mov qword [rbp - 0x20], rax	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7b0	           0xfb600	                   movzx eax, byte [rax]	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7b3	            0x84c0	                             test al, al	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7b5	            0x7590	                           jne 0x400a787	      5170	channel.c	FUNCTION_121	FOR_1	CALL_2
0xa7b7	        0x837dd800	               cmp dword [rbp - 0x28], 0	      5178	channel.c	FUNCTION_121	IF_3
0xa7bb	            0x7404	                            je 0x400a801	      5178	channel.c	FUNCTION_121	IF_3
0xa7bd	        0x8345cc02	               add dword [rbp - 0x34], 2	      5179	channel.c	FUNCTION_121	IF_3
0xa7c1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5181	channel.c	FUNCTION_121	IF_4
0xa7c4	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      5181	channel.c	FUNCTION_121	IF_4
0xa7c7	            0x7511	                           jne 0x400a81a	      5181	channel.c	FUNCTION_121	IF_4
0xa7c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5182	channel.c	FUNCTION_121	CALL_3
0xa7cd	          0x4889c7	                            mov rdi, rax	      5182	channel.c	FUNCTION_121	CALL_3
0xa7d0	      0xe800000000	                          call 0x400a815	      5182	channel.c	FUNCTION_121	CALL_3
0xa7d5	      0xe98f010000	                           jmp 0x400a9a9	      5182	channel.c	FUNCTION_121	CALL_3
0xa7da	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5185	channel.c	FUNCTION_121	CALL_4
0xa7dd	          0x83c001	                              add eax, 1	      5185	channel.c	FUNCTION_121	CALL_4
0xa7e0	            0x89c7	                            mov edi, eax	      5185	channel.c	FUNCTION_121	CALL_4
0xa7e2	      0xe800000000	                          call 0x400a827	      5185	channel.c	FUNCTION_121	CALL_4
0xa7e7	        0x488945f0	             mov qword [rbp - 0x10], rax	      5185	channel.c	FUNCTION_121	CALL_4
0xa7eb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5186	channel.c	FUNCTION_121	IF_5
0xa7f0	            0x750a	                           jne 0x400a83c	      5186	channel.c	FUNCTION_121	IF_5
0xa7f2	      0xb800000000	                              mov eax, 0	      5187	channel.c	FUNCTION_121	IF_5
0xa7f7	      0xe96d010000	                           jmp 0x400a9a9	      5187	channel.c	FUNCTION_121	IF_5
0xa7fc	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5188	channel.c	FUNCTION_121	CALL_5
0xa7ff	          0x83c001	                              add eax, 1	      5188	channel.c	FUNCTION_121	CALL_5
0xa802	          0x4863d0	                         movsxd rdx, eax	      5188	channel.c	FUNCTION_121	CALL_5
0xa805	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5188	channel.c	FUNCTION_121	CALL_5
0xa809	      0xbe00000000	                              mov esi, 0	      5188	channel.c	FUNCTION_121	CALL_5
0xa80e	          0x4889c7	                            mov rdi, rax	      5188	channel.c	FUNCTION_121	CALL_5
0xa811	      0xe800000000	                          call 0x400a856	      5188	channel.c	FUNCTION_121	CALL_5
0xa816	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5190	channel.c	FUNCTION_121
0xa81a	        0x488945e8	             mov qword [rbp - 0x18], rax	      5190	channel.c	FUNCTION_121
0xa81e	        0x837dd800	               cmp dword [rbp - 0x28], 0	      5192	channel.c	FUNCTION_121	IF_6
0xa822	            0x740f	                            je 0x400a873	      5192	channel.c	FUNCTION_121	IF_6
0xa824	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5193	channel.c	FUNCTION_121	IF_6
0xa828	        0x488d5001	                      lea rdx, [rax + 1]	      5193	channel.c	FUNCTION_121	IF_6
0xa82c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5193	channel.c	FUNCTION_121	IF_6
0xa830	          0xc60022	                    mov byte [rax], 0x22	      5193	channel.c	FUNCTION_121	IF_6
0xa833	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5195	channel.c	FUNCTION_121	FOR_2
0xa837	        0x488945e0	             mov qword [rbp - 0x20], rax	      5195	channel.c	FUNCTION_121	FOR_2
0xa83b	      0xe9d6000000	                           jmp 0x400a956	      5195	channel.c	FUNCTION_121	FOR_2
0xa840	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa844	           0xfb600	                   movzx eax, byte [rax]	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa847	           0xfb6c0	                           movzx eax, al	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa84a	          0x83f822	                           cmp eax, 0x22	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa84d	            0x7407	                            je 0x400a896	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa84f	          0x83f85c	                           cmp eax, 0x5c	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa852	            0x745b	                            je 0x400a8ef	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa854	            0xeb7c	                           jmp 0x400a912	      5197	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa856	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5200	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa85d	            0xeb13	                           jmp 0x400a8b2	      5200	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa85f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5201	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa863	        0x488d5001	                      lea rdx, [rax + 1]	      5201	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa867	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5201	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa86b	          0xc6005c	                    mov byte [rax], 0x5c	      5201	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa86e	        0x8345d401	               add dword [rbp - 0x2c], 1	      5200	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa872	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5200	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa875	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      5200	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa878	            0x7ce5	                            jl 0x400a89f	      5200	channel.c	FUNCTION_121	FOR_2	SWITCH_1	FOR_3
0xa87a	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      5202	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa881	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5203	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa885	        0x488d5001	                      lea rdx, [rax + 1]	      5203	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa889	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5203	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa88d	          0xc6005c	                    mov byte [rax], 0x5c	      5203	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa890	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa894	        0x488d5001	                      lea rdx, [rax + 1]	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa898	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa89c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8a0	        0x488d4a01	                      lea rcx, [rdx + 1]	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8a4	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8a8	           0xfb612	                   movzx edx, byte [rdx]	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8ab	            0x8810	                      mov byte [rax], dl	      5204	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8ad	            0xeb67	                           jmp 0x400a956	      5205	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8af	        0x8345d001	               add dword [rbp - 0x30], 1	      5207	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8b7	        0x488d5001	                      lea rdx, [rax + 1]	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8bb	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8bf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8c3	        0x488d4a01	                      lea rcx, [rdx + 1]	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8c7	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8cb	           0xfb612	                   movzx edx, byte [rdx]	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8ce	            0x8810	                      mov byte [rax], dl	      5208	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8d0	            0xeb44	                           jmp 0x400a956	      5209	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8d2	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      5211	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa8d9	    0x8b0500000000	            mov eax, dword [0x0400a91f] 	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8df	            0x85c0	                           test eax, eax	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8e1	            0x7415	                            je 0x400a938	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8e3	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8e7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8eb	          0x4889d6	                            mov rsi, rdx	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8ee	          0x4889c7	                            mov rdi, rax	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8f1	      0xe800000000	                          call 0x400a936	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8f6	            0xeb1d	                           jmp 0x400a955	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa8fc	        0x488d5001	                      lea rdx, [rax + 1]	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa900	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa904	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa908	        0x488d4a01	                      lea rcx, [rdx + 1]	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa90c	        0x48894de0	             mov qword [rbp - 0x20], rcx	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa910	           0xfb612	                   movzx edx, byte [rdx]	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa913	            0x8810	                      mov byte [rax], dl	      5212	channel.c	FUNCTION_121	FOR_2	SWITCH_1	CALL_6
0xa915	              0x90	                                     nop	      5213	channel.c	FUNCTION_121	FOR_2	SWITCH_1
0xa916	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5195	channel.c	FUNCTION_121	FOR_2
0xa91a	           0xfb600	                   movzx eax, byte [rax]	      5195	channel.c	FUNCTION_121	FOR_2
0xa91d	            0x84c0	                             test al, al	      5195	channel.c	FUNCTION_121	FOR_2
0xa91f	     0xf851bffffff	                           jne 0x400a880	      5195	channel.c	FUNCTION_121	FOR_2
0xa925	        0x837dd800	               cmp dword [rbp - 0x28], 0	      5218	channel.c	FUNCTION_121	IF_7
0xa929	            0x7433	                            je 0x400a99e	      5218	channel.c	FUNCTION_121	IF_7
0xa92b	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5220	channel.c	FUNCTION_121	IF_7	FOR_4
0xa932	            0xeb13	                           jmp 0x400a987	      5220	channel.c	FUNCTION_121	IF_7	FOR_4
0xa934	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5221	channel.c	FUNCTION_121	IF_7	FOR_4
0xa938	        0x488d5001	                      lea rdx, [rax + 1]	      5221	channel.c	FUNCTION_121	IF_7	FOR_4
0xa93c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5221	channel.c	FUNCTION_121	IF_7	FOR_4
0xa940	          0xc6005c	                    mov byte [rax], 0x5c	      5221	channel.c	FUNCTION_121	IF_7	FOR_4
0xa943	        0x8345d401	               add dword [rbp - 0x2c], 1	      5220	channel.c	FUNCTION_121	IF_7	FOR_4
0xa947	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5220	channel.c	FUNCTION_121	IF_7	FOR_4
0xa94a	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      5220	channel.c	FUNCTION_121	IF_7	FOR_4
0xa94d	            0x7ce5	                            jl 0x400a974	      5220	channel.c	FUNCTION_121	IF_7	FOR_4
0xa94f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5222	channel.c	FUNCTION_121	IF_7
0xa953	        0x488d5001	                      lea rdx, [rax + 1]	      5222	channel.c	FUNCTION_121	IF_7
0xa957	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5222	channel.c	FUNCTION_121	IF_7
0xa95b	          0xc60022	                    mov byte [rax], 0x22	      5222	channel.c	FUNCTION_121	IF_7
0xa95e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5224	channel.c	FUNCTION_121
0xa962	          0xc60000	                       mov byte [rax], 0	      5224	channel.c	FUNCTION_121
0xa965	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5226	channel.c	FUNCTION_121
0xa969	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5227	channel.c	FUNCTION_121
0xa96d	    0x644833342528	                xor rsi, qword fs:[0x28]	      5227	channel.c	FUNCTION_121
0xa976	            0x7405	                            je 0x400a9bd	      5227	channel.c	FUNCTION_121
0xa978	      0xe800000000	                          call 0x400a9bd	      5227	channel.c	FUNCTION_121
0xa97d	              0xc9	                                   leave	      5227	channel.c	FUNCTION_121
0xa97e	              0xc3	                                     ret	      5227	channel.c	FUNCTION_121
channel_free_contents	functions,0:SWITCH,0:CALL,3:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	19
0x6d7	              0x55	                                push rbp	       361	channel.c	FUNCTION_14
0x6d8	          0x4889e5	                            mov rbp, rsp	       361	channel.c	FUNCTION_14
0x6db	        0x4883ec10	                           sub rsp, 0x10	       361	channel.c	FUNCTION_14
0x6df	        0x48897df8	                mov qword [rbp - 8], rdi	       361	channel.c	FUNCTION_14
0x6e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       362	channel.c	FUNCTION_14	CALL_1
0x6e7	      0xbe01000000	                              mov esi, 1	       362	channel.c	FUNCTION_14	CALL_1
0x6ec	          0x4889c7	                            mov rdi, rax	       362	channel.c	FUNCTION_14	CALL_1
0x6ef	      0xe800000000	                          call 0x4000734	       362	channel.c	FUNCTION_14	CALL_1
0x6f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	channel.c	FUNCTION_14	CALL_2
0x6f8	          0x4889c7	                            mov rdi, rax	       363	channel.c	FUNCTION_14	CALL_2
0x6fb	      0xe800000000	                          call 0x4000740	       363	channel.c	FUNCTION_14	CALL_2
0x700	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	channel.c	FUNCTION_14	CALL_3
0x704	      0xbe00000000	                              mov esi, 0	       364	channel.c	FUNCTION_14	CALL_3
0x709	          0x4889c7	                            mov rdi, rax	       364	channel.c	FUNCTION_14	CALL_3
0x70c	      0xb800000000	                              mov eax, 0	       364	channel.c	FUNCTION_14	CALL_3
0x711	      0xe800000000	                          call 0x4000756	       364	channel.c	FUNCTION_14	CALL_3
0x716	              0x90	                                     nop	       365	channel.c	FUNCTION_14
0x717	              0xc9	                                   leave	       365	channel.c	FUNCTION_14
0x718	              0xc3	                                     ret	       365	channel.c	FUNCTION_14
channel_unref	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	22
0x803	              0x55	                                push rbp	       418	channel.c	FUNCTION_18
0x804	          0x4889e5	                            mov rbp, rsp	       418	channel.c	FUNCTION_18
0x807	        0x4883ec10	                           sub rsp, 0x10	       418	channel.c	FUNCTION_18
0x80b	        0x48897df8	                mov qword [rbp - 8], rdi	       418	channel.c	FUNCTION_18
0x80f	      0x48837df800	                  cmp qword [rbp - 8], 0	       419	channel.c	FUNCTION_18	IF_1
0x814	            0x7433	                            je 0x4000889	       419	channel.c	FUNCTION_18	IF_1
0x816	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	channel.c	FUNCTION_18	IF_1
0x81a	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	       419	channel.c	FUNCTION_18	IF_1
0x820	          0x8d50ff	                      lea edx, [rax - 1]	       419	channel.c	FUNCTION_18	IF_1
0x823	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	channel.c	FUNCTION_18	IF_1
0x827	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	       419	channel.c	FUNCTION_18	IF_1
0x82d	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	channel.c	FUNCTION_18	IF_1
0x831	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	       419	channel.c	FUNCTION_18	IF_1
0x837	            0x85c0	                           test eax, eax	       419	channel.c	FUNCTION_18	IF_1
0x839	            0x7f0e	                            jg 0x4000889	       419	channel.c	FUNCTION_18	IF_1
0x83b	        0x488b45f8	                mov rax, qword [rbp - 8]	       420	channel.c	FUNCTION_18	CALL_1
0x83f	          0x4889c7	                            mov rdi, rax	       420	channel.c	FUNCTION_18	CALL_1
0x842	      0xe886ffffff	               call sym.channel_may_free	       420	channel.c	FUNCTION_18	CALL_1
0x847	            0xeb05	                           jmp 0x400088e	       420	channel.c	FUNCTION_18	CALL_1
0x849	      0xb800000000	                              mov eax, 0	       421	channel.c	FUNCTION_18
0x84e	              0xc9	                                   leave	       422	channel.c	FUNCTION_18
0x84f	              0xc3	                                     ret	       422	channel.c	FUNCTION_18
invoke_callback	functions,0:SWITCH,0:CALL,4:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	52
0x2d7a	              0x55	                                push rbp	      1590	channel.c	FUNCTION_46
0x2d7b	          0x4889e5	                            mov rbp, rsp	      1590	channel.c	FUNCTION_46
0x2d7e	        0x4883ec50	                           sub rsp, 0x50	      1590	channel.c	FUNCTION_46
0x2d82	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1590	channel.c	FUNCTION_46
0x2d86	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1590	channel.c	FUNCTION_46
0x2d8a	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1590	channel.c	FUNCTION_46
0x2d8e	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1590	channel.c	FUNCTION_46
0x2d92	    0x64488b042528	                mov rax, qword fs:[0x28]	      1590	channel.c	FUNCTION_46
0x2d9b	        0x488945f8	                mov qword [rbp - 8], rax	      1590	channel.c	FUNCTION_46
0x2d9f	            0x31c0	                            xor eax, eax	      1590	channel.c	FUNCTION_46
0x2da1	    0x8b0500000000	            mov eax, dword [0x04002de7] 	      1594	channel.c	FUNCTION_46	IF_1
0x2da7	            0x85c0	                           test eax, eax	      1594	channel.c	FUNCTION_46	IF_1
0x2da9	            0x750a	                           jne 0x4002df5	      1594	channel.c	FUNCTION_46	IF_1
0x2dab	      0xbf00000000	                              mov edi, 0	      1595	channel.c	FUNCTION_46	CALL_1
0x2db0	      0xe800000000	                          call 0x4002df5	      1595	channel.c	FUNCTION_46	CALL_1
0x2db5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1597	channel.c	FUNCTION_46
0x2db9	    0xc7000a000000	                    mov dword [rax], 0xa	      1597	channel.c	FUNCTION_46
0x2dbf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1598	channel.c	FUNCTION_46
0x2dc3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1598	channel.c	FUNCTION_46
0x2dc7	        0x48895008	                mov qword [rax + 8], rdx	      1598	channel.c	FUNCTION_46
0x2dcb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1600	channel.c	FUNCTION_46	CALL_3
0x2dcf	          0x4889c7	                            mov rdi, rax	      1600	channel.c	FUNCTION_46	CALL_3
0x2dd2	      0xe800000000	                          call 0x4002e17	      1600	channel.c	FUNCTION_46	CALL_3
0x2dd7	            0x89c7	                            mov edi, eax	      1600	channel.c	FUNCTION_46	CALL_3
0x2dd9	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1600	channel.c	FUNCTION_46	CALL_3
0x2ddd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1600	channel.c	FUNCTION_46	CALL_3
0x2de1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1600	channel.c	FUNCTION_46	CALL_3
0x2de5	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_46	CALL_3
0x2de7	          0xff75b8	                 push qword [rbp - 0x48]	      1600	channel.c	FUNCTION_46	CALL_3
0x2dea	            0x6a01	                                  push 1	      1600	channel.c	FUNCTION_46	CALL_3
0x2dec	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1600	channel.c	FUNCTION_46	CALL_3
0x2df0	              0x51	                                push rcx	      1600	channel.c	FUNCTION_46	CALL_3
0x2df1	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_46	CALL_3
0x2df3	            0x6a00	                                  push 0	      1600	channel.c	FUNCTION_46	CALL_3
0x2df5	    0x41b900000000	                              mov r9d, 0	      1600	channel.c	FUNCTION_46	CALL_3
0x2dfb	          0x4989f0	                             mov r8, rsi	      1600	channel.c	FUNCTION_46	CALL_3
0x2dfe	      0xb902000000	                              mov ecx, 2	      1600	channel.c	FUNCTION_46	CALL_3
0x2e03	            0x89fe	                            mov esi, edi	      1600	channel.c	FUNCTION_46	CALL_3
0x2e05	          0x4889c7	                            mov rdi, rax	      1600	channel.c	FUNCTION_46	CALL_3
0x2e08	      0xe800000000	                          call 0x4002e4d	      1600	channel.c	FUNCTION_46	CALL_3
0x2e0d	        0x4883c430	                           add rsp, 0x30	      1600	channel.c	FUNCTION_46	CALL_3
0x2e11	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1602	channel.c	FUNCTION_46	CALL_4
0x2e15	          0x4889c7	                            mov rdi, rax	      1602	channel.c	FUNCTION_46	CALL_4
0x2e18	      0xe800000000	                          call 0x4002e5d	      1602	channel.c	FUNCTION_46	CALL_4
0x2e1d	    0xc70500000000	               mov dword [0x04002e67], 1	      1603	channel.c	FUNCTION_46
0x2e27	              0x90	                                     nop	      1604	channel.c	FUNCTION_46
0x2e28	        0x488b45f8	                mov rax, qword [rbp - 8]	      1604	channel.c	FUNCTION_46
0x2e2c	    0x644833042528	                xor rax, qword fs:[0x28]	      1604	channel.c	FUNCTION_46
0x2e35	            0x7405	                            je 0x4002e7c	      1604	channel.c	FUNCTION_46
0x2e37	      0xe800000000	                          call 0x4002e7c	      1604	channel.c	FUNCTION_46
0x2e3c	              0xc9	                                   leave	      1604	channel.c	FUNCTION_46
0x2e3d	              0xc3	                                     ret	      1604	channel.c	FUNCTION_46
job_start	functions,0:SWITCH,0:CALL,38:ELSE,7:IF,23:FOR,4:WHILE,0:DO,0	356
0xb0fe	              0x55	                                push rbp	      5526	channel.c	FUNCTION_133
0xb0ff	          0x4889e5	                            mov rbp, rsp	      5526	channel.c	FUNCTION_133
0xb102	              0x53	                                push rbx	      5526	channel.c	FUNCTION_133
0xb103	    0x4881ec580400	                          sub rsp, 0x458	      5526	channel.c	FUNCTION_133
0xb10a	    0x4889bdb8fbff	            mov qword [rbp - 0x448], rdi	      5526	channel.c	FUNCTION_133
0xb111	    0x4889b5b0fbff	            mov qword [rbp - 0x450], rsi	      5526	channel.c	FUNCTION_133
0xb118	    0x488995a8fbff	            mov qword [rbp - 0x458], rdx	      5526	channel.c	FUNCTION_133
0xb11f	    0x64488b042528	                mov rax, qword fs:[0x28]	      5526	channel.c	FUNCTION_133
0xb128	        0x488945e8	             mov qword [rbp - 0x18], rax	      5526	channel.c	FUNCTION_133
0xb12c	            0x31c0	                            xor eax, eax	      5526	channel.c	FUNCTION_133
0xb12e	    0x48c785e8fbff	              mov qword [rbp - 0x418], 0	      5528	channel.c	FUNCTION_133
0xb139	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	      5529	channel.c	FUNCTION_133
0xb144	    0xc785c4fbffff	              mov dword [rbp - 0x43c], 0	      5530	channel.c	FUNCTION_133
0xb14e	      0xe800000000	                          call 0x400b193	      5540	channel.c	FUNCTION_133	CALL_1
0xb153	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	      5540	channel.c	FUNCTION_133	CALL_1
0xb15a	    0x4883bdf0fbff	              cmp qword [rbp - 0x410], 0	      5541	channel.c	FUNCTION_133	IF_1
0xb162	            0x750a	                           jne 0x400b1ae	      5541	channel.c	FUNCTION_133	IF_1
0xb164	      0xb800000000	                              mov eax, 0	      5542	channel.c	FUNCTION_133	IF_1
0xb169	      0xe9ec050000	                           jmp 0x400b79a	      5542	channel.c	FUNCTION_133	IF_1
0xb16e	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5544	channel.c	FUNCTION_133
0xb175	    0xc74028000000	               mov dword [rax + 0x28], 0	      5544	channel.c	FUNCTION_133
0xb17c	    0x4883bda8fbff	              cmp qword [rbp - 0x458], 0	      5549	channel.c	FUNCTION_133	IF_2
0xb184	            0x7421	                            je 0x400b1e7	      5549	channel.c	FUNCTION_133	IF_2
0xb186	    0x488b95a8fbff	            mov rdx, qword [rbp - 0x458]	      5550	channel.c	FUNCTION_133	IF_2
0xb18d	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5550	channel.c	FUNCTION_133	IF_2
0xb194	          0x4889d6	                            mov rsi, rdx	      5550	channel.c	FUNCTION_133	IF_2
0xb197	      0xba6f000000	                           mov edx, 0x6f	      5550	channel.c	FUNCTION_133	IF_2
0xb19c	          0x4889c7	                            mov rdi, rax	      5550	channel.c	FUNCTION_133	IF_2
0xb19f	          0x4889d1	                            mov rcx, rdx	      5550	channel.c	FUNCTION_133	IF_2
0xb1a2	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5550	channel.c	FUNCTION_133	IF_2
0xb1a5	            0xeb45	                           jmp 0x400b22c	      5550	channel.c	FUNCTION_133	IF_2
0xb1a7	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5554	channel.c	FUNCTION_133	ELSE_1	CALL_3
0xb1ae	          0x4889c7	                            mov rdi, rax	      5554	channel.c	FUNCTION_133	ELSE_1	CALL_3
0xb1b1	      0xe800000000	                          call 0x400b1f6	      5554	channel.c	FUNCTION_133	ELSE_1	CALL_3
0xb1b6	    0xc78528fcffff	              mov dword [rbp - 0x3d8], 0	      5555	channel.c	FUNCTION_133	ELSE_1
0xb1c0	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1c7	        0x488d7810	                   lea rdi, [rax + 0x10]	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1cb	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1d2	      0xb930000000	                           mov ecx, 0x30	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1d7	      0xbaffce0110	                     mov edx, 0x1001ceff	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1dc	          0x4889c6	                            mov rsi, rax	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1df	      0xe800000000	                          call 0x400b224	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1e4	            0x85c0	                           test eax, eax	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1e6	     0xf8428050000	                            je 0x400b754	      5556	channel.c	FUNCTION_133	ELSE_1	IF_3	CALL_4
0xb1ec	    0xc785ccfbffff	              mov dword [rbp - 0x434], 1	      5564	channel.c	FUNCTION_133	FOR_1
0xb1f6	      0xe98d000000	                           jmp 0x400b2c8	      5564	channel.c	FUNCTION_133	FOR_1
0xb1fb	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb201	    0x8b95ccfbffff	            mov edx, dword [rbp - 0x434]	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb207	          0x83ea01	                              sub edx, 1	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb20a	      0xbe00000100	                        mov esi, 0x10000	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb20f	            0x89d1	                            mov ecx, edx	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb211	            0xd3e6	                             shl esi, cl	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb213	            0x89f2	                            mov edx, esi	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb215	            0x21d0	                            and eax, edx	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb217	            0x85c0	                           test eax, eax	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb219	            0x7466	                            je 0x400b2c1	      5565	channel.c	FUNCTION_133	FOR_1	IF_4
0xb21b	    0x8b85ccfbffff	            mov eax, dword [rbp - 0x434]	      5566	channel.c	FUNCTION_133	FOR_1	IF_4
0xb221	        0x4883c004	                              add rax, 4	      5566	channel.c	FUNCTION_133	FOR_1	IF_4
0xb225	    0x8b848528fcff	    mov eax, dword [rbp + rax*4 - 0x3d8]	      5566	channel.c	FUNCTION_133	FOR_1	IF_4
0xb22c	          0x83f802	                              cmp eax, 2	      5566	channel.c	FUNCTION_133	FOR_1	IF_4
0xb22f	            0x7550	                           jne 0x400b2c1	      5566	channel.c	FUNCTION_133	FOR_1	IF_4
0xb231	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb237	    0x8b95ccfbffff	            mov edx, dword [rbp - 0x434]	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb23d	          0x83ea01	                              sub edx, 1	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb240	      0xbe00000800	                        mov esi, 0x80000	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb245	            0x89d1	                            mov ecx, edx	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb247	            0xd3e6	                             shl esi, cl	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb249	            0x89f2	                            mov edx, esi	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb24b	            0x21d0	                            and eax, edx	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb24d	            0x85c0	                           test eax, eax	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb24f	            0x7419	                            je 0x400b2aa	      5567	channel.c	FUNCTION_133	FOR_1	IF_4
0xb251	    0x8b85ccfbffff	            mov eax, dword [rbp - 0x434]	      5568	channel.c	FUNCTION_133	FOR_1	IF_4
0xb257	        0x4883c026	                           add rax, 0x26	      5568	channel.c	FUNCTION_133	FOR_1	IF_4
0xb25b	    0x488b84c520fc	    mov rax, qword [rbp + rax*8 - 0x3e0]	      5568	channel.c	FUNCTION_133	FOR_1	IF_4
0xb263	           0xfb600	                   movzx eax, byte [rax]	      5568	channel.c	FUNCTION_133	FOR_1	IF_4
0xb266	            0x84c0	                             test al, al	      5568	channel.c	FUNCTION_133	FOR_1	IF_4
0xb268	            0x7517	                           jne 0x400b2c1	      5568	channel.c	FUNCTION_133	FOR_1	IF_4
0xb26a	      0xbf00000000	                              mov edi, 0	      5570	channel.c	FUNCTION_133	FOR_1	IF_4	CALL_6
0xb26f	      0xe800000000	                          call 0x400b2b4	      5570	channel.c	FUNCTION_133	FOR_1	IF_4	CALL_6
0xb274	          0x4889c7	                            mov rdi, rax	      5570	channel.c	FUNCTION_133	FOR_1	IF_4	CALL_6
0xb277	      0xe800000000	                          call 0x400b2bc	      5570	channel.c	FUNCTION_133	FOR_1	IF_4	CALL_6
0xb27c	      0xe99d040000	                           jmp 0x400b75e	      5571	channel.c	FUNCTION_133	FOR_1	IF_4
0xb281	    0x8385ccfbffff	              add dword [rbp - 0x434], 1	      5564	channel.c	FUNCTION_133	FOR_1
0xb288	    0x83bdccfbffff	              cmp dword [rbp - 0x434], 3	      5564	channel.c	FUNCTION_133	FOR_1
0xb28f	     0xf8666ffffff	                           jbe 0x400b23b	      5564	channel.c	FUNCTION_133	FOR_1
0xb295	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5574	channel.c	FUNCTION_133	IF_5
0xb29b	      0x2500000400	                        and eax, 0x40000	      5574	channel.c	FUNCTION_133	IF_5
0xb2a0	            0x85c0	                           test eax, eax	      5574	channel.c	FUNCTION_133	IF_5
0xb2a2	     0xf8440010000	                            je 0x400b428	      5574	channel.c	FUNCTION_133	IF_5
0xb2a8	    0x8b8544fcffff	            mov eax, dword [rbp - 0x3bc]	      5574	channel.c	FUNCTION_133	IF_5
0xb2ae	          0x83f803	                              cmp eax, 3	      5574	channel.c	FUNCTION_133	IF_5
0xb2b1	     0xf8531010000	                           jne 0x400b428	      5574	channel.c	FUNCTION_133	IF_5
0xb2b7	    0x48c785d8fbff	              mov qword [rbp - 0x428], 0	      5576	channel.c	FUNCTION_133	IF_5
0xb2c2	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5579	channel.c	FUNCTION_133	IF_5	IF_6
0xb2c8	      0x2500000004	         and eax, loc.imp.list_append_tv	      5579	channel.c	FUNCTION_133	IF_5	IF_6
0xb2cd	            0x85c0	                           test eax, eax	      5579	channel.c	FUNCTION_133	IF_5	IF_6
0xb2cf	            0x743e	                            je 0x400b34f	      5579	channel.c	FUNCTION_133	IF_5	IF_6
0xb2d1	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      5581	channel.c	FUNCTION_133	IF_5	IF_6	CALL_7
0xb2d7	            0x89c7	                            mov edi, eax	      5581	channel.c	FUNCTION_133	IF_5	IF_6	CALL_7
0xb2d9	      0xe800000000	                          call 0x400b31e	      5581	channel.c	FUNCTION_133	IF_5	IF_6	CALL_7
0xb2de	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      5581	channel.c	FUNCTION_133	IF_5	IF_6	CALL_7
0xb2e5	    0x4883bdd8fbff	              cmp qword [rbp - 0x428], 0	      5582	channel.c	FUNCTION_133	IF_5	IF_6	IF_7
0xb2ed	            0x755e	                           jne 0x400b38d	      5582	channel.c	FUNCTION_133	IF_5	IF_6	IF_7
0xb2ef	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb2f5	          0x4863d8	                         movsxd rbx, eax	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb2f8	      0xbf00000000	                              mov edi, 0	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb2fd	      0xe800000000	                          call 0x400b342	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb302	          0x4889de	                            mov rsi, rbx	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb305	          0x4889c7	                            mov rdi, rax	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb308	      0xe800000000	                          call 0x400b34d	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb30d	            0xeb3e	                           jmp 0x400b38d	      5583	channel.c	FUNCTION_133	IF_5	IF_6	CALL_9
0xb30f	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5585	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8
0xb315	      0x2500002000	                       and eax, 0x200000	      5585	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8
0xb31a	            0x85c0	                           test eax, eax	      5585	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8
0xb31c	            0x7514	                           jne 0x400b372	      5585	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8
0xb31e	      0xbf00000000	                              mov edi, 0	      5587	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8	CALL_11
0xb323	      0xe800000000	                          call 0x400b368	      5587	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8	CALL_11
0xb328	          0x4889c7	                            mov rdi, rax	      5587	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8	CALL_11
0xb32b	      0xe800000000	                          call 0x400b370	      5587	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8	CALL_11
0xb330	            0xeb1b	                           jmp 0x400b38d	      5587	channel.c	FUNCTION_133	IF_5	ELSE_2	IF_8	CALL_11
0xb332	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      5590	channel.c	FUNCTION_133	IF_5	CALL_12
0xb339	      0xbe00000000	                              mov esi, 0	      5590	channel.c	FUNCTION_133	IF_5	CALL_12
0xb33e	          0x4889c7	                            mov rdi, rax	      5590	channel.c	FUNCTION_133	IF_5	CALL_12
0xb341	      0xe800000000	                          call 0x400b386	      5590	channel.c	FUNCTION_133	IF_5	CALL_12
0xb346	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      5590	channel.c	FUNCTION_133	IF_5	CALL_12
0xb34d	    0x4883bdd8fbff	              cmp qword [rbp - 0x428], 0	      5591	channel.c	FUNCTION_133	IF_5	IF_9
0xb355	     0xf84bc030000	                            je 0x400b757	      5591	channel.c	FUNCTION_133	IF_5	IF_9
0xb35b	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      5593	channel.c	FUNCTION_133	IF_5	IF_10
0xb362	        0x488b4008	                mov rax, qword [rax + 8]	      5593	channel.c	FUNCTION_133	IF_5	IF_10
0xb366	          0x4885c0	                           test rax, rax	      5593	channel.c	FUNCTION_133	IF_5	IF_10
0xb369	            0x756b	                           jne 0x400b416	      5593	channel.c	FUNCTION_133	IF_5	IF_10
0xb36b	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5598	channel.c	FUNCTION_133	IF_5	IF_10	IF_11
0xb371	      0x2500000004	         and eax, loc.imp.list_append_tv	      5598	channel.c	FUNCTION_133	IF_5	IF_10	IF_11
0xb376	            0x85c0	                           test eax, eax	      5598	channel.c	FUNCTION_133	IF_5	IF_10	IF_11
0xb378	            0x7429	                            je 0x400b3e3	      5598	channel.c	FUNCTION_133	IF_5	IF_10	IF_11
0xb37a	    0x8b957cfdffff	            mov edx, dword [rbp - 0x284]	      5600	channel.c	FUNCTION_133	IF_5	IF_10	IF_11	CALL_13
0xb380	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5600	channel.c	FUNCTION_133	IF_5	IF_10	IF_11	CALL_13
0xb384	      0xbe00000000	                              mov esi, 0	      5600	channel.c	FUNCTION_133	IF_5	IF_10	IF_11	CALL_13
0xb389	          0x4889c7	                            mov rdi, rax	      5600	channel.c	FUNCTION_133	IF_5	IF_10	IF_11	CALL_13
0xb38c	      0xb800000000	                              mov eax, 0	      5600	channel.c	FUNCTION_133	IF_5	IF_10	IF_11	CALL_13
0xb391	      0xe800000000	                          call 0x400b3d6	      5600	channel.c	FUNCTION_133	IF_5	IF_10	IF_11	CALL_13
0xb396	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5601	channel.c	FUNCTION_133	IF_5	IF_10	IF_11
0xb39a	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	      5601	channel.c	FUNCTION_133	IF_5	IF_10	IF_11
0xb3a1	            0xeb0e	                           jmp 0x400b3f1	      5601	channel.c	FUNCTION_133	IF_5	IF_10	IF_11
0xb3a3	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      5604	channel.c	FUNCTION_133	IF_5	IF_10	ELSE_4
0xb3aa	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	      5604	channel.c	FUNCTION_133	IF_5	IF_10	ELSE_4
0xb3b1	      0xbf00000000	                              mov edi, 0	      5605	channel.c	FUNCTION_133	IF_5	IF_10	CALL_15
0xb3b6	      0xe800000000	                          call 0x400b3fb	      5605	channel.c	FUNCTION_133	IF_5	IF_10	CALL_15
0xb3bb	          0x4889c2	                            mov rdx, rax	      5605	channel.c	FUNCTION_133	IF_5	IF_10	CALL_15
0xb3be	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      5605	channel.c	FUNCTION_133	IF_5	IF_10	CALL_15
0xb3c5	          0x4889c6	                            mov rsi, rax	      5605	channel.c	FUNCTION_133	IF_5	IF_10	CALL_15
0xb3c8	          0x4889d7	                            mov rdi, rdx	      5605	channel.c	FUNCTION_133	IF_5	IF_10	CALL_15
0xb3cb	      0xe800000000	                          call 0x400b410	      5605	channel.c	FUNCTION_133	IF_5	IF_10	CALL_15
0xb3d0	              0x90	                                     nop	      5606	channel.c	FUNCTION_133	IF_5	IF_10
0xb3d1	      0xe948030000	                           jmp 0x400b75e	      5606	channel.c	FUNCTION_133	IF_5	IF_10
0xb3d6	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5608	channel.c	FUNCTION_133	IF_5
0xb3dd	    0x488b95d8fbff	            mov rdx, qword [rbp - 0x428]	      5608	channel.c	FUNCTION_133	IF_5
0xb3e4	        0x48895050	             mov qword [rax + 0x50], rdx	      5608	channel.c	FUNCTION_133	IF_5
0xb3e8	    0x488d9520fcff	                  lea rdx, [rbp - 0x3e0]	      5611	channel.c	FUNCTION_133	CALL_16
0xb3ef	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5611	channel.c	FUNCTION_133	CALL_16
0xb3f6	          0x4889d6	                            mov rsi, rdx	      5611	channel.c	FUNCTION_133	CALL_16
0xb3f9	          0x4889c7	                            mov rdi, rax	      5611	channel.c	FUNCTION_133	CALL_16
0xb3fc	      0xe800000000	                          call 0x400b441	      5611	channel.c	FUNCTION_133	CALL_16
0xb401	    0x4883bdb0fbff	              cmp qword [rbp - 0x450], 0	      5614	channel.c	FUNCTION_133	IF_12
0xb409	     0xf84f4000000	                            je 0x400b543	      5614	channel.c	FUNCTION_133	IF_12
0xb40f	    0xc785c8fbffff	              mov dword [rbp - 0x438], 0	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb419	            0xeb16	                           jmp 0x400b471	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb41b	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5618	channel.c	FUNCTION_133	IF_12	FOR_2
0xb421	          0x83c001	                              add eax, 1	      5618	channel.c	FUNCTION_133	IF_12	FOR_2
0xb424	    0x8985c4fbffff	            mov dword [rbp - 0x43c], eax	      5618	channel.c	FUNCTION_133	IF_12	FOR_2
0xb42a	    0x8385c8fbffff	              add dword [rbp - 0x438], 1	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb431	    0x8b85c8fbffff	            mov eax, dword [rbp - 0x438]	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb437	            0x4898	                                    cdqe	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb439	    0x488d14c50000	                        lea rdx, [rax*8]	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb441	    0x488b85b0fbff	            mov rax, qword [rbp - 0x450]	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb448	          0x4801d0	                            add rax, rdx	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb44b	          0x488b00	                    mov rax, qword [rax]	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb44e	          0x4885c0	                           test rax, rax	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb451	            0x75c8	                           jne 0x400b45b	      5617	channel.c	FUNCTION_133	IF_12	FOR_2
0xb453	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5619	channel.c	FUNCTION_133	IF_12	CALL_17
0xb459	          0x83c001	                              add eax, 1	      5619	channel.c	FUNCTION_133	IF_12	CALL_17
0xb45c	            0x4898	                                    cdqe	      5619	channel.c	FUNCTION_133	IF_12	CALL_17
0xb45e	          0xc1e003	                              shl eax, 3	      5619	channel.c	FUNCTION_133	IF_12	CALL_17
0xb461	            0x89c7	                            mov edi, eax	      5619	channel.c	FUNCTION_133	IF_12	CALL_17
0xb463	      0xe800000000	                          call 0x400b4a8	      5619	channel.c	FUNCTION_133	IF_12	CALL_17
0xb468	    0x488985d0fbff	            mov qword [rbp - 0x430], rax	      5619	channel.c	FUNCTION_133	IF_12	CALL_17
0xb46f	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5620	channel.c	FUNCTION_133	IF_12	IF_13
0xb476	          0x4885c0	                           test rax, rax	      5620	channel.c	FUNCTION_133	IF_12	IF_13
0xb479	     0xf849b020000	                            je 0x400b75a	      5620	channel.c	FUNCTION_133	IF_12	IF_13
0xb47f	    0xc785c8fbffff	              mov dword [rbp - 0x438], 0	      5622	channel.c	FUNCTION_133	IF_12	FOR_3
0xb489	            0xeb47	                           jmp 0x400b512	      5622	channel.c	FUNCTION_133	IF_12	FOR_3
0xb48b	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb492	    0x8b95c8fbffff	            mov edx, dword [rbp - 0x438]	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb498	          0x4863d2	                         movsxd rdx, edx	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb49b	        0x48c1e203	                              shl rdx, 3	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb49f	        0x488d1c10	                    lea rbx, [rax + rdx]	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4a3	    0x8b85c8fbffff	            mov eax, dword [rbp - 0x438]	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4a9	            0x4898	                                    cdqe	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4ab	    0x488d14c50000	                        lea rdx, [rax*8]	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4b3	    0x488b85b0fbff	            mov rax, qword [rbp - 0x450]	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4ba	          0x4801d0	                            add rax, rdx	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4bd	          0x488b00	                    mov rax, qword [rax]	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4c0	          0x4889c7	                            mov rdi, rax	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4c3	      0xe800000000	                          call 0x400b508	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4c8	          0x488903	                    mov qword [rbx], rax	      5623	channel.c	FUNCTION_133	IF_12	CALL_18
0xb4cb	    0x8385c8fbffff	              add dword [rbp - 0x438], 1	      5622	channel.c	FUNCTION_133	IF_12	FOR_3
0xb4d2	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5622	channel.c	FUNCTION_133	IF_12	FOR_3
0xb4d8	    0x3985c8fbffff	           cmp dword [rbp - 0x438], eax 	      5622	channel.c	FUNCTION_133	IF_12	FOR_3
0xb4de	            0x7cab	                            jl 0x400b4cb	      5622	channel.c	FUNCTION_133	IF_12	FOR_3
0xb4e0	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5624	channel.c	FUNCTION_133	IF_12
0xb4e7	    0x8b95c4fbffff	            mov edx, dword [rbp - 0x43c]	      5624	channel.c	FUNCTION_133	IF_12
0xb4ed	          0x4863d2	                         movsxd rdx, edx	      5624	channel.c	FUNCTION_133	IF_12
0xb4f0	        0x48c1e203	                              shl rdx, 3	      5624	channel.c	FUNCTION_133	IF_12
0xb4f4	          0x4801d0	                            add rax, rdx	      5624	channel.c	FUNCTION_133	IF_12
0xb4f7	    0x48c700000000	                      mov qword [rax], 0	      5624	channel.c	FUNCTION_133	IF_12
0xb4fe	      0xe9fd000000	                           jmp 0x400b640	      5624	channel.c	FUNCTION_133	IF_12
0xb503	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5628	channel.c	FUNCTION_133	ELSE_5	IF_14
0xb50a	            0x8b00	                    mov eax, dword [rax]	      5628	channel.c	FUNCTION_133	ELSE_5	IF_14
0xb50c	          0x83f802	                              cmp eax, 2	      5628	channel.c	FUNCTION_133	ELSE_5	IF_14
0xb50f	            0x756e	                           jne 0x400b5bf	      5628	channel.c	FUNCTION_133	ELSE_5	IF_14
0xb511	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5631	channel.c	FUNCTION_133	ELSE_5	IF_14
0xb518	        0x488b4008	                mov rax, qword [rax + 8]	      5631	channel.c	FUNCTION_133	ELSE_5	IF_14
0xb51c	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      5631	channel.c	FUNCTION_133	ELSE_5	IF_14
0xb523	    0x4883bde8fbff	              cmp qword [rbp - 0x418], 0	      5632	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15
0xb52b	            0x740e	                            je 0x400b57b	      5632	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15
0xb52d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5632	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15
0xb534	           0xfb600	                   movzx eax, byte [rax]	      5632	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15
0xb537	            0x84c0	                             test al, al	      5632	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15
0xb539	            0x7517	                           jne 0x400b592	      5632	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15
0xb53b	      0xbf00000000	                              mov edi, 0	      5634	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15	CALL_20
0xb540	      0xe800000000	                          call 0x400b585	      5634	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15	CALL_20
0xb545	          0x4889c7	                            mov rdi, rax	      5634	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15	CALL_20
0xb548	      0xe800000000	                          call 0x400b58d	      5634	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15	CALL_20
0xb54d	      0xe9cc010000	                           jmp 0x400b75e	      5635	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_15
0xb552	    0x488d95c4fbff	                  lea rdx, [rbp - 0x43c]	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb559	    0x488d8dd0fbff	                  lea rcx, [rbp - 0x430]	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb560	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb567	          0x4889ce	                            mov rsi, rcx	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb56a	          0x4889c7	                            mov rdi, rax	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb56d	      0xe800000000	                          call 0x400b5b2	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb572	            0x85c0	                           test eax, eax	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb574	     0xf8586000000	                           jne 0x400b640	      5638	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16	CALL_21
0xb57a	      0xe99f010000	                           jmp 0x400b75e	      5639	channel.c	FUNCTION_133	ELSE_5	IF_14	IF_16
0xb57f	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5641	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb586	            0x8b00	                    mov eax, dword [rax]	      5641	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb588	          0x83f805	                              cmp eax, 5	      5641	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb58b	            0x7522	                           jne 0x400b5ef	      5641	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb58d	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5642	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb594	        0x488b4008	                mov rax, qword [rax + 8]	      5642	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb598	          0x4885c0	                           test rax, rax	      5642	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb59b	            0x7412	                            je 0x400b5ef	      5642	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb59d	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5643	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb5a4	        0x488b4008	                mov rax, qword [rax + 8]	      5643	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb5a8	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      5643	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb5ab	            0x85c0	                           test eax, eax	      5643	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb5ad	            0x7f17	                            jg 0x400b606	      5643	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb5af	      0xbf00000000	                              mov edi, 0	      5645	channel.c	FUNCTION_133	ELSE_6	IF_17	CALL_23
0xb5b4	      0xe800000000	                          call 0x400b5f9	      5645	channel.c	FUNCTION_133	ELSE_6	IF_17	CALL_23
0xb5b9	          0x4889c7	                            mov rdi, rax	      5645	channel.c	FUNCTION_133	ELSE_6	IF_17	CALL_23
0xb5bc	      0xe800000000	                          call 0x400b601	      5645	channel.c	FUNCTION_133	ELSE_6	IF_17	CALL_23
0xb5c1	      0xe958010000	                           jmp 0x400b75e	      5646	channel.c	FUNCTION_133	ELSE_6	IF_17
0xb5c6	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      5650	channel.c	FUNCTION_133	ELSE_7
0xb5cd	        0x488b4008	                mov rax, qword [rax + 8]	      5650	channel.c	FUNCTION_133	ELSE_7
0xb5d1	    0x488985f8fbff	            mov qword [rbp - 0x408], rax	      5650	channel.c	FUNCTION_133	ELSE_7
0xb5d8	    0x488d95c4fbff	                  lea rdx, [rbp - 0x43c]	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb5df	    0x488d8dd0fbff	                  lea rcx, [rbp - 0x430]	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb5e6	    0x488b85f8fbff	            mov rax, qword [rbp - 0x408]	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb5ed	          0x4889ce	                            mov rsi, rcx	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb5f0	          0x4889c7	                            mov rdi, rax	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb5f3	      0xe800000000	                          call 0x400b638	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb5f8	            0x85c0	                           test eax, eax	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb5fa	     0xf841d010000	                            je 0x400b75d	      5652	channel.c	FUNCTION_133	ELSE_7	IF_18	CALL_24
0xb600	    0x488b95d0fbff	            mov rdx, qword [rbp - 0x430]	      5662	channel.c	FUNCTION_133
0xb607	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5662	channel.c	FUNCTION_133
0xb60e	        0x48895068	             mov qword [rax + 0x68], rdx	      5662	channel.c	FUNCTION_133
0xb612	      0xe800000000	                          call 0x400b657	      5665	channel.c	FUNCTION_133	IF_20	CALL_26
0xb617	            0x85c0	                           test eax, eax	      5665	channel.c	FUNCTION_133	IF_20	CALL_26
0xb619	     0xf84b0000000	                            je 0x400b70f	      5665	channel.c	FUNCTION_133	IF_20	CALL_26
0xb61f	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5669	channel.c	FUNCTION_133	IF_20	CALL_27
0xb626	      0xbac8000000	                           mov edx, 0xc8	      5669	channel.c	FUNCTION_133	IF_20	CALL_27
0xb62b	      0xbe01000000	                              mov esi, 1	      5669	channel.c	FUNCTION_133	IF_20	CALL_27
0xb630	          0x4889c7	                            mov rdi, rax	      5669	channel.c	FUNCTION_133	IF_20	CALL_27
0xb633	      0xe800000000	                          call 0x400b678	      5669	channel.c	FUNCTION_133	IF_20	CALL_27
0xb638	    0xc785c8fbffff	              mov dword [rbp - 0x438], 0	      5670	channel.c	FUNCTION_133	IF_20	FOR_4
0xb642	            0xeb50	                           jmp 0x400b6d4	      5670	channel.c	FUNCTION_133	IF_20	FOR_4
0xb644	    0x83bdc8fbffff	              cmp dword [rbp - 0x438], 0	      5672	channel.c	FUNCTION_133	IF_20	FOR_4	IF_21
0xb64b	            0x7e14	                           jle 0x400b6a1	      5672	channel.c	FUNCTION_133	IF_20	FOR_4	IF_21
0xb64d	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5673	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_28
0xb654	      0xbe00000000	                              mov esi, 0	      5673	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_28
0xb659	          0x4889c7	                            mov rdi, rax	      5673	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_28
0xb65c	      0xe800000000	                          call 0x400b6a1	      5673	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_28
0xb661	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb668	    0x8b95c8fbffff	            mov edx, dword [rbp - 0x438]	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb66e	          0x4863d2	                         movsxd rdx, edx	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb671	        0x48c1e203	                              shl rdx, 3	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb675	          0x4801d0	                            add rax, rdx	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb678	          0x488b10	                    mov rdx, qword [rax]	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb67b	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb682	          0x4889d6	                            mov rsi, rdx	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb685	          0x4889c7	                            mov rdi, rax	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb688	      0xe800000000	                          call 0x400b6cd	      5674	channel.c	FUNCTION_133	IF_20	FOR_4	CALL_29
0xb68d	    0x8385c8fbffff	              add dword [rbp - 0x438], 1	      5670	channel.c	FUNCTION_133	IF_20	FOR_4
0xb694	    0x8b85c4fbffff	            mov eax, dword [rbp - 0x43c]	      5670	channel.c	FUNCTION_133	IF_20	FOR_4
0xb69a	    0x3985c8fbffff	           cmp dword [rbp - 0x438], eax 	      5670	channel.c	FUNCTION_133	IF_20	FOR_4
0xb6a0	            0x7ca2	                            jl 0x400b684	      5670	channel.c	FUNCTION_133	IF_20	FOR_4
0xb6a2	    0x488b8510fcff	            mov rax, qword [rbp - 0x3f0]	      5676	channel.c	FUNCTION_133	IF_20	CALL_30
0xb6a9	          0x4889c2	                            mov rdx, rax	      5676	channel.c	FUNCTION_133	IF_20	CALL_30
0xb6ac	      0xbe00000000	                              mov esi, 0	      5676	channel.c	FUNCTION_133	IF_20	CALL_30
0xb6b1	      0xbf00000000	                              mov edi, 0	      5676	channel.c	FUNCTION_133	IF_20	CALL_30
0xb6b6	      0xb800000000	                              mov eax, 0	      5676	channel.c	FUNCTION_133	IF_20	CALL_30
0xb6bb	      0xe800000000	                          call 0x400b700	      5676	channel.c	FUNCTION_133	IF_20	CALL_30
0xb6c0	    0x488d8500fcff	                  lea rax, [rbp - 0x400]	      5677	channel.c	FUNCTION_133	IF_20	CALL_31
0xb6c7	          0x4889c7	                            mov rdi, rax	      5677	channel.c	FUNCTION_133	IF_20	CALL_31
0xb6ca	      0xe800000000	                          call 0x400b70f	      5677	channel.c	FUNCTION_133	IF_20	CALL_31
0xb6cf	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5679	channel.c	FUNCTION_133	CALL_32
0xb6d6	    0x488d9520fcff	                  lea rdx, [rbp - 0x3e0]	      5679	channel.c	FUNCTION_133	CALL_32
0xb6dd	    0x488b8df0fbff	            mov rcx, qword [rbp - 0x410]	      5679	channel.c	FUNCTION_133	CALL_32
0xb6e4	          0x4889ce	                            mov rsi, rcx	      5679	channel.c	FUNCTION_133	CALL_32
0xb6e7	          0x4889c7	                            mov rdi, rax	      5679	channel.c	FUNCTION_133	CALL_32
0xb6ea	      0xe800000000	                          call 0x400b72f	      5679	channel.c	FUNCTION_133	CALL_32
0xb6ef	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5686	channel.c	FUNCTION_133	IF_22
0xb6f6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5686	channel.c	FUNCTION_133	IF_22
0xb6fa	          0x4885c0	                           test rax, rax	      5686	channel.c	FUNCTION_133	IF_22
0xb6fd	            0x741f	                            je 0x400b75e	      5686	channel.c	FUNCTION_133	IF_22
0xb6ff	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5687	channel.c	FUNCTION_133	CALL_35
0xb706	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5687	channel.c	FUNCTION_133	CALL_35
0xb70a	          0x4889c7	                            mov rdi, rax	      5687	channel.c	FUNCTION_133	CALL_35
0xb70d	      0xe89171ffff	               call sym.channel_write_in	      5687	channel.c	FUNCTION_133	CALL_35
0xb712	            0xeb0a	                           jmp 0x400b75e	      5687	channel.c	FUNCTION_133	CALL_35
0xb714	              0x90	                                     nop	      5560	channel.c	FUNCTION_133	ELSE_1	IF_3
0xb715	            0xeb07	                           jmp 0x400b75e	      5560	channel.c	FUNCTION_133	ELSE_1	IF_3
0xb717	              0x90	                                     nop	      5592	channel.c	FUNCTION_133	IF_5	IF_9
0xb718	            0xeb04	                           jmp 0x400b75e	      5592	channel.c	FUNCTION_133	IF_5	IF_9
0xb71a	              0x90	                                     nop	      5621	channel.c	FUNCTION_133	IF_12	IF_13
0xb71b	            0xeb01	                           jmp 0x400b75e	      5621	channel.c	FUNCTION_133	IF_12	IF_13
0xb71d	              0x90	                                     nop	      5653	channel.c	FUNCTION_133	ELSE_7	IF_18
0xb71e	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5693	channel.c	FUNCTION_133	IF_23
0xb725	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      5693	channel.c	FUNCTION_133	IF_23
0xb729	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5693	channel.c	FUNCTION_133	IF_23
0xb730	          0x4839c2	                            cmp rdx, rax	      5693	channel.c	FUNCTION_133	IF_23
0xb733	            0x740f	                            je 0x400b784	      5693	channel.c	FUNCTION_133	IF_23
0xb735	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      5694	channel.c	FUNCTION_133	CALL_37
0xb73c	          0x4889c7	                            mov rdi, rax	      5694	channel.c	FUNCTION_133	CALL_37
0xb73f	      0xe800000000	                          call 0x400b784	      5694	channel.c	FUNCTION_133	CALL_37
0xb744	    0x488d8520fcff	                  lea rax, [rbp - 0x3e0]	      5695	channel.c	FUNCTION_133	CALL_38
0xb74b	          0x4889c7	                            mov rdi, rax	      5695	channel.c	FUNCTION_133	CALL_38
0xb74e	      0xe800000000	                          call 0x400b793	      5695	channel.c	FUNCTION_133	CALL_38
0xb753	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	      5696	channel.c	FUNCTION_133
0xb75a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      5697	channel.c	FUNCTION_133
0xb75e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5697	channel.c	FUNCTION_133
0xb767	            0x7405	                            je 0x400b7ae	      5697	channel.c	FUNCTION_133
0xb769	      0xe800000000	                          call 0x400b7ae	      5697	channel.c	FUNCTION_133
0xb76e	    0x4881c4580400	                          add rsp, 0x458	      5697	channel.c	FUNCTION_133
0xb775	              0x5b	                                 pop rbx	      5697	channel.c	FUNCTION_133
0xb776	              0x5d	                                 pop rbp	      5697	channel.c	FUNCTION_133
0xb777	              0xc3	                                     ret	      5697	channel.c	FUNCTION_133
channel_parse_messages	functions,0:SWITCH,0:CALL,12:ELSE,1:IF,9:FOR,0:WHILE,1:DO,0	139
0x7ea8	              0x55	                                push rbp	      4215	channel.c	FUNCTION_98
0x7ea9	          0x4889e5	                            mov rbp, rsp	      4215	channel.c	FUNCTION_98
0x7eac	        0x4883ec40	                           sub rsp, 0x40	      4215	channel.c	FUNCTION_98
0x7eb0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4215	channel.c	FUNCTION_98
0x7eb9	        0x488945f8	                mov qword [rbp - 8], rax	      4215	channel.c	FUNCTION_98
0x7ebd	            0x31c0	                            xor eax, eax	      4215	channel.c	FUNCTION_98
0x7ebf	    0x488b05000000	            mov rax, qword [0x04007f06] 	      4216	channel.c	FUNCTION_98
0x7ec6	        0x488945d8	             mov qword [rbp - 0x28], rax	      4216	channel.c	FUNCTION_98
0x7eca	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      4217	channel.c	FUNCTION_98
0x7ed1	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4219	channel.c	FUNCTION_98
0x7ed8	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4223	channel.c	FUNCTION_98	CALL_1
0x7edc	      0xbe00000000	                              mov esi, 0	      4223	channel.c	FUNCTION_98	CALL_1
0x7ee1	          0x4889c7	                            mov rdi, rax	      4223	channel.c	FUNCTION_98	CALL_1
0x7ee4	      0xe800000000	                          call 0x4007f29	      4223	channel.c	FUNCTION_98	CALL_1
0x7ee9	    0x8b0500000000	            mov eax, dword [0x04007f2f] 	      4226	channel.c	FUNCTION_98
0x7eef	          0x83c001	                              add eax, 1	      4226	channel.c	FUNCTION_98
0x7ef2	    0x890500000000	            mov dword [0x04007f38], eax 	      4226	channel.c	FUNCTION_98
0x7ef8	    0x8b0500000000	            mov eax, dword [0x04007f3e] 	      4230	channel.c	FUNCTION_98	IF_1
0x7efe	            0x85c0	                           test eax, eax	      4230	channel.c	FUNCTION_98	IF_1
0x7f00	     0xf8492010000	                            je 0x40080d8	      4230	channel.c	FUNCTION_98	IF_1
0x7f06	      0xbe00000000	                              mov esi, 0	      4232	channel.c	FUNCTION_98	IF_1	CALL_2
0x7f0b	      0xbf00000000	                              mov edi, 0	      4232	channel.c	FUNCTION_98	IF_1	CALL_2
0x7f10	      0xb800000000	                              mov eax, 0	      4232	channel.c	FUNCTION_98	IF_1	CALL_2
0x7f15	      0xe800000000	                          call 0x4007f5a	      4232	channel.c	FUNCTION_98	IF_1	CALL_2
0x7f1a	    0xc70500000000	               mov dword [0x04007f64], 0	      4233	channel.c	FUNCTION_98	IF_1
0x7f24	      0xe96f010000	                           jmp 0x40080d8	      4235	channel.c	FUNCTION_98	WHILE_1
0x7f29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4237	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_3
0x7f2d	          0x4889c7	                            mov rdi, rax	      4237	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_3
0x7f30	      0xe88687ffff	              call sym.channel_can_close	      4237	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_3
0x7f35	            0x85c0	                           test eax, eax	      4237	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_3
0x7f37	            0x742a	                            je 0x4007fa3	      4237	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_3
0x7f39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4239	channel.c	FUNCTION_98	WHILE_1	IF_2
0x7f3d	    0xc7806c040000	          mov dword [rax + 0x46c], 0x10 	      4239	channel.c	FUNCTION_98	WHILE_1	IF_2
0x7f47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4240	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_4
0x7f4b	          0x4889c7	                            mov rdi, rax	      4240	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_4
0x7f4e	      0xe80fe6ffff	              call sym.channel_close_now	      4240	channel.c	FUNCTION_98	WHILE_1	IF_2	CALL_4
0x7f53	    0x488b05000000	            mov rax, qword [0x04007f9a] 	      4242	channel.c	FUNCTION_98	WHILE_1	IF_2
0x7f5a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4242	channel.c	FUNCTION_98	WHILE_1	IF_2
0x7f5e	      0xe935010000	                           jmp 0x40080d8	      4243	channel.c	FUNCTION_98	WHILE_1	IF_2
0x7f63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4245	channel.c	FUNCTION_98	WHILE_1	IF_3
0x7f67	    0x8b8070040000	           mov eax, dword [rax + 0x470] 	      4245	channel.c	FUNCTION_98	WHILE_1	IF_3
0x7f6d	            0x85c0	                           test eax, eax	      4245	channel.c	FUNCTION_98	WHILE_1	IF_3
0x7f6f	            0x741c	                            je 0x4007fcd	      4245	channel.c	FUNCTION_98	WHILE_1	IF_3
0x7f71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4247	channel.c	FUNCTION_98	WHILE_1	IF_3	CALL_5
0x7f75	          0x4889c7	                            mov rdi, rax	      4247	channel.c	FUNCTION_98	WHILE_1	IF_3	CALL_5
0x7f78	      0xe80588ffff	                   call sym.channel_free	      4247	channel.c	FUNCTION_98	WHILE_1	IF_3	CALL_5
0x7f7d	    0x488b05000000	            mov rax, qword [0x04007fc4] 	      4249	channel.c	FUNCTION_98	WHILE_1	IF_3
0x7f84	        0x488945d8	             mov qword [rbp - 0x28], rax	      4249	channel.c	FUNCTION_98	WHILE_1	IF_3
0x7f88	      0xe90b010000	                           jmp 0x40080d8	      4250	channel.c	FUNCTION_98	WHILE_1	IF_3
0x7f8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7f91	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7f97	            0x85c0	                           test eax, eax	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7f99	            0x7533	                           jne 0x400800e	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7f9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7f9f	          0x4889c7	                            mov rdi, rax	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7fa2	      0xe88285ffff	           call sym.channel_still_useful	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7fa7	            0x85c0	                           test eax, eax	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7fa9	            0x7523	                           jne 0x400800e	      4252	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_6
0x7fab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4255	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_7
0x7faf	          0x4889c7	                            mov rdi, rax	      4255	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_7
0x7fb2	      0xe8cb87ffff	                   call sym.channel_free	      4255	channel.c	FUNCTION_98	WHILE_1	IF_4	CALL_7
0x7fb7	    0x488b05000000	            mov rax, qword [0x04007ffe] 	      4256	channel.c	FUNCTION_98	WHILE_1	IF_4
0x7fbe	        0x488945d8	             mov qword [rbp - 0x28], rax	      4256	channel.c	FUNCTION_98	WHILE_1	IF_4
0x7fc2	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4257	channel.c	FUNCTION_98	WHILE_1	IF_4
0x7fc9	      0xe9ca000000	                           jmp 0x40080d8	      4258	channel.c	FUNCTION_98	WHILE_1	IF_4
0x7fce	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fd2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fd5	        0x48c1e004	                              shl rax, 4	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fd9	          0x4889c1	                            mov rcx, rax	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fdc	        0x48c1e104	                              shl rcx, 4	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fe0	          0x4801c8	                            add rax, rcx	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fe3	          0x4801d0	                            add rax, rdx	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fe6	        0x4883c018	                           add rax, 0x18	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fea	            0x8b00	                    mov eax, dword [rax]	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fec	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7fef	            0x7515	                           jne 0x4008046	      4260	channel.c	FUNCTION_98	WHILE_1	IF_5
0x7ff1	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4261	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_8
0x7ff4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4261	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_8
0x7ff8	            0x89d6	                            mov esi, edx	      4261	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_8
0x7ffa	          0x4889c7	                            mov rdi, rax	      4261	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_8
0x7ffd	      0xe800000000	                          call 0x4008042	      4261	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_8
0x8002	            0x85c0	                           test eax, eax	      4261	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_8
0x8004	            0x7474	                            je 0x40080ba	      4261	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_8
0x8006	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4265	channel.c	FUNCTION_98	WHILE_1	IF_5
0x800a	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      4265	channel.c	FUNCTION_98	WHILE_1	IF_5
0x8010	          0x8d5001	                      lea edx, [rax + 1]	      4265	channel.c	FUNCTION_98	WHILE_1	IF_5
0x8013	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4265	channel.c	FUNCTION_98	WHILE_1	IF_5
0x8017	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      4265	channel.c	FUNCTION_98	WHILE_1	IF_5
0x801d	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4266	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_9
0x8020	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4266	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_9
0x8024	            0x89d6	                            mov esi, edx	      4266	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_9
0x8026	          0x4889c7	                            mov rdi, rax	      4266	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_9
0x8029	      0xe897cbffff	            call sym.may_invoke_callback	      4266	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_9
0x802e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4266	channel.c	FUNCTION_98	WHILE_1	IF_5	CALL_9
0x8031	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      4267	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_6
0x8035	            0x7507	                           jne 0x400807e	      4267	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_6
0x8037	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      4268	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_6
0x803e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4269	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_10
0x8042	          0x4889c7	                            mov rdi, rax	      4269	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_10
0x8045	      0xe800000000	                          call 0x400808a	      4269	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_10
0x804a	            0x85c0	                           test eax, eax	      4269	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_10
0x804c	            0x7518	                           jne 0x40080a6	      4269	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_10
0x804e	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      4269	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_10
0x8052	            0x7526	                           jne 0x40080ba	      4269	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_10
0x8054	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4274	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_11
0x8058	          0x4889c7	                            mov rdi, rax	      4274	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_11
0x805b	      0xe800000000	                          call 0x40080a0	      4274	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_11
0x8060	        0x4883f863	                           cmp rax, 0x63	      4274	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_11
0x8064	            0x7f14	                            jg 0x40080ba	      4274	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7	CALL_11
0x8066	    0x488b05000000	            mov rax, qword [0x040080ad] 	      4279	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7
0x806d	        0x488945d8	             mov qword [rbp - 0x28], rax	      4279	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7
0x8071	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4280	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7
0x8078	            0xeb1e	                           jmp 0x40080d8	      4281	channel.c	FUNCTION_98	WHILE_1	IF_5	IF_7
0x807a	        0x837dd001	               cmp dword [rbp - 0x30], 1	      4284	channel.c	FUNCTION_98	WHILE_1	IF_8
0x807e	            0x7706	                            ja 0x40080c6	      4284	channel.c	FUNCTION_98	WHILE_1	IF_8
0x8080	        0x8345d001	               add dword [rbp - 0x30], 1	      4285	channel.c	FUNCTION_98	WHILE_1	IF_8
0x8084	            0xeb12	                           jmp 0x40080d8	      4285	channel.c	FUNCTION_98	WHILE_1	IF_8
0x8086	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4288	channel.c	FUNCTION_98	WHILE_1	ELSE_1
0x808a	          0x488b00	                    mov rax, qword [rax]	      4288	channel.c	FUNCTION_98	WHILE_1	ELSE_1
0x808d	        0x488945d8	             mov qword [rbp - 0x28], rax	      4288	channel.c	FUNCTION_98	WHILE_1	ELSE_1
0x8091	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4289	channel.c	FUNCTION_98	WHILE_1	ELSE_1
0x8098	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4235	channel.c	FUNCTION_98	WHILE_1
0x809d	     0xf8586feffff	                           jne 0x4007f69	      4235	channel.c	FUNCTION_98	WHILE_1
0x80a3	    0x8b0500000000	            mov eax, dword [0x040080e9] 	      4293	channel.c	FUNCTION_98	IF_9
0x80a9	            0x85c0	                           test eax, eax	      4293	channel.c	FUNCTION_98	IF_9
0x80ab	            0x7414	                            je 0x4008101	      4293	channel.c	FUNCTION_98	IF_9
0x80ad	    0xc70500000000	               mov dword [0x040080f7], 0	      4295	channel.c	FUNCTION_98	IF_9
0x80b7	      0xbf01000000	                              mov edi, 1	      4296	channel.c	FUNCTION_98	IF_9	CALL_12
0x80bc	      0xe800000000	                          call 0x4008101	      4296	channel.c	FUNCTION_98	IF_9	CALL_12
0x80c1	    0x8b0500000000	            mov eax, dword [0x04008107] 	      4299	channel.c	FUNCTION_98
0x80c7	          0x83e801	                              sub eax, 1	      4299	channel.c	FUNCTION_98
0x80ca	    0x890500000000	            mov dword [0x04008110], eax 	      4299	channel.c	FUNCTION_98
0x80d0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4301	channel.c	FUNCTION_98
0x80d3	        0x488b75f8	                mov rsi, qword [rbp - 8]	      4302	channel.c	FUNCTION_98
0x80d7	    0x644833342528	                xor rsi, qword fs:[0x28]	      4302	channel.c	FUNCTION_98
0x80e0	            0x7405	                            je 0x4008127	      4302	channel.c	FUNCTION_98
0x80e2	      0xe800000000	                          call 0x4008127	      4302	channel.c	FUNCTION_98
0x80e7	              0xc9	                                   leave	      4302	channel.c	FUNCTION_98
0x80e8	              0xc3	                                     ret	      4302	channel.c	FUNCTION_98
channel_select_check	functions,0:SWITCH,0:CALL,7:ELSE,1:IF,3:FOR,2:WHILE,0:DO,0	173
0x7c6c	              0x55	                                push rbp	      4166	channel.c	FUNCTION_97
0x7c6d	          0x4889e5	                            mov rbp, rsp	      4166	channel.c	FUNCTION_97
0x7c70	        0x4883ec50	                           sub rsp, 0x50	      4166	channel.c	FUNCTION_97
0x7c74	          0x897dcc	             mov dword [rbp - 0x34], edi	      4166	channel.c	FUNCTION_97
0x7c77	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4166	channel.c	FUNCTION_97
0x7c7b	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4166	channel.c	FUNCTION_97
0x7c7f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4167	channel.c	FUNCTION_97
0x7c82	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4167	channel.c	FUNCTION_97
0x7c85	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4169	channel.c	FUNCTION_97
0x7c89	        0x488945e8	             mov qword [rbp - 0x18], rax	      4169	channel.c	FUNCTION_97
0x7c8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4170	channel.c	FUNCTION_97
0x7c91	        0x488945f0	             mov qword [rbp - 0x10], rax	      4170	channel.c	FUNCTION_97
0x7c95	    0x488b05000000	            mov rax, qword [0x04007cdc] 	      4174	channel.c	FUNCTION_97	FOR_1
0x7c9c	        0x488945e0	             mov qword [rbp - 0x20], rax	      4174	channel.c	FUNCTION_97	FOR_1
0x7ca0	      0xe9f3010000	                           jmp 0x4007ed8	      4174	channel.c	FUNCTION_97	FOR_1
0x7ca5	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4176	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cac	      0xe907010000	                           jmp 0x4007df8	      4176	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cb1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cb5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cb8	        0x48c1e004	                              shl rax, 4	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cbc	          0x4889c1	                            mov rcx, rax	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cbf	        0x48c1e104	                              shl rcx, 4	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cc3	          0x4801c8	                            add rax, rcx	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cc6	          0x4801d0	                            add rax, rdx	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cc9	        0x4883c018	                           add rax, 0x18	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7ccd	            0x8b00	                    mov eax, dword [rax]	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7ccf	          0x8945dc	             mov dword [rbp - 0x24], eax	      4178	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7cd2	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cd6	     0xf8eae000000	                           jle 0x4007dca	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cdc	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7ce0	     0xf84a4000000	                            je 0x4007dca	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7ce6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7ce9	          0x8d503f	                   lea edx, [rax + 0x3f]	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cec	            0x85c0	                           test eax, eax	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cee	           0xf48c2	                          cmovs eax, edx	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cf1	          0xc1f806	                              sar eax, 6	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cf4	            0x89c2	                            mov edx, eax	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cf6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cfa	          0x4863d2	                         movsxd rdx, edx	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7cfd	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d01	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d04	              0x99	                                     cdq	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d05	          0xc1ea1a	                           shr edx, 0x1a	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d08	             0x1d0	                            add eax, edx	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d0a	          0x83e03f	                           and eax, 0x3f	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d0d	            0x29d0	                            sub eax, edx	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d0f	      0xba01000000	                              mov edx, 1	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d14	            0x89c1	                            mov ecx, eax	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d16	          0x48d3e2	                             shl rdx, cl	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d19	          0x4889d0	                            mov rax, rdx	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d1c	          0x4821f0	                            and rax, rsi	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d1f	          0x4885c0	                           test rax, rax	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d22	            0x7466	                            je 0x4007dca	      4180	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_1
0x7d24	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      4182	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_2
0x7d27	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4182	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_2
0x7d2b	      0xba00000000	                              mov edx, 0	      4182	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_2
0x7d30	            0x89ce	                            mov esi, ecx	      4182	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_2
0x7d32	          0x4889c7	                            mov rdi, rax	      4182	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_2
0x7d35	      0xe87be8ffff	                   call sym.channel_read	      4182	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_2
0x7d3a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d3d	          0x8d503f	                   lea edx, [rax + 0x3f]	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d40	            0x85c0	                           test eax, eax	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d42	           0xf48c2	                          cmovs eax, edx	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d45	          0xc1f806	                              sar eax, 6	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d48	            0x89c6	                            mov esi, eax	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d4e	          0x4863d6	                         movsxd rdx, esi	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d51	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d55	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d58	              0x99	                                     cdq	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d59	          0xc1ea1a	                           shr edx, 0x1a	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d5c	             0x1d0	                            add eax, edx	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d5e	          0x83e03f	                           and eax, 0x3f	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d61	            0x29d0	                            sub eax, edx	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d63	      0xba01000000	                              mov edx, 1	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d68	            0x89c1	                            mov ecx, eax	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d6a	          0x48d3e2	                             shl rdx, cl	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d6d	          0x4889d0	                            mov rax, rdx	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d70	          0x48f7d0	                                 not rax	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d73	          0x4821c7	                            and rdi, rax	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d76	          0x4889f9	                            mov rcx, rdi	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d7d	          0x4863d6	                         movsxd rdx, esi	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d80	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4183	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1	CALL_3
0x7d84	        0x836dd401	               sub dword [rbp - 0x2c], 1	      4184	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x7d88	            0xeb2a	                           jmp 0x4007df4	      4184	channel.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x7d8a	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      4186	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2
0x7d8e	            0x7424	                            je 0x4007df4	      4186	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2
0x7d90	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4186	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2
0x7d94	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	      4186	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2
0x7d9a	            0x85c0	                           test eax, eax	      4186	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2
0x7d9c	            0x7416	                            je 0x4007df4	      4186	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2
0x7d9e	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      4189	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x7da1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4189	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x7da5	      0xba00000000	                              mov edx, 0	      4189	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x7daa	            0x89ce	                            mov esi, ecx	      4189	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x7dac	          0x4889c7	                            mov rdi, rax	      4189	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x7daf	      0xe801e8ffff	                   call sym.channel_read	      4189	channel.c	FUNCTION_97	FOR_1	FOR_2	ELSE_1	IF_2	CALL_4
0x7db4	        0x8345d801	               add dword [rbp - 0x28], 1	      4176	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7db8	        0x837dd802	               cmp dword [rbp - 0x28], 2	      4176	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7dbc	     0xf86effeffff	                           jbe 0x4007cf1	      4176	channel.c	FUNCTION_97	FOR_1	FOR_2
0x7dc2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4193	channel.c	FUNCTION_97	FOR_1
0x7dc6	    0x480548030000	                          add rax, 0x348	      4193	channel.c	FUNCTION_97	FOR_1
0x7dcc	        0x488945f8	                mov qword [rbp - 8], rax	      4193	channel.c	FUNCTION_97	FOR_1
0x7dd0	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4194	channel.c	FUNCTION_97	FOR_1	IF_3
0x7dd4	     0xf8eb3000000	                           jle 0x4007ecd	      4194	channel.c	FUNCTION_97	FOR_1	IF_3
0x7dda	        0x488b45f8	                mov rax, qword [rbp - 8]	      4194	channel.c	FUNCTION_97	FOR_1	IF_3
0x7dde	            0x8b00	                    mov eax, dword [rax]	      4194	channel.c	FUNCTION_97	FOR_1	IF_3
0x7de0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4194	channel.c	FUNCTION_97	FOR_1	IF_3
0x7de3	     0xf84a4000000	                            je 0x4007ecd	      4194	channel.c	FUNCTION_97	FOR_1	IF_3
0x7de9	        0x488b45f8	                mov rax, qword [rbp - 8]	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7ded	            0x8b00	                    mov eax, dword [rax]	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7def	          0x8d503f	                   lea edx, [rax + 0x3f]	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7df2	            0x85c0	                           test eax, eax	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7df4	           0xf48c2	                          cmovs eax, edx	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7df7	          0xc1f806	                              sar eax, 6	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7dfa	            0x89c2	                            mov edx, eax	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7dfc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e00	          0x4863d2	                         movsxd rdx, edx	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e03	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e07	        0x488b45f8	                mov rax, qword [rbp - 8]	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e0b	            0x8b00	                    mov eax, dword [rax]	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e0d	              0x99	                                     cdq	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e0e	          0xc1ea1a	                           shr edx, 0x1a	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e11	             0x1d0	                            add eax, edx	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e13	          0x83e03f	                           and eax, 0x3f	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e16	            0x29d0	                            sub eax, edx	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e18	      0xba01000000	                              mov edx, 1	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e1d	            0x89c1	                            mov ecx, eax	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e1f	          0x48d3e2	                             shl rdx, cl	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e22	          0x4889d0	                            mov rax, rdx	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e25	          0x4821f0	                            and rax, rsi	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e28	          0x4885c0	                           test rax, rax	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e2b	            0x7460	                            je 0x4007ecd	      4195	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_5
0x7e2d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e31	            0x8b00	                    mov eax, dword [rax]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e33	          0x8d503f	                   lea edx, [rax + 0x3f]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e36	            0x85c0	                           test eax, eax	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e38	           0xf48c2	                          cmovs eax, edx	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e3b	          0xc1f806	                              sar eax, 6	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e3e	            0x89c6	                            mov esi, eax	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e44	          0x4863d6	                         movsxd rdx, esi	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e47	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e4f	            0x8b00	                    mov eax, dword [rax]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e51	              0x99	                                     cdq	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e52	          0xc1ea1a	                           shr edx, 0x1a	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e55	             0x1d0	                            add eax, edx	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e57	          0x83e03f	                           and eax, 0x3f	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e5a	            0x29d0	                            sub eax, edx	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e5c	      0xba01000000	                              mov edx, 1	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e61	            0x89c1	                            mov ecx, eax	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e63	          0x48d3e2	                             shl rdx, cl	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e66	          0x4889d0	                            mov rax, rdx	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e69	          0x48f7d0	                                 not rax	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e6c	          0x4821c7	                            and rdi, rax	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e6f	          0x4889f9	                            mov rcx, rdi	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e76	          0x4863d6	                         movsxd rdx, esi	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e79	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      4198	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_6
0x7e7d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4199	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_7
0x7e81	          0x4889c7	                            mov rdi, rax	      4199	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_7
0x7e84	      0xe8b2acffff	            call sym.channel_write_input	      4199	channel.c	FUNCTION_97	FOR_1	IF_3	CALL_7
0x7e89	        0x836dd401	               sub dword [rbp - 0x2c], 1	      4200	channel.c	FUNCTION_97	FOR_1	IF_3
0x7e8d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4174	channel.c	FUNCTION_97	FOR_1
0x7e91	          0x488b00	                    mov rax, qword [rax]	      4174	channel.c	FUNCTION_97	FOR_1
0x7e94	        0x488945e0	             mov qword [rbp - 0x20], rax	      4174	channel.c	FUNCTION_97	FOR_1
0x7e98	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4174	channel.c	FUNCTION_97	FOR_1
0x7e9d	     0xf8502feffff	                           jne 0x4007ce5	      4174	channel.c	FUNCTION_97	FOR_1
0x7ea3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4204	channel.c	FUNCTION_97
0x7ea6	              0xc9	                                   leave	      4205	channel.c	FUNCTION_97
0x7ea7	              0xc3	                                     ret	      4205	channel.c	FUNCTION_97
channel_still_useful	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,3:FOR,0:WHILE,0:DO,0	109
0x529	              0x55	                                push rbp	       309	channel.c	FUNCTION_12
0x52a	          0x4889e5	                            mov rbp, rsp	       309	channel.c	FUNCTION_12
0x52d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       309	channel.c	FUNCTION_12
0x531	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	channel.c	FUNCTION_12	IF_1
0x535	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	       315	channel.c	FUNCTION_12	IF_1
0x53b	            0x85c0	                           test eax, eax	       315	channel.c	FUNCTION_12	IF_1
0x53d	            0x741a	                            je 0x4000599	       315	channel.c	FUNCTION_12	IF_1
0x53f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	channel.c	FUNCTION_12	IF_1
0x543	    0x488b80a80400	           mov rax, qword [rax + 0x4a8] 	       315	channel.c	FUNCTION_12	IF_1
0x54a	          0x4885c0	                           test rax, rax	       315	channel.c	FUNCTION_12	IF_1
0x54d	            0x750a	                           jne 0x4000599	       315	channel.c	FUNCTION_12	IF_1
0x54f	      0xb800000000	                              mov eax, 0	       316	channel.c	FUNCTION_12	IF_1
0x554	      0xe960010000	                           jmp 0x40006f9	       316	channel.c	FUNCTION_12	IF_1
0x559	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       319	channel.c	FUNCTION_12	IF_2
0x55d	    0x488b80900400	           mov rax, qword [rax + 0x490] 	       319	channel.c	FUNCTION_12	IF_2
0x564	          0x4885c0	                           test rax, rax	       319	channel.c	FUNCTION_12	IF_2
0x567	            0x740a	                            je 0x40005b3	       319	channel.c	FUNCTION_12	IF_2
0x569	      0xb801000000	                              mov eax, 1	       320	channel.c	FUNCTION_12	IF_2
0x56e	      0xe946010000	                           jmp 0x40006f9	       320	channel.c	FUNCTION_12	IF_2
0x573	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       323	channel.c	FUNCTION_12	IF_3
0x577	    0x488b80280400	           mov rax, qword [rax + 0x428] 	       323	channel.c	FUNCTION_12	IF_3
0x57e	          0x4885c0	                           test rax, rax	       323	channel.c	FUNCTION_12	IF_3
0x581	            0x740a	                            je 0x40005cd	       323	channel.c	FUNCTION_12	IF_3
0x583	      0xb801000000	                              mov eax, 1	       324	channel.c	FUNCTION_12	IF_3
0x588	      0xe92c010000	                           jmp 0x40006f9	       324	channel.c	FUNCTION_12	IF_3
0x58d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	channel.c	FUNCTION_12
0x591	          0x8b4018	            mov eax, dword [rax + 0x18] 	       328	channel.c	FUNCTION_12
0x594	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       330	channel.c	FUNCTION_12
0x597	            0x751a	                           jne 0x40005f3	       330	channel.c	FUNCTION_12
0x599	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       329	channel.c	FUNCTION_12
0x59d	        0x488b4040	            mov rax, qword [rax + 0x40] 	       329	channel.c	FUNCTION_12
0x5a1	          0x4885c0	                           test rax, rax	       329	channel.c	FUNCTION_12
0x5a4	            0x750d	                           jne 0x40005f3	       329	channel.c	FUNCTION_12
0x5a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	channel.c	FUNCTION_12
0x5aa	        0x488b4058	            mov rax, qword [rax + 0x58] 	       330	channel.c	FUNCTION_12
0x5ae	          0x4885c0	                           test rax, rax	       330	channel.c	FUNCTION_12
0x5b1	            0x7407	                            je 0x40005fa	       330	channel.c	FUNCTION_12
0x5b3	      0xb801000000	                              mov eax, 1	       330	channel.c	FUNCTION_12
0x5b8	            0xeb05	                           jmp 0x40005ff	       330	channel.c	FUNCTION_12
0x5ba	      0xb800000000	                              mov eax, 0	       330	channel.c	FUNCTION_12
0x5bf	          0x8945f4	              mov dword [rbp - 0xc], eax	       328	channel.c	FUNCTION_12
0x5c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       331	channel.c	FUNCTION_12
0x5c6	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       331	channel.c	FUNCTION_12
0x5cc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       333	channel.c	FUNCTION_12
0x5cf	            0x7520	                           jne 0x4000631	       333	channel.c	FUNCTION_12
0x5d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       332	channel.c	FUNCTION_12
0x5d5	    0x488b80500100	           mov rax, qword [rax + 0x150] 	       332	channel.c	FUNCTION_12
0x5dc	          0x4885c0	                           test rax, rax	       332	channel.c	FUNCTION_12
0x5df	            0x7510	                           jne 0x4000631	       332	channel.c	FUNCTION_12
0x5e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       333	channel.c	FUNCTION_12
0x5e5	    0x488b80680100	           mov rax, qword [rax + 0x168] 	       333	channel.c	FUNCTION_12
0x5ec	          0x4885c0	                           test rax, rax	       333	channel.c	FUNCTION_12
0x5ef	            0x7407	                            je 0x4000638	       333	channel.c	FUNCTION_12
0x5f1	      0xb801000000	                              mov eax, 1	       333	channel.c	FUNCTION_12
0x5f6	            0xeb05	                           jmp 0x400063d	       333	channel.c	FUNCTION_12
0x5f8	      0xb800000000	                              mov eax, 0	       333	channel.c	FUNCTION_12
0x5fd	          0x8945f8	                mov dword [rbp - 8], eax	       331	channel.c	FUNCTION_12
0x600	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       334	channel.c	FUNCTION_12
0x604	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       334	channel.c	FUNCTION_12
0x60a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       336	channel.c	FUNCTION_12
0x60d	            0x7520	                           jne 0x400066f	       336	channel.c	FUNCTION_12
0x60f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	channel.c	FUNCTION_12
0x613	    0x488b80600200	           mov rax, qword [rax + 0x260] 	       335	channel.c	FUNCTION_12
0x61a	          0x4885c0	                           test rax, rax	       335	channel.c	FUNCTION_12
0x61d	            0x7510	                           jne 0x400066f	       335	channel.c	FUNCTION_12
0x61f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	channel.c	FUNCTION_12
0x623	    0x488b80780200	           mov rax, qword [rax + 0x278] 	       336	channel.c	FUNCTION_12
0x62a	          0x4885c0	                           test rax, rax	       336	channel.c	FUNCTION_12
0x62d	            0x7407	                            je 0x4000676	       336	channel.c	FUNCTION_12
0x62f	      0xb801000000	                              mov eax, 1	       336	channel.c	FUNCTION_12
0x634	            0xeb05	                           jmp 0x400067b	       336	channel.c	FUNCTION_12
0x636	      0xb800000000	                              mov eax, 0	       336	channel.c	FUNCTION_12
0x63b	          0x8945fc	                mov dword [rbp - 4], eax	       334	channel.c	FUNCTION_12
0x63e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       337	channel.c	FUNCTION_12
0x642	    0x488b80800400	           mov rax, qword [rax + 0x480] 	       337	channel.c	FUNCTION_12
0x649	          0x4885c0	                           test rax, rax	       342	channel.c	FUNCTION_12
0x64c	            0x7412	                            je 0x40006a0	       342	channel.c	FUNCTION_12
0x64e	        0x837df400	                cmp dword [rbp - 0xc], 0	       337	channel.c	FUNCTION_12
0x652	            0x7558	                           jne 0x40006ec	       337	channel.c	FUNCTION_12
0x654	        0x837df800	                  cmp dword [rbp - 8], 0	       338	channel.c	FUNCTION_12
0x658	            0x7552	                           jne 0x40006ec	       338	channel.c	FUNCTION_12
0x65a	        0x837dfc00	                  cmp dword [rbp - 4], 0	       338	channel.c	FUNCTION_12
0x65e	            0x754c	                           jne 0x40006ec	       338	channel.c	FUNCTION_12
0x660	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       339	channel.c	FUNCTION_12
0x664	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	       339	channel.c	FUNCTION_12
0x66b	          0x4885c0	                           test rax, rax	       339	channel.c	FUNCTION_12
0x66e	            0x7510	                           jne 0x40006c0	       339	channel.c	FUNCTION_12
0x670	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	channel.c	FUNCTION_12
0x674	    0x488b80080200	           mov rax, qword [rax + 0x208] 	       340	channel.c	FUNCTION_12
0x67b	          0x4885c0	                           test rax, rax	       340	channel.c	FUNCTION_12
0x67e	            0x7406	                            je 0x40006c6	       340	channel.c	FUNCTION_12
0x680	        0x837df800	                  cmp dword [rbp - 8], 0	       341	channel.c	FUNCTION_12
0x684	            0x7526	                           jne 0x40006ec	       341	channel.c	FUNCTION_12
0x686	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       342	channel.c	FUNCTION_12
0x68a	    0x488b80080300	           mov rax, qword [rax + 0x308] 	       342	channel.c	FUNCTION_12
0x691	          0x4885c0	                           test rax, rax	       342	channel.c	FUNCTION_12
0x694	            0x7510	                           jne 0x40006e6	       342	channel.c	FUNCTION_12
0x696	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       343	channel.c	FUNCTION_12
0x69a	    0x488b80180300	           mov rax, qword [rax + 0x318] 	       343	channel.c	FUNCTION_12
0x6a1	          0x4885c0	                           test rax, rax	       343	channel.c	FUNCTION_12
0x6a4	            0x740d	                            je 0x40006f3	       343	channel.c	FUNCTION_12
0x6a6	        0x837dfc00	                  cmp dword [rbp - 4], 0	       344	channel.c	FUNCTION_12
0x6aa	            0x7407	                            je 0x40006f3	       344	channel.c	FUNCTION_12
0x6ac	      0xb801000000	                              mov eax, 1	       342	channel.c	FUNCTION_12
0x6b1	            0xeb05	                           jmp 0x40006f8	       337	channel.c	FUNCTION_12
0x6b3	      0xb800000000	                              mov eax, 0	       342	channel.c	FUNCTION_12
0x6b8	              0x90	                                     nop	       337	channel.c	FUNCTION_12
0x6b9	              0x5d	                                 pop rbp	       345	channel.c	FUNCTION_12
0x6ba	              0xc3	                                     ret	       345	channel.c	FUNCTION_12
channel_fill_wfds	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,2:FOR,1:WHILE,0:DO,0	66
0x60b3	              0x55	                                push rbp	      3054	channel.c	FUNCTION_77
0x60b4	          0x4889e5	                            mov rbp, rsp	      3054	channel.c	FUNCTION_77
0x60b7	          0x897ddc	             mov dword [rbp - 0x24], edi	      3054	channel.c	FUNCTION_77
0x60ba	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3054	channel.c	FUNCTION_77
0x60be	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3055	channel.c	FUNCTION_77
0x60c1	          0x8945ec	             mov dword [rbp - 0x14], eax	      3055	channel.c	FUNCTION_77
0x60c4	    0x488b05000000	            mov rax, qword [0x0400610b] 	      3058	channel.c	FUNCTION_77	FOR_1
0x60cb	        0x488945f0	             mov qword [rbp - 0x10], rax	      3058	channel.c	FUNCTION_77	FOR_1
0x60cf	      0xe9ac000000	                           jmp 0x40061c0	      3058	channel.c	FUNCTION_77	FOR_1
0x60d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3060	channel.c	FUNCTION_77	FOR_1
0x60d8	    0x480548030000	                          add rax, 0x348	      3060	channel.c	FUNCTION_77	FOR_1
0x60de	        0x488945f8	                mov qword [rbp - 8], rax	      3060	channel.c	FUNCTION_77	FOR_1
0x60e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3062	channel.c	FUNCTION_77	FOR_1	IF_1
0x60e6	            0x8b00	                    mov eax, dword [rax]	      3062	channel.c	FUNCTION_77	FOR_1	IF_1
0x60e8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3062	channel.c	FUNCTION_77	FOR_1	IF_1
0x60eb	     0xf8484000000	                            je 0x40061b5	      3062	channel.c	FUNCTION_77	FOR_1	IF_1
0x60f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3063	channel.c	FUNCTION_77	FOR_1	IF_1
0x60f5	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3063	channel.c	FUNCTION_77	FOR_1	IF_1
0x60fc	          0x4885c0	                           test rax, rax	      3063	channel.c	FUNCTION_77	FOR_1	IF_1
0x60ff	            0x7510	                           jne 0x4006151	      3063	channel.c	FUNCTION_77	FOR_1	IF_1
0x6101	        0x488b45f8	                mov rax, qword [rbp - 8]	      3064	channel.c	FUNCTION_77	FOR_1	IF_1
0x6105	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3064	channel.c	FUNCTION_77	FOR_1	IF_1
0x610c	          0x4885c0	                           test rax, rax	      3064	channel.c	FUNCTION_77	FOR_1	IF_1
0x610f	            0x7464	                            je 0x40061b5	      3064	channel.c	FUNCTION_77	FOR_1	IF_1
0x6111	        0x488b45f8	                mov rax, qword [rbp - 8]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6115	            0x8b00	                    mov eax, dword [rax]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6117	          0x8d503f	                   lea edx, [rax + 0x3f]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x611a	            0x85c0	                           test eax, eax	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x611c	           0xf48c2	                          cmovs eax, edx	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x611f	          0xc1f806	                              sar eax, 6	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6122	            0x89c6	                            mov esi, eax	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6124	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6128	          0x4863d6	                         movsxd rdx, esi	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x612b	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x612f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6133	            0x8b00	                    mov eax, dword [rax]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6135	              0x99	                                     cdq	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6136	          0xc1ea1a	                           shr edx, 0x1a	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6139	             0x1d0	                            add eax, edx	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x613b	          0x83e03f	                           and eax, 0x3f	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x613e	            0x29d0	                            sub eax, edx	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6140	      0xba01000000	                              mov edx, 1	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6145	            0x89c1	                            mov ecx, eax	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6147	          0x48d3e2	                             shl rdx, cl	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x614a	          0x4889d0	                            mov rax, rdx	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x614d	          0x4809c7	                             or rdi, rax	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6150	          0x4889f9	                            mov rcx, rdi	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6153	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x6157	          0x4863d6	                         movsxd rdx, esi	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x615a	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      3066	channel.c	FUNCTION_77	FOR_1	IF_1	CALL_1
0x615e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3067	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x6162	            0x8b00	                    mov eax, dword [rax]	      3067	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x6164	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3067	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x6167	            0x7c0c	                            jl 0x40061b5	      3067	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x6169	        0x488b45f8	                mov rax, qword [rbp - 8]	      3068	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x616d	            0x8b00	                    mov eax, dword [rax]	      3068	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x616f	          0x83c001	                              add eax, 1	      3068	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x6172	          0x8945ec	             mov dword [rbp - 0x14], eax	      3068	channel.c	FUNCTION_77	FOR_1	IF_1	IF_2
0x6175	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3058	channel.c	FUNCTION_77	FOR_1
0x6179	          0x488b00	                    mov rax, qword [rax]	      3058	channel.c	FUNCTION_77	FOR_1
0x617c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3058	channel.c	FUNCTION_77	FOR_1
0x6180	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3058	channel.c	FUNCTION_77	FOR_1
0x6185	     0xf8549ffffff	                           jne 0x4006114	      3058	channel.c	FUNCTION_77	FOR_1
0x618b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3071	channel.c	FUNCTION_77
0x618e	              0x5d	                                 pop rbp	      3072	channel.c	FUNCTION_77
0x618f	              0xc3	                                     ret	      3072	channel.c	FUNCTION_77
job_stop_on_exit	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	28
0xafc4	              0x55	                                push rbp	      5459	channel.c	FUNCTION_130
0xafc5	          0x4889e5	                            mov rbp, rsp	      5459	channel.c	FUNCTION_130
0xafc8	        0x4883ec10	                           sub rsp, 0x10	      5459	channel.c	FUNCTION_130
0xafcc	    0x488b05000000	            mov rax, qword [0x0400b013] 	      5462	channel.c	FUNCTION_130	FOR_1
0xafd3	        0x488945f8	                mov qword [rbp - 8], rax	      5462	channel.c	FUNCTION_130	FOR_1
0xafd7	            0xeb3b	                           jmp 0x400b054	      5462	channel.c	FUNCTION_130	FOR_1
0xafd9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xafdd	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xafe0	          0x83f801	                              cmp eax, 1	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xafe3	            0x7524	                           jne 0x400b049	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xafe5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xafe9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xafed	          0x4885c0	                           test rax, rax	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xaff0	            0x7417	                            je 0x400b049	      5463	channel.c	FUNCTION_130	FOR_1	IF_1
0xaff2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5464	channel.c	FUNCTION_130	FOR_1	IF_1
0xaff6	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5464	channel.c	FUNCTION_130	FOR_1	IF_1
0xaffa	        0x488b45f8	                mov rax, qword [rbp - 8]	      5464	channel.c	FUNCTION_130	FOR_1	IF_1
0xaffe	          0x4889d6	                            mov rsi, rdx	      5464	channel.c	FUNCTION_130	FOR_1	IF_1
0xb001	          0x4889c7	                            mov rdi, rax	      5464	channel.c	FUNCTION_130	FOR_1	IF_1
0xb004	      0xe800000000	                          call 0x400b049	      5464	channel.c	FUNCTION_130	FOR_1	IF_1
0xb009	        0x488b45f8	                mov rax, qword [rbp - 8]	      5462	channel.c	FUNCTION_130	FOR_1
0xb00d	          0x488b00	                    mov rax, qword [rax]	      5462	channel.c	FUNCTION_130	FOR_1
0xb010	        0x488945f8	                mov qword [rbp - 8], rax	      5462	channel.c	FUNCTION_130	FOR_1
0xb014	      0x48837df800	                  cmp qword [rbp - 8], 0	      5462	channel.c	FUNCTION_130	FOR_1
0xb019	            0x75be	                           jne 0x400b019	      5462	channel.c	FUNCTION_130	FOR_1
0xb01b	              0x90	                                     nop	      5465	channel.c	FUNCTION_130
0xb01c	              0xc9	                                   leave	      5465	channel.c	FUNCTION_130
0xb01d	              0xc3	                                     ret	      5465	channel.c	FUNCTION_130
channel_gui_register_one	functions,0:SWITCH,0:CALL,8:ELSE,0:IF,4:FOR,0:WHILE,0:DO,0	83
0x9e4	              0x55	                                push rbp	       520	channel.c	FUNCTION_25
0x9e5	          0x4889e5	                            mov rbp, rsp	       520	channel.c	FUNCTION_25
0x9e8	        0x4883ec10	                           sub rsp, 0x10	       520	channel.c	FUNCTION_25
0x9ec	        0x48897df8	                mov qword [rbp - 8], rdi	       520	channel.c	FUNCTION_25
0x9f0	          0x8975f4	              mov dword [rbp - 0xc], esi	       520	channel.c	FUNCTION_25
0x9f3	    0x8b0500000000	            mov eax, dword [0x04000a39] 	       521	channel.c	FUNCTION_25	IF_1
0x9f9	            0x85c0	                           test eax, eax	       521	channel.c	FUNCTION_25	IF_1
0x9fb	            0x750e	                           jne 0x4000a4b	       521	channel.c	FUNCTION_25	IF_1
0x9fd	    0x8b0500000000	            mov eax, dword [0x04000a43] 	       521	channel.c	FUNCTION_25	IF_1
0xa03	            0x85c0	                           test eax, eax	       521	channel.c	FUNCTION_25	IF_1
0xa05	     0xf84ee000000	                            je 0x4000b39	       521	channel.c	FUNCTION_25	IF_1
0xa0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	channel.c	FUNCTION_25	IF_2
0xa0f	    0x8b80a4040000	           mov eax, dword [rax + 0x4a4] 	       525	channel.c	FUNCTION_25	IF_2
0xa15	            0x85c0	                           test eax, eax	       525	channel.c	FUNCTION_25	IF_2
0xa17	     0xf85df000000	                           jne 0x4000b3c	       525	channel.c	FUNCTION_25	IF_2
0xa1d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       547	channel.c	FUNCTION_25	IF_4
0xa21	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       547	channel.c	FUNCTION_25	IF_4
0xa24	        0x48c1e004	                              shl rax, 4	       547	channel.c	FUNCTION_25	IF_4
0xa28	          0x4889c1	                            mov rcx, rax	       547	channel.c	FUNCTION_25	IF_4
0xa2b	        0x48c1e104	                              shl rcx, 4	       547	channel.c	FUNCTION_25	IF_4
0xa2f	          0x4801c8	                            add rax, rcx	       547	channel.c	FUNCTION_25	IF_4
0xa32	          0x4801d0	                            add rax, rdx	       547	channel.c	FUNCTION_25	IF_4
0xa35	        0x4883c01c	                           add rax, 0x1c	       547	channel.c	FUNCTION_25	IF_4
0xa39	            0x8b00	                    mov eax, dword [rax]	       547	channel.c	FUNCTION_25	IF_4
0xa3b	            0x85c0	                           test eax, eax	       547	channel.c	FUNCTION_25	IF_4
0xa3d	     0xf85ba000000	                           jne 0x4000b3d	       547	channel.c	FUNCTION_25	IF_4
0xa43	        0x488b55f8	                mov rdx, qword [rbp - 8]	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa47	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa4a	        0x48c1e004	                              shl rax, 4	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa4e	          0x4889c1	                            mov rcx, rax	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa51	        0x48c1e104	                              shl rcx, 4	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa55	          0x4801c8	                            add rax, rcx	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa58	          0x4801d0	                            add rax, rdx	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa5b	        0x4883c018	                           add rax, 0x18	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa5f	            0x8b08	                    mov ecx, dword [rax]	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa61	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa64	    0x488b14c50000	                  mov rdx, qword [rax*8]	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa70	      0xbe00000000	                              mov esi, 0	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa75	          0x4889c7	                            mov rdi, rax	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa78	      0xb800000000	                              mov eax, 0	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa7d	      0xe800000000	                          call 0x4000ac2	       549	channel.c	FUNCTION_25	IF_4	CALL_3
0xa82	        0x488b55f8	                mov rdx, qword [rbp - 8]	       568	channel.c	FUNCTION_25	IF_4
0xa86	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       568	channel.c	FUNCTION_25	IF_4
0xa89	        0x48c1e004	                              shl rax, 4	       568	channel.c	FUNCTION_25	IF_4
0xa8d	          0x4889c1	                            mov rcx, rax	       568	channel.c	FUNCTION_25	IF_4
0xa90	        0x48c1e104	                              shl rcx, 4	       568	channel.c	FUNCTION_25	IF_4
0xa94	          0x4801c8	                            add rax, rcx	       568	channel.c	FUNCTION_25	IF_4
0xa97	          0x4801d0	                            add rax, rdx	       568	channel.c	FUNCTION_25	IF_4
0xa9a	        0x4883c018	                           add rax, 0x18	       568	channel.c	FUNCTION_25	IF_4
0xa9e	            0x8b00	                    mov eax, dword [rax]	       568	channel.c	FUNCTION_25	IF_4
0xaa0	            0x4898	                                    cdqe	       568	channel.c	FUNCTION_25	IF_4
0xaa2	          0x4889c6	                            mov rsi, rax	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xaa5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       564	channel.c	FUNCTION_25	IF_4
0xaa9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       564	channel.c	FUNCTION_25	IF_4
0xaac	        0x48c1e004	                              shl rax, 4	       564	channel.c	FUNCTION_25	IF_4
0xab0	          0x4889c1	                            mov rcx, rax	       564	channel.c	FUNCTION_25	IF_4
0xab3	        0x48c1e104	                              shl rcx, 4	       564	channel.c	FUNCTION_25	IF_4
0xab7	          0x4801c8	                            add rax, rcx	       564	channel.c	FUNCTION_25	IF_4
0xaba	          0x4801d0	                            add rax, rdx	       564	channel.c	FUNCTION_25	IF_4
0xabd	        0x4883c018	                           add rax, 0x18	       564	channel.c	FUNCTION_25	IF_4
0xac1	            0x8b00	                    mov eax, dword [rax]	       564	channel.c	FUNCTION_25	IF_4
0xac3	          0x4889f1	                            mov rcx, rsi	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xac6	      0xba00000000	                              mov edx, 0	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xacb	      0xbe05000000	                              mov esi, 5	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xad0	            0x89c7	                            mov edi, eax	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xad2	      0xe800000000	                          call 0x4000b17	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xad7	            0x89c1	                            mov ecx, eax	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xad9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xadd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xae0	        0x48c1e004	                              shl rax, 4	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xae4	          0x4889c6	                            mov rsi, rax	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xae7	        0x48c1e604	                              shl rsi, 4	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xaeb	          0x4801f0	                            add rax, rsi	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xaee	          0x4801d0	                            add rax, rdx	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xaf1	        0x4883c01c	                           add rax, 0x1c	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xaf5	            0x8908	                    mov dword [rax], ecx	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xaf7	            0xeb04	                           jmp 0x4000b3d	       563	channel.c	FUNCTION_25	IF_4	CALL_8
0xaf9	              0x90	                                     nop	       522	channel.c	FUNCTION_25	IF_1
0xafa	            0xeb01	                           jmp 0x4000b3d	       522	channel.c	FUNCTION_25	IF_1
0xafc	              0x90	                                     nop	       526	channel.c	FUNCTION_25	IF_2
0xafd	              0xc9	                                   leave	       573	channel.c	FUNCTION_25
0xafe	              0xc3	                                     ret	       573	channel.c	FUNCTION_25
job_status	functions,0:SWITCH,0:CALL,2:ELSE,2:IF,3:FOR,0:WHILE,0:DO,0	30
0xb778	              0x55	                                push rbp	      5705	channel.c	FUNCTION_134
0xb779	          0x4889e5	                            mov rbp, rsp	      5705	channel.c	FUNCTION_134
0xb77c	        0x4883ec20	                           sub rsp, 0x20	      5705	channel.c	FUNCTION_134
0xb780	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5705	channel.c	FUNCTION_134
0xb784	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5708	channel.c	FUNCTION_134	IF_1
0xb788	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5708	channel.c	FUNCTION_134	IF_1
0xb78b	          0x83f801	                              cmp eax, 1	      5708	channel.c	FUNCTION_134	IF_1
0xb78e	            0x760a	                           jbe 0x400b7da	      5708	channel.c	FUNCTION_134	IF_1
0xb790	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5710	channel.c	FUNCTION_134	IF_1
0xb798	            0xeb3d	                           jmp 0x400b817	      5710	channel.c	FUNCTION_134	IF_1
0xb79a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5711	channel.c	FUNCTION_134	ELSE_1	IF_2
0xb79e	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5711	channel.c	FUNCTION_134	ELSE_1	IF_2
0xb7a1	            0x85c0	                           test eax, eax	      5711	channel.c	FUNCTION_134	ELSE_1	IF_2
0xb7a3	            0x750a	                           jne 0x400b7ef	      5711	channel.c	FUNCTION_134	ELSE_1	IF_2
0xb7a5	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5712	channel.c	FUNCTION_134	ELSE_1	IF_2
0xb7ad	            0xeb28	                           jmp 0x400b817	      5712	channel.c	FUNCTION_134	ELSE_1	IF_2
0xb7af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5715	channel.c	FUNCTION_134	ELSE_2	CALL_1
0xb7b3	          0x4889c7	                            mov rdi, rax	      5715	channel.c	FUNCTION_134	ELSE_2	CALL_1
0xb7b6	      0xe800000000	                          call 0x400b7fb	      5715	channel.c	FUNCTION_134	ELSE_2	CALL_1
0xb7bb	        0x488945f8	                mov qword [rbp - 8], rax	      5715	channel.c	FUNCTION_134	ELSE_2	CALL_1
0xb7bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5716	channel.c	FUNCTION_134	ELSE_2	IF_3
0xb7c3	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5716	channel.c	FUNCTION_134	ELSE_2	IF_3
0xb7c6	          0x83f802	                              cmp eax, 2	      5716	channel.c	FUNCTION_134	ELSE_2	IF_3
0xb7c9	            0x750c	                           jne 0x400b817	      5716	channel.c	FUNCTION_134	ELSE_2	IF_3
0xb7cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5717	channel.c	FUNCTION_134	ELSE_2	CALL_2
0xb7cf	          0x4889c7	                            mov rdi, rax	      5717	channel.c	FUNCTION_134	ELSE_2	CALL_2
0xb7d2	      0xe800000000	                          call 0x400b817	      5717	channel.c	FUNCTION_134	ELSE_2	CALL_2
0xb7d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5719	channel.c	FUNCTION_134
0xb7db	              0xc9	                                   leave	      5720	channel.c	FUNCTION_134
0xb7dc	              0xc3	                                     ret	      5720	channel.c	FUNCTION_134
find_buffer	functions,0:SWITCH,0:CALL,9:ELSE,0:IF,6:FOR,0:WHILE,0:DO,0	88
0x1c88	              0x55	                                push rbp	      1101	channel.c	ELSE_3	FUNCTION_35
0x1c89	          0x4889e5	                            mov rbp, rsp	      1101	channel.c	ELSE_3	FUNCTION_35
0x1c8c	        0x4883ec20	                           sub rsp, 0x20	      1101	channel.c	ELSE_3	FUNCTION_35
0x1c90	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1101	channel.c	ELSE_3	FUNCTION_35
0x1c94	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1101	channel.c	ELSE_3	FUNCTION_35
0x1c97	          0x8955e0	             mov dword [rbp - 0x20], edx	      1101	channel.c	ELSE_3	FUNCTION_35
0x1c9a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1102	channel.c	ELSE_3	FUNCTION_35
0x1ca2	    0x488b05000000	            mov rax, qword [0x04001ce9] 	      1103	channel.c	ELSE_3	FUNCTION_35
0x1ca9	        0x488945f8	                mov qword [rbp - 8], rax	      1103	channel.c	ELSE_3	FUNCTION_35
0x1cad	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1105	channel.c	ELSE_3	FUNCTION_35	IF_1
0x1cb2	            0x7432	                            je 0x4001d26	      1105	channel.c	ELSE_3	FUNCTION_35	IF_1
0x1cb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1105	channel.c	ELSE_3	FUNCTION_35	IF_1
0x1cb8	           0xfb600	                   movzx eax, byte [rax]	      1105	channel.c	ELSE_3	FUNCTION_35	IF_1
0x1cbb	            0x84c0	                             test al, al	      1105	channel.c	ELSE_3	FUNCTION_35	IF_1
0x1cbd	            0x7427	                            je 0x4001d26	      1105	channel.c	ELSE_3	FUNCTION_35	IF_1
0x1cbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1107	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_1
0x1cc3	          0x4889c7	                            mov rdi, rax	      1107	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_1
0x1cc6	      0xe800000000	                          call 0x4001d0b	      1107	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_1
0x1ccb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1107	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_1
0x1ccf	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1108	channel.c	ELSE_3	FUNCTION_35	IF_1	IF_2
0x1cd4	            0x7510	                           jne 0x4001d26	      1108	channel.c	ELSE_3	FUNCTION_35	IF_1	IF_2
0x1cd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1109	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_2
0x1cda	          0x4889c7	                            mov rdi, rax	      1109	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_2
0x1cdd	      0xe800000000	                          call 0x4001d22	      1109	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_2
0x1ce2	        0x488945f0	             mov qword [rbp - 0x10], rax	      1109	channel.c	ELSE_3	FUNCTION_35	IF_1	CALL_2
0x1ce6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1111	channel.c	ELSE_3	FUNCTION_35	IF_3
0x1ceb	     0xf85fa000000	                           jne 0x4001e2b	      1111	channel.c	ELSE_3	FUNCTION_35	IF_3
0x1cf1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1cf6	            0x7411	                            je 0x4001d49	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1cf8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1cfc	           0xfb600	                   movzx eax, byte [rax]	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1cff	            0x84c0	                             test al, al	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d01	            0x7406	                            je 0x4001d49	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d07	            0xeb05	                           jmp 0x4001d4e	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d09	      0xb800000000	                              mov eax, 0	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d0e	      0xb90a000000	                            mov ecx, 0xa	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d13	      0xba00000000	                              mov edx, 0	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d18	      0xbe00000000	                              mov esi, 0	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d1d	          0x4889c7	                            mov rdi, rax	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d20	      0xe800000000	                          call 0x4001d65	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d25	        0x488945f0	             mov qword [rbp - 0x10], rax	      1113	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_3
0x1d29	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1115	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_4
0x1d2e	            0x750a	                           jne 0x4001d7a	      1115	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_4
0x1d30	      0xb800000000	                              mov eax, 0	      1116	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_4
0x1d35	      0xe9b5000000	                           jmp 0x4001e2f	      1116	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_4
0x1d3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1117	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_4
0x1d3e	      0xbe01000000	                              mov esi, 1	      1117	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_4
0x1d43	          0x4889c7	                            mov rdi, rax	      1117	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_4
0x1d46	      0xe800000000	                          call 0x4001d8b	      1117	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_4
0x1d4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1118	channel.c	ELSE_3	FUNCTION_35	IF_3
0x1d4f	    0x488905000000	            mov qword [0x04001d96], rax 	      1118	channel.c	ELSE_3	FUNCTION_35	IF_3
0x1d56	      0xb904000000	                              mov ecx, 4	      1120	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_5
0x1d5b	      0xba00000000	                              mov edx, 0	      1120	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_5
0x1d60	      0xbe00000000	                              mov esi, 0	      1120	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_5
0x1d65	      0xbf00000000	                              mov edi, 0	      1120	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_5
0x1d6a	      0xe800000000	                          call 0x4001daf	      1120	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_5
0x1d6f	      0xb904000000	                              mov ecx, 4	      1121	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_6
0x1d74	      0xba00000000	                              mov edx, 0	      1121	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_6
0x1d79	      0xbe00000000	                              mov esi, 0	      1121	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_6
0x1d7e	      0xbf00000000	                              mov edi, 0	      1121	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_6
0x1d83	      0xe800000000	                          call 0x4001dc8	      1121	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_6
0x1d88	    0x488b05000000	            mov rax, qword [0x04001dcf] 	      1123	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_5
0x1d8f	        0x488b4008	                mov rax, qword [rax + 8]	      1123	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_5
0x1d93	          0x4885c0	                           test rax, rax	      1123	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_5
0x1d96	            0x750f	                           jne 0x4001de7	      1123	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_5
0x1d98	    0x488b05000000	            mov rax, qword [0x04001ddf] 	      1124	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_7
0x1d9f	          0x4889c7	                            mov rdi, rax	      1124	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_7
0x1da2	      0xe800000000	                          call 0x4001de7	      1124	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_7
0x1da7	        0x837de000	               cmp dword [rbp - 0x20], 0	      1125	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6
0x1dab	            0x7424	                            je 0x4001e11	      1125	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6
0x1dad	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1db1	            0x7407	                            je 0x4001dfa	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1db3	      0xb800000000	                              mov eax, 0	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1db8	            0xeb05	                           jmp 0x4001dff	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1dba	      0xb800000000	                              mov eax, 0	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1dbf	      0xba01000000	                              mov edx, 1	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1dc4	          0x4889c6	                            mov rsi, rax	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1dc7	      0xbf01000000	                              mov edi, 1	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1dcc	      0xe800000000	                          call 0x4001e11	      1126	channel.c	ELSE_3	FUNCTION_35	IF_3	IF_6	CALL_8
0x1dd1	      0xbe00000000	                              mov esi, 0	      1128	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_9
0x1dd6	      0xbf01000000	                              mov edi, 1	      1128	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_9
0x1ddb	      0xe800000000	                          call 0x4001e20	      1128	channel.c	ELSE_3	FUNCTION_35	IF_3	CALL_9
0x1de0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1129	channel.c	ELSE_3	FUNCTION_35	IF_3
0x1de4	    0x488905000000	            mov qword [0x04001e2b], rax 	      1129	channel.c	ELSE_3	FUNCTION_35	IF_3
0x1deb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1132	channel.c	ELSE_3	FUNCTION_35
0x1def	              0xc9	                                   leave	      1133	channel.c	ELSE_3	FUNCTION_35
0x1df0	              0xc3	                                     ret	      1133	channel.c	ELSE_3	FUNCTION_35
channel_set_options	functions,0:SWITCH,0:CALL,20:ELSE,5:IF,29:FOR,2:WHILE,0:DO,0	392
0x1ea9	              0x55	                                push rbp	      1165	channel.c	FUNCTION_37
0x1eaa	          0x4889e5	                            mov rbp, rsp	      1165	channel.c	FUNCTION_37
0x1ead	              0x53	                                push rbx	      1165	channel.c	FUNCTION_37
0x1eae	        0x4883ec38	                           sub rsp, 0x38	      1165	channel.c	FUNCTION_37
0x1eb2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1165	channel.c	FUNCTION_37
0x1eb6	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1165	channel.c	FUNCTION_37
0x1eba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1168	channel.c	FUNCTION_37	IF_1
0x1ebe	            0x8b00	                    mov eax, dword [rax]	      1168	channel.c	FUNCTION_37	IF_1
0x1ec0	          0x83e001	                              and eax, 1	      1168	channel.c	FUNCTION_37	IF_1
0x1ec3	            0x85c0	                           test eax, eax	      1168	channel.c	FUNCTION_37	IF_1
0x1ec5	            0x7438	                            je 0x4001f3f	      1168	channel.c	FUNCTION_37	IF_1
0x1ec7	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1169	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ece	            0xeb29	                           jmp 0x4001f39	      1169	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ed0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ed4	          0x8b5008	                mov edx, dword [rax + 8]	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ed7	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1edb	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ede	        0x48c1e004	                              shl rax, 4	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ee2	          0x4889c6	                            mov rsi, rax	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ee5	        0x48c1e604	                              shl rsi, 4	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ee9	          0x4801f0	                            add rax, rsi	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1eec	          0x4801c8	                            add rax, rcx	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1eef	        0x4883c020	                           add rax, 0x20	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ef3	            0x8910	                    mov dword [rax], edx	      1170	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ef5	        0x8345d401	               add dword [rbp - 0x2c], 1	      1169	channel.c	FUNCTION_37	IF_1	FOR_1
0x1ef9	        0x837dd403	               cmp dword [rbp - 0x2c], 3	      1169	channel.c	FUNCTION_37	IF_1	FOR_1
0x1efd	            0x76d1	                           jbe 0x4001f10	      1169	channel.c	FUNCTION_37	IF_1	FOR_1
0x1eff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1171	channel.c	FUNCTION_37	IF_2
0x1f03	            0x8b00	                    mov eax, dword [rax]	      1171	channel.c	FUNCTION_37	IF_2
0x1f05	          0x83e002	                              and eax, 2	      1171	channel.c	FUNCTION_37	IF_2
0x1f08	            0x85c0	                           test eax, eax	      1171	channel.c	FUNCTION_37	IF_2
0x1f0a	            0x7411	                            je 0x4001f5d	      1171	channel.c	FUNCTION_37	IF_2
0x1f0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1172	channel.c	FUNCTION_37	IF_2
0x1f10	          0x8b500c	              mov edx, dword [rax + 0xc]	      1172	channel.c	FUNCTION_37	IF_2
0x1f13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1172	channel.c	FUNCTION_37	IF_2
0x1f17	    0x899050030000	            mov dword [rax + 0x350], edx	      1172	channel.c	FUNCTION_37	IF_2
0x1f1d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1173	channel.c	FUNCTION_37	IF_3
0x1f21	            0x8b00	                    mov eax, dword [rax]	      1173	channel.c	FUNCTION_37	IF_3
0x1f23	          0x83e004	                              and eax, 4	      1173	channel.c	FUNCTION_37	IF_3
0x1f26	            0x85c0	                           test eax, eax	      1173	channel.c	FUNCTION_37	IF_3
0x1f28	            0x7411	                            je 0x4001f7b	      1173	channel.c	FUNCTION_37	IF_3
0x1f2a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1174	channel.c	FUNCTION_37	IF_3
0x1f2e	          0x8b5010	            mov edx, dword [rax + 0x10] 	      1174	channel.c	FUNCTION_37	IF_3
0x1f31	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1174	channel.c	FUNCTION_37	IF_3
0x1f35	    0x899030010000	            mov dword [rax + 0x130], edx	      1174	channel.c	FUNCTION_37	IF_3
0x1f3b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1175	channel.c	FUNCTION_37	IF_4
0x1f3f	            0x8b00	                    mov eax, dword [rax]	      1175	channel.c	FUNCTION_37	IF_4
0x1f41	          0x83e008	                              and eax, 8	      1175	channel.c	FUNCTION_37	IF_4
0x1f44	            0x85c0	                           test eax, eax	      1175	channel.c	FUNCTION_37	IF_4
0x1f46	            0x7411	                            je 0x4001f99	      1175	channel.c	FUNCTION_37	IF_4
0x1f48	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1176	channel.c	FUNCTION_37	IF_4
0x1f4c	          0x8b5014	            mov edx, dword [rax + 0x14] 	      1176	channel.c	FUNCTION_37	IF_4
0x1f4f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1176	channel.c	FUNCTION_37	IF_4
0x1f53	    0x899040020000	            mov dword [rax + 0x240], edx	      1176	channel.c	FUNCTION_37	IF_4
0x1f59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1178	channel.c	FUNCTION_37	IF_5
0x1f5d	            0x8b00	                    mov eax, dword [rax]	      1178	channel.c	FUNCTION_37	IF_5
0x1f5f	      0x2500020000	                          and eax, 0x200	      1178	channel.c	FUNCTION_37	IF_5
0x1f64	            0x85c0	                           test eax, eax	      1178	channel.c	FUNCTION_37	IF_5
0x1f66	            0x743b	                            je 0x4001fe3	      1178	channel.c	FUNCTION_37	IF_5
0x1f68	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1179	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f6f	            0xeb2c	                           jmp 0x4001fdd	      1179	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f71	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f75	    0x8b90f8010000	           mov edx, dword [rax + 0x1f8] 	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f7b	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f7f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f82	        0x48c1e004	                              shl rax, 4	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f86	          0x4889c6	                            mov rsi, rax	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f89	        0x48c1e604	                              shl rsi, 4	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f8d	          0x4801f0	                            add rax, rsi	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f90	          0x4801c8	                            add rax, rcx	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f93	        0x4883c028	                           add rax, 0x28	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f97	            0x8910	                    mov dword [rax], edx	      1180	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f99	        0x8345d401	               add dword [rbp - 0x2c], 1	      1179	channel.c	FUNCTION_37	IF_5	FOR_2
0x1f9d	        0x837dd403	               cmp dword [rbp - 0x2c], 3	      1179	channel.c	FUNCTION_37	IF_5	FOR_2
0x1fa1	            0x76ce	                           jbe 0x4001fb1	      1179	channel.c	FUNCTION_37	IF_5	FOR_2
0x1fa3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1181	channel.c	FUNCTION_37	IF_6
0x1fa7	            0x8b00	                    mov eax, dword [rax]	      1181	channel.c	FUNCTION_37	IF_6
0x1fa9	      0x2500040000	                          and eax, 0x400	      1181	channel.c	FUNCTION_37	IF_6
0x1fae	            0x85c0	                           test eax, eax	      1181	channel.c	FUNCTION_37	IF_6
0x1fb0	            0x7414	                            je 0x4002006	      1181	channel.c	FUNCTION_37	IF_6
0x1fb2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1182	channel.c	FUNCTION_37	IF_6
0x1fb6	    0x8b90fc010000	           mov edx, dword [rax + 0x1fc] 	      1182	channel.c	FUNCTION_37	IF_6
0x1fbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1182	channel.c	FUNCTION_37	IF_6
0x1fc0	    0x899038010000	            mov dword [rax + 0x138], edx	      1182	channel.c	FUNCTION_37	IF_6
0x1fc6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1183	channel.c	FUNCTION_37	IF_7
0x1fca	            0x8b00	                    mov eax, dword [rax]	      1183	channel.c	FUNCTION_37	IF_7
0x1fcc	      0x2500080000	                          and eax, 0x800	      1183	channel.c	FUNCTION_37	IF_7
0x1fd1	            0x85c0	                           test eax, eax	      1183	channel.c	FUNCTION_37	IF_7
0x1fd3	            0x7414	                            je 0x4002029	      1183	channel.c	FUNCTION_37	IF_7
0x1fd5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1184	channel.c	FUNCTION_37	IF_7
0x1fd9	    0x8b9000020000	           mov edx, dword [rax + 0x200] 	      1184	channel.c	FUNCTION_37	IF_7
0x1fdf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1184	channel.c	FUNCTION_37	IF_7
0x1fe3	    0x899048020000	            mov dword [rax + 0x248], edx	      1184	channel.c	FUNCTION_37	IF_7
0x1fe9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1185	channel.c	FUNCTION_37	IF_8
0x1fed	            0x8b00	                    mov eax, dword [rax]	      1185	channel.c	FUNCTION_37	IF_8
0x1fef	      0x2500000010	                     and eax, 0x10000000	      1185	channel.c	FUNCTION_37	IF_8
0x1ff4	            0x85c0	                           test eax, eax	      1185	channel.c	FUNCTION_37	IF_8
0x1ff6	            0x740e	                            je 0x4002046	      1185	channel.c	FUNCTION_37	IF_8
0x1ff8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1186	channel.c	FUNCTION_37	IF_8
0x1ffc	    0xc780c0030000	              mov dword [rax + 0x3c0], 1	      1186	channel.c	FUNCTION_37	IF_8
0x2006	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1188	channel.c	FUNCTION_37	IF_9
0x200a	            0x8b00	                    mov eax, dword [rax]	      1188	channel.c	FUNCTION_37	IF_9
0x200c	          0x83e010	                           and eax, 0x10	      1188	channel.c	FUNCTION_37	IF_9
0x200f	            0x85c0	                           test eax, eax	      1188	channel.c	FUNCTION_37	IF_9
0x2011	            0x7437	                            je 0x400208a	      1188	channel.c	FUNCTION_37	IF_9
0x2013	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x2017	    0x488b90a80100	           mov rdx, qword [rax + 0x1a8] 	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x201e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x2022	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x2029	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x202d	    0x488db1880400	                  lea rsi, [rcx + 0x488]	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x2034	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x2038	    0x488db9800400	                  lea rdi, [rcx + 0x480]	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x203f	          0x4889d1	                            mov rcx, rdx	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x2042	          0x4889c2	                            mov rdx, rax	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x2045	      0xe8a7fdffff	                   call sym.set_callback	      1189	channel.c	FUNCTION_37	IF_9	CALL_1
0x204a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1191	channel.c	FUNCTION_37	IF_10
0x204e	            0x8b00	                    mov eax, dword [rax]	      1191	channel.c	FUNCTION_37	IF_10
0x2050	          0x83e020	                           and eax, 0x20	      1191	channel.c	FUNCTION_37	IF_10
0x2053	            0x85c0	                           test eax, eax	      1191	channel.c	FUNCTION_37	IF_10
0x2055	            0x7437	                            je 0x40020ce	      1191	channel.c	FUNCTION_37	IF_10
0x2057	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x205b	    0x488b90b80100	           mov rdx, qword [rax + 0x1b8] 	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x2062	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x2066	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x206d	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x2071	    0x488db1000200	                  lea rsi, [rcx + 0x200]	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x2078	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x207c	    0x488db9f80100	                  lea rdi, [rcx + 0x1f8]	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x2083	          0x4889d1	                            mov rcx, rdx	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x2086	          0x4889c2	                            mov rdx, rax	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x2089	      0xe863fdffff	                   call sym.set_callback	      1192	channel.c	FUNCTION_37	IF_10	CALL_2
0x208e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1195	channel.c	FUNCTION_37	IF_11
0x2092	            0x8b00	                    mov eax, dword [rax]	      1195	channel.c	FUNCTION_37	IF_11
0x2094	          0x83e040	                           and eax, 0x40	      1195	channel.c	FUNCTION_37	IF_11
0x2097	            0x85c0	                           test eax, eax	      1195	channel.c	FUNCTION_37	IF_11
0x2099	            0x7437	                            je 0x4002112	      1195	channel.c	FUNCTION_37	IF_11
0x209b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x209f	    0x488b90c80100	           mov rdx, qword [rax + 0x1c8] 	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20aa	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20b1	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20b5	    0x488db1100300	                  lea rsi, [rcx + 0x310]	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20bc	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20c0	    0x488db9080300	                  lea rdi, [rcx + 0x308]	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20c7	          0x4889d1	                            mov rcx, rdx	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20ca	          0x4889c2	                            mov rdx, rax	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20cd	      0xe81ffdffff	                   call sym.set_callback	      1196	channel.c	FUNCTION_37	IF_11	CALL_3
0x20d2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1199	channel.c	FUNCTION_37	IF_12
0x20d6	            0x8b00	                    mov eax, dword [rax]	      1199	channel.c	FUNCTION_37	IF_12
0x20d8	      0x2580000000	                           and eax, 0x80	      1199	channel.c	FUNCTION_37	IF_12
0x20dd	            0x85c0	                           test eax, eax	      1199	channel.c	FUNCTION_37	IF_12
0x20df	            0x7437	                            je 0x4002158	      1199	channel.c	FUNCTION_37	IF_12
0x20e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x20e5	    0x488b90d80100	           mov rdx, qword [rax + 0x1d8] 	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x20ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x20f0	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x20f7	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x20fb	    0x488db1980400	                  lea rsi, [rcx + 0x498]	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x2102	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x2106	    0x488db9900400	                  lea rdi, [rcx + 0x490]	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x210d	          0x4889d1	                            mov rcx, rdx	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x2110	          0x4889c2	                            mov rdx, rax	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x2113	      0xe8d9fcffff	                   call sym.set_callback	      1200	channel.c	FUNCTION_37	IF_12	CALL_4
0x2118	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1202	channel.c	FUNCTION_37
0x211c	    0x8b90f0010000	           mov edx, dword [rax + 0x1f0] 	      1202	channel.c	FUNCTION_37
0x2122	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1202	channel.c	FUNCTION_37
0x2126	    0x8990a0040000	            mov dword [rax + 0x4a0], edx	      1202	channel.c	FUNCTION_37
0x212c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1204	channel.c	FUNCTION_37	IF_13
0x2130	            0x8b00	                    mov eax, dword [rax]	      1204	channel.c	FUNCTION_37	IF_13
0x2132	      0x2500000100	                        and eax, 0x10000	      1204	channel.c	FUNCTION_37	IF_13
0x2137	            0x85c0	                           test eax, eax	      1204	channel.c	FUNCTION_37	IF_13
0x2139	     0xf845c010000	                            je 0x40022db	      1204	channel.c	FUNCTION_37	IF_13
0x213f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1204	channel.c	FUNCTION_37	IF_13
0x2143	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1204	channel.c	FUNCTION_37	IF_13
0x2146	          0x83f803	                              cmp eax, 3	      1204	channel.c	FUNCTION_37	IF_13
0x2149	     0xf854c010000	                           jne 0x40022db	      1204	channel.c	FUNCTION_37	IF_13
0x214f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1209	channel.c	FUNCTION_37	IF_13	IF_14
0x2153	            0x8b00	                    mov eax, dword [rax]	      1209	channel.c	FUNCTION_37	IF_13	IF_14
0x2155	          0x83e004	                              and eax, 4	      1209	channel.c	FUNCTION_37	IF_13	IF_14
0x2158	            0x85c0	                           test eax, eax	      1209	channel.c	FUNCTION_37	IF_13	IF_14
0x215a	            0x750e	                           jne 0x40021aa	      1209	channel.c	FUNCTION_37	IF_13	IF_14
0x215c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1210	channel.c	FUNCTION_37	IF_13	IF_14
0x2160	    0xc78030010000	              mov dword [rax + 0x130], 0	      1210	channel.c	FUNCTION_37	IF_13	IF_14
0x216a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1211	channel.c	FUNCTION_37	IF_13	IF_15
0x216e	            0x8b00	                    mov eax, dword [rax]	      1211	channel.c	FUNCTION_37	IF_13	IF_15
0x2170	      0x2500000001	                      and eax, 0x1000000	      1211	channel.c	FUNCTION_37	IF_13	IF_15
0x2175	            0x85c0	                           test eax, eax	      1211	channel.c	FUNCTION_37	IF_13	IF_15
0x2177	            0x7440	                            je 0x40021f9	      1211	channel.c	FUNCTION_37	IF_13	IF_15
0x2179	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1213	channel.c	FUNCTION_37	IF_13	IF_15	CALL_5
0x217d	    0x8b8054010000	           mov eax, dword [rax + 0x154] 	      1213	channel.c	FUNCTION_37	IF_13	IF_15	CALL_5
0x2183	            0x89c7	                            mov edi, eax	      1213	channel.c	FUNCTION_37	IF_13	IF_15	CALL_5
0x2185	      0xe800000000	                          call 0x40021ca	      1213	channel.c	FUNCTION_37	IF_13	IF_15	CALL_5
0x218a	        0x488945e0	             mov qword [rbp - 0x20], rax	      1213	channel.c	FUNCTION_37	IF_13	IF_15	CALL_5
0x218e	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1214	channel.c	FUNCTION_37	IF_13	IF_15	IF_16
0x2193	            0x7565	                           jne 0x400223a	      1214	channel.c	FUNCTION_37	IF_13	IF_15	IF_16
0x2195	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x2199	    0x8b8054010000	           mov eax, dword [rax + 0x154] 	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x219f	          0x4863d8	                         movsxd rbx, eax	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x21a2	      0xbf00000000	                              mov edi, 0	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x21a7	      0xe800000000	                          call 0x40021ec	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x21ac	          0x4889de	                            mov rsi, rbx	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x21af	          0x4889c7	                            mov rdi, rax	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x21b2	      0xe800000000	                          call 0x40021f7	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x21b7	            0xeb41	                           jmp 0x400223a	      1215	channel.c	FUNCTION_37	IF_13	IF_15	CALL_7
0x21b9	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      1219	channel.c	FUNCTION_37	IF_13	ELSE_1
0x21c0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1221	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21c4	          0x8b4004	                mov eax, dword [rax + 4]	      1221	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21c7	          0x83e001	                              and eax, 1	      1221	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21ca	            0x85c0	                           test eax, eax	      1221	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21cc	            0x740d	                            je 0x400221b	      1221	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1222	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21d2	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      1222	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21d8	          0x8945d8	             mov dword [rbp - 0x28], eax	      1222	channel.c	FUNCTION_37	IF_13	ELSE_1	IF_17
0x21db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1223	channel.c	FUNCTION_37	IF_13	ELSE_1	CALL_8
0x21df	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      1223	channel.c	FUNCTION_37	IF_13	ELSE_1	CALL_8
0x21e6	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1223	channel.c	FUNCTION_37	IF_13	ELSE_1	CALL_8
0x21e9	      0xbe00000000	                              mov esi, 0	      1223	channel.c	FUNCTION_37	IF_13	ELSE_1	CALL_8
0x21ee	          0x4889c7	                            mov rdi, rax	      1223	channel.c	FUNCTION_37	IF_13	ELSE_1	CALL_8
0x21f1	      0xe892faffff	                    call sym.find_buffer	      1223	channel.c	FUNCTION_37	IF_13	ELSE_1	CALL_8
0x21f6	        0x488945e0	             mov qword [rbp - 0x20], rax	      1223	channel.c	FUNCTION_37	IF_13	ELSE_1	CALL_8
0x21fa	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1225	channel.c	FUNCTION_37	IF_13	IF_18
0x21ff	     0xf8496000000	                            je 0x40022db	      1225	channel.c	FUNCTION_37	IF_13	IF_18
0x2205	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1227	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2209	            0x8b00	                    mov eax, dword [rax]	      1227	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x220b	      0x2500000020	                     and eax, 0x20000000	      1227	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2210	            0x85c0	                           test eax, eax	      1227	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2212	            0x741c	                            je 0x4002270	      1227	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2214	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1229	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2218	    0x8b8068010000	           mov eax, dword [rax + 0x168] 	      1229	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x221e	            0x85c0	                           test eax, eax	      1229	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2220	           0xf94c0	                                 sete al	      1229	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2223	           0xfb6d0	                           movzx edx, al	      1229	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2226	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1228	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x222a	    0x899018020000	            mov dword [rax + 0x218], edx	      1228	channel.c	FUNCTION_37	IF_13	IF_18	IF_19
0x2230	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x2234	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x223a	            0x85c0	                           test eax, eax	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x223c	            0x7522	                           jne 0x40022a0	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x223e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x2242	    0x8b8018020000	           mov eax, dword [rax + 0x218] 	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x2248	            0x85c0	                           test eax, eax	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x224a	            0x7514	                           jne 0x40022a0	      1231	channel.c	FUNCTION_37	IF_13	IF_18	IF_20
0x224c	      0xbf00000000	                              mov edi, 0	      1233	channel.c	FUNCTION_37	IF_13	IF_18	IF_20	CALL_10
0x2251	      0xe800000000	                          call 0x4002296	      1233	channel.c	FUNCTION_37	IF_13	IF_18	IF_20	CALL_10
0x2256	          0x4889c7	                            mov rdi, rax	      1233	channel.c	FUNCTION_37	IF_13	IF_18	IF_20	CALL_10
0x2259	      0xe800000000	                          call 0x400229e	      1233	channel.c	FUNCTION_37	IF_13	IF_18	IF_20	CALL_10
0x225e	            0xeb3b	                           jmp 0x40022db	      1233	channel.c	FUNCTION_37	IF_13	IF_18	IF_20	CALL_10
0x2260	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1238	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2
0x2264	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1238	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2
0x226b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1237	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_11
0x226f	      0xbe00000000	                              mov esi, 0	      1237	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_11
0x2274	          0x4889c7	                            mov rdi, rax	      1237	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_11
0x2277	      0xb800000000	                              mov eax, 0	      1237	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_11
0x227c	      0xe800000000	                          call 0x40022c1	      1237	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_11
0x2281	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1239	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_12
0x2285	    0x488d90080200	                  lea rdx, [rax + 0x208]	      1239	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_12
0x228c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1239	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_12
0x2290	          0x4889c6	                            mov rsi, rax	      1239	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_12
0x2293	          0x4889d7	                            mov rdi, rdx	      1239	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_12
0x2296	      0xe800000000	                          call 0x40022db	      1239	channel.c	FUNCTION_37	IF_13	IF_18	ELSE_2	CALL_12
0x229b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1244	channel.c	FUNCTION_37	IF_21
0x229f	            0x8b00	                    mov eax, dword [rax]	      1244	channel.c	FUNCTION_37	IF_21
0x22a1	      0x2500000200	                        and eax, 0x20000	      1244	channel.c	FUNCTION_37	IF_21
0x22a6	            0x85c0	                           test eax, eax	      1244	channel.c	FUNCTION_37	IF_21
0x22a8	     0xf84ab010000	                            je 0x4002499	      1244	channel.c	FUNCTION_37	IF_21
0x22ae	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1244	channel.c	FUNCTION_37	IF_21
0x22b2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1244	channel.c	FUNCTION_37	IF_21
0x22b5	          0x83f803	                              cmp eax, 3	      1244	channel.c	FUNCTION_37	IF_21
0x22b8	            0x7433	                            je 0x400232d	      1244	channel.c	FUNCTION_37	IF_21
0x22ba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1245	channel.c	FUNCTION_37	IF_21
0x22be	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1245	channel.c	FUNCTION_37	IF_21
0x22c1	          0x83f804	                              cmp eax, 4	      1245	channel.c	FUNCTION_37	IF_21
0x22c4	     0xf858f010000	                           jne 0x4002499	      1245	channel.c	FUNCTION_37	IF_21
0x22ca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1245	channel.c	FUNCTION_37	IF_21
0x22ce	            0x8b00	                    mov eax, dword [rax]	      1245	channel.c	FUNCTION_37	IF_21
0x22d0	      0x2500000100	                        and eax, 0x10000	      1245	channel.c	FUNCTION_37	IF_21
0x22d5	            0x85c0	                           test eax, eax	      1245	channel.c	FUNCTION_37	IF_21
0x22d7	     0xf847c010000	                            je 0x4002499	      1245	channel.c	FUNCTION_37	IF_21
0x22dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1246	channel.c	FUNCTION_37	IF_21
0x22e1	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1246	channel.c	FUNCTION_37	IF_21
0x22e4	          0x83f803	                              cmp eax, 3	      1246	channel.c	FUNCTION_37	IF_21
0x22e7	     0xf856c010000	                           jne 0x4002499	      1246	channel.c	FUNCTION_37	IF_21
0x22ed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1251	channel.c	FUNCTION_37	IF_21	IF_22
0x22f1	            0x8b00	                    mov eax, dword [rax]	      1251	channel.c	FUNCTION_37	IF_21	IF_22
0x22f3	          0x83e008	                              and eax, 8	      1251	channel.c	FUNCTION_37	IF_21	IF_22
0x22f6	            0x85c0	                           test eax, eax	      1251	channel.c	FUNCTION_37	IF_21	IF_22
0x22f8	            0x750e	                           jne 0x4002348	      1251	channel.c	FUNCTION_37	IF_21	IF_22
0x22fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1252	channel.c	FUNCTION_37	IF_21	IF_22
0x22fe	    0xc78040020000	              mov dword [rax + 0x240], 0	      1252	channel.c	FUNCTION_37	IF_21	IF_22
0x2308	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1253	channel.c	FUNCTION_37	IF_21	IF_23
0x230c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1253	channel.c	FUNCTION_37	IF_21	IF_23
0x230f	          0x83f804	                              cmp eax, 4	      1253	channel.c	FUNCTION_37	IF_21	IF_23
0x2312	            0x7514	                           jne 0x4002368	      1253	channel.c	FUNCTION_37	IF_21	IF_23
0x2314	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1254	channel.c	FUNCTION_37	IF_21	IF_23
0x2318	    0x488b80080200	           mov rax, qword [rax + 0x208] 	      1254	channel.c	FUNCTION_37	IF_21	IF_23
0x231f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1254	channel.c	FUNCTION_37	IF_21	IF_23
0x2323	      0xe990000000	                           jmp 0x40023f8	      1254	channel.c	FUNCTION_37	IF_21	IF_23
0x2328	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1255	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24
0x232c	            0x8b00	                    mov eax, dword [rax]	      1255	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24
0x232e	      0x2500000002	                      and eax, 0x2000000	      1255	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24
0x2333	            0x85c0	                           test eax, eax	      1255	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24
0x2335	            0x7440	                            je 0x40023b7	      1255	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24
0x2337	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1257	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_13
0x233b	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	      1257	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_13
0x2341	            0x89c7	                            mov edi, eax	      1257	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_13
0x2343	      0xe800000000	                          call 0x4002388	      1257	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_13
0x2348	        0x488945e8	             mov qword [rbp - 0x18], rax	      1257	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_13
0x234c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1258	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	IF_25
0x2351	            0x7565	                           jne 0x40023f8	      1258	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	IF_25
0x2353	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x2357	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x235d	          0x4863d8	                         movsxd rbx, eax	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x2360	      0xbf00000000	                              mov edi, 0	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x2365	      0xe800000000	                          call 0x40023aa	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x236a	          0x4889de	                            mov rsi, rbx	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x236d	          0x4889c7	                            mov rdi, rax	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x2370	      0xe800000000	                          call 0x40023b5	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x2375	            0xeb41	                           jmp 0x40023f8	      1259	channel.c	FUNCTION_37	IF_21	ELSE_3	IF_24	CALL_15
0x2377	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1263	channel.c	FUNCTION_37	IF_21	ELSE_4
0x237e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1265	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x2382	          0x8b4004	                mov eax, dword [rax + 4]	      1265	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x2385	          0x83e002	                              and eax, 2	      1265	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x2388	            0x85c0	                           test eax, eax	      1265	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x238a	            0x740d	                            je 0x40023d9	      1265	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x238c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1266	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x2390	    0x8b807c010000	           mov eax, dword [rax + 0x17c] 	      1266	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x2396	          0x8945dc	             mov dword [rbp - 0x24], eax	      1266	channel.c	FUNCTION_37	IF_21	ELSE_4	IF_26
0x2399	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1267	channel.c	FUNCTION_37	IF_21	ELSE_4	CALL_16
0x239d	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      1267	channel.c	FUNCTION_37	IF_21	ELSE_4	CALL_16
0x23a4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1267	channel.c	FUNCTION_37	IF_21	ELSE_4	CALL_16
0x23a7	      0xbe01000000	                              mov esi, 1	      1267	channel.c	FUNCTION_37	IF_21	ELSE_4	CALL_16
0x23ac	          0x4889c7	                            mov rdi, rax	      1267	channel.c	FUNCTION_37	IF_21	ELSE_4	CALL_16
0x23af	      0xe8d4f8ffff	                    call sym.find_buffer	      1267	channel.c	FUNCTION_37	IF_21	ELSE_4	CALL_16
0x23b4	        0x488945e8	             mov qword [rbp - 0x18], rax	      1267	channel.c	FUNCTION_37	IF_21	ELSE_4	CALL_16
0x23b8	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1269	channel.c	FUNCTION_37	IF_21	IF_27
0x23bd	     0xf8496000000	                            je 0x4002499	      1269	channel.c	FUNCTION_37	IF_21	IF_27
0x23c3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1271	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23c7	            0x8b00	                    mov eax, dword [rax]	      1271	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23c9	      0x2500000040	                     and eax, 0x40000000	      1271	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23ce	            0x85c0	                           test eax, eax	      1271	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23d0	            0x741c	                            je 0x400242e	      1271	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23d2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1273	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23d6	    0x8b806c010000	           mov eax, dword [rax + 0x16c] 	      1273	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23dc	            0x85c0	                           test eax, eax	      1273	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23de	           0xf94c0	                                 sete al	      1273	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23e1	           0xfb6d0	                           movzx edx, al	      1273	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1272	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23e8	    0x899028030000	            mov dword [rax + 0x328], edx	      1272	channel.c	FUNCTION_37	IF_21	IF_27	IF_28
0x23ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x23f2	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x23f8	            0x85c0	                           test eax, eax	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x23fa	            0x7522	                           jne 0x400245e	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x23fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x2400	    0x8b8028030000	           mov eax, dword [rax + 0x328] 	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x2406	            0x85c0	                           test eax, eax	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x2408	            0x7514	                           jne 0x400245e	      1274	channel.c	FUNCTION_37	IF_21	IF_27	IF_29
0x240a	      0xbf00000000	                              mov edi, 0	      1276	channel.c	FUNCTION_37	IF_21	IF_27	IF_29	CALL_18
0x240f	      0xe800000000	                          call 0x4002454	      1276	channel.c	FUNCTION_37	IF_21	IF_27	IF_29	CALL_18
0x2414	          0x4889c7	                            mov rdi, rax	      1276	channel.c	FUNCTION_37	IF_21	IF_27	IF_29	CALL_18
0x2417	      0xe800000000	                          call 0x400245c	      1276	channel.c	FUNCTION_37	IF_21	IF_27	IF_29	CALL_18
0x241c	            0xeb3b	                           jmp 0x4002499	      1276	channel.c	FUNCTION_37	IF_21	IF_27	IF_29	CALL_18
0x241e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1281	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5
0x2422	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1281	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5
0x2429	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1280	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_19
0x242d	      0xbe00000000	                              mov esi, 0	      1280	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_19
0x2432	          0x4889c7	                            mov rdi, rax	      1280	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_19
0x2435	      0xb800000000	                              mov eax, 0	      1280	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_19
0x243a	      0xe800000000	                          call 0x400247f	      1280	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_19
0x243f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1282	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_20
0x2443	    0x488d90180300	                  lea rdx, [rax + 0x318]	      1282	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_20
0x244a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1282	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_20
0x244e	          0x4889c6	                            mov rsi, rax	      1282	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_20
0x2451	          0x4889d7	                            mov rdi, rdx	      1282	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_20
0x2454	      0xe800000000	                          call 0x4002499	      1282	channel.c	FUNCTION_37	IF_21	IF_27	ELSE_5	CALL_20
0x2459	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1287	channel.c	FUNCTION_37
0x245d	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      1287	channel.c	FUNCTION_37
0x2460	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1287	channel.c	FUNCTION_37
0x2464	    0x899034010000	            mov dword [rax + 0x134], edx	      1287	channel.c	FUNCTION_37
0x246a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1288	channel.c	FUNCTION_37
0x246e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      1288	channel.c	FUNCTION_37
0x2471	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1288	channel.c	FUNCTION_37
0x2475	    0x899044020000	            mov dword [rax + 0x244], edx	      1288	channel.c	FUNCTION_37
0x247b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1289	channel.c	FUNCTION_37
0x247f	          0x8b5024	            mov edx, dword [rax + 0x24] 	      1289	channel.c	FUNCTION_37
0x2482	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1289	channel.c	FUNCTION_37
0x2486	    0x899054030000	            mov dword [rax + 0x354], edx	      1289	channel.c	FUNCTION_37
0x248c	              0x90	                                     nop	      1290	channel.c	FUNCTION_37
0x248d	        0x4883c438	                           add rsp, 0x38	      1290	channel.c	FUNCTION_37
0x2491	              0x5b	                                 pop rbx	      1290	channel.c	FUNCTION_37
0x2492	              0x5d	                                 pop rbp	      1290	channel.c	FUNCTION_37
0x2493	              0xc3	                                     ret	      1290	channel.c	FUNCTION_37
job_free	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	16
0xa59d	              0x55	                                push rbp	      5080	channel.c	FUNCTION_114
0xa59e	          0x4889e5	                            mov rbp, rsp	      5080	channel.c	FUNCTION_114
0xa5a1	        0x4883ec10	                           sub rsp, 0x10	      5080	channel.c	FUNCTION_114
0xa5a5	        0x48897df8	                mov qword [rbp - 8], rdi	      5080	channel.c	FUNCTION_114
0xa5a9	    0x8b0500000000	            mov eax, dword [0x0400a5ef] 	      5081	channel.c	FUNCTION_114	IF_1
0xa5af	            0x85c0	                           test eax, eax	      5081	channel.c	FUNCTION_114	IF_1
0xa5b1	            0x7518	                           jne 0x400a60b	      5081	channel.c	FUNCTION_114	IF_1
0xa5b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5083	channel.c	FUNCTION_114	IF_1	CALL_1
0xa5b7	          0x4889c7	                            mov rdi, rax	      5083	channel.c	FUNCTION_114	IF_1	CALL_1
0xa5ba	      0xe85efeffff	              call sym.job_free_contents	      5083	channel.c	FUNCTION_114	IF_1	CALL_1
0xa5bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5084	channel.c	FUNCTION_114	IF_1	CALL_2
0xa5c3	          0x4889c7	                            mov rdi, rax	      5084	channel.c	FUNCTION_114	IF_1	CALL_2
0xa5c6	      0xe869ffffff	                   call sym.job_free_job	      5084	channel.c	FUNCTION_114	IF_1	CALL_2
0xa5cb	              0x90	                                     nop	      5086	channel.c	FUNCTION_114
0xa5cc	              0xc9	                                   leave	      5086	channel.c	FUNCTION_114
0xa5cd	              0xc3	                                     ret	      5086	channel.c	FUNCTION_114
channel_set_job	functions,0:SWITCH,0:CALL,3:ELSE,3:IF,4:FOR,0:WHILE,0:DO,0	87
0x1b13	              0x55	                                push rbp	      1060	channel.c	FUNCTION_34
0x1b14	          0x4889e5	                            mov rbp, rsp	      1060	channel.c	FUNCTION_34
0x1b17	        0x4883ec30	                           sub rsp, 0x30	      1060	channel.c	FUNCTION_34
0x1b1b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1060	channel.c	FUNCTION_34
0x1b1f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1060	channel.c	FUNCTION_34
0x1b23	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1060	channel.c	FUNCTION_34
0x1b27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1061	channel.c	FUNCTION_34
0x1b2b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1061	channel.c	FUNCTION_34
0x1b2f	    0x488990a80400	            mov qword [rax + 0x4a8], rdx	      1061	channel.c	FUNCTION_34
0x1b36	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1063	channel.c	FUNCTION_34	CALL_1
0x1b3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1063	channel.c	FUNCTION_34	CALL_1
0x1b3e	          0x4889d6	                            mov rsi, rdx	      1063	channel.c	FUNCTION_34	CALL_1
0x1b41	          0x4889c7	                            mov rdi, rax	      1063	channel.c	FUNCTION_34	CALL_1
0x1b44	      0xe800000000	                          call 0x4001b89	      1063	channel.c	FUNCTION_34	CALL_1
0x1b49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1065	channel.c	FUNCTION_34	IF_1
0x1b4d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1065	channel.c	FUNCTION_34	IF_1
0x1b51	          0x4885c0	                           test rax, rax	      1065	channel.c	FUNCTION_34	IF_1
0x1b54	     0xf842b010000	                            je 0x4001cc5	      1065	channel.c	FUNCTION_34	IF_1
0x1b5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1067	channel.c	FUNCTION_34	IF_1
0x1b5e	    0x480548030000	                          add rax, 0x348	      1067	channel.c	FUNCTION_34	IF_1
0x1b64	        0x488945f8	                mov qword [rbp - 8], rax	      1067	channel.c	FUNCTION_34	IF_1
0x1b68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1069	channel.c	FUNCTION_34	IF_1	CALL_2
0x1b6c	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1069	channel.c	FUNCTION_34	IF_1	CALL_2
0x1b70	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1069	channel.c	FUNCTION_34	IF_1	CALL_2
0x1b74	    0x4881c2e00000	                           add rdx, 0xe0	      1069	channel.c	FUNCTION_34	IF_1	CALL_2
0x1b7b	          0x4889c6	                            mov rsi, rax	      1069	channel.c	FUNCTION_34	IF_1	CALL_2
0x1b7e	          0x4889d7	                            mov rdi, rdx	      1069	channel.c	FUNCTION_34	IF_1	CALL_2
0x1b81	      0xe800000000	                          call 0x4001bc6	      1069	channel.c	FUNCTION_34	IF_1	CALL_2
0x1b86	        0x488b45f8	                mov rax, qword [rbp - 8]	      1071	channel.c	FUNCTION_34	IF_1
0x1b8a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1071	channel.c	FUNCTION_34	IF_1
0x1b91	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1071	channel.c	FUNCTION_34	IF_1
0x1b98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1070	channel.c	FUNCTION_34	IF_1	CALL_3
0x1b9c	      0xbe00000000	                              mov esi, 0	      1070	channel.c	FUNCTION_34	IF_1	CALL_3
0x1ba1	          0x4889c7	                            mov rdi, rax	      1070	channel.c	FUNCTION_34	IF_1	CALL_3
0x1ba4	      0xb800000000	                              mov eax, 0	      1070	channel.c	FUNCTION_34	IF_1	CALL_3
0x1ba9	      0xe800000000	                          call 0x4001bee	      1070	channel.c	FUNCTION_34	IF_1	CALL_3
0x1bae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1072	channel.c	FUNCTION_34	IF_1	IF_2
0x1bb2	            0x8b00	                    mov eax, dword [rax]	      1072	channel.c	FUNCTION_34	IF_1	IF_2
0x1bb4	      0x2500004000	                       and eax, 0x400000	      1072	channel.c	FUNCTION_34	IF_1	IF_2
0x1bb9	            0x85c0	                           test eax, eax	      1072	channel.c	FUNCTION_34	IF_1	IF_2
0x1bbb	            0x7479	                            je 0x4001c76	      1072	channel.c	FUNCTION_34	IF_1	IF_2
0x1bbd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bc1	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bc8	          0x4885c0	                           test rax, rax	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bcb	            0x7551	                           jne 0x4001c5e	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bd1	            0x8b00	                    mov eax, dword [rax]	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bd3	      0x2500008000	                       and eax, 0x800000	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bd8	            0x85c0	                           test eax, eax	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bda	            0x7542	                           jne 0x4001c5e	      1074	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bdc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1078	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1be0	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1078	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1be7	    0xc780341c0000	            mov dword [rax + 0x1c34], 1 	      1078	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bf1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1079	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bf5	    0xc780f8000000	               mov dword [rax + 0xf8], 1	      1079	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1bff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1c03	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1081	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1c0a	          0x488b00	                    mov rax, qword [rax]	      1081	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1c0d	        0x488d5001	                      lea rdx, [rax + 1]	      1081	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1c11	        0x488b45f8	                mov rax, qword [rbp - 8]	      1080	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1c15	    0x488990000100	            mov qword [rax + 0x100], rdx	      1080	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1c1c	            0xeb27	                           jmp 0x4001c85	      1080	channel.c	FUNCTION_34	IF_1	IF_2	IF_3
0x1c1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1084	channel.c	FUNCTION_34	IF_1	IF_2	ELSE_1
0x1c22	    0x488b90900100	           mov rdx, qword [rax + 0x190] 	      1084	channel.c	FUNCTION_34	IF_1	IF_2	ELSE_1
0x1c29	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	channel.c	FUNCTION_34	IF_1	IF_2	ELSE_1
0x1c2d	    0x488990000100	            mov qword [rax + 0x100], rdx	      1084	channel.c	FUNCTION_34	IF_1	IF_2	ELSE_1
0x1c34	            0xeb0f	                           jmp 0x4001c85	      1084	channel.c	FUNCTION_34	IF_1	IF_2	ELSE_1
0x1c36	        0x488b45f8	                mov rax, qword [rbp - 8]	      1087	channel.c	FUNCTION_34	IF_1	ELSE_2
0x1c3a	    0x48c780000100	              mov qword [rax + 0x100], 1	      1087	channel.c	FUNCTION_34	IF_1	ELSE_2
0x1c45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1088	channel.c	FUNCTION_34	IF_1	IF_4
0x1c49	            0x8b00	                    mov eax, dword [rax]	      1088	channel.c	FUNCTION_34	IF_1	IF_4
0x1c4b	      0x2500008000	                       and eax, 0x800000	      1088	channel.c	FUNCTION_34	IF_1	IF_4
0x1c50	            0x85c0	                           test eax, eax	      1088	channel.c	FUNCTION_34	IF_1	IF_4
0x1c52	            0x7418	                            je 0x4001cac	      1088	channel.c	FUNCTION_34	IF_1	IF_4
0x1c54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	channel.c	FUNCTION_34	IF_1	IF_4
0x1c58	    0x488b90980100	           mov rdx, qword [rax + 0x198] 	      1089	channel.c	FUNCTION_34	IF_1	IF_4
0x1c5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1089	channel.c	FUNCTION_34	IF_1	IF_4
0x1c63	    0x488990080100	            mov qword [rax + 0x108], rdx	      1089	channel.c	FUNCTION_34	IF_1	IF_4
0x1c6a	            0xeb19	                           jmp 0x4001cc5	      1093	channel.c	FUNCTION_34	ELSE_3
0x1c6c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1091	channel.c	FUNCTION_34	IF_1	ELSE_3
0x1c70	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1091	channel.c	FUNCTION_34	IF_1	ELSE_3
0x1c77	          0x488b10	                    mov rdx, qword [rax]	      1091	channel.c	FUNCTION_34	IF_1	ELSE_3
0x1c7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1091	channel.c	FUNCTION_34	IF_1	ELSE_3
0x1c7e	    0x488990080100	            mov qword [rax + 0x108], rdx	      1091	channel.c	FUNCTION_34	IF_1	ELSE_3
0x1c85	              0x90	                                     nop	      1093	channel.c	FUNCTION_34	ELSE_3
0x1c86	              0xc9	                                   leave	      1093	channel.c	FUNCTION_34	ELSE_3
0x1c87	              0xc3	                                     ret	      1093	channel.c	FUNCTION_34	ELSE_3
free_job_options	functions,0:SWITCH,0:CALL,11:ELSE,5:IF,11:FOR,0:WHILE,0:DO,0	100
0x84f7	              0x55	                                push rbp	      4452	channel.c	FUNCTION_108
0x84f8	          0x4889e5	                            mov rbp, rsp	      4452	channel.c	FUNCTION_108
0x84fb	        0x4883ec10	                           sub rsp, 0x10	      4452	channel.c	FUNCTION_108
0x84ff	        0x48897df8	                mov qword [rbp - 8], rdi	      4452	channel.c	FUNCTION_108
0x8503	        0x488b45f8	                mov rax, qword [rbp - 8]	      4453	channel.c	FUNCTION_108	IF_1
0x8507	    0x488b80a80100	           mov rax, qword [rax + 0x1a8] 	      4453	channel.c	FUNCTION_108	IF_1
0x850e	          0x4885c0	                           test rax, rax	      4453	channel.c	FUNCTION_108	IF_1
0x8511	            0x7415	                            je 0x4008568	      4453	channel.c	FUNCTION_108	IF_1
0x8513	        0x488b45f8	                mov rax, qword [rbp - 8]	      4454	channel.c	FUNCTION_108	CALL_1
0x8517	    0x488b80a80100	           mov rax, qword [rax + 0x1a8] 	      4454	channel.c	FUNCTION_108	CALL_1
0x851e	          0x4889c7	                            mov rdi, rax	      4454	channel.c	FUNCTION_108	CALL_1
0x8521	      0xe800000000	                          call 0x4008566	      4454	channel.c	FUNCTION_108	CALL_1
0x8526	            0xeb23	                           jmp 0x400858b	      4454	channel.c	FUNCTION_108	CALL_1
0x8528	        0x488b45f8	                mov rax, qword [rbp - 8]	      4455	channel.c	FUNCTION_108	ELSE_1	IF_2
0x852c	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      4455	channel.c	FUNCTION_108	ELSE_1	IF_2
0x8533	          0x4885c0	                           test rax, rax	      4455	channel.c	FUNCTION_108	ELSE_1	IF_2
0x8536	            0x7413	                            je 0x400858b	      4455	channel.c	FUNCTION_108	ELSE_1	IF_2
0x8538	        0x488b45f8	                mov rax, qword [rbp - 8]	      4456	channel.c	FUNCTION_108	ELSE_1	IF_2
0x853c	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      4456	channel.c	FUNCTION_108	ELSE_1	IF_2
0x8543	          0x4889c7	                            mov rdi, rax	      4456	channel.c	FUNCTION_108	ELSE_1	IF_2
0x8546	      0xe800000000	                          call 0x400858b	      4456	channel.c	FUNCTION_108	ELSE_1	IF_2
0x854b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4457	channel.c	FUNCTION_108	IF_3
0x854f	    0x488b80b80100	           mov rax, qword [rax + 0x1b8] 	      4457	channel.c	FUNCTION_108	IF_3
0x8556	          0x4885c0	                           test rax, rax	      4457	channel.c	FUNCTION_108	IF_3
0x8559	            0x7415	                            je 0x40085b0	      4457	channel.c	FUNCTION_108	IF_3
0x855b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4458	channel.c	FUNCTION_108	CALL_3
0x855f	    0x488b80b80100	           mov rax, qword [rax + 0x1b8] 	      4458	channel.c	FUNCTION_108	CALL_3
0x8566	          0x4889c7	                            mov rdi, rax	      4458	channel.c	FUNCTION_108	CALL_3
0x8569	      0xe800000000	                          call 0x40085ae	      4458	channel.c	FUNCTION_108	CALL_3
0x856e	            0xeb23	                           jmp 0x40085d3	      4458	channel.c	FUNCTION_108	CALL_3
0x8570	        0x488b45f8	                mov rax, qword [rbp - 8]	      4459	channel.c	FUNCTION_108	ELSE_2	IF_4
0x8574	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      4459	channel.c	FUNCTION_108	ELSE_2	IF_4
0x857b	          0x4885c0	                           test rax, rax	      4459	channel.c	FUNCTION_108	ELSE_2	IF_4
0x857e	            0x7413	                            je 0x40085d3	      4459	channel.c	FUNCTION_108	ELSE_2	IF_4
0x8580	        0x488b45f8	                mov rax, qword [rbp - 8]	      4460	channel.c	FUNCTION_108	ELSE_2	IF_4
0x8584	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      4460	channel.c	FUNCTION_108	ELSE_2	IF_4
0x858b	          0x4889c7	                            mov rdi, rax	      4460	channel.c	FUNCTION_108	ELSE_2	IF_4
0x858e	      0xe800000000	                          call 0x40085d3	      4460	channel.c	FUNCTION_108	ELSE_2	IF_4
0x8593	        0x488b45f8	                mov rax, qword [rbp - 8]	      4461	channel.c	FUNCTION_108	IF_5
0x8597	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      4461	channel.c	FUNCTION_108	IF_5
0x859e	          0x4885c0	                           test rax, rax	      4461	channel.c	FUNCTION_108	IF_5
0x85a1	            0x7415	                            je 0x40085f8	      4461	channel.c	FUNCTION_108	IF_5
0x85a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4462	channel.c	FUNCTION_108	CALL_5
0x85a7	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      4462	channel.c	FUNCTION_108	CALL_5
0x85ae	          0x4889c7	                            mov rdi, rax	      4462	channel.c	FUNCTION_108	CALL_5
0x85b1	      0xe800000000	                          call 0x40085f6	      4462	channel.c	FUNCTION_108	CALL_5
0x85b6	            0xeb23	                           jmp 0x400861b	      4462	channel.c	FUNCTION_108	CALL_5
0x85b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4463	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85bc	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      4463	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85c3	          0x4885c0	                           test rax, rax	      4463	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85c6	            0x7413	                            je 0x400861b	      4463	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85c8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4464	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85cc	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      4464	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85d3	          0x4889c7	                            mov rdi, rax	      4464	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85d6	      0xe800000000	                          call 0x400861b	      4464	channel.c	FUNCTION_108	ELSE_3	IF_6
0x85db	        0x488b45f8	                mov rax, qword [rbp - 8]	      4465	channel.c	FUNCTION_108	IF_7
0x85df	    0x488b80d80100	           mov rax, qword [rax + 0x1d8] 	      4465	channel.c	FUNCTION_108	IF_7
0x85e6	          0x4885c0	                           test rax, rax	      4465	channel.c	FUNCTION_108	IF_7
0x85e9	            0x7415	                            je 0x4008640	      4465	channel.c	FUNCTION_108	IF_7
0x85eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4466	channel.c	FUNCTION_108	CALL_7
0x85ef	    0x488b80d80100	           mov rax, qword [rax + 0x1d8] 	      4466	channel.c	FUNCTION_108	CALL_7
0x85f6	          0x4889c7	                            mov rdi, rax	      4466	channel.c	FUNCTION_108	CALL_7
0x85f9	      0xe800000000	                          call 0x400863e	      4466	channel.c	FUNCTION_108	CALL_7
0x85fe	            0xeb23	                           jmp 0x4008663	      4466	channel.c	FUNCTION_108	CALL_7
0x8600	        0x488b45f8	                mov rax, qword [rbp - 8]	      4467	channel.c	FUNCTION_108	ELSE_4	IF_8
0x8604	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      4467	channel.c	FUNCTION_108	ELSE_4	IF_8
0x860b	          0x4885c0	                           test rax, rax	      4467	channel.c	FUNCTION_108	ELSE_4	IF_8
0x860e	            0x7413	                            je 0x4008663	      4467	channel.c	FUNCTION_108	ELSE_4	IF_8
0x8610	        0x488b45f8	                mov rax, qword [rbp - 8]	      4468	channel.c	FUNCTION_108	ELSE_4	IF_8
0x8614	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      4468	channel.c	FUNCTION_108	ELSE_4	IF_8
0x861b	          0x4889c7	                            mov rdi, rax	      4468	channel.c	FUNCTION_108	ELSE_4	IF_8
0x861e	      0xe800000000	                          call 0x4008663	      4468	channel.c	FUNCTION_108	ELSE_4	IF_8
0x8623	        0x488b45f8	                mov rax, qword [rbp - 8]	      4469	channel.c	FUNCTION_108	IF_9
0x8627	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4469	channel.c	FUNCTION_108	IF_9
0x862e	          0x4885c0	                           test rax, rax	      4469	channel.c	FUNCTION_108	IF_9
0x8631	            0x7415	                            je 0x4008688	      4469	channel.c	FUNCTION_108	IF_9
0x8633	        0x488b45f8	                mov rax, qword [rbp - 8]	      4470	channel.c	FUNCTION_108	CALL_9
0x8637	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4470	channel.c	FUNCTION_108	CALL_9
0x863e	          0x4889c7	                            mov rdi, rax	      4470	channel.c	FUNCTION_108	CALL_9
0x8641	      0xe800000000	                          call 0x4008686	      4470	channel.c	FUNCTION_108	CALL_9
0x8646	            0xeb23	                           jmp 0x40086ab	      4470	channel.c	FUNCTION_108	CALL_9
0x8648	        0x488b45f8	                mov rax, qword [rbp - 8]	      4471	channel.c	FUNCTION_108	ELSE_5	IF_10
0x864c	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      4471	channel.c	FUNCTION_108	ELSE_5	IF_10
0x8653	          0x4885c0	                           test rax, rax	      4471	channel.c	FUNCTION_108	ELSE_5	IF_10
0x8656	            0x7413	                            je 0x40086ab	      4471	channel.c	FUNCTION_108	ELSE_5	IF_10
0x8658	        0x488b45f8	                mov rax, qword [rbp - 8]	      4472	channel.c	FUNCTION_108	ELSE_5	IF_10
0x865c	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      4472	channel.c	FUNCTION_108	ELSE_5	IF_10
0x8663	          0x4889c7	                            mov rdi, rax	      4472	channel.c	FUNCTION_108	ELSE_5	IF_10
0x8666	      0xe800000000	                          call 0x40086ab	      4472	channel.c	FUNCTION_108	ELSE_5	IF_10
0x866b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4473	channel.c	FUNCTION_108	IF_11
0x866f	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4473	channel.c	FUNCTION_108	IF_11
0x8676	          0x4885c0	                           test rax, rax	      4473	channel.c	FUNCTION_108	IF_11
0x8679	            0x7413	                            je 0x40086ce	      4473	channel.c	FUNCTION_108	IF_11
0x867b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4474	channel.c	FUNCTION_108	CALL_11
0x867f	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      4474	channel.c	FUNCTION_108	CALL_11
0x8686	          0x4889c7	                            mov rdi, rax	      4474	channel.c	FUNCTION_108	CALL_11
0x8689	      0xe800000000	                          call 0x40086ce	      4474	channel.c	FUNCTION_108	CALL_11
0x868e	              0x90	                                     nop	      4475	channel.c	FUNCTION_108
0x868f	              0xc9	                                   leave	      4475	channel.c	FUNCTION_108
0x8690	              0xc3	                                     ret	      4475	channel.c	FUNCTION_108
job_stop	functions,0:SWITCH,0:CALL,8:ELSE,2:IF,7:FOR,0:WHILE,0:DO,0	87
0xba8b	              0x55	                                push rbp	      5797	channel.c	FUNCTION_137
0xba8c	          0x4889e5	                            mov rbp, rsp	      5797	channel.c	FUNCTION_137
0xba8f	        0x4883ec30	                           sub rsp, 0x30	      5797	channel.c	FUNCTION_137
0xba93	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5797	channel.c	FUNCTION_137
0xba97	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5797	channel.c	FUNCTION_137
0xba9b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5797	channel.c	FUNCTION_137
0xba9f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5800	channel.c	FUNCTION_137	IF_1
0xbaa4	            0x740a	                            je 0x400baf0	      5800	channel.c	FUNCTION_137	IF_1
0xbaa6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5801	channel.c	FUNCTION_137	IF_1
0xbaaa	        0x488945f8	                mov qword [rbp - 8], rax	      5801	channel.c	FUNCTION_137	IF_1
0xbaae	            0xeb4f	                           jmp 0x400bb3f	      5801	channel.c	FUNCTION_137	IF_1
0xbab0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5802	channel.c	FUNCTION_137	ELSE_1	IF_2
0xbab4	        0x4883c010	                           add rax, 0x10	      5802	channel.c	FUNCTION_137	ELSE_1	IF_2
0xbab8	            0x8b00	                    mov eax, dword [rax]	      5802	channel.c	FUNCTION_137	ELSE_1	IF_2
0xbaba	            0x85c0	                           test eax, eax	      5802	channel.c	FUNCTION_137	ELSE_1	IF_2
0xbabc	            0x750a	                           jne 0x400bb08	      5802	channel.c	FUNCTION_137	ELSE_1	IF_2
0xbabe	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5803	channel.c	FUNCTION_137	ELSE_1	IF_2
0xbac6	            0xeb37	                           jmp 0x400bb3f	      5803	channel.c	FUNCTION_137	ELSE_1	IF_2
0xbac8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5806	channel.c	FUNCTION_137	ELSE_2	CALL_1
0xbacc	        0x4883c010	                           add rax, 0x10	      5806	channel.c	FUNCTION_137	ELSE_2	CALL_1
0xbad0	          0x4889c7	                            mov rdi, rax	      5806	channel.c	FUNCTION_137	ELSE_2	CALL_1
0xbad3	      0xe800000000	                          call 0x400bb18	      5806	channel.c	FUNCTION_137	ELSE_2	CALL_1
0xbad8	        0x488945f8	                mov qword [rbp - 8], rax	      5806	channel.c	FUNCTION_137	ELSE_2	CALL_1
0xbadc	      0x48837df800	                  cmp qword [rbp - 8], 0	      5807	channel.c	FUNCTION_137	ELSE_2	IF_3
0xbae1	            0x751c	                           jne 0x400bb3f	      5807	channel.c	FUNCTION_137	ELSE_2	IF_3
0xbae3	      0xbf00000000	                              mov edi, 0	      5809	channel.c	FUNCTION_137	ELSE_2	IF_3	CALL_3
0xbae8	      0xe800000000	                          call 0x400bb2d	      5809	channel.c	FUNCTION_137	ELSE_2	IF_3	CALL_3
0xbaed	          0x4889c7	                            mov rdi, rax	      5809	channel.c	FUNCTION_137	ELSE_2	IF_3	CALL_3
0xbaf0	      0xe800000000	                          call 0x400bb35	      5809	channel.c	FUNCTION_137	ELSE_2	IF_3	CALL_3
0xbaf5	      0xb800000000	                              mov eax, 0	      5810	channel.c	FUNCTION_137	ELSE_2	IF_3
0xbafa	      0xe9d1000000	                           jmp 0x400bc10	      5810	channel.c	FUNCTION_137	ELSE_2	IF_3
0xbaff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5813	channel.c	FUNCTION_137	IF_4
0xbb03	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5813	channel.c	FUNCTION_137	IF_4
0xbb06	            0x85c0	                           test eax, eax	      5813	channel.c	FUNCTION_137	IF_4
0xbb08	            0x7524	                           jne 0x400bb6e	      5813	channel.c	FUNCTION_137	IF_4
0xbb0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5815	channel.c	FUNCTION_137	IF_4	CALL_4
0xbb0e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5815	channel.c	FUNCTION_137	IF_4	CALL_4
0xbb12	      0xbe00000000	                              mov esi, 0	      5815	channel.c	FUNCTION_137	IF_4	CALL_4
0xbb17	          0x4889c7	                            mov rdi, rax	      5815	channel.c	FUNCTION_137	IF_4	CALL_4
0xbb1a	      0xb800000000	                              mov eax, 0	      5815	channel.c	FUNCTION_137	IF_4	CALL_4
0xbb1f	      0xe800000000	                          call 0x400bb64	      5815	channel.c	FUNCTION_137	IF_4	CALL_4
0xbb24	      0xb800000000	                              mov eax, 0	      5816	channel.c	FUNCTION_137	IF_4
0xbb29	      0xe9a2000000	                           jmp 0x400bc10	      5816	channel.c	FUNCTION_137	IF_4
0xbb2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5818	channel.c	FUNCTION_137	IF_5
0xbb32	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5818	channel.c	FUNCTION_137	IF_5
0xbb35	          0x83f802	                              cmp eax, 2	      5818	channel.c	FUNCTION_137	IF_5
0xbb38	            0x7521	                           jne 0x400bb9b	      5818	channel.c	FUNCTION_137	IF_5
0xbb3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5820	channel.c	FUNCTION_137	IF_5	CALL_5
0xbb3e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5820	channel.c	FUNCTION_137	IF_5	CALL_5
0xbb42	      0xbe00000000	                              mov esi, 0	      5820	channel.c	FUNCTION_137	IF_5	CALL_5
0xbb47	          0x4889c7	                            mov rdi, rax	      5820	channel.c	FUNCTION_137	IF_5	CALL_5
0xbb4a	      0xb800000000	                              mov eax, 0	      5820	channel.c	FUNCTION_137	IF_5	CALL_5
0xbb4f	      0xe800000000	                          call 0x400bb94	      5820	channel.c	FUNCTION_137	IF_5	CALL_5
0xbb54	      0xb800000000	                              mov eax, 0	      5821	channel.c	FUNCTION_137	IF_5
0xbb59	            0xeb75	                           jmp 0x400bc10	      5821	channel.c	FUNCTION_137	IF_5
0xbb5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5823	channel.c	FUNCTION_137	CALL_6
0xbb5f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5823	channel.c	FUNCTION_137	CALL_6
0xbb63	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5823	channel.c	FUNCTION_137	CALL_6
0xbb67	      0xbe00000000	                              mov esi, 0	      5823	channel.c	FUNCTION_137	CALL_6
0xbb6c	          0x4889c7	                            mov rdi, rax	      5823	channel.c	FUNCTION_137	CALL_6
0xbb6f	      0xb800000000	                              mov eax, 0	      5823	channel.c	FUNCTION_137	CALL_6
0xbb74	      0xe800000000	                          call 0x400bbb9	      5823	channel.c	FUNCTION_137	CALL_6
0xbb79	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5824	channel.c	FUNCTION_137	IF_6	CALL_7
0xbb7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5824	channel.c	FUNCTION_137	IF_6	CALL_7
0xbb81	          0x4889d6	                            mov rsi, rdx	      5824	channel.c	FUNCTION_137	IF_6	CALL_7
0xbb84	          0x4889c7	                            mov rdi, rax	      5824	channel.c	FUNCTION_137	IF_6	CALL_7
0xbb87	      0xe800000000	                          call 0x400bbcc	      5824	channel.c	FUNCTION_137	IF_6	CALL_7
0xbb8c	            0x85c0	                           test eax, eax	      5824	channel.c	FUNCTION_137	IF_6	CALL_7
0xbb8e	            0x7507	                           jne 0x400bbd7	      5824	channel.c	FUNCTION_137	IF_6	CALL_7
0xbb90	      0xb800000000	                              mov eax, 0	      5825	channel.c	FUNCTION_137	IF_6
0xbb95	            0xeb39	                           jmp 0x400bc10	      5825	channel.c	FUNCTION_137	IF_6
0xbb97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbb9b	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbb9f	          0x4885c0	                           test rax, rax	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbba2	            0x7427	                            je 0x400bc0b	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbba4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbba8	      0xbe00000000	                              mov esi, 0	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbbad	          0x4889c7	                            mov rdi, rax	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbbb0	      0xe800000000	                          call 0x400bbf5	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbbb5	            0x85c0	                           test eax, eax	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbbb7	            0x7512	                           jne 0x400bc0b	      5828	channel.c	FUNCTION_137	IF_7	CALL_8
0xbbb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5829	channel.c	FUNCTION_137	IF_7
0xbbbd	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5829	channel.c	FUNCTION_137	IF_7
0xbbc1	    0xc780b0040000	              mov dword [rax + 0x4b0], 1	      5829	channel.c	FUNCTION_137	IF_7
0xbbcb	      0xb801000000	                              mov eax, 1	      5833	channel.c	FUNCTION_137
0xbbd0	              0xc9	                                   leave	      5834	channel.c	FUNCTION_137
0xbbd1	              0xc3	                                     ret	      5834	channel.c	FUNCTION_137
channel_may_free	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	17
0x7cd	              0x55	                                push rbp	       402	channel.c	FUNCTION_17
0x7ce	          0x4889e5	                            mov rbp, rsp	       402	channel.c	FUNCTION_17
0x7d1	        0x4883ec10	                           sub rsp, 0x10	       402	channel.c	FUNCTION_17
0x7d5	        0x48897df8	                mov qword [rbp - 8], rdi	       402	channel.c	FUNCTION_17
0x7d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       403	channel.c	FUNCTION_17	IF_1	CALL_1
0x7dd	          0x4889c7	                            mov rdi, rax	       403	channel.c	FUNCTION_17	IF_1	CALL_1
0x7e0	      0xe844fdffff	           call sym.channel_still_useful	       403	channel.c	FUNCTION_17	IF_1	CALL_1
0x7e5	            0x85c0	                           test eax, eax	       403	channel.c	FUNCTION_17	IF_1	CALL_1
0x7e7	            0x7513	                           jne 0x400083c	       403	channel.c	FUNCTION_17	IF_1	CALL_1
0x7e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       405	channel.c	FUNCTION_17	IF_1	CALL_2
0x7ed	          0x4889c7	                            mov rdi, rax	       405	channel.c	FUNCTION_17	IF_1	CALL_2
0x7f0	      0xe88dffffff	                   call sym.channel_free	       405	channel.c	FUNCTION_17	IF_1	CALL_2
0x7f5	      0xb801000000	                              mov eax, 1	       406	channel.c	FUNCTION_17	IF_1
0x7fa	            0xeb05	                           jmp 0x4000841	       406	channel.c	FUNCTION_17	IF_1
0x7fc	      0xb800000000	                              mov eax, 0	       408	channel.c	FUNCTION_17
0x801	              0xc9	                                   leave	       409	channel.c	FUNCTION_17
0x802	              0xc3	                                     ret	       409	channel.c	FUNCTION_17
channel_close	functions,0:SWITCH,0:CALL,17:ELSE,0:IF,7:FOR,2:WHILE,1:DO,0	190
0x5a73	              0x55	                                push rbp	      2868	channel.c	FUNCTION_71
0x5a74	          0x4889e5	                            mov rbp, rsp	      2868	channel.c	FUNCTION_71
0x5a77	              0x53	                                push rbx	      2868	channel.c	FUNCTION_71
0x5a78	        0x4883ec58	                           sub rsp, 0x58	      2868	channel.c	FUNCTION_71
0x5a7c	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2868	channel.c	FUNCTION_71
0x5a80	          0x8975a4	             mov dword [rbp - 0x5c], esi	      2868	channel.c	FUNCTION_71
0x5a83	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	channel.c	FUNCTION_71
0x5a8c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2868	channel.c	FUNCTION_71
0x5a90	            0x31c0	                            xor eax, eax	      2868	channel.c	FUNCTION_71
0x5a92	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2869	channel.c	FUNCTION_71	CALL_1
0x5a96	      0xbe00000000	                              mov esi, 0	      2869	channel.c	FUNCTION_71	CALL_1
0x5a9b	          0x4889c7	                            mov rdi, rax	      2869	channel.c	FUNCTION_71	CALL_1
0x5a9e	      0xb800000000	                              mov eax, 0	      2869	channel.c	FUNCTION_71	CALL_1
0x5aa3	      0xe800000000	                          call 0x4005ae8	      2869	channel.c	FUNCTION_71	CALL_1
0x5aa8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2872	channel.c	FUNCTION_71	CALL_2
0x5aac	          0x4889c7	                            mov rdi, rax	      2872	channel.c	FUNCTION_71	CALL_2
0x5aaf	      0xe8cbb1ffff	         call sym.channel_gui_unregister	      2872	channel.c	FUNCTION_71	CALL_2
0x5ab4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2875	channel.c	FUNCTION_71	CALL_3
0x5ab8	      0xbe00000000	                              mov esi, 0	      2875	channel.c	FUNCTION_71	CALL_3
0x5abd	          0x4889c7	                            mov rdi, rax	      2875	channel.c	FUNCTION_71	CALL_3
0x5ac0	      0xe844beffff	                  call sym.ch_close_part	      2875	channel.c	FUNCTION_71	CALL_3
0x5ac5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2876	channel.c	FUNCTION_71	CALL_4
0x5ac9	      0xbe03000000	                              mov esi, 3	      2876	channel.c	FUNCTION_71	CALL_4
0x5ace	          0x4889c7	                            mov rdi, rax	      2876	channel.c	FUNCTION_71	CALL_4
0x5ad1	      0xe833beffff	                  call sym.ch_close_part	      2876	channel.c	FUNCTION_71	CALL_4
0x5ad6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2877	channel.c	FUNCTION_71	CALL_5
0x5ada	      0xbe01000000	                              mov esi, 1	      2877	channel.c	FUNCTION_71	CALL_5
0x5adf	          0x4889c7	                            mov rdi, rax	      2877	channel.c	FUNCTION_71	CALL_5
0x5ae2	      0xe822beffff	                  call sym.ch_close_part	      2877	channel.c	FUNCTION_71	CALL_5
0x5ae7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2878	channel.c	FUNCTION_71	CALL_6
0x5aeb	      0xbe02000000	                              mov esi, 2	      2878	channel.c	FUNCTION_71	CALL_6
0x5af0	          0x4889c7	                            mov rdi, rax	      2878	channel.c	FUNCTION_71	CALL_6
0x5af3	      0xe811beffff	                  call sym.ch_close_part	      2878	channel.c	FUNCTION_71	CALL_6
0x5af8	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2880	channel.c	FUNCTION_71	IF_1
0x5afc	     0xf845f020000	                            je 0x4005da1	      2880	channel.c	FUNCTION_71	IF_1
0x5b02	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2885	channel.c	FUNCTION_71	IF_1	IF_2
0x5b06	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2885	channel.c	FUNCTION_71	IF_1	IF_2
0x5b0d	          0x4885c0	                           test rax, rax	      2885	channel.c	FUNCTION_71	IF_1	IF_2
0x5b10	            0x7416	                            je 0x4005b68	      2885	channel.c	FUNCTION_71	IF_1	IF_2
0x5b12	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2886	channel.c	FUNCTION_71	IF_1	IF_2	CALL_7
0x5b16	      0xbe00000000	                              mov esi, 0	      2886	channel.c	FUNCTION_71	IF_1	IF_2	CALL_7
0x5b1b	          0x4889c7	                            mov rdi, rax	      2886	channel.c	FUNCTION_71	IF_1	IF_2	CALL_7
0x5b1e	      0xb800000000	                              mov eax, 0	      2886	channel.c	FUNCTION_71	IF_1	IF_2	CALL_7
0x5b23	      0xe800000000	                          call 0x4005b68	      2886	channel.c	FUNCTION_71	IF_1	IF_2	CALL_7
0x5b28	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2888	channel.c	FUNCTION_71	IF_1	FOR_1
0x5b2f	      0xe9af000000	                           jmp 0x4005c23	      2888	channel.c	FUNCTION_71	IF_1	FOR_1
0x5b34	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2890	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b38	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2890	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b3f	          0x4885c0	                           test rax, rax	      2890	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b42	            0x7526	                           jne 0x4005baa	      2890	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b44	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b48	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b4b	        0x48c1e004	                              shl rax, 4	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b4f	          0x4889c1	                            mov rcx, rax	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b52	        0x48c1e104	                              shl rcx, 4	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b56	          0x4801c8	                            add rax, rcx	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b59	          0x4801d0	                            add rax, rdx	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b5c	    0x4805f8000000	                           add rax, 0xf8	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b62	          0x488b00	                    mov rax, qword [rax]	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b65	          0x4885c0	                           test rax, rax	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b68	            0x7475	                            je 0x4005c1f	      2891	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b6a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2895	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b6e	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2895	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b74	          0x8d5001	                      lea edx, [rax + 1]	      2895	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b77	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2895	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b7b	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2895	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5b81	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2896	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4
0x5b85	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2896	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4
0x5b8c	          0x4885c0	                           test rax, rax	      2896	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4
0x5b8f	            0x7521	                           jne 0x4005bf2	      2896	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4
0x5b91	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2897	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x5b94	    0x488b14c50000	                  mov rdx, qword [rax*8]	      2897	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x5b9c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2897	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x5ba0	      0xbe00000000	                              mov esi, 0	      2897	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x5ba5	          0x4889c7	                            mov rdi, rax	      2897	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x5ba8	      0xb800000000	                              mov eax, 0	      2897	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x5bad	      0xe800000000	                          call 0x4005bf2	      2897	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	IF_4	CALL_8
0x5bb2	              0x90	                                     nop	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bb3	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bb6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bba	            0x89d6	                            mov esi, edx	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bbc	          0x4889c7	                            mov rdi, rax	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bbf	      0xe801f0ffff	            call sym.may_invoke_callback	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bc4	            0x85c0	                           test eax, eax	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bc6	            0x75eb	                           jne 0x4005bf3	      2899	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3	WHILE_1	CALL_9
0x5bc8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2901	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5bcc	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2901	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5bd2	          0x8d50ff	                      lea edx, [rax - 1]	      2901	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5bd5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2901	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5bd9	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2901	channel.c	FUNCTION_71	IF_1	FOR_1	IF_3
0x5bdf	        0x8345bc01	               add dword [rbp - 0x44], 1	      2888	channel.c	FUNCTION_71	IF_1	FOR_1
0x5be3	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      2888	channel.c	FUNCTION_71	IF_1	FOR_1
0x5be7	     0xf8647ffffff	                           jbe 0x4005b74	      2888	channel.c	FUNCTION_71	IF_1	FOR_1
0x5bed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2905	channel.c	FUNCTION_71	IF_1	IF_5
0x5bf1	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2905	channel.c	FUNCTION_71	IF_1	IF_5
0x5bf8	          0x4885c0	                           test rax, rax	      2905	channel.c	FUNCTION_71	IF_1	IF_5
0x5bfb	     0xf8460010000	                            je 0x4005da1	      2905	channel.c	FUNCTION_71	IF_1	IF_5
0x5c01	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2913	channel.c	FUNCTION_71	IF_1	IF_5
0x5c05	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2913	channel.c	FUNCTION_71	IF_1	IF_5
0x5c0b	          0x8d5001	                      lea edx, [rax + 1]	      2913	channel.c	FUNCTION_71	IF_1	IF_5
0x5c0e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2913	channel.c	FUNCTION_71	IF_1	IF_5
0x5c12	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2913	channel.c	FUNCTION_71	IF_1	IF_5
0x5c18	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2915	channel.c	FUNCTION_71	IF_1	IF_5
0x5c1c	    0x488b90900400	           mov rdx, qword [rax + 0x490] 	      2915	channel.c	FUNCTION_71	IF_1	IF_5
0x5c23	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2914	channel.c	FUNCTION_71	IF_1	IF_5	CALL_10
0x5c27	      0xbe00000000	                              mov esi, 0	      2914	channel.c	FUNCTION_71	IF_1	IF_5	CALL_10
0x5c2c	          0x4889c7	                            mov rdi, rax	      2914	channel.c	FUNCTION_71	IF_1	IF_5	CALL_10
0x5c2f	      0xb800000000	                              mov eax, 0	      2914	channel.c	FUNCTION_71	IF_1	IF_5	CALL_10
0x5c34	      0xe800000000	                          call 0x4005c79	      2914	channel.c	FUNCTION_71	IF_1	IF_5	CALL_10
0x5c39	    0xc745d00a0000	             mov dword [rbp - 0x30], 0xa	      2916	channel.c	FUNCTION_71	IF_1	IF_5
0x5c40	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2917	channel.c	FUNCTION_71	IF_1	IF_5
0x5c44	        0x488945d8	             mov qword [rbp - 0x28], rax	      2917	channel.c	FUNCTION_71	IF_1	IF_5
0x5c48	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c4c	    0x488b98980400	           mov rbx, qword [rax + 0x498] 	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c53	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c57	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c5e	          0x4889c7	                            mov rdi, rax	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c61	      0xe800000000	                          call 0x4005ca6	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c66	            0x89c7	                            mov edi, eax	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c68	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c6c	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c73	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c77	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c7b	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c7d	              0x53	                                push rbx	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c7e	            0x6a01	                                  push 1	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c80	        0x488d4db8	                   lea rcx, [rbp - 0x48]	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c84	              0x51	                                push rcx	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c85	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c87	            0x6a00	                                  push 0	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c89	    0x41b900000000	                              mov r9d, 0	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c8f	          0x4989f0	                             mov r8, rsi	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c92	      0xb901000000	                              mov ecx, 1	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c97	            0x89fe	                            mov esi, edi	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c99	          0x4889c7	                            mov rdi, rax	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5c9c	      0xe800000000	                          call 0x4005ce1	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5ca1	        0x4883c430	                           add rsp, 0x30	      2918	channel.c	FUNCTION_71	IF_1	IF_5	CALL_12
0x5ca5	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2921	channel.c	FUNCTION_71	IF_1	IF_5	CALL_13
0x5ca9	          0x4889c7	                            mov rdi, rax	      2921	channel.c	FUNCTION_71	IF_1	IF_5	CALL_13
0x5cac	      0xe800000000	                          call 0x4005cf1	      2921	channel.c	FUNCTION_71	IF_1	IF_5	CALL_13
0x5cb1	    0xc70500000000	               mov dword [0x04005cfb], 1	      2922	channel.c	FUNCTION_71	IF_1	IF_5
0x5cbb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2925	channel.c	FUNCTION_71	IF_1	IF_5	CALL_14
0x5cbf	    0x488b90980400	           mov rdx, qword [rax + 0x498] 	      2925	channel.c	FUNCTION_71	IF_1	IF_5	CALL_14
0x5cc6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2925	channel.c	FUNCTION_71	IF_1	IF_5	CALL_14
0x5cca	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2925	channel.c	FUNCTION_71	IF_1	IF_5	CALL_14
0x5cd1	          0x4889d6	                            mov rsi, rdx	      2925	channel.c	FUNCTION_71	IF_1	IF_5	CALL_14
0x5cd4	          0x4889c7	                            mov rdi, rax	      2925	channel.c	FUNCTION_71	IF_1	IF_5	CALL_14
0x5cd7	      0xe800000000	                          call 0x4005d1c	      2925	channel.c	FUNCTION_71	IF_1	IF_5	CALL_14
0x5cdc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2926	channel.c	FUNCTION_71	IF_1	IF_5
0x5ce0	    0x48c780900400	              mov qword [rax + 0x490], 0	      2926	channel.c	FUNCTION_71	IF_1	IF_5
0x5ceb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2927	channel.c	FUNCTION_71	IF_1	IF_5
0x5cef	    0x48c780980400	              mov qword [rax + 0x498], 0	      2927	channel.c	FUNCTION_71	IF_1	IF_5
0x5cfa	    0x8b0500000000	            mov eax, dword [0x04005d40] 	      2929	channel.c	FUNCTION_71	IF_1	IF_5	IF_6
0x5d00	            0x85c0	                           test eax, eax	      2929	channel.c	FUNCTION_71	IF_1	IF_5	IF_6
0x5d02	            0x7414	                            je 0x4005d58	      2929	channel.c	FUNCTION_71	IF_1	IF_5	IF_6
0x5d04	    0xc70500000000	               mov dword [0x04005d4e], 0	      2931	channel.c	FUNCTION_71	IF_1	IF_5	IF_6
0x5d0e	      0xbf01000000	                              mov edi, 1	      2932	channel.c	FUNCTION_71	IF_1	IF_5	IF_6	CALL_15
0x5d13	      0xe800000000	                          call 0x4005d58	      2932	channel.c	FUNCTION_71	IF_1	IF_5	IF_6	CALL_15
0x5d18	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2935	channel.c	FUNCTION_71	IF_1	IF_5	IF_7
0x5d1c	    0x8b80a0040000	           mov eax, dword [rax + 0x4a0] 	      2935	channel.c	FUNCTION_71	IF_1	IF_5	IF_7
0x5d22	            0x85c0	                           test eax, eax	      2935	channel.c	FUNCTION_71	IF_1	IF_5	IF_7
0x5d24	            0x7524	                           jne 0x4005d8a	      2935	channel.c	FUNCTION_71	IF_1	IF_5	IF_7
0x5d26	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2937	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d2d	            0xeb15	                           jmp 0x4005d84	      2937	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d2f	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2938	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d32	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2938	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d36	            0x89d6	                            mov esi, edx	      2938	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d38	          0x4889c7	                            mov rdi, rax	      2938	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d3b	      0xe82feeffff	                  call sym.drop_messages	      2938	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d40	        0x8345bc01	               add dword [rbp - 0x44], 1	      2937	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d44	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      2937	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d48	            0x76e5	                           jbe 0x4005d6f	      2937	channel.c	FUNCTION_71	IF_1	IF_5	IF_7	FOR_2
0x5d4a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2940	channel.c	FUNCTION_71	IF_1	IF_5
0x5d4e	    0x8b80b4040000	           mov eax, dword [rax + 0x4b4] 	      2940	channel.c	FUNCTION_71	IF_1	IF_5
0x5d54	          0x8d50ff	                      lea edx, [rax - 1]	      2940	channel.c	FUNCTION_71	IF_1	IF_5
0x5d57	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2940	channel.c	FUNCTION_71	IF_1	IF_5
0x5d5b	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      2940	channel.c	FUNCTION_71	IF_1	IF_5
0x5d61	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2944	channel.c	FUNCTION_71
0x5d65	    0x48c780780400	              mov qword [rax + 0x478], 0	      2944	channel.c	FUNCTION_71
0x5d70	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2947	channel.c	FUNCTION_71	CALL_17
0x5d74	          0x4889c7	                            mov rdi, rax	      2947	channel.c	FUNCTION_71	CALL_17
0x5d77	      0xe800000000	                          call 0x4005dbc	      2947	channel.c	FUNCTION_71	CALL_17
0x5d7c	              0x90	                                     nop	      2949	channel.c	FUNCTION_71
0x5d7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2949	channel.c	FUNCTION_71
0x5d81	    0x644833042528	                xor rax, qword fs:[0x28]	      2949	channel.c	FUNCTION_71
0x5d8a	            0x7405	                            je 0x4005dd1	      2949	channel.c	FUNCTION_71
0x5d8c	      0xe800000000	                          call 0x4005dd1	      2949	channel.c	FUNCTION_71
0x5d91	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2949	channel.c	FUNCTION_71
0x5d95	              0xc9	                                   leave	      2949	channel.c	FUNCTION_71
0x5d96	              0xc3	                                     ret	      2949	channel.c	FUNCTION_71
channel_consume	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	45
0x30fa	              0x55	                                push rbp	      1715	channel.c	FUNCTION_51
0x30fb	          0x4889e5	                            mov rbp, rsp	      1715	channel.c	FUNCTION_51
0x30fe	        0x4883ec30	                           sub rsp, 0x30	      1715	channel.c	FUNCTION_51
0x3102	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1715	channel.c	FUNCTION_51
0x3106	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1715	channel.c	FUNCTION_51
0x3109	          0x8955d0	             mov dword [rbp - 0x30], edx	      1715	channel.c	FUNCTION_51
0x310c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1716	channel.c	FUNCTION_51
0x310f	        0x48c1e004	                              shl rax, 4	      1716	channel.c	FUNCTION_51
0x3113	          0x4889c2	                            mov rdx, rax	      1716	channel.c	FUNCTION_51
0x3116	        0x48c1e204	                              shl rdx, 4	      1716	channel.c	FUNCTION_51
0x311a	          0x4801d0	                            add rax, rdx	      1716	channel.c	FUNCTION_51
0x311d	        0x488d5020	                   lea rdx, [rax + 0x20]	      1716	channel.c	FUNCTION_51
0x3121	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1716	channel.c	FUNCTION_51
0x3125	          0x4801d0	                            add rax, rdx	      1716	channel.c	FUNCTION_51
0x3128	        0x4883c010	                           add rax, 0x10	      1716	channel.c	FUNCTION_51
0x312c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1716	channel.c	FUNCTION_51
0x3130	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1717	channel.c	FUNCTION_51
0x3134	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1717	channel.c	FUNCTION_51
0x3138	        0x488945f0	             mov qword [rbp - 0x10], rax	      1717	channel.c	FUNCTION_51
0x313c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1718	channel.c	FUNCTION_51
0x3140	          0x488b00	                    mov rax, qword [rax]	      1718	channel.c	FUNCTION_51
0x3143	        0x488945f8	                mov qword [rbp - 8], rax	      1718	channel.c	FUNCTION_51
0x3147	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1720	channel.c	FUNCTION_51	CALL_1
0x314b	        0x488b5008	                mov rdx, qword [rax + 8]	      1720	channel.c	FUNCTION_51	CALL_1
0x314f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1720	channel.c	FUNCTION_51	CALL_1
0x3152	            0x4898	                                    cdqe	      1720	channel.c	FUNCTION_51	CALL_1
0x3154	          0x4829c2	                            sub rdx, rax	      1720	channel.c	FUNCTION_51	CALL_1
0x3157	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1720	channel.c	FUNCTION_51	CALL_1
0x315a	          0x4863c8	                         movsxd rcx, eax	      1720	channel.c	FUNCTION_51	CALL_1
0x315d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1720	channel.c	FUNCTION_51	CALL_1
0x3161	          0x4801c1	                            add rcx, rax	      1720	channel.c	FUNCTION_51	CALL_1
0x3164	        0x488b45f8	                mov rax, qword [rbp - 8]	      1720	channel.c	FUNCTION_51	CALL_1
0x3168	          0x4889ce	                            mov rsi, rcx	      1720	channel.c	FUNCTION_51	CALL_1
0x316b	          0x4889c7	                            mov rdi, rax	      1720	channel.c	FUNCTION_51	CALL_1
0x316e	      0xe800000000	                          call 0x40031b3	      1720	channel.c	FUNCTION_51	CALL_1
0x3173	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1721	channel.c	FUNCTION_51
0x3177	        0x488b5008	                mov rdx, qword [rax + 8]	      1721	channel.c	FUNCTION_51
0x317b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1721	channel.c	FUNCTION_51
0x317e	            0x4898	                                    cdqe	      1721	channel.c	FUNCTION_51
0x3180	          0x4829c2	                            sub rdx, rax	      1721	channel.c	FUNCTION_51
0x3183	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1721	channel.c	FUNCTION_51
0x3187	        0x48895008	                mov qword [rax + 8], rdx	      1721	channel.c	FUNCTION_51
0x318b	              0x90	                                     nop	      1722	channel.c	FUNCTION_51
0x318c	              0xc9	                                   leave	      1722	channel.c	FUNCTION_51
0x318d	              0xc3	                                     ret	      1722	channel.c	FUNCTION_51
drop_messages	functions,0:SWITCH,0:CALL,3:ELSE,0:IF,0:FOR,0:WHILE,1:DO,0	26
0x4b6f	              0x55	                                push rbp	      2448	channel.c	FUNCTION_63
0x4b70	          0x4889e5	                            mov rbp, rsp	      2448	channel.c	FUNCTION_63
0x4b73	        0x4883ec20	                           sub rsp, 0x20	      2448	channel.c	FUNCTION_63
0x4b77	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2448	channel.c	FUNCTION_63
0x4b7b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2448	channel.c	FUNCTION_63
0x4b7e	            0xeb26	                           jmp 0x4004be6	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4b80	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2453	channel.c	FUNCTION_63	WHILE_1	CALL_2
0x4b84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2453	channel.c	FUNCTION_63	WHILE_1	CALL_2
0x4b88	      0xbe00000000	                              mov esi, 0	      2453	channel.c	FUNCTION_63	WHILE_1	CALL_2
0x4b8d	          0x4889c7	                            mov rdi, rax	      2453	channel.c	FUNCTION_63	WHILE_1	CALL_2
0x4b90	      0xb800000000	                              mov eax, 0	      2453	channel.c	FUNCTION_63	WHILE_1	CALL_2
0x4b95	      0xe800000000	                          call 0x4004bda	      2453	channel.c	FUNCTION_63	WHILE_1	CALL_2
0x4b9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2454	channel.c	FUNCTION_63	WHILE_1	CALL_3
0x4b9e	          0x4889c7	                            mov rdi, rax	      2454	channel.c	FUNCTION_63	WHILE_1	CALL_3
0x4ba1	      0xe800000000	                          call 0x4004be6	      2454	channel.c	FUNCTION_63	WHILE_1	CALL_3
0x4ba6	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4ba9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4bad	            0x89d6	                            mov esi, edx	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4baf	          0x4889c7	                            mov rdi, rax	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4bb2	      0xe800000000	                          call 0x4004bf7	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4bb7	        0x488945f8	                mov qword [rbp - 8], rax	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4bbb	      0x48837df800	                  cmp qword [rbp - 8], 0	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4bc0	            0x75be	                           jne 0x4004bc0	      2451	channel.c	FUNCTION_63	WHILE_1	CALL_1
0x4bc2	              0x90	                                     nop	      2456	channel.c	FUNCTION_63
0x4bc3	              0xc9	                                   leave	      2456	channel.c	FUNCTION_63
0x4bc4	              0xc3	                                     ret	      2456	channel.c	FUNCTION_63
remove_json_node	functions,0:SWITCH,0:CALL,1:ELSE,2:IF,2:FOR,0:WHILE,0:DO,0	39
0x3cd2	              0x55	                                push rbp	      2073	channel.c	ELSE_2	FUNCTION_57
0x3cd3	          0x4889e5	                            mov rbp, rsp	      2073	channel.c	ELSE_2	FUNCTION_57
0x3cd6	        0x4883ec10	                           sub rsp, 0x10	      2073	channel.c	ELSE_2	FUNCTION_57
0x3cda	        0x48897df8	                mov qword [rbp - 8], rdi	      2073	channel.c	ELSE_2	FUNCTION_57
0x3cde	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2073	channel.c	ELSE_2	FUNCTION_57
0x3ce2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2074	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3ce6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2074	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3cea	          0x4885c0	                           test rax, rax	      2074	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3ced	            0x7512	                           jne 0x4003d41	      2074	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3cef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2075	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3cf3	        0x488b5008	                mov rdx, qword [rax + 8]	      2075	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3cf7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2075	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3cfb	        0x48895008	                mov qword [rax + 8], rdx	      2075	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3cff	            0xeb14	                           jmp 0x4003d55	      2075	channel.c	ELSE_2	FUNCTION_57	IF_1
0x3d01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2077	channel.c	ELSE_2	FUNCTION_57	ELSE_1
0x3d05	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2077	channel.c	ELSE_2	FUNCTION_57	ELSE_1
0x3d09	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2077	channel.c	ELSE_2	FUNCTION_57	ELSE_1
0x3d0d	        0x488b5208	                mov rdx, qword [rdx + 8]	      2077	channel.c	ELSE_2	FUNCTION_57	ELSE_1
0x3d11	        0x48895008	                mov qword [rax + 8], rdx	      2077	channel.c	ELSE_2	FUNCTION_57	ELSE_1
0x3d15	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2078	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d19	        0x488b4008	                mov rax, qword [rax + 8]	      2078	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d1d	          0x4885c0	                           test rax, rax	      2078	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d20	            0x7512	                           jne 0x4003d74	      2078	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2079	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d26	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2079	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2079	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d2e	        0x48895010	             mov qword [rax + 0x10], rdx	      2079	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d32	            0xeb14	                           jmp 0x4003d88	      2079	channel.c	ELSE_2	FUNCTION_57	IF_2
0x3d34	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2081	channel.c	FUNCTION_57	ELSE_2
0x3d38	        0x488b4008	                mov rax, qword [rax + 8]	      2081	channel.c	FUNCTION_57	ELSE_2
0x3d3c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2081	channel.c	FUNCTION_57	ELSE_2
0x3d40	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      2081	channel.c	FUNCTION_57	ELSE_2
0x3d44	        0x48895010	             mov qword [rax + 0x10], rdx	      2081	channel.c	FUNCTION_57	ELSE_2
0x3d48	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2082	channel.c	FUNCTION_57	ELSE_2	CALL_1
0x3d4c	          0x4889c7	                            mov rdi, rax	      2082	channel.c	FUNCTION_57	ELSE_2	CALL_1
0x3d4f	      0xe800000000	                          call 0x4003d94	      2082	channel.c	FUNCTION_57	ELSE_2	CALL_1
0x3d54	              0x90	                                     nop	      2083	channel.c	FUNCTION_57	ELSE_2
0x3d55	              0xc9	                                   leave	      2083	channel.c	FUNCTION_57	ELSE_2
0x3d56	              0xc3	                                     ret	      2083	channel.c	FUNCTION_57	ELSE_2
write_buf_line	functions,0:SWITCH,0:CALL,6:ELSE,1:IF,3:FOR,1:WHILE,0:DO,0	85
0x25a3	              0x55	                                push rbp	      1332	channel.c	ELSE_2	FUNCTION_39
0x25a4	          0x4889e5	                            mov rbp, rsp	      1332	channel.c	ELSE_2	FUNCTION_39
0x25a7	        0x4883ec40	                           sub rsp, 0x40	      1332	channel.c	ELSE_2	FUNCTION_39
0x25ab	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1332	channel.c	ELSE_2	FUNCTION_39
0x25af	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1332	channel.c	ELSE_2	FUNCTION_39
0x25b3	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1332	channel.c	ELSE_2	FUNCTION_39
0x25b7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1333	channel.c	ELSE_2	FUNCTION_39	CALL_1
0x25bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1333	channel.c	ELSE_2	FUNCTION_39	CALL_1
0x25bf	      0xba00000000	                              mov edx, 0	      1333	channel.c	ELSE_2	FUNCTION_39	CALL_1
0x25c4	          0x4889ce	                            mov rsi, rcx	      1333	channel.c	ELSE_2	FUNCTION_39	CALL_1
0x25c7	          0x4889c7	                            mov rdi, rax	      1333	channel.c	ELSE_2	FUNCTION_39	CALL_1
0x25ca	      0xe800000000	                          call 0x400260f	      1333	channel.c	ELSE_2	FUNCTION_39	CALL_1
0x25cf	        0x488945f0	             mov qword [rbp - 0x10], rax	      1333	channel.c	ELSE_2	FUNCTION_39	CALL_1
0x25d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1334	channel.c	ELSE_2	FUNCTION_39	CALL_2
0x25d7	          0x4889c7	                            mov rdi, rax	      1334	channel.c	ELSE_2	FUNCTION_39	CALL_2
0x25da	      0xe800000000	                          call 0x400261f	      1334	channel.c	ELSE_2	FUNCTION_39	CALL_2
0x25df	          0x8945ec	             mov dword [rbp - 0x14], eax	      1334	channel.c	ELSE_2	FUNCTION_39	CALL_2
0x25e2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1339	channel.c	ELSE_2	FUNCTION_39	IF_1	CALL_3
0x25e5	          0x83c002	                              add eax, 2	      1339	channel.c	ELSE_2	FUNCTION_39	IF_1	CALL_3
0x25e8	            0x89c7	                            mov edi, eax	      1339	channel.c	ELSE_2	FUNCTION_39	IF_1	CALL_3
0x25ea	      0xe800000000	                          call 0x400262f	      1339	channel.c	ELSE_2	FUNCTION_39	IF_1	CALL_3
0x25ef	        0x488945f8	                mov qword [rbp - 8], rax	      1339	channel.c	ELSE_2	FUNCTION_39	IF_1	CALL_3
0x25f3	      0x48837df800	                  cmp qword [rbp - 8], 0	      1339	channel.c	ELSE_2	FUNCTION_39	IF_1	CALL_3
0x25f8	     0xf84c4000000	                            je 0x4002702	      1339	channel.c	ELSE_2	FUNCTION_39	IF_1	CALL_3
0x25fe	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1341	channel.c	ELSE_2	FUNCTION_39	CALL_4
0x2601	          0x4863d0	                         movsxd rdx, eax	      1341	channel.c	ELSE_2	FUNCTION_39	CALL_4
0x2604	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1341	channel.c	ELSE_2	FUNCTION_39	CALL_4
0x2608	        0x488b45f8	                mov rax, qword [rbp - 8]	      1341	channel.c	ELSE_2	FUNCTION_39	CALL_4
0x260c	          0x4889ce	                            mov rsi, rcx	      1341	channel.c	ELSE_2	FUNCTION_39	CALL_4
0x260f	          0x4889c7	                            mov rdi, rax	      1341	channel.c	ELSE_2	FUNCTION_39	CALL_4
0x2612	      0xe800000000	                          call 0x4002657	      1341	channel.c	ELSE_2	FUNCTION_39	CALL_4
0x2617	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1343	channel.c	ELSE_2	FUNCTION_39	IF_2
0x261b	    0x8b8058040000	           mov eax, dword [rax + 0x458] 	      1343	channel.c	ELSE_2	FUNCTION_39	IF_2
0x2621	            0x85c0	                           test eax, eax	      1343	channel.c	ELSE_2	FUNCTION_39	IF_2
0x2623	            0x7412	                            je 0x4002677	      1343	channel.c	ELSE_2	FUNCTION_39	IF_2
0x2625	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1344	channel.c	ELSE_2	FUNCTION_39	IF_2
0x2628	          0x4863d0	                         movsxd rdx, eax	      1344	channel.c	ELSE_2	FUNCTION_39	IF_2
0x262b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1344	channel.c	ELSE_2	FUNCTION_39	IF_2
0x262f	          0x4801d0	                            add rax, rdx	      1344	channel.c	ELSE_2	FUNCTION_39	IF_2
0x2632	          0xc6000d	                     mov byte [rax], 0xd	      1344	channel.c	ELSE_2	FUNCTION_39	IF_2
0x2635	            0xeb49	                           jmp 0x40026c0	      1344	channel.c	ELSE_2	FUNCTION_39	IF_2
0x2637	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1347	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1
0x263e	            0xeb28	                           jmp 0x40026a8	      1347	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1
0x2640	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1348	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2643	          0x4863d0	                         movsxd rdx, eax	      1348	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2646	        0x488b45f8	                mov rax, qword [rbp - 8]	      1348	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x264a	          0x4801d0	                            add rax, rdx	      1348	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x264d	           0xfb600	                   movzx eax, byte [rax]	      1348	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2650	            0x3c0a	                             cmp al, 0xa	      1348	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2652	            0x7510	                           jne 0x40026a4	      1348	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2654	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1349	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2657	          0x4863d0	                         movsxd rdx, eax	      1349	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x265a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1349	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x265e	          0x4801d0	                            add rax, rdx	      1349	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2661	          0xc60000	                       mov byte [rax], 0	      1349	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1	IF_3
0x2664	        0x8345e801	               add dword [rbp - 0x18], 1	      1347	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1
0x2668	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1347	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1
0x266b	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1347	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1
0x266e	            0x7cd0	                            jl 0x4002680	      1347	channel.c	ELSE_2	FUNCTION_39	ELSE_1	FOR_1
0x2670	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1351	channel.c	ELSE_2	FUNCTION_39	ELSE_1
0x2673	          0x4863d0	                         movsxd rdx, eax	      1351	channel.c	ELSE_2	FUNCTION_39	ELSE_1
0x2676	        0x488b45f8	                mov rax, qword [rbp - 8]	      1351	channel.c	ELSE_2	FUNCTION_39	ELSE_1
0x267a	          0x4801d0	                            add rax, rdx	      1351	channel.c	ELSE_2	FUNCTION_39	ELSE_1
0x267d	          0xc6000a	                     mov byte [rax], 0xa	      1351	channel.c	ELSE_2	FUNCTION_39	ELSE_1
0x2680	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1353	channel.c	ELSE_2	FUNCTION_39
0x2683	            0x4898	                                    cdqe	      1353	channel.c	ELSE_2	FUNCTION_39
0x2685	        0x488d5001	                      lea rdx, [rax + 1]	      1353	channel.c	ELSE_2	FUNCTION_39
0x2689	        0x488b45f8	                mov rax, qword [rbp - 8]	      1353	channel.c	ELSE_2	FUNCTION_39
0x268d	          0x4801d0	                            add rax, rdx	      1353	channel.c	ELSE_2	FUNCTION_39
0x2690	          0xc60000	                       mov byte [rax], 0	      1353	channel.c	ELSE_2	FUNCTION_39
0x2693	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x2696	          0x8d4801	                      lea ecx, [rax + 1]	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x2699	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x269d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x26a1	    0x41b800000000	                              mov r8d, 0	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x26a7	      0xbe03000000	                              mov esi, 3	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x26ac	          0x4889c7	                            mov rdi, rax	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x26af	      0xe800000000	                          call 0x40026f4	      1354	channel.c	ELSE_2	FUNCTION_39	CALL_5
0x26b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1355	channel.c	ELSE_2	FUNCTION_39	CALL_6
0x26b8	          0x4889c7	                            mov rdi, rax	      1355	channel.c	ELSE_2	FUNCTION_39	CALL_6
0x26bb	      0xe800000000	                          call 0x4002700	      1355	channel.c	ELSE_2	FUNCTION_39	CALL_6
0x26c0	            0xeb01	                           jmp 0x4002703	      1355	channel.c	ELSE_2	FUNCTION_39	CALL_6
0x26c2	              0x90	                                     nop	      1340	channel.c	ELSE_2	FUNCTION_39	IF_1
0x26c3	              0xc9	                                   leave	      1356	channel.c	ELSE_2	FUNCTION_39
0x26c4	              0xc3	                                     ret	      1356	channel.c	ELSE_2	FUNCTION_39
channel_get_json	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,2:FOR,0:WHILE,1:DO,0	102
0x3d57	              0x55	                                push rbp	      2101	channel.c	FUNCTION_58
0x3d58	          0x4889e5	                            mov rbp, rsp	      2101	channel.c	FUNCTION_58
0x3d5b	        0x4883ec40	                           sub rsp, 0x40	      2101	channel.c	FUNCTION_58
0x3d5f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2101	channel.c	FUNCTION_58
0x3d63	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2101	channel.c	FUNCTION_58
0x3d66	          0x8955d0	             mov dword [rbp - 0x30], edx	      2101	channel.c	FUNCTION_58
0x3d69	          0x894dcc	             mov dword [rbp - 0x34], ecx	      2101	channel.c	FUNCTION_58
0x3d6c	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      2101	channel.c	FUNCTION_58
0x3d70	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2102	channel.c	FUNCTION_58
0x3d73	        0x48c1e004	                              shl rax, 4	      2102	channel.c	FUNCTION_58
0x3d77	          0x4889c2	                            mov rdx, rax	      2102	channel.c	FUNCTION_58
0x3d7a	        0x48c1e204	                              shl rdx, 4	      2102	channel.c	FUNCTION_58
0x3d7e	          0x4801d0	                            add rax, rdx	      2102	channel.c	FUNCTION_58
0x3d81	        0x488d5040	                   lea rdx, [rax + 0x40]	      2102	channel.c	FUNCTION_58
0x3d85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	channel.c	FUNCTION_58
0x3d89	          0x4801d0	                            add rax, rdx	      2102	channel.c	FUNCTION_58
0x3d8c	        0x4883c010	                           add rax, 0x10	      2102	channel.c	FUNCTION_58
0x3d90	        0x488945e8	             mov qword [rbp - 0x18], rax	      2102	channel.c	FUNCTION_58
0x3d94	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2103	channel.c	FUNCTION_58
0x3d98	        0x488b4008	                mov rax, qword [rax + 8]	      2103	channel.c	FUNCTION_58
0x3d9c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2103	channel.c	FUNCTION_58
0x3da0	      0xe902010000	                           jmp 0x4003ee7	      2105	channel.c	FUNCTION_58	WHILE_1
0x3da5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2107	channel.c	FUNCTION_58	WHILE_1
0x3da9	          0x488b00	                    mov rax, qword [rax]	      2107	channel.c	FUNCTION_58	WHILE_1
0x3dac	        0x488b4008	                mov rax, qword [rax + 8]	      2107	channel.c	FUNCTION_58	WHILE_1
0x3db0	        0x488945f0	             mov qword [rbp - 0x10], rax	      2107	channel.c	FUNCTION_58	WHILE_1
0x3db4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2108	channel.c	FUNCTION_58	WHILE_1
0x3db8	          0x488b00	                    mov rax, qword [rax]	      2108	channel.c	FUNCTION_58	WHILE_1
0x3dbb	        0x4883c010	                           add rax, 0x10	      2108	channel.c	FUNCTION_58	WHILE_1
0x3dbf	        0x488945f8	                mov qword [rbp - 8], rax	      2108	channel.c	FUNCTION_58	WHILE_1
0x3dc3	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2110	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dc7	            0x750f	                           jne 0x4003e18	      2110	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dc9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2110	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dcd	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2110	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dd0	            0x85c0	                           test eax, eax	      2110	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dd2	     0xf85c3000000	                           jne 0x4003edb	      2110	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dd8	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3ddc	            0x7e1d	                           jle 0x4003e3b	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dde	        0x488b45f8	                mov rax, qword [rbp - 8]	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3de2	            0x8b00	                    mov eax, dword [rax]	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3de4	          0x83f801	                              cmp eax, 1	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3de7	            0x7512	                           jne 0x4003e3b	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3de9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3ded	        0x488b5008	                mov rdx, qword [rax + 8]	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3df1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3df4	            0x4898	                                    cdqe	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3df6	          0x4839c2	                            cmp rdx, rax	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3df9	            0x744f	                            je 0x4003e8a	      2111	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dfb	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2112	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3dff	     0xf8f96000000	                            jg 0x4003edb	      2112	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e05	        0x488b45f8	                mov rax, qword [rbp - 8]	      2112	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e09	            0x8b00	                    mov eax, dword [rax]	      2112	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e0b	          0x83f801	                              cmp eax, 1	      2112	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e0e	            0x753a	                           jne 0x4003e8a	      2112	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e10	        0x488b45f8	                mov rax, qword [rbp - 8]	      2113	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e14	        0x488b4008	                mov rax, qword [rax + 8]	      2113	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e18	          0x4885c0	                           test rax, rax	      2113	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e1b	            0x742d	                            je 0x4003e8a	      2113	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e1d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e21	        0x488b5008	                mov rdx, qword [rax + 8]	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e25	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e29	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e2c	        0x48c1e004	                              shl rax, 4	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e30	          0x4889c6	                            mov rsi, rax	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e33	        0x48c1e604	                              shl rsi, 4	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e37	          0x4801f0	                            add rax, rsi	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e3a	          0x4801c8	                            add rax, rcx	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e3d	        0x4883c070	                           add rax, 0x70	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e41	            0x8b00	                    mov eax, dword [rax]	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e43	            0x4898	                                    cdqe	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e45	          0x4839c2	                            cmp rdx, rax	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e48	            0x7451	                            je 0x4003edb	      2114	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2116	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e4e	          0x488b10	                    mov rdx, qword [rax]	      2116	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e51	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2116	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e55	          0x488910	                    mov qword [rax], rdx	      2116	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e58	        0x488b45f8	                mov rax, qword [rbp - 8]	      2117	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2
0x3e5c	            0x8b00	                    mov eax, dword [rax]	      2117	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2
0x3e5e	          0x83f801	                              cmp eax, 1	      2117	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2
0x3e61	            0x751e	                           jne 0x4003ec1	      2117	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2
0x3e63	        0x488b45f8	                mov rax, qword [rbp - 8]	      2119	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2
0x3e67	        0x488b5008	                mov rdx, qword [rax + 8]	      2119	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2
0x3e6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2	CALL_1
0x3e6f	      0xbe00000000	                              mov esi, 0	      2118	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2	CALL_1
0x3e74	          0x4889c7	                            mov rdi, rax	      2118	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2	CALL_1
0x3e77	      0xb800000000	                              mov eax, 0	      2118	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2	CALL_1
0x3e7c	      0xe800000000	                          call 0x4003ec1	      2118	channel.c	FUNCTION_58	WHILE_1	IF_1	IF_2	CALL_1
0x3e81	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2120	channel.c	FUNCTION_58	WHILE_1	IF_1	CALL_2
0x3e85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2120	channel.c	FUNCTION_58	WHILE_1	IF_1	CALL_2
0x3e89	          0x4889d6	                            mov rsi, rdx	      2120	channel.c	FUNCTION_58	WHILE_1	IF_1	CALL_2
0x3e8c	          0x4889c7	                            mov rdi, rax	      2120	channel.c	FUNCTION_58	WHILE_1	IF_1	CALL_2
0x3e8f	      0xe83efeffff	               call sym.remove_json_node	      2120	channel.c	FUNCTION_58	WHILE_1	IF_1	CALL_2
0x3e94	      0xb801000000	                              mov eax, 1	      2121	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e99	            0xeb1c	                           jmp 0x4003ef7	      2121	channel.c	FUNCTION_58	WHILE_1	IF_1
0x3e9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2123	channel.c	FUNCTION_58	WHILE_1
0x3e9f	        0x488b4008	                mov rax, qword [rax + 8]	      2123	channel.c	FUNCTION_58	WHILE_1
0x3ea3	        0x488945e0	             mov qword [rbp - 0x20], rax	      2123	channel.c	FUNCTION_58	WHILE_1
0x3ea7	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2105	channel.c	FUNCTION_58	WHILE_1
0x3eac	     0xf85f3feffff	                           jne 0x4003de5	      2105	channel.c	FUNCTION_58	WHILE_1
0x3eb2	      0xb800000000	                              mov eax, 0	      2125	channel.c	FUNCTION_58
0x3eb7	              0xc9	                                   leave	      2126	channel.c	FUNCTION_58
0x3eb8	              0xc3	                                     ret	      2126	channel.c	FUNCTION_58
send_common	functions,0:SWITCH,0:CALL,10:ELSE,0:IF,5:FOR,0:WHILE,0:DO,0	98
0x7582	              0x55	                                push rbp	      3883	channel.c	FUNCTION_91
0x7583	          0x4889e5	                            mov rbp, rsp	      3883	channel.c	FUNCTION_91
0x7586	        0x4883ec40	                           sub rsp, 0x40	      3883	channel.c	FUNCTION_91
0x758a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3883	channel.c	FUNCTION_91
0x758e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3883	channel.c	FUNCTION_91
0x7592	          0x8955dc	             mov dword [rbp - 0x24], edx	      3883	channel.c	FUNCTION_91
0x7595	          0x894dd8	             mov dword [rbp - 0x28], ecx	      3883	channel.c	FUNCTION_91
0x7598	        0x4c8945d0	              mov qword [rbp - 0x30], r8	      3883	channel.c	FUNCTION_91
0x759c	        0x4c894dc8	              mov qword [rbp - 0x38], r9	      3883	channel.c	FUNCTION_91
0x75a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3887	channel.c	FUNCTION_91	CALL_1
0x75a4	          0x4889c7	                            mov rdi, rax	      3887	channel.c	FUNCTION_91	CALL_1
0x75a7	      0xe800000000	                          call 0x40075ec	      3887	channel.c	FUNCTION_91	CALL_1
0x75ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3888	channel.c	FUNCTION_91	CALL_2
0x75b0	      0xb900000000	                              mov ecx, 0	      3888	channel.c	FUNCTION_91	CALL_2
0x75b5	      0xba00000000	                              mov edx, 0	      3888	channel.c	FUNCTION_91	CALL_2
0x75ba	      0xbe01000000	                              mov esi, 1	      3888	channel.c	FUNCTION_91	CALL_2
0x75bf	          0x4889c7	                            mov rdi, rax	      3888	channel.c	FUNCTION_91	CALL_2
0x75c2	      0xe800000000	                          call 0x4007607	      3888	channel.c	FUNCTION_91	CALL_2
0x75c7	        0x488945f8	                mov qword [rbp - 8], rax	      3888	channel.c	FUNCTION_91	CALL_2
0x75cb	      0x48837df800	                  cmp qword [rbp - 8], 0	      3889	channel.c	FUNCTION_91	IF_1
0x75d0	            0x750a	                           jne 0x400761c	      3889	channel.c	FUNCTION_91	IF_1
0x75d2	      0xb800000000	                              mov eax, 0	      3890	channel.c	FUNCTION_91	IF_1
0x75d7	      0xe912010000	                           jmp 0x400772e	      3890	channel.c	FUNCTION_91	IF_1
0x75dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3891	channel.c	FUNCTION_91	CALL_3
0x75e0	          0x4889c7	                            mov rdi, rax	      3891	channel.c	FUNCTION_91	CALL_3
0x75e3	      0xe800000000	                          call 0x4007628	      3891	channel.c	FUNCTION_91	CALL_3
0x75e8	          0x8945f4	              mov dword [rbp - 0xc], eax	      3891	channel.c	FUNCTION_91	CALL_3
0x75eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3892	channel.c	FUNCTION_91	CALL_4
0x75ef	          0x4889c7	                            mov rdi, rax	      3892	channel.c	FUNCTION_91	CALL_4
0x75f2	      0xe800000000	                          call 0x4007637	      3892	channel.c	FUNCTION_91	CALL_4
0x75f7	            0x89c2	                            mov edx, eax	      3892	channel.c	FUNCTION_91	CALL_4
0x75f9	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3892	channel.c	FUNCTION_91	CALL_4
0x75fd	            0x8910	                    mov dword [rax], edx	      3892	channel.c	FUNCTION_91	CALL_4
0x75ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x7603	        0x488d7820	                   lea rdi, [rax + 0x20]	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x7607	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x760b	      0xb900000000	                              mov ecx, 0	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x7610	      0xba10020000	                          mov edx, 0x210	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x7615	          0x4889c6	                            mov rsi, rax	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x7618	      0xe800000000	                          call 0x400765d	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x761d	            0x85c0	                           test eax, eax	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x761f	            0x750a	                           jne 0x400766b	      3894	channel.c	FUNCTION_91	IF_2	CALL_5
0x7621	      0xb800000000	                              mov eax, 0	      3895	channel.c	FUNCTION_91	IF_2
0x7626	      0xe9c3000000	                           jmp 0x400772e	      3895	channel.c	FUNCTION_91	IF_2
0x762b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3900	channel.c	FUNCTION_91	IF_3
0x762f	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      3900	channel.c	FUNCTION_91	IF_3
0x7636	          0x4885c0	                           test rax, rax	      3900	channel.c	FUNCTION_91	IF_3
0x7639	            0x7469	                            je 0x40076e4	      3900	channel.c	FUNCTION_91	IF_3
0x763b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3900	channel.c	FUNCTION_91	IF_3
0x763f	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      3900	channel.c	FUNCTION_91	IF_3
0x7646	           0xfb600	                   movzx eax, byte [rax]	      3900	channel.c	FUNCTION_91	IF_3
0x7649	            0x84c0	                             test al, al	      3900	channel.c	FUNCTION_91	IF_3
0x764b	            0x7457	                            je 0x40076e4	      3900	channel.c	FUNCTION_91	IF_3
0x764d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3902	channel.c	FUNCTION_91	IF_3	IF_4
0x7651	            0x7423	                            je 0x40076b6	      3902	channel.c	FUNCTION_91	IF_3	IF_4
0x7653	      0xbf00000000	                              mov edi, 0	      3904	channel.c	FUNCTION_91	IF_3	IF_4	CALL_7
0x7658	      0xe800000000	                          call 0x400769d	      3904	channel.c	FUNCTION_91	IF_3	IF_4	CALL_7
0x765d	          0x4889c2	                            mov rdx, rax	      3904	channel.c	FUNCTION_91	IF_3	IF_4	CALL_7
0x7660	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3904	channel.c	FUNCTION_91	IF_3	IF_4	CALL_7
0x7664	          0x4889c6	                            mov rsi, rax	      3904	channel.c	FUNCTION_91	IF_3	IF_4	CALL_7
0x7667	          0x4889d7	                            mov rdi, rdx	      3904	channel.c	FUNCTION_91	IF_3	IF_4	CALL_7
0x766a	      0xe800000000	                          call 0x40076af	      3904	channel.c	FUNCTION_91	IF_3	IF_4	CALL_7
0x766f	      0xb800000000	                              mov eax, 0	      3905	channel.c	FUNCTION_91	IF_3	IF_4
0x7674	            0xeb78	                           jmp 0x400772e	      3905	channel.c	FUNCTION_91	IF_3	IF_4
0x7676	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x767a	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x7681	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x7685	    0x488b90a00100	           mov rdx, qword [rax + 0x1a0] 	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x768c	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x7690	            0x8b30	                    mov esi, dword [rax]	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x7692	          0x8b7ddc	             mov edi, dword [rbp - 0x24]	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x7695	        0x488b45f8	                mov rax, qword [rbp - 8]	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x7699	          0x4189f8	                            mov r8d, edi	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x769c	          0x4889c7	                            mov rdi, rax	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x769f	      0xe800000000	                          call 0x40076e4	      3907	channel.c	FUNCTION_91	IF_3	CALL_8
0x76a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76a8	          0x4889c7	                            mov rdi, rax	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76ab	      0xe800000000	                          call 0x40076f0	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76b0	            0x89c7	                            mov edi, eax	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76b2	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76b6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76ba	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76c1	          0x4989c8	                             mov r8, rcx	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76c4	            0x89f9	                            mov ecx, edi	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76c6	          0x4889c7	                            mov rdi, rax	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76c9	      0xe800000000	                          call 0x400770e	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76ce	          0x83f801	                              cmp eax, 1	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76d1	            0x7516	                           jne 0x4007729	      3911	channel.c	FUNCTION_91	IF_5	CALL_10
0x76d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3912	channel.c	FUNCTION_91	IF_5
0x76d7	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	      3912	channel.c	FUNCTION_91	IF_5
0x76de	          0x4885c0	                           test rax, rax	      3912	channel.c	FUNCTION_91	IF_5
0x76e1	            0x7506	                           jne 0x4007729	      3912	channel.c	FUNCTION_91	IF_5
0x76e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3913	channel.c	FUNCTION_91	IF_5
0x76e7	            0xeb05	                           jmp 0x400772e	      3913	channel.c	FUNCTION_91	IF_5
0x76e9	      0xb800000000	                              mov eax, 0	      3914	channel.c	FUNCTION_91
0x76ee	              0xc9	                                   leave	      3915	channel.c	FUNCTION_91
0x76ef	              0xc3	                                     ret	      3915	channel.c	FUNCTION_91
job_cleanup	functions,0:SWITCH,0:CALL,7:ELSE,0:IF,4:FOR,0:WHILE,0:DO,0	103
0xaa38	              0x55	                                push rbp	      5264	channel.c	FUNCTION_123
0xaa39	          0x4889e5	                            mov rbp, rsp	      5264	channel.c	FUNCTION_123
0xaa3c	              0x53	                                push rbx	      5264	channel.c	FUNCTION_123
0xaa3d	        0x4883ec78	                           sub rsp, 0x78	      5264	channel.c	FUNCTION_123
0xaa41	        0x48897d88	             mov qword [rbp - 0x78], rdi	      5264	channel.c	FUNCTION_123
0xaa45	    0x64488b042528	                mov rax, qword fs:[0x28]	      5264	channel.c	FUNCTION_123
0xaa4e	        0x488945e8	             mov qword [rbp - 0x18], rax	      5264	channel.c	FUNCTION_123
0xaa52	            0x31c0	                            xor eax, eax	      5264	channel.c	FUNCTION_123
0xaa54	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5265	channel.c	FUNCTION_123	IF_1
0xaa58	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5265	channel.c	FUNCTION_123	IF_1
0xaa5b	          0x83f802	                              cmp eax, 2	      5265	channel.c	FUNCTION_123	IF_1
0xaa5e	     0xf8538010000	                           jne 0x400abdc	      5265	channel.c	FUNCTION_123	IF_1
0xaa64	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5269	channel.c	FUNCTION_123
0xaa68	    0xc74028030000	               mov dword [rax + 0x28], 3	      5269	channel.c	FUNCTION_123
0xaa6f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5272	channel.c	FUNCTION_123	IF_2
0xaa73	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5272	channel.c	FUNCTION_123	IF_2
0xaa77	          0x4885c0	                           test rax, rax	      5272	channel.c	FUNCTION_123	IF_2
0xaa7a	            0x7415	                            je 0x400aad1	      5272	channel.c	FUNCTION_123	IF_2
0xaa7c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5273	channel.c	FUNCTION_123	CALL_1
0xaa80	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5273	channel.c	FUNCTION_123	CALL_1
0xaa84	      0xbe03000000	                              mov esi, 3	      5273	channel.c	FUNCTION_123	CALL_1
0xaa89	          0x4889c7	                            mov rdi, rax	      5273	channel.c	FUNCTION_123	CALL_1
0xaa8c	      0xe8786effff	                  call sym.ch_close_part	      5273	channel.c	FUNCTION_123	CALL_1
0xaa91	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5275	channel.c	FUNCTION_123	IF_3
0xaa95	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5275	channel.c	FUNCTION_123	IF_3
0xaa99	          0x4885c0	                           test rax, rax	      5275	channel.c	FUNCTION_123	IF_3
0xaa9c	     0xf84d1000000	                            je 0x400abb3	      5275	channel.c	FUNCTION_123	IF_3
0xaaa2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaaa6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaaaa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaaae	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaab2	      0xbe00000000	                              mov esi, 0	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaab7	          0x4889c7	                            mov rdi, rax	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaaba	      0xb800000000	                              mov eax, 0	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaabf	      0xe800000000	                          call 0x400ab04	      5282	channel.c	FUNCTION_123	IF_3	CALL_2
0xaac4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5283	channel.c	FUNCTION_123	IF_3
0xaac8	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5283	channel.c	FUNCTION_123	IF_3
0xaacb	          0x8d5001	                      lea edx, [rax + 1]	      5283	channel.c	FUNCTION_123	IF_3
0xaace	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5283	channel.c	FUNCTION_123	IF_3
0xaad2	          0x895058	             mov dword [rax + 0x58], edx	      5283	channel.c	FUNCTION_123	IF_3
0xaad5	    0xc745b0090000	               mov dword [rbp - 0x50], 9	      5284	channel.c	FUNCTION_123	IF_3
0xaadc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5285	channel.c	FUNCTION_123	IF_3
0xaae0	        0x488945b8	             mov qword [rbp - 0x48], rax	      5285	channel.c	FUNCTION_123	IF_3
0xaae4	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5286	channel.c	FUNCTION_123	IF_3
0xaaeb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5287	channel.c	FUNCTION_123	IF_3
0xaaef	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5287	channel.c	FUNCTION_123	IF_3
0xaaf2	            0x4898	                                    cdqe	      5287	channel.c	FUNCTION_123	IF_3
0xaaf4	        0x488945c8	             mov qword [rbp - 0x38], rax	      5287	channel.c	FUNCTION_123	IF_3
0xaaf8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xaafc	        0x488b5848	            mov rbx, qword [rax + 0x48] 	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab00	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab04	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab08	          0x4889c7	                            mov rdi, rax	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab0b	      0xe800000000	                          call 0x400ab50	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab10	            0x89c7	                            mov edi, eax	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab12	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab16	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab1a	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab1e	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab22	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab24	              0x53	                                push rbx	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab25	            0x6a01	                                  push 1	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab27	        0x488d4d9c	                   lea rcx, [rbp - 0x64]	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab2b	              0x51	                                push rcx	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab2c	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab2e	            0x6a00	                                  push 0	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab30	    0x41b900000000	                              mov r9d, 0	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab36	          0x4989f0	                             mov r8, rsi	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab39	      0xb902000000	                              mov ecx, 2	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab3e	            0x89fe	                            mov esi, edi	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab40	          0x4889c7	                            mov rdi, rax	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab43	      0xe800000000	                          call 0x400ab88	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab48	        0x4883c430	                           add rsp, 0x30	      5288	channel.c	FUNCTION_123	IF_3	CALL_4
0xab4c	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5291	channel.c	FUNCTION_123	IF_3	CALL_5
0xab50	          0x4889c7	                            mov rdi, rax	      5291	channel.c	FUNCTION_123	IF_3	CALL_5
0xab53	      0xe800000000	                          call 0x400ab98	      5291	channel.c	FUNCTION_123	IF_3	CALL_5
0xab58	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5292	channel.c	FUNCTION_123	IF_3
0xab5c	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5292	channel.c	FUNCTION_123	IF_3
0xab5f	          0x8d50ff	                      lea edx, [rax - 1]	      5292	channel.c	FUNCTION_123	IF_3
0xab62	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5292	channel.c	FUNCTION_123	IF_3
0xab66	          0x895058	             mov dword [rax + 0x58], edx	      5292	channel.c	FUNCTION_123	IF_3
0xab69	    0xc70500000000	               mov dword [0x0400abb3], 1	      5293	channel.c	FUNCTION_123	IF_3
0xab73	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab77	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab7a	            0x85c0	                           test eax, eax	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab7c	            0x751f	                           jne 0x400abdd	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab7e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab82	          0x4889c7	                            mov rdi, rax	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab85	      0xe880faffff	       call sym.job_channel_still_useful	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab8a	            0x85c0	                           test eax, eax	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab8c	            0x750f	                           jne 0x400abdd	      5298	channel.c	FUNCTION_123	IF_4	CALL_6
0xab8e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5303	channel.c	FUNCTION_123	IF_4	CALL_7
0xab92	          0x4889c7	                            mov rdi, rax	      5303	channel.c	FUNCTION_123	IF_4	CALL_7
0xab95	      0xe803faffff	                       call sym.job_free	      5303	channel.c	FUNCTION_123	IF_4	CALL_7
0xab9a	            0xeb01	                           jmp 0x400abdd	      5303	channel.c	FUNCTION_123	IF_4	CALL_7
0xab9c	              0x90	                                     nop	      5266	channel.c	FUNCTION_123	IF_1
0xab9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5305	channel.c	FUNCTION_123
0xaba1	    0x644833042528	                xor rax, qword fs:[0x28]	      5305	channel.c	FUNCTION_123
0xabaa	            0x7405	                            je 0x400abf1	      5305	channel.c	FUNCTION_123
0xabac	      0xe800000000	                          call 0x400abf1	      5305	channel.c	FUNCTION_123
0xabb1	        0x488b5df8	                mov rbx, qword [rbp - 8]	      5305	channel.c	FUNCTION_123
0xabb5	              0xc9	                                   leave	      5305	channel.c	FUNCTION_123
0xabb6	              0xc3	                                     ret	      5305	channel.c	FUNCTION_123
channel_gui_register_all	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,1:WHILE,0:DO,0	17
0xbad	              0x55	                                push rbp	       595	channel.c	FUNCTION_27
0xbae	          0x4889e5	                            mov rbp, rsp	       595	channel.c	FUNCTION_27
0xbb1	        0x4883ec10	                           sub rsp, 0x10	       595	channel.c	FUNCTION_27
0xbb5	    0x488b05000000	            mov rax, qword [0x04000bfc] 	       598	channel.c	FUNCTION_27	FOR_1
0xbbc	        0x488945f8	                mov qword [rbp - 8], rax	       598	channel.c	FUNCTION_27	FOR_1
0xbc0	            0xeb17	                           jmp 0x4000c19	       598	channel.c	FUNCTION_27	FOR_1
0xbc2	        0x488b45f8	                mov rax, qword [rbp - 8]	       599	channel.c	FUNCTION_27	CALL_1
0xbc6	          0x4889c7	                            mov rdi, rax	       599	channel.c	FUNCTION_27	CALL_1
0xbc9	      0xe831ffffff	           call sym.channel_gui_register	       599	channel.c	FUNCTION_27	CALL_1
0xbce	        0x488b45f8	                mov rax, qword [rbp - 8]	       598	channel.c	FUNCTION_27	FOR_1
0xbd2	          0x488b00	                    mov rax, qword [rax]	       598	channel.c	FUNCTION_27	FOR_1
0xbd5	        0x488945f8	                mov qword [rbp - 8], rax	       598	channel.c	FUNCTION_27	FOR_1
0xbd9	      0x48837df800	                  cmp qword [rbp - 8], 0	       598	channel.c	FUNCTION_27	FOR_1
0xbde	            0x75e2	                           jne 0x4000c02	       598	channel.c	FUNCTION_27	FOR_1
0xbe0	              0x90	                                     nop	       600	channel.c	FUNCTION_27
0xbe1	              0xc9	                                   leave	       600	channel.c	FUNCTION_27
0xbe2	              0xc3	                                     ret	       600	channel.c	FUNCTION_27
job_info	functions,0:SWITCH,0:CALL,14:ELSE,0:IF,5:FOR,1:WHILE,0:DO,0	148
0xb7dd	              0x55	                                push rbp	      5727	channel.c	FUNCTION_135
0xb7de	          0x4889e5	                            mov rbp, rsp	      5727	channel.c	FUNCTION_135
0xb7e1	        0x4883ec30	                           sub rsp, 0x30	      5727	channel.c	FUNCTION_135
0xb7e5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5727	channel.c	FUNCTION_135
0xb7e9	        0x488975d0	             mov qword [rbp - 0x30], rsi	      5727	channel.c	FUNCTION_135
0xb7ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5733	channel.c	FUNCTION_135	CALL_2
0xb7f1	          0x4889c7	                            mov rdi, rax	      5733	channel.c	FUNCTION_135	CALL_2
0xb7f4	      0xe800000000	                          call 0x400b839	      5733	channel.c	FUNCTION_135	CALL_2
0xb7f9	          0x4889c2	                            mov rdx, rax	      5733	channel.c	FUNCTION_135	CALL_2
0xb7fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5733	channel.c	FUNCTION_135	CALL_2
0xb800	          0x4889d1	                            mov rcx, rdx	      5733	channel.c	FUNCTION_135	CALL_2
0xb803	      0xba00000000	                              mov edx, 0	      5733	channel.c	FUNCTION_135	CALL_2
0xb808	      0xbe00000000	                              mov esi, 0	      5733	channel.c	FUNCTION_135	CALL_2
0xb80d	          0x4889c7	                            mov rdi, rax	      5733	channel.c	FUNCTION_135	CALL_2
0xb810	      0xe800000000	                          call 0x400b855	      5733	channel.c	FUNCTION_135	CALL_2
0xb815	      0xbf00000000	                              mov edi, 0	      5735	channel.c	FUNCTION_135	CALL_3
0xb81a	      0xe800000000	                          call 0x400b85f	      5735	channel.c	FUNCTION_135	CALL_3
0xb81f	        0x488945e8	             mov qword [rbp - 0x18], rax	      5735	channel.c	FUNCTION_135	CALL_3
0xb823	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5736	channel.c	FUNCTION_135	IF_1
0xb828	     0xf84e0010000	                            je 0x400ba4e	      5736	channel.c	FUNCTION_135	IF_1
0xb82e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5738	channel.c	FUNCTION_135
0xb832	        0xc6400400	                   mov byte [rax + 4], 0	      5738	channel.c	FUNCTION_135
0xb836	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5739	channel.c	FUNCTION_135
0xb83a	    0xc7000a000000	                    mov dword [rax], 0xa	      5739	channel.c	FUNCTION_135
0xb840	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5740	channel.c	FUNCTION_135
0xb844	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      5740	channel.c	FUNCTION_135
0xb848	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5740	channel.c	FUNCTION_135
0xb84c	        0x48895008	                mov qword [rax + 8], rdx	      5740	channel.c	FUNCTION_135
0xb850	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5741	channel.c	FUNCTION_135	IF_2
0xb854	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5741	channel.c	FUNCTION_135	IF_2
0xb858	          0x4885c0	                           test rax, rax	      5741	channel.c	FUNCTION_135	IF_2
0xb85b	            0x7417	                            je 0x400b8b4	      5741	channel.c	FUNCTION_135	IF_2
0xb85d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5742	channel.c	FUNCTION_135	IF_2
0xb861	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5742	channel.c	FUNCTION_135	IF_2
0xb865	    0x8b90b4040000	           mov edx, dword [rax + 0x4b4] 	      5742	channel.c	FUNCTION_135	IF_2
0xb86b	          0x83c201	                              add edx, 1	      5742	channel.c	FUNCTION_135	IF_2
0xb86e	    0x8990b4040000	            mov dword [rax + 0x4b4], edx	      5742	channel.c	FUNCTION_135	IF_2
0xb874	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5743	channel.c	FUNCTION_135	IF_3	CALL_4
0xb878	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5743	channel.c	FUNCTION_135	IF_3	CALL_4
0xb87c	          0x4889d6	                            mov rsi, rdx	      5743	channel.c	FUNCTION_135	IF_3	CALL_4
0xb87f	          0x4889c7	                            mov rdi, rax	      5743	channel.c	FUNCTION_135	IF_3	CALL_4
0xb882	      0xe800000000	                          call 0x400b8c7	      5743	channel.c	FUNCTION_135	IF_3	CALL_4
0xb887	            0x85c0	                           test eax, eax	      5743	channel.c	FUNCTION_135	IF_3	CALL_4
0xb889	            0x750c	                           jne 0x400b8d7	      5743	channel.c	FUNCTION_135	IF_3	CALL_4
0xb88b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5744	channel.c	FUNCTION_135	CALL_5
0xb88f	          0x4889c7	                            mov rdi, rax	      5744	channel.c	FUNCTION_135	CALL_5
0xb892	      0xe800000000	                          call 0x400b8d7	      5744	channel.c	FUNCTION_135	CALL_5
0xb897	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5747	channel.c	FUNCTION_135
0xb89b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5747	channel.c	FUNCTION_135
0xb89e	            0x4898	                                    cdqe	      5747	channel.c	FUNCTION_135
0xb8a0	        0x488945f0	             mov qword [rbp - 0x10], rax	      5747	channel.c	FUNCTION_135
0xb8a4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5751	channel.c	FUNCTION_135	CALL_6
0xb8a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5751	channel.c	FUNCTION_135	CALL_6
0xb8ac	      0xb900000000	                              mov ecx, 0	      5751	channel.c	FUNCTION_135	CALL_6
0xb8b1	      0xbe00000000	                              mov esi, 0	      5751	channel.c	FUNCTION_135	CALL_6
0xb8b6	          0x4889c7	                            mov rdi, rax	      5751	channel.c	FUNCTION_135	CALL_6
0xb8b9	      0xe800000000	                          call 0x400b8fe	      5751	channel.c	FUNCTION_135	CALL_6
0xb8be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5753	channel.c	FUNCTION_135
0xb8c2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5753	channel.c	FUNCTION_135
0xb8c6	          0x4885c0	                           test rax, rax	      5752	channel.c	FUNCTION_135	CALL_7
0xb8c9	            0x740a	                            je 0x400b915	      5752	channel.c	FUNCTION_135	CALL_7
0xb8cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5752	channel.c	FUNCTION_135	CALL_7
0xb8cf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5752	channel.c	FUNCTION_135	CALL_7
0xb8d3	            0xeb05	                           jmp 0x400b91a	      5752	channel.c	FUNCTION_135	CALL_7
0xb8d5	      0xb800000000	                              mov eax, 0	      5752	channel.c	FUNCTION_135	CALL_7
0xb8da	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	      5752	channel.c	FUNCTION_135	CALL_7
0xb8de	          0x4889c1	                            mov rcx, rax	      5752	channel.c	FUNCTION_135	CALL_7
0xb8e1	      0xba00000000	                              mov edx, 0	      5752	channel.c	FUNCTION_135	CALL_7
0xb8e6	      0xbe00000000	                              mov esi, 0	      5752	channel.c	FUNCTION_135	CALL_7
0xb8eb	      0xe800000000	                          call 0x400b930	      5752	channel.c	FUNCTION_135	CALL_7
0xb8f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5755	channel.c	FUNCTION_135
0xb8f4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5755	channel.c	FUNCTION_135
0xb8f8	          0x4885c0	                           test rax, rax	      5754	channel.c	FUNCTION_135	CALL_8
0xb8fb	            0x740a	                            je 0x400b947	      5754	channel.c	FUNCTION_135	CALL_8
0xb8fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5754	channel.c	FUNCTION_135	CALL_8
0xb901	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5754	channel.c	FUNCTION_135	CALL_8
0xb905	            0xeb05	                           jmp 0x400b94c	      5754	channel.c	FUNCTION_135	CALL_8
0xb907	      0xb800000000	                              mov eax, 0	      5754	channel.c	FUNCTION_135	CALL_8
0xb90c	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	      5754	channel.c	FUNCTION_135	CALL_8
0xb910	          0x4889c1	                            mov rcx, rax	      5754	channel.c	FUNCTION_135	CALL_8
0xb913	      0xba00000000	                              mov edx, 0	      5754	channel.c	FUNCTION_135	CALL_8
0xb918	      0xbe00000000	                              mov esi, 0	      5754	channel.c	FUNCTION_135	CALL_8
0xb91d	      0xe800000000	                          call 0x400b962	      5754	channel.c	FUNCTION_135	CALL_8
0xb922	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5757	channel.c	FUNCTION_135	CALL_9
0xb926	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5757	channel.c	FUNCTION_135	CALL_9
0xb929	          0x4863d0	                         movsxd rdx, eax	      5757	channel.c	FUNCTION_135	CALL_9
0xb92c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5757	channel.c	FUNCTION_135	CALL_9
0xb930	      0xb900000000	                              mov ecx, 0	      5757	channel.c	FUNCTION_135	CALL_9
0xb935	      0xbe00000000	                              mov esi, 0	      5757	channel.c	FUNCTION_135	CALL_9
0xb93a	          0x4889c7	                            mov rdi, rax	      5757	channel.c	FUNCTION_135	CALL_9
0xb93d	      0xe800000000	                          call 0x400b982	      5757	channel.c	FUNCTION_135	CALL_9
0xb942	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5758	channel.c	FUNCTION_135	CALL_10
0xb946	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5758	channel.c	FUNCTION_135	CALL_10
0xb94a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5758	channel.c	FUNCTION_135	CALL_10
0xb94e	          0x4889d1	                            mov rcx, rdx	      5758	channel.c	FUNCTION_135	CALL_10
0xb951	      0xba00000000	                              mov edx, 0	      5758	channel.c	FUNCTION_135	CALL_10
0xb956	      0xbe00000000	                              mov esi, 0	      5758	channel.c	FUNCTION_135	CALL_10
0xb95b	          0x4889c7	                            mov rdi, rax	      5758	channel.c	FUNCTION_135	CALL_10
0xb95e	      0xe800000000	                          call 0x400b9a3	      5758	channel.c	FUNCTION_135	CALL_10
0xb963	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5759	channel.c	FUNCTION_135	CALL_11
0xb967	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5759	channel.c	FUNCTION_135	CALL_11
0xb96b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5759	channel.c	FUNCTION_135	CALL_11
0xb96f	          0x4889d1	                            mov rcx, rdx	      5759	channel.c	FUNCTION_135	CALL_11
0xb972	      0xba00000000	                              mov edx, 0	      5759	channel.c	FUNCTION_135	CALL_11
0xb977	      0xbe00000000	                              mov esi, 0	      5759	channel.c	FUNCTION_135	CALL_11
0xb97c	          0x4889c7	                            mov rdi, rax	      5759	channel.c	FUNCTION_135	CALL_11
0xb97f	      0xe800000000	                          call 0x400b9c4	      5759	channel.c	FUNCTION_135	CALL_11
0xb984	      0xe800000000	                          call 0x400b9c9	      5761	channel.c	FUNCTION_135	CALL_12
0xb989	        0x488945f8	                mov qword [rbp - 8], rax	      5761	channel.c	FUNCTION_135	CALL_12
0xb98d	      0x48837df800	                  cmp qword [rbp - 8], 0	      5762	channel.c	FUNCTION_135	IF_4
0xb992	            0x747b	                            je 0x400ba4f	      5762	channel.c	FUNCTION_135	IF_4
0xb994	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5764	channel.c	FUNCTION_135	IF_4	CALL_13
0xb998	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5764	channel.c	FUNCTION_135	IF_4	CALL_13
0xb99c	      0xbe00000000	                              mov esi, 0	      5764	channel.c	FUNCTION_135	IF_4	CALL_13
0xb9a1	          0x4889c7	                            mov rdi, rax	      5764	channel.c	FUNCTION_135	IF_4	CALL_13
0xb9a4	      0xe800000000	                          call 0x400b9e9	      5764	channel.c	FUNCTION_135	IF_4	CALL_13
0xb9a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5765	channel.c	FUNCTION_135	IF_4	IF_5
0xb9ad	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5765	channel.c	FUNCTION_135	IF_4	IF_5
0xb9b1	          0x4885c0	                           test rax, rax	      5765	channel.c	FUNCTION_135	IF_4	IF_5
0xb9b4	            0x7459	                            je 0x400ba4f	      5765	channel.c	FUNCTION_135	IF_4	IF_5
0xb9b6	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9bd	            0xeb30	                           jmp 0x400ba2f	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9c3	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9c7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9ca	          0x4863d2	                         movsxd rdx, edx	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9cd	        0x48c1e203	                              shl rdx, 3	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9d1	          0x4801d0	                            add rax, rdx	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9d4	          0x488b08	                    mov rcx, qword [rax]	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9db	      0xbaffffffff	                     mov edx, 0xffffffff	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9e0	          0x4889ce	                            mov rsi, rcx	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9e3	          0x4889c7	                            mov rdi, rax	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9e6	      0xe800000000	                          call 0x400ba2b	      5767	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9eb	        0x8345e401	               add dword [rbp - 0x1c], 1	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9f3	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9f7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9fa	          0x4863d2	                         movsxd rdx, edx	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xb9fd	        0x48c1e203	                              shl rdx, 3	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xba01	          0x4801d0	                            add rax, rdx	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xba04	          0x488b00	                    mov rax, qword [rax]	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xba07	          0x4885c0	                           test rax, rax	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xba0a	            0x75b3	                           jne 0x400b9ff	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xba0c	            0xeb01	                           jmp 0x400ba4f	      5766	channel.c	FUNCTION_135	IF_4	IF_5	FOR_1
0xba0e	              0x90	                                     nop	      5737	channel.c	FUNCTION_135	IF_1
0xba0f	              0xc9	                                   leave	      5769	channel.c	FUNCTION_135
0xba10	              0xc3	                                     ret	      5769	channel.c	FUNCTION_135
channel_has_readahead	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	46
0x5555	              0x55	                                push rbp	      2736	channel.c	FUNCTION_67
0x5556	          0x4889e5	                            mov rbp, rsp	      2736	channel.c	FUNCTION_67
0x5559	        0x4883ec30	                           sub rsp, 0x30	      2736	channel.c	FUNCTION_67
0x555d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2736	channel.c	FUNCTION_67
0x5561	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2736	channel.c	FUNCTION_67
0x5564	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2737	channel.c	FUNCTION_67
0x5568	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2737	channel.c	FUNCTION_67
0x556b	        0x48c1e004	                              shl rax, 4	      2737	channel.c	FUNCTION_67
0x556f	          0x4889c1	                            mov rcx, rax	      2737	channel.c	FUNCTION_67
0x5572	        0x48c1e104	                              shl rcx, 4	      2737	channel.c	FUNCTION_67
0x5576	          0x4801c8	                            add rax, rcx	      2737	channel.c	FUNCTION_67
0x5579	          0x4801d0	                            add rax, rdx	      2737	channel.c	FUNCTION_67
0x557c	        0x4883c020	                           add rax, 0x20	      2737	channel.c	FUNCTION_67
0x5580	            0x8b00	                    mov eax, dword [rax]	      2737	channel.c	FUNCTION_67
0x5582	          0x8945ec	             mov dword [rbp - 0x14], eax	      2737	channel.c	FUNCTION_67
0x5585	        0x837dec02	               cmp dword [rbp - 0x14], 2	      2739	channel.c	FUNCTION_67	IF_1
0x5589	            0x7406	                            je 0x40055d1	      2739	channel.c	FUNCTION_67	IF_1
0x558b	        0x837dec03	               cmp dword [rbp - 0x14], 3	      2739	channel.c	FUNCTION_67	IF_1
0x558f	            0x753d	                           jne 0x400560e	      2739	channel.c	FUNCTION_67	IF_1
0x5591	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2741	channel.c	FUNCTION_67	IF_1
0x5594	        0x48c1e004	                              shl rax, 4	      2741	channel.c	FUNCTION_67	IF_1
0x5598	          0x4889c2	                            mov rdx, rax	      2741	channel.c	FUNCTION_67	IF_1
0x559b	        0x48c1e204	                              shl rdx, 4	      2741	channel.c	FUNCTION_67	IF_1
0x559f	          0x4801d0	                            add rax, rdx	      2741	channel.c	FUNCTION_67	IF_1
0x55a2	        0x488d5040	                   lea rdx, [rax + 0x40]	      2741	channel.c	FUNCTION_67	IF_1
0x55a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2741	channel.c	FUNCTION_67	IF_1
0x55aa	          0x4801d0	                            add rax, rdx	      2741	channel.c	FUNCTION_67	IF_1
0x55ad	        0x4883c010	                           add rax, 0x10	      2741	channel.c	FUNCTION_67	IF_1
0x55b1	        0x488945f0	             mov qword [rbp - 0x10], rax	      2741	channel.c	FUNCTION_67	IF_1
0x55b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2742	channel.c	FUNCTION_67	IF_1
0x55b9	        0x488b4008	                mov rax, qword [rax + 8]	      2742	channel.c	FUNCTION_67	IF_1
0x55bd	        0x488945f8	                mov qword [rbp - 8], rax	      2742	channel.c	FUNCTION_67	IF_1
0x55c1	      0x48837df800	                  cmp qword [rbp - 8], 0	      2744	channel.c	FUNCTION_67	IF_1
0x55c6	           0xf95c0	                                setne al	      2744	channel.c	FUNCTION_67	IF_1
0x55c9	           0xfb6c0	                           movzx eax, al	      2744	channel.c	FUNCTION_67	IF_1
0x55cc	            0xeb1a	                           jmp 0x4005628	      2744	channel.c	FUNCTION_67	IF_1
0x55ce	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2746	channel.c	FUNCTION_67	CALL_1
0x55d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2746	channel.c	FUNCTION_67	CALL_1
0x55d5	            0x89d6	                            mov esi, edx	      2746	channel.c	FUNCTION_67	CALL_1
0x55d7	          0x4889c7	                            mov rdi, rax	      2746	channel.c	FUNCTION_67	CALL_1
0x55da	      0xe800000000	                          call 0x400561f	      2746	channel.c	FUNCTION_67	CALL_1
0x55df	          0x4885c0	                           test rax, rax	      2746	channel.c	FUNCTION_67	CALL_1
0x55e2	           0xf95c0	                                setne al	      2746	channel.c	FUNCTION_67	CALL_1
0x55e5	           0xfb6c0	                           movzx eax, al	      2746	channel.c	FUNCTION_67	CALL_1
0x55e8	              0xc9	                                   leave	      2747	channel.c	FUNCTION_67
0x55e9	              0xc3	                                     ret	      2747	channel.c	FUNCTION_67
remove_cb_node	functions,0:SWITCH,0:CALL,0:ELSE,2:IF,2:FOR,0:WHILE,0:DO,0	35
0x3c5d	              0x55	                                push rbp	      2056	channel.c	FUNCTION_56
0x3c5e	          0x4889e5	                            mov rbp, rsp	      2056	channel.c	FUNCTION_56
0x3c61	        0x48897df8	                mov qword [rbp - 8], rdi	      2056	channel.c	FUNCTION_56
0x3c65	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2056	channel.c	FUNCTION_56
0x3c69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2057	channel.c	FUNCTION_56	IF_1
0x3c6d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2057	channel.c	FUNCTION_56	IF_1
0x3c71	          0x4885c0	                           test rax, rax	      2057	channel.c	FUNCTION_56	IF_1
0x3c74	            0x7512	                           jne 0x4003cc8	      2057	channel.c	FUNCTION_56	IF_1
0x3c76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2058	channel.c	FUNCTION_56	IF_1
0x3c7a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2058	channel.c	FUNCTION_56	IF_1
0x3c7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2058	channel.c	FUNCTION_56	IF_1
0x3c82	        0x48895018	             mov qword [rax + 0x18], rdx	      2058	channel.c	FUNCTION_56	IF_1
0x3c86	            0xeb14	                           jmp 0x4003cdc	      2058	channel.c	FUNCTION_56	IF_1
0x3c88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2060	channel.c	FUNCTION_56	ELSE_1
0x3c8c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2060	channel.c	FUNCTION_56	ELSE_1
0x3c90	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2060	channel.c	FUNCTION_56	ELSE_1
0x3c94	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2060	channel.c	FUNCTION_56	ELSE_1
0x3c98	        0x48895018	             mov qword [rax + 0x18], rdx	      2060	channel.c	FUNCTION_56	ELSE_1
0x3c9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2061	channel.c	FUNCTION_56	IF_2
0x3ca0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2061	channel.c	FUNCTION_56	IF_2
0x3ca4	          0x4885c0	                           test rax, rax	      2061	channel.c	FUNCTION_56	IF_2
0x3ca7	            0x7512	                           jne 0x4003cfb	      2061	channel.c	FUNCTION_56	IF_2
0x3ca9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2062	channel.c	FUNCTION_56	IF_2
0x3cad	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2062	channel.c	FUNCTION_56	IF_2
0x3cb1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2062	channel.c	FUNCTION_56	IF_2
0x3cb5	        0x48895020	             mov qword [rax + 0x20], rdx	      2062	channel.c	FUNCTION_56	IF_2
0x3cb9	            0xeb14	                           jmp 0x4003d0f	      2065	channel.c	FUNCTION_56	ELSE_2
0x3cbb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2064	channel.c	FUNCTION_56	ELSE_2
0x3cbf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2064	channel.c	FUNCTION_56	ELSE_2
0x3cc3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2064	channel.c	FUNCTION_56	ELSE_2
0x3cc7	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2064	channel.c	FUNCTION_56	ELSE_2
0x3ccb	        0x48895020	             mov qword [rax + 0x20], rdx	      2064	channel.c	FUNCTION_56	ELSE_2
0x3ccf	              0x90	                                     nop	      2065	channel.c	FUNCTION_56	ELSE_2
0x3cd0	              0x5d	                                 pop rbp	      2065	channel.c	FUNCTION_56	ELSE_2
0x3cd1	              0xc3	                                     ret	      2065	channel.c	FUNCTION_56	ELSE_2
channel_clear	functions,0:SWITCH,0:CALL,8:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	60
0x5f9a	              0x55	                                push rbp	      3014	channel.c	FUNCTION_75
0x5f9b	          0x4889e5	                            mov rbp, rsp	      3014	channel.c	FUNCTION_75
0x5f9e	        0x4883ec10	                           sub rsp, 0x10	      3014	channel.c	FUNCTION_75
0x5fa2	        0x48897df8	                mov qword [rbp - 8], rdi	      3014	channel.c	FUNCTION_75
0x5fa6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3015	channel.c	FUNCTION_75	CALL_1
0x5faa	      0xbe00000000	                              mov esi, 0	      3015	channel.c	FUNCTION_75	CALL_1
0x5faf	          0x4889c7	                            mov rdi, rax	      3015	channel.c	FUNCTION_75	CALL_1
0x5fb2	      0xb800000000	                              mov eax, 0	      3015	channel.c	FUNCTION_75	CALL_1
0x5fb7	      0xe800000000	                          call 0x4005ffc	      3015	channel.c	FUNCTION_75	CALL_1
0x5fbc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3016	channel.c	FUNCTION_75	CALL_2
0x5fc0	    0x488b80600400	           mov rax, qword [rax + 0x460] 	      3016	channel.c	FUNCTION_75	CALL_2
0x5fc7	          0x4885c0	                           test rax, rax	      3016	channel.c	FUNCTION_75	CALL_2
0x5fca	            0x7422	                            je 0x400602e	      3016	channel.c	FUNCTION_75	CALL_2
0x5fcc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3016	channel.c	FUNCTION_75	CALL_2
0x5fd0	    0x488b80600400	           mov rax, qword [rax + 0x460] 	      3016	channel.c	FUNCTION_75	CALL_2
0x5fd7	          0x4889c7	                            mov rdi, rax	      3016	channel.c	FUNCTION_75	CALL_2
0x5fda	      0xe800000000	                          call 0x400601f	      3016	channel.c	FUNCTION_75	CALL_2
0x5fdf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3016	channel.c	FUNCTION_75	CALL_2
0x5fe3	    0x48c780600400	              mov qword [rax + 0x460], 0	      3016	channel.c	FUNCTION_75	CALL_2
0x5fee	        0x488b45f8	                mov rax, qword [rbp - 8]	      3017	channel.c	FUNCTION_75	CALL_3
0x5ff2	      0xbe00000000	                              mov esi, 0	      3017	channel.c	FUNCTION_75	CALL_3
0x5ff7	          0x4889c7	                            mov rdi, rax	      3017	channel.c	FUNCTION_75	CALL_3
0x5ffa	      0xe81efeffff	              call sym.channel_clear_one	      3017	channel.c	FUNCTION_75	CALL_3
0x5fff	        0x488b45f8	                mov rax, qword [rbp - 8]	      3018	channel.c	FUNCTION_75	CALL_4
0x6003	      0xbe01000000	                              mov esi, 1	      3018	channel.c	FUNCTION_75	CALL_4
0x6008	          0x4889c7	                            mov rdi, rax	      3018	channel.c	FUNCTION_75	CALL_4
0x600b	      0xe80dfeffff	              call sym.channel_clear_one	      3018	channel.c	FUNCTION_75	CALL_4
0x6010	        0x488b45f8	                mov rax, qword [rbp - 8]	      3019	channel.c	FUNCTION_75	CALL_5
0x6014	      0xbe02000000	                              mov esi, 2	      3019	channel.c	FUNCTION_75	CALL_5
0x6019	          0x4889c7	                            mov rdi, rax	      3019	channel.c	FUNCTION_75	CALL_5
0x601c	      0xe8fcfdffff	              call sym.channel_clear_one	      3019	channel.c	FUNCTION_75	CALL_5
0x6021	        0x488b45f8	                mov rax, qword [rbp - 8]	      3020	channel.c	FUNCTION_75	CALL_6
0x6025	      0xbe03000000	                              mov esi, 3	      3020	channel.c	FUNCTION_75	CALL_6
0x602a	          0x4889c7	                            mov rdi, rax	      3020	channel.c	FUNCTION_75	CALL_6
0x602d	      0xe8ebfdffff	              call sym.channel_clear_one	      3020	channel.c	FUNCTION_75	CALL_6
0x6032	        0x488b45f8	                mov rax, qword [rbp - 8]	      3021	channel.c	FUNCTION_75	CALL_7
0x6036	    0x488b90880400	           mov rdx, qword [rax + 0x488] 	      3021	channel.c	FUNCTION_75	CALL_7
0x603d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3021	channel.c	FUNCTION_75	CALL_7
0x6041	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      3021	channel.c	FUNCTION_75	CALL_7
0x6048	          0x4889d6	                            mov rsi, rdx	      3021	channel.c	FUNCTION_75	CALL_7
0x604b	          0x4889c7	                            mov rdi, rax	      3021	channel.c	FUNCTION_75	CALL_7
0x604e	      0xe800000000	                          call 0x4006093	      3021	channel.c	FUNCTION_75	CALL_7
0x6053	        0x488b45f8	                mov rax, qword [rbp - 8]	      3022	channel.c	FUNCTION_75
0x6057	    0x48c780800400	              mov qword [rax + 0x480], 0	      3022	channel.c	FUNCTION_75
0x6062	        0x488b45f8	                mov rax, qword [rbp - 8]	      3023	channel.c	FUNCTION_75
0x6066	    0x48c780880400	              mov qword [rax + 0x488], 0	      3023	channel.c	FUNCTION_75
0x6071	        0x488b45f8	                mov rax, qword [rbp - 8]	      3024	channel.c	FUNCTION_75	CALL_8
0x6075	    0x488b90980400	           mov rdx, qword [rax + 0x498] 	      3024	channel.c	FUNCTION_75	CALL_8
0x607c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3024	channel.c	FUNCTION_75	CALL_8
0x6080	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      3024	channel.c	FUNCTION_75	CALL_8
0x6087	          0x4889d6	                            mov rsi, rdx	      3024	channel.c	FUNCTION_75	CALL_8
0x608a	          0x4889c7	                            mov rdi, rax	      3024	channel.c	FUNCTION_75	CALL_8
0x608d	      0xe800000000	                          call 0x40060d2	      3024	channel.c	FUNCTION_75	CALL_8
0x6092	        0x488b45f8	                mov rax, qword [rbp - 8]	      3025	channel.c	FUNCTION_75
0x6096	    0x48c780900400	              mov qword [rax + 0x490], 0	      3025	channel.c	FUNCTION_75
0x60a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3026	channel.c	FUNCTION_75
0x60a5	    0x48c780980400	              mov qword [rax + 0x498], 0	      3026	channel.c	FUNCTION_75
0x60b0	              0x90	                                     nop	      3027	channel.c	FUNCTION_75
0x60b1	              0xc9	                                   leave	      3027	channel.c	FUNCTION_75
0x60b2	              0xc3	                                     ret	      3027	channel.c	FUNCTION_75
can_write_buf_line	functions,0:SWITCH,0:CALL,8:ELSE,2:IF,8:FOR,1:WHILE,0:DO,0	112
0x26c5	              0x55	                                push rbp	      1364	channel.c	FUNCTION_40
0x26c6	          0x4889e5	                            mov rbp, rsp	      1364	channel.c	FUNCTION_40
0x26c9	    0x4881ecd00000	                           sub rsp, 0xd0	      1364	channel.c	FUNCTION_40
0x26d0	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1364	channel.c	FUNCTION_40
0x26d7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1364	channel.c	FUNCTION_40
0x26e0	        0x488945f8	                mov qword [rbp - 8], rax	      1364	channel.c	FUNCTION_40
0x26e4	            0x31c0	                            xor eax, eax	      1364	channel.c	FUNCTION_40
0x26e6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1365	channel.c	FUNCTION_40
0x26ed	    0x480548030000	                          add rax, 0x348	      1365	channel.c	FUNCTION_40
0x26f3	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1365	channel.c	FUNCTION_40
0x26fa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1367	channel.c	FUNCTION_40	IF_1
0x2701	            0x8b00	                    mov eax, dword [rax]	      1367	channel.c	FUNCTION_40	IF_1
0x2703	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1367	channel.c	FUNCTION_40	IF_1
0x2706	            0x750a	                           jne 0x4002752	      1367	channel.c	FUNCTION_40	IF_1
0x2708	      0xb800000000	                              mov eax, 0	      1368	channel.c	FUNCTION_40	IF_1
0x270d	      0xe97b010000	                           jmp 0x40028cd	      1368	channel.c	FUNCTION_40	IF_1
0x2712	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1371	channel.c	FUNCTION_40	IF_2
0x2719	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1371	channel.c	FUNCTION_40	IF_2
0x271c	          0x83f801	                              cmp eax, 1	      1371	channel.c	FUNCTION_40	IF_2
0x271f	            0x7510	                           jne 0x4002771	      1371	channel.c	FUNCTION_40	IF_2
0x2721	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1372	channel.c	FUNCTION_40	IF_2
0x2728	    0xc74078ffffff	     mov dword [rax + 0x78], 0xffffffff 	      1372	channel.c	FUNCTION_40	IF_2
0x272f	            0xeb1d	                           jmp 0x400278e	      1372	channel.c	FUNCTION_40	IF_2
0x2731	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1373	channel.c	FUNCTION_40	ELSE_1	IF_3
0x2738	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1373	channel.c	FUNCTION_40	ELSE_1	IF_3
0x273b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1373	channel.c	FUNCTION_40	ELSE_1	IF_3
0x273e	            0x750e	                           jne 0x400278e	      1373	channel.c	FUNCTION_40	ELSE_1	IF_3
0x2740	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1374	channel.c	FUNCTION_40	ELSE_1	IF_3
0x2747	    0xc74078010000	               mov dword [rax + 0x78], 1	      1374	channel.c	FUNCTION_40	ELSE_1	IF_3
0x274e	      0xb800000000	                              mov eax, 0	      1384	channel.c	FUNCTION_40	CALL_1
0x2753	      0xb910000000	                           mov ecx, 0x10	      1384	channel.c	FUNCTION_40	CALL_1
0x2758	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1384	channel.c	FUNCTION_40	CALL_1
0x275f	          0x4889d7	                            mov rdi, rdx	      1384	channel.c	FUNCTION_40	CALL_1
0x2762	              0xfc	                                     cld	      1384	channel.c	FUNCTION_40	CALL_1
0x2763	          0xf348ab	              rep stosq qword [rdi], rax	      1384	channel.c	FUNCTION_40	CALL_1
0x2766	            0x89f8	                            mov eax, edi	      1384	channel.c	FUNCTION_40	CALL_1
0x2768	            0x89ca	                            mov edx, ecx	      1384	channel.c	FUNCTION_40	CALL_1
0x276a	    0x89954cffffff	             mov dword [rbp - 0xb4], edx	      1384	channel.c	FUNCTION_40	CALL_1
0x2770	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      1384	channel.c	FUNCTION_40	CALL_1
0x2776	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1385	channel.c	FUNCTION_40	CALL_2
0x277d	            0x8b00	                    mov eax, dword [rax]	      1385	channel.c	FUNCTION_40	CALL_2
0x277f	          0x8d503f	                   lea edx, [rax + 0x3f]	      1385	channel.c	FUNCTION_40	CALL_2
0x2782	            0x85c0	                           test eax, eax	      1385	channel.c	FUNCTION_40	CALL_2
0x2784	           0xf48c2	                          cmovs eax, edx	      1385	channel.c	FUNCTION_40	CALL_2
0x2787	          0xc1f806	                              sar eax, 6	      1385	channel.c	FUNCTION_40	CALL_2
0x278a	            0x89c6	                            mov esi, eax	      1385	channel.c	FUNCTION_40	CALL_2
0x278c	          0x4863c6	                         movsxd rax, esi	      1385	channel.c	FUNCTION_40	CALL_2
0x278f	    0x488bbcc570ff	     mov rdi, qword [rbp + rax*8 - 0x90]	      1385	channel.c	FUNCTION_40	CALL_2
0x2797	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1385	channel.c	FUNCTION_40	CALL_2
0x279e	            0x8b00	                    mov eax, dword [rax]	      1385	channel.c	FUNCTION_40	CALL_2
0x27a0	              0x99	                                     cdq	      1385	channel.c	FUNCTION_40	CALL_2
0x27a1	          0xc1ea1a	                           shr edx, 0x1a	      1385	channel.c	FUNCTION_40	CALL_2
0x27a4	             0x1d0	                            add eax, edx	      1385	channel.c	FUNCTION_40	CALL_2
0x27a6	          0x83e03f	                           and eax, 0x3f	      1385	channel.c	FUNCTION_40	CALL_2
0x27a9	            0x29d0	                            sub eax, edx	      1385	channel.c	FUNCTION_40	CALL_2
0x27ab	      0xba01000000	                              mov edx, 1	      1385	channel.c	FUNCTION_40	CALL_2
0x27b0	            0x89c1	                            mov ecx, eax	      1385	channel.c	FUNCTION_40	CALL_2
0x27b2	          0x48d3e2	                             shl rdx, cl	      1385	channel.c	FUNCTION_40	CALL_2
0x27b5	          0x4889d0	                            mov rax, rdx	      1385	channel.c	FUNCTION_40	CALL_2
0x27b8	          0x4809c7	                             or rdi, rax	      1385	channel.c	FUNCTION_40	CALL_2
0x27bb	          0x4889fa	                            mov rdx, rdi	      1385	channel.c	FUNCTION_40	CALL_2
0x27be	          0x4863c6	                         movsxd rax, esi	      1385	channel.c	FUNCTION_40	CALL_2
0x27c1	    0x488994c570ff	     mov qword [rbp + rax*8 - 0x90], rdx	      1385	channel.c	FUNCTION_40	CALL_2
0x27c9	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      1386	channel.c	FUNCTION_40
0x27d4	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      1387	channel.c	FUNCTION_40
0x27df	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x27e6	            0x8b00	                    mov eax, dword [rax]	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x27e8	          0x8d7801	                      lea edi, [rax + 1]	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x27eb	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x27f2	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x27f9	          0x4989d0	                             mov r8, rdx	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x27fc	      0xb900000000	                              mov ecx, 0	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x2801	          0x4889c2	                            mov rdx, rax	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x2804	      0xbe00000000	                              mov esi, 0	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x2809	      0xe800000000	                          call 0x400284e	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x280e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      1390	channel.c	FUNCTION_40	FOR_1	CALL_3
0x2814	    0x83bd54ffffff	cmp dword [rbp - 0xac], 0xffffffffffffffff	      1393	channel.c	FUNCTION_40	FOR_1	IF_4
0x281b	            0x750e	                           jne 0x400286b	      1393	channel.c	FUNCTION_40	FOR_1	IF_4
0x281d	      0xe800000000	                          call 0x4002862	      1393	channel.c	FUNCTION_40	FOR_1	IF_4
0x2822	            0x8b00	                    mov eax, dword [rax]	      1393	channel.c	FUNCTION_40	FOR_1	IF_4
0x2824	          0x83f804	                              cmp eax, 4	      1393	channel.c	FUNCTION_40	FOR_1	IF_4
0x2827	            0x7502	                           jne 0x400286b	      1393	channel.c	FUNCTION_40	FOR_1	IF_4
0x2829	            0xebb4	                           jmp 0x400281f	      1405	channel.c	FUNCTION_40	FOR_1
0x282b	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      1396	channel.c	FUNCTION_40	FOR_1	IF_5
0x2832	            0x7e0f	                           jle 0x4002883	      1396	channel.c	FUNCTION_40	FOR_1	IF_5
0x2834	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1396	channel.c	FUNCTION_40	FOR_1	IF_5
0x283b	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1396	channel.c	FUNCTION_40	FOR_1	IF_5
0x283e	          0x83f801	                              cmp eax, 1	      1396	channel.c	FUNCTION_40	FOR_1	IF_5
0x2841	            0x7544	                           jne 0x40028c7	      1396	channel.c	FUNCTION_40	FOR_1	IF_5
0x2843	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      1398	channel.c	FUNCTION_40	FOR_1	IF_5	IF_6
0x284a	            0x7e1b	                           jle 0x40028a7	      1398	channel.c	FUNCTION_40	FOR_1	IF_5	IF_6
0x284c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1399	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_4
0x2853	      0xbe00000000	                              mov esi, 0	      1399	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_4
0x2858	          0x4889c7	                            mov rdi, rax	      1399	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_4
0x285b	      0xb800000000	                              mov eax, 0	      1399	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_4
0x2860	      0xe800000000	                          call 0x40028a5	      1399	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_4
0x2865	            0xeb19	                           jmp 0x40028c0	      1399	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_4
0x2867	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1401	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_5
0x286e	      0xbe00000000	                              mov esi, 0	      1401	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_5
0x2873	          0x4889c7	                            mov rdi, rax	      1401	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_5
0x2876	      0xb800000000	                              mov eax, 0	      1401	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_5
0x287b	      0xe800000000	                          call 0x40028c0	      1401	channel.c	FUNCTION_40	FOR_1	IF_5	CALL_5
0x2880	      0xb800000000	                              mov eax, 0	      1402	channel.c	FUNCTION_40	FOR_1	IF_5
0x2885	            0xeb06	                           jmp 0x40028cd	      1402	channel.c	FUNCTION_40	FOR_1	IF_5
0x2887	              0x90	                                     nop	      1404	channel.c	FUNCTION_40	FOR_1
0x2888	      0xb801000000	                              mov eax, 1	      1424	channel.c	FUNCTION_40
0x288d	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1425	channel.c	FUNCTION_40
0x2891	    0x644833342528	                xor rsi, qword fs:[0x28]	      1425	channel.c	FUNCTION_40
0x289a	            0x7405	                            je 0x40028e1	      1425	channel.c	FUNCTION_40
0x289c	      0xe800000000	                          call 0x40028e1	      1425	channel.c	FUNCTION_40
0x28a1	              0xc9	                                   leave	      1425	channel.c	FUNCTION_40
0x28a2	              0xc3	                                     ret	      1425	channel.c	FUNCTION_40
job_info_all	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	33
0xba11	              0x55	                                push rbp	      5776	channel.c	FUNCTION_136
0xba12	          0x4889e5	                            mov rbp, rsp	      5776	channel.c	FUNCTION_136
0xba15	        0x4883ec40	                           sub rsp, 0x40	      5776	channel.c	FUNCTION_136
0xba19	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5776	channel.c	FUNCTION_136
0xba1d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5776	channel.c	FUNCTION_136
0xba26	        0x488945f8	                mov qword [rbp - 8], rax	      5776	channel.c	FUNCTION_136
0xba2a	            0x31c0	                            xor eax, eax	      5776	channel.c	FUNCTION_136
0xba2c	    0x488b05000000	            mov rax, qword [0x0400ba73] 	      5780	channel.c	FUNCTION_136	FOR_1
0xba33	        0x488945d8	             mov qword [rbp - 0x28], rax	      5780	channel.c	FUNCTION_136	FOR_1
0xba37	            0xeb32	                           jmp 0x400baab	      5780	channel.c	FUNCTION_136	FOR_1
0xba39	    0xc745e0090000	               mov dword [rbp - 0x20], 9	      5782	channel.c	FUNCTION_136	FOR_1
0xba40	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5783	channel.c	FUNCTION_136	FOR_1
0xba44	        0x488945e8	             mov qword [rbp - 0x18], rax	      5783	channel.c	FUNCTION_136	FOR_1
0xba48	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      5785	channel.c	FUNCTION_136	FOR_1	IF_1	CALL_1
0xba4c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5785	channel.c	FUNCTION_136	FOR_1	IF_1	CALL_1
0xba50	          0x4889d6	                            mov rsi, rdx	      5785	channel.c	FUNCTION_136	FOR_1	IF_1	CALL_1
0xba53	          0x4889c7	                            mov rdi, rax	      5785	channel.c	FUNCTION_136	FOR_1	IF_1	CALL_1
0xba56	      0xe800000000	                          call 0x400ba9b	      5785	channel.c	FUNCTION_136	FOR_1	IF_1	CALL_1
0xba5b	          0x83f801	                              cmp eax, 1	      5785	channel.c	FUNCTION_136	FOR_1	IF_1	CALL_1
0xba5e	            0x7514	                           jne 0x400bab4	      5785	channel.c	FUNCTION_136	FOR_1	IF_1	CALL_1
0xba60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5780	channel.c	FUNCTION_136	FOR_1
0xba64	          0x488b00	                    mov rax, qword [rax]	      5780	channel.c	FUNCTION_136	FOR_1
0xba67	        0x488945d8	             mov qword [rbp - 0x28], rax	      5780	channel.c	FUNCTION_136	FOR_1
0xba6b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5780	channel.c	FUNCTION_136	FOR_1
0xba70	            0x75c7	                           jne 0x400ba79	      5780	channel.c	FUNCTION_136	FOR_1
0xba72	            0xeb01	                           jmp 0x400bab5	      5780	channel.c	FUNCTION_136	FOR_1
0xba74	              0x90	                                     nop	      5786	channel.c	FUNCTION_136	FOR_1	IF_1
0xba75	        0x488b45f8	                mov rax, qword [rbp - 8]	      5788	channel.c	FUNCTION_136
0xba79	    0x644833042528	                xor rax, qword fs:[0x28]	      5788	channel.c	FUNCTION_136
0xba82	            0x7405	                            je 0x400bac9	      5788	channel.c	FUNCTION_136
0xba84	      0xe800000000	                          call 0x400bac9	      5788	channel.c	FUNCTION_136
0xba89	              0xc9	                                   leave	      5788	channel.c	FUNCTION_136
0xba8a	              0xc3	                                     ret	      5788	channel.c	FUNCTION_136
channel_wait	functions,0:SWITCH,0:CALL,19:ELSE,2:IF,14:FOR,2:WHILE,1:DO,0	145
0x6190	              0x55	                                push rbp	      3117	channel.c	ELSE_1	FUNCTION_79
0x6191	          0x4889e5	                            mov rbp, rsp	      3117	channel.c	ELSE_1	FUNCTION_79
0x6194	    0x4881ec500100	                          sub rsp, 0x150	      3117	channel.c	ELSE_1	FUNCTION_79
0x619b	    0x4889bdb8feff	            mov qword [rbp - 0x148], rdi	      3117	channel.c	ELSE_1	FUNCTION_79
0x61a2	    0x89b5b4feffff	            mov dword [rbp - 0x14c], esi	      3117	channel.c	ELSE_1	FUNCTION_79
0x61a8	    0x8995b0feffff	            mov dword [rbp - 0x150], edx	      3117	channel.c	ELSE_1	FUNCTION_79
0x61ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      3117	channel.c	ELSE_1	FUNCTION_79
0x61b7	        0x488945f8	                mov qword [rbp - 8], rax	      3117	channel.c	ELSE_1	FUNCTION_79
0x61bb	            0x31c0	                            xor eax, eax	      3117	channel.c	ELSE_1	FUNCTION_79
0x61bd	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	      3118	channel.c	ELSE_1	FUNCTION_79	IF_1
0x61c4	            0x7e1f	                           jle 0x4006225	      3118	channel.c	ELSE_1	FUNCTION_79	IF_1
0x61c6	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	      3119	channel.c	ELSE_1	FUNCTION_79	CALL_1
0x61cc	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      3119	channel.c	ELSE_1	FUNCTION_79	CALL_1
0x61d3	      0xbe00000000	                              mov esi, 0	      3119	channel.c	ELSE_1	FUNCTION_79	CALL_1
0x61d8	          0x4889c7	                            mov rdi, rax	      3119	channel.c	ELSE_1	FUNCTION_79	CALL_1
0x61db	      0xb800000000	                              mov eax, 0	      3119	channel.c	ELSE_1	FUNCTION_79	CALL_1
0x61e0	      0xe800000000	                          call 0x4006225	      3119	channel.c	ELSE_1	FUNCTION_79	CALL_1
0x61e5	    0x8b8db0feffff	            mov ecx, dword [rbp - 0x150]	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61eb	      0xbad34d6210	                     mov edx, 0x10624dd3	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61f0	            0x89c8	                            mov eax, ecx	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61f2	            0xf7ea	                                imul edx	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61f4	          0xc1fa06	                              sar edx, 6	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61f7	            0x89c8	                            mov eax, ecx	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61f9	          0xc1f81f	                           sar eax, 0x1f	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61fc	            0x29c2	                            sub edx, eax	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x61fe	            0x89d0	                            mov eax, edx	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6200	            0x4898	                                    cdqe	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6202	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      3178	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6209	    0x8b8db0feffff	            mov ecx, dword [rbp - 0x150]	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x620f	      0xbad34d6210	                     mov edx, 0x10624dd3	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6214	            0x89c8	                            mov eax, ecx	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6216	            0xf7ea	                                imul edx	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6218	          0xc1fa06	                              sar edx, 6	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x621b	            0x89c8	                            mov eax, ecx	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x621d	          0xc1f81f	                           sar eax, 0x1f	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6220	            0x29c2	                            sub edx, eax	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6222	            0x89d0	                            mov eax, edx	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6224	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x622a	            0x29c1	                            sub ecx, eax	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x622c	            0x89c8	                            mov eax, ecx	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x622e	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6234	            0x4898	                                    cdqe	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x6236	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      3179	channel.c	FUNCTION_79	ELSE_1	ELSE_2
0x623d	      0xb800000000	                              mov eax, 0	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6242	      0xb910000000	                           mov ecx, 0x10	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6247	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x624e	          0x4889d7	                            mov rdi, rdx	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6251	              0xfc	                                     cld	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6252	          0xf348ab	              rep stosq qword [rdi], rax	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6255	            0x89f8	                            mov eax, edi	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6257	            0x89ca	                            mov edx, ecx	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6259	    0x8995c8feffff	            mov dword [rbp - 0x138], edx	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x625f	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      3182	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_10
0x6265	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x626b	          0x8d503f	                   lea edx, [rax + 0x3f]	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x626e	            0x85c0	                           test eax, eax	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6270	           0xf48c2	                          cmovs eax, edx	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6273	          0xc1f806	                              sar eax, 6	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6276	            0x89c6	                            mov esi, eax	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6278	          0x4863c6	                         movsxd rax, esi	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x627b	    0x488bbcc5f0fe	    mov rdi, qword [rbp + rax*8 - 0x110]	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6283	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6289	              0x99	                                     cdq	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x628a	          0xc1ea1a	                           shr edx, 0x1a	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x628d	             0x1d0	                            add eax, edx	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x628f	          0x83e03f	                           and eax, 0x3f	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6292	            0x29d0	                            sub eax, edx	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6294	      0xba01000000	                              mov edx, 1	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x6299	            0x89c1	                            mov ecx, eax	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x629b	          0x48d3e2	                             shl rdx, cl	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x629e	          0x4889d0	                            mov rax, rdx	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x62a1	          0x4809c7	                             or rdi, rax	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x62a4	          0x4889fa	                            mov rdx, rdi	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x62a7	          0x4863c6	                         movsxd rax, esi	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x62aa	    0x488994c5f0fe	    mov qword [rbp + rax*8 - 0x110], rdx	      3183	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_11
0x62b2	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3187	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1
0x62b8	          0x83c001	                              add eax, 1	      3187	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1
0x62bb	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3187	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1
0x62c1	      0xb800000000	                              mov eax, 0	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62c6	      0xb910000000	                           mov ecx, 0x10	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62cb	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62d2	          0x4889d7	                            mov rdi, rdx	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62d5	              0xfc	                                     cld	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62d6	          0xf348ab	              rep stosq qword [rdi], rax	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62d9	            0x89f8	                            mov eax, edi	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62db	            0x89ca	                            mov edx, ecx	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62dd	    0x8995d4feffff	            mov dword [rbp - 0x12c], edx	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62e3	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	      3188	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_12
0x62e9	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3189	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_13
0x62f0	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3189	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_13
0x62f6	          0x4889d6	                            mov rsi, rdx	      3189	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_13
0x62f9	            0x89c7	                            mov edi, eax	      3189	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_13
0x62fb	      0xe8b3fdffff	              call sym.channel_fill_wfds	      3189	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_13
0x6300	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3189	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_13
0x6306	    0x488d8de0feff	                  lea rcx, [rbp - 0x120]	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x630d	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x6314	    0x488db5f0feff	                  lea rsi, [rbp - 0x110]	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x631b	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x6321	          0x4989c8	                             mov r8, rcx	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x6324	      0xb900000000	                              mov ecx, 0	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x6329	            0x89c7	                            mov edi, eax	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x632b	      0xe800000000	                          call 0x4006370	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x6330	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	      3191	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	CALL_14
0x6336	    0x83bddcfeffff	cmp dword [rbp - 0x124], 0xffffffffffffffff	      3194	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_10
0x633d	            0x750c	                           jne 0x400638b	      3194	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_10
0x633f	      0xe800000000	                          call 0x4006384	      3194	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_10
0x6344	            0x8b00	                    mov eax, dword [rax]	      3194	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_10
0x6346	          0x83f804	                              cmp eax, 4	      3194	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_10
0x6349	            0x7458	                            je 0x40063e3	      3194	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_10
0x634b	    0x83bddcfeffff	              cmp dword [rbp - 0x124], 0	      3197	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11
0x6352	            0x7e55	                           jle 0x40063e9	      3197	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11
0x6354	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x635a	          0x8d503f	                   lea edx, [rax + 0x3f]	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x635d	            0x85c0	                           test eax, eax	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x635f	           0xf48c2	                          cmovs eax, edx	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6362	          0xc1f806	                              sar eax, 6	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6365	            0x4898	                                    cdqe	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6367	    0x488bb4c5f0fe	    mov rsi, qword [rbp + rax*8 - 0x110]	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x636f	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6375	              0x99	                                     cdq	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6376	          0xc1ea1a	                           shr edx, 0x1a	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6379	             0x1d0	                            add eax, edx	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x637b	          0x83e03f	                           and eax, 0x3f	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x637e	            0x29d0	                            sub eax, edx	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6380	      0xba01000000	                              mov edx, 1	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6385	            0x89c1	                            mov ecx, eax	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6387	          0x48d3e2	                             shl rdx, cl	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x638a	          0x4889d0	                            mov rax, rdx	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x638d	          0x4821f0	                            and rax, rsi	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6390	          0x4885c0	                           test rax, rax	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6393	            0x7407	                            je 0x40063dc	      3199	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12	CALL_15
0x6395	      0xb800000000	                              mov eax, 0	      3200	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12
0x639a	            0xeb13	                           jmp 0x40063ef	      3200	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	IF_12
0x639c	      0xe800000000	                          call 0x40063e1	      3201	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11	CALL_16
0x63a1	            0xeb01	                           jmp 0x40063e4	      3202	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_11
0x63a3	              0x90	                                     nop	      3195	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1	IF_10
0x63a4	      0xe994feffff	                           jmp 0x400627d	      3205	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1
0x63a9	              0x90	                                     nop	      3204	channel.c	FUNCTION_79	ELSE_1	ELSE_2	FOR_1
0x63aa	      0xb801000000	                              mov eax, 1	      3226	channel.c	FUNCTION_79	ELSE_1
0x63af	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3227	channel.c	FUNCTION_79	ELSE_1
0x63b3	    0x644833342528	                xor rsi, qword fs:[0x28]	      3227	channel.c	FUNCTION_79	ELSE_1
0x63bc	            0x7405	                            je 0x4006403	      3227	channel.c	FUNCTION_79	ELSE_1
0x63be	      0xe800000000	                          call 0x4006403	      3227	channel.c	FUNCTION_79	ELSE_1
0x63c3	              0xc9	                                   leave	      3227	channel.c	FUNCTION_79	ELSE_1
0x63c4	              0xc3	                                     ret	      3227	channel.c	FUNCTION_79	ELSE_1
channel_fill	functions,0:SWITCH,0:CALL,8:ELSE,0:IF,3:FOR,0:WHILE,0:DO,0	82
0x3679	              0x55	                                push rbp	      1866	channel.c	FUNCTION_54
0x367a	          0x4889e5	                            mov rbp, rsp	      1866	channel.c	FUNCTION_54
0x367d	        0x4883ec40	                           sub rsp, 0x40	      1866	channel.c	FUNCTION_54
0x3681	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1866	channel.c	FUNCTION_54
0x3685	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1867	channel.c	FUNCTION_54
0x3689	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1867	channel.c	FUNCTION_54
0x368d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1867	channel.c	FUNCTION_54
0x3691	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1868	channel.c	FUNCTION_54
0x3695	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1868	channel.c	FUNCTION_54
0x3698	          0x8945dc	             mov dword [rbp - 0x24], eax	      1868	channel.c	FUNCTION_54
0x369b	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1869	channel.c	FUNCTION_54	CALL_1
0x369e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1869	channel.c	FUNCTION_54	CALL_1
0x36a2	            0x89d6	                            mov esi, edx	      1869	channel.c	FUNCTION_54	CALL_1
0x36a4	          0x4889c7	                            mov rdi, rax	      1869	channel.c	FUNCTION_54	CALL_1
0x36a7	      0xe800000000	                          call 0x40036ec	      1869	channel.c	FUNCTION_54	CALL_1
0x36ac	        0x488945e8	             mov qword [rbp - 0x18], rax	      1869	channel.c	FUNCTION_54	CALL_1
0x36b0	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1874	channel.c	FUNCTION_54	IF_1
0x36b5	            0x750a	                           jne 0x4003701	      1874	channel.c	FUNCTION_54	IF_1
0x36b7	      0xb800000000	                              mov eax, 0	      1875	channel.c	FUNCTION_54	IF_1
0x36bc	      0xe9d8000000	                           jmp 0x40037d9	      1875	channel.c	FUNCTION_54	IF_1
0x36c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1877	channel.c	FUNCTION_54
0x36c5	        0x488b4008	                mov rax, qword [rax + 8]	      1877	channel.c	FUNCTION_54
0x36c9	          0x4889c2	                            mov rdx, rax	      1877	channel.c	FUNCTION_54
0x36cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1877	channel.c	FUNCTION_54
0x36d0	          0x488b00	                    mov rax, qword [rax]	      1877	channel.c	FUNCTION_54
0x36d3	          0x4829c2	                            sub rdx, rax	      1877	channel.c	FUNCTION_54
0x36d6	          0x4889d0	                            mov rax, rdx	      1877	channel.c	FUNCTION_54
0x36d9	          0x8945e0	             mov dword [rbp - 0x20], eax	      1877	channel.c	FUNCTION_54
0x36dc	        0x837de000	               cmp dword [rbp - 0x20], 0	      1878	channel.c	FUNCTION_54	IF_2
0x36e0	     0xf8e94000000	                           jle 0x40037ba	      1878	channel.c	FUNCTION_54	IF_2
0x36e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	channel.c	FUNCTION_54	IF_2	CALL_2
0x36ea	          0x4889c7	                            mov rdi, rax	      1881	channel.c	FUNCTION_54	IF_2	CALL_2
0x36ed	      0xe800000000	                          call 0x4003732	      1881	channel.c	FUNCTION_54	IF_2	CALL_2
0x36f2	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1881	channel.c	FUNCTION_54	IF_2	CALL_2
0x36f5	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1882	channel.c	FUNCTION_54	IF_2	CALL_3
0x36f8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1882	channel.c	FUNCTION_54	IF_2	CALL_3
0x36fb	             0x1d0	                            add eax, edx	      1882	channel.c	FUNCTION_54	IF_2	CALL_3
0x36fd	          0x83c001	                              add eax, 1	      1882	channel.c	FUNCTION_54	IF_2	CALL_3
0x3700	            0x89c7	                            mov edi, eax	      1882	channel.c	FUNCTION_54	IF_2	CALL_3
0x3702	      0xe800000000	                          call 0x4003747	      1882	channel.c	FUNCTION_54	IF_2	CALL_3
0x3707	        0x488945f8	                mov qword [rbp - 8], rax	      1882	channel.c	FUNCTION_54	IF_2	CALL_3
0x370b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1883	channel.c	FUNCTION_54	IF_2	IF_3
0x3710	            0x7513	                           jne 0x4003765	      1883	channel.c	FUNCTION_54	IF_2	IF_3
0x3712	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	channel.c	FUNCTION_54	IF_2	IF_3	CALL_4
0x3716	          0x4889c7	                            mov rdi, rax	      1885	channel.c	FUNCTION_54	IF_2	IF_3	CALL_4
0x3719	      0xe800000000	                          call 0x400375e	      1885	channel.c	FUNCTION_54	IF_2	IF_3	CALL_4
0x371e	      0xb800000000	                              mov eax, 0	      1886	channel.c	FUNCTION_54	IF_2	IF_3
0x3723	            0xeb74	                           jmp 0x40037d9	      1886	channel.c	FUNCTION_54	IF_2	IF_3
0x3725	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x3728	          0x4863d0	                         movsxd rdx, eax	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x372b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x372f	          0x488b08	                    mov rcx, qword [rax]	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x3732	        0x488b45f8	                mov rax, qword [rbp - 8]	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x3736	          0x4889ce	                            mov rsi, rcx	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x3739	          0x4889c7	                            mov rdi, rax	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x373c	      0xe800000000	                          call 0x4003781	      1888	channel.c	FUNCTION_54	IF_2	CALL_5
0x3741	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x3744	          0x83c001	                              add eax, 1	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x3747	          0x4863d0	                         movsxd rdx, eax	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x374a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x374d	          0x4863c8	                         movsxd rcx, eax	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x3750	        0x488b45f8	                mov rax, qword [rbp - 8]	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x3754	          0x4801c1	                            add rcx, rax	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x3757	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x375b	          0x4889c6	                            mov rsi, rax	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x375e	          0x4889cf	                            mov rdi, rcx	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x3761	      0xe800000000	                          call 0x40037a6	      1889	channel.c	FUNCTION_54	IF_2	CALL_6
0x3766	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	channel.c	FUNCTION_54	IF_2	CALL_7
0x376a	          0x4889c7	                            mov rdi, rax	      1890	channel.c	FUNCTION_54	IF_2	CALL_7
0x376d	      0xe800000000	                          call 0x40037b2	      1890	channel.c	FUNCTION_54	IF_2	CALL_7
0x3772	        0x488b45f8	                mov rax, qword [rbp - 8]	      1891	channel.c	FUNCTION_54	IF_2
0x3776	        0x488945e8	             mov qword [rbp - 0x18], rax	      1891	channel.c	FUNCTION_54	IF_2
0x377a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1894	channel.c	FUNCTION_54	CALL_8
0x377e	          0x488b00	                    mov rax, qword [rax]	      1894	channel.c	FUNCTION_54	CALL_8
0x3781	          0x4889c7	                            mov rdi, rax	      1894	channel.c	FUNCTION_54	CALL_8
0x3784	      0xe800000000	                          call 0x40037c9	      1894	channel.c	FUNCTION_54	CALL_8
0x3789	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1895	channel.c	FUNCTION_54
0x378d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1895	channel.c	FUNCTION_54
0x3791	          0x488910	                    mov qword [rax], rdx	      1895	channel.c	FUNCTION_54
0x3794	      0xb801000000	                              mov eax, 1	      1896	channel.c	FUNCTION_54
0x3799	              0xc9	                                   leave	      1897	channel.c	FUNCTION_54
0x379a	              0xc3	                                     ret	      1897	channel.c	FUNCTION_54
channel_open	functions,0:SWITCH,0:CALL,63:ELSE,0:IF,21:FOR,0:WHILE,1:DO,0	573
0xcb2	              0x55	                                push rbp	       654	channel.c	FUNCTION_30
0xcb3	          0x4889e5	                            mov rbp, rsp	       654	channel.c	FUNCTION_30
0xcb6	              0x53	                                push rbx	       654	channel.c	FUNCTION_30
0xcb7	    0x4881ecb80100	                          sub rsp, 0x1b8	       654	channel.c	FUNCTION_30
0xcbe	    0x4889bd58feff	            mov qword [rbp - 0x1a8], rdi	       654	channel.c	FUNCTION_30
0xcc5	    0x89b554feffff	            mov dword [rbp - 0x1ac], esi	       654	channel.c	FUNCTION_30
0xccb	    0x899550feffff	            mov dword [rbp - 0x1b0], edx	       654	channel.c	FUNCTION_30
0xcd1	    0x48898d48feff	            mov qword [rbp - 0x1b8], rcx	       654	channel.c	FUNCTION_30
0xcd8	    0x64488b042528	                mov rax, qword fs:[0x28]	       654	channel.c	FUNCTION_30
0xce1	        0x488945e8	             mov qword [rbp - 0x18], rax	       654	channel.c	FUNCTION_30
0xce5	            0x31c0	                            xor eax, eax	       654	channel.c	FUNCTION_30
0xce7	    0xc78568feffff	    mov dword [rbp - 0x198], 0xffffffff 	       655	channel.c	FUNCTION_30
0xcf1	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	       662	channel.c	FUNCTION_30
0xcf7	    0x89856cfeffff	            mov dword [rbp - 0x194], eax	       662	channel.c	FUNCTION_30
0xcfd	      0xe800000000	                          call 0x4000d42	       671	channel.c	FUNCTION_30	CALL_2
0xd02	    0x48898590feff	            mov qword [rbp - 0x170], rax	       671	channel.c	FUNCTION_30	CALL_2
0xd09	    0x4883bd90feff	              cmp qword [rbp - 0x170], 0	       672	channel.c	FUNCTION_30	IF_1
0xd11	            0x751e	                           jne 0x4000d71	       672	channel.c	FUNCTION_30	IF_1
0xd13	      0xbe00000000	                              mov esi, 0	       674	channel.c	FUNCTION_30	IF_1	CALL_3
0xd18	      0xbf00000000	                              mov edi, 0	       674	channel.c	FUNCTION_30	IF_1	CALL_3
0xd1d	      0xb800000000	                              mov eax, 0	       674	channel.c	FUNCTION_30	IF_1	CALL_3
0xd22	      0xe8b5f5ffff	                       call sym.ch_error	       674	channel.c	FUNCTION_30	IF_1	CALL_3
0xd27	      0xb800000000	                              mov eax, 0	       675	channel.c	FUNCTION_30	IF_1
0xd2c	      0xe956090000	                           jmp 0x40016c7	       675	channel.c	FUNCTION_30	IF_1
0xd31	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       680	channel.c	FUNCTION_30	CALL_4
0xd38	      0xba10000000	                           mov edx, 0x10	       680	channel.c	FUNCTION_30	CALL_4
0xd3d	      0xbe00000000	                              mov esi, 0	       680	channel.c	FUNCTION_30	CALL_4
0xd42	          0x4889c7	                            mov rdi, rax	       680	channel.c	FUNCTION_30	CALL_4
0xd45	      0xe800000000	                          call 0x4000d8a	       680	channel.c	FUNCTION_30	CALL_4
0xd4a	    0x66c785d0feff	               mov word [rbp - 0x130], 2	       681	channel.c	FUNCTION_30
0xd53	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       682	channel.c	FUNCTION_30	CALL_5
0xd59	           0xfb7c0	                           movzx eax, ax	       682	channel.c	FUNCTION_30	CALL_5
0xd5c	            0x89c7	                            mov edi, eax	       682	channel.c	FUNCTION_30	CALL_5
0xd5e	      0xe800000000	                          call 0x4000da3	       682	channel.c	FUNCTION_30	CALL_5
0xd63	    0x668985d2feff	              mov word [rbp - 0x12e], ax	       682	channel.c	FUNCTION_30	CALL_5
0xd6a	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	       683	channel.c	FUNCTION_30	IF_2	CALL_6
0xd71	          0x4889c7	                            mov rdi, rax	       683	channel.c	FUNCTION_30	IF_2	CALL_6
0xd74	      0xe800000000	                          call 0x4000db9	       683	channel.c	FUNCTION_30	IF_2	CALL_6
0xd79	    0x48898598feff	            mov qword [rbp - 0x168], rax	       683	channel.c	FUNCTION_30	IF_2	CALL_6
0xd80	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	       683	channel.c	FUNCTION_30	IF_2	CALL_6
0xd88	            0x755d	                           jne 0x4000e27	       683	channel.c	FUNCTION_30	IF_2	CALL_6
0xd8a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       685	channel.c	FUNCTION_30	IF_2	CALL_7
0xd91	      0xbe00000000	                              mov esi, 0	       685	channel.c	FUNCTION_30	IF_2	CALL_7
0xd96	          0x4889c7	                            mov rdi, rax	       685	channel.c	FUNCTION_30	IF_2	CALL_7
0xd99	      0xb800000000	                              mov eax, 0	       685	channel.c	FUNCTION_30	IF_2	CALL_7
0xd9e	      0xe839f5ffff	                       call sym.ch_error	       685	channel.c	FUNCTION_30	IF_2	CALL_7
0xda3	      0xe800000000	                          call 0x4000de8	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xda8	            0x8b00	                    mov eax, dword [rax]	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdaa	            0x89c7	                            mov edi, eax	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdac	      0xe800000000	                          call 0x4000df1	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdb1	          0x4889c3	                            mov rbx, rax	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdb4	      0xbf00000000	                              mov edi, 0	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdb9	      0xe800000000	                          call 0x4000dfe	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdbe	          0x4889da	                            mov rdx, rbx	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdc1	          0x4889c6	                            mov rsi, rax	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdc4	      0xbf00000000	                              mov edi, 0	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdc9	      0xe800000000	                          call 0x4000e0e	       686	channel.c	FUNCTION_30	IF_2	CALL_9
0xdce	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       687	channel.c	FUNCTION_30	IF_2	CALL_10
0xdd5	          0x4889c7	                            mov rdi, rax	       687	channel.c	FUNCTION_30	IF_2	CALL_10
0xdd8	      0xe8a5f9ffff	                   call sym.channel_free	       687	channel.c	FUNCTION_30	IF_2	CALL_10
0xddd	      0xb800000000	                              mov eax, 0	       688	channel.c	FUNCTION_30	IF_2
0xde2	      0xe9a0080000	                           jmp 0x40016c7	       688	channel.c	FUNCTION_30	IF_2
0xde7	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       695	channel.c	FUNCTION_30	CALL_11
0xdee	        0x488b4018	            mov rax, qword [rax + 0x18] 	       695	channel.c	FUNCTION_30	CALL_11
0xdf2	          0x488b00	                    mov rax, qword [rax]	       695	channel.c	FUNCTION_30	CALL_11
0xdf5	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       695	channel.c	FUNCTION_30	CALL_11
0xdfc	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       696	channel.c	FUNCTION_30	CALL_12
0xe03	          0x8b4014	            mov eax, dword [rax + 0x14] 	       696	channel.c	FUNCTION_30	CALL_12
0xe06	          0x4863d0	                         movsxd rdx, eax	       696	channel.c	FUNCTION_30	CALL_12
0xe09	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       696	channel.c	FUNCTION_30	CALL_12
0xe10	    0x488d8dd0feff	                  lea rcx, [rbp - 0x130]	       696	channel.c	FUNCTION_30	CALL_12
0xe17	        0x4883c104	                              add rcx, 4	       696	channel.c	FUNCTION_30	CALL_12
0xe1b	          0x4889c6	                            mov rsi, rax	       696	channel.c	FUNCTION_30	CALL_12
0xe1e	          0x4889cf	                            mov rdi, rcx	       696	channel.c	FUNCTION_30	CALL_12
0xe21	      0xe800000000	                          call 0x4000e66	       696	channel.c	FUNCTION_30	CALL_12
0xe26	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       702	channel.c	FUNCTION_30	IF_3
0xe2d	            0x750a	                           jne 0x4000e79	       702	channel.c	FUNCTION_30	IF_3
0xe2f	    0xc78550feffff	              mov dword [rbp - 0x1b0], 1	       703	channel.c	FUNCTION_30	IF_3
0xe39	    0x48c78588feff	              mov qword [rbp - 0x178], 0	       711	channel.c	FUNCTION_30	WHILE_1
0xe44	    0x83bd68feffff	              cmp dword [rbp - 0x198], 0	       714	channel.c	FUNCTION_30	WHILE_1	IF_4
0xe4b	            0x780d	                            js 0x4000e9a	       714	channel.c	FUNCTION_30	WHILE_1	IF_4
0xe4d	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       715	channel.c	FUNCTION_30	WHILE_1	CALL_13
0xe53	            0x89c7	                            mov edi, eax	       715	channel.c	FUNCTION_30	WHILE_1	CALL_13
0xe55	      0xe800000000	                          call 0x4000e9a	       715	channel.c	FUNCTION_30	WHILE_1	CALL_13
0xe5a	      0xba00000000	                              mov edx, 0	       716	channel.c	FUNCTION_30	WHILE_1	CALL_14
0xe5f	      0xbe01000000	                              mov esi, 1	       716	channel.c	FUNCTION_30	WHILE_1	CALL_14
0xe64	      0xbf02000000	                              mov edi, 2	       716	channel.c	FUNCTION_30	WHILE_1	CALL_14
0xe69	      0xe800000000	                          call 0x4000eae	       716	channel.c	FUNCTION_30	WHILE_1	CALL_14
0xe6e	    0x898568feffff	            mov dword [rbp - 0x198], eax	       716	channel.c	FUNCTION_30	WHILE_1	CALL_14
0xe74	    0x83bd68feffff	cmp dword [rbp - 0x198], 0xffffffffffffffff	       717	channel.c	FUNCTION_30	WHILE_1	IF_5
0xe7b	            0x755d	                           jne 0x4000f1a	       717	channel.c	FUNCTION_30	WHILE_1	IF_5
0xe7d	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       719	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_15
0xe84	      0xbe00000000	                              mov esi, 0	       719	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_15
0xe89	          0x4889c7	                            mov rdi, rax	       719	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_15
0xe8c	      0xb800000000	                              mov eax, 0	       719	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_15
0xe91	      0xe846f4ffff	                       call sym.ch_error	       719	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_15
0xe96	      0xe800000000	                          call 0x4000edb	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xe9b	            0x8b00	                    mov eax, dword [rax]	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xe9d	            0x89c7	                            mov edi, eax	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xe9f	      0xe800000000	                          call 0x4000ee4	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xea4	          0x4889c3	                            mov rbx, rax	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xea7	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xeac	      0xe800000000	                          call 0x4000ef1	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xeb1	          0x4889da	                            mov rdx, rbx	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xeb4	          0x4889c6	                            mov rsi, rax	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xeb7	      0xbf00000000	                              mov edi, 0	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xebc	      0xe800000000	                          call 0x4000f01	       720	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_17
0xec1	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       721	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_18
0xec8	          0x4889c7	                            mov rdi, rax	       721	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_18
0xecb	      0xe8b2f8ffff	                   call sym.channel_free	       721	channel.c	FUNCTION_30	WHILE_1	IF_5	CALL_18
0xed0	      0xb800000000	                              mov eax, 0	       722	channel.c	FUNCTION_30	WHILE_1	IF_5
0xed5	      0xe9ad070000	                           jmp 0x40016c7	       722	channel.c	FUNCTION_30	WHILE_1	IF_5
0xeda	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       725	channel.c	FUNCTION_30	WHILE_1	IF_6
0xee1	            0x7866	                            js 0x4000f89	       725	channel.c	FUNCTION_30	WHILE_1	IF_6
0xee3	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       732	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_20
0xee9	      0xba00080000	                          mov edx, 0x800	       732	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_20
0xeee	      0xbe04000000	                              mov esi, 4	       732	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_20
0xef3	            0x89c7	                            mov edi, eax	       732	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_20
0xef5	      0xb800000000	                              mov eax, 0	       732	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_20
0xefa	      0xe800000000	                          call 0x4000f3f	       732	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_20
0xeff	            0x85c0	                           test eax, eax	       728	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7
0xf01	            0x7946	                           jns 0x4000f89	       728	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7
0xf03	      0xe800000000	                          call 0x4000f48	       738	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7
0xf08	            0x8b10	                    mov edx, dword [rax]	       737	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_21
0xf0a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       737	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_21
0xf11	      0xbe00000000	                              mov esi, 0	       737	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_21
0xf16	          0x4889c7	                            mov rdi, rax	       737	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_21
0xf19	      0xb800000000	                              mov eax, 0	       737	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_21
0xf1e	      0xe8b9f3ffff	                       call sym.ch_error	       737	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_21
0xf23	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       739	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_22
0xf29	            0x89c7	                            mov edi, eax	       739	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_22
0xf2b	      0xe800000000	                          call 0x4000f70	       739	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_22
0xf30	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       740	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_23
0xf37	          0x4889c7	                            mov rdi, rax	       740	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_23
0xf3a	      0xe843f8ffff	                   call sym.channel_free	       740	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7	CALL_23
0xf3f	      0xb800000000	                              mov eax, 0	       741	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7
0xf44	      0xe93e070000	                           jmp 0x40016c7	       741	channel.c	FUNCTION_30	WHILE_1	IF_6	IF_7
0xf49	    0x8b8d6cfeffff	            mov ecx, dword [rbp - 0x194]	       746	channel.c	FUNCTION_30	WHILE_1	CALL_24
0xf4f	    0x488b9558feff	            mov rdx, qword [rbp - 0x1a8]	       746	channel.c	FUNCTION_30	WHILE_1	CALL_24
0xf56	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       746	channel.c	FUNCTION_30	WHILE_1	CALL_24
0xf5d	      0xbe00000000	                              mov esi, 0	       746	channel.c	FUNCTION_30	WHILE_1	CALL_24
0xf62	          0x4889c7	                            mov rdi, rax	       746	channel.c	FUNCTION_30	WHILE_1	CALL_24
0xf65	      0xb800000000	                              mov eax, 0	       746	channel.c	FUNCTION_30	WHILE_1	CALL_24
0xf6a	      0xe800000000	                          call 0x4000faf	       746	channel.c	FUNCTION_30	WHILE_1	CALL_24
0xf6f	    0x488d8dd0feff	                  lea rcx, [rbp - 0x130]	       747	channel.c	FUNCTION_30	WHILE_1	CALL_25
0xf76	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       747	channel.c	FUNCTION_30	WHILE_1	CALL_25
0xf7c	      0xba10000000	                           mov edx, 0x10	       747	channel.c	FUNCTION_30	WHILE_1	CALL_25
0xf81	          0x4889ce	                            mov rsi, rcx	       747	channel.c	FUNCTION_30	WHILE_1	CALL_25
0xf84	            0x89c7	                            mov edi, eax	       747	channel.c	FUNCTION_30	WHILE_1	CALL_25
0xf86	      0xe800000000	                          call 0x4000fcb	       747	channel.c	FUNCTION_30	WHILE_1	CALL_25
0xf8b	    0x898570feffff	            mov dword [rbp - 0x190], eax	       747	channel.c	FUNCTION_30	WHILE_1	CALL_25
0xf91	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       749	channel.c	FUNCTION_30	WHILE_1	IF_8
0xf98	     0xf8415060000	                            je 0x40015f3	       749	channel.c	FUNCTION_30	WHILE_1	IF_8
0xf9e	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       754	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfa5	            0x782c	                            js 0x4001013	       754	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfa7	      0xe800000000	                          call 0x4000fec	       754	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfac	            0x8b00	                    mov eax, dword [rax]	       754	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfae	          0x83f80b	                            cmp eax, 0xb	       754	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfb1	     0xf8492000000	                            je 0x4001089	       754	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfb7	      0xe800000000	                          call 0x4000ffc	       755	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfbc	            0x8b00	                    mov eax, dword [rax]	       755	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfbe	          0x83f86f	                           cmp eax, 0x6f	       755	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfc1	     0xf8482000000	                            je 0x4001089	       755	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfc7	      0xe800000000	                          call 0x400100c	       757	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfcc	            0x8b00	                    mov eax, dword [rax]	       757	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfce	          0x83f873	                           cmp eax, 0x73	       757	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfd1	            0x7476	                            je 0x4001089	       757	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfd3	      0xe800000000	                          call 0x4001018	       762	channel.c	FUNCTION_30	WHILE_1	IF_9
0xfd8	            0x8b10	                    mov edx, dword [rax]	       761	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_26
0xfda	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       761	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_26
0xfe1	      0xbe00000000	                              mov esi, 0	       761	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_26
0xfe6	          0x4889c7	                            mov rdi, rax	       761	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_26
0xfe9	      0xb800000000	                              mov eax, 0	       761	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_26
0xfee	      0xe8e9f2ffff	                       call sym.ch_error	       761	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_26
0xff3	      0xe800000000	                          call 0x4001038	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0xff8	            0x8b00	                    mov eax, dword [rax]	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0xffa	            0x89c7	                            mov edi, eax	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0xffc	      0xe800000000	                          call 0x4001041	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x1001	          0x4889c3	                            mov rbx, rax	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x1004	    0x488b05000000	            mov rax, qword [0x0400104b] 	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x100b	          0x4889c7	                            mov rdi, rax	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x100e	      0xe800000000	                          call 0x4001053	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x1013	          0x4889da	                            mov rdx, rbx	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x1016	          0x4889c6	                            mov rsi, rax	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x1019	      0xbf00000000	                              mov edi, 0	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x101e	      0xe800000000	                          call 0x4001063	       763	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_28
0x1023	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       764	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_29
0x1029	            0x89c7	                            mov edi, eax	       764	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_29
0x102b	      0xe800000000	                          call 0x4001070	       764	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_29
0x1030	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       765	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_30
0x1037	          0x4889c7	                            mov rdi, rax	       765	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_30
0x103a	      0xe843f7ffff	                   call sym.channel_free	       765	channel.c	FUNCTION_30	WHILE_1	IF_9	CALL_30
0x103f	      0xb800000000	                              mov eax, 0	       766	channel.c	FUNCTION_30	WHILE_1	IF_9
0x1044	      0xe93e060000	                           jmp 0x40016c7	       766	channel.c	FUNCTION_30	WHILE_1	IF_9
0x1049	      0xb832000000	                           mov eax, 0x32	       771	channel.c	FUNCTION_30	WHILE_1
0x104e	    0x83bd50feffff	          cmp dword [rbp - 0x1b0], 0x32 	       771	channel.c	FUNCTION_30	WHILE_1
0x1055	     0xf4e8550feff	         cmovle eax, dword [rbp - 0x1b0]	       771	channel.c	FUNCTION_30	WHILE_1
0x105c	    0x898574feffff	            mov dword [rbp - 0x18c], eax	       771	channel.c	FUNCTION_30	WHILE_1
0x1062	      0xe800000000	                          call 0x40010a7	       776	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1067	            0x8b00	                    mov eax, dword [rax]	       776	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1069	          0x83f86f	                           cmp eax, 0x6f	       776	channel.c	FUNCTION_30	WHILE_1	IF_10
0x106c	     0xf8465040000	                            je 0x4001517	       776	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1072	    0xc78560feffff	              mov dword [rbp - 0x1a0], 0	       783	channel.c	FUNCTION_30	WHILE_1	IF_10
0x107c	    0xc78564feffff	              mov dword [rbp - 0x19c], 4	       784	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1086	      0xb800000000	                              mov eax, 0	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x108b	      0xb910000000	                           mov ecx, 0x10	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x1090	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x1097	          0x4889d7	                            mov rdi, rdx	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x109a	              0xfc	                                     cld	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x109b	          0xf348ab	              rep stosq qword [rdi], rax	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x109e	            0x89f8	                            mov eax, edi	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x10a0	            0x89ca	                            mov edx, ecx	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x10a2	    0x899578feffff	            mov dword [rbp - 0x188], edx	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x10a8	    0x89857cfeffff	            mov dword [rbp - 0x184], eax	       788	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_31
0x10ae	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10b4	          0x8d503f	                   lea edx, [rax + 0x3f]	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10b7	            0x85c0	                           test eax, eax	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10b9	           0xf48c2	                          cmovs eax, edx	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10bc	          0xc1f806	                              sar eax, 6	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10bf	            0x89c6	                            mov esi, eax	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10c1	          0x4863c6	                         movsxd rax, esi	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10c4	    0x488bbcc5e0fe	    mov rdi, qword [rbp + rax*8 - 0x120]	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10cc	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10d2	              0x99	                                     cdq	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10d3	          0xc1ea1a	                           shr edx, 0x1a	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10d6	             0x1d0	                            add eax, edx	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10d8	          0x83e03f	                           and eax, 0x3f	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10db	            0x29d0	                            sub eax, edx	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10dd	      0xba01000000	                              mov edx, 1	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10e2	            0x89c1	                            mov ecx, eax	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10e4	          0x48d3e2	                             shl rdx, cl	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10e7	          0x4889d0	                            mov rax, rdx	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10ea	          0x4809c7	                             or rdi, rax	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10ed	          0x4889fa	                            mov rdx, rdi	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10f0	          0x4863c6	                         movsxd rax, esi	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10f3	    0x488994c5e0fe	    mov qword [rbp + rax*8 - 0x120], rdx	       789	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_32
0x10fb	      0xb800000000	                              mov eax, 0	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x1100	      0xb910000000	                           mov ecx, 0x10	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x1105	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x110c	          0x4889d7	                            mov rdi, rdx	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x110f	              0xfc	                                     cld	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x1110	          0xf348ab	              rep stosq qword [rdi], rax	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x1113	            0x89f8	                            mov eax, edi	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x1115	            0x89ca	                            mov edx, ecx	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x1117	    0x899580feffff	            mov dword [rbp - 0x180], edx	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x111d	    0x898584feffff	            mov dword [rbp - 0x17c], eax	       790	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_33
0x1123	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1129	          0x8d503f	                   lea edx, [rax + 0x3f]	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x112c	            0x85c0	                           test eax, eax	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x112e	           0xf48c2	                          cmovs eax, edx	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1131	          0xc1f806	                              sar eax, 6	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1134	            0x89c6	                            mov esi, eax	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1136	          0x4863c6	                         movsxd rax, esi	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1139	    0x488bbcc560ff	     mov rdi, qword [rbp + rax*8 - 0xa0]	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1141	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1147	              0x99	                                     cdq	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1148	          0xc1ea1a	                           shr edx, 0x1a	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x114b	             0x1d0	                            add eax, edx	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x114d	          0x83e03f	                           and eax, 0x3f	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1150	            0x29d0	                            sub eax, edx	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1152	      0xba01000000	                              mov edx, 1	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1157	            0x89c1	                            mov ecx, eax	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1159	          0x48d3e2	                             shl rdx, cl	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x115c	          0x4889d0	                            mov rax, rdx	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x115f	          0x4809c7	                             or rdi, rax	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1162	          0x4889fa	                            mov rdx, rdi	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1165	          0x4863c6	                         movsxd rax, esi	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1168	    0x488994c560ff	     mov qword [rbp + rax*8 - 0xa0], rdx	       791	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_34
0x1170	    0x8b8d74feffff	            mov ecx, dword [rbp - 0x18c]	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1176	      0xbad34d6210	                     mov edx, 0x10624dd3	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x117b	            0x89c8	                            mov eax, ecx	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x117d	            0xf7ea	                                imul edx	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x117f	          0xc1fa06	                              sar edx, 6	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1182	            0x89c8	                            mov eax, ecx	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1184	          0xc1f81f	                           sar eax, 0x1f	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1187	            0x29c2	                            sub edx, eax	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1189	            0x89d0	                            mov eax, edx	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x118b	            0x4898	                                    cdqe	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x118d	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       793	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1194	    0x8b8d74feffff	            mov ecx, dword [rbp - 0x18c]	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x119a	      0xbad34d6210	                     mov edx, 0x10624dd3	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x119f	            0x89c8	                            mov eax, ecx	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11a1	            0xf7ea	                                imul edx	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11a3	          0xc1fa06	                              sar edx, 6	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11a6	            0x89c8	                            mov eax, ecx	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11a8	          0xc1f81f	                           sar eax, 0x1f	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11ab	            0x29c2	                            sub edx, eax	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11ad	            0x89d0	                            mov eax, edx	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11af	    0x69c0e8030000	                    imul eax, eax, 0x3e8	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11b5	            0x29c1	                            sub ecx, eax	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11b7	            0x89c8	                            mov eax, ecx	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11b9	    0x69c0e8030000	                    imul eax, eax, 0x3e8	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11bf	            0x4898	                                    cdqe	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11c1	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       794	channel.c	FUNCTION_30	WHILE_1	IF_10
0x11c8	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       796	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_35
0x11cf	      0xbe00000000	                              mov esi, 0	       796	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_35
0x11d4	          0x4889c7	                            mov rdi, rax	       796	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_35
0x11d7	      0xe800000000	                          call 0x400121c	       796	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_35
0x11dc	    0x8b9574feffff	            mov edx, dword [rbp - 0x18c]	       798	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_36
0x11e2	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       798	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_36
0x11e9	      0xbe00000000	                              mov esi, 0	       798	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_36
0x11ee	          0x4889c7	                            mov rdi, rax	       798	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_36
0x11f1	      0xb800000000	                              mov eax, 0	       798	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_36
0x11f6	      0xe800000000	                          call 0x400123b	       798	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_36
0x11fb	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x1201	          0x8d7801	                      lea edi, [rax + 1]	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x1204	    0x488d8da0feff	                  lea rcx, [rbp - 0x160]	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x120b	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x1212	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x1219	          0x4989c8	                             mov r8, rcx	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x121c	      0xb900000000	                              mov ecx, 0	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x1221	          0x4889c6	                            mov rsi, rax	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x1224	      0xe800000000	                          call 0x4001269	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x1229	    0x898570feffff	            mov dword [rbp - 0x190], eax	       800	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_37
0x122f	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       802	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11
0x1236	            0x7976	                           jns 0x40012ee	       802	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11
0x1238	      0xe800000000	                          call 0x400127d	       806	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11
0x123d	            0x8b10	                    mov edx, dword [rax]	       805	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_38
0x123f	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       805	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_38
0x1246	      0xbe00000000	                              mov esi, 0	       805	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_38
0x124b	          0x4889c7	                            mov rdi, rax	       805	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_38
0x124e	      0xb800000000	                              mov eax, 0	       805	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_38
0x1253	      0xe884f0ffff	                       call sym.ch_error	       805	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_38
0x1258	      0xe800000000	                          call 0x400129d	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x125d	            0x8b00	                    mov eax, dword [rax]	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x125f	            0x89c7	                            mov edi, eax	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1261	      0xe800000000	                          call 0x40012a6	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1266	          0x4889c3	                            mov rbx, rax	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1269	    0x488b05000000	            mov rax, qword [0x040012b0] 	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1270	          0x4889c7	                            mov rdi, rax	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1273	      0xe800000000	                          call 0x40012b8	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1278	          0x4889da	                            mov rdx, rbx	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x127b	          0x4889c6	                            mov rsi, rax	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x127e	      0xbf00000000	                              mov edi, 0	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1283	      0xe800000000	                          call 0x40012c8	       807	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_40
0x1288	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       808	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_41
0x128e	            0x89c7	                            mov edi, eax	       808	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_41
0x1290	      0xe800000000	                          call 0x40012d5	       808	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_41
0x1295	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       809	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_42
0x129c	          0x4889c7	                            mov rdi, rax	       809	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_42
0x129f	      0xe8def4ffff	                   call sym.channel_free	       809	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11	CALL_42
0x12a4	      0xb800000000	                              mov eax, 0	       810	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11
0x12a9	      0xe9d9030000	                           jmp 0x40016c7	       810	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_11
0x12ae	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12b4	          0x8d503f	                   lea edx, [rax + 0x3f]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12b7	            0x85c0	                           test eax, eax	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12b9	           0xf48c2	                          cmovs eax, edx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12bc	          0xc1f806	                              sar eax, 6	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12bf	            0x4898	                                    cdqe	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12c1	    0x488bb4c5e0fe	    mov rsi, qword [rbp + rax*8 - 0x120]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12c9	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12cf	              0x99	                                     cdq	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12d0	          0xc1ea1a	                           shr edx, 0x1a	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12d3	             0x1d0	                            add eax, edx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12d5	          0x83e03f	                           and eax, 0x3f	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12d8	            0x29d0	                            sub eax, edx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12da	      0xba01000000	                              mov edx, 1	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12df	            0x89c1	                            mov ecx, eax	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12e1	          0x48d3e2	                             shl rdx, cl	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12e4	          0x4889d0	                            mov rax, rdx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12e7	          0x4821f0	                            and rax, rsi	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12ea	          0x4885c0	                           test rax, rax	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12ed	            0x7545	                           jne 0x4001374	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12ef	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12f5	          0x8d503f	                   lea edx, [rax + 0x3f]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12f8	            0x85c0	                           test eax, eax	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12fa	           0xf48c2	                          cmovs eax, edx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x12fd	          0xc1f806	                              sar eax, 6	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1300	            0x4898	                                    cdqe	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1302	    0x488bb4c560ff	     mov rsi, qword [rbp + rax*8 - 0xa0]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x130a	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1310	              0x99	                                     cdq	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1311	          0xc1ea1a	                           shr edx, 0x1a	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1314	             0x1d0	                            add eax, edx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1316	          0x83e03f	                           and eax, 0x3f	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1319	            0x29d0	                            sub eax, edx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x131b	      0xba01000000	                              mov edx, 1	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1320	            0x89c1	                            mov ecx, eax	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1322	          0x48d3e2	                             shl rdx, cl	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1325	          0x4889d0	                            mov rax, rdx	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1328	          0x4821f0	                            and rax, rsi	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x132b	          0x4885c0	                           test rax, rax	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x132e	     0xf84e6000000	                            je 0x400145a	       832	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_45
0x1334	    0x488d8d64feff	                  lea rcx, [rbp - 0x19c]	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x133b	    0x488d9560feff	                  lea rdx, [rbp - 0x1a0]	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x1342	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x1348	          0x4989c8	                             mov r8, rcx	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x134b	          0x4889d1	                            mov rcx, rdx	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x134e	      0xba04000000	                              mov edx, 4	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x1353	      0xbe01000000	                              mov esi, 1	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x1358	            0x89c7	                            mov edi, eax	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x135a	      0xe800000000	                          call 0x400139f	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x135f	    0x898570feffff	            mov dword [rbp - 0x190], eax	       834	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	CALL_46
0x1365	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       836	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x136c	            0x7837	                            js 0x40013e5	       836	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x136e	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       836	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x1374	            0x85c0	                           test eax, eax	       836	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x1376	     0xf849e000000	                            je 0x400145a	       836	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x137c	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       837	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x1382	          0x83f80b	                            cmp eax, 0xb	       837	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x1385	     0xf848f000000	                            je 0x400145a	       837	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x138b	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       838	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x1391	          0x83f86f	                           cmp eax, 0x6f	       838	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x1394	     0xf8480000000	                            je 0x400145a	       838	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x139a	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       840	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x13a0	          0x83f873	                           cmp eax, 0x73	       840	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x13a3	            0x7475	                            je 0x400145a	       840	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x13a5	    0x8b9560feffff	            mov edx, dword [rbp - 0x1a0]	       844	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_47
0x13ab	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       844	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_47
0x13b2	      0xbe00000000	                              mov esi, 0	       844	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_47
0x13b7	          0x4889c7	                            mov rdi, rax	       844	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_47
0x13ba	      0xb800000000	                              mov eax, 0	       844	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_47
0x13bf	      0xe818efffff	                       call sym.ch_error	       844	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_47
0x13c4	      0xe800000000	                          call 0x4001409	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13c9	            0x8b00	                    mov eax, dword [rax]	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13cb	            0x89c7	                            mov edi, eax	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13cd	      0xe800000000	                          call 0x4001412	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13d2	          0x4889c3	                            mov rbx, rax	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13d5	    0x488b05000000	            mov rax, qword [0x0400141c] 	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13dc	          0x4889c7	                            mov rdi, rax	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13df	      0xe800000000	                          call 0x4001424	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13e4	          0x4889da	                            mov rdx, rbx	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13e7	          0x4889c6	                            mov rsi, rax	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13ea	      0xbf00000000	                              mov edi, 0	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13ef	      0xe800000000	                          call 0x4001434	       847	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_49
0x13f4	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       848	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_50
0x13fa	            0x89c7	                            mov edi, eax	       848	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_50
0x13fc	      0xe800000000	                          call 0x4001441	       848	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_50
0x1401	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       849	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_51
0x1408	          0x4889c7	                            mov rdi, rax	       849	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_51
0x140b	      0xe872f3ffff	                   call sym.channel_free	       849	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15	CALL_51
0x1410	      0xb800000000	                              mov eax, 0	       850	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x1415	      0xe96d020000	                           jmp 0x40016c7	       850	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_14	IF_15
0x141a	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1420	          0x8d503f	                   lea edx, [rax + 0x3f]	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1423	            0x85c0	                           test eax, eax	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1425	           0xf48c2	                          cmovs eax, edx	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1428	          0xc1f806	                              sar eax, 6	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x142b	            0x4898	                                    cdqe	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x142d	    0x488bb4c560ff	     mov rsi, qword [rbp + rax*8 - 0xa0]	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1435	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x143b	              0x99	                                     cdq	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x143c	          0xc1ea1a	                           shr edx, 0x1a	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x143f	             0x1d0	                            add eax, edx	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1441	          0x83e03f	                           and eax, 0x3f	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1444	            0x29d0	                            sub eax, edx	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1446	      0xba01000000	                              mov edx, 1	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x144b	            0x89c1	                            mov ecx, eax	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x144d	          0x48d3e2	                             shl rdx, cl	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1450	          0x4889d0	                            mov rax, rdx	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1453	          0x4821f0	                            and rax, rsi	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1456	          0x4885c0	                           test rax, rax	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1459	            0x740e	                            je 0x40014a9	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x145b	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1461	            0x85c0	                           test eax, eax	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1463	     0xf844d010000	                            je 0x40015f6	       854	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16	CALL_52
0x1469	    0x488d85c0feff	                  lea rax, [rbp - 0x140]	       858	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_53
0x1470	      0xbe00000000	                              mov esi, 0	       858	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_53
0x1475	          0x4889c7	                            mov rdi, rax	       858	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_53
0x1478	      0xe800000000	                          call 0x40014bd	       858	channel.c	FUNCTION_30	WHILE_1	IF_10	CALL_53
0x147d	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       859	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1484	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	       859	channel.c	FUNCTION_30	WHILE_1	IF_10
0x148b	          0x4829c2	                            sub rdx, rax	       859	channel.c	FUNCTION_30	WHILE_1	IF_10
0x148e	          0x4889d0	                            mov rax, rdx	       859	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1491	    0x4869f0e80300	                    imul rsi, rax, 0x3e8	       859	channel.c	FUNCTION_30	WHILE_1	IF_10
0x1498	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x149f	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14a6	          0x4889d1	                            mov rcx, rdx	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14a9	          0x4829c1	                            sub rcx, rax	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14ac	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14b6	          0x4889c8	                            mov rax, rcx	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14b9	          0x48f7ea	                                imul rdx	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14bc	        0x48c1fa07	                              sar rdx, 7	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14c0	          0x4889c8	                            mov rax, rcx	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14c3	        0x48c1f83f	                           sar rax, 0x3f	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14c7	          0x4829c2	                            sub rdx, rax	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14ca	          0x4889d0	                            mov rax, rdx	       860	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14cd	          0x4801f0	                            add rax, rsi	       859	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14d0	    0x48898588feff	            mov qword [rbp - 0x178], rax	       859	channel.c	FUNCTION_30	WHILE_1	IF_10
0x14d7	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 1	       865	channel.c	FUNCTION_30	WHILE_1	IF_17
0x14de	     0xf8e90000000	                           jle 0x40015b4	       865	channel.c	FUNCTION_30	WHILE_1	IF_17
0x14e4	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	       865	channel.c	FUNCTION_30	WHILE_1	IF_17
0x14ea	            0x4898	                                    cdqe	       865	channel.c	FUNCTION_30	WHILE_1	IF_17
0x14ec	    0x483b8588feff	            cmp rax, qword [rbp - 0x178]	       865	channel.c	FUNCTION_30	WHILE_1	IF_17
0x14f3	            0x7e7f	                           jle 0x40015b4	       865	channel.c	FUNCTION_30	WHILE_1	IF_17
0x14f5	    0x8b8574feffff	            mov eax, dword [rbp - 0x18c]	       871	channel.c	FUNCTION_30	WHILE_1	IF_17
0x14fb	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	       871	channel.c	FUNCTION_30	WHILE_1	IF_17
0x1502	            0x29d0	                            sub eax, edx	       871	channel.c	FUNCTION_30	WHILE_1	IF_17
0x1504	    0x898574feffff	            mov dword [rbp - 0x18c], eax	       871	channel.c	FUNCTION_30	WHILE_1	IF_17
0x150a	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	       872	channel.c	FUNCTION_30	WHILE_1	IF_17
0x1510	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	       872	channel.c	FUNCTION_30	WHILE_1	IF_17
0x1517	            0x29d0	                            sub eax, edx	       872	channel.c	FUNCTION_30	WHILE_1	IF_17
0x1519	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	       872	channel.c	FUNCTION_30	WHILE_1	IF_17
0x151f	    0x83bd74feffff	              cmp dword [rbp - 0x18c], 0	       873	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18
0x1526	            0x7e26	                           jle 0x400158e	       873	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18
0x1528	    0x8b8574feffff	            mov eax, dword [rbp - 0x18c]	       875	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18	CALL_54
0x152e	            0x4898	                                    cdqe	       875	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18	CALL_54
0x1530	      0xbe01000000	                              mov esi, 1	       875	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18	CALL_54
0x1535	          0x4889c7	                            mov rdi, rax	       875	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18	CALL_54
0x1538	      0xe800000000	                          call 0x400157d	       875	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18	CALL_54
0x153d	      0xe800000000	                          call 0x4001582	       876	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18	CALL_55
0x1542	    0x8b8574feffff	            mov eax, dword [rbp - 0x18c]	       877	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18
0x1548	    0x298550feffff	            sub dword [rbp - 0x1b0], eax	       877	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_18
0x154e	    0x8b0500000000	            mov eax, dword [0x04001594] 	       879	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_19
0x1554	            0x85c0	                           test eax, eax	       879	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_19
0x1556	            0x751c	                           jne 0x40015b4	       879	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_19
0x1558	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       881	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_19	IF_20
0x155f	     0xf8fd4f8ffff	                            jg 0x4000e79	       881	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_19	IF_20
0x1565	    0xc78550feffff	              mov dword [rbp - 0x1b0], 1	       883	channel.c	FUNCTION_30	WHILE_1	IF_17	IF_19	IF_20
0x156f	      0xe9c5f8ffff	                           jmp 0x4000e79	       895	channel.c	FUNCTION_30	WHILE_1
0x1574	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       891	channel.c	FUNCTION_30	WHILE_1	CALL_56
0x157b	      0xbe00000000	                              mov esi, 0	       891	channel.c	FUNCTION_30	WHILE_1	CALL_56
0x1580	          0x4889c7	                            mov rdi, rax	       891	channel.c	FUNCTION_30	WHILE_1	CALL_56
0x1583	      0xb800000000	                              mov eax, 0	       891	channel.c	FUNCTION_30	WHILE_1	CALL_56
0x1588	      0xe84fedffff	                       call sym.ch_error	       891	channel.c	FUNCTION_30	WHILE_1	CALL_56
0x158d	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       892	channel.c	FUNCTION_30	WHILE_1	CALL_57
0x1593	            0x89c7	                            mov edi, eax	       892	channel.c	FUNCTION_30	WHILE_1	CALL_57
0x1595	      0xe800000000	                          call 0x40015da	       892	channel.c	FUNCTION_30	WHILE_1	CALL_57
0x159a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       893	channel.c	FUNCTION_30	WHILE_1	CALL_58
0x15a1	          0x4889c7	                            mov rdi, rax	       893	channel.c	FUNCTION_30	WHILE_1	CALL_58
0x15a4	      0xe8d9f1ffff	                   call sym.channel_free	       893	channel.c	FUNCTION_30	WHILE_1	CALL_58
0x15a9	      0xb800000000	                              mov eax, 0	       894	channel.c	FUNCTION_30	WHILE_1
0x15ae	      0xe9d4000000	                           jmp 0x40016c7	       894	channel.c	FUNCTION_30	WHILE_1
0x15b3	              0x90	                                     nop	       751	channel.c	FUNCTION_30	WHILE_1	IF_8
0x15b4	            0xeb01	                           jmp 0x40015f7	       751	channel.c	FUNCTION_30	WHILE_1	IF_8
0x15b6	              0x90	                                     nop	       856	channel.c	FUNCTION_30	WHILE_1	IF_10	IF_16
0x15b7	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       897	channel.c	FUNCTION_30	CALL_59
0x15be	      0xbe00000000	                              mov esi, 0	       897	channel.c	FUNCTION_30	CALL_59
0x15c3	          0x4889c7	                            mov rdi, rax	       897	channel.c	FUNCTION_30	CALL_59
0x15c6	      0xb800000000	                              mov eax, 0	       897	channel.c	FUNCTION_30	CALL_59
0x15cb	      0xe800000000	                          call 0x4001610	       897	channel.c	FUNCTION_30	CALL_59
0x15d0	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	       899	channel.c	FUNCTION_30	IF_21
0x15d7	            0x781c	                            js 0x4001635	       899	channel.c	FUNCTION_30	IF_21
0x15d9	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	       905	channel.c	FUNCTION_30	IF_21	CALL_61
0x15df	      0xba00000000	                              mov edx, 0	       905	channel.c	FUNCTION_30	IF_21	CALL_61
0x15e4	      0xbe04000000	                              mov esi, 4	       905	channel.c	FUNCTION_30	IF_21	CALL_61
0x15e9	            0x89c7	                            mov edi, eax	       905	channel.c	FUNCTION_30	IF_21	CALL_61
0x15eb	      0xb800000000	                              mov eax, 0	       905	channel.c	FUNCTION_30	IF_21	CALL_61
0x15f0	      0xe800000000	                          call 0x4001635	       905	channel.c	FUNCTION_30	IF_21	CALL_61
0x15f5	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       909	channel.c	FUNCTION_30
0x15fc	    0x8b9568feffff	            mov edx, dword [rbp - 0x198]	       909	channel.c	FUNCTION_30
0x1602	          0x895018	             mov dword [rax + 0x18], edx	       909	channel.c	FUNCTION_30
0x1605	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       910	channel.c	FUNCTION_30
0x160c	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	       910	channel.c	FUNCTION_30
0x1613	    0x488990780400	            mov qword [rax + 0x478], rdx	       910	channel.c	FUNCTION_30
0x161a	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	       911	channel.c	FUNCTION_30	CALL_62
0x1621	          0x4889c7	                            mov rdi, rax	       911	channel.c	FUNCTION_30	CALL_62
0x1624	      0xe800000000	                          call 0x4001669	       911	channel.c	FUNCTION_30	CALL_62
0x1629	          0x4889c2	                            mov rdx, rax	       911	channel.c	FUNCTION_30	CALL_62
0x162c	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       911	channel.c	FUNCTION_30	CALL_62
0x1633	    0x488990600400	            mov qword [rax + 0x460], rdx	       911	channel.c	FUNCTION_30	CALL_62
0x163a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       912	channel.c	FUNCTION_30
0x1641	    0x8b9554feffff	            mov edx, dword [rbp - 0x1ac]	       912	channel.c	FUNCTION_30
0x1647	    0x899068040000	            mov dword [rax + 0x468], edx	       912	channel.c	FUNCTION_30
0x164d	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       913	channel.c	FUNCTION_30
0x1654	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	       913	channel.c	FUNCTION_30
0x165a	          0x83c801	                               or eax, 1	       913	channel.c	FUNCTION_30
0x165d	            0x89c2	                            mov edx, eax	       913	channel.c	FUNCTION_30
0x165f	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       913	channel.c	FUNCTION_30
0x1666	    0x89906c040000	            mov dword [rax + 0x46c], edx	       913	channel.c	FUNCTION_30
0x166c	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       916	channel.c	FUNCTION_30	CALL_63
0x1673	      0xbe00000000	                              mov esi, 0	       916	channel.c	FUNCTION_30	CALL_63
0x1678	          0x4889c7	                            mov rdi, rax	       916	channel.c	FUNCTION_30	CALL_63
0x167b	      0xe864f3ffff	       call sym.channel_gui_register_one	       916	channel.c	FUNCTION_30	CALL_63
0x1680	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       919	channel.c	FUNCTION_30
0x1687	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       920	channel.c	FUNCTION_30
0x168b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       920	channel.c	FUNCTION_30
0x1694	            0x7405	                            je 0x40016db	       920	channel.c	FUNCTION_30
0x1696	      0xe800000000	                          call 0x40016db	       920	channel.c	FUNCTION_30
0x169b	    0x4881c4b80100	                          add rsp, 0x1b8	       920	channel.c	FUNCTION_30
0x16a2	              0x5b	                                 pop rbx	       920	channel.c	FUNCTION_30
0x16a3	              0x5d	                                 pop rbp	       920	channel.c	FUNCTION_30
0x16a4	              0xc3	                                     ret	       920	channel.c	FUNCTION_30
ch_log	functions,0:SWITCH,0:CALL,6:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	56
0x1b9	              0x55	                                push rbp	       164	channel.c	FUNCTION_7
0x1ba	          0x4889e5	                            mov rbp, rsp	       164	channel.c	FUNCTION_7
0x1bd	    0x4881ece00000	                           sub rsp, 0xe0	       164	channel.c	FUNCTION_7
0x1c4	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       164	channel.c	FUNCTION_7
0x1cb	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       164	channel.c	FUNCTION_7
0x1d2	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       164	channel.c	FUNCTION_7
0x1d9	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       164	channel.c	FUNCTION_7
0x1e0	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       164	channel.c	FUNCTION_7
0x1e7	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       164	channel.c	FUNCTION_7
0x1ee	            0x84c0	                             test al, al	       164	channel.c	FUNCTION_7
0x1f0	            0x7420	                            je 0x4000252	       164	channel.c	FUNCTION_7
0x1f2	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       164	channel.c	FUNCTION_7
0x1f6	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       164	channel.c	FUNCTION_7
0x1fa	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       164	channel.c	FUNCTION_7
0x1fe	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       164	channel.c	FUNCTION_7
0x202	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       164	channel.c	FUNCTION_7
0x206	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       164	channel.c	FUNCTION_7
0x20a	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       164	channel.c	FUNCTION_7
0x20e	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       164	channel.c	FUNCTION_7
0x212	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	channel.c	FUNCTION_7
0x21b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       164	channel.c	FUNCTION_7
0x222	            0x31c0	                            xor eax, eax	       164	channel.c	FUNCTION_7
0x224	    0x488b05000000	            mov rax, qword [0x0400026b] 	       165	channel.c	FUNCTION_7	IF_1
0x22b	          0x4885c0	                           test rax, rax	       165	channel.c	FUNCTION_7	IF_1
0x22e	     0xf848e000000	                            je 0x4000302	       165	channel.c	FUNCTION_7	IF_1
0x234	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       169	channel.c	FUNCTION_7	IF_1	CALL_1
0x23b	          0x4889c6	                            mov rsi, rax	       169	channel.c	FUNCTION_7	IF_1	CALL_1
0x23e	      0xbf00000000	                              mov edi, 0	       169	channel.c	FUNCTION_7	IF_1	CALL_1
0x243	      0xe89cfeffff	                    call sym.ch_log_lead	       169	channel.c	FUNCTION_7	IF_1	CALL_1
0x248	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       170	channel.c	FUNCTION_7	IF_1	CALL_2
0x252	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       170	channel.c	FUNCTION_7	IF_1	CALL_2
0x25c	        0x488d4510	                   lea rax, [rbp + 0x10]	       170	channel.c	FUNCTION_7	IF_1	CALL_2
0x260	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       170	channel.c	FUNCTION_7	IF_1	CALL_2
0x267	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       170	channel.c	FUNCTION_7	IF_1	CALL_2
0x26e	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       170	channel.c	FUNCTION_7	IF_1	CALL_2
0x275	    0x488b05000000	            mov rax, qword [0x040002bc] 	       171	channel.c	FUNCTION_7	IF_1	CALL_3
0x27c	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       171	channel.c	FUNCTION_7	IF_1	CALL_3
0x283	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       171	channel.c	FUNCTION_7	IF_1	CALL_3
0x28a	          0x4889ce	                            mov rsi, rcx	       171	channel.c	FUNCTION_7	IF_1	CALL_3
0x28d	          0x4889c7	                            mov rdi, rax	       171	channel.c	FUNCTION_7	IF_1	CALL_3
0x290	      0xe800000000	                          call 0x40002d5	       171	channel.c	FUNCTION_7	IF_1	CALL_3
0x295	    0x488b05000000	            mov rax, qword [0x040002dc] 	       173	channel.c	FUNCTION_7	IF_1	CALL_5
0x29c	          0x4889c6	                            mov rsi, rax	       173	channel.c	FUNCTION_7	IF_1	CALL_5
0x29f	      0xbf0a000000	                            mov edi, 0xa	       173	channel.c	FUNCTION_7	IF_1	CALL_5
0x2a4	      0xe800000000	                          call 0x40002e9	       173	channel.c	FUNCTION_7	IF_1	CALL_5
0x2a9	    0x488b05000000	            mov rax, qword [0x040002f0] 	       174	channel.c	FUNCTION_7	IF_1	CALL_6
0x2b0	          0x4889c7	                            mov rdi, rax	       174	channel.c	FUNCTION_7	IF_1	CALL_6
0x2b3	      0xe800000000	                          call 0x40002f8	       174	channel.c	FUNCTION_7	IF_1	CALL_6
0x2b8	    0xc70500000000	               mov dword [0x04000302], 1	       175	channel.c	FUNCTION_7	IF_1
0x2c2	              0x90	                                     nop	       177	channel.c	FUNCTION_7
0x2c3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       177	channel.c	FUNCTION_7
0x2ca	    0x644833042528	                xor rax, qword fs:[0x28]	       177	channel.c	FUNCTION_7
0x2d3	            0x7405	                            je 0x400031a	       177	channel.c	FUNCTION_7
0x2d5	      0xe800000000	                          call 0x400031a	       177	channel.c	FUNCTION_7
0x2da	              0xc9	                                   leave	       177	channel.c	FUNCTION_7
0x2db	              0xc3	                                     ret	       177	channel.c	FUNCTION_7
channel_read_json_block	functions,0:SWITCH,0:CALL,9:ELSE,2:IF,10:FOR,1:WHILE,0:DO,0	143
0x6a11	              0x55	                                push rbp	      3451	channel.c	FUNCTION_84
0x6a12	          0x4889e5	                            mov rbp, rsp	      3451	channel.c	FUNCTION_84
0x6a15	        0x4883ec60	                           sub rsp, 0x60	      3451	channel.c	FUNCTION_84
0x6a19	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3451	channel.c	FUNCTION_84
0x6a1d	          0x8975b4	             mov dword [rbp - 0x4c], esi	      3451	channel.c	FUNCTION_84
0x6a20	          0x8955b0	             mov dword [rbp - 0x50], edx	      3451	channel.c	FUNCTION_84
0x6a23	          0x894dac	             mov dword [rbp - 0x54], ecx	      3451	channel.c	FUNCTION_84
0x6a26	        0x4c8945a0	              mov qword [rbp - 0x60], r8	      3451	channel.c	FUNCTION_84
0x6a2a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3451	channel.c	FUNCTION_84
0x6a33	        0x488945f8	                mov qword [rbp - 8], rax	      3451	channel.c	FUNCTION_84
0x6a37	            0x31c0	                            xor eax, eax	      3451	channel.c	FUNCTION_84
0x6a39	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3455	channel.c	FUNCTION_84
0x6a3c	        0x48c1e004	                              shl rax, 4	      3455	channel.c	FUNCTION_84
0x6a40	          0x4889c2	                            mov rdx, rax	      3455	channel.c	FUNCTION_84
0x6a43	        0x48c1e204	                              shl rdx, 4	      3455	channel.c	FUNCTION_84
0x6a47	          0x4801d0	                            add rax, rdx	      3455	channel.c	FUNCTION_84
0x6a4a	        0x488d5010	                   lea rdx, [rax + 0x10]	      3455	channel.c	FUNCTION_84
0x6a4e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3455	channel.c	FUNCTION_84
0x6a52	          0x4801d0	                            add rax, rdx	      3455	channel.c	FUNCTION_84
0x6a55	        0x4883c008	                              add rax, 8	      3455	channel.c	FUNCTION_84
0x6a59	        0x488945d8	             mov qword [rbp - 0x28], rax	      3455	channel.c	FUNCTION_84
0x6a5d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3457	channel.c	FUNCTION_84	CALL_1
0x6a61	      0xbe00000000	                              mov esi, 0	      3457	channel.c	FUNCTION_84	CALL_1
0x6a66	          0x4889c7	                            mov rdi, rax	      3457	channel.c	FUNCTION_84	CALL_1
0x6a69	      0xb800000000	                              mov eax, 0	      3457	channel.c	FUNCTION_84	CALL_1
0x6a6e	      0xe800000000	                          call 0x4006ab3	      3457	channel.c	FUNCTION_84	CALL_1
0x6a73	        0x837dacff	cmp dword [rbp - 0x54], 0xffffffffffffffff	      3458	channel.c	FUNCTION_84	IF_1
0x6a77	            0x740a	                            je 0x4006ac3	      3458	channel.c	FUNCTION_84	IF_1
0x6a79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3459	channel.c	FUNCTION_84	IF_1
0x6a7d	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3459	channel.c	FUNCTION_84	IF_1
0x6a80	          0x895058	             mov dword [rax + 0x58], edx	      3459	channel.c	FUNCTION_84	IF_1
0x6a83	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3462	channel.c	FUNCTION_84	FOR_1	CALL_2
0x6a86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3462	channel.c	FUNCTION_84	FOR_1	CALL_2
0x6a8a	            0x89d6	                            mov esi, edx	      3462	channel.c	FUNCTION_84	FOR_1	CALL_2
0x6a8c	          0x4889c7	                            mov rdi, rax	      3462	channel.c	FUNCTION_84	FOR_1	CALL_2
0x6a8f	      0xe807cdffff	             call sym.channel_parse_json	      3462	channel.c	FUNCTION_84	FOR_1	CALL_2
0x6a94	          0x8945d0	             mov dword [rbp - 0x30], eax	      3462	channel.c	FUNCTION_84	FOR_1	CALL_2
0x6a97	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6a9b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6a9e	          0x8b75b4	             mov esi, dword [rbp - 0x4c]	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6aa1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6aa5	          0x4989c8	                             mov r8, rcx	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6aa8	      0xb901000000	                              mov ecx, 1	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6aad	          0x4889c7	                            mov rdi, rax	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6ab0	      0xe8a2d2ffff	               call sym.channel_get_json	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6ab5	          0x83f801	                              cmp eax, 1	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6ab8	            0x7515	                           jne 0x4006b0f	      3465	channel.c	FUNCTION_84	FOR_1	IF_2	CALL_3
0x6aba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3467	channel.c	FUNCTION_84	FOR_1	IF_2
0x6abe	    0xc74058000000	               mov dword [rax + 0x58], 0	      3467	channel.c	FUNCTION_84	FOR_1	IF_2
0x6ac5	      0xb801000000	                              mov eax, 1	      3468	channel.c	FUNCTION_84	FOR_1	IF_2
0x6aca	      0xe935010000	                           jmp 0x4006c44	      3468	channel.c	FUNCTION_84	FOR_1	IF_2
0x6acf	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3471	channel.c	FUNCTION_84	FOR_1	IF_3
0x6ad3	            0x75ae	                           jne 0x4006ac3	      3471	channel.c	FUNCTION_84	FOR_1	IF_3
0x6ad5	      0xe800000000	                          call 0x4006b1a	      3475	channel.c	FUNCTION_84	FOR_1	IF_3	IF_4	CALL_4
0x6ada	            0x85c0	                           test eax, eax	      3475	channel.c	FUNCTION_84	FOR_1	IF_3	IF_4	CALL_4
0x6adc	     0xf850b010000	                           jne 0x4006c2d	      3475	channel.c	FUNCTION_84	FOR_1	IF_3	IF_4	CALL_4
0x6ae2	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3480	channel.c	FUNCTION_84	FOR_1	IF_3
0x6ae5	          0x8945cc	             mov dword [rbp - 0x34], eax	      3480	channel.c	FUNCTION_84	FOR_1	IF_3
0x6ae8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3481	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6aec	        0x488b4060	            mov rax, qword [rax + 0x60] 	      3481	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6af0	          0x4885c0	                           test rax, rax	      3481	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6af3	     0xf848c000000	                            je 0x4006bc5	      3481	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6af9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3489	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	CALL_6
0x6afd	      0xbe00000000	                              mov esi, 0	      3489	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	CALL_6
0x6b02	          0x4889c7	                            mov rdi, rax	      3489	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	CALL_6
0x6b05	      0xe800000000	                          call 0x4006b4a	      3489	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	CALL_6
0x6b0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3490	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b0e	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      3490	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b12	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3491	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b16	          0x4829c2	                            sub rdx, rax	      3491	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b19	          0x4889d0	                            mov rax, rdx	      3491	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b1c	    0x69f0e8030000	                    imul esi, eax, 0x3e8	      3490	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3492	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b26	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      3492	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b2e	          0x4889d1	                            mov rcx, rdx	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b31	          0x4829c1	                            sub rcx, rax	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b34	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b3e	          0x4889c8	                            mov rax, rcx	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b41	          0x48f7ea	                                imul rdx	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b44	        0x48c1fa07	                              sar rdx, 7	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b48	          0x4889c8	                            mov rax, rcx	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b4b	        0x48c1f83f	                           sar rax, 0x3f	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b4f	          0x4829c2	                            sub rdx, rax	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b52	          0x4889d0	                            mov rax, rdx	      3493	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b55	             0x1f0	                            add eax, esi	      3490	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b57	          0x83c001	                              add eax, 1	      3490	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b5a	          0x8945cc	             mov dword [rbp - 0x34], eax	      3490	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5
0x6b5d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3497	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	IF_6
0x6b61	            0x7914	                           jns 0x4006bb7	      3497	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	IF_6
0x6b63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3501	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	IF_6
0x6b67	    0x48c740600000	               mov qword [rax + 0x60], 0	      3501	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	IF_6
0x6b6f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3502	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	IF_6
0x6b72	          0x8945cc	             mov dword [rbp - 0x34], eax	      3502	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	IF_6
0x6b75	            0xeb0e	                           jmp 0x4006bc5	      3502	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	IF_6
0x6b77	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3504	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x6b7a	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3504	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x6b7d	            0x7e06	                           jle 0x4006bc5	      3504	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x6b7f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3505	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x6b82	          0x8945cc	             mov dword [rbp - 0x34], eax	      3505	channel.c	FUNCTION_84	FOR_1	IF_3	IF_5	ELSE_1	IF_7
0x6b85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3507	channel.c	FUNCTION_84	FOR_1	IF_3
0x6b89	            0x8b00	                    mov eax, dword [rax]	      3507	channel.c	FUNCTION_84	FOR_1	IF_3
0x6b8b	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3507	channel.c	FUNCTION_84	FOR_1	IF_3
0x6b8e	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3508	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8
0x6b92	            0x7418	                            je 0x4006bec	      3508	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8
0x6b94	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6b97	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6b9a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6b9e	            0x89ce	                            mov esi, ecx	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6ba0	          0x4889c7	                            mov rdi, rax	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6ba3	      0xe8e8f5ffff	                   call sym.channel_wait	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6ba8	            0x85c0	                           test eax, eax	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6baa	            0x7426	                            je 0x4006c12	      3509	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	CALL_7
0x6bac	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3511	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9
0x6baf	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3511	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9
0x6bb2	            0x753a	                           jne 0x4006c2e	      3511	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9
0x6bb4	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3513	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9	IF_10
0x6bb8	            0x7439	                            je 0x4006c33	      3513	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9	IF_10
0x6bba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3514	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x6bbe	      0xbe00000000	                              mov esi, 0	      3514	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x6bc3	          0x4889c7	                            mov rdi, rax	      3514	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x6bc6	      0xb800000000	                              mov eax, 0	      3514	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x6bcb	      0xe800000000	                          call 0x4006c10	      3514	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9	CALL_8
0x6bd0	            0xeb21	                           jmp 0x4006c33	      3515	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9
0x6bd2	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3519	channel.c	FUNCTION_84	FOR_1	IF_3	CALL_9
0x6bd5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3519	channel.c	FUNCTION_84	FOR_1	IF_3	CALL_9
0x6bd9	      0xba00000000	                              mov edx, 0	      3519	channel.c	FUNCTION_84	FOR_1	IF_3	CALL_9
0x6bde	            0x89ce	                            mov esi, ecx	      3519	channel.c	FUNCTION_84	FOR_1	IF_3	CALL_9
0x6be0	          0x4889c7	                            mov rdi, rax	      3519	channel.c	FUNCTION_84	FOR_1	IF_3	CALL_9
0x6be3	      0xe8cdf9ffff	                   call sym.channel_read	      3519	channel.c	FUNCTION_84	FOR_1	IF_3	CALL_9
0x6be8	      0xe996feffff	                           jmp 0x4006ac3	      3519	channel.c	FUNCTION_84	FOR_1	IF_3	CALL_9
0x6bed	              0x90	                                     nop	      3476	channel.c	FUNCTION_84	FOR_1	IF_3	IF_4
0x6bee	      0xe990feffff	                           jmp 0x4006ac3	      3521	channel.c	FUNCTION_84	FOR_1
0x6bf3	              0x90	                                     nop	      3515	channel.c	FUNCTION_84	FOR_1	IF_3	IF_8	IF_9
0x6bf4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3522	channel.c	FUNCTION_84
0x6bf8	    0xc74058000000	               mov dword [rax + 0x58], 0	      3522	channel.c	FUNCTION_84
0x6bff	      0xb800000000	                              mov eax, 0	      3523	channel.c	FUNCTION_84
0x6c04	        0x488b7df8	                mov rdi, qword [rbp - 8]	      3524	channel.c	FUNCTION_84
0x6c08	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3524	channel.c	FUNCTION_84
0x6c11	            0x7405	                            je 0x4006c58	      3524	channel.c	FUNCTION_84
0x6c13	      0xe800000000	                          call 0x4006c58	      3524	channel.c	FUNCTION_84
0x6c18	              0xc9	                                   leave	      3524	channel.c	FUNCTION_84
0x6c19	              0xc3	                                     ret	      3524	channel.c	FUNCTION_84
free_unused_channels	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	32
0x8de	              0x55	                                push rbp	       450	channel.c	FUNCTION_20
0x8df	          0x4889e5	                            mov rbp, rsp	       450	channel.c	FUNCTION_20
0x8e2	        0x4883ec20	                           sub rsp, 0x20	       450	channel.c	FUNCTION_20
0x8e6	          0x897dec	             mov dword [rbp - 0x14], edi	       450	channel.c	FUNCTION_20
0x8e9	          0x8975e8	             mov dword [rbp - 0x18], esi	       450	channel.c	FUNCTION_20
0x8ec	    0x488b05000000	            mov rax, qword [0x04000933] 	       454	channel.c	FUNCTION_20	FOR_1
0x8f3	        0x488945f0	             mov qword [rbp - 0x10], rax	       454	channel.c	FUNCTION_20	FOR_1
0x8f7	            0xeb43	                           jmp 0x400097c	       454	channel.c	FUNCTION_20	FOR_1
0x8f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       456	channel.c	FUNCTION_20	FOR_1
0x8fd	          0x488b00	                    mov rax, qword [rax]	       456	channel.c	FUNCTION_20	FOR_1
0x900	        0x488945f8	                mov qword [rbp - 8], rax	       456	channel.c	FUNCTION_20	FOR_1
0x904	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       457	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_1
0x908	          0x4889c7	                            mov rdi, rax	       457	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_1
0x90b	      0xe819fcffff	           call sym.channel_still_useful	       457	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_1
0x910	            0x85c0	                           test eax, eax	       457	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_1
0x912	            0x7520	                           jne 0x4000974	       457	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_1
0x914	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       458	channel.c	FUNCTION_20	FOR_1	IF_1
0x918	    0x8b80b8040000	           mov eax, dword [rax + 0x4b8] 	       458	channel.c	FUNCTION_20	FOR_1	IF_1
0x91e	          0x3345ec	             xor eax, dword [rbp - 0x14]	       458	channel.c	FUNCTION_20	FOR_1	IF_1
0x921	          0x2345e8	             and eax, dword [rbp - 0x18]	       458	channel.c	FUNCTION_20	FOR_1	IF_1
0x924	            0x85c0	                           test eax, eax	       458	channel.c	FUNCTION_20	FOR_1	IF_1
0x926	            0x740c	                            je 0x4000974	       458	channel.c	FUNCTION_20	FOR_1	IF_1
0x928	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       461	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_2
0x92c	          0x4889c7	                            mov rdi, rax	       461	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_2
0x92f	      0xe8e5fdffff	           call sym.channel_free_channel	       461	channel.c	FUNCTION_20	FOR_1	IF_1	CALL_2
0x934	        0x488b45f8	                mov rax, qword [rbp - 8]	       454	channel.c	FUNCTION_20	FOR_1
0x938	        0x488945f0	             mov qword [rbp - 0x10], rax	       454	channel.c	FUNCTION_20	FOR_1
0x93c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       454	channel.c	FUNCTION_20	FOR_1
0x941	            0x75b6	                           jne 0x4000939	       454	channel.c	FUNCTION_20	FOR_1
0x943	              0x90	                                     nop	       464	channel.c	FUNCTION_20
0x944	              0xc9	                                   leave	       464	channel.c	FUNCTION_20
0x945	              0xc3	                                     ret	       464	channel.c	FUNCTION_20
handle_mode	functions,0:SWITCH,0:CALL,7:ELSE,4:IF,4:FOR,0:WHILE,0:DO,0	65
0x829f	              0x55	                                push rbp	      4394	channel.c	FUNCTION_105
0x82a0	          0x4889e5	                            mov rbp, rsp	      4394	channel.c	FUNCTION_105
0x82a3	        0x4883ec30	                           sub rsp, 0x30	      4394	channel.c	FUNCTION_105
0x82a7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4394	channel.c	FUNCTION_105
0x82ab	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4394	channel.c	FUNCTION_105
0x82af	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4394	channel.c	FUNCTION_105
0x82b3	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      4394	channel.c	FUNCTION_105
0x82b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4395	channel.c	FUNCTION_105	CALL_1
0x82ba	          0x4889c7	                            mov rdi, rax	      4395	channel.c	FUNCTION_105	CALL_1
0x82bd	      0xe800000000	                          call 0x4008302	      4395	channel.c	FUNCTION_105	CALL_1
0x82c2	        0x488945f8	                mov qword [rbp - 8], rax	      4395	channel.c	FUNCTION_105	CALL_1
0x82c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4397	channel.c	FUNCTION_105
0x82ca	            0x8b00	                    mov eax, dword [rax]	      4397	channel.c	FUNCTION_105
0x82cc	           0xb45d4	              or eax, dword [rbp - 0x2c]	      4397	channel.c	FUNCTION_105
0x82cf	            0x89c2	                            mov edx, eax	      4397	channel.c	FUNCTION_105
0x82d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4397	channel.c	FUNCTION_105
0x82d5	            0x8910	                    mov dword [rax], edx	      4397	channel.c	FUNCTION_105
0x82d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4398	channel.c	FUNCTION_105	IF_1	CALL_2
0x82db	      0xbe00000000	                              mov esi, 0	      4398	channel.c	FUNCTION_105	IF_1	CALL_2
0x82e0	          0x4889c7	                            mov rdi, rax	      4398	channel.c	FUNCTION_105	IF_1	CALL_2
0x82e3	      0xe800000000	                          call 0x4008328	      4398	channel.c	FUNCTION_105	IF_1	CALL_2
0x82e8	            0x85c0	                           test eax, eax	      4398	channel.c	FUNCTION_105	IF_1	CALL_2
0x82ea	            0x750f	                           jne 0x400833b	      4398	channel.c	FUNCTION_105	IF_1	CALL_2
0x82ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4399	channel.c	FUNCTION_105	IF_1
0x82f0	    0xc70000000000	                      mov dword [rax], 0	      4399	channel.c	FUNCTION_105	IF_1
0x82f6	      0xe986000000	                           jmp 0x40083c1	      4399	channel.c	FUNCTION_105	IF_1
0x82fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4400	channel.c	FUNCTION_105	ELSE_1	IF_2	CALL_3
0x82ff	      0xbe00000000	                              mov esi, 0	      4400	channel.c	FUNCTION_105	ELSE_1	IF_2	CALL_3
0x8304	          0x4889c7	                            mov rdi, rax	      4400	channel.c	FUNCTION_105	ELSE_1	IF_2	CALL_3
0x8307	      0xe800000000	                          call 0x400834c	      4400	channel.c	FUNCTION_105	ELSE_1	IF_2	CALL_3
0x830c	            0x85c0	                           test eax, eax	      4400	channel.c	FUNCTION_105	ELSE_1	IF_2	CALL_3
0x830e	            0x750c	                           jne 0x400835c	      4400	channel.c	FUNCTION_105	ELSE_1	IF_2	CALL_3
0x8310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4401	channel.c	FUNCTION_105	ELSE_1	IF_2
0x8314	    0xc70001000000	                      mov dword [rax], 1	      4401	channel.c	FUNCTION_105	ELSE_1	IF_2
0x831a	            0xeb65	                           jmp 0x40083c1	      4401	channel.c	FUNCTION_105	ELSE_1	IF_2
0x831c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4402	channel.c	FUNCTION_105	ELSE_2	IF_3	CALL_4
0x8320	      0xbe00000000	                              mov esi, 0	      4402	channel.c	FUNCTION_105	ELSE_2	IF_3	CALL_4
0x8325	          0x4889c7	                            mov rdi, rax	      4402	channel.c	FUNCTION_105	ELSE_2	IF_3	CALL_4
0x8328	      0xe800000000	                          call 0x400836d	      4402	channel.c	FUNCTION_105	ELSE_2	IF_3	CALL_4
0x832d	            0x85c0	                           test eax, eax	      4402	channel.c	FUNCTION_105	ELSE_2	IF_3	CALL_4
0x832f	            0x750c	                           jne 0x400837d	      4402	channel.c	FUNCTION_105	ELSE_2	IF_3	CALL_4
0x8331	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4403	channel.c	FUNCTION_105	ELSE_2	IF_3
0x8335	    0xc70003000000	                      mov dword [rax], 3	      4403	channel.c	FUNCTION_105	ELSE_2	IF_3
0x833b	            0xeb44	                           jmp 0x40083c1	      4403	channel.c	FUNCTION_105	ELSE_2	IF_3
0x833d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4404	channel.c	FUNCTION_105	ELSE_3	IF_4	CALL_5
0x8341	      0xbe00000000	                              mov esi, 0	      4404	channel.c	FUNCTION_105	ELSE_3	IF_4	CALL_5
0x8346	          0x4889c7	                            mov rdi, rax	      4404	channel.c	FUNCTION_105	ELSE_3	IF_4	CALL_5
0x8349	      0xe800000000	                          call 0x400838e	      4404	channel.c	FUNCTION_105	ELSE_3	IF_4	CALL_5
0x834e	            0x85c0	                           test eax, eax	      4404	channel.c	FUNCTION_105	ELSE_3	IF_4	CALL_5
0x8350	            0x750c	                           jne 0x400839e	      4404	channel.c	FUNCTION_105	ELSE_3	IF_4	CALL_5
0x8352	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4405	channel.c	FUNCTION_105	ELSE_3	IF_4
0x8356	    0xc70002000000	                      mov dword [rax], 2	      4405	channel.c	FUNCTION_105	ELSE_3	IF_4
0x835c	            0xeb23	                           jmp 0x40083c1	      4405	channel.c	FUNCTION_105	ELSE_3	IF_4
0x835e	      0xbf00000000	                              mov edi, 0	      4408	channel.c	FUNCTION_105	ELSE_4	CALL_7
0x8363	      0xe800000000	                          call 0x40083a8	      4408	channel.c	FUNCTION_105	ELSE_4	CALL_7
0x8368	          0x4889c2	                            mov rdx, rax	      4408	channel.c	FUNCTION_105	ELSE_4	CALL_7
0x836b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4408	channel.c	FUNCTION_105	ELSE_4	CALL_7
0x836f	          0x4889c6	                            mov rsi, rax	      4408	channel.c	FUNCTION_105	ELSE_4	CALL_7
0x8372	          0x4889d7	                            mov rdi, rdx	      4408	channel.c	FUNCTION_105	ELSE_4	CALL_7
0x8375	      0xe800000000	                          call 0x40083ba	      4408	channel.c	FUNCTION_105	ELSE_4	CALL_7
0x837a	      0xb800000000	                              mov eax, 0	      4409	channel.c	FUNCTION_105	ELSE_4
0x837f	            0xeb05	                           jmp 0x40083c6	      4409	channel.c	FUNCTION_105	ELSE_4
0x8381	      0xb801000000	                              mov eax, 1	      4411	channel.c	FUNCTION_105
0x8386	              0xc9	                                   leave	      4412	channel.c	FUNCTION_105
0x8387	              0xc3	                                     ret	      4412	channel.c	FUNCTION_105
common_channel_read	functions,0:SWITCH,0:CALL,10:ELSE,2:IF,8:FOR,0:WHILE,0:DO,0	127
0x6c1a	              0x55	                                push rbp	      3531	channel.c	FUNCTION_85
0x6c1b	          0x4889e5	                            mov rbp, rsp	      3531	channel.c	FUNCTION_85
0x6c1e	    0x4881ecc00300	                          sub rsp, 0x3c0	      3531	channel.c	FUNCTION_85
0x6c25	    0x4889bd58fcff	            mov qword [rbp - 0x3a8], rdi	      3531	channel.c	FUNCTION_85
0x6c2c	    0x4889b550fcff	            mov qword [rbp - 0x3b0], rsi	      3531	channel.c	FUNCTION_85
0x6c33	    0x89954cfcffff	            mov dword [rbp - 0x3b4], edx	      3531	channel.c	FUNCTION_85
0x6c39	    0x64488b042528	                mov rax, qword fs:[0x28]	      3531	channel.c	FUNCTION_85
0x6c42	        0x488945f8	                mov qword [rbp - 8], rax	      3531	channel.c	FUNCTION_85
0x6c46	            0x31c0	                            xor eax, eax	      3531	channel.c	FUNCTION_85
0x6c48	    0xc78560fcffff	              mov dword [rbp - 0x3a0], 4	      3533	channel.c	FUNCTION_85
0x6c52	    0xc78568fcffff	    mov dword [rbp - 0x398], 0xffffffff 	      3537	channel.c	FUNCTION_85
0x6c5c	    0x48c78570fcff	              mov qword [rbp - 0x390], 0	      3538	channel.c	FUNCTION_85
0x6c67	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3541	channel.c	FUNCTION_85
0x6c6e	    0xc70002000000	                      mov dword [rax], 2	      3541	channel.c	FUNCTION_85
0x6c74	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3542	channel.c	FUNCTION_85
0x6c7b	    0x48c740080000	                  mov qword [rax + 8], 0	      3542	channel.c	FUNCTION_85
0x6c83	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3544	channel.c	FUNCTION_85	CALL_1
0x6c8a	          0x4889c7	                            mov rdi, rax	      3544	channel.c	FUNCTION_85	CALL_1
0x6c8d	      0xe800000000	                          call 0x4006cd2	      3544	channel.c	FUNCTION_85	CALL_1
0x6c92	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6c99	        0x488d7810	                   lea rdi, [rax + 0x10]	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6c9d	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6ca4	      0xb900000000	                              mov ecx, 0	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6ca9	      0xba00320000	                         mov edx, 0x3200	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6cae	          0x4889c6	                            mov rsi, rax	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6cb1	      0xe800000000	                          call 0x4006cf6	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6cb6	            0x85c0	                           test eax, eax	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6cb8	     0xf84b0010000	                            je 0x4006eae	      3545	channel.c	FUNCTION_85	IF_1	CALL_2
0x6cbe	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3549	channel.c	FUNCTION_85	IF_2
0x6cc4	      0x2500100000	                         and eax, 0x1000	      3549	channel.c	FUNCTION_85	IF_2
0x6cc9	            0x85c0	                           test eax, eax	      3549	channel.c	FUNCTION_85	IF_2
0x6ccb	            0x740c	                            je 0x4006d19	      3549	channel.c	FUNCTION_85	IF_2
0x6ccd	    0x8b8588feffff	            mov eax, dword [rbp - 0x178]	      3550	channel.c	FUNCTION_85	IF_2
0x6cd3	    0x898560fcffff	            mov dword [rbp - 0x3a0], eax	      3550	channel.c	FUNCTION_85	IF_2
0x6cd9	    0x8b9560fcffff	            mov edx, dword [rbp - 0x3a0]	      3551	channel.c	FUNCTION_85	CALL_3
0x6cdf	    0x488b8558fcff	            mov rax, qword [rbp - 0x3a8]	      3551	channel.c	FUNCTION_85	CALL_3
0x6ce6	            0x89d1	                            mov ecx, edx	      3551	channel.c	FUNCTION_85	CALL_3
0x6ce8	      0xba01000000	                              mov edx, 1	      3551	channel.c	FUNCTION_85	CALL_3
0x6ced	      0xbe01000000	                              mov esi, 1	      3551	channel.c	FUNCTION_85	CALL_3
0x6cf2	          0x4889c7	                            mov rdi, rax	      3551	channel.c	FUNCTION_85	CALL_3
0x6cf5	      0xe800000000	                          call 0x4006d3a	      3551	channel.c	FUNCTION_85	CALL_3
0x6cfa	    0x48898578fcff	            mov qword [rbp - 0x388], rax	      3551	channel.c	FUNCTION_85	CALL_3
0x6d01	    0x4883bd78fcff	              cmp qword [rbp - 0x388], 0	      3552	channel.c	FUNCTION_85	IF_3
0x6d09	     0xf8460010000	                            je 0x4006eaf	      3552	channel.c	FUNCTION_85	IF_3
0x6d0f	    0x83bd60fcffff	              cmp dword [rbp - 0x3a0], 4	      3554	channel.c	FUNCTION_85	IF_3	IF_4
0x6d16	            0x7515	                           jne 0x4006d6d	      3554	channel.c	FUNCTION_85	IF_3	IF_4
0x6d18	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3555	channel.c	FUNCTION_85	IF_3	CALL_4
0x6d1f	          0x4889c7	                            mov rdi, rax	      3555	channel.c	FUNCTION_85	IF_3	CALL_4
0x6d22	      0xe800000000	                          call 0x4006d67	      3555	channel.c	FUNCTION_85	IF_3	CALL_4
0x6d27	    0x898560fcffff	            mov dword [rbp - 0x3a0], eax	      3555	channel.c	FUNCTION_85	IF_3	CALL_4
0x6d2d	    0x8b9560fcffff	            mov edx, dword [rbp - 0x3a0]	      3556	channel.c	FUNCTION_85	IF_3	CALL_5
0x6d33	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3556	channel.c	FUNCTION_85	IF_3	CALL_5
0x6d3a	            0x89d6	                            mov esi, edx	      3556	channel.c	FUNCTION_85	IF_3	CALL_5
0x6d3c	          0x4889c7	                            mov rdi, rax	      3556	channel.c	FUNCTION_85	IF_3	CALL_5
0x6d3f	      0xe800000000	                          call 0x4006d84	      3556	channel.c	FUNCTION_85	IF_3	CALL_5
0x6d44	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3556	channel.c	FUNCTION_85	IF_3	CALL_5
0x6d4a	    0x8b9560fcffff	            mov edx, dword [rbp - 0x3a0]	      3557	channel.c	FUNCTION_85	IF_3	CALL_6
0x6d50	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3557	channel.c	FUNCTION_85	IF_3	CALL_6
0x6d57	            0x89d6	                            mov esi, edx	      3557	channel.c	FUNCTION_85	IF_3	CALL_6
0x6d59	          0x4889c7	                            mov rdi, rax	      3557	channel.c	FUNCTION_85	IF_3	CALL_6
0x6d5c	      0xe800000000	                          call 0x4006da1	      3557	channel.c	FUNCTION_85	IF_3	CALL_6
0x6d61	    0x898564fcffff	            mov dword [rbp - 0x39c], eax	      3557	channel.c	FUNCTION_85	IF_3	CALL_6
0x6d67	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3558	channel.c	FUNCTION_85	IF_3	IF_5
0x6d6d	      0x2500020000	                          and eax, 0x200	      3558	channel.c	FUNCTION_85	IF_3	IF_5
0x6d72	            0x85c0	                           test eax, eax	      3558	channel.c	FUNCTION_85	IF_3	IF_5
0x6d74	            0x740c	                            je 0x4006dc2	      3558	channel.c	FUNCTION_85	IF_3	IF_5
0x6d76	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	      3559	channel.c	FUNCTION_85	IF_3	IF_5
0x6d7c	    0x898564fcffff	            mov dword [rbp - 0x39c], eax	      3559	channel.c	FUNCTION_85	IF_3	IF_5
0x6d82	    0x83bd4cfcffff	              cmp dword [rbp - 0x3b4], 0	      3561	channel.c	FUNCTION_85	IF_3	IF_6
0x6d89	            0x7512	                           jne 0x4006ddd	      3561	channel.c	FUNCTION_85	IF_3	IF_6
0x6d8b	    0x83bd6cfcffff	              cmp dword [rbp - 0x394], 1	      3561	channel.c	FUNCTION_85	IF_3	IF_6
0x6d92	            0x7409	                            je 0x4006ddd	      3561	channel.c	FUNCTION_85	IF_3	IF_6
0x6d94	    0x83bd6cfcffff	              cmp dword [rbp - 0x394], 0	      3561	channel.c	FUNCTION_85	IF_3	IF_6
0x6d9b	            0x7534	                           jne 0x4006e11	      3561	channel.c	FUNCTION_85	IF_3	IF_6
0x6d9d	    0x8b8d4cfcffff	            mov ecx, dword [rbp - 0x3b4]	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6da3	    0x8b9564fcffff	            mov edx, dword [rbp - 0x39c]	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6da9	    0x8bb560fcffff	            mov esi, dword [rbp - 0x3a0]	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6daf	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6db6	          0x4889c7	                            mov rdi, rax	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6db9	      0xe8a5f9ffff	             call sym.channel_read_block	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6dbe	          0x4889c2	                            mov rdx, rax	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6dc1	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6dc8	        0x48895008	                mov qword [rax + 8], rdx	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6dcc	      0xe99e000000	                           jmp 0x4006eaf	      3562	channel.c	FUNCTION_85	IF_3	IF_6	CALL_7
0x6dd1	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3566	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_7
0x6dd7	      0x2500200000	                         and eax, 0x2000	      3566	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_7
0x6ddc	            0x85c0	                           test eax, eax	      3566	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_7
0x6dde	            0x740c	                            je 0x4006e2c	      3566	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_7
0x6de0	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      3567	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_7
0x6de6	    0x898568fcffff	            mov dword [rbp - 0x398], eax	      3567	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_7
0x6dec	    0x488dbd70fcff	                  lea rdi, [rbp - 0x390]	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6df3	    0x8b8d68fcffff	            mov ecx, dword [rbp - 0x398]	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6df9	    0x8b9564fcffff	            mov edx, dword [rbp - 0x39c]	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6dff	    0x8bb560fcffff	            mov esi, dword [rbp - 0x3a0]	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6e05	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6e0c	          0x4989f8	                             mov r8, rdi	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6e0f	          0x4889c7	                            mov rdi, rax	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6e12	      0xe8fafbffff	        call sym.channel_read_json_block	      3568	channel.c	FUNCTION_85	IF_3	ELSE_1	CALL_8
0x6e17	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3569	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e1e	          0x4885c0	                           test rax, rax	      3569	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e21	            0x742d	                            je 0x4006e90	      3569	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e23	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3571	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e2a	    0x488b8d50fcff	            mov rcx, qword [rbp - 0x3b0]	      3571	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e31	        0x488b5008	                mov rdx, qword [rax + 8]	      3571	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e35	          0x488b00	                    mov rax, qword [rax]	      3571	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e38	          0x488901	                    mov qword [rcx], rax	      3571	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e3b	        0x48895108	                mov qword [rcx + 8], rdx	      3571	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8
0x6e3f	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3572	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8	CALL_9
0x6e46	          0x4889c7	                            mov rdi, rax	      3572	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8	CALL_9
0x6e49	      0xe800000000	                          call 0x4006e8e	      3572	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8	CALL_9
0x6e4e	            0xeb1f	                           jmp 0x4006eaf	      3572	channel.c	FUNCTION_85	IF_3	ELSE_1	IF_8	CALL_9
0x6e50	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3576	channel.c	FUNCTION_85	IF_3	ELSE_1	ELSE_2
0x6e57	    0xc70008000000	                      mov dword [rax], 8	      3576	channel.c	FUNCTION_85	IF_3	ELSE_1	ELSE_2
0x6e5d	    0x488b8550fcff	            mov rax, qword [rbp - 0x3b0]	      3577	channel.c	FUNCTION_85	IF_3	ELSE_1	ELSE_2
0x6e64	    0x48c740080200	                  mov qword [rax + 8], 2	      3577	channel.c	FUNCTION_85	IF_3	ELSE_1	ELSE_2
0x6e6c	            0xeb01	                           jmp 0x4006eaf	      3577	channel.c	FUNCTION_85	IF_3	ELSE_1	ELSE_2
0x6e6e	              0x90	                                     nop	      3547	channel.c	FUNCTION_85	IF_1
0x6e6f	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3583	channel.c	FUNCTION_85	CALL_10
0x6e76	          0x4889c7	                            mov rdi, rax	      3583	channel.c	FUNCTION_85	CALL_10
0x6e79	      0xe800000000	                          call 0x4006ebe	      3583	channel.c	FUNCTION_85	CALL_10
0x6e7e	              0x90	                                     nop	      3584	channel.c	FUNCTION_85
0x6e7f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3584	channel.c	FUNCTION_85
0x6e83	    0x644833042528	                xor rax, qword fs:[0x28]	      3584	channel.c	FUNCTION_85
0x6e8c	            0x7405	                            je 0x4006ed3	      3584	channel.c	FUNCTION_85
0x6e8e	      0xe800000000	                          call 0x4006ed3	      3584	channel.c	FUNCTION_85
0x6e93	              0xc9	                                   leave	      3584	channel.c	FUNCTION_85
0x6e94	              0xc3	                                     ret	      3584	channel.c	FUNCTION_85
channel_part_send	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	12
0x81f7	              0x55	                                push rbp	      4354	channel.c	FUNCTION_101
0x81f8	          0x4889e5	                            mov rbp, rsp	      4354	channel.c	FUNCTION_101
0x81fb	        0x48897df8	                mov qword [rbp - 8], rdi	      4354	channel.c	FUNCTION_101
0x81ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      4355	channel.c	FUNCTION_101	IF_1
0x8203	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4355	channel.c	FUNCTION_101	IF_1
0x8206	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4355	channel.c	FUNCTION_101	IF_1
0x8209	            0x7507	                           jne 0x4008252	      4355	channel.c	FUNCTION_101	IF_1
0x820b	      0xb803000000	                              mov eax, 3	      4356	channel.c	FUNCTION_101	IF_1
0x8210	            0xeb05	                           jmp 0x4008257	      4356	channel.c	FUNCTION_101	IF_1
0x8212	      0xb800000000	                              mov eax, 0	      4357	channel.c	FUNCTION_101
0x8217	              0x5d	                                 pop rbp	      4358	channel.c	FUNCTION_101
0x8218	              0xc3	                                     ret	      4358	channel.c	FUNCTION_101
job_unref	functions,0:SWITCH,0:CALL,5:ELSE,1:IF,4:FOR,0:WHILE,0:DO,0	51
0xac61	              0x55	                                push rbp	      5332	channel.c	FUNCTION_125
0xac62	          0x4889e5	                            mov rbp, rsp	      5332	channel.c	FUNCTION_125
0xac65	        0x4883ec10	                           sub rsp, 0x10	      5332	channel.c	FUNCTION_125
0xac69	        0x48897df8	                mov qword [rbp - 8], rdi	      5332	channel.c	FUNCTION_125
0xac6d	      0x48837df800	                  cmp qword [rbp - 8], 0	      5333	channel.c	FUNCTION_125	IF_1
0xac72	     0xf84a4000000	                            je 0x400ad5c	      5333	channel.c	FUNCTION_125	IF_1
0xac78	        0x488b45f8	                mov rax, qword [rbp - 8]	      5333	channel.c	FUNCTION_125	IF_1
0xac7c	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5333	channel.c	FUNCTION_125	IF_1
0xac7f	          0x8d50ff	                      lea edx, [rax - 1]	      5333	channel.c	FUNCTION_125	IF_1
0xac82	        0x488b45f8	                mov rax, qword [rbp - 8]	      5333	channel.c	FUNCTION_125	IF_1
0xac86	          0x895058	             mov dword [rax + 0x58], edx	      5333	channel.c	FUNCTION_125	IF_1
0xac89	        0x488b45f8	                mov rax, qword [rbp - 8]	      5333	channel.c	FUNCTION_125	IF_1
0xac8d	          0x8b4058	            mov eax, dword [rax + 0x58] 	      5333	channel.c	FUNCTION_125	IF_1
0xac90	            0x85c0	                           test eax, eax	      5333	channel.c	FUNCTION_125	IF_1
0xac92	     0xf8f84000000	                            jg 0x400ad5c	      5333	channel.c	FUNCTION_125	IF_1
0xac98	        0x488b45f8	                mov rax, qword [rbp - 8]	      5337	channel.c	FUNCTION_125	IF_1	IF_2	CALL_1
0xac9c	          0x4889c7	                            mov rdi, rax	      5337	channel.c	FUNCTION_125	IF_1	IF_2	CALL_1
0xac9f	      0xe866f9ffff	       call sym.job_channel_still_useful	      5337	channel.c	FUNCTION_125	IF_1	IF_2	CALL_1
0xaca4	            0x85c0	                           test eax, eax	      5337	channel.c	FUNCTION_125	IF_1	IF_2	CALL_1
0xaca6	            0x7574	                           jne 0x400ad5c	      5337	channel.c	FUNCTION_125	IF_1	IF_2	CALL_1
0xaca8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5341	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_2
0xacac	          0x4889c7	                            mov rdi, rax	      5341	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_2
0xacaf	      0xe81af9ffff	             call sym.job_need_end_check	      5341	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_2
0xacb4	            0x85c0	                           test eax, eax	      5341	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_2
0xacb6	            0x750e	                           jne 0x400ad06	      5341	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_2
0xacb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5343	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_3
0xacbc	          0x4889c7	                            mov rdi, rax	      5343	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_3
0xacbf	      0xe8d9f8ffff	                       call sym.job_free	      5343	channel.c	FUNCTION_125	IF_1	IF_2	IF_3	CALL_3
0xacc4	            0xeb56	                           jmp 0x400ad5c	      5356	channel.c	FUNCTION_125
0xacc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5345	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xacca	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5345	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xacce	          0x4885c0	                           test rax, rax	      5345	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xacd1	            0x7449	                            je 0x400ad5c	      5345	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xacd3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5349	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xacd7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5349	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xacdb	      0xbe00000000	                              mov esi, 0	      5349	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xace0	          0x4889c7	                            mov rdi, rax	      5349	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xace3	      0xb800000000	                              mov eax, 0	      5349	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xace8	      0xe800000000	                          call 0x400ad2d	      5349	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xaced	        0x488b45f8	                mov rax, qword [rbp - 8]	      5350	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xacf1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5350	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xacf5	    0x48c780a80400	              mov qword [rax + 0x4a8], 0	      5350	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xad00	        0x488b45f8	                mov rax, qword [rbp - 8]	      5351	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0xad04	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5351	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0xad08	          0x4889c7	                            mov rdi, rax	      5351	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0xad0b	      0xe800000000	                          call 0x400ad50	      5351	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0xad10	        0x488b45f8	                mov rax, qword [rbp - 8]	      5352	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xad14	    0x48c740600000	               mov qword [rax + 0x60], 0	      5352	channel.c	FUNCTION_125	IF_1	IF_2	ELSE_1	IF_4
0xad1c	              0x90	                                     nop	      5356	channel.c	FUNCTION_125
0xad1d	              0xc9	                                   leave	      5356	channel.c	FUNCTION_125
0xad1e	              0xc3	                                     ret	      5356	channel.c	FUNCTION_125
ch_logfile	functions,0:SWITCH,0:CALL,6:ELSE,0:IF,4:FOR,0:WHILE,0:DO,0	53
0x0	              0x55	                                push rbp	       108	channel.c	FUNCTION_4
0x1	          0x4889e5	                            mov rbp, rsp	       108	channel.c	FUNCTION_4
0x4	        0x4883ec20	                           sub rsp, 0x20	       108	channel.c	FUNCTION_4
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	channel.c	FUNCTION_4
0xc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       108	channel.c	FUNCTION_4
0x10	    0x48c745f80000	                  mov qword [rbp - 8], 0	       109	channel.c	FUNCTION_4
0x18	    0x488b05000000	            mov rax, qword [0x0400005f] 	       111	channel.c	FUNCTION_4	IF_1
0x1f	          0x4885c0	                           test rax, rax	       111	channel.c	FUNCTION_4	IF_1
0x22	            0x740f	                            je 0x4000073	       111	channel.c	FUNCTION_4	IF_1
0x24	    0x488b05000000	            mov rax, qword [0x0400006b] 	       112	channel.c	FUNCTION_4	CALL_1
0x2b	          0x4889c7	                            mov rdi, rax	       112	channel.c	FUNCTION_4	CALL_1
0x2e	      0xe800000000	                          call 0x4000073	       112	channel.c	FUNCTION_4	CALL_1
0x33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	channel.c	FUNCTION_4	IF_2
0x37	           0xfb600	                   movzx eax, byte [rax]	       114	channel.c	FUNCTION_4	IF_2
0x3a	            0x84c0	                             test al, al	       114	channel.c	FUNCTION_4	IF_2
0x3c	            0x744f	                            je 0x40000cd	       114	channel.c	FUNCTION_4	IF_2
0x3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x42	           0xfb600	                   movzx eax, byte [rax]	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x45	            0x3c77	                            cmp al, 0x77	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x47	            0x7507	                           jne 0x4000090	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x49	      0xba00000000	                              mov edx, 0	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x4e	            0xeb05	                           jmp 0x4000095	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x50	      0xba00000000	                              mov edx, 0	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x59	          0x4889d6	                            mov rsi, rdx	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x5c	          0x4889c7	                            mov rdi, rax	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x5f	      0xe800000000	                          call 0x40000a4	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x64	        0x488945f8	                mov qword [rbp - 8], rax	       116	channel.c	FUNCTION_4	IF_2	CALL_2
0x68	      0x48837df800	                  cmp qword [rbp - 8], 0	       117	channel.c	FUNCTION_4	IF_2	IF_3
0x6d	            0x751e	                           jne 0x40000cd	       117	channel.c	FUNCTION_4	IF_2	IF_3
0x6f	      0xbf00000000	                              mov edi, 0	       119	channel.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x74	      0xe800000000	                          call 0x40000b9	       119	channel.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x79	          0x4889c2	                            mov rdx, rax	       119	channel.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	channel.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x80	          0x4889c6	                            mov rsi, rax	       119	channel.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x83	          0x4889d7	                            mov rdi, rdx	       119	channel.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x86	      0xe800000000	                          call 0x40000cb	       119	channel.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x8b	            0xeb3f	                           jmp 0x400010c	       120	channel.c	FUNCTION_4	IF_2	IF_3
0x8d	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	channel.c	FUNCTION_4
0x91	    0x488905000000	            mov qword [0x040000d8], rax 	       123	channel.c	FUNCTION_4
0x98	    0x488b05000000	            mov rax, qword [0x040000df] 	       125	channel.c	FUNCTION_4	IF_4
0x9f	          0x4885c0	                           test rax, rax	       125	channel.c	FUNCTION_4	IF_4
0xa2	            0x7428	                            je 0x400010c	       125	channel.c	FUNCTION_4	IF_4
0xa4	    0x488b05000000	            mov rax, qword [0x040000eb] 	       127	channel.c	FUNCTION_4	IF_4	CALL_5
0xab	          0x4889c1	                            mov rcx, rax	       127	channel.c	FUNCTION_4	IF_4	CALL_5
0xae	      0xba1c000000	                           mov edx, 0x1c	       127	channel.c	FUNCTION_4	IF_4	CALL_5
0xb3	      0xbe01000000	                              mov esi, 1	       127	channel.c	FUNCTION_4	IF_4	CALL_5
0xb8	      0xbf00000000	                              mov edi, 0	       127	channel.c	FUNCTION_4	IF_4	CALL_5
0xbd	      0xe800000000	                          call 0x4000102	       127	channel.c	FUNCTION_4	IF_4	CALL_5
0xc2	      0xbf00000000	                              mov edi, 0	       129	channel.c	FUNCTION_4	IF_4	CALL_6
0xc7	      0xe800000000	                          call 0x400010c	       129	channel.c	FUNCTION_4	IF_4	CALL_6
0xcc	              0xc9	                                   leave	       132	channel.c	FUNCTION_4
0xcd	              0xc3	                                     ret	       132	channel.c	FUNCTION_4
channel_gui_unregister_one	functions,0:SWITCH,0:CALL,5:ELSE,0:IF,2:FOR,0:WHILE,0:DO,0	46
0xbe3	              0x55	                                push rbp	       604	channel.c	FUNCTION_28
0xbe4	          0x4889e5	                            mov rbp, rsp	       604	channel.c	FUNCTION_28
0xbe7	        0x4883ec10	                           sub rsp, 0x10	       604	channel.c	FUNCTION_28
0xbeb	        0x48897df8	                mov qword [rbp - 8], rdi	       604	channel.c	FUNCTION_28
0xbef	          0x8975f4	              mov dword [rbp - 0xc], esi	       604	channel.c	FUNCTION_28
0xbf2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       614	channel.c	FUNCTION_28	IF_2
0xbf6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       614	channel.c	FUNCTION_28	IF_2
0xbf9	        0x48c1e004	                              shl rax, 4	       614	channel.c	FUNCTION_28	IF_2
0xbfd	          0x4889c1	                            mov rcx, rax	       614	channel.c	FUNCTION_28	IF_2
0xc00	        0x48c1e104	                              shl rcx, 4	       614	channel.c	FUNCTION_28	IF_2
0xc04	          0x4801c8	                            add rax, rcx	       614	channel.c	FUNCTION_28	IF_2
0xc07	          0x4801d0	                            add rax, rdx	       614	channel.c	FUNCTION_28	IF_2
0xc0a	        0x4883c01c	                           add rax, 0x1c	       614	channel.c	FUNCTION_28	IF_2
0xc0e	            0x8b00	                    mov eax, dword [rax]	       614	channel.c	FUNCTION_28	IF_2
0xc10	            0x85c0	                           test eax, eax	       614	channel.c	FUNCTION_28	IF_2
0xc12	            0x7468	                            je 0x4000cbc	       614	channel.c	FUNCTION_28	IF_2
0xc14	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       616	channel.c	FUNCTION_28	IF_2	CALL_3
0xc17	    0x488b14c50000	                  mov rdx, qword [rax*8]	       616	channel.c	FUNCTION_28	IF_2	CALL_3
0xc1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	channel.c	FUNCTION_28	IF_2	CALL_3
0xc23	      0xbe00000000	                              mov esi, 0	       616	channel.c	FUNCTION_28	IF_2	CALL_3
0xc28	          0x4889c7	                            mov rdi, rax	       616	channel.c	FUNCTION_28	IF_2	CALL_3
0xc2b	      0xb800000000	                              mov eax, 0	       616	channel.c	FUNCTION_28	IF_2	CALL_3
0xc30	      0xe800000000	                          call 0x4000c75	       616	channel.c	FUNCTION_28	IF_2	CALL_3
0xc35	        0x488b55f8	                mov rdx, qword [rbp - 8]	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc39	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc3c	        0x48c1e004	                              shl rax, 4	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc40	          0x4889c1	                            mov rcx, rax	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc43	        0x48c1e104	                              shl rcx, 4	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc47	          0x4801c8	                            add rax, rcx	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc4a	          0x4801d0	                            add rax, rdx	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc4d	        0x4883c01c	                           add rax, 0x1c	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc51	            0x8b00	                    mov eax, dword [rax]	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc53	            0x89c7	                            mov edi, eax	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc55	      0xe800000000	                          call 0x4000c9a	       620	channel.c	FUNCTION_28	IF_2	CALL_5
0xc5a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       622	channel.c	FUNCTION_28	IF_2
0xc5e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       622	channel.c	FUNCTION_28	IF_2
0xc61	        0x48c1e004	                              shl rax, 4	       622	channel.c	FUNCTION_28	IF_2
0xc65	          0x4889c1	                            mov rcx, rax	       622	channel.c	FUNCTION_28	IF_2
0xc68	        0x48c1e104	                              shl rcx, 4	       622	channel.c	FUNCTION_28	IF_2
0xc6c	          0x4801c8	                            add rax, rcx	       622	channel.c	FUNCTION_28	IF_2
0xc6f	          0x4801d0	                            add rax, rdx	       622	channel.c	FUNCTION_28	IF_2
0xc72	        0x4883c01c	                           add rax, 0x1c	       622	channel.c	FUNCTION_28	IF_2
0xc76	    0xc70000000000	                      mov dword [rax], 0	       622	channel.c	FUNCTION_28	IF_2
0xc7c	              0x90	                                     nop	       626	channel.c	FUNCTION_28
0xc7d	              0xc9	                                   leave	       626	channel.c	FUNCTION_28
0xc7e	              0xc3	                                     ret	       626	channel.c	FUNCTION_28
channel_part_info	functions,0:SWITCH,2:CALL,12:ELSE,3:IF,3:FOR,0:WHILE,0:DO,0	156
0x56eb	              0x55	                                push rbp	      2794	channel.c	FUNCTION_69
0x56ec	          0x4889e5	                            mov rbp, rsp	      2794	channel.c	FUNCTION_69
0x56ef	        0x4883ec60	                           sub rsp, 0x60	      2794	channel.c	FUNCTION_69
0x56f3	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2794	channel.c	FUNCTION_69
0x56f7	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2794	channel.c	FUNCTION_69
0x56fb	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2794	channel.c	FUNCTION_69
0x56ff	          0x894da4	             mov dword [rbp - 0x5c], ecx	      2794	channel.c	FUNCTION_69
0x5702	    0x64488b042528	                mov rax, qword fs:[0x28]	      2794	channel.c	FUNCTION_69
0x570b	        0x488945f8	                mov qword [rbp - 8], rax	      2794	channel.c	FUNCTION_69
0x570f	            0x31c0	                            xor eax, eax	      2794	channel.c	FUNCTION_69
0x5711	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2795	channel.c	FUNCTION_69
0x5714	        0x48c1e004	                              shl rax, 4	      2795	channel.c	FUNCTION_69
0x5718	          0x4889c2	                            mov rdx, rax	      2795	channel.c	FUNCTION_69
0x571b	        0x48c1e204	                              shl rdx, 4	      2795	channel.c	FUNCTION_69
0x571f	          0x4801d0	                            add rax, rdx	      2795	channel.c	FUNCTION_69
0x5722	        0x488d5010	                   lea rdx, [rax + 0x10]	      2795	channel.c	FUNCTION_69
0x5726	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2795	channel.c	FUNCTION_69
0x572a	          0x4801d0	                            add rax, rdx	      2795	channel.c	FUNCTION_69
0x572d	        0x4883c008	                              add rax, 8	      2795	channel.c	FUNCTION_69
0x5731	        0x488945d0	             mov qword [rbp - 0x30], rax	      2795	channel.c	FUNCTION_69
0x5735	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2799	channel.c	FUNCTION_69
0x573d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2801	channel.c	FUNCTION_69	CALL_1
0x5741	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2801	channel.c	FUNCTION_69	CALL_1
0x5745	      0xba04000000	                              mov edx, 4	      2801	channel.c	FUNCTION_69	CALL_1
0x574a	          0x4889ce	                            mov rsi, rcx	      2801	channel.c	FUNCTION_69	CALL_1
0x574d	          0x4889c7	                            mov rdi, rax	      2801	channel.c	FUNCTION_69	CALL_1
0x5750	      0xe800000000	                          call 0x4005795	      2801	channel.c	FUNCTION_69	CALL_1
0x5755	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2802	channel.c	FUNCTION_69	CALL_2
0x5759	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2802	channel.c	FUNCTION_69	CALL_2
0x5760	          0x4889c2	                            mov rdx, rax	      2802	channel.c	FUNCTION_69	CALL_2
0x5763	      0xb800000000	                              mov eax, 0	      2802	channel.c	FUNCTION_69	CALL_2
0x5768	          0x4889d7	                            mov rdi, rdx	      2802	channel.c	FUNCTION_69	CALL_2
0x576b	            0xf2ae	              repne scasb al, byte [rdi]	      2802	channel.c	FUNCTION_69	CALL_2
0x576d	          0x4889c8	                            mov rax, rcx	      2802	channel.c	FUNCTION_69	CALL_2
0x5770	          0x48f7d0	                                 not rax	      2802	channel.c	FUNCTION_69	CALL_2
0x5773	        0x488d50ff	                      lea rdx, [rax - 1]	      2802	channel.c	FUNCTION_69	CALL_2
0x5777	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2802	channel.c	FUNCTION_69	CALL_2
0x577b	          0x4801d0	                            add rax, rdx	      2802	channel.c	FUNCTION_69	CALL_2
0x577e	      0x66c7005f00	                    mov word [rax], 0x5f	      2802	channel.c	FUNCTION_69	CALL_2
0x5783	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2803	channel.c	FUNCTION_69	CALL_3
0x5787	          0x4889c7	                            mov rdi, rax	      2803	channel.c	FUNCTION_69	CALL_3
0x578a	      0xe800000000	                          call 0x40057cf	      2803	channel.c	FUNCTION_69	CALL_3
0x578f	        0x488945d8	             mov qword [rbp - 0x28], rax	      2803	channel.c	FUNCTION_69	CALL_3
0x5793	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2805	channel.c	FUNCTION_69	CALL_4
0x5797	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2805	channel.c	FUNCTION_69	CALL_4
0x579b	          0x4801d0	                            add rax, rdx	      2805	channel.c	FUNCTION_69	CALL_4
0x579e	    0xc70073746174	            mov dword [rax], 0x74617473 	      2805	channel.c	FUNCTION_69	CALL_4
0x57a4	    0x66c740047573	              mov word [rax + 4], 0x7375	      2805	channel.c	FUNCTION_69	CALL_4
0x57aa	        0xc6400600	                   mov byte [rax + 6], 0	      2805	channel.c	FUNCTION_69	CALL_4
0x57ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2806	channel.c	FUNCTION_69	IF_1
0x57b2	            0x8b00	                    mov eax, dword [rax]	      2806	channel.c	FUNCTION_69	IF_1
0x57b4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2806	channel.c	FUNCTION_69	IF_1
0x57b7	            0x740a	                            je 0x4005803	      2806	channel.c	FUNCTION_69	IF_1
0x57b9	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2807	channel.c	FUNCTION_69	IF_1
0x57c1	            0xeb27	                           jmp 0x400582a	      2807	channel.c	FUNCTION_69	IF_1
0x57c3	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      2808	channel.c	FUNCTION_69	ELSE_1	IF_2	CALL_5
0x57c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2808	channel.c	FUNCTION_69	ELSE_1	IF_2	CALL_5
0x57ca	            0x89d6	                            mov esi, edx	      2808	channel.c	FUNCTION_69	ELSE_1	IF_2	CALL_5
0x57cc	          0x4889c7	                            mov rdi, rax	      2808	channel.c	FUNCTION_69	ELSE_1	IF_2	CALL_5
0x57cf	      0xe800000000	                          call 0x4005814	      2808	channel.c	FUNCTION_69	ELSE_1	IF_2	CALL_5
0x57d4	            0x85c0	                           test eax, eax	      2808	channel.c	FUNCTION_69	ELSE_1	IF_2	CALL_5
0x57d6	            0x740a	                            je 0x4005822	      2808	channel.c	FUNCTION_69	ELSE_1	IF_2	CALL_5
0x57d8	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2809	channel.c	FUNCTION_69	ELSE_1	IF_2
0x57e0	            0xeb08	                           jmp 0x400582a	      2809	channel.c	FUNCTION_69	ELSE_1	IF_2
0x57e2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2811	channel.c	FUNCTION_69	ELSE_2
0x57ea	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2812	channel.c	FUNCTION_69	CALL_6
0x57ee	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2812	channel.c	FUNCTION_69	CALL_6
0x57f2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2812	channel.c	FUNCTION_69	CALL_6
0x57f6	          0x4889d1	                            mov rcx, rdx	      2812	channel.c	FUNCTION_69	CALL_6
0x57f9	      0xba00000000	                              mov edx, 0	      2812	channel.c	FUNCTION_69	CALL_6
0x57fe	          0x4889c7	                            mov rdi, rax	      2812	channel.c	FUNCTION_69	CALL_6
0x5801	      0xe800000000	                          call 0x4005846	      2812	channel.c	FUNCTION_69	CALL_6
0x5806	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2814	channel.c	FUNCTION_69	CALL_7
0x580a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2814	channel.c	FUNCTION_69	CALL_7
0x580e	          0x4801d0	                            add rax, rdx	      2814	channel.c	FUNCTION_69	CALL_7
0x5811	    0xc7006d6f6465	            mov dword [rax], 0x65646f6d 	      2814	channel.c	FUNCTION_69	CALL_7
0x5817	        0xc6400400	                   mov byte [rax + 4], 0	      2814	channel.c	FUNCTION_69	CALL_7
0x581b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2815	channel.c	FUNCTION_69	SWITCH_1
0x581f	          0x8b4008	                mov eax, dword [rax + 8]	      2815	channel.c	FUNCTION_69	SWITCH_1
0x5822	          0x83f801	                              cmp eax, 1	      2815	channel.c	FUNCTION_69	SWITCH_1
0x5825	            0x741b	                            je 0x4005882	      2815	channel.c	FUNCTION_69	SWITCH_1
0x5827	          0x83f801	                              cmp eax, 1	      2815	channel.c	FUNCTION_69	SWITCH_1
0x582a	            0x720c	                            jb 0x4005878	      2815	channel.c	FUNCTION_69	SWITCH_1
0x582c	          0x83f802	                              cmp eax, 2	      2815	channel.c	FUNCTION_69	SWITCH_1
0x582f	            0x741b	                            je 0x400588c	      2815	channel.c	FUNCTION_69	SWITCH_1
0x5831	          0x83f803	                              cmp eax, 3	      2815	channel.c	FUNCTION_69	SWITCH_1
0x5834	            0x7420	                            je 0x4005896	      2815	channel.c	FUNCTION_69	SWITCH_1
0x5836	            0xeb27	                           jmp 0x400589f	      2815	channel.c	FUNCTION_69	SWITCH_1
0x5838	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2817	channel.c	FUNCTION_69	SWITCH_1
0x5840	            0xeb1d	                           jmp 0x400589f	      2817	channel.c	FUNCTION_69	SWITCH_1
0x5842	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2818	channel.c	FUNCTION_69	SWITCH_1
0x584a	            0xeb13	                           jmp 0x400589f	      2818	channel.c	FUNCTION_69	SWITCH_1
0x584c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2819	channel.c	FUNCTION_69	SWITCH_1
0x5854	            0xeb09	                           jmp 0x400589f	      2819	channel.c	FUNCTION_69	SWITCH_1
0x5856	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2820	channel.c	FUNCTION_69	SWITCH_1
0x585e	              0x90	                                     nop	      2820	channel.c	FUNCTION_69	SWITCH_1
0x585f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2822	channel.c	FUNCTION_69	CALL_8
0x5863	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2822	channel.c	FUNCTION_69	CALL_8
0x5867	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2822	channel.c	FUNCTION_69	CALL_8
0x586b	          0x4889d1	                            mov rcx, rdx	      2822	channel.c	FUNCTION_69	CALL_8
0x586e	      0xba00000000	                              mov edx, 0	      2822	channel.c	FUNCTION_69	CALL_8
0x5873	          0x4889c7	                            mov rdi, rax	      2822	channel.c	FUNCTION_69	CALL_8
0x5876	      0xe800000000	                          call 0x40058bb	      2822	channel.c	FUNCTION_69	CALL_8
0x587b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2824	channel.c	FUNCTION_69	CALL_9
0x587f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2824	channel.c	FUNCTION_69	CALL_9
0x5883	          0x4801d0	                            add rax, rdx	      2824	channel.c	FUNCTION_69	CALL_9
0x5886	      0x66c700696f	                  mov word [rax], 0x6f69	      2824	channel.c	FUNCTION_69	CALL_9
0x588b	        0xc6400200	                   mov byte [rax + 2], 0	      2824	channel.c	FUNCTION_69	CALL_9
0x588f	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2825	channel.c	FUNCTION_69	IF_3
0x5893	            0x750a	                           jne 0x40058df	      2825	channel.c	FUNCTION_69	IF_3
0x5895	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2826	channel.c	FUNCTION_69	IF_3
0x589d	            0xeb49	                           jmp 0x4005928	      2826	channel.c	FUNCTION_69	IF_3
0x589f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2827	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58a3	          0x8b400c	              mov eax, dword [rax + 0xc]	      2827	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58a6	          0x83f804	                              cmp eax, 4	      2827	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58a9	            0x773d	                            ja 0x4005928	      2827	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58ab	            0x89c0	                            mov eax, eax	      2827	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58ad	    0x488b04c50000	                  mov rax, qword [rax*8]	      2827	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58b5	            0xffe0	                                 jmp rax	      2827	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58b7	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2829	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58bf	            0xeb27	                           jmp 0x4005928	      2829	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58c1	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2830	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58c9	            0xeb1d	                           jmp 0x4005928	      2830	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58cb	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2831	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58d3	            0xeb13	                           jmp 0x4005928	      2831	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58d5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2832	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58dd	            0xeb09	                           jmp 0x4005928	      2832	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58df	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2833	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58e7	              0x90	                                     nop	      2833	channel.c	FUNCTION_69	ELSE_3	SWITCH_2
0x58e8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2835	channel.c	FUNCTION_69	CALL_10
0x58ec	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2835	channel.c	FUNCTION_69	CALL_10
0x58f0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2835	channel.c	FUNCTION_69	CALL_10
0x58f4	          0x4889d1	                            mov rcx, rdx	      2835	channel.c	FUNCTION_69	CALL_10
0x58f7	      0xba00000000	                              mov edx, 0	      2835	channel.c	FUNCTION_69	CALL_10
0x58fc	          0x4889c7	                            mov rdi, rax	      2835	channel.c	FUNCTION_69	CALL_10
0x58ff	      0xe800000000	                          call 0x4005944	      2835	channel.c	FUNCTION_69	CALL_10
0x5904	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2837	channel.c	FUNCTION_69	CALL_11
0x5908	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2837	channel.c	FUNCTION_69	CALL_11
0x590c	          0x4801d0	                            add rax, rdx	      2837	channel.c	FUNCTION_69	CALL_11
0x590f	    0x48bf74696d65	            movabs rdi, 0x74756f656d6974	      2837	channel.c	FUNCTION_69	CALL_11
0x5919	          0x488938	                    mov qword [rax], rdi	      2837	channel.c	FUNCTION_69	CALL_11
0x591c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2838	channel.c	FUNCTION_69	CALL_12
0x5920	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2838	channel.c	FUNCTION_69	CALL_12
0x5923	          0x4863d0	                         movsxd rdx, eax	      2838	channel.c	FUNCTION_69	CALL_12
0x5926	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2838	channel.c	FUNCTION_69	CALL_12
0x592a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2838	channel.c	FUNCTION_69	CALL_12
0x592e	      0xb900000000	                              mov ecx, 0	      2838	channel.c	FUNCTION_69	CALL_12
0x5933	          0x4889c7	                            mov rdi, rax	      2838	channel.c	FUNCTION_69	CALL_12
0x5936	      0xe800000000	                          call 0x400597b	      2838	channel.c	FUNCTION_69	CALL_12
0x593b	              0x90	                                     nop	      2839	channel.c	FUNCTION_69
0x593c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2839	channel.c	FUNCTION_69
0x5940	    0x644833042528	                xor rax, qword fs:[0x28]	      2839	channel.c	FUNCTION_69
0x5949	            0x7405	                            je 0x4005990	      2839	channel.c	FUNCTION_69
0x594b	      0xe800000000	                          call 0x4005990	      2839	channel.c	FUNCTION_69
0x5950	              0xc9	                                   leave	      2839	channel.c	FUNCTION_69
0x5951	              0xc3	                                     ret	      2839	channel.c	FUNCTION_69
job_still_useful	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	19
0xa680	              0x55	                                push rbp	      5132	channel.c	FUNCTION_119
0xa681	          0x4889e5	                            mov rbp, rsp	      5132	channel.c	FUNCTION_119
0xa684	        0x4883ec08	                              sub rsp, 8	      5132	channel.c	FUNCTION_119
0xa688	        0x48897df8	                mov qword [rbp - 8], rdi	      5132	channel.c	FUNCTION_119
0xa68c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5133	channel.c	FUNCTION_119	CALL_2
0xa690	          0x4889c7	                            mov rdi, rax	      5133	channel.c	FUNCTION_119	CALL_2
0xa693	      0xe836ffffff	             call sym.job_need_end_check	      5133	channel.c	FUNCTION_119	CALL_2
0xa698	            0x85c0	                           test eax, eax	      5133	channel.c	FUNCTION_119	CALL_2
0xa69a	            0x7510	                           jne 0x400a6ec	      5133	channel.c	FUNCTION_119	CALL_2
0xa69c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5133	channel.c	FUNCTION_119	CALL_2
0xa6a0	          0x4889c7	                            mov rdi, rax	      5133	channel.c	FUNCTION_119	CALL_2
0xa6a3	      0xe862ffffff	       call sym.job_channel_still_useful	      5133	channel.c	FUNCTION_119	CALL_2
0xa6a8	            0x85c0	                           test eax, eax	      5133	channel.c	FUNCTION_119	CALL_2
0xa6aa	            0x7407	                            je 0x400a6f3	      5133	channel.c	FUNCTION_119	CALL_2
0xa6ac	      0xb801000000	                              mov eax, 1	      5133	channel.c	FUNCTION_119	CALL_2
0xa6b1	            0xeb05	                           jmp 0x400a6f8	      5133	channel.c	FUNCTION_119	CALL_2
0xa6b3	      0xb800000000	                              mov eax, 0	      5133	channel.c	FUNCTION_119	CALL_2
0xa6b8	              0xc9	                                   leave	      5134	channel.c	FUNCTION_119
0xa6b9	              0xc3	                                     ret	      5134	channel.c	FUNCTION_119
channel_free	functions,0:SWITCH,0:CALL,2:ELSE,1:IF,2:FOR,0:WHILE,0:DO,0	22
0x782	              0x55	                                push rbp	       381	channel.c	FUNCTION_16
0x783	          0x4889e5	                            mov rbp, rsp	       381	channel.c	FUNCTION_16
0x786	        0x4883ec10	                           sub rsp, 0x10	       381	channel.c	FUNCTION_16
0x78a	        0x48897df8	                mov qword [rbp - 8], rdi	       381	channel.c	FUNCTION_16
0x78e	    0x8b0500000000	            mov eax, dword [0x040007d4] 	       382	channel.c	FUNCTION_16	IF_1
0x794	            0x85c0	                           test eax, eax	       382	channel.c	FUNCTION_16	IF_1
0x796	            0x7532	                           jne 0x400080a	       382	channel.c	FUNCTION_16	IF_1
0x798	    0x8b0500000000	            mov eax, dword [0x040007de] 	       384	channel.c	FUNCTION_16	IF_1	IF_2
0x79e	            0x85c0	                           test eax, eax	       384	channel.c	FUNCTION_16	IF_1	IF_2
0x7a0	            0x7510	                           jne 0x40007f2	       384	channel.c	FUNCTION_16	IF_1	IF_2
0x7a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	channel.c	FUNCTION_16	IF_1	IF_2
0x7a6	    0xc78070040000	              mov dword [rax + 0x470], 1	       385	channel.c	FUNCTION_16	IF_1	IF_2
0x7b0	            0xeb18	                           jmp 0x400080a	       392	channel.c	FUNCTION_16
0x7b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	channel.c	FUNCTION_16	IF_1	ELSE_1	CALL_1
0x7b6	          0x4889c7	                            mov rdi, rax	       388	channel.c	FUNCTION_16	IF_1	ELSE_1	CALL_1
0x7b9	      0xe819ffffff	          call sym.channel_free_contents	       388	channel.c	FUNCTION_16	IF_1	ELSE_1	CALL_1
0x7be	        0x488b45f8	                mov rax, qword [rbp - 8]	       389	channel.c	FUNCTION_16	IF_1	ELSE_1	CALL_2
0x7c2	          0x4889c7	                            mov rdi, rax	       389	channel.c	FUNCTION_16	IF_1	ELSE_1	CALL_2
0x7c5	      0xe84fffffff	           call sym.channel_free_channel	       389	channel.c	FUNCTION_16	IF_1	ELSE_1	CALL_2
0x7ca	              0x90	                                     nop	       392	channel.c	FUNCTION_16
0x7cb	              0xc9	                                   leave	       392	channel.c	FUNCTION_16
0x7cc	              0xc3	                                     ret	       392	channel.c	FUNCTION_16
append_to_buffer	functions,1:SWITCH,0:CALL,10:ELSE,2:IF,8:FOR,1:WHILE,0:DO,0	227
0x479f	              0x55	                                push rbp	      2346	channel.c	FUNCTION_62
0x47a0	          0x4889e5	                            mov rbp, rsp	      2346	channel.c	FUNCTION_62
0x47a3	    0x4881ec900000	                           sub rsp, 0x90	      2346	channel.c	FUNCTION_62
0x47aa	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2346	channel.c	FUNCTION_62
0x47ae	        0x48897580	             mov qword [rbp - 0x80], rsi	      2346	channel.c	FUNCTION_62
0x47b2	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2346	channel.c	FUNCTION_62
0x47b9	    0x898d74ffffff	             mov dword [rbp - 0x8c], ecx	      2346	channel.c	FUNCTION_62
0x47bf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2346	channel.c	FUNCTION_62
0x47c8	        0x488945f8	                mov qword [rbp - 8], rax	      2346	channel.c	FUNCTION_62
0x47cc	            0x31c0	                            xor eax, eax	      2346	channel.c	FUNCTION_62
0x47ce	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2347	channel.c	FUNCTION_62
0x47d6	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2347	channel.c	FUNCTION_62
0x47dd	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2347	channel.c	FUNCTION_62
0x47e4	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      2348	channel.c	FUNCTION_62
0x47ec	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2349	channel.c	FUNCTION_62
0x47f4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2350	channel.c	FUNCTION_62
0x47f8	          0x488b00	                    mov rax, qword [rax]	      2350	channel.c	FUNCTION_62
0x47fb	        0x488945b8	             mov qword [rbp - 0x48], rax	      2350	channel.c	FUNCTION_62
0x47ff	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2351	channel.c	FUNCTION_62
0x4803	    0x8b80341c0000	          mov eax, dword [rax + 0x1c34] 	      2351	channel.c	FUNCTION_62
0x4809	          0x89459c	             mov dword [rbp - 0x64], eax	      2351	channel.c	FUNCTION_62
0x480c	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2352	channel.c	FUNCTION_62
0x4812	        0x48c1e004	                              shl rax, 4	      2352	channel.c	FUNCTION_62
0x4816	          0x4889c2	                            mov rdx, rax	      2352	channel.c	FUNCTION_62
0x4819	        0x48c1e204	                              shl rdx, 4	      2352	channel.c	FUNCTION_62
0x481d	          0x4801d0	                            add rax, rdx	      2352	channel.c	FUNCTION_62
0x4820	        0x488d5010	                   lea rdx, [rax + 0x10]	      2352	channel.c	FUNCTION_62
0x4824	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2352	channel.c	FUNCTION_62
0x482b	          0x4801d0	                            add rax, rdx	      2352	channel.c	FUNCTION_62
0x482e	        0x4883c008	                              add rax, 8	      2352	channel.c	FUNCTION_62
0x4832	        0x488945d0	             mov qword [rbp - 0x30], rax	      2352	channel.c	FUNCTION_62
0x4836	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2353	channel.c	FUNCTION_62
0x483a	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2353	channel.c	FUNCTION_62
0x4840	          0x8945a0	             mov dword [rbp - 0x60], eax	      2353	channel.c	FUNCTION_62
0x4843	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2354	channel.c	FUNCTION_62
0x4847	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2354	channel.c	FUNCTION_62
0x484a	          0x83e001	                              and eax, 1	      2354	channel.c	FUNCTION_62
0x484d	            0x85c0	                           test eax, eax	      2354	channel.c	FUNCTION_62
0x484f	           0xf95c0	                                setne al	      2354	channel.c	FUNCTION_62
0x4852	           0xfb6c0	                           movzx eax, al	      2354	channel.c	FUNCTION_62
0x4855	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2354	channel.c	FUNCTION_62
0x4858	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2356	channel.c	FUNCTION_62	IF_1
0x485c	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2356	channel.c	FUNCTION_62	IF_1
0x4862	            0x85c0	                           test eax, eax	      2356	channel.c	FUNCTION_62	IF_1
0x4864	            0x754c	                           jne 0x40048f2	      2356	channel.c	FUNCTION_62	IF_1
0x4866	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2356	channel.c	FUNCTION_62	IF_1
0x486a	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      2356	channel.c	FUNCTION_62	IF_1
0x4870	            0x85c0	                           test eax, eax	      2356	channel.c	FUNCTION_62	IF_1
0x4872	            0x753e	                           jne 0x40048f2	      2356	channel.c	FUNCTION_62	IF_1
0x4874	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2358	channel.c	FUNCTION_62	IF_1	IF_2
0x4878	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2358	channel.c	FUNCTION_62	IF_1	IF_2
0x487e	            0x85c0	                           test eax, eax	      2358	channel.c	FUNCTION_62	IF_1	IF_2
0x4880	     0xf85d2020000	                           jne 0x4004b98	      2358	channel.c	FUNCTION_62	IF_1	IF_2
0x4886	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2360	channel.c	FUNCTION_62	IF_1	IF_2	CALL_1
0x488d	      0xbe00000000	                              mov esi, 0	      2360	channel.c	FUNCTION_62	IF_1	IF_2	CALL_1
0x4892	          0x4889c7	                            mov rdi, rax	      2360	channel.c	FUNCTION_62	IF_1	IF_2	CALL_1
0x4895	      0xb800000000	                              mov eax, 0	      2360	channel.c	FUNCTION_62	IF_1	IF_2	CALL_1
0x489a	      0xe83dbaffff	                       call sym.ch_error	      2360	channel.c	FUNCTION_62	IF_1	IF_2	CALL_1
0x489f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2361	channel.c	FUNCTION_62	IF_1	IF_2
0x48a3	    0xc780f4000000	               mov dword [rax + 0xf4], 1	      2361	channel.c	FUNCTION_62	IF_1	IF_2
0x48ad	      0xe9a7020000	                           jmp 0x4004b99	      2361	channel.c	FUNCTION_62	IF_1	IF_2
0x48b2	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2368	channel.c	FUNCTION_62	IF_3
0x48b6	            0x7413	                            je 0x400490b	      2368	channel.c	FUNCTION_62	IF_3
0x48b8	      0x48836db801	               sub qword [rbp - 0x48], 1	      2370	channel.c	FUNCTION_62	IF_3
0x48bd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2371	channel.c	FUNCTION_62	IF_3
0x48c1	    0xc780341c0000	            mov dword [rax + 0x1c34], 0 	      2371	channel.c	FUNCTION_62	IF_3
0x48cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2375	channel.c	FUNCTION_62	CALL_2
0x48cf	          0x83c001	                              add eax, 1	      2375	channel.c	FUNCTION_62	CALL_2
0x48d2	          0x2b45a4	             sub eax, dword [rbp - 0x5c]	      2375	channel.c	FUNCTION_62	CALL_2
0x48d5	            0x89c2	                            mov edx, eax	      2375	channel.c	FUNCTION_62	CALL_2
0x48d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2375	channel.c	FUNCTION_62	CALL_2
0x48de	      0xbe00000000	                              mov esi, 0	      2375	channel.c	FUNCTION_62	CALL_2
0x48e3	          0x4889c7	                            mov rdi, rax	      2375	channel.c	FUNCTION_62	CALL_2
0x48e6	      0xb800000000	                              mov eax, 0	      2375	channel.c	FUNCTION_62	CALL_2
0x48eb	      0xe800000000	                          call 0x4004930	      2375	channel.c	FUNCTION_62	CALL_2
0x48f0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2377	channel.c	FUNCTION_62
0x48f4	    0xc78040150000	            mov dword [rax + 0x1540], 1 	      2377	channel.c	FUNCTION_62
0x48fe	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2380	channel.c	FUNCTION_62	CALL_3
0x4902	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2380	channel.c	FUNCTION_62	CALL_3
0x4906	        0x488d75a8	                   lea rsi, [rbp - 0x58]	      2380	channel.c	FUNCTION_62	CALL_3
0x490a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2380	channel.c	FUNCTION_62	CALL_3
0x490e	          0x4889c7	                            mov rdi, rax	      2380	channel.c	FUNCTION_62	CALL_3
0x4911	      0xe800000000	                          call 0x4004956	      2380	channel.c	FUNCTION_62	CALL_3
0x4916	      0xbf01000000	                              mov edi, 1	      2382	channel.c	FUNCTION_62	CALL_4
0x491b	      0xe800000000	                          call 0x4004960	      2382	channel.c	FUNCTION_62	CALL_4
0x4920	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2384	channel.c	FUNCTION_62	CALL_5
0x4924	        0x488d5001	                      lea rdx, [rax + 1]	      2384	channel.c	FUNCTION_62	CALL_5
0x4928	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2384	channel.c	FUNCTION_62	CALL_5
0x492b	            0x4898	                                    cdqe	      2384	channel.c	FUNCTION_62	CALL_5
0x492d	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2384	channel.c	FUNCTION_62	CALL_5
0x4931	          0x4829c1	                            sub rcx, rax	      2384	channel.c	FUNCTION_62	CALL_5
0x4934	          0x4889c8	                            mov rax, rcx	      2384	channel.c	FUNCTION_62	CALL_5
0x4937	          0x4889d6	                            mov rsi, rdx	      2384	channel.c	FUNCTION_62	CALL_5
0x493a	          0x4889c7	                            mov rdi, rax	      2384	channel.c	FUNCTION_62	CALL_5
0x493d	      0xe800000000	                          call 0x4004982	      2384	channel.c	FUNCTION_62	CALL_5
0x4942	    0x890500000000	            mov dword [0x04004988], eax 	      2384	channel.c	FUNCTION_62	CALL_5
0x4948	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2386	channel.c	FUNCTION_62	IF_4
0x494c	            0x7422	                            je 0x40049b0	      2386	channel.c	FUNCTION_62	IF_4
0x494e	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2389	channel.c	FUNCTION_62	IF_4	CALL_6
0x4952	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2389	channel.c	FUNCTION_62	IF_4	CALL_6
0x4956	      0xba01000000	                              mov edx, 1	      2389	channel.c	FUNCTION_62	IF_4	CALL_6
0x495b	          0x4889ce	                            mov rsi, rcx	      2389	channel.c	FUNCTION_62	IF_4	CALL_6
0x495e	          0x4889c7	                            mov rdi, rax	      2389	channel.c	FUNCTION_62	IF_4	CALL_6
0x4961	      0xe800000000	                          call 0x40049a6	      2389	channel.c	FUNCTION_62	IF_4	CALL_6
0x4966	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2390	channel.c	FUNCTION_62	IF_4
0x496e	            0xeb1a	                           jmp 0x40049ca	      2390	channel.c	FUNCTION_62	IF_4
0x4970	        0x488b7580	             mov rsi, qword [rbp - 0x80]	      2393	channel.c	FUNCTION_62	CALL_7
0x4974	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2393	channel.c	FUNCTION_62	CALL_7
0x4978	      0xb900000000	                              mov ecx, 0	      2393	channel.c	FUNCTION_62	CALL_7
0x497d	      0xba00000000	                              mov edx, 0	      2393	channel.c	FUNCTION_62	CALL_7
0x4982	          0x4889c7	                            mov rdi, rax	      2393	channel.c	FUNCTION_62	CALL_7
0x4985	      0xe800000000	                          call 0x40049ca	      2393	channel.c	FUNCTION_62	CALL_7
0x498a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2394	channel.c	FUNCTION_62	CALL_8
0x498e	      0xbe01000000	                              mov esi, 1	      2394	channel.c	FUNCTION_62	CALL_8
0x4993	          0x4889c7	                            mov rdi, rax	      2394	channel.c	FUNCTION_62	CALL_8
0x4996	      0xe800000000	                          call 0x40049db	      2394	channel.c	FUNCTION_62	CALL_8
0x499b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2397	channel.c	FUNCTION_62	CALL_9
0x499f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2397	channel.c	FUNCTION_62	CALL_9
0x49a3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2397	channel.c	FUNCTION_62	CALL_9
0x49a7	          0x4889ce	                            mov rsi, rcx	      2397	channel.c	FUNCTION_62	CALL_9
0x49aa	          0x4889c7	                            mov rdi, rax	      2397	channel.c	FUNCTION_62	CALL_9
0x49ad	      0xe800000000	                          call 0x40049f2	      2397	channel.c	FUNCTION_62	CALL_9
0x49b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2399	channel.c	FUNCTION_62	IF_5
0x49b6	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      2399	channel.c	FUNCTION_62	IF_5
0x49bc	            0x85c0	                           test eax, eax	      2399	channel.c	FUNCTION_62	IF_5
0x49be	            0x7410	                            je 0x4004a10	      2399	channel.c	FUNCTION_62	IF_5
0x49c0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2400	channel.c	FUNCTION_62	IF_5
0x49c4	    0xc78040150000	            mov dword [rax + 0x1540], 0 	      2400	channel.c	FUNCTION_62	IF_5
0x49ce	            0xeb0d	                           jmp 0x4004a1d	      2400	channel.c	FUNCTION_62	IF_5
0x49d0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2402	channel.c	FUNCTION_62	ELSE_2
0x49d4	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2402	channel.c	FUNCTION_62	ELSE_2
0x49d7	    0x899040150000	          mov dword [rax + 0x1540], edx 	      2402	channel.c	FUNCTION_62	ELSE_2
0x49dd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2404	channel.c	FUNCTION_62	ELSE_2	IF_6
0x49e1	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2404	channel.c	FUNCTION_62	ELSE_2	IF_6
0x49e4	            0x85c0	                           test eax, eax	      2404	channel.c	FUNCTION_62	ELSE_2	IF_6
0x49e6	     0xf8e06010000	                           jle 0x4004b32	      2404	channel.c	FUNCTION_62	ELSE_2	IF_6
0x49ec	    0x488b05000000	            mov rax, qword [0x04004a33] 	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x49f3	        0x488945c0	             mov qword [rbp - 0x40], rax	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x49f7	      0xe9d0000000	                           jmp 0x4004b0c	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x49fc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2410	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a00	        0x488b4008	                mov rax, qword [rax + 8]	      2410	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a04	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2410	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a08	     0xf85b2000000	                           jne 0x4004b00	      2410	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a0e	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a12	            0x7418	                            je 0x4004a6c	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a14	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2412	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a18	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2412	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a1c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2412	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a20	        0x4883c201	                              add rdx, 1	      2412	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a24	          0x4839d0	                            cmp rax, rdx	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a27	           0xf94c0	                                 sete al	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a2a	            0xeb28	                           jmp 0x4004a94	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a2c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2413	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a30	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2413	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a34	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a38	            0x7512	                           jne 0x4004a8c	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a3a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a3e	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a41	            0x85c0	                           test eax, eax	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a43	            0x7507	                           jne 0x4004a8c	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a45	      0xb801000000	                              mov eax, 1	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a4a	            0xeb05	                           jmp 0x4004a91	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a4c	      0xb800000000	                              mov eax, 0	      2414	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a51	          0x83e001	                              and eax, 1	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a54	            0x84c0	                             test al, al	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a56	            0x7468	                            je 0x4004b00	      2411	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a58	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2416	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a5c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2416	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a60	        0x488d5001	                      lea rdx, [rax + 1]	      2416	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a64	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2416	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a68	        0x48895038	             mov qword [rax + 0x38], rdx	      2416	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a6c	    0x488b05000000	            mov rax, qword [0x04004ab3] 	      2417	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a73	        0x488945a8	             mov qword [rbp - 0x58], rax	      2417	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a77	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2418	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a7b	    0x488905000000	            mov qword [0x04004ac2], rax 	      2418	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a82	    0x488b05000000	            mov rax, qword [0x04004ac9] 	      2419	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a89	        0x488b4008	                mov rax, qword [rax + 8]	      2419	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a8d	    0x488905000000	            mov qword [0x04004ad4], rax 	      2419	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4a94	      0xbe00000000	                              mov esi, 0	      2420	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4a99	      0xbf00000000	                              mov edi, 0	      2420	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4a9e	      0xe800000000	                          call 0x4004ae3	      2420	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1	CALL_1
0x4aa3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2421	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4aa7	    0x488905000000	            mov qword [0x04004aee], rax 	      2421	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4aae	    0x488b05000000	            mov rax, qword [0x04004af5] 	      2422	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4ab5	        0x488b4008	                mov rax, qword [rax + 8]	      2422	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4ab9	    0x488905000000	            mov qword [0x04004b00], rax 	      2422	channel.c	FUNCTION_62	ELSE_2	IF_6	FUNCTION_1	IF_1
0x4ac0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x4ac4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x4ac8	        0x488945c0	             mov qword [rbp - 0x40], rax	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x4acc	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x4ad1	     0xf8525ffffff	                           jne 0x4004a3c	      2408	channel.c	FUNCTION_62	ELSE_2	IF_6
0x4ad7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2425	channel.c	FUNCTION_62	ELSE_2	IF_6	CALL_10
0x4adb	      0xbe0a000000	                            mov esi, 0xa	      2425	channel.c	FUNCTION_62	ELSE_2	IF_6	CALL_10
0x4ae0	          0x4889c7	                            mov rdi, rax	      2425	channel.c	FUNCTION_62	ELSE_2	IF_6	CALL_10
0x4ae3	      0xe800000000	                          call 0x4004b28	      2425	channel.c	FUNCTION_62	ELSE_2	IF_6	CALL_10
0x4ae8	    0xc70500000000	               mov dword [0x04004b32], 1	      2426	channel.c	FUNCTION_62	ELSE_2	IF_6
0x4af2	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2429	channel.c	FUNCTION_62	IF_7
0x4af6	            0x7461	                            je 0x4004b99	      2429	channel.c	FUNCTION_62	IF_7
0x4af8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2435	channel.c	FUNCTION_62	IF_7
0x4afc	    0xc780341c0000	            mov dword [rax + 0x1c34], 1 	      2435	channel.c	FUNCTION_62	IF_7
0x4b06	    0x488b05000000	            mov rax, qword [0x04004b4d] 	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b0d	        0x488945c8	             mov qword [rbp - 0x38], rax	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b11	            0xeb3c	                           jmp 0x4004b8f	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2438	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b17	    0x480548030000	                          add rax, 0x348	      2438	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b1d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2438	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2440	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b25	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2440	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b2c	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2440	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b30	            0x7512	                           jne 0x4004b84	      2440	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b32	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2441	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b36	          0x488b10	                    mov rdx, qword [rax]	      2441	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2441	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b3d	    0x488990080100	            mov qword [rax + 0x108], rdx	      2441	channel.c	FUNCTION_62	IF_7	FOR_1	IF_8
0x4b44	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b48	          0x488b00	                    mov rax, qword [rax]	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b4b	        0x488945c8	             mov qword [rbp - 0x38], rax	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b4f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b54	            0x75bd	                           jne 0x4004b53	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b56	            0xeb01	                           jmp 0x4004b99	      2436	channel.c	FUNCTION_62	IF_7	FOR_1
0x4b58	              0x90	                                     nop	      2363	channel.c	FUNCTION_62	IF_1
0x4b59	        0x488b45f8	                mov rax, qword [rbp - 8]	      2444	channel.c	FUNCTION_62
0x4b5d	    0x644833042528	                xor rax, qword fs:[0x28]	      2444	channel.c	FUNCTION_62
0x4b66	            0x7405	                            je 0x4004bad	      2444	channel.c	FUNCTION_62
0x4b68	      0xe800000000	                          call 0x4004bad	      2444	channel.c	FUNCTION_62
0x4b6d	              0xc9	                                   leave	      2444	channel.c	FUNCTION_62
0x4b6e	              0xc3	                                     ret	      2444	channel.c	FUNCTION_62
channel_write_in	functions,0:SWITCH,0:CALL,10:ELSE,2:IF,7:FOR,1:WHILE,0:DO,0	123
0x28a3	              0x55	                                push rbp	      1432	channel.c	FUNCTION_41
0x28a4	          0x4889e5	                            mov rbp, rsp	      1432	channel.c	FUNCTION_41
0x28a7	        0x4883ec30	                           sub rsp, 0x30	      1432	channel.c	FUNCTION_41
0x28ab	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1432	channel.c	FUNCTION_41
0x28af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1433	channel.c	FUNCTION_41
0x28b3	    0x480548030000	                          add rax, 0x348	      1433	channel.c	FUNCTION_41
0x28b9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1433	channel.c	FUNCTION_41
0x28bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1435	channel.c	FUNCTION_41
0x28c1	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1435	channel.c	FUNCTION_41
0x28c8	        0x488945f8	                mov qword [rbp - 8], rax	      1435	channel.c	FUNCTION_41
0x28cc	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1436	channel.c	FUNCTION_41
0x28d3	      0x48837df800	                  cmp qword [rbp - 8], 0	      1438	channel.c	FUNCTION_41	IF_1
0x28d8	     0xf84ad010000	                            je 0x4002acb	      1438	channel.c	FUNCTION_41	IF_1
0x28de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1438	channel.c	FUNCTION_41	IF_1
0x28e2	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1438	channel.c	FUNCTION_41	IF_1
0x28e8	            0x85c0	                           test eax, eax	      1438	channel.c	FUNCTION_41	IF_1
0x28ea	     0xf859b010000	                           jne 0x4002acb	      1438	channel.c	FUNCTION_41	IF_1
0x28f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x28f4	    0x4805e0000000	                           add rax, 0xe0	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x28fa	          0x4889c7	                            mov rdi, rax	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x28fd	      0xe800000000	                          call 0x4002942	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x2902	            0x85c0	                           test eax, eax	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x2904	            0x740d	                            je 0x4002953	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x2906	        0x488b45f8	                mov rax, qword [rbp - 8]	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x290a	        0x488b4008	                mov rax, qword [rax + 8]	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x290e	          0x4885c0	                           test rax, rax	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x2911	            0x752a	                           jne 0x400297d	      1440	channel.c	FUNCTION_41	IF_2	CALL_1
0x2913	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1443	channel.c	FUNCTION_41	IF_2	CALL_2
0x2917	      0xbe00000000	                              mov esi, 0	      1443	channel.c	FUNCTION_41	IF_2	CALL_2
0x291c	          0x4889c7	                            mov rdi, rax	      1443	channel.c	FUNCTION_41	IF_2	CALL_2
0x291f	      0xb800000000	                              mov eax, 0	      1443	channel.c	FUNCTION_41	IF_2	CALL_2
0x2924	      0xe800000000	                          call 0x4002969	      1443	channel.c	FUNCTION_41	IF_2	CALL_2
0x2929	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1444	channel.c	FUNCTION_41	IF_2
0x292d	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1444	channel.c	FUNCTION_41	IF_2
0x2938	      0xe94f010000	                           jmp 0x4002acc	      1445	channel.c	FUNCTION_41	IF_2
0x293d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1448	channel.c	FUNCTION_41	FOR_1
0x2941	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1448	channel.c	FUNCTION_41	FOR_1
0x2948	        0x488945e8	             mov qword [rbp - 0x18], rax	      1448	channel.c	FUNCTION_41	FOR_1
0x294c	            0xeb30	                           jmp 0x40029be	      1448	channel.c	FUNCTION_41	FOR_1
0x294e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1451	channel.c	FUNCTION_41	FOR_1	IF_3	CALL_3
0x2952	          0x4889c7	                            mov rdi, rax	      1451	channel.c	FUNCTION_41	FOR_1	IF_3	CALL_3
0x2955	      0xe86bfdffff	             call sym.can_write_buf_line	      1451	channel.c	FUNCTION_41	FOR_1	IF_3	CALL_3
0x295a	            0x85c0	                           test eax, eax	      1451	channel.c	FUNCTION_41	FOR_1	IF_3	CALL_3
0x295c	            0x7440	                            je 0x40029de	      1451	channel.c	FUNCTION_41	FOR_1	IF_3	CALL_3
0x295e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1453	channel.c	FUNCTION_41	FOR_1	CALL_4
0x2962	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1453	channel.c	FUNCTION_41	FOR_1	CALL_4
0x2966	        0x488b45f8	                mov rax, qword [rbp - 8]	      1453	channel.c	FUNCTION_41	FOR_1	CALL_4
0x296a	          0x4889ce	                            mov rsi, rcx	      1453	channel.c	FUNCTION_41	FOR_1	CALL_4
0x296d	          0x4889c7	                            mov rdi, rax	      1453	channel.c	FUNCTION_41	FOR_1	CALL_4
0x2970	      0xe82efcffff	                 call sym.write_buf_line	      1453	channel.c	FUNCTION_41	FOR_1	CALL_4
0x2975	        0x8345e401	               add dword [rbp - 0x1c], 1	      1454	channel.c	FUNCTION_41	FOR_1
0x2979	      0x488345e801	               add qword [rbp - 0x18], 1	      1449	channel.c	FUNCTION_41	FOR_1
0x297e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1448	channel.c	FUNCTION_41	FOR_1
0x2982	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1448	channel.c	FUNCTION_41	FOR_1
0x2989	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1448	channel.c	FUNCTION_41	FOR_1
0x298d	            0x7c10	                            jl 0x40029df	      1448	channel.c	FUNCTION_41	FOR_1
0x298f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1449	channel.c	FUNCTION_41	FOR_1
0x2993	          0x488b00	                    mov rax, qword [rax]	      1449	channel.c	FUNCTION_41	FOR_1
0x2996	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1449	channel.c	FUNCTION_41	FOR_1
0x299a	            0x7db2	                           jge 0x400298e	      1449	channel.c	FUNCTION_41	FOR_1
0x299c	            0xeb01	                           jmp 0x40029df	      1449	channel.c	FUNCTION_41	FOR_1
0x299e	              0x90	                                     nop	      1452	channel.c	FUNCTION_41	FOR_1	IF_3
0x299f	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1457	channel.c	FUNCTION_41	IF_4
0x29a3	            0x751f	                           jne 0x4002a04	      1457	channel.c	FUNCTION_41	IF_4
0x29a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1458	channel.c	FUNCTION_41	CALL_5
0x29a9	          0x8d50ff	                      lea edx, [rax - 1]	      1458	channel.c	FUNCTION_41	CALL_5
0x29ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1458	channel.c	FUNCTION_41	CALL_5
0x29b0	      0xbe00000000	                              mov esi, 0	      1458	channel.c	FUNCTION_41	CALL_5
0x29b5	          0x4889c7	                            mov rdi, rax	      1458	channel.c	FUNCTION_41	CALL_5
0x29b8	      0xb800000000	                              mov eax, 0	      1458	channel.c	FUNCTION_41	CALL_5
0x29bd	      0xe800000000	                          call 0x4002a02	      1458	channel.c	FUNCTION_41	CALL_5
0x29c2	            0xeb1f	                           jmp 0x4002a23	      1458	channel.c	FUNCTION_41	CALL_5
0x29c4	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1459	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29c8	            0x7e19	                           jle 0x4002a23	      1459	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29ca	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1460	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1460	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29d1	      0xbe00000000	                              mov esi, 0	      1460	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29d6	          0x4889c7	                            mov rdi, rax	      1460	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29d9	      0xb800000000	                              mov eax, 0	      1460	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29de	      0xe800000000	                          call 0x4002a23	      1460	channel.c	FUNCTION_41	ELSE_1	IF_5
0x29e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1462	channel.c	FUNCTION_41
0x29e7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1462	channel.c	FUNCTION_41
0x29eb	    0x488990000100	            mov qword [rax + 0x100], rdx	      1462	channel.c	FUNCTION_41
0x29f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1463	channel.c	FUNCTION_41	IF_6
0x29f6	          0x488b00	                    mov rax, qword [rax]	      1463	channel.c	FUNCTION_41	IF_6
0x29f9	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1463	channel.c	FUNCTION_41	IF_6
0x29fd	            0x7c11	                            jl 0x4002a50	      1463	channel.c	FUNCTION_41	IF_6
0x29ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1463	channel.c	FUNCTION_41	IF_6
0x2a03	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1463	channel.c	FUNCTION_41	IF_6
0x2a0a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1463	channel.c	FUNCTION_41	IF_6
0x2a0e	            0x7d54	                           jge 0x4002aa4	      1463	channel.c	FUNCTION_41	IF_6
0x2a10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1467	channel.c	FUNCTION_41	IF_6	IF_7
0x2a14	    0x488b80a80400	           mov rax, qword [rax + 0x4a8] 	      1467	channel.c	FUNCTION_41	IF_6	IF_7
0x2a1b	          0x4885c0	                           test rax, rax	      1467	channel.c	FUNCTION_41	IF_6	IF_7
0x2a1e	            0x740c	                            je 0x4002a6c	      1467	channel.c	FUNCTION_41	IF_6	IF_7
0x2a20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1468	channel.c	FUNCTION_41	IF_6	CALL_7
0x2a24	          0x4889c7	                            mov rdi, rax	      1468	channel.c	FUNCTION_41	IF_6	CALL_7
0x2a27	      0xe800000000	                          call 0x4002a6c	      1468	channel.c	FUNCTION_41	IF_6	CALL_7
0x2a2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1472	channel.c	FUNCTION_41	IF_6
0x2a30	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1472	channel.c	FUNCTION_41	IF_6
0x2a3b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1473	channel.c	FUNCTION_41	IF_6	CALL_8
0x2a3f	      0xbe00000000	                              mov esi, 0	      1473	channel.c	FUNCTION_41	IF_6	CALL_8
0x2a44	          0x4889c7	                            mov rdi, rax	      1473	channel.c	FUNCTION_41	IF_6	CALL_8
0x2a47	      0xb800000000	                              mov eax, 0	      1473	channel.c	FUNCTION_41	IF_6	CALL_8
0x2a4c	      0xe800000000	                          call 0x4002a91	      1473	channel.c	FUNCTION_41	IF_6	CALL_8
0x2a51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1476	channel.c	FUNCTION_41	IF_6	CALL_9
0x2a55	      0xbe03000000	                              mov esi, 3	      1476	channel.c	FUNCTION_41	IF_6	CALL_9
0x2a5a	          0x4889c7	                            mov rdi, rax	      1476	channel.c	FUNCTION_41	IF_6	CALL_9
0x2a5d	      0xe8a7eeffff	                  call sym.ch_close_part	      1476	channel.c	FUNCTION_41	IF_6	CALL_9
0x2a62	            0xeb28	                           jmp 0x4002acc	      1476	channel.c	FUNCTION_41	IF_6	CALL_9
0x2a64	        0x488b45f8	                mov rax, qword [rbp - 8]	      1480	channel.c	FUNCTION_41	ELSE_2
0x2a68	          0x488b00	                    mov rax, qword [rax]	      1480	channel.c	FUNCTION_41	ELSE_2
0x2a6b	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      1480	channel.c	FUNCTION_41	ELSE_2
0x2a6f	        0x488d5001	                      lea rdx, [rax + 1]	      1480	channel.c	FUNCTION_41	ELSE_2
0x2a73	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1479	channel.c	FUNCTION_41	ELSE_2	CALL_10
0x2a77	      0xbe00000000	                              mov esi, 0	      1479	channel.c	FUNCTION_41	ELSE_2	CALL_10
0x2a7c	          0x4889c7	                            mov rdi, rax	      1479	channel.c	FUNCTION_41	ELSE_2	CALL_10
0x2a7f	      0xb800000000	                              mov eax, 0	      1479	channel.c	FUNCTION_41	ELSE_2	CALL_10
0x2a84	      0xe800000000	                          call 0x4002ac9	      1479	channel.c	FUNCTION_41	ELSE_2	CALL_10
0x2a89	            0xeb01	                           jmp 0x4002acc	      1479	channel.c	FUNCTION_41	ELSE_2	CALL_10
0x2a8b	              0x90	                                     nop	      1439	channel.c	FUNCTION_41	IF_1
0x2a8c	              0xc9	                                   leave	      1481	channel.c	FUNCTION_41
0x2a8d	              0xc3	                                     ret	      1481	channel.c	FUNCTION_41
channel_buffer_free	functions,0:SWITCH,0:CALL,1:ELSE,0:IF,1:FOR,2:WHILE,0:DO,0	43
0x2a8e	              0x55	                                push rbp	      1488	channel.c	FUNCTION_42
0x2a8f	          0x4889e5	                            mov rbp, rsp	      1488	channel.c	FUNCTION_42
0x2a92	        0x4883ec30	                           sub rsp, 0x30	      1488	channel.c	FUNCTION_42
0x2a96	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1488	channel.c	FUNCTION_42
0x2a9a	    0x488b05000000	            mov rax, qword [0x04002ae1] 	      1492	channel.c	FUNCTION_42	FOR_1
0x2aa1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1492	channel.c	FUNCTION_42	FOR_1
0x2aa5	      0xe983000000	                           jmp 0x4002b6d	      1492	channel.c	FUNCTION_42	FOR_1
0x2aaa	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1493	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ab1	            0xeb69	                           jmp 0x4002b5c	      1493	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ab3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ab6	        0x48c1e004	                              shl rax, 4	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2aba	          0x4889c2	                            mov rdx, rax	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2abd	        0x48c1e204	                              shl rdx, 4	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ac1	          0x4801d0	                            add rax, rdx	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ac4	        0x488d5010	                   lea rdx, [rax + 0x10]	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ac8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2acc	          0x4801d0	                            add rax, rdx	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2acf	        0x4883c008	                              add rax, 8	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ad3	        0x488945f8	                mov qword [rbp - 8], rax	      1495	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2ad7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1497	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1
0x2adb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1497	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1
0x2ae2	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1497	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1
0x2ae6	            0x7530	                           jne 0x4002b58	      1497	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1
0x2ae8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1499	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1	CALL_1
0x2aeb	    0x488b14c50000	                  mov rdx, qword [rax*8]	      1499	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1	CALL_1
0x2af3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1499	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1	CALL_1
0x2af7	      0xbe00000000	                              mov esi, 0	      1499	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1	CALL_1
0x2afc	          0x4889c7	                            mov rdi, rax	      1499	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1	CALL_1
0x2aff	      0xb800000000	                              mov eax, 0	      1499	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1	CALL_1
0x2b04	      0xe800000000	                          call 0x4002b49	      1499	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1	CALL_1
0x2b09	        0x488b45f8	                mov rax, qword [rbp - 8]	      1501	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1
0x2b0d	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1501	channel.c	FUNCTION_42	FOR_1	FOR_2	IF_1
0x2b18	        0x8345ec01	               add dword [rbp - 0x14], 1	      1493	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2b1c	        0x837dec03	               cmp dword [rbp - 0x14], 3	      1493	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2b20	            0x7691	                           jbe 0x4002af3	      1493	channel.c	FUNCTION_42	FOR_1	FOR_2
0x2b22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1492	channel.c	FUNCTION_42	FOR_1
0x2b26	          0x488b00	                    mov rax, qword [rax]	      1492	channel.c	FUNCTION_42	FOR_1
0x2b29	        0x488945f0	             mov qword [rbp - 0x10], rax	      1492	channel.c	FUNCTION_42	FOR_1
0x2b2d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1492	channel.c	FUNCTION_42	FOR_1
0x2b32	     0xf8572ffffff	                           jne 0x4002aea	      1492	channel.c	FUNCTION_42	FOR_1
0x2b38	              0x90	                                     nop	      1504	channel.c	FUNCTION_42
0x2b39	              0xc9	                                   leave	      1504	channel.c	FUNCTION_42
0x2b3a	              0xc3	                                     ret	      1504	channel.c	FUNCTION_42
ch_close_part	functions,0:SWITCH,0:CALL,3:ELSE,1:IF,4:FOR,0:WHILE,0:DO,0	72
0x1909	              0x55	                                push rbp	       985	channel.c	FUNCTION_32
0x190a	          0x4889e5	                            mov rbp, rsp	       985	channel.c	FUNCTION_32
0x190d	        0x4883ec20	                           sub rsp, 0x20	       985	channel.c	FUNCTION_32
0x1911	        0x48897de8	             mov qword [rbp - 0x18], rdi	       985	channel.c	FUNCTION_32
0x1915	          0x8975e4	             mov dword [rbp - 0x1c], esi	       985	channel.c	FUNCTION_32
0x1918	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       986	channel.c	FUNCTION_32
0x191b	        0x48c1e004	                              shl rax, 4	       986	channel.c	FUNCTION_32
0x191f	          0x4889c2	                            mov rdx, rax	       986	channel.c	FUNCTION_32
0x1922	        0x48c1e204	                              shl rdx, 4	       986	channel.c	FUNCTION_32
0x1926	          0x4801d0	                            add rax, rdx	       986	channel.c	FUNCTION_32
0x1929	        0x488d5010	                   lea rdx, [rax + 0x10]	       986	channel.c	FUNCTION_32
0x192d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       986	channel.c	FUNCTION_32
0x1931	          0x4801d0	                            add rax, rdx	       986	channel.c	FUNCTION_32
0x1934	        0x4883c008	                              add rax, 8	       986	channel.c	FUNCTION_32
0x1938	        0x488945f8	                mov qword [rbp - 8], rax	       986	channel.c	FUNCTION_32
0x193c	        0x488b45f8	                mov rax, qword [rbp - 8]	       988	channel.c	FUNCTION_32	IF_1
0x1940	            0x8b00	                    mov eax, dword [rax]	       988	channel.c	FUNCTION_32	IF_1
0x1942	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       988	channel.c	FUNCTION_32	IF_1
0x1945	     0xf84a4000000	                            je 0x4001a2f	       988	channel.c	FUNCTION_32	IF_1
0x194b	        0x837de400	               cmp dword [rbp - 0x1c], 0	       990	channel.c	FUNCTION_32	IF_1	IF_2
0x194f	            0x750f	                           jne 0x40019a0	       990	channel.c	FUNCTION_32	IF_1	IF_2
0x1951	        0x488b45f8	                mov rax, qword [rbp - 8]	       991	channel.c	FUNCTION_32	IF_1	CALL_1
0x1955	            0x8b00	                    mov eax, dword [rax]	       991	channel.c	FUNCTION_32	IF_1	CALL_1
0x1957	            0x89c7	                            mov edi, eax	       991	channel.c	FUNCTION_32	IF_1	CALL_1
0x1959	      0xe800000000	                          call 0x400199e	       991	channel.c	FUNCTION_32	IF_1	CALL_1
0x195e	            0xeb5b	                           jmp 0x40019fb	       991	channel.c	FUNCTION_32	IF_1	CALL_1
0x1960	        0x837de403	               cmp dword [rbp - 0x1c], 3	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1964	            0x7414	                            je 0x40019ba	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1966	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x196a	    0x8b9048030000	           mov edx, dword [rax + 0x348] 	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1970	        0x488b45f8	                mov rax, qword [rbp - 8]	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1974	            0x8b00	                    mov eax, dword [rax]	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1976	            0x39c2	                            cmp edx, eax	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1978	            0x7441	                            je 0x40019fb	       996	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x197a	        0x837de401	               cmp dword [rbp - 0x1c], 1	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x197e	            0x7414	                            je 0x40019d4	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1980	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1984	    0x8b9028010000	           mov edx, dword [rax + 0x128] 	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x198a	        0x488b45f8	                mov rax, qword [rbp - 8]	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x198e	            0x8b00	                    mov eax, dword [rax]	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1990	            0x39c2	                            cmp edx, eax	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1992	            0x7427	                            je 0x40019fb	       997	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1994	        0x837de402	               cmp dword [rbp - 0x1c], 2	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x1998	            0x7414	                            je 0x40019ee	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x199a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x199e	    0x8b9038020000	           mov edx, dword [rax + 0x238] 	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x19a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x19a8	            0x8b00	                    mov eax, dword [rax]	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x19aa	            0x39c2	                            cmp edx, eax	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x19ac	            0x740d	                            je 0x40019fb	       998	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3
0x19ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3	CALL_3
0x19b2	            0x8b00	                    mov eax, dword [rax]	      1004	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3	CALL_3
0x19b4	            0x89c7	                            mov edi, eax	      1004	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3	CALL_3
0x19b6	      0xe800000000	                          call 0x40019fb	      1004	channel.c	FUNCTION_32	IF_1	ELSE_1	IF_3	CALL_3
0x19bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	channel.c	FUNCTION_32	IF_1
0x19bf	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      1007	channel.c	FUNCTION_32	IF_1
0x19c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1010	channel.c	FUNCTION_32	IF_1
0x19c9	    0x8b806c040000	           mov eax, dword [rax + 0x46c] 	      1010	channel.c	FUNCTION_32	IF_1
0x19cf	            0x89c2	                            mov edx, eax	      1010	channel.c	FUNCTION_32	IF_1
0x19d1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1010	channel.c	FUNCTION_32	IF_1
0x19d4	      0xbe01000000	                              mov esi, 1	      1010	channel.c	FUNCTION_32	IF_1
0x19d9	            0x89c1	                            mov ecx, eax	      1010	channel.c	FUNCTION_32	IF_1
0x19db	            0xd3e6	                             shl esi, cl	      1010	channel.c	FUNCTION_32	IF_1
0x19dd	            0x89f0	                            mov eax, esi	      1010	channel.c	FUNCTION_32	IF_1
0x19df	            0xf7d0	                                 not eax	      1010	channel.c	FUNCTION_32	IF_1
0x19e1	            0x21d0	                            and eax, edx	      1010	channel.c	FUNCTION_32	IF_1
0x19e3	            0x89c2	                            mov edx, eax	      1010	channel.c	FUNCTION_32	IF_1
0x19e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1010	channel.c	FUNCTION_32	IF_1
0x19e9	    0x89906c040000	            mov dword [rax + 0x46c], edx	      1010	channel.c	FUNCTION_32	IF_1
0x19ef	              0x90	                                     nop	      1012	channel.c	FUNCTION_32
0x19f0	              0xc9	                                   leave	      1012	channel.c	FUNCTION_32
0x19f1	              0xc3	                                     ret	      1012	channel.c	FUNCTION_32
channel_push_json	functions,0:SWITCH,0:CALL,5:ELSE,6:IF,6:FOR,0:WHILE,1:DO,0	121
0x3eb9	              0x55	                                push rbp	      2134	channel.c	FUNCTION_59
0x3eba	          0x4889e5	                            mov rbp, rsp	      2134	channel.c	FUNCTION_59
0x3ebd	        0x4883ec40	                           sub rsp, 0x40	      2134	channel.c	FUNCTION_59
0x3ec1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2134	channel.c	FUNCTION_59
0x3ec5	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2134	channel.c	FUNCTION_59
0x3ec8	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2134	channel.c	FUNCTION_59
0x3ecc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2135	channel.c	FUNCTION_59
0x3ecf	        0x48c1e004	                              shl rax, 4	      2135	channel.c	FUNCTION_59
0x3ed3	          0x4889c2	                            mov rdx, rax	      2135	channel.c	FUNCTION_59
0x3ed6	        0x48c1e204	                              shl rdx, 4	      2135	channel.c	FUNCTION_59
0x3eda	          0x4801d0	                            add rax, rdx	      2135	channel.c	FUNCTION_59
0x3edd	        0x488d5040	                   lea rdx, [rax + 0x40]	      2135	channel.c	FUNCTION_59
0x3ee1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2135	channel.c	FUNCTION_59
0x3ee5	          0x4801d0	                            add rax, rdx	      2135	channel.c	FUNCTION_59
0x3ee8	        0x4883c010	                           add rax, 0x10	      2135	channel.c	FUNCTION_59
0x3eec	        0x488945f0	             mov qword [rbp - 0x10], rax	      2135	channel.c	FUNCTION_59
0x3ef0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2136	channel.c	FUNCTION_59
0x3ef4	        0x488b4008	                mov rax, qword [rax + 8]	      2136	channel.c	FUNCTION_59
0x3ef8	        0x488945e8	             mov qword [rbp - 0x18], rax	      2136	channel.c	FUNCTION_59
0x3efc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2139	channel.c	FUNCTION_59	IF_1
0x3f00	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2139	channel.c	FUNCTION_59	IF_1
0x3f04	          0x4885c0	                           test rax, rax	      2139	channel.c	FUNCTION_59	IF_1
0x3f07	            0x7425	                            je 0x4003f6e	      2139	channel.c	FUNCTION_59	IF_1
0x3f09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2139	channel.c	FUNCTION_59	IF_1
0x3f0d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2139	channel.c	FUNCTION_59	IF_1
0x3f11	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2139	channel.c	FUNCTION_59	IF_1
0x3f14	            0x85c0	                           test eax, eax	      2139	channel.c	FUNCTION_59	IF_1
0x3f16	            0x7416	                            je 0x4003f6e	      2139	channel.c	FUNCTION_59	IF_1
0x3f18	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2141	channel.c	FUNCTION_59	IF_1
0x3f20	            0xeb1e	                           jmp 0x4003f80	      2141	channel.c	FUNCTION_59	IF_1
0x3f22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2144	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f26	        0x488b4008	                mov rax, qword [rax + 8]	      2144	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f2a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2144	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f2e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2142	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f33	            0x740b	                            je 0x4003f80	      2142	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2142	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f39	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2142	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f3c	            0x85c0	                           test eax, eax	      2142	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f3e	            0x75e2	                           jne 0x4003f62	      2142	channel.c	FUNCTION_59	ELSE_1	WHILE_1
0x3f40	      0xbf20000000	                           mov edi, 0x20	      2146	channel.c	FUNCTION_59	CALL_1
0x3f45	      0xe800000000	                          call 0x4003f8a	      2146	channel.c	FUNCTION_59	CALL_1
0x3f4a	        0x488945f8	                mov qword [rbp - 8], rax	      2146	channel.c	FUNCTION_59	CALL_1
0x3f4e	      0x48837df800	                  cmp qword [rbp - 8], 0	      2147	channel.c	FUNCTION_59	IF_2
0x3f53	            0x7511	                           jne 0x4003fa6	      2147	channel.c	FUNCTION_59	IF_2
0x3f55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2148	channel.c	FUNCTION_59	CALL_2
0x3f59	          0x4889c7	                            mov rdi, rax	      2148	channel.c	FUNCTION_59	CALL_2
0x3f5c	      0xe800000000	                          call 0x4003fa1	      2148	channel.c	FUNCTION_59	CALL_2
0x3f61	      0xe90b010000	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_59	ELSE_6
0x3f66	      0xe800000000	                          call 0x4003fab	      2151	channel.c	FUNCTION_59	ELSE_2	CALL_3
0x3f6b	          0x4889c2	                            mov rdx, rax	      2151	channel.c	FUNCTION_59	ELSE_2	CALL_3
0x3f6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2151	channel.c	FUNCTION_59	ELSE_2	CALL_3
0x3f72	          0x488910	                    mov qword [rax], rdx	      2151	channel.c	FUNCTION_59	ELSE_2	CALL_3
0x3f75	        0x488b45f8	                mov rax, qword [rbp - 8]	      2152	channel.c	FUNCTION_59	ELSE_2	IF_3
0x3f79	          0x488b00	                    mov rax, qword [rax]	      2152	channel.c	FUNCTION_59	ELSE_2	IF_3
0x3f7c	          0x4885c0	                           test rax, rax	      2152	channel.c	FUNCTION_59	ELSE_2	IF_3
0x3f7f	            0x751d	                           jne 0x4003fde	      2152	channel.c	FUNCTION_59	ELSE_2	IF_3
0x3f81	        0x488b45f8	                mov rax, qword [rbp - 8]	      2154	channel.c	FUNCTION_59	ELSE_2	IF_3	CALL_4
0x3f85	          0x4889c7	                            mov rdi, rax	      2154	channel.c	FUNCTION_59	ELSE_2	IF_3	CALL_4
0x3f88	      0xe800000000	                          call 0x4003fcd	      2154	channel.c	FUNCTION_59	ELSE_2	IF_3	CALL_4
0x3f8d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2155	channel.c	FUNCTION_59	ELSE_2	IF_3	CALL_5
0x3f91	          0x4889c7	                            mov rdi, rax	      2155	channel.c	FUNCTION_59	ELSE_2	IF_3	CALL_5
0x3f94	      0xe800000000	                          call 0x4003fd9	      2155	channel.c	FUNCTION_59	ELSE_2	IF_3	CALL_5
0x3f99	      0xe9d3000000	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_59	ELSE_6
0x3f9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2159	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fa2	    0xc74018000000	               mov dword [rax + 0x18], 0	      2159	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fa9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2160	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fad	          0x488b08	                    mov rcx, qword [rax]	      2160	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fb0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2160	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fb4	        0x488b5008	                mov rdx, qword [rax + 8]	      2160	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fb8	          0x488b00	                    mov rax, qword [rax]	      2160	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fbb	          0x488901	                    mov qword [rcx], rax	      2160	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fbe	        0x48895108	                mov qword [rcx + 8], rdx	      2160	channel.c	FUNCTION_59	ELSE_2	ELSE_3
0x3fc2	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2161	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fc7	            0x7555	                           jne 0x400405e	      2161	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fc9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2164	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fcd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2164	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fd1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fd5	        0x48895010	             mov qword [rax + 0x10], rdx	      2164	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fd9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2165	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fdd	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2165	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fe1	        0x48895010	             mov qword [rax + 0x10], rdx	      2165	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fe5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2166	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3fe9	    0x48c740080000	                  mov qword [rax + 8], 0	      2166	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4
0x3ff1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2167	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	IF_5
0x3ff5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2167	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	IF_5
0x3ff9	          0x4885c0	                           test rax, rax	      2167	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	IF_5
0x3ffc	            0x750e	                           jne 0x400404c	      2167	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	IF_5
0x3ffe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2168	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	IF_5
0x4002	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2168	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	IF_5
0x4006	        0x48895008	                mov qword [rax + 8], rdx	      2168	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	IF_5
0x400a	            0xeb65	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_59	ELSE_6
0x400c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2170	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4010	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2170	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4014	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2170	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	ELSE_4
0x4018	        0x48895008	                mov qword [rax + 8], rdx	      2170	channel.c	FUNCTION_59	ELSE_2	ELSE_3	IF_4	ELSE_4
0x401c	            0xeb53	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_59	ELSE_6
0x401e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2175	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x4022	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2175	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x4026	        0x48895010	             mov qword [rax + 0x10], rdx	      2175	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x402a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2176	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x402e	        0x488b5008	                mov rdx, qword [rax + 8]	      2176	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x4032	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x4036	        0x48895008	                mov qword [rax + 8], rdx	      2176	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x403a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2177	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x403e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2177	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x4042	        0x48895008	                mov qword [rax + 8], rdx	      2177	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5
0x4046	        0x488b45f8	                mov rax, qword [rbp - 8]	      2178	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	IF_6
0x404a	        0x488b4008	                mov rax, qword [rax + 8]	      2178	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	IF_6
0x404e	          0x4885c0	                           test rax, rax	      2178	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4051	            0x750e	                           jne 0x40040a1	      2178	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4053	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2179	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	IF_6
0x4057	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2179	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	IF_6
0x405b	        0x48895010	             mov qword [rax + 0x10], rdx	      2179	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	IF_6
0x405f	            0xeb10	                           jmp 0x40040b1	      2185	channel.c	FUNCTION_59	ELSE_6
0x4061	        0x488b45f8	                mov rax, qword [rbp - 8]	      2181	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x4065	        0x488b4008	                mov rax, qword [rax + 8]	      2181	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x4069	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2181	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x406d	        0x48895010	             mov qword [rax + 0x10], rdx	      2181	channel.c	FUNCTION_59	ELSE_2	ELSE_3	ELSE_5	ELSE_6
0x4071	              0x90	                                     nop	      2185	channel.c	FUNCTION_59	ELSE_6
0x4072	              0xc9	                                   leave	      2185	channel.c	FUNCTION_59	ELSE_6
0x4073	              0xc3	                                     ret	      2185	channel.c	FUNCTION_59	ELSE_6
channel_part_read	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	12
0x8219	              0x55	                                push rbp	      4365	channel.c	FUNCTION_102
0x821a	          0x4889e5	                            mov rbp, rsp	      4365	channel.c	FUNCTION_102
0x821d	        0x48897df8	                mov qword [rbp - 8], rdi	      4365	channel.c	FUNCTION_102
0x8221	        0x488b45f8	                mov rax, qword [rbp - 8]	      4366	channel.c	FUNCTION_102	IF_1
0x8225	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4366	channel.c	FUNCTION_102	IF_1
0x8228	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4366	channel.c	FUNCTION_102	IF_1
0x822b	            0x7507	                           jne 0x4008274	      4366	channel.c	FUNCTION_102	IF_1
0x822d	      0xb801000000	                              mov eax, 1	      4367	channel.c	FUNCTION_102	IF_1
0x8232	            0xeb05	                           jmp 0x4008279	      4367	channel.c	FUNCTION_102	IF_1
0x8234	      0xb800000000	                              mov eax, 0	      4368	channel.c	FUNCTION_102
0x8239	              0x5d	                                 pop rbp	      4369	channel.c	FUNCTION_102
0x823a	              0xc3	                                     ret	      4369	channel.c	FUNCTION_102
channel_save	functions,0:SWITCH,0:CALL,9:ELSE,4:IF,8:FOR,1:WHILE,0:DO,0	196
0x33b3	              0x55	                                push rbp	      1792	channel.c	FUNCTION_53
0x33b4	          0x4889e5	                            mov rbp, rsp	      1792	channel.c	FUNCTION_53
0x33b7	        0x4883ec50	                           sub rsp, 0x50	      1792	channel.c	FUNCTION_53
0x33bb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1792	channel.c	FUNCTION_53
0x33bf	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1792	channel.c	FUNCTION_53
0x33c2	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1792	channel.c	FUNCTION_53
0x33c6	          0x894dd0	             mov dword [rbp - 0x30], ecx	      1792	channel.c	FUNCTION_53
0x33c9	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      1792	channel.c	FUNCTION_53
0x33cd	        0x4c894db8	              mov qword [rbp - 0x48], r9	      1792	channel.c	FUNCTION_53
0x33d1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1794	channel.c	FUNCTION_53
0x33d4	        0x48c1e004	                              shl rax, 4	      1794	channel.c	FUNCTION_53
0x33d8	          0x4889c2	                            mov rdx, rax	      1794	channel.c	FUNCTION_53
0x33db	        0x48c1e204	                              shl rdx, 4	      1794	channel.c	FUNCTION_53
0x33df	          0x4801d0	                            add rax, rdx	      1794	channel.c	FUNCTION_53
0x33e2	        0x488d5020	                   lea rdx, [rax + 0x20]	      1794	channel.c	FUNCTION_53
0x33e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1794	channel.c	FUNCTION_53
0x33ea	          0x4801d0	                            add rax, rdx	      1794	channel.c	FUNCTION_53
0x33ed	        0x4883c010	                           add rax, 0x10	      1794	channel.c	FUNCTION_53
0x33f1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1794	channel.c	FUNCTION_53
0x33f5	      0xbf20000000	                           mov edi, 0x20	      1798	channel.c	FUNCTION_53	CALL_1
0x33fa	      0xe800000000	                          call 0x400343f	      1798	channel.c	FUNCTION_53	CALL_1
0x33ff	        0x488945f8	                mov qword [rbp - 8], rax	      1798	channel.c	FUNCTION_53	CALL_1
0x3403	      0x48837df800	                  cmp qword [rbp - 8], 0	      1799	channel.c	FUNCTION_53	IF_1
0x3408	            0x750a	                           jne 0x4003454	      1799	channel.c	FUNCTION_53	IF_1
0x340a	      0xb800000000	                              mov eax, 0	      1800	channel.c	FUNCTION_53	IF_1
0x340f	      0xe963020000	                           jmp 0x40036b7	      1800	channel.c	FUNCTION_53	IF_1
0x3414	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1803	channel.c	FUNCTION_53	CALL_2
0x3417	          0x83c001	                              add eax, 1	      1803	channel.c	FUNCTION_53	CALL_2
0x341a	            0x89c7	                            mov edi, eax	      1803	channel.c	FUNCTION_53	CALL_2
0x341c	      0xe800000000	                          call 0x4003461	      1803	channel.c	FUNCTION_53	CALL_2
0x3421	          0x4889c2	                            mov rdx, rax	      1803	channel.c	FUNCTION_53	CALL_2
0x3424	        0x488b45f8	                mov rax, qword [rbp - 8]	      1803	channel.c	FUNCTION_53	CALL_2
0x3428	          0x488910	                    mov qword [rax], rdx	      1803	channel.c	FUNCTION_53	CALL_2
0x342b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1804	channel.c	FUNCTION_53	IF_2
0x342f	          0x488b00	                    mov rax, qword [rax]	      1804	channel.c	FUNCTION_53	IF_2
0x3432	          0x4885c0	                           test rax, rax	      1804	channel.c	FUNCTION_53	IF_2
0x3435	            0x7516	                           jne 0x400348d	      1804	channel.c	FUNCTION_53	IF_2
0x3437	        0x488b45f8	                mov rax, qword [rbp - 8]	      1806	channel.c	FUNCTION_53	IF_2	CALL_3
0x343b	          0x4889c7	                            mov rdi, rax	      1806	channel.c	FUNCTION_53	IF_2	CALL_3
0x343e	      0xe800000000	                          call 0x4003483	      1806	channel.c	FUNCTION_53	IF_2	CALL_3
0x3443	      0xb800000000	                              mov eax, 0	      1807	channel.c	FUNCTION_53	IF_2
0x3448	      0xe92a020000	                           jmp 0x40036b7	      1807	channel.c	FUNCTION_53	IF_2
0x344d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1810	channel.c	FUNCTION_53	IF_3
0x3451	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1810	channel.c	FUNCTION_53	IF_3
0x3454	        0x48c1e004	                              shl rax, 4	      1810	channel.c	FUNCTION_53	IF_3
0x3458	          0x4889c1	                            mov rcx, rax	      1810	channel.c	FUNCTION_53	IF_3
0x345b	        0x48c1e104	                              shl rcx, 4	      1810	channel.c	FUNCTION_53	IF_3
0x345f	          0x4801c8	                            add rax, rcx	      1810	channel.c	FUNCTION_53	IF_3
0x3462	          0x4801d0	                            add rax, rdx	      1810	channel.c	FUNCTION_53	IF_3
0x3465	        0x4883c020	                           add rax, 0x20	      1810	channel.c	FUNCTION_53	IF_3
0x3469	            0x8b00	                    mov eax, dword [rax]	      1810	channel.c	FUNCTION_53	IF_3
0x346b	            0x85c0	                           test eax, eax	      1810	channel.c	FUNCTION_53	IF_3
0x346d	     0xf8599000000	                           jne 0x400354c	      1810	channel.c	FUNCTION_53	IF_3
0x3473	        0x488b45f8	                mov rax, qword [rbp - 8]	      1813	channel.c	FUNCTION_53	IF_3
0x3477	          0x488b00	                    mov rax, qword [rax]	      1813	channel.c	FUNCTION_53	IF_3
0x347a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1813	channel.c	FUNCTION_53	IF_3
0x347e	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1814	channel.c	FUNCTION_53	IF_3	FOR_1
0x3485	            0xeb58	                           jmp 0x400351f	      1814	channel.c	FUNCTION_53	IF_3	FOR_1
0x3487	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x348a	          0x4863d0	                         movsxd rdx, eax	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x348d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x3491	          0x4801d0	                            add rax, rdx	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x3494	           0xfb600	                   movzx eax, byte [rax]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x3497	            0x3c0d	                             cmp al, 0xd	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x3499	            0x7522	                           jne 0x40034fd	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x349b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x349e	          0x83c001	                              add eax, 1	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34a1	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34a4	            0x7d17	                           jge 0x40034fd	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34a6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34a9	            0x4898	                                    cdqe	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34ab	        0x488d5001	                      lea rdx, [rax + 1]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34b3	          0x4801d0	                            add rax, rdx	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34b6	           0xfb600	                   movzx eax, byte [rax]	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34b9	            0x3c0a	                             cmp al, 0xa	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34bb	            0x741e	                            je 0x400351b	      1815	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34c1	        0x488d5001	                      lea rdx, [rax + 1]	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34c5	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34c9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34cc	          0x4863ca	                         movsxd rcx, edx	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34cf	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34d3	          0x4801ca	                            add rdx, rcx	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34d6	           0xfb612	                   movzx edx, byte [rdx]	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34d9	            0x8810	                      mov byte [rax], dl	      1816	channel.c	FUNCTION_53	IF_3	FOR_1	IF_4
0x34db	        0x8345e401	               add dword [rbp - 0x1c], 1	      1814	channel.c	FUNCTION_53	IF_3	FOR_1
0x34df	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1814	channel.c	FUNCTION_53	IF_3	FOR_1
0x34e2	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1814	channel.c	FUNCTION_53	IF_3	FOR_1
0x34e5	            0x7ca0	                            jl 0x40034c7	      1814	channel.c	FUNCTION_53	IF_3	FOR_1
0x34e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	channel.c	FUNCTION_53	IF_3
0x34eb	          0xc60000	                       mov byte [rax], 0	      1817	channel.c	FUNCTION_53	IF_3
0x34ee	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1818	channel.c	FUNCTION_53	IF_3
0x34f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1818	channel.c	FUNCTION_53	IF_3
0x34f6	          0x488b00	                    mov rax, qword [rax]	      1818	channel.c	FUNCTION_53	IF_3
0x34f9	          0x4829c2	                            sub rdx, rax	      1818	channel.c	FUNCTION_53	IF_3
0x34fc	          0x4889d0	                            mov rax, rdx	      1818	channel.c	FUNCTION_53	IF_3
0x34ff	          0x4889c2	                            mov rdx, rax	      1818	channel.c	FUNCTION_53	IF_3
0x3502	        0x488b45f8	                mov rax, qword [rbp - 8]	      1818	channel.c	FUNCTION_53	IF_3
0x3506	        0x48895008	                mov qword [rax + 8], rdx	      1818	channel.c	FUNCTION_53	IF_3
0x350a	            0xeb3c	                           jmp 0x4003588	      1818	channel.c	FUNCTION_53	IF_3
0x350c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x350f	          0x4863d0	                         movsxd rdx, eax	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x3512	        0x488b45f8	                mov rax, qword [rbp - 8]	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x3516	          0x488b00	                    mov rax, qword [rax]	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x3519	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x351d	          0x4889ce	                            mov rsi, rcx	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x3520	          0x4889c7	                            mov rdi, rax	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x3523	      0xe800000000	                          call 0x4003568	      1822	channel.c	FUNCTION_53	ELSE_1	CALL_4
0x3528	        0x488b45f8	                mov rax, qword [rbp - 8]	      1823	channel.c	FUNCTION_53	ELSE_1
0x352c	          0x488b10	                    mov rdx, qword [rax]	      1823	channel.c	FUNCTION_53	ELSE_1
0x352f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1823	channel.c	FUNCTION_53	ELSE_1
0x3532	            0x4898	                                    cdqe	      1823	channel.c	FUNCTION_53	ELSE_1
0x3534	          0x4801d0	                            add rax, rdx	      1823	channel.c	FUNCTION_53	ELSE_1
0x3537	          0xc60000	                       mov byte [rax], 0	      1823	channel.c	FUNCTION_53	ELSE_1
0x353a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1824	channel.c	FUNCTION_53	ELSE_1
0x353d	          0x4863d0	                         movsxd rdx, eax	      1824	channel.c	FUNCTION_53	ELSE_1
0x3540	        0x488b45f8	                mov rax, qword [rbp - 8]	      1824	channel.c	FUNCTION_53	ELSE_1
0x3544	        0x48895008	                mov qword [rax + 8], rdx	      1824	channel.c	FUNCTION_53	ELSE_1
0x3548	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1827	channel.c	FUNCTION_53	IF_5
0x354c	            0x7455	                            je 0x40035e3	      1827	channel.c	FUNCTION_53	IF_5
0x354e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1830	channel.c	FUNCTION_53	IF_5
0x3552	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1830	channel.c	FUNCTION_53	IF_5
0x3556	        0x488b45f8	                mov rax, qword [rbp - 8]	      1830	channel.c	FUNCTION_53	IF_5
0x355a	        0x48895010	             mov qword [rax + 0x10], rdx	      1830	channel.c	FUNCTION_53	IF_5
0x355e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1831	channel.c	FUNCTION_53	IF_5
0x3562	    0x48c740180000	               mov qword [rax + 0x18], 0	      1831	channel.c	FUNCTION_53	IF_5
0x356a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1832	channel.c	FUNCTION_53	IF_5	IF_6
0x356e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1832	channel.c	FUNCTION_53	IF_5	IF_6
0x3572	          0x4885c0	                           test rax, rax	      1832	channel.c	FUNCTION_53	IF_5	IF_6
0x3575	            0x750e	                           jne 0x40035c5	      1832	channel.c	FUNCTION_53	IF_5	IF_6
0x3577	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1833	channel.c	FUNCTION_53	IF_5	IF_6
0x357b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1833	channel.c	FUNCTION_53	IF_5	IF_6
0x357f	        0x48895018	             mov qword [rax + 0x18], rdx	      1833	channel.c	FUNCTION_53	IF_5	IF_6
0x3583	            0xeb10	                           jmp 0x40035d5	      1833	channel.c	FUNCTION_53	IF_5	IF_6
0x3585	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1835	channel.c	FUNCTION_53	IF_5	ELSE_2
0x3589	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1835	channel.c	FUNCTION_53	IF_5	ELSE_2
0x358d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1835	channel.c	FUNCTION_53	IF_5	ELSE_2
0x3591	        0x48895018	             mov qword [rax + 0x18], rdx	      1835	channel.c	FUNCTION_53	IF_5	ELSE_2
0x3595	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1836	channel.c	FUNCTION_53	IF_5
0x3599	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1836	channel.c	FUNCTION_53	IF_5
0x359d	        0x48895010	             mov qword [rax + 0x10], rdx	      1836	channel.c	FUNCTION_53	IF_5
0x35a1	            0xeb53	                           jmp 0x4003636	      1836	channel.c	FUNCTION_53	IF_5
0x35a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1841	channel.c	FUNCTION_53	ELSE_3
0x35a7	    0x48c740100000	               mov qword [rax + 0x10], 0	      1841	channel.c	FUNCTION_53	ELSE_3
0x35af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1842	channel.c	FUNCTION_53	ELSE_3
0x35b3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1842	channel.c	FUNCTION_53	ELSE_3
0x35b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1842	channel.c	FUNCTION_53	ELSE_3
0x35bb	        0x48895018	             mov qword [rax + 0x18], rdx	      1842	channel.c	FUNCTION_53	ELSE_3
0x35bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1843	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35c3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1843	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35c7	          0x4885c0	                           test rax, rax	      1843	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35ca	            0x750e	                           jne 0x400361a	      1843	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1844	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35d0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1844	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35d4	        0x48895010	             mov qword [rax + 0x10], rdx	      1844	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35d8	            0xeb10	                           jmp 0x400362a	      1844	channel.c	FUNCTION_53	ELSE_3	IF_7
0x35da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1846	channel.c	FUNCTION_53	ELSE_3	ELSE_4
0x35de	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1846	channel.c	FUNCTION_53	ELSE_3	ELSE_4
0x35e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1846	channel.c	FUNCTION_53	ELSE_3	ELSE_4
0x35e6	        0x48895010	             mov qword [rax + 0x10], rdx	      1846	channel.c	FUNCTION_53	ELSE_3	ELSE_4
0x35ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1847	channel.c	FUNCTION_53	ELSE_3	ELSE_4
0x35ee	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1847	channel.c	FUNCTION_53	ELSE_3	ELSE_4
0x35f2	        0x48895018	             mov qword [rax + 0x18], rdx	      1847	channel.c	FUNCTION_53	ELSE_3	ELSE_4
0x35f6	      0xe800000000	                          call 0x400363b	      1850	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_5
0x35fb	            0x85c0	                           test eax, eax	      1850	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_5
0x35fd	            0x7473	                            je 0x40036b2	      1850	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_5
0x35ff	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1850	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_5
0x3604	            0x746c	                            je 0x40036b2	      1850	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_5
0x3606	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1852	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_6
0x360a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1852	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_6
0x360e	          0x4889d6	                            mov rsi, rdx	      1852	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_6
0x3611	          0x4889c7	                            mov rdi, rax	      1852	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_6
0x3614	      0xe8cbcaffff	                    call sym.ch_log_lead	      1852	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_6
0x3619	    0x488b05000000	            mov rax, qword [0x04003660] 	      1853	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_7
0x3620	          0x4889c6	                            mov rsi, rax	      1853	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_7
0x3623	      0xbf27000000	                           mov edi, 0x27	      1853	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_7
0x3628	      0xe800000000	                          call 0x400366d	      1853	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_7
0x362d	    0x488b15000000	            mov rdx, qword [0x04003674] 	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x3634	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x3637	          0x4863f0	                         movsxd rsi, eax	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x363a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x363e	          0x4889d1	                            mov rcx, rdx	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x3641	      0xba01000000	                              mov edx, 1	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x3646	          0x4889c7	                            mov rdi, rax	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x3649	      0xe800000000	                          call 0x400368e	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x364e	    0x890500000000	            mov dword [0x04003694], eax 	      1854	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_8
0x3654	    0x488b05000000	            mov rax, qword [0x0400369b] 	      1855	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_9
0x365b	          0x4889c1	                            mov rcx, rax	      1855	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_9
0x365e	      0xba02000000	                              mov edx, 2	      1855	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_9
0x3663	      0xbe01000000	                              mov esi, 1	      1855	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_9
0x3668	      0xbf00000000	                              mov edi, 0	      1855	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_9
0x366d	      0xe800000000	                          call 0x40036b2	      1855	channel.c	FUNCTION_53	ELSE_4	IF_8	CALL_9
0x3672	      0xb801000000	                              mov eax, 1	      1857	channel.c	FUNCTION_53
0x3677	              0xc9	                                   leave	      1858	channel.c	FUNCTION_53
0x3678	              0xc3	                                     ret	      1858	channel.c	FUNCTION_53
has_pending_job	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	34
0xb01e	              0x55	                                push rbp	      5473	channel.c	FUNCTION_131
0xb01f	          0x4889e5	                            mov rbp, rsp	      5473	channel.c	FUNCTION_131
0xb022	        0x4883ec10	                           sub rsp, 0x10	      5473	channel.c	FUNCTION_131
0xb026	    0x488b05000000	            mov rax, qword [0x0400b06d] 	      5476	channel.c	FUNCTION_131	FOR_1
0xb02d	        0x488945f8	                mov qword [rbp - 8], rax	      5476	channel.c	FUNCTION_131	FOR_1
0xb031	            0xeb4a	                           jmp 0x400b0bd	      5476	channel.c	FUNCTION_131	FOR_1
0xb033	        0x488b45f8	                mov rax, qword [rbp - 8]	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb037	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb03a	          0x83f801	                              cmp eax, 1	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb03d	            0x7510	                           jne 0x400b08f	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb03f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb043	          0x4889c7	                            mov rdi, rax	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb046	      0xe8bff5ffff	       call sym.job_channel_still_useful	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb04b	            0x85c0	                           test eax, eax	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb04d	            0x741c	                            je 0x400b0ab	      5479	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0xb04f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5480	channel.c	FUNCTION_131	FOR_1	IF_1
0xb053	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5480	channel.c	FUNCTION_131	FOR_1	IF_1
0xb056	          0x83f803	                              cmp eax, 3	      5480	channel.c	FUNCTION_131	FOR_1	IF_1
0xb059	            0x7517	                           jne 0x400b0b2	      5480	channel.c	FUNCTION_131	FOR_1	IF_1
0xb05b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5481	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0xb05f	          0x4889c7	                            mov rdi, rax	      5481	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0xb062	      0xe8def5ffff	          call sym.job_channel_can_close	      5481	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0xb067	            0x85c0	                           test eax, eax	      5481	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0xb069	            0x7407	                            je 0x400b0b2	      5481	channel.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0xb06b	      0xb801000000	                              mov eax, 1	      5482	channel.c	FUNCTION_131	FOR_1	IF_1
0xb070	            0xeb17	                           jmp 0x400b0c9	      5482	channel.c	FUNCTION_131	FOR_1	IF_1
0xb072	        0x488b45f8	                mov rax, qword [rbp - 8]	      5476	channel.c	FUNCTION_131	FOR_1
0xb076	          0x488b00	                    mov rax, qword [rax]	      5476	channel.c	FUNCTION_131	FOR_1
0xb079	        0x488945f8	                mov qword [rbp - 8], rax	      5476	channel.c	FUNCTION_131	FOR_1
0xb07d	      0x48837df800	                  cmp qword [rbp - 8], 0	      5476	channel.c	FUNCTION_131	FOR_1
0xb082	            0x75af	                           jne 0x400b073	      5476	channel.c	FUNCTION_131	FOR_1
0xb084	      0xb800000000	                              mov eax, 0	      5483	channel.c	FUNCTION_131
0xb089	              0xc9	                                   leave	      5484	channel.c	FUNCTION_131
0xb08a	              0xc3	                                     ret	      5484	channel.c	FUNCTION_131
has_any_channel	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	8
0x513	              0x55	                                push rbp	       298	channel.c	FUNCTION_11
0x514	          0x4889e5	                            mov rbp, rsp	       298	channel.c	FUNCTION_11
0x517	    0x488b05000000	            mov rax, qword [0x0400055e] 	       299	channel.c	FUNCTION_11
0x51e	          0x4885c0	                           test rax, rax	       299	channel.c	FUNCTION_11
0x521	           0xf95c0	                                setne al	       299	channel.c	FUNCTION_11
0x524	           0xfb6c0	                           movzx eax, al	       299	channel.c	FUNCTION_11
0x527	              0x5d	                                 pop rbp	       300	channel.c	FUNCTION_11
0x528	              0xc3	                                     ret	       300	channel.c	FUNCTION_11
free_unused_channels_contents	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	38
0x850	              0x55	                                push rbp	       426	channel.c	FUNCTION_19
0x851	          0x4889e5	                            mov rbp, rsp	       426	channel.c	FUNCTION_19
0x854	        0x4883ec20	                           sub rsp, 0x20	       426	channel.c	FUNCTION_19
0x858	          0x897dec	             mov dword [rbp - 0x14], edi	       426	channel.c	FUNCTION_19
0x85b	          0x8975e8	             mov dword [rbp - 0x18], esi	       426	channel.c	FUNCTION_19
0x85e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       427	channel.c	FUNCTION_19
0x865	    0x8b0500000000	            mov eax, dword [0x040008ab] 	       432	channel.c	FUNCTION_19
0x86b	          0x83c001	                              add eax, 1	       432	channel.c	FUNCTION_19
0x86e	    0x890500000000	            mov dword [0x040008b4], eax 	       432	channel.c	FUNCTION_19
0x874	    0x488b05000000	            mov rax, qword [0x040008bb] 	       434	channel.c	FUNCTION_19	FOR_1
0x87b	        0x488945f8	                mov qword [rbp - 8], rax	       434	channel.c	FUNCTION_19	FOR_1
0x87f	            0xeb42	                           jmp 0x4000903	       434	channel.c	FUNCTION_19	FOR_1
0x881	        0x488b45f8	                mov rax, qword [rbp - 8]	       435	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_1
0x885	          0x4889c7	                            mov rdi, rax	       435	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_1
0x888	      0xe89cfcffff	           call sym.channel_still_useful	       435	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_1
0x88d	            0x85c0	                           test eax, eax	       435	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_1
0x88f	            0x7527	                           jne 0x40008f8	       435	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_1
0x891	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	channel.c	FUNCTION_19	FOR_1	IF_1
0x895	    0x8b80b8040000	           mov eax, dword [rax + 0x4b8] 	       436	channel.c	FUNCTION_19	FOR_1	IF_1
0x89b	          0x3345ec	             xor eax, dword [rbp - 0x14]	       436	channel.c	FUNCTION_19	FOR_1	IF_1
0x89e	          0x2345e8	             and eax, dword [rbp - 0x18]	       436	channel.c	FUNCTION_19	FOR_1	IF_1
0x8a1	            0x85c0	                           test eax, eax	       436	channel.c	FUNCTION_19	FOR_1	IF_1
0x8a3	            0x7413	                            je 0x40008f8	       436	channel.c	FUNCTION_19	FOR_1	IF_1
0x8a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       440	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x8a9	          0x4889c7	                            mov rdi, rax	       440	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x8ac	      0xe826feffff	          call sym.channel_free_contents	       440	channel.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x8b1	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       441	channel.c	FUNCTION_19	FOR_1	IF_1
0x8b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       434	channel.c	FUNCTION_19	FOR_1
0x8bc	          0x488b00	                    mov rax, qword [rax]	       434	channel.c	FUNCTION_19	FOR_1
0x8bf	        0x488945f8	                mov qword [rbp - 8], rax	       434	channel.c	FUNCTION_19	FOR_1
0x8c3	      0x48837df800	                  cmp qword [rbp - 8], 0	       434	channel.c	FUNCTION_19	FOR_1
0x8c8	            0x75b7	                           jne 0x40008c1	       434	channel.c	FUNCTION_19	FOR_1
0x8ca	    0x8b0500000000	            mov eax, dword [0x04000910] 	       444	channel.c	FUNCTION_19
0x8d0	          0x83e801	                              sub eax, 1	       444	channel.c	FUNCTION_19
0x8d3	    0x890500000000	            mov dword [0x04000919], eax 	       444	channel.c	FUNCTION_19
0x8d9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       445	channel.c	FUNCTION_19
0x8dc	              0xc9	                                   leave	       446	channel.c	FUNCTION_19
0x8dd	              0xc3	                                     ret	       446	channel.c	FUNCTION_19
may_invoke_callback	functions,0:SWITCH,0:CALL,31:ELSE,11:IF,34:FOR,4:WHILE,2:DO,0	489
0x4bc5	              0x55	                                push rbp	      2465	channel.c	FUNCTION_64
0x4bc6	          0x4889e5	                            mov rbp, rsp	      2465	channel.c	FUNCTION_64
0x4bc9	    0x4881ece00000	                           sub rsp, 0xe0	      2465	channel.c	FUNCTION_64
0x4bd0	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      2465	channel.c	FUNCTION_64
0x4bd7	    0x89b524ffffff	             mov dword [rbp - 0xdc], esi	      2465	channel.c	FUNCTION_64
0x4bdd	    0x64488b042528	                mov rax, qword fs:[0x28]	      2465	channel.c	FUNCTION_64
0x4be6	        0x488945f8	                mov qword [rbp - 8], rax	      2465	channel.c	FUNCTION_64
0x4bea	            0x31c0	                            xor eax, eax	      2465	channel.c	FUNCTION_64
0x4bec	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      2466	channel.c	FUNCTION_64
0x4bf7	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2467	channel.c	FUNCTION_64
0x4c02	    0xc78530ffffff	     mov dword [rbp - 0xd0], 0xffffffff 	      2469	channel.c	FUNCTION_64
0x4c0c	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2470	channel.c	FUNCTION_64
0x4c12	        0x48c1e004	                              shl rax, 4	      2470	channel.c	FUNCTION_64
0x4c16	          0x4889c2	                            mov rdx, rax	      2470	channel.c	FUNCTION_64
0x4c19	        0x48c1e204	                              shl rdx, 4	      2470	channel.c	FUNCTION_64
0x4c1d	          0x4801d0	                            add rax, rdx	      2470	channel.c	FUNCTION_64
0x4c20	        0x488d5010	                   lea rdx, [rax + 0x10]	      2470	channel.c	FUNCTION_64
0x4c24	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2470	channel.c	FUNCTION_64
0x4c2b	          0x4801d0	                            add rax, rdx	      2470	channel.c	FUNCTION_64
0x4c2e	        0x4883c008	                              add rax, 8	      2470	channel.c	FUNCTION_64
0x4c32	        0x48894590	             mov qword [rbp - 0x70], rax	      2470	channel.c	FUNCTION_64
0x4c36	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2471	channel.c	FUNCTION_64
0x4c3a	          0x8b4008	                mov eax, dword [rax + 8]	      2471	channel.c	FUNCTION_64
0x4c3d	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      2471	channel.c	FUNCTION_64
0x4c43	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2472	channel.c	FUNCTION_64
0x4c47	    0x4805a8000000	                           add rax, 0xa8	      2472	channel.c	FUNCTION_64
0x4c4d	        0x48894598	             mov qword [rbp - 0x68], rax	      2472	channel.c	FUNCTION_64
0x4c51	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      2474	channel.c	FUNCTION_64
0x4c5c	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      2475	channel.c	FUNCTION_64
0x4c67	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2476	channel.c	FUNCTION_64
0x4c72	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2479	channel.c	FUNCTION_64	IF_1
0x4c79	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      2479	channel.c	FUNCTION_64	IF_1
0x4c80	          0x4885c0	                           test rax, rax	      2479	channel.c	FUNCTION_64	IF_1
0x4c83	            0x740a	                            je 0x4004ccf	      2479	channel.c	FUNCTION_64	IF_1
0x4c85	      0xb800000000	                              mov eax, 0	      2481	channel.c	FUNCTION_64	IF_1
0x4c8a	      0xe922080000	                           jmp 0x40054f1	      2481	channel.c	FUNCTION_64	IF_1
0x4c8f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2484	channel.c	FUNCTION_64	FOR_1
0x4c93	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2484	channel.c	FUNCTION_64	FOR_1
0x4c97	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2484	channel.c	FUNCTION_64	FOR_1
0x4c9e	            0xeb20	                           jmp 0x4004d00	      2484	channel.c	FUNCTION_64	FOR_1
0x4ca0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2485	channel.c	FUNCTION_64	FOR_1	IF_2
0x4ca7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2485	channel.c	FUNCTION_64	FOR_1	IF_2
0x4caa	            0x85c0	                           test eax, eax	      2485	channel.c	FUNCTION_64	FOR_1	IF_2
0x4cac	            0x741e	                            je 0x4004d0c	      2485	channel.c	FUNCTION_64	FOR_1	IF_2
0x4cae	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2484	channel.c	FUNCTION_64	FOR_1
0x4cb5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2484	channel.c	FUNCTION_64	FOR_1
0x4cb9	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2484	channel.c	FUNCTION_64	FOR_1
0x4cc0	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2484	channel.c	FUNCTION_64	FOR_1
0x4cc8	            0x75d6	                           jne 0x4004ce0	      2484	channel.c	FUNCTION_64	FOR_1
0x4cca	            0xeb01	                           jmp 0x4004d0d	      2484	channel.c	FUNCTION_64	FOR_1
0x4ccc	              0x90	                                     nop	      2486	channel.c	FUNCTION_64	FOR_1	IF_2
0x4ccd	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2487	channel.c	FUNCTION_64	IF_3
0x4cd5	            0x7425	                            je 0x4004d3c	      2487	channel.c	FUNCTION_64	IF_3
0x4cd7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2489	channel.c	FUNCTION_64	IF_3
0x4cde	          0x488b00	                    mov rax, qword [rax]	      2489	channel.c	FUNCTION_64	IF_3
0x4ce1	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2489	channel.c	FUNCTION_64	IF_3
0x4ce8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2490	channel.c	FUNCTION_64	IF_3
0x4cef	        0x488b4008	                mov rax, qword [rax + 8]	      2490	channel.c	FUNCTION_64	IF_3
0x4cf3	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2490	channel.c	FUNCTION_64	IF_3
0x4cfa	            0xeb60	                           jmp 0x4004d9c	      2490	channel.c	FUNCTION_64	IF_3
0x4cfc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2492	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d00	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2492	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d07	          0x4885c0	                           test rax, rax	      2492	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d0a	            0x7426	                            je 0x4004d72	      2492	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d0c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2494	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d10	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2494	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d17	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2494	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d1e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2495	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d22	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      2495	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d29	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2495	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d30	            0xeb2a	                           jmp 0x4004d9c	      2495	channel.c	FUNCTION_64	ELSE_1	IF_4
0x4d32	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2499	channel.c	FUNCTION_64	ELSE_2
0x4d39	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      2499	channel.c	FUNCTION_64	ELSE_2
0x4d40	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2499	channel.c	FUNCTION_64	ELSE_2
0x4d47	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2500	channel.c	FUNCTION_64	ELSE_2
0x4d4e	    0x488b80880400	           mov rax, qword [rax + 0x488] 	      2500	channel.c	FUNCTION_64	ELSE_2
0x4d55	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2500	channel.c	FUNCTION_64	ELSE_2
0x4d5c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2503	channel.c	FUNCTION_64
0x4d60	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2503	channel.c	FUNCTION_64
0x4d67	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2503	channel.c	FUNCTION_64
0x4d6e	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d76	            0x7467	                            je 0x4004e1f	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d78	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d7c	    0x4805e0000000	                           add rax, 0xe0	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d82	          0x4889c7	                            mov rdi, rax	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d85	      0xe800000000	                          call 0x4004dca	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d8a	            0x85c0	                           test eax, eax	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d8c	            0x7410	                            je 0x4004dde	      2504	channel.c	FUNCTION_64	IF_5	CALL_1
0x4d8e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2505	channel.c	FUNCTION_64	IF_5
0x4d95	        0x488b4008	                mov rax, qword [rax + 8]	      2505	channel.c	FUNCTION_64	IF_5
0x4d99	          0x4885c0	                           test rax, rax	      2505	channel.c	FUNCTION_64	IF_5
0x4d9c	            0x7541	                           jne 0x4004e1f	      2505	channel.c	FUNCTION_64	IF_5
0x4d9e	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2508	channel.c	FUNCTION_64	IF_5	CALL_2
0x4da4	    0x488b14c50000	                  mov rdx, qword [rax*8]	      2508	channel.c	FUNCTION_64	IF_5	CALL_2
0x4dac	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2508	channel.c	FUNCTION_64	IF_5	CALL_2
0x4db3	      0xbe00000000	                              mov esi, 0	      2508	channel.c	FUNCTION_64	IF_5	CALL_2
0x4db8	          0x4889c7	                            mov rdi, rax	      2508	channel.c	FUNCTION_64	IF_5	CALL_2
0x4dbb	      0xb800000000	                              mov eax, 0	      2508	channel.c	FUNCTION_64	IF_5	CALL_2
0x4dc0	      0xe800000000	                          call 0x4004e05	      2508	channel.c	FUNCTION_64	IF_5	CALL_2
0x4dc5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2509	channel.c	FUNCTION_64	IF_5
0x4dc9	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      2509	channel.c	FUNCTION_64	IF_5
0x4dd4	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2510	channel.c	FUNCTION_64	IF_5
0x4ddf	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 2	      2513	channel.c	FUNCTION_64	IF_6
0x4de6	            0x740d	                            je 0x4004e35	      2513	channel.c	FUNCTION_64	IF_6
0x4de8	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 3	      2513	channel.c	FUNCTION_64	IF_6
0x4def	     0xf85a4010000	                           jne 0x4004fd9	      2513	channel.c	FUNCTION_64	IF_6
0x4df5	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      2516	channel.c	FUNCTION_64	IF_6
0x4dff	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e06	    0x8bb524ffffff	             mov esi, dword [rbp - 0xdc]	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e0c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e13	          0x4989d0	                             mov r8, rdx	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e16	      0xb900000000	                              mov ecx, 0	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e1b	      0xbaffffffff	                     mov edx, 0xffffffff	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e20	          0x4889c7	                            mov rdi, rax	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e23	      0xe82fefffff	               call sym.channel_get_json	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e28	            0x85c0	                           test eax, eax	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e2a	            0x754e	                           jne 0x4004eba	      2519	channel.c	FUNCTION_64	IF_6	IF_7	CALL_3
0x4e2c	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2522	channel.c	FUNCTION_64	IF_6	IF_7	CALL_4
0x4e32	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2522	channel.c	FUNCTION_64	IF_6	IF_7	CALL_4
0x4e39	            0x89d6	                            mov esi, edx	      2522	channel.c	FUNCTION_64	IF_6	IF_7	CALL_4
0x4e3b	          0x4889c7	                            mov rdi, rax	      2522	channel.c	FUNCTION_64	IF_6	IF_7	CALL_4
0x4e3e	      0xe858e9ffff	             call sym.channel_parse_json	      2522	channel.c	FUNCTION_64	IF_6	IF_7	CALL_4
0x4e43	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e4a	    0x8bb524ffffff	             mov esi, dword [rbp - 0xdc]	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e50	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e57	          0x4989d0	                             mov r8, rdx	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e5a	      0xb900000000	                              mov ecx, 0	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e5f	      0xbaffffffff	                     mov edx, 0xffffffff	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e64	          0x4889c7	                            mov rdi, rax	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e67	      0xe8ebeeffff	               call sym.channel_get_json	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e6c	            0x85c0	                           test eax, eax	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e6e	            0x750a	                           jne 0x4004eba	      2523	channel.c	FUNCTION_64	IF_6	IF_7	IF_8	CALL_5
0x4e70	      0xb800000000	                              mov eax, 0	      2524	channel.c	FUNCTION_64	IF_6	IF_7	IF_8
0x4e75	      0xe937060000	                           jmp 0x40054f1	      2524	channel.c	FUNCTION_64	IF_6	IF_7	IF_8
0x4e7a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2527	channel.c	FUNCTION_64	IF_6	FOR_2
0x4e81	        0x488b4008	                mov rax, qword [rax + 8]	      2527	channel.c	FUNCTION_64	IF_6	FOR_2
0x4e85	          0x488b00	                    mov rax, qword [rax]	      2527	channel.c	FUNCTION_64	IF_6	FOR_2
0x4e88	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2527	channel.c	FUNCTION_64	IF_6	FOR_2
0x4e8f	            0xeb43	                           jmp 0x4004f14	      2527	channel.c	FUNCTION_64	IF_6	FOR_2
0x4e91	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4e97	          0x8d5001	                      lea edx, [rax + 1]	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4e9a	    0x899534ffffff	             mov dword [rbp - 0xcc], edx	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ea0	            0x4898	                                    cdqe	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ea2	        0x48c1e004	                              shl rax, 4	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ea6	          0x4801e8	                            add rax, rbp	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ea9	        0x488d48b0	                   lea rcx, [rax - 0x50]	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ead	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4eb4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4eb8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ebc	          0x488901	                    mov qword [rcx], rax	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ebf	        0x48895108	                mov qword [rcx + 8], rdx	      2530	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ec3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2529	channel.c	FUNCTION_64	IF_6	FOR_2
0x4eca	          0x488b00	                    mov rax, qword [rax]	      2529	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ecd	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2529	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ed4	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2527	channel.c	FUNCTION_64	IF_6	FOR_2
0x4edc	            0x742d	                            je 0x4004f4b	      2527	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ede	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 3	      2528	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ee5	            0x7eaa	                           jle 0x4004ed1	      2528	channel.c	FUNCTION_64	IF_6	FOR_2
0x4ee7	            0xeb22	                           jmp 0x4004f4b	      2531	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4ee9	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4eef	          0x8d5001	                      lea edx, [rax + 1]	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4ef2	    0x899534ffffff	             mov dword [rbp - 0xcc], edx	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4ef8	            0x4898	                                    cdqe	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4efa	        0x48c1e004	                              shl rax, 4	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4efe	          0x4801e8	                            add rax, rbp	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4f01	        0x4883e850	                           sub rax, 0x50	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4f05	    0xc70000000000	                      mov dword [rax], 0	      2532	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4f0b	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 3	      2531	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4f12	            0x7ed5	                           jle 0x4004f29	      2531	channel.c	FUNCTION_64	IF_6	WHILE_1
0x4f14	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2534	channel.c	FUNCTION_64	IF_6	IF_9
0x4f17	          0x83f802	                              cmp eax, 2	      2534	channel.c	FUNCTION_64	IF_6	IF_9
0x4f1a	            0x7534	                           jne 0x4004f90	      2534	channel.c	FUNCTION_64	IF_6	IF_9
0x4f1c	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2537	channel.c	FUNCTION_64	IF_6	IF_9	CALL_6
0x4f20	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2537	channel.c	FUNCTION_64	IF_6	IF_9	CALL_6
0x4f26	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2537	channel.c	FUNCTION_64	IF_6	IF_9	CALL_6
0x4f2d	            0x89ce	                            mov esi, ecx	      2537	channel.c	FUNCTION_64	IF_6	IF_9	CALL_6
0x4f2f	          0x4889c7	                            mov rdi, rax	      2537	channel.c	FUNCTION_64	IF_6	IF_9	CALL_6
0x4f32	      0xe83df1ffff	                call sym.channel_exe_cmd	      2537	channel.c	FUNCTION_64	IF_6	IF_9	CALL_6
0x4f37	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2538	channel.c	FUNCTION_64	IF_6	IF_9	CALL_7
0x4f3e	          0x4889c7	                            mov rdi, rax	      2538	channel.c	FUNCTION_64	IF_6	IF_9	CALL_7
0x4f41	      0xe800000000	                          call 0x4004f86	      2538	channel.c	FUNCTION_64	IF_6	IF_9	CALL_7
0x4f46	      0xb801000000	                              mov eax, 1	      2539	channel.c	FUNCTION_64	IF_6	IF_9
0x4f4b	      0xe961050000	                           jmp 0x40054f1	      2539	channel.c	FUNCTION_64	IF_6	IF_9
0x4f50	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2542	channel.c	FUNCTION_64	IF_6	IF_10
0x4f53	          0x83f801	                              cmp eax, 1	      2542	channel.c	FUNCTION_64	IF_6	IF_10
0x4f56	            0x7432	                            je 0x4004fca	      2542	channel.c	FUNCTION_64	IF_6	IF_10
0x4f58	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2544	channel.c	FUNCTION_64	IF_6	IF_10	CALL_8
0x4f5f	      0xbe00000000	                              mov esi, 0	      2544	channel.c	FUNCTION_64	IF_6	IF_10	CALL_8
0x4f64	          0x4889c7	                            mov rdi, rax	      2544	channel.c	FUNCTION_64	IF_6	IF_10	CALL_8
0x4f67	      0xb800000000	                              mov eax, 0	      2544	channel.c	FUNCTION_64	IF_6	IF_10	CALL_8
0x4f6c	      0xe86bb3ffff	                       call sym.ch_error	      2544	channel.c	FUNCTION_64	IF_6	IF_10	CALL_8
0x4f71	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2546	channel.c	FUNCTION_64	IF_6	IF_10	CALL_9
0x4f78	          0x4889c7	                            mov rdi, rax	      2546	channel.c	FUNCTION_64	IF_6	IF_10	CALL_9
0x4f7b	      0xe800000000	                          call 0x4004fc0	      2546	channel.c	FUNCTION_64	IF_6	IF_10	CALL_9
0x4f80	      0xb800000000	                              mov eax, 0	      2547	channel.c	FUNCTION_64	IF_6	IF_10
0x4f85	      0xe927050000	                           jmp 0x40054f1	      2547	channel.c	FUNCTION_64	IF_6	IF_10
0x4f8a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2549	channel.c	FUNCTION_64	IF_6
0x4f8e	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      2549	channel.c	FUNCTION_64	IF_6
0x4f94	      0xe9af020000	                           jmp 0x4005288	      2514	channel.c	FUNCTION_64	IF_6
0x4f99	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2551	channel.c	FUNCTION_64	ELSE_3	IF_11	CALL_10
0x4f9f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2551	channel.c	FUNCTION_64	ELSE_3	IF_11	CALL_10
0x4fa6	            0x89d6	                            mov esi, edx	      2551	channel.c	FUNCTION_64	ELSE_3	IF_11	CALL_10
0x4fa8	          0x4889c7	                            mov rdi, rax	      2551	channel.c	FUNCTION_64	ELSE_3	IF_11	CALL_10
0x4fab	      0xe800000000	                          call 0x4004ff0	      2551	channel.c	FUNCTION_64	ELSE_3	IF_11	CALL_10
0x4fb0	          0x4885c0	                           test rax, rax	      2551	channel.c	FUNCTION_64	ELSE_3	IF_11	CALL_10
0x4fb3	            0x750a	                           jne 0x4004fff	      2551	channel.c	FUNCTION_64	ELSE_3	IF_11	CALL_10
0x4fb5	      0xb800000000	                              mov eax, 0	      2554	channel.c	FUNCTION_64	ELSE_3	IF_11
0x4fba	      0xe9f2040000	                           jmp 0x40054f1	      2554	channel.c	FUNCTION_64	ELSE_3	IF_11
0x4fbf	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2559	channel.c	FUNCTION_64	ELSE_4	IF_12
0x4fc7	            0x754f	                           jne 0x4005058	      2559	channel.c	FUNCTION_64	ELSE_4	IF_12
0x4fc9	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2559	channel.c	FUNCTION_64	ELSE_4	IF_12
0x4fd1	            0x7545	                           jne 0x4005058	      2559	channel.c	FUNCTION_64	ELSE_4	IF_12
0x4fd3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4fda	    0x488b80900400	           mov rax, qword [rax + 0x490] 	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4fe1	          0x4885c0	                           test rax, rax	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4fe4	            0x7528	                           jne 0x400504e	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4fe6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4fed	    0x8b80a0040000	           mov eax, dword [rax + 0x4a0] 	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4ff3	            0x85c0	                           test eax, eax	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4ff5	            0x7517	                           jne 0x400504e	      2563	channel.c	FUNCTION_64	ELSE_4	IF_12	IF_13
0x4ff7	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2564	channel.c	FUNCTION_64	ELSE_4	IF_12	CALL_11
0x4ffd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2564	channel.c	FUNCTION_64	ELSE_4	IF_12	CALL_11
0x5004	            0x89d6	                            mov esi, edx	      2564	channel.c	FUNCTION_64	ELSE_4	IF_12	CALL_11
0x5006	          0x4889c7	                            mov rdi, rax	      2564	channel.c	FUNCTION_64	ELSE_4	IF_12	CALL_11
0x5009	      0xe861fbffff	                  call sym.drop_messages	      2564	channel.c	FUNCTION_64	ELSE_4	IF_12	CALL_11
0x500e	      0xb800000000	                              mov eax, 0	      2565	channel.c	FUNCTION_64	ELSE_4	IF_12
0x5013	      0xe999040000	                           jmp 0x40054f1	      2565	channel.c	FUNCTION_64	ELSE_4	IF_12
0x5018	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      2568	channel.c	FUNCTION_64	ELSE_4	IF_14
0x501f	     0xf85df010000	                           jne 0x4005244	      2568	channel.c	FUNCTION_64	ELSE_4	IF_14
0x5025	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2570	channel.c	FUNCTION_64	ELSE_4	IF_14
0x502d	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2578	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_12
0x5033	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2578	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_12
0x503a	            0x89d6	                            mov esi, edx	      2578	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_12
0x503c	          0x4889c7	                            mov rdi, rax	      2578	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_12
0x503f	      0xe800000000	                          call 0x4005084	      2578	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_12
0x5044	        0x488945a0	             mov qword [rbp - 0x60], rax	      2578	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_12
0x5048	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2579	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_13
0x504c	          0x4889c7	                            mov rdi, rax	      2579	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_13
0x504f	      0xe800000000	                          call 0x4005094	      2579	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_13
0x5054	        0x48894580	             mov qword [rbp - 0x80], rax	      2579	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	CALL_13
0x5058	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2580	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_15
0x505d	            0x7542	                           jne 0x40050e1	      2580	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_15
0x505f	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x5065	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x506c	      0xba01000000	                              mov edx, 1	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x5071	            0x89ce	                            mov esi, ecx	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x5073	          0x4889c7	                            mov rdi, rax	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x5076	      0xe800000000	                          call 0x40050bb	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x507b	            0x85c0	                           test eax, eax	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x507d	            0x75ae	                           jne 0x400506d	      2582	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	CALL_14
0x507f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x5083	            0x8b00	                    mov eax, dword [rax]	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x5085	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x5088	            0x750d	                           jne 0x40050d7	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x508a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x508e	        0x488b4008	                mov rax, qword [rax + 8]	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x5092	          0x4885c0	                           test rax, rax	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x5095	            0x750d	                           jne 0x40050e4	      2584	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x5097	      0xb800000000	                              mov eax, 0	      2586	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16
0x509c	      0xe910040000	                           jmp 0x40054f1	      2586	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16
0x50a1	              0x90	                                     nop	      2581	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_15
0x50a2	            0xeb01	                           jmp 0x40050e5	      2581	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_15
0x50a4	              0x90	                                     nop	      2585	channel.c	FUNCTION_64	ELSE_4	IF_14	WHILE_2	IF_16	IF_17
0x50a5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2589	channel.c	FUNCTION_64	ELSE_4	IF_14
0x50a9	          0x488b00	                    mov rax, qword [rax]	      2589	channel.c	FUNCTION_64	ELSE_4	IF_14
0x50ac	        0x48894588	             mov qword [rbp - 0x78], rax	      2589	channel.c	FUNCTION_64	ELSE_4	IF_14
0x50b0	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2591	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50b5	            0x7569	                           jne 0x4005160	      2591	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50b7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50bb	        0x488b4008	                mov rax, qword [rax + 8]	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50bf	        0x488d5001	                      lea rdx, [rax + 1]	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50c3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50c7	          0x4889d6	                            mov rsi, rdx	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50ca	          0x4889c7	                            mov rdi, rax	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50cd	      0xe800000000	                          call 0x4005112	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50d2	        0x488945a8	             mov qword [rbp - 0x58], rax	      2596	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	CALL_15
0x50d6	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2597	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	IF_19
0x50db	            0x750a	                           jne 0x4005127	      2597	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	IF_19
0x50dd	      0xb800000000	                              mov eax, 0	      2600	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	IF_19
0x50e2	      0xe9ca030000	                           jmp 0x40054f1	      2600	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18	IF_19
0x50e7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2601	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50eb	        0x48894588	             mov qword [rbp - 0x78], rax	      2601	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50ef	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2602	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50f3	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2602	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50f7	          0x488910	                    mov qword [rax], rdx	      2602	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50fa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x50fe	        0x488b4008	                mov rax, qword [rax + 8]	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x5102	        0x488d4801	                      lea rcx, [rax + 1]	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x5106	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x510a	        0x48894a08	                mov qword [rdx + 8], rcx	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x510e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x5112	          0x4801d0	                            add rax, rdx	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x5115	        0x48894580	             mov qword [rbp - 0x80], rax	      2603	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x5119	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2604	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x511d	          0xc60000	                       mov byte [rax], 0	      2604	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_18
0x5120	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5124	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x512b	            0xeb20	                           jmp 0x400518d	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x512d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2609	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3	IF_20
0x5134	           0xfb600	                   movzx eax, byte [rax]	      2609	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3	IF_20
0x5137	            0x84c0	                             test al, al	      2609	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3	IF_20
0x5139	            0x750a	                           jne 0x4005185	      2609	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3	IF_20
0x513b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2610	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3	IF_20
0x5142	          0xc6000a	                     mov byte [rax], 0xa	      2610	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3	IF_20
0x5145	    0x48838570ffff	               add qword [rbp - 0x90], 1	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x514d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5154	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5158	            0x7318	                           jae 0x40051b2	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x515a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x515e	        0x488b5008	                mov rdx, qword [rax + 8]	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5162	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5166	          0x4801d0	                            add rax, rdx	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5169	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5170	            0x77bb	                            ja 0x400516d	      2608	channel.c	FUNCTION_64	ELSE_4	IF_14	FOR_3
0x5172	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x5176	        0x488d4801	                      lea rcx, [rax + 1]	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x517a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x517e	        0x488b5008	                mov rdx, qword [rax + 8]	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x5182	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x5186	          0x4801d0	                            add rax, rdx	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x5189	          0x4839c1	                            cmp rcx, rax	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x518c	            0x7527	                           jne 0x40051f5	      2612	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x518e	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2615	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21	CALL_16
0x5194	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2615	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21	CALL_16
0x519b	            0x89d6	                            mov esi, edx	      2615	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21	CALL_16
0x519d	          0x4889c7	                            mov rdi, rax	      2615	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21	CALL_16
0x51a0	      0xe800000000	                          call 0x40051e5	      2615	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21	CALL_16
0x51a5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2615	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21	CALL_16
0x51ac	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2616	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x51b0	          0xc60000	                       mov byte [rax], 0	      2616	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x51b3	            0xeb6d	                           jmp 0x4005262	      2616	channel.c	FUNCTION_64	ELSE_4	IF_14	IF_21
0x51b5	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51b9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51bd	          0x4829c2	                            sub rdx, rax	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51c0	          0x4889d0	                            mov rax, rdx	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51c3	            0x89c2	                            mov edx, eax	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51c5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51c9	            0x89d6	                            mov esi, edx	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51cb	          0x4889c7	                            mov rdi, rax	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51ce	      0xe800000000	                          call 0x4005213	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51d3	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2622	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_17
0x51da	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51de	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51e2	          0x4829c2	                            sub rdx, rax	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51e5	          0x4889d0	                            mov rax, rdx	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51e8	          0x8d5001	                      lea edx, [rax + 1]	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51eb	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51f1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51f8	            0x89ce	                            mov esi, ecx	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51fa	          0x4889c7	                            mov rdi, rax	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x51fd	      0xe800000000	                          call 0x4005242	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x5202	            0xeb1e	                           jmp 0x4005262	      2623	channel.c	FUNCTION_64	ELSE_4	IF_14	ELSE_5	CALL_18
0x5204	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2631	channel.c	FUNCTION_64	ELSE_4	ELSE_6	CALL_19
0x520a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2631	channel.c	FUNCTION_64	ELSE_4	ELSE_6	CALL_19
0x5211	            0x89d6	                            mov esi, edx	      2631	channel.c	FUNCTION_64	ELSE_4	ELSE_6	CALL_19
0x5213	          0x4889c7	                            mov rdi, rax	      2631	channel.c	FUNCTION_64	ELSE_4	ELSE_6	CALL_19
0x5216	      0xe857ddffff	                call sym.channel_get_all	      2631	channel.c	FUNCTION_64	ELSE_4	ELSE_6	CALL_19
0x521b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2631	channel.c	FUNCTION_64	ELSE_4	ELSE_6	CALL_19
0x5222	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2634	channel.c	FUNCTION_64	ELSE_4	IF_22
0x522a	            0x750a	                           jne 0x4005276	      2634	channel.c	FUNCTION_64	ELSE_4	IF_22
0x522c	      0xb800000000	                              mov eax, 0	      2635	channel.c	FUNCTION_64	ELSE_4	IF_22
0x5231	      0xe97b020000	                           jmp 0x40054f1	      2635	channel.c	FUNCTION_64	ELSE_4	IF_22
0x5236	    0xc745c0020000	               mov dword [rbp - 0x40], 2	      2637	channel.c	FUNCTION_64	ELSE_4
0x523d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2638	channel.c	FUNCTION_64	ELSE_4
0x5244	        0x488945c8	             mov qword [rbp - 0x38], rax	      2638	channel.c	FUNCTION_64	ELSE_4
0x5248	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      2641	channel.c	FUNCTION_64	IF_23
0x524f	     0xf8ee3000000	                           jle 0x4005378	      2641	channel.c	FUNCTION_64	IF_23
0x5255	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      2643	channel.c	FUNCTION_64	IF_23
0x525f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x5263	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x5267	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x526e	            0xeb4e	                           jmp 0x40052fe	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x5270	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2647	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24
0x5277	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2647	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24
0x527a	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      2647	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24
0x5280	            0x752a	                           jne 0x40052ec	      2647	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24
0x5282	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2649	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24	CALL_20
0x5286	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2649	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24	CALL_20
0x528d	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2649	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24	CALL_20
0x5291	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2649	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24	CALL_20
0x5298	          0x4889c7	                            mov rdi, rax	      2649	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24	CALL_20
0x529b	      0xe86ff4ffff	       call sym.invoke_one_time_callback	      2649	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24	CALL_20
0x52a0	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	      2650	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24
0x52aa	            0xeb1c	                           jmp 0x4005308	      2651	channel.c	FUNCTION_64	IF_23	FOR_4	IF_24
0x52ac	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x52b3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x52b7	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x52be	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x52c6	            0x75a8	                           jne 0x40052b0	      2646	channel.c	FUNCTION_64	IF_23	FOR_4
0x52c8	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      2653	channel.c	FUNCTION_64	IF_23	IF_25
0x52cf	     0xf85ad010000	                           jne 0x40054c2	      2653	channel.c	FUNCTION_64	IF_23	IF_25
0x52d5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2655	channel.c	FUNCTION_64	IF_23	IF_25	IF_26
0x52dc	    0x8b80a0040000	           mov eax, dword [rax + 0x4a0] 	      2655	channel.c	FUNCTION_64	IF_23	IF_25	IF_26
0x52e2	            0x85c0	                           test eax, eax	      2655	channel.c	FUNCTION_64	IF_23	IF_25	IF_26
0x52e4	            0x742e	                            je 0x4005354	      2655	channel.c	FUNCTION_64	IF_23	IF_25	IF_26
0x52e6	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2658	channel.c	FUNCTION_64	IF_23	IF_25	IF_26	CALL_21
0x52ed	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2658	channel.c	FUNCTION_64	IF_23	IF_25	IF_26	CALL_21
0x52f3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2658	channel.c	FUNCTION_64	IF_23	IF_25	IF_26	CALL_21
0x52fa	            0x89ce	                            mov esi, ecx	      2658	channel.c	FUNCTION_64	IF_23	IF_25	IF_26	CALL_21
0x52fc	          0x4889c7	                            mov rdi, rax	      2658	channel.c	FUNCTION_64	IF_23	IF_25	IF_26	CALL_21
0x52ff	      0xe8b5ebffff	              call sym.channel_push_json	      2658	channel.c	FUNCTION_64	IF_23	IF_25	IF_26	CALL_21
0x5304	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2659	channel.c	FUNCTION_64	IF_23	IF_25	IF_26
0x530f	      0xe96e010000	                           jmp 0x40054c2	      2659	channel.c	FUNCTION_64	IF_23	IF_25	IF_26
0x5314	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2662	channel.c	FUNCTION_64	IF_23	IF_25	ELSE_7	CALL_22
0x531a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2662	channel.c	FUNCTION_64	IF_23	IF_25	ELSE_7	CALL_22
0x5321	      0xbe00000000	                              mov esi, 0	      2662	channel.c	FUNCTION_64	IF_23	IF_25	ELSE_7	CALL_22
0x5326	          0x4889c7	                            mov rdi, rax	      2662	channel.c	FUNCTION_64	IF_23	IF_25	ELSE_7	CALL_22
0x5329	      0xb800000000	                              mov eax, 0	      2662	channel.c	FUNCTION_64	IF_23	IF_25	ELSE_7	CALL_22
0x532e	      0xe800000000	                          call 0x4005373	      2662	channel.c	FUNCTION_64	IF_23	IF_25	ELSE_7	CALL_22
0x5333	      0xe94a010000	                           jmp 0x40054c2	      2662	channel.c	FUNCTION_64	IF_23	IF_25	ELSE_7	CALL_22
0x5338	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2666	channel.c	FUNCTION_64	ELSE_8	IF_27
0x5340	            0x750e	                           jne 0x4005390	      2666	channel.c	FUNCTION_64	ELSE_8	IF_27
0x5342	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2666	channel.c	FUNCTION_64	ELSE_8	IF_27
0x534a	     0xf8413010000	                            je 0x40054a3	      2666	channel.c	FUNCTION_64	ELSE_8	IF_27
0x5350	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2668	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28
0x5358	     0xf848a000000	                            je 0x4005428	      2668	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28
0x535e	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2670	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_29
0x5366	            0x751e	                           jne 0x40053c6	      2670	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_29
0x5368	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      2672	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	CALL_23
0x536e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2672	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	CALL_23
0x5375	            0x89d6	                            mov esi, edx	      2672	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	CALL_23
0x5377	          0x4889c7	                            mov rdi, rax	      2672	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	CALL_23
0x537a	      0xe800000000	                          call 0x40053bf	      2672	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	CALL_23
0x537f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2672	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	CALL_23
0x5386	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2673	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30
0x538e	            0x7458	                            je 0x4005428	      2673	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30
0x5390	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2676	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x5397	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2676	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x539e	          0x4885c0	                           test rax, rax	      2676	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x53a1	            0x7422	                            je 0x4005405	      2676	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	IF_31
0x53a3	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2677	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x53aa	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2677	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x53b1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2677	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x53b8	          0x4889ce	                            mov rsi, rcx	      2677	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x53bb	          0x4889c7	                            mov rdi, rax	      2677	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x53be	      0xe800000000	                          call 0x4005403	      2677	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x53c3	            0xeb23	                           jmp 0x4005428	      2677	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_24
0x53c5	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2680	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x53cb	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2680	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x53d2	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2680	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x53d9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2680	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x53e0	          0x4889c7	                            mov rdi, rax	      2680	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x53e3	      0xe8b7f3ffff	               call sym.append_to_buffer	      2680	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_28	IF_30	CALL_25
0x53e8	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2684	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32
0x53f0	     0xf848c000000	                            je 0x40054c2	      2684	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32
0x53f6	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2686	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	IF_33
0x53fe	            0x7420	                            je 0x4005460	      2686	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	IF_33
0x5400	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2687	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	CALL_26
0x5404	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2687	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	CALL_26
0x540b	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2687	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	CALL_26
0x540f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2687	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	CALL_26
0x5416	          0x4889c7	                            mov rdi, rax	      2687	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	CALL_26
0x5419	      0xe8f1f2ffff	       call sym.invoke_one_time_callback	      2687	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	CALL_26
0x541e	            0xeb62	                           jmp 0x40054c2	      2684	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32
0x5420	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2691	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x5427	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2691	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x542e	      0xbe00000000	                              mov esi, 0	      2691	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x5433	          0x4889c7	                            mov rdi, rax	      2691	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x5436	      0xb800000000	                              mov eax, 0	      2691	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x543b	      0xe800000000	                          call 0x4005480	      2691	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_27
0x5440	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      2693	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x5444	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2693	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x544b	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      2693	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x5452	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2693	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x5459	          0x4889c7	                            mov rdi, rax	      2693	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x545c	      0xe819d9ffff	                call sym.invoke_callback	      2693	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32	ELSE_10	CALL_28
0x5461	            0xeb1f	                           jmp 0x40054c2	      2684	channel.c	FUNCTION_64	ELSE_8	IF_27	IF_32
0x5463	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2698	channel.c	FUNCTION_64	CALL_29
0x5469	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2698	channel.c	FUNCTION_64	CALL_29
0x5470	      0xbe00000000	                              mov esi, 0	      2698	channel.c	FUNCTION_64	CALL_29
0x5475	          0x4889c7	                            mov rdi, rax	      2698	channel.c	FUNCTION_64	CALL_29
0x5478	      0xb800000000	                              mov eax, 0	      2698	channel.c	FUNCTION_64	CALL_29
0x547d	      0xe800000000	                          call 0x40054c2	      2698	channel.c	FUNCTION_64	CALL_29
0x5482	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2700	channel.c	FUNCTION_64	IF_34
0x5489	          0x4885c0	                           test rax, rax	      2700	channel.c	FUNCTION_64	IF_34
0x548c	            0x740f	                            je 0x40054dd	      2700	channel.c	FUNCTION_64	IF_34
0x548e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2701	channel.c	FUNCTION_64	CALL_30
0x5495	          0x4889c7	                            mov rdi, rax	      2701	channel.c	FUNCTION_64	CALL_30
0x5498	      0xe800000000	                          call 0x40054dd	      2701	channel.c	FUNCTION_64	CALL_30
0x549d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2702	channel.c	FUNCTION_64	CALL_31
0x54a4	          0x4889c7	                            mov rdi, rax	      2702	channel.c	FUNCTION_64	CALL_31
0x54a7	      0xe800000000	                          call 0x40054ec	      2702	channel.c	FUNCTION_64	CALL_31
0x54ac	      0xb801000000	                              mov eax, 1	      2704	channel.c	FUNCTION_64
0x54b1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2705	channel.c	FUNCTION_64
0x54b5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2705	channel.c	FUNCTION_64
0x54be	            0x7405	                            je 0x4005505	      2705	channel.c	FUNCTION_64
0x54c0	      0xe800000000	                          call 0x4005505	      2705	channel.c	FUNCTION_64
0x54c5	              0xc9	                                   leave	      2705	channel.c	FUNCTION_64
0x54c6	              0xc3	                                     ret	      2705	channel.c	FUNCTION_64
channel_status	functions,0:SWITCH,0:CALL,4:ELSE,2:IF,10:FOR,1:WHILE,0:DO,0	70
0x55ea	              0x55	                                push rbp	      2755	channel.c	FUNCTION_68
0x55eb	          0x4889e5	                            mov rbp, rsp	      2755	channel.c	FUNCTION_68
0x55ee	        0x4883ec20	                           sub rsp, 0x20	      2755	channel.c	FUNCTION_68
0x55f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2755	channel.c	FUNCTION_68
0x55f6	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2755	channel.c	FUNCTION_68
0x55f9	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2757	channel.c	FUNCTION_68
0x5600	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2759	channel.c	FUNCTION_68	IF_1
0x5605	            0x750a	                           jne 0x4005651	      2759	channel.c	FUNCTION_68	IF_1
0x5607	      0xb800000000	                              mov eax, 0	      2760	channel.c	FUNCTION_68	IF_1
0x560c	      0xe9d8000000	                           jmp 0x4005729	      2760	channel.c	FUNCTION_68	IF_1
0x5611	        0x837de401	               cmp dword [rbp - 0x1c], 1	      2761	channel.c	FUNCTION_68	IF_2
0x5615	            0x753e	                           jne 0x4005695	      2761	channel.c	FUNCTION_68	IF_2
0x5617	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2763	channel.c	FUNCTION_68	IF_2	IF_3
0x561b	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      2763	channel.c	FUNCTION_68	IF_2	IF_3
0x5621	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2763	channel.c	FUNCTION_68	IF_2	IF_3
0x5624	            0x740a	                            je 0x4005670	      2763	channel.c	FUNCTION_68	IF_2	IF_3
0x5626	      0xb800000000	                              mov eax, 0	      2764	channel.c	FUNCTION_68	IF_2	IF_3
0x562b	      0xe9b9000000	                           jmp 0x4005729	      2764	channel.c	FUNCTION_68	IF_2	IF_3
0x5630	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2765	channel.c	FUNCTION_68	IF_2	IF_4	CALL_1
0x5634	      0xbe01000000	                              mov esi, 1	      2765	channel.c	FUNCTION_68	IF_2	IF_4	CALL_1
0x5639	          0x4889c7	                            mov rdi, rax	      2765	channel.c	FUNCTION_68	IF_2	IF_4	CALL_1
0x563c	      0xe800000000	                          call 0x4005681	      2765	channel.c	FUNCTION_68	IF_2	IF_4	CALL_1
0x5641	            0x85c0	                           test eax, eax	      2765	channel.c	FUNCTION_68	IF_2	IF_4	CALL_1
0x5643	     0xf848e000000	                            je 0x4005717	      2765	channel.c	FUNCTION_68	IF_2	IF_4	CALL_1
0x5649	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2766	channel.c	FUNCTION_68	IF_2	IF_4
0x5650	      0xe982000000	                           jmp 0x4005717	      2766	channel.c	FUNCTION_68	IF_2	IF_4
0x5655	        0x837de402	               cmp dword [rbp - 0x1c], 2	      2768	channel.c	FUNCTION_68	ELSE_1	IF_5
0x5659	            0x7534	                           jne 0x40056cf	      2768	channel.c	FUNCTION_68	ELSE_1	IF_5
0x565b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2770	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_6
0x565f	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      2770	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_6
0x5665	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2770	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_6
0x5668	            0x7407	                            je 0x40056b1	      2770	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_6
0x566a	      0xb800000000	                              mov eax, 0	      2771	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_6
0x566f	            0xeb78	                           jmp 0x4005729	      2771	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_6
0x5671	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2772	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7	CALL_2
0x5675	      0xbe02000000	                              mov esi, 2	      2772	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7	CALL_2
0x567a	          0x4889c7	                            mov rdi, rax	      2772	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7	CALL_2
0x567d	      0xe800000000	                          call 0x40056c2	      2772	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7	CALL_2
0x5682	            0x85c0	                           test eax, eax	      2772	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7	CALL_2
0x5684	            0x7451	                            je 0x4005717	      2772	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7	CALL_2
0x5686	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2773	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7
0x568d	            0xeb48	                           jmp 0x4005717	      2773	channel.c	FUNCTION_68	ELSE_1	IF_5	IF_7
0x568f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2777	channel.c	FUNCTION_68	ELSE_2	IF_8	CALL_3
0x5693	          0x4889c7	                            mov rdi, rax	      2777	channel.c	FUNCTION_68	ELSE_2	IF_8	CALL_3
0x5696	      0xe800000000	                          call 0x40056db	      2777	channel.c	FUNCTION_68	ELSE_2	IF_8	CALL_3
0x569b	            0x85c0	                           test eax, eax	      2777	channel.c	FUNCTION_68	ELSE_2	IF_8	CALL_3
0x569d	            0x7407	                            je 0x40056e6	      2777	channel.c	FUNCTION_68	ELSE_2	IF_8	CALL_3
0x569f	      0xb800000000	                              mov eax, 0	      2778	channel.c	FUNCTION_68	ELSE_2	IF_8
0x56a4	            0xeb43	                           jmp 0x4005729	      2778	channel.c	FUNCTION_68	ELSE_2	IF_8
0x56a6	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2779	channel.c	FUNCTION_68	ELSE_2	FOR_1
0x56ad	            0xeb22	                           jmp 0x4005711	      2779	channel.c	FUNCTION_68	ELSE_2	FOR_1
0x56af	          0x8b55f8	                mov edx, dword [rbp - 8]	      2780	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9	CALL_4
0x56b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2780	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9	CALL_4
0x56b6	            0x89d6	                            mov esi, edx	      2780	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9	CALL_4
0x56b8	          0x4889c7	                            mov rdi, rax	      2780	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9	CALL_4
0x56bb	      0xe800000000	                          call 0x4005700	      2780	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9	CALL_4
0x56c0	            0x85c0	                           test eax, eax	      2780	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9	CALL_4
0x56c2	            0x7409	                            je 0x400570d	      2780	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9	CALL_4
0x56c4	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2782	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9
0x56cb	            0xeb0a	                           jmp 0x4005717	      2783	channel.c	FUNCTION_68	ELSE_2	FOR_1	IF_9
0x56cd	        0x8345f801	                  add dword [rbp - 8], 1	      2779	channel.c	FUNCTION_68	ELSE_2	FOR_1
0x56d1	        0x837df802	                  cmp dword [rbp - 8], 2	      2779	channel.c	FUNCTION_68	ELSE_2	FOR_1
0x56d5	            0x76d8	                           jbe 0x40056ef	      2779	channel.c	FUNCTION_68	ELSE_2	FOR_1
0x56d7	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2787	channel.c	FUNCTION_68	IF_10
0x56db	            0x7407	                            je 0x4005724	      2787	channel.c	FUNCTION_68	IF_10
0x56dd	      0xb800000000	                              mov eax, 0	      2788	channel.c	FUNCTION_68	IF_10
0x56e2	            0xeb05	                           jmp 0x4005729	      2788	channel.c	FUNCTION_68	IF_10
0x56e4	      0xb800000000	                              mov eax, 0	      2789	channel.c	FUNCTION_68
0x56e9	              0xc9	                                   leave	      2790	channel.c	FUNCTION_68
0x56ea	              0xc3	                                     ret	      2790	channel.c	FUNCTION_68
ch_log_lead	functions,0:SWITCH,0:CALL,6:ELSE,1:IF,2:FOR,0:WHILE,0:DO,0	51
0xe4	              0x55	                                push rbp	       142	channel.c	FUNCTION_6
0xe5	          0x4889e5	                            mov rbp, rsp	       142	channel.c	FUNCTION_6
0xe8	        0x4883ec30	                           sub rsp, 0x30	       142	channel.c	FUNCTION_6
0xec	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       142	channel.c	FUNCTION_6
0xf0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       142	channel.c	FUNCTION_6
0xf4	    0x64488b042528	                mov rax, qword fs:[0x28]	       142	channel.c	FUNCTION_6
0xfd	        0x488945f8	                mov qword [rbp - 8], rax	       142	channel.c	FUNCTION_6
0x101	            0x31c0	                            xor eax, eax	       142	channel.c	FUNCTION_6
0x103	    0x488b05000000	            mov rax, qword [0x0400014a] 	       143	channel.c	FUNCTION_6	IF_1
0x10a	          0x4885c0	                           test rax, rax	       143	channel.c	FUNCTION_6	IF_1
0x10d	     0xf848f000000	                            je 0x40001e2	       143	channel.c	FUNCTION_6	IF_1
0x113	        0x488d45e0	                   lea rax, [rbp - 0x20]	       148	channel.c	FUNCTION_6	IF_1	CALL_1
0x117	          0x4889c7	                            mov rdi, rax	       148	channel.c	FUNCTION_6	IF_1	CALL_1
0x11a	      0xe800000000	                          call 0x400015f	       148	channel.c	FUNCTION_6	IF_1	CALL_1
0x11f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       149	channel.c	FUNCTION_6	IF_1	CALL_2
0x123	      0xbe00000000	                              mov esi, 0	       149	channel.c	FUNCTION_6	IF_1	CALL_2
0x128	          0x4889c7	                            mov rdi, rax	       149	channel.c	FUNCTION_6	IF_1	CALL_2
0x12b	      0xe800000000	                          call 0x4000170	       149	channel.c	FUNCTION_6	IF_1	CALL_2
0x130	        0x488d45e0	                   lea rax, [rbp - 0x20]	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x134	          0x4889c7	                            mov rdi, rax	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x137	      0xe800000000	                          call 0x400017c	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x13c	          0x4889c2	                            mov rdx, rax	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x13f	    0x488b05000000	            mov rax, qword [0x04000186] 	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x146	      0xbe00000000	                              mov esi, 0	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x14b	          0x4889c7	                            mov rdi, rax	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x14e	      0xb800000000	                              mov eax, 0	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x153	      0xe800000000	                          call 0x4000198	       150	channel.c	FUNCTION_6	IF_1	CALL_4
0x158	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       152	channel.c	FUNCTION_6	IF_1	IF_2
0x15d	            0x7426	                            je 0x40001c5	       152	channel.c	FUNCTION_6	IF_1	IF_2
0x15f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x163	          0x8b4810	            mov ecx, dword [rax + 0x10] 	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x166	    0x488b05000000	            mov rax, qword [0x040001ad] 	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x16d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x171	      0xbe00000000	                              mov esi, 0	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x176	          0x4889c7	                            mov rdi, rax	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x179	      0xb800000000	                              mov eax, 0	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x17e	      0xe800000000	                          call 0x40001c3	       153	channel.c	FUNCTION_6	IF_1	CALL_5
0x183	            0xeb1d	                           jmp 0x40001e2	       157	channel.c	FUNCTION_6
0x185	    0x488b05000000	            mov rax, qword [0x040001cc] 	       155	channel.c	FUNCTION_6	IF_1	CALL_6
0x18c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       155	channel.c	FUNCTION_6	IF_1	CALL_6
0x190	      0xbe00000000	                              mov esi, 0	       155	channel.c	FUNCTION_6	IF_1	CALL_6
0x195	          0x4889c7	                            mov rdi, rax	       155	channel.c	FUNCTION_6	IF_1	CALL_6
0x198	      0xb800000000	                              mov eax, 0	       155	channel.c	FUNCTION_6	IF_1	CALL_6
0x19d	      0xe800000000	                          call 0x40001e2	       155	channel.c	FUNCTION_6	IF_1	CALL_6
0x1a2	              0x90	                                     nop	       157	channel.c	FUNCTION_6
0x1a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	channel.c	FUNCTION_6
0x1a7	    0x644833042528	                xor rax, qword fs:[0x28]	       157	channel.c	FUNCTION_6
0x1b0	            0x7405	                            je 0x40001f7	       157	channel.c	FUNCTION_6
0x1b2	      0xe800000000	                          call 0x40001f7	       157	channel.c	FUNCTION_6
0x1b7	              0xc9	                                   leave	       157	channel.c	FUNCTION_6
0x1b8	              0xc3	                                     ret	       157	channel.c	FUNCTION_6
channel_set_nonblock	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,0:WHILE,0:DO,0	31
0x7036	              0x55	                                push rbp	      3672	channel.c	FUNCTION_89
0x7037	          0x4889e5	                            mov rbp, rsp	      3672	channel.c	FUNCTION_89
0x703a	        0x4883ec20	                           sub rsp, 0x20	      3672	channel.c	FUNCTION_89
0x703e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3672	channel.c	FUNCTION_89
0x7042	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3672	channel.c	FUNCTION_89
0x7045	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3673	channel.c	FUNCTION_89
0x7048	        0x48c1e004	                              shl rax, 4	      3673	channel.c	FUNCTION_89
0x704c	          0x4889c2	                            mov rdx, rax	      3673	channel.c	FUNCTION_89
0x704f	        0x48c1e204	                              shl rdx, 4	      3673	channel.c	FUNCTION_89
0x7053	          0x4801d0	                            add rax, rdx	      3673	channel.c	FUNCTION_89
0x7056	        0x488d5010	                   lea rdx, [rax + 0x10]	      3673	channel.c	FUNCTION_89
0x705a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3673	channel.c	FUNCTION_89
0x705e	          0x4801d0	                            add rax, rdx	      3673	channel.c	FUNCTION_89
0x7061	        0x4883c008	                              add rax, 8	      3673	channel.c	FUNCTION_89
0x7065	        0x488945f8	                mov qword [rbp - 8], rax	      3673	channel.c	FUNCTION_89
0x7069	        0x488b45f8	                mov rax, qword [rbp - 8]	      3674	channel.c	FUNCTION_89
0x706d	            0x8b00	                    mov eax, dword [rax]	      3674	channel.c	FUNCTION_89
0x706f	          0x8945f4	              mov dword [rbp - 0xc], eax	      3674	channel.c	FUNCTION_89
0x7072	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	      3676	channel.c	FUNCTION_89	IF_1
0x7076	            0x7424	                            je 0x40070dc	      3676	channel.c	FUNCTION_89	IF_1
0x7078	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3683	channel.c	FUNCTION_89	IF_1	CALL_2
0x707b	      0xba00080000	                          mov edx, 0x800	      3683	channel.c	FUNCTION_89	IF_1	CALL_2
0x7080	      0xbe04000000	                              mov esi, 4	      3683	channel.c	FUNCTION_89	IF_1	CALL_2
0x7085	            0x89c7	                            mov edi, eax	      3683	channel.c	FUNCTION_89	IF_1	CALL_2
0x7087	      0xb800000000	                              mov eax, 0	      3683	channel.c	FUNCTION_89	IF_1	CALL_2
0x708c	      0xe800000000	                          call 0x40070d1	      3683	channel.c	FUNCTION_89	IF_1	CALL_2
0x7091	        0x488b45f8	                mov rax, qword [rbp - 8]	      3685	channel.c	FUNCTION_89	IF_1
0x7095	    0xc7407c010000	               mov dword [rax + 0x7c], 1	      3685	channel.c	FUNCTION_89	IF_1
0x709c	              0x90	                                     nop	      3687	channel.c	FUNCTION_89
0x709d	              0xc9	                                   leave	      3687	channel.c	FUNCTION_89
0x709e	              0xc3	                                     ret	      3687	channel.c	FUNCTION_89
ch_close_part_on_error	functions,0:SWITCH,0:CALL,7:ELSE,1:IF,4:FOR,0:WHILE,0:DO,0	105
0x63c5	              0x55	                                push rbp	      3232	channel.c	FUNCTION_80
0x63c6	          0x4889e5	                            mov rbp, rsp	      3232	channel.c	FUNCTION_80
0x63c9	        0x4883ec60	                           sub rsp, 0x60	      3232	channel.c	FUNCTION_80
0x63cd	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3232	channel.c	FUNCTION_80
0x63d1	          0x8975b4	             mov dword [rbp - 0x4c], esi	      3232	channel.c	FUNCTION_80
0x63d4	          0x8955b0	             mov dword [rbp - 0x50], edx	      3232	channel.c	FUNCTION_80
0x63d7	        0x48894da8	             mov qword [rbp - 0x58], rcx	      3232	channel.c	FUNCTION_80
0x63db	    0x64488b042528	                mov rax, qword fs:[0x28]	      3232	channel.c	FUNCTION_80
0x63e4	        0x488945f8	                mov qword [rbp - 8], rax	      3232	channel.c	FUNCTION_80
0x63e8	            0x31c0	                            xor eax, eax	      3232	channel.c	FUNCTION_80
0x63ea	    0x48b825732829	          movabs rax, 0x6552203a29287325	      3233	channel.c	FUNCTION_80
0x63f4	        0x488945d0	             mov qword [rbp - 0x30], rax	      3233	channel.c	FUNCTION_80
0x63f8	    0x48b861642025	          movabs rax, 0x7266207325206461	      3233	channel.c	FUNCTION_80
0x6402	        0x488945d8	             mov qword [rbp - 0x28], rax	      3233	channel.c	FUNCTION_80
0x6406	    0x48b86f6d2063	          movabs rax, 0x61705f6863206d6f	      3233	channel.c	FUNCTION_80
0x6410	        0x488945e0	             mov qword [rbp - 0x20], rax	      3233	channel.c	FUNCTION_80
0x6414	    0x48b872745b25	          movabs rax, 0x202c5d64255b7472	      3233	channel.c	FUNCTION_80
0x641e	        0x488945e8	             mov qword [rbp - 0x18], rax	      3233	channel.c	FUNCTION_80
0x6422	    0x48b8636c6f73	            movabs rax, 0x676e69736f6c63	      3233	channel.c	FUNCTION_80
0x642c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3233	channel.c	FUNCTION_80
0x6430	        0x837db000	               cmp dword [rbp - 0x50], 0	      3235	channel.c	FUNCTION_80	IF_1
0x6434	            0x7426	                            je 0x400649c	      3235	channel.c	FUNCTION_80	IF_1
0x6436	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3237	channel.c	FUNCTION_80	CALL_1
0x6439	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3237	channel.c	FUNCTION_80	CALL_1
0x643d	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      3237	channel.c	FUNCTION_80	CALL_1
0x6441	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3237	channel.c	FUNCTION_80	CALL_1
0x6445	          0x4189c8	                            mov r8d, ecx	      3237	channel.c	FUNCTION_80	CALL_1
0x6448	      0xb900000000	                              mov ecx, 0	      3237	channel.c	FUNCTION_80	CALL_1
0x644d	          0x4889c7	                            mov rdi, rax	      3237	channel.c	FUNCTION_80	CALL_1
0x6450	      0xb800000000	                              mov eax, 0	      3237	channel.c	FUNCTION_80	CALL_1
0x6455	      0xe8829effff	                       call sym.ch_error	      3237	channel.c	FUNCTION_80	CALL_1
0x645a	            0xeb24	                           jmp 0x40064c0	      3237	channel.c	FUNCTION_80	CALL_1
0x645c	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3239	channel.c	FUNCTION_80	CALL_2
0x645f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3239	channel.c	FUNCTION_80	CALL_2
0x6463	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      3239	channel.c	FUNCTION_80	CALL_2
0x6467	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3239	channel.c	FUNCTION_80	CALL_2
0x646b	          0x4189c8	                            mov r8d, ecx	      3239	channel.c	FUNCTION_80	CALL_2
0x646e	      0xb900000000	                              mov ecx, 0	      3239	channel.c	FUNCTION_80	CALL_2
0x6473	          0x4889c7	                            mov rdi, rax	      3239	channel.c	FUNCTION_80	CALL_2
0x6476	      0xb800000000	                              mov eax, 0	      3239	channel.c	FUNCTION_80	CALL_2
0x647b	      0xe800000000	                          call 0x40064c0	      3239	channel.c	FUNCTION_80	CALL_2
0x6480	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3252	channel.c	FUNCTION_80	IF_2
0x6484	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      3252	channel.c	FUNCTION_80	IF_2
0x648b	          0x4885c0	                           test rax, rax	      3252	channel.c	FUNCTION_80	IF_2
0x648e	            0x7427	                            je 0x40064f7	      3252	channel.c	FUNCTION_80	IF_2
0x6490	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x6494	    0x41b900000000	                              mov r9d, 0	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x649a	    0x41b800000000	                              mov r8d, 0	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x64a0	      0xb907000000	                              mov ecx, 7	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x64a5	      0xba00000000	                              mov edx, 0	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x64aa	      0xbe00000000	                              mov esi, 0	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x64af	          0x4889c7	                            mov rdi, rax	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x64b2	      0xe8fcceffff	                   call sym.channel_save	      3253	channel.c	FUNCTION_80	IF_2	CALL_3
0x64b7	        0x837db401	               cmp dword [rbp - 0x4c], 1	      3260	channel.c	FUNCTION_80	IF_3
0x64bb	            0x7406	                            je 0x4006503	      3260	channel.c	FUNCTION_80	IF_3
0x64bd	        0x837db402	               cmp dword [rbp - 0x4c], 2	      3260	channel.c	FUNCTION_80	IF_3
0x64c1	            0x7566	                           jne 0x4006569	      3260	channel.c	FUNCTION_80	IF_3
0x64c3	        0x837db401	               cmp dword [rbp - 0x4c], 1	      3262	channel.c	FUNCTION_80	IF_3
0x64c7	            0x7507	                           jne 0x4006510	      3262	channel.c	FUNCTION_80	IF_3
0x64c9	      0xb802000000	                              mov eax, 2	      3262	channel.c	FUNCTION_80	IF_3
0x64ce	            0xeb05	                           jmp 0x4006515	      3262	channel.c	FUNCTION_80	IF_3
0x64d0	      0xb801000000	                              mov eax, 1	      3262	channel.c	FUNCTION_80	IF_3
0x64d5	          0x8945cc	             mov dword [rbp - 0x34], eax	      3262	channel.c	FUNCTION_80	IF_3
0x64d8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64dc	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64df	        0x48c1e004	                              shl rax, 4	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64e3	          0x4889c1	                            mov rcx, rax	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64e6	        0x48c1e104	                              shl rcx, 4	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64ea	          0x4801c8	                            add rax, rcx	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64ed	          0x4801d0	                            add rax, rdx	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64f0	        0x4883c018	                           add rax, 0x18	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64f4	            0x8b10	                    mov edx, dword [rax]	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64f6	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64fa	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x64fd	        0x48c1e004	                              shl rax, 4	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x6501	          0x4889c6	                            mov rsi, rax	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x6504	        0x48c1e604	                              shl rsi, 4	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x6508	          0x4801f0	                            add rax, rsi	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x650b	          0x4801c8	                            add rax, rcx	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x650e	        0x4883c018	                           add rax, 0x18	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x6512	            0x8b00	                    mov eax, dword [rax]	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x6514	            0x39c2	                            cmp edx, eax	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x6516	            0x7511	                           jne 0x4006569	      3264	channel.c	FUNCTION_80	IF_3	IF_4
0x6518	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3265	channel.c	FUNCTION_80	IF_3	CALL_5
0x651b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3265	channel.c	FUNCTION_80	IF_3	CALL_5
0x651f	            0x89d6	                            mov esi, edx	      3265	channel.c	FUNCTION_80	IF_3	CALL_5
0x6521	          0x4889c7	                            mov rdi, rax	      3265	channel.c	FUNCTION_80	IF_3	CALL_5
0x6524	      0xe8e0b3ffff	                  call sym.ch_close_part	      3265	channel.c	FUNCTION_80	IF_3	CALL_5
0x6529	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3267	channel.c	FUNCTION_80	CALL_6
0x652c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3267	channel.c	FUNCTION_80	CALL_6
0x6530	            0x89d6	                            mov esi, edx	      3267	channel.c	FUNCTION_80	CALL_6
0x6532	          0x4889c7	                            mov rdi, rax	      3267	channel.c	FUNCTION_80	CALL_6
0x6535	      0xe8cfb3ffff	                  call sym.ch_close_part	      3267	channel.c	FUNCTION_80	CALL_6
0x653a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3271	channel.c	FUNCTION_80	CALL_7
0x653d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3271	channel.c	FUNCTION_80	CALL_7
0x6541	            0x89d6	                            mov esi, edx	      3271	channel.c	FUNCTION_80	CALL_7
0x6543	          0x4889c7	                            mov rdi, rax	      3271	channel.c	FUNCTION_80	CALL_7
0x6546	      0xe898a6ffff	     call sym.channel_gui_unregister_one	      3271	channel.c	FUNCTION_80	CALL_7
0x654b	              0x90	                                     nop	      3273	channel.c	FUNCTION_80
0x654c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3273	channel.c	FUNCTION_80
0x6550	    0x644833042528	                xor rax, qword fs:[0x28]	      3273	channel.c	FUNCTION_80
0x6559	            0x7405	                            je 0x40065a0	      3273	channel.c	FUNCTION_80
0x655b	      0xe800000000	                          call 0x40065a0	      3273	channel.c	FUNCTION_80
0x6560	              0xc9	                                   leave	      3273	channel.c	FUNCTION_80
0x6561	              0xc3	                                     ret	      3273	channel.c	FUNCTION_80
channel_info	functions,0:SWITCH,0:CALL,9:ELSE,1:IF,1:FOR,0:WHILE,0:DO,0	72
0x5952	              0x55	                                push rbp	      2843	channel.c	FUNCTION_70
0x5953	          0x4889e5	                            mov rbp, rsp	      2843	channel.c	FUNCTION_70
0x5956	        0x4883ec10	                           sub rsp, 0x10	      2843	channel.c	FUNCTION_70
0x595a	        0x48897df8	                mov qword [rbp - 8], rdi	      2843	channel.c	FUNCTION_70
0x595e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2843	channel.c	FUNCTION_70
0x5962	        0x488b45f8	                mov rax, qword [rbp - 8]	      2844	channel.c	FUNCTION_70	CALL_1
0x5966	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2844	channel.c	FUNCTION_70	CALL_1
0x5969	          0x4863d0	                         movsxd rdx, eax	      2844	channel.c	FUNCTION_70	CALL_1
0x596c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2844	channel.c	FUNCTION_70	CALL_1
0x5970	      0xb900000000	                              mov ecx, 0	      2844	channel.c	FUNCTION_70	CALL_1
0x5975	      0xbe00000000	                              mov esi, 0	      2844	channel.c	FUNCTION_70	CALL_1
0x597a	          0x4889c7	                            mov rdi, rax	      2844	channel.c	FUNCTION_70	CALL_1
0x597d	      0xe800000000	                          call 0x40059c2	      2844	channel.c	FUNCTION_70	CALL_1
0x5982	        0x488b45f8	                mov rax, qword [rbp - 8]	      2845	channel.c	FUNCTION_70	CALL_3
0x5986	      0xbeffffffff	                     mov esi, 0xffffffff	      2845	channel.c	FUNCTION_70	CALL_3
0x598b	          0x4889c7	                            mov rdi, rax	      2845	channel.c	FUNCTION_70	CALL_3
0x598e	      0xe800000000	                          call 0x40059d3	      2845	channel.c	FUNCTION_70	CALL_3
0x5993	          0x4889c2	                            mov rdx, rax	      2845	channel.c	FUNCTION_70	CALL_3
0x5996	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2845	channel.c	FUNCTION_70	CALL_3
0x599a	          0x4889d1	                            mov rcx, rdx	      2845	channel.c	FUNCTION_70	CALL_3
0x599d	      0xba00000000	                              mov edx, 0	      2845	channel.c	FUNCTION_70	CALL_3
0x59a2	      0xbe00000000	                              mov esi, 0	      2845	channel.c	FUNCTION_70	CALL_3
0x59a7	          0x4889c7	                            mov rdi, rax	      2845	channel.c	FUNCTION_70	CALL_3
0x59aa	      0xe800000000	                          call 0x40059ef	      2845	channel.c	FUNCTION_70	CALL_3
0x59af	        0x488b45f8	                mov rax, qword [rbp - 8]	      2847	channel.c	FUNCTION_70	IF_1
0x59b3	    0x488b80600400	           mov rax, qword [rax + 0x460] 	      2847	channel.c	FUNCTION_70	IF_1
0x59ba	          0x4885c0	                           test rax, rax	      2847	channel.c	FUNCTION_70	IF_1
0x59bd	            0x7463	                            je 0x4005a62	      2847	channel.c	FUNCTION_70	IF_1
0x59bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59c3	    0x488b90600400	           mov rdx, qword [rax + 0x460] 	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59ce	          0x4889d1	                            mov rcx, rdx	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59d1	      0xba00000000	                              mov edx, 0	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59d6	      0xbe00000000	                              mov esi, 0	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59db	          0x4889c7	                            mov rdi, rax	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59de	      0xe800000000	                          call 0x4005a23	      2849	channel.c	FUNCTION_70	IF_1	CALL_4
0x59e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x59e7	    0x8b8068040000	           mov eax, dword [rax + 0x468] 	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x59ed	          0x4863d0	                         movsxd rdx, eax	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x59f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x59f4	      0xb900000000	                              mov ecx, 0	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x59f9	      0xbe00000000	                              mov esi, 0	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x59fe	          0x4889c7	                            mov rdi, rax	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x5a01	      0xe800000000	                          call 0x4005a46	      2850	channel.c	FUNCTION_70	IF_1	CALL_5
0x5a06	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2851	channel.c	FUNCTION_70	IF_1	CALL_6
0x5a0a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2851	channel.c	FUNCTION_70	IF_1	CALL_6
0x5a0e	      0xb900000000	                              mov ecx, 0	      2851	channel.c	FUNCTION_70	IF_1	CALL_6
0x5a13	      0xba00000000	                              mov edx, 0	      2851	channel.c	FUNCTION_70	IF_1	CALL_6
0x5a18	          0x4889c7	                            mov rdi, rax	      2851	channel.c	FUNCTION_70	IF_1	CALL_6
0x5a1b	      0xe8cbfcffff	              call sym.channel_part_info	      2851	channel.c	FUNCTION_70	IF_1	CALL_6
0x5a20	            0xeb4e	                           jmp 0x4005ab0	      2859	channel.c	FUNCTION_70
0x5a22	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2855	channel.c	FUNCTION_70	ELSE_1	CALL_7
0x5a26	        0x488b45f8	                mov rax, qword [rbp - 8]	      2855	channel.c	FUNCTION_70	ELSE_1	CALL_7
0x5a2a	      0xb901000000	                              mov ecx, 1	      2855	channel.c	FUNCTION_70	ELSE_1	CALL_7
0x5a2f	      0xba00000000	                              mov edx, 0	      2855	channel.c	FUNCTION_70	ELSE_1	CALL_7
0x5a34	          0x4889c7	                            mov rdi, rax	      2855	channel.c	FUNCTION_70	ELSE_1	CALL_7
0x5a37	      0xe8affcffff	              call sym.channel_part_info	      2855	channel.c	FUNCTION_70	ELSE_1	CALL_7
0x5a3c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2856	channel.c	FUNCTION_70	ELSE_1	CALL_8
0x5a40	        0x488b45f8	                mov rax, qword [rbp - 8]	      2856	channel.c	FUNCTION_70	ELSE_1	CALL_8
0x5a44	      0xb902000000	                              mov ecx, 2	      2856	channel.c	FUNCTION_70	ELSE_1	CALL_8
0x5a49	      0xba00000000	                              mov edx, 0	      2856	channel.c	FUNCTION_70	ELSE_1	CALL_8
0x5a4e	          0x4889c7	                            mov rdi, rax	      2856	channel.c	FUNCTION_70	ELSE_1	CALL_8
0x5a51	      0xe895fcffff	              call sym.channel_part_info	      2856	channel.c	FUNCTION_70	ELSE_1	CALL_8
0x5a56	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2857	channel.c	FUNCTION_70	ELSE_1	CALL_9
0x5a5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2857	channel.c	FUNCTION_70	ELSE_1	CALL_9
0x5a5e	      0xb903000000	                              mov ecx, 3	      2857	channel.c	FUNCTION_70	ELSE_1	CALL_9
0x5a63	      0xba00000000	                              mov edx, 0	      2857	channel.c	FUNCTION_70	ELSE_1	CALL_9
0x5a68	          0x4889c7	                            mov rdi, rax	      2857	channel.c	FUNCTION_70	ELSE_1	CALL_9
0x5a6b	      0xe87bfcffff	              call sym.channel_part_info	      2857	channel.c	FUNCTION_70	ELSE_1	CALL_9
0x5a70	              0x90	                                     nop	      2859	channel.c	FUNCTION_70
0x5a71	              0xc9	                                   leave	      2859	channel.c	FUNCTION_70
0x5a72	              0xc3	                                     ret	      2859	channel.c	FUNCTION_70
part_from_char	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	14
0x8691	              0x55	                                push rbp	      4482	channel.c	FUNCTION_109
0x8692	          0x4889e5	                            mov rbp, rsp	      4482	channel.c	FUNCTION_109
0x8695	          0x897dfc	                mov dword [rbp - 4], edi	      4482	channel.c	FUNCTION_109
0x8698	        0x837dfc69	               cmp dword [rbp - 4], 0x69	      4483	channel.c	FUNCTION_109
0x869c	            0x7414	                            je 0x40086f2	      4483	channel.c	FUNCTION_109
0x869e	        0x837dfc6f	               cmp dword [rbp - 4], 0x6f	      4483	channel.c	FUNCTION_109
0x86a2	            0x7507	                           jne 0x40086eb	      4483	channel.c	FUNCTION_109
0x86a4	      0xb801000000	                              mov eax, 1	      4483	channel.c	FUNCTION_109
0x86a9	            0xeb0c	                           jmp 0x40086f7	      4483	channel.c	FUNCTION_109
0x86ab	      0xb802000000	                              mov eax, 2	      4483	channel.c	FUNCTION_109
0x86b0	            0xeb05	                           jmp 0x40086f7	      4483	channel.c	FUNCTION_109
0x86b2	      0xb803000000	                              mov eax, 3	      4483	channel.c	FUNCTION_109
0x86b7	              0x5d	                                 pop rbp	      4484	channel.c	FUNCTION_109
0x86b8	              0xc3	                                     ret	      4484	channel.c	FUNCTION_109
channel_gui_register	functions,0:SWITCH,0:CALL,3:ELSE,0:IF,3:FOR,0:WHILE,0:DO,0	49
0xaff	              0x55	                                push rbp	       577	channel.c	FUNCTION_26
0xb00	          0x4889e5	                            mov rbp, rsp	       577	channel.c	FUNCTION_26
0xb03	        0x4883ec10	                           sub rsp, 0x10	       577	channel.c	FUNCTION_26
0xb07	        0x48897df8	                mov qword [rbp - 8], rdi	       577	channel.c	FUNCTION_26
0xb0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	channel.c	FUNCTION_26	IF_1
0xb0f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       578	channel.c	FUNCTION_26	IF_1
0xb12	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       578	channel.c	FUNCTION_26	IF_1
0xb15	            0x7411	                            je 0x4000b68	       578	channel.c	FUNCTION_26	IF_1
0xb17	        0x488b45f8	                mov rax, qword [rbp - 8]	       579	channel.c	FUNCTION_26	CALL_1
0xb1b	      0xbe00000000	                              mov esi, 0	       579	channel.c	FUNCTION_26	CALL_1
0xb20	          0x4889c7	                            mov rdi, rax	       579	channel.c	FUNCTION_26	CALL_1
0xb23	      0xe8bcfeffff	       call sym.channel_gui_register_one	       579	channel.c	FUNCTION_26	CALL_1
0xb28	        0x488b45f8	                mov rax, qword [rbp - 8]	       580	channel.c	FUNCTION_26	IF_2
0xb2c	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       580	channel.c	FUNCTION_26	IF_2
0xb32	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       580	channel.c	FUNCTION_26	IF_2
0xb35	            0x7426	                            je 0x4000b9d	       580	channel.c	FUNCTION_26	IF_2
0xb37	        0x488b45f8	                mov rax, qword [rbp - 8]	       581	channel.c	FUNCTION_26	IF_2
0xb3b	    0x8b9028010000	           mov edx, dword [rax + 0x128] 	       581	channel.c	FUNCTION_26	IF_2
0xb41	        0x488b45f8	                mov rax, qword [rbp - 8]	       581	channel.c	FUNCTION_26	IF_2
0xb45	          0x8b4018	            mov eax, dword [rax + 0x18] 	       581	channel.c	FUNCTION_26	IF_2
0xb48	            0x39c2	                            cmp edx, eax	       581	channel.c	FUNCTION_26	IF_2
0xb4a	            0x7411	                            je 0x4000b9d	       581	channel.c	FUNCTION_26	IF_2
0xb4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       582	channel.c	FUNCTION_26	CALL_2
0xb50	      0xbe01000000	                              mov esi, 1	       582	channel.c	FUNCTION_26	CALL_2
0xb55	          0x4889c7	                            mov rdi, rax	       582	channel.c	FUNCTION_26	CALL_2
0xb58	      0xe887feffff	       call sym.channel_gui_register_one	       582	channel.c	FUNCTION_26	CALL_2
0xb5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       583	channel.c	FUNCTION_26	IF_3
0xb61	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       583	channel.c	FUNCTION_26	IF_3
0xb67	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       583	channel.c	FUNCTION_26	IF_3
0xb6a	            0x743e	                            je 0x4000bea	       583	channel.c	FUNCTION_26	IF_3
0xb6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       584	channel.c	FUNCTION_26	IF_3
0xb70	    0x8b9038020000	           mov edx, dword [rax + 0x238] 	       584	channel.c	FUNCTION_26	IF_3
0xb76	        0x488b45f8	                mov rax, qword [rbp - 8]	       584	channel.c	FUNCTION_26	IF_3
0xb7a	          0x8b4018	            mov eax, dword [rax + 0x18] 	       584	channel.c	FUNCTION_26	IF_3
0xb7d	            0x39c2	                            cmp edx, eax	       584	channel.c	FUNCTION_26	IF_3
0xb7f	            0x7429	                            je 0x4000bea	       584	channel.c	FUNCTION_26	IF_3
0xb81	        0x488b45f8	                mov rax, qword [rbp - 8]	       585	channel.c	FUNCTION_26	IF_3
0xb85	    0x8b9038020000	           mov edx, dword [rax + 0x238] 	       585	channel.c	FUNCTION_26	IF_3
0xb8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       585	channel.c	FUNCTION_26	IF_3
0xb8f	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       585	channel.c	FUNCTION_26	IF_3
0xb95	            0x39c2	                            cmp edx, eax	       585	channel.c	FUNCTION_26	IF_3
0xb97	            0x7411	                            je 0x4000bea	       585	channel.c	FUNCTION_26	IF_3
0xb99	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	channel.c	FUNCTION_26	CALL_3
0xb9d	      0xbe02000000	                              mov esi, 2	       586	channel.c	FUNCTION_26	CALL_3
0xba2	          0x4889c7	                            mov rdi, rax	       586	channel.c	FUNCTION_26	CALL_3
0xba5	      0xe83afeffff	       call sym.channel_gui_register_one	       586	channel.c	FUNCTION_26	CALL_3
0xbaa	              0x90	                                     nop	       587	channel.c	FUNCTION_26
0xbab	              0xc9	                                   leave	       587	channel.c	FUNCTION_26
0xbac	              0xc3	                                     ret	       587	channel.c	FUNCTION_26
ch_log_active	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	8
0xce	              0x55	                                push rbp	       136	channel.c	FUNCTION_5
0xcf	          0x4889e5	                            mov rbp, rsp	       136	channel.c	FUNCTION_5
0xd2	    0x488b05000000	            mov rax, qword [0x04000119] 	       137	channel.c	FUNCTION_5
0xd9	          0x4885c0	                           test rax, rax	       137	channel.c	FUNCTION_5
0xdc	           0xf95c0	                                setne al	       137	channel.c	FUNCTION_5
0xdf	           0xfb6c0	                           movzx eax, al	       137	channel.c	FUNCTION_5
0xe2	              0x5d	                                 pop rbp	       138	channel.c	FUNCTION_5
0xe3	              0xc3	                                     ret	       138	channel.c	FUNCTION_5
ch_expr_common	functions,0:SWITCH,0:CALL,12:ELSE,1:IF,6:FOR,0:WHILE,0:DO,0	139
0x76f0	              0x55	                                push rbp	      3922	channel.c	FUNCTION_92
0x76f1	          0x4889e5	                            mov rbp, rsp	      3922	channel.c	FUNCTION_92
0x76f4	    0x4881ece00300	                          sub rsp, 0x3e0	      3922	channel.c	FUNCTION_92
0x76fb	    0x4889bd38fcff	            mov qword [rbp - 0x3c8], rdi	      3922	channel.c	FUNCTION_92
0x7702	    0x4889b530fcff	            mov qword [rbp - 0x3d0], rsi	      3922	channel.c	FUNCTION_92
0x7709	    0x89952cfcffff	            mov dword [rbp - 0x3d4], edx	      3922	channel.c	FUNCTION_92
0x770f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3922	channel.c	FUNCTION_92
0x7718	        0x488945f8	                mov qword [rbp - 8], rax	      3922	channel.c	FUNCTION_92
0x771c	            0x31c0	                            xor eax, eax	      3922	channel.c	FUNCTION_92
0x771e	    0x488b8530fcff	            mov rax, qword [rbp - 0x3d0]	      3934	channel.c	FUNCTION_92
0x7725	    0xc70002000000	                      mov dword [rax], 2	      3934	channel.c	FUNCTION_92
0x772b	    0x488b8530fcff	            mov rax, qword [rbp - 0x3d0]	      3935	channel.c	FUNCTION_92
0x7732	    0x48c740080000	                  mov qword [rax + 8], 0	      3935	channel.c	FUNCTION_92
0x773a	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      3937	channel.c	FUNCTION_92	CALL_1
0x7741	      0xb900000000	                              mov ecx, 0	      3937	channel.c	FUNCTION_92	CALL_1
0x7746	      0xba00000000	                              mov edx, 0	      3937	channel.c	FUNCTION_92	CALL_1
0x774b	      0xbe01000000	                              mov esi, 1	      3937	channel.c	FUNCTION_92	CALL_1
0x7750	          0x4889c7	                            mov rdi, rax	      3937	channel.c	FUNCTION_92	CALL_1
0x7753	      0xe800000000	                          call 0x4007798	      3937	channel.c	FUNCTION_92	CALL_1
0x7758	    0x48898568fcff	            mov qword [rbp - 0x398], rax	      3937	channel.c	FUNCTION_92	CALL_1
0x775f	    0x4883bd68fcff	              cmp qword [rbp - 0x398], 0	      3938	channel.c	FUNCTION_92	IF_1
0x7767	     0xf8417020000	                            je 0x40079c4	      3938	channel.c	FUNCTION_92	IF_1
0x776d	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3940	channel.c	FUNCTION_92	CALL_2
0x7774	          0x4889c7	                            mov rdi, rax	      3940	channel.c	FUNCTION_92	CALL_2
0x7777	      0xe800000000	                          call 0x40077bc	      3940	channel.c	FUNCTION_92	CALL_2
0x777c	    0x898554fcffff	            mov dword [rbp - 0x3ac], eax	      3940	channel.c	FUNCTION_92	CALL_2
0x7782	    0x8b9554fcffff	            mov edx, dword [rbp - 0x3ac]	      3942	channel.c	FUNCTION_92	CALL_3
0x7788	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3942	channel.c	FUNCTION_92	CALL_3
0x778f	            0x89d6	                            mov esi, edx	      3942	channel.c	FUNCTION_92	CALL_3
0x7791	          0x4889c7	                            mov rdi, rax	      3942	channel.c	FUNCTION_92	CALL_3
0x7794	      0xe800000000	                          call 0x40077d9	      3942	channel.c	FUNCTION_92	CALL_3
0x7799	    0x898558fcffff	            mov dword [rbp - 0x3a8], eax	      3942	channel.c	FUNCTION_92	CALL_3
0x779f	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 1	      3943	channel.c	FUNCTION_92	IF_2
0x77a6	            0x7409	                            je 0x40077f1	      3943	channel.c	FUNCTION_92	IF_2
0x77a8	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 0	      3943	channel.c	FUNCTION_92	IF_2
0x77af	            0x7517	                           jne 0x4007808	      3943	channel.c	FUNCTION_92	IF_2
0x77b1	      0xbf00000000	                              mov edi, 0	      3945	channel.c	FUNCTION_92	IF_2	CALL_5
0x77b6	      0xe800000000	                          call 0x40077fb	      3945	channel.c	FUNCTION_92	IF_2	CALL_5
0x77bb	          0x4889c7	                            mov rdi, rax	      3945	channel.c	FUNCTION_92	IF_2	CALL_5
0x77be	      0xe800000000	                          call 0x4007803	      3945	channel.c	FUNCTION_92	IF_2	CALL_5
0x77c3	      0xe9c0010000	                           jmp 0x40079c8	      3946	channel.c	FUNCTION_92	IF_2
0x77c8	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3949	channel.c	FUNCTION_92
0x77cf	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3949	channel.c	FUNCTION_92
0x77d2	          0x8d5001	                      lea edx, [rax + 1]	      3949	channel.c	FUNCTION_92
0x77d5	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3949	channel.c	FUNCTION_92
0x77dc	          0x895014	             mov dword [rax + 0x14], edx	      3949	channel.c	FUNCTION_92
0x77df	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3949	channel.c	FUNCTION_92
0x77e6	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3949	channel.c	FUNCTION_92
0x77e9	    0x89855cfcffff	            mov dword [rbp - 0x3a4], eax	      3949	channel.c	FUNCTION_92
0x77ef	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 3	      3950	channel.c	FUNCTION_92	CALL_6
0x77f6	            0x7507	                           jne 0x400783f	      3950	channel.c	FUNCTION_92	CALL_6
0x77f8	      0xba05000000	                              mov edx, 5	      3950	channel.c	FUNCTION_92	CALL_6
0x77fd	            0xeb05	                           jmp 0x4007844	      3950	channel.c	FUNCTION_92	CALL_6
0x77ff	      0xba04000000	                              mov edx, 4	      3950	channel.c	FUNCTION_92	CALL_6
0x7804	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      3950	channel.c	FUNCTION_92	CALL_6
0x780b	        0x488d4810	                   lea rcx, [rax + 0x10]	      3950	channel.c	FUNCTION_92	CALL_6
0x780f	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      3950	channel.c	FUNCTION_92	CALL_6
0x7815	          0x4889ce	                            mov rsi, rcx	      3950	channel.c	FUNCTION_92	CALL_6
0x7818	            0x89c7	                            mov edi, eax	      3950	channel.c	FUNCTION_92	CALL_6
0x781a	      0xe800000000	                          call 0x400785f	      3950	channel.c	FUNCTION_92	CALL_6
0x781f	    0x48898570fcff	            mov qword [rbp - 0x390], rax	      3950	channel.c	FUNCTION_92	CALL_6
0x7826	    0x4883bd70fcff	              cmp qword [rbp - 0x390], 0	      3952	channel.c	FUNCTION_92	IF_3
0x782e	     0xf8453010000	                            je 0x40079c7	      3952	channel.c	FUNCTION_92	IF_3
0x7834	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3955	channel.c	FUNCTION_92	CALL_7
0x783b	            0x7408	                            je 0x4007885	      3955	channel.c	FUNCTION_92	CALL_7
0x783d	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_92	CALL_7
0x7843	            0xeb06	                           jmp 0x400788b	      3955	channel.c	FUNCTION_92	CALL_7
0x7845	    0x41b900000000	                              mov r9d, 0	      3955	channel.c	FUNCTION_92	CALL_7
0x784b	    0x4c8d8580fcff	                   lea r8, [rbp - 0x380]	      3955	channel.c	FUNCTION_92	CALL_7
0x7852	    0x8b8d2cfcffff	            mov ecx, dword [rbp - 0x3d4]	      3955	channel.c	FUNCTION_92	CALL_7
0x7858	    0x8b955cfcffff	            mov edx, dword [rbp - 0x3a4]	      3955	channel.c	FUNCTION_92	CALL_7
0x785e	    0x488bb570fcff	            mov rsi, qword [rbp - 0x390]	      3955	channel.c	FUNCTION_92	CALL_7
0x7865	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      3955	channel.c	FUNCTION_92	CALL_7
0x786c	        0x4883ec08	                              sub rsp, 8	      3955	channel.c	FUNCTION_92	CALL_7
0x7870	    0x488dbd4cfcff	                  lea rdi, [rbp - 0x3b4]	      3955	channel.c	FUNCTION_92	CALL_7
0x7877	              0x57	                                push rdi	      3955	channel.c	FUNCTION_92	CALL_7
0x7878	          0x4889c7	                            mov rdi, rax	      3955	channel.c	FUNCTION_92	CALL_7
0x787b	      0xe802fdffff	                    call sym.send_common	      3955	channel.c	FUNCTION_92	CALL_7
0x7880	        0x4883c410	                           add rsp, 0x10	      3955	channel.c	FUNCTION_92	CALL_7
0x7884	    0x48898568fcff	            mov qword [rbp - 0x398], rax	      3955	channel.c	FUNCTION_92	CALL_7
0x788b	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	      3957	channel.c	FUNCTION_92	CALL_8
0x7892	          0x4889c7	                            mov rdi, rax	      3957	channel.c	FUNCTION_92	CALL_8
0x7895	      0xe800000000	                          call 0x40078da	      3957	channel.c	FUNCTION_92	CALL_8
0x789a	    0x4883bd68fcff	              cmp qword [rbp - 0x398], 0	      3958	channel.c	FUNCTION_92	IF_4
0x78a2	     0xf84cb000000	                            je 0x40079b3	      3958	channel.c	FUNCTION_92	IF_4
0x78a8	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3958	channel.c	FUNCTION_92	IF_4
0x78af	     0xf84be000000	                            je 0x40079b3	      3958	channel.c	FUNCTION_92	IF_4
0x78b5	    0x8b8580fcffff	            mov eax, dword [rbp - 0x380]	      3960	channel.c	FUNCTION_92	IF_4	IF_5
0x78bb	      0x2500020000	                          and eax, 0x200	      3960	channel.c	FUNCTION_92	IF_4	IF_5
0x78c0	            0x85c0	                           test eax, eax	      3960	channel.c	FUNCTION_92	IF_4	IF_5
0x78c2	            0x740e	                            je 0x4007912	      3960	channel.c	FUNCTION_92	IF_4	IF_5
0x78c4	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	      3961	channel.c	FUNCTION_92	IF_4	IF_5
0x78ca	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      3961	channel.c	FUNCTION_92	IF_4	IF_5
0x78d0	            0xeb1d	                           jmp 0x400792f	      3961	channel.c	FUNCTION_92	IF_4	IF_5
0x78d2	    0x8b954cfcffff	            mov edx, dword [rbp - 0x3b4]	      3963	channel.c	FUNCTION_92	IF_4	CALL_9
0x78d8	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3963	channel.c	FUNCTION_92	IF_4	CALL_9
0x78df	            0x89d6	                            mov esi, edx	      3963	channel.c	FUNCTION_92	IF_4	CALL_9
0x78e1	          0x4889c7	                            mov rdi, rax	      3963	channel.c	FUNCTION_92	IF_4	CALL_9
0x78e4	      0xe800000000	                          call 0x4007929	      3963	channel.c	FUNCTION_92	IF_4	CALL_9
0x78e9	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      3963	channel.c	FUNCTION_92	IF_4	CALL_9
0x78ef	    0x8bb54cfcffff	            mov esi, dword [rbp - 0x3b4]	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x78f5	    0x488dbd60fcff	                  lea rdi, [rbp - 0x3a0]	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x78fc	    0x8b8d5cfcffff	            mov ecx, dword [rbp - 0x3a4]	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x7902	    0x8b9550fcffff	            mov edx, dword [rbp - 0x3b0]	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x7908	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x790f	          0x4989f8	                             mov r8, rdi	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x7912	          0x4889c7	                            mov rdi, rax	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x7915	      0xe8f7f0ffff	        call sym.channel_read_json_block	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x791a	          0x83f801	                              cmp eax, 1	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x791d	            0x7554	                           jne 0x40079b3	      3964	channel.c	FUNCTION_92	IF_4	IF_6	CALL_10
0x791f	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	      3967	channel.c	FUNCTION_92	IF_4	IF_6
0x7926	        0x488b4008	                mov rax, qword [rax + 8]	      3967	channel.c	FUNCTION_92	IF_4	IF_6
0x792a	    0x48898578fcff	            mov qword [rbp - 0x388], rax	      3967	channel.c	FUNCTION_92	IF_4	IF_6
0x7931	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3971	channel.c	FUNCTION_92	IF_4	IF_6
0x7938	        0x488b4008	                mov rax, qword [rax + 8]	      3971	channel.c	FUNCTION_92	IF_4	IF_6
0x793c	    0x488b8d30fcff	            mov rcx, qword [rbp - 0x3d0]	      3971	channel.c	FUNCTION_92	IF_4	IF_6
0x7943	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3971	channel.c	FUNCTION_92	IF_4	IF_6
0x7947	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3971	channel.c	FUNCTION_92	IF_4	IF_6
0x794b	          0x488901	                    mov qword [rcx], rax	      3971	channel.c	FUNCTION_92	IF_4	IF_6
0x794e	        0x48895108	                mov qword [rcx + 8], rdx	      3971	channel.c	FUNCTION_92	IF_4	IF_6
0x7952	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	      3972	channel.c	FUNCTION_92	IF_4	IF_6
0x7959	        0x488b4008	                mov rax, qword [rax + 8]	      3972	channel.c	FUNCTION_92	IF_4	IF_6
0x795d	    0xc74010010000	               mov dword [rax + 0x10], 1	      3972	channel.c	FUNCTION_92	IF_4	IF_6
0x7964	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	      3973	channel.c	FUNCTION_92	IF_4	IF_6	CALL_11
0x796b	          0x4889c7	                            mov rdi, rax	      3973	channel.c	FUNCTION_92	IF_4	IF_6	CALL_11
0x796e	      0xe800000000	                          call 0x40079b3	      3973	channel.c	FUNCTION_92	IF_4	IF_6	CALL_11
0x7973	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	      3976	channel.c	FUNCTION_92	CALL_12
0x797a	          0x4889c7	                            mov rdi, rax	      3976	channel.c	FUNCTION_92	CALL_12
0x797d	      0xe800000000	                          call 0x40079c2	      3976	channel.c	FUNCTION_92	CALL_12
0x7982	            0xeb04	                           jmp 0x40079c8	      3976	channel.c	FUNCTION_92	CALL_12
0x7984	              0x90	                                     nop	      3939	channel.c	FUNCTION_92	IF_1
0x7985	            0xeb01	                           jmp 0x40079c8	      3939	channel.c	FUNCTION_92	IF_1
0x7987	              0x90	                                     nop	      3953	channel.c	FUNCTION_92	IF_3
0x7988	        0x488b45f8	                mov rax, qword [rbp - 8]	      3977	channel.c	FUNCTION_92
0x798c	    0x644833042528	                xor rax, qword fs:[0x28]	      3977	channel.c	FUNCTION_92
0x7995	            0x7405	                            je 0x40079dc	      3977	channel.c	FUNCTION_92
0x7997	      0xe800000000	                          call 0x40079dc	      3977	channel.c	FUNCTION_92
0x799c	              0xc9	                                   leave	      3977	channel.c	FUNCTION_92
0x799d	              0xc3	                                     ret	      3977	channel.c	FUNCTION_92
set_callback	functions,0:SWITCH,0:CALL,4:ELSE,2:IF,3:FOR,0:WHILE,0:DO,0	55
0x1df1	              0x55	                                push rbp	      1141	channel.c	FUNCTION_36
0x1df2	          0x4889e5	                            mov rbp, rsp	      1141	channel.c	FUNCTION_36
0x1df5	        0x4883ec20	                           sub rsp, 0x20	      1141	channel.c	FUNCTION_36
0x1df9	        0x48897df8	                mov qword [rbp - 8], rdi	      1141	channel.c	FUNCTION_36
0x1dfd	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1141	channel.c	FUNCTION_36
0x1e01	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1141	channel.c	FUNCTION_36
0x1e05	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1141	channel.c	FUNCTION_36
0x1e09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1142	channel.c	FUNCTION_36	CALL_1
0x1e0d	          0x488b10	                    mov rdx, qword [rax]	      1142	channel.c	FUNCTION_36	CALL_1
0x1e10	        0x488b45f8	                mov rax, qword [rbp - 8]	      1142	channel.c	FUNCTION_36	CALL_1
0x1e14	          0x488b00	                    mov rax, qword [rax]	      1142	channel.c	FUNCTION_36	CALL_1
0x1e17	          0x4889d6	                            mov rsi, rdx	      1142	channel.c	FUNCTION_36	CALL_1
0x1e1a	          0x4889c7	                            mov rdi, rax	      1142	channel.c	FUNCTION_36	CALL_1
0x1e1d	      0xe800000000	                          call 0x4001e62	      1142	channel.c	FUNCTION_36	CALL_1
0x1e22	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1143	channel.c	FUNCTION_36	IF_1
0x1e27	            0x7451	                            je 0x4001eba	      1143	channel.c	FUNCTION_36	IF_1
0x1e29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1143	channel.c	FUNCTION_36	IF_1
0x1e2d	           0xfb600	                   movzx eax, byte [rax]	      1143	channel.c	FUNCTION_36	IF_1
0x1e30	            0x84c0	                             test al, al	      1143	channel.c	FUNCTION_36	IF_1
0x1e32	            0x7446	                            je 0x4001eba	      1143	channel.c	FUNCTION_36	IF_1
0x1e34	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1145	channel.c	FUNCTION_36	IF_1	IF_2
0x1e39	            0x7418	                            je 0x4001e93	      1145	channel.c	FUNCTION_36	IF_1	IF_2
0x1e3b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1146	channel.c	FUNCTION_36	IF_1	CALL_2
0x1e3f	          0x4889c7	                            mov rdi, rax	      1146	channel.c	FUNCTION_36	IF_1	CALL_2
0x1e42	      0xe800000000	                          call 0x4001e87	      1146	channel.c	FUNCTION_36	IF_1	CALL_2
0x1e47	          0x4889c2	                            mov rdx, rax	      1146	channel.c	FUNCTION_36	IF_1	CALL_2
0x1e4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1146	channel.c	FUNCTION_36	IF_1	CALL_2
0x1e4e	          0x488910	                    mov qword [rax], rdx	      1146	channel.c	FUNCTION_36	IF_1	CALL_2
0x1e51	            0xeb32	                           jmp 0x4001ec5	      1145	channel.c	FUNCTION_36	IF_1	IF_2
0x1e53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1149	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_3
0x1e57	          0x4889c7	                            mov rdi, rax	      1149	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_3
0x1e5a	      0xe800000000	                          call 0x4001e9f	      1149	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_3
0x1e5f	          0x4889c2	                            mov rdx, rax	      1149	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_3
0x1e62	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_3
0x1e66	          0x488910	                    mov qword [rax], rdx	      1149	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_3
0x1e69	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x1e6d	          0x488b00	                    mov rax, qword [rax]	      1150	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x1e70	          0x4889c7	                            mov rdi, rax	      1150	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x1e73	      0xe800000000	                          call 0x4001eb8	      1150	channel.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x1e78	            0xeb0b	                           jmp 0x4001ec5	      1145	channel.c	FUNCTION_36	IF_1	IF_2
0x1e7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	channel.c	FUNCTION_36	ELSE_2
0x1e7e	    0x48c700000000	                      mov qword [rax], 0	      1154	channel.c	FUNCTION_36	ELSE_2
0x1e85	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1155	channel.c	FUNCTION_36
0x1e89	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1155	channel.c	FUNCTION_36
0x1e8d	          0x488910	                    mov qword [rax], rdx	      1155	channel.c	FUNCTION_36
0x1e90	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1156	channel.c	FUNCTION_36	IF_3
0x1e95	            0x740f	                            je 0x4001ee6	      1156	channel.c	FUNCTION_36	IF_3
0x1e97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1157	channel.c	FUNCTION_36	IF_3
0x1e9b	            0x8b00	                    mov eax, dword [rax]	      1157	channel.c	FUNCTION_36	IF_3
0x1e9d	          0x8d5001	                      lea edx, [rax + 1]	      1157	channel.c	FUNCTION_36	IF_3
0x1ea0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1157	channel.c	FUNCTION_36	IF_3
0x1ea4	            0x8910	                    mov dword [rax], edx	      1157	channel.c	FUNCTION_36	IF_3
0x1ea6	              0x90	                                     nop	      1158	channel.c	FUNCTION_36
0x1ea7	              0xc9	                                   leave	      1158	channel.c	FUNCTION_36
0x1ea8	              0xc3	                                     ret	      1158	channel.c	FUNCTION_36
job_need_end_check	functions,0:SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:WHILE,0:DO,0	20
0xa5ce	              0x55	                                push rbp	      5102	channel.c	FUNCTION_116
0xa5cf	          0x4889e5	                            mov rbp, rsp	      5102	channel.c	FUNCTION_116
0xa5d2	        0x48897df8	                mov qword [rbp - 8], rdi	      5102	channel.c	FUNCTION_116
0xa5d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5103	channel.c	FUNCTION_116
0xa5da	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5103	channel.c	FUNCTION_116
0xa5dd	          0x83f801	                              cmp eax, 1	      5104	channel.c	FUNCTION_116
0xa5e0	            0x7521	                           jne 0x400a643	      5104	channel.c	FUNCTION_116
0xa5e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5104	channel.c	FUNCTION_116
0xa5e6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5104	channel.c	FUNCTION_116
0xa5ea	          0x4885c0	                           test rax, rax	      5104	channel.c	FUNCTION_116
0xa5ed	            0x750d	                           jne 0x400a63c	      5104	channel.c	FUNCTION_116
0xa5ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      5104	channel.c	FUNCTION_116
0xa5f3	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5104	channel.c	FUNCTION_116
0xa5f7	          0x4885c0	                           test rax, rax	      5104	channel.c	FUNCTION_116
0xa5fa	            0x7407	                            je 0x400a643	      5104	channel.c	FUNCTION_116
0xa5fc	      0xb801000000	                              mov eax, 1	      5104	channel.c	FUNCTION_116
0xa601	            0xeb05	                           jmp 0x400a648	      5104	channel.c	FUNCTION_116
0xa603	      0xb800000000	                              mov eax, 0	      5104	channel.c	FUNCTION_116
0xa608	              0x5d	                                 pop rbp	      5105	channel.c	FUNCTION_116
0xa609	              0xc3	                                     ret	      5105	channel.c	FUNCTION_116
channel_clear_one	functions,0:SWITCH,0:CALL,10:ELSE,0:IF,0:FOR,0:WHILE,4:DO,0	101
0x5e1d	              0x55	                                push rbp	      2977	channel.c	FUNCTION_74
0x5e1e	          0x4889e5	                            mov rbp, rsp	      2977	channel.c	FUNCTION_74
0x5e21	        0x4883ec30	                           sub rsp, 0x30	      2977	channel.c	FUNCTION_74
0x5e25	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2977	channel.c	FUNCTION_74
0x5e29	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2977	channel.c	FUNCTION_74
0x5e2c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2978	channel.c	FUNCTION_74
0x5e2f	        0x48c1e004	                              shl rax, 4	      2978	channel.c	FUNCTION_74
0x5e33	          0x4889c2	                            mov rdx, rax	      2978	channel.c	FUNCTION_74
0x5e36	        0x48c1e204	                              shl rdx, 4	      2978	channel.c	FUNCTION_74
0x5e3a	          0x4801d0	                            add rax, rdx	      2978	channel.c	FUNCTION_74
0x5e3d	        0x488d5010	                   lea rdx, [rax + 0x10]	      2978	channel.c	FUNCTION_74
0x5e41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2978	channel.c	FUNCTION_74
0x5e45	          0x4801d0	                            add rax, rdx	      2978	channel.c	FUNCTION_74
0x5e48	        0x4883c008	                              add rax, 8	      2978	channel.c	FUNCTION_74
0x5e4c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2978	channel.c	FUNCTION_74
0x5e50	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2979	channel.c	FUNCTION_74
0x5e54	        0x4883c038	                           add rax, 0x38	      2979	channel.c	FUNCTION_74
0x5e58	        0x488945e8	             mov qword [rbp - 0x18], rax	      2979	channel.c	FUNCTION_74
0x5e5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2980	channel.c	FUNCTION_74
0x5e60	    0x4805a8000000	                           add rax, 0xa8	      2980	channel.c	FUNCTION_74
0x5e66	        0x488945f0	             mov qword [rbp - 0x10], rax	      2980	channel.c	FUNCTION_74
0x5e6a	            0xeb19	                           jmp 0x4005ec5	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e6c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2983	channel.c	FUNCTION_74	CALL_3
0x5e6f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2983	channel.c	FUNCTION_74	CALL_3
0x5e73	            0x89d6	                            mov esi, edx	      2983	channel.c	FUNCTION_74	CALL_3
0x5e75	          0x4889c7	                            mov rdi, rax	      2983	channel.c	FUNCTION_74	CALL_3
0x5e78	      0xe800000000	                          call 0x4005ebd	      2983	channel.c	FUNCTION_74	CALL_3
0x5e7d	          0x4889c7	                            mov rdi, rax	      2983	channel.c	FUNCTION_74	CALL_3
0x5e80	      0xe800000000	                          call 0x4005ec5	      2983	channel.c	FUNCTION_74	CALL_3
0x5e85	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e8c	            0x89d6	                            mov esi, edx	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e8e	          0x4889c7	                            mov rdi, rax	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e91	      0xe800000000	                          call 0x4005ed6	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e96	          0x4885c0	                           test rax, rax	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e99	            0x75d1	                           jne 0x4005eac	      2982	channel.c	FUNCTION_74	WHILE_1	CALL_1
0x5e9b	            0xeb45	                           jmp 0x4005f22	      2985	channel.c	FUNCTION_74	WHILE_2
0x5e9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2987	channel.c	FUNCTION_74	WHILE_2
0x5ea1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2987	channel.c	FUNCTION_74	WHILE_2
0x5ea5	        0x488945f8	                mov qword [rbp - 8], rax	      2987	channel.c	FUNCTION_74	WHILE_2
0x5ea9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2989	channel.c	FUNCTION_74	WHILE_2	CALL_4
0x5ead	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2989	channel.c	FUNCTION_74	WHILE_2	CALL_4
0x5eb1	          0x4889d6	                            mov rsi, rdx	      2989	channel.c	FUNCTION_74	WHILE_2	CALL_4
0x5eb4	          0x4889c7	                            mov rdi, rax	      2989	channel.c	FUNCTION_74	WHILE_2	CALL_4
0x5eb7	      0xe8a1ddffff	                 call sym.remove_cb_node	      2989	channel.c	FUNCTION_74	WHILE_2	CALL_4
0x5ebc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2990	channel.c	FUNCTION_74	WHILE_2	CALL_5
0x5ec0	        0x488b5008	                mov rdx, qword [rax + 8]	      2990	channel.c	FUNCTION_74	WHILE_2	CALL_5
0x5ec4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2990	channel.c	FUNCTION_74	WHILE_2	CALL_5
0x5ec8	          0x488b00	                    mov rax, qword [rax]	      2990	channel.c	FUNCTION_74	WHILE_2	CALL_5
0x5ecb	          0x4889d6	                            mov rsi, rdx	      2990	channel.c	FUNCTION_74	WHILE_2	CALL_5
0x5ece	          0x4889c7	                            mov rdi, rax	      2990	channel.c	FUNCTION_74	WHILE_2	CALL_5
0x5ed1	      0xe800000000	                          call 0x4005f16	      2990	channel.c	FUNCTION_74	WHILE_2	CALL_5
0x5ed6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2991	channel.c	FUNCTION_74	WHILE_2	CALL_6
0x5eda	          0x4889c7	                            mov rdi, rax	      2991	channel.c	FUNCTION_74	WHILE_2	CALL_6
0x5edd	      0xe800000000	                          call 0x4005f22	      2991	channel.c	FUNCTION_74	WHILE_2	CALL_6
0x5ee2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2985	channel.c	FUNCTION_74	WHILE_2
0x5ee6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2985	channel.c	FUNCTION_74	WHILE_2
0x5eea	          0x4885c0	                           test rax, rax	      2985	channel.c	FUNCTION_74	WHILE_2
0x5eed	            0x75ae	                           jne 0x4005edd	      2985	channel.c	FUNCTION_74	WHILE_2
0x5eef	            0xeb2a	                           jmp 0x4005f5b	      2994	channel.c	FUNCTION_74	WHILE_3
0x5ef1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2996	channel.c	FUNCTION_74	WHILE_3	CALL_7
0x5ef5	        0x488b4008	                mov rax, qword [rax + 8]	      2996	channel.c	FUNCTION_74	WHILE_3	CALL_7
0x5ef9	          0x488b00	                    mov rax, qword [rax]	      2996	channel.c	FUNCTION_74	WHILE_3	CALL_7
0x5efc	          0x4889c7	                            mov rdi, rax	      2996	channel.c	FUNCTION_74	WHILE_3	CALL_7
0x5eff	      0xe800000000	                          call 0x4005f44	      2996	channel.c	FUNCTION_74	WHILE_3	CALL_7
0x5f04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2997	channel.c	FUNCTION_74	WHILE_3	CALL_8
0x5f08	        0x488b5008	                mov rdx, qword [rax + 8]	      2997	channel.c	FUNCTION_74	WHILE_3	CALL_8
0x5f0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2997	channel.c	FUNCTION_74	WHILE_3	CALL_8
0x5f10	          0x4889d6	                            mov rsi, rdx	      2997	channel.c	FUNCTION_74	WHILE_3	CALL_8
0x5f13	          0x4889c7	                            mov rdi, rax	      2997	channel.c	FUNCTION_74	WHILE_3	CALL_8
0x5f16	      0xe8b7ddffff	               call sym.remove_json_node	      2997	channel.c	FUNCTION_74	WHILE_3	CALL_8
0x5f1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2994	channel.c	FUNCTION_74	WHILE_3
0x5f1f	        0x488b4008	                mov rax, qword [rax + 8]	      2994	channel.c	FUNCTION_74	WHILE_3
0x5f23	          0x4885c0	                           test rax, rax	      2994	channel.c	FUNCTION_74	WHILE_3
0x5f26	            0x75c9	                           jne 0x4005f31	      2994	channel.c	FUNCTION_74	WHILE_3
0x5f28	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3000	channel.c	FUNCTION_74	CALL_9
0x5f2c	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	      3000	channel.c	FUNCTION_74	CALL_9
0x5f33	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3000	channel.c	FUNCTION_74	CALL_9
0x5f37	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3000	channel.c	FUNCTION_74	CALL_9
0x5f3e	          0x4889d6	                            mov rsi, rdx	      3000	channel.c	FUNCTION_74	CALL_9
0x5f41	          0x4889c7	                            mov rdi, rax	      3000	channel.c	FUNCTION_74	CALL_9
0x5f44	      0xe800000000	                          call 0x4005f89	      3000	channel.c	FUNCTION_74	CALL_9
0x5f49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3001	channel.c	FUNCTION_74
0x5f4d	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      3001	channel.c	FUNCTION_74
0x5f58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3002	channel.c	FUNCTION_74
0x5f5c	    0x48c780d80000	               mov qword [rax + 0xd8], 0	      3002	channel.c	FUNCTION_74
0x5f67	            0xeb1e	                           jmp 0x4005fc7	      3004	channel.c	FUNCTION_74	WHILE_4
0x5f69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3005	channel.c	FUNCTION_74	WHILE_4	CALL_10
0x5f6d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3005	channel.c	FUNCTION_74	WHILE_4	CALL_10
0x5f74	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3005	channel.c	FUNCTION_74	WHILE_4	CALL_10
0x5f78	        0x4883ea80	             sub rdx, 0xffffffffffffff80	      3005	channel.c	FUNCTION_74	WHILE_4	CALL_10
0x5f7c	          0x4889c6	                            mov rsi, rax	      3005	channel.c	FUNCTION_74	WHILE_4	CALL_10
0x5f7f	          0x4889d7	                            mov rdi, rdx	      3005	channel.c	FUNCTION_74	WHILE_4	CALL_10
0x5f82	      0xe830feffff	           call sym.remove_from_writeque	      3005	channel.c	FUNCTION_74	WHILE_4	CALL_10
0x5f87	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3004	channel.c	FUNCTION_74	WHILE_4
0x5f8b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3004	channel.c	FUNCTION_74	WHILE_4
0x5f92	          0x4885c0	                           test rax, rax	      3004	channel.c	FUNCTION_74	WHILE_4
0x5f95	            0x75d2	                           jne 0x4005fa9	      3004	channel.c	FUNCTION_74	WHILE_4
0x5f97	              0x90	                                     nop	      3007	channel.c	FUNCTION_74
0x5f98	              0xc9	                                   leave	      3007	channel.c	FUNCTION_74
0x5f99	              0xc3	                                     ret	      3007	channel.c	FUNCTION_74
free_unused_jobs_contents	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,1:FOR,1:WHILE,0:DO,0	32
0xad1f	              0x55	                                push rbp	      5360	channel.c	FUNCTION_126
0xad20	          0x4889e5	                            mov rbp, rsp	      5360	channel.c	FUNCTION_126
0xad23	        0x4883ec20	                           sub rsp, 0x20	      5360	channel.c	FUNCTION_126
0xad27	          0x897dec	             mov dword [rbp - 0x14], edi	      5360	channel.c	FUNCTION_126
0xad2a	          0x8975e8	             mov dword [rbp - 0x18], esi	      5360	channel.c	FUNCTION_126
0xad2d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5361	channel.c	FUNCTION_126
0xad34	    0x488b05000000	            mov rax, qword [0x0400ad7b] 	      5364	channel.c	FUNCTION_126	FOR_1
0xad3b	        0x488945f8	                mov qword [rbp - 8], rax	      5364	channel.c	FUNCTION_126	FOR_1
0xad3f	            0xeb3f	                           jmp 0x400adc0	      5364	channel.c	FUNCTION_126	FOR_1
0xad41	        0x488b45f8	                mov rax, qword [rbp - 8]	      5365	channel.c	FUNCTION_126	FOR_1	IF_1
0xad45	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      5365	channel.c	FUNCTION_126	FOR_1	IF_1
0xad48	          0x3345ec	             xor eax, dword [rbp - 0x14]	      5365	channel.c	FUNCTION_126	FOR_1	IF_1
0xad4b	          0x2345e8	             and eax, dword [rbp - 0x18]	      5365	channel.c	FUNCTION_126	FOR_1	IF_1
0xad4e	            0x85c0	                           test eax, eax	      5365	channel.c	FUNCTION_126	FOR_1	IF_1
0xad50	            0x7423	                            je 0x400adb5	      5365	channel.c	FUNCTION_126	FOR_1	IF_1
0xad52	        0x488b45f8	                mov rax, qword [rbp - 8]	      5366	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_1
0xad56	          0x4889c7	                            mov rdi, rax	      5366	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_1
0xad59	      0xe822f9ffff	               call sym.job_still_useful	      5366	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_1
0xad5e	            0x85c0	                           test eax, eax	      5366	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_1
0xad60	            0x7513	                           jne 0x400adb5	      5366	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_1
0xad62	        0x488b45f8	                mov rax, qword [rbp - 8]	      5370	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_2
0xad66	          0x4889c7	                            mov rdi, rax	      5370	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_2
0xad69	      0xe8aff6ffff	              call sym.job_free_contents	      5370	channel.c	FUNCTION_126	FOR_1	IF_1	CALL_2
0xad6e	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      5371	channel.c	FUNCTION_126	FOR_1	IF_1
0xad75	        0x488b45f8	                mov rax, qword [rbp - 8]	      5364	channel.c	FUNCTION_126	FOR_1
0xad79	          0x488b00	                    mov rax, qword [rax]	      5364	channel.c	FUNCTION_126	FOR_1
0xad7c	        0x488945f8	                mov qword [rbp - 8], rax	      5364	channel.c	FUNCTION_126	FOR_1
0xad80	      0x48837df800	                  cmp qword [rbp - 8], 0	      5364	channel.c	FUNCTION_126	FOR_1
0xad85	            0x75ba	                           jne 0x400ad81	      5364	channel.c	FUNCTION_126	FOR_1
0xad87	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5373	channel.c	FUNCTION_126
0xad8a	              0xc9	                                   leave	      5374	channel.c	FUNCTION_126
0xad8b	              0xc3	                                     ret	      5374	channel.c	FUNCTION_126
channel_write_new_lines	functions,0:SWITCH,0:CALL,5:ELSE,1:IF,7:FOR,2:WHILE,0:DO,0	96
0x2c00	              0x55	                                push rbp	      1542	channel.c	FUNCTION_45
0x2c01	          0x4889e5	                            mov rbp, rsp	      1542	channel.c	FUNCTION_45
0x2c04	        0x4883ec30	                           sub rsp, 0x30	      1542	channel.c	FUNCTION_45
0x2c08	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1542	channel.c	FUNCTION_45
0x2c0c	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1544	channel.c	FUNCTION_45
0x2c13	    0x488b05000000	            mov rax, qword [0x04002c5a] 	      1548	channel.c	FUNCTION_45	FOR_1
0x2c1a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1548	channel.c	FUNCTION_45	FOR_1
0x2c1e	      0xe935010000	                           jmp 0x4002d98	      1548	channel.c	FUNCTION_45	FOR_1
0x2c23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1550	channel.c	FUNCTION_45	FOR_1
0x2c27	    0x480548030000	                          add rax, 0x348	      1550	channel.c	FUNCTION_45	FOR_1
0x2c2d	        0x488945f8	                mov qword [rbp - 8], rax	      1550	channel.c	FUNCTION_45	FOR_1
0x2c31	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1552	channel.c	FUNCTION_45	FOR_1
0x2c38	        0x488b45f8	                mov rax, qword [rbp - 8]	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c3c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c43	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c47	     0xf8500010000	                           jne 0x4002d8d	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c51	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c57	            0x85c0	                           test eax, eax	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c59	     0xf84ee000000	                            je 0x4002d8d	      1554	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1556	channel.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x2c63	            0x8b00	                    mov eax, dword [rax]	      1556	channel.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x2c65	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1556	channel.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x2c68	     0xf84de000000	                            je 0x4002d8c	      1556	channel.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x2c6e	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      1558	channel.c	FUNCTION_45	FOR_1	IF_1
0x2c75	        0x488b45f8	                mov rax, qword [rbp - 8]	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2c79	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2c80	        0x488945f0	             mov qword [rbp - 0x10], rax	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2c84	            0xeb30	                           jmp 0x4002cf6	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2c86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1562	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x2c8a	          0x4889c7	                            mov rdi, rax	      1562	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x2c8d	      0xe833faffff	             call sym.can_write_buf_line	      1562	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x2c92	            0x85c0	                           test eax, eax	      1562	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x2c94	            0x742f	                            je 0x4002d05	      1562	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	IF_3	CALL_1
0x2c96	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1564	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	CALL_2
0x2c9a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1564	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	CALL_2
0x2c9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1564	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	CALL_2
0x2ca2	          0x4889ce	                            mov rsi, rcx	      1564	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	CALL_2
0x2ca5	          0x4889c7	                            mov rdi, rax	      1564	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	CALL_2
0x2ca8	      0xe8f6f8ffff	                 call sym.write_buf_line	      1564	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	CALL_2
0x2cad	        0x8345e401	               add dword [rbp - 0x1c], 1	      1565	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2cb1	      0x488345f001	               add qword [rbp - 0x10], 1	      1560	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2cb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2cba	          0x488b00	                    mov rax, qword [rax]	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2cbd	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2cc1	            0x7fc3	                            jg 0x4002cc6	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2cc3	            0xeb01	                           jmp 0x4002d06	      1559	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2
0x2cc5	              0x90	                                     nop	      1563	channel.c	FUNCTION_45	FOR_1	IF_1	FOR_2	IF_3
0x2cc6	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1568	channel.c	FUNCTION_45	FOR_1	IF_1	IF_4
0x2cca	            0x751f	                           jne 0x4002d2b	      1568	channel.c	FUNCTION_45	FOR_1	IF_1	IF_4
0x2ccc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2cd0	          0x8d50ff	                      lea edx, [rax - 1]	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2cd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2cd7	      0xbe00000000	                              mov esi, 0	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2cdc	          0x4889c7	                            mov rdi, rax	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2cdf	      0xb800000000	                              mov eax, 0	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2ce4	      0xe800000000	                          call 0x4002d29	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2ce9	            0xeb1f	                           jmp 0x4002d4a	      1569	channel.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x2ceb	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1570	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2cef	            0x7e19	                           jle 0x4002d4a	      1570	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2cf1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1571	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2cf4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1571	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2cf8	      0xbe00000000	                              mov esi, 0	      1571	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2cfd	          0x4889c7	                            mov rdi, rax	      1571	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2d00	      0xb800000000	                              mov eax, 0	      1571	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2d05	      0xe800000000	                          call 0x4002d4a	      1571	channel.c	FUNCTION_45	FOR_1	IF_1	ELSE_1	IF_5
0x2d0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1572	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d0e	          0x488b00	                    mov rax, qword [rax]	      1572	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d11	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1572	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d15	            0x7e24	                           jle 0x4002d7b	      1572	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1574	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d1b	          0x488b00	                    mov rax, qword [rax]	      1574	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d1e	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      1574	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d22	          0x4889c2	                            mov rdx, rax	      1574	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6
0x2d25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1573	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6	CALL_5
0x2d29	      0xbe00000000	                              mov esi, 0	      1573	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6	CALL_5
0x2d2e	          0x4889c7	                            mov rdi, rax	      1573	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6	CALL_5
0x2d31	      0xb800000000	                              mov eax, 0	      1573	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6	CALL_5
0x2d36	      0xe800000000	                          call 0x4002d7b	      1573	channel.c	FUNCTION_45	FOR_1	IF_1	IF_6	CALL_5
0x2d3b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1576	channel.c	FUNCTION_45	FOR_1	IF_1
0x2d3f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1576	channel.c	FUNCTION_45	FOR_1	IF_1
0x2d43	    0x488990080100	            mov qword [rax + 0x108], rdx	      1576	channel.c	FUNCTION_45	FOR_1	IF_1
0x2d4a	            0xeb01	                           jmp 0x4002d8d	      1576	channel.c	FUNCTION_45	FOR_1	IF_1
0x2d4c	              0x90	                                     nop	      1557	channel.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x2d4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1548	channel.c	FUNCTION_45	FOR_1
0x2d51	          0x488b00	                    mov rax, qword [rax]	      1548	channel.c	FUNCTION_45	FOR_1
0x2d54	        0x488945e8	             mov qword [rbp - 0x18], rax	      1548	channel.c	FUNCTION_45	FOR_1
0x2d58	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1548	channel.c	FUNCTION_45	FOR_1
0x2d5d	     0xf85c0feffff	                           jne 0x4002c63	      1548	channel.c	FUNCTION_45	FOR_1
0x2d63	        0x837de000	               cmp dword [rbp - 0x20], 0	      1579	channel.c	FUNCTION_45	IF_7
0x2d67	            0x750e	                           jne 0x4002db7	      1579	channel.c	FUNCTION_45	IF_7
0x2d69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1580	channel.c	FUNCTION_45	IF_7
0x2d6d	    0xc780341c0000	            mov dword [rax + 0x1c34], 0 	      1580	channel.c	FUNCTION_45	IF_7
0x2d77	              0x90	                                     nop	      1581	channel.c	FUNCTION_45
0x2d78	              0xc9	                                   leave	      1581	channel.c	FUNCTION_45
0x2d79	              0xc3	                                     ret	      1581	channel.c	FUNCTION_45
job_alloc	functions,0:SWITCH,0:CALL,2:ELSE,0:IF,2:FOR,0:WHILE,0:DO,0	29
0xadf1	              0x55	                                push rbp	      5399	channel.c	FUNCTION_128
0xadf2	          0x4889e5	                            mov rbp, rsp	      5399	channel.c	FUNCTION_128
0xadf5	        0x4883ec10	                           sub rsp, 0x10	      5399	channel.c	FUNCTION_128
0xadf9	      0xbf70000000	                           mov edi, 0x70	      5402	channel.c	FUNCTION_128	CALL_1
0xadfe	      0xe800000000	                          call 0x400ae43	      5402	channel.c	FUNCTION_128	CALL_1
0xae03	        0x488945f8	                mov qword [rbp - 8], rax	      5402	channel.c	FUNCTION_128	CALL_1
0xae07	      0x48837df800	                  cmp qword [rbp - 8], 0	      5403	channel.c	FUNCTION_128	IF_1
0xae0c	            0x7454	                            je 0x400aea2	      5403	channel.c	FUNCTION_128	IF_1
0xae0e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5405	channel.c	FUNCTION_128	IF_1
0xae12	    0xc74058010000	               mov dword [rax + 0x58], 1	      5405	channel.c	FUNCTION_128	IF_1
0xae19	      0xbf00000000	                              mov edi, 0	      5406	channel.c	FUNCTION_128	IF_1	CALL_2
0xae1e	      0xe800000000	                          call 0x400ae63	      5406	channel.c	FUNCTION_128	IF_1	CALL_2
0xae23	          0x4889c2	                            mov rdx, rax	      5406	channel.c	FUNCTION_128	IF_1	CALL_2
0xae26	        0x488b45f8	                mov rax, qword [rbp - 8]	      5406	channel.c	FUNCTION_128	IF_1	CALL_2
0xae2a	        0x48895030	             mov qword [rax + 0x30], rdx	      5406	channel.c	FUNCTION_128	IF_1	CALL_2
0xae2e	    0x488b05000000	            mov rax, qword [0x0400ae75] 	      5408	channel.c	FUNCTION_128	IF_1	IF_2
0xae35	          0x4885c0	                           test rax, rax	      5408	channel.c	FUNCTION_128	IF_1	IF_2
0xae38	            0x741d	                            je 0x400ae97	      5408	channel.c	FUNCTION_128	IF_1	IF_2
0xae3a	    0x488b05000000	            mov rax, qword [0x0400ae81] 	      5410	channel.c	FUNCTION_128	IF_1	IF_2
0xae41	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5410	channel.c	FUNCTION_128	IF_1	IF_2
0xae45	        0x48895008	                mov qword [rax + 8], rdx	      5410	channel.c	FUNCTION_128	IF_1	IF_2
0xae49	    0x488b15000000	            mov rdx, qword [0x0400ae90] 	      5411	channel.c	FUNCTION_128	IF_1	IF_2
0xae50	        0x488b45f8	                mov rax, qword [rbp - 8]	      5411	channel.c	FUNCTION_128	IF_1	IF_2
0xae54	          0x488910	                    mov qword [rax], rdx	      5411	channel.c	FUNCTION_128	IF_1	IF_2
0xae57	        0x488b45f8	                mov rax, qword [rbp - 8]	      5413	channel.c	FUNCTION_128	IF_1
0xae5b	    0x488905000000	            mov qword [0x0400aea2], rax 	      5413	channel.c	FUNCTION_128	IF_1
0xae62	        0x488b45f8	                mov rax, qword [rbp - 8]	      5415	channel.c	FUNCTION_128
0xae66	              0xc9	                                   leave	      5416	channel.c	FUNCTION_128
0xae67	              0xc3	                                     ret	      5416	channel.c	FUNCTION_128
job_check_ended	functions,0:SWITCH,0:CALL,3:ELSE,0:IF,3:FOR,1:WHILE,0:DO,0	32
0xb08b	              0x55	                                push rbp	      5493	channel.c	FUNCTION_132
0xb08c	          0x4889e5	                            mov rbp, rsp	      5493	channel.c	FUNCTION_132
0xb08f	        0x4883ec10	                           sub rsp, 0x10	      5493	channel.c	FUNCTION_132
0xb093	    0x488b05000000	            mov rax, qword [0x0400b0da] 	      5496	channel.c	FUNCTION_132	IF_1
0xb09a	          0x4885c0	                           test rax, rax	      5496	channel.c	FUNCTION_132	IF_1
0xb09d	            0x745c	                            je 0x400b13b	      5496	channel.c	FUNCTION_132	IF_1
0xb09f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5499	channel.c	FUNCTION_132	FOR_1
0xb0a6	            0xeb2a	                           jmp 0x400b112	      5499	channel.c	FUNCTION_132	FOR_1
0xb0a8	    0x488b05000000	            mov rax, qword [0x0400b0ef] 	      5503	channel.c	FUNCTION_132	FOR_1	CALL_1
0xb0af	          0x4889c7	                            mov rdi, rax	      5503	channel.c	FUNCTION_132	FOR_1	CALL_1
0xb0b2	      0xe800000000	                          call 0x400b0f7	      5503	channel.c	FUNCTION_132	FOR_1	CALL_1
0xb0b7	        0x488945f8	                mov qword [rbp - 8], rax	      5503	channel.c	FUNCTION_132	FOR_1	CALL_1
0xb0bb	      0x48837df800	                  cmp qword [rbp - 8], 0	      5505	channel.c	FUNCTION_132	FOR_1	IF_2
0xb0c0	            0x7418	                            je 0x400b11a	      5505	channel.c	FUNCTION_132	FOR_1	IF_2
0xb0c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5507	channel.c	FUNCTION_132	FOR_1	CALL_2
0xb0c6	          0x4889c7	                            mov rdi, rax	      5507	channel.c	FUNCTION_132	FOR_1	CALL_2
0xb0c9	      0xe800000000	                          call 0x400b10e	      5507	channel.c	FUNCTION_132	FOR_1	CALL_2
0xb0ce	        0x8345f401	                add dword [rbp - 0xc], 1	      5499	channel.c	FUNCTION_132	FOR_1
0xb0d2	        0x837df407	                cmp dword [rbp - 0xc], 7	      5499	channel.c	FUNCTION_132	FOR_1
0xb0d6	            0x7ed0	                           jle 0x400b0e8	      5499	channel.c	FUNCTION_132	FOR_1
0xb0d8	            0xeb01	                           jmp 0x400b11b	      5499	channel.c	FUNCTION_132	FOR_1
0xb0da	              0x90	                                     nop	      5506	channel.c	FUNCTION_132	FOR_1	IF_2
0xb0db	    0x8b0500000000	            mov eax, dword [0x0400b121] 	      5510	channel.c	FUNCTION_132	IF_3
0xb0e1	            0x85c0	                           test eax, eax	      5510	channel.c	FUNCTION_132	IF_3
0xb0e3	            0x7417	                            je 0x400b13c	      5510	channel.c	FUNCTION_132	IF_3
0xb0e5	    0xc70500000000	               mov dword [0x0400b12f], 0	      5512	channel.c	FUNCTION_132	IF_3
0xb0ef	      0xbf01000000	                              mov edi, 1	      5513	channel.c	FUNCTION_132	IF_3	CALL_3
0xb0f4	      0xe800000000	                          call 0x400b139	      5513	channel.c	FUNCTION_132	IF_3	CALL_3
0xb0f9	            0xeb01	                           jmp 0x400b13c	      5513	channel.c	FUNCTION_132	IF_3	CALL_3
0xb0fb	              0x90	                                     nop	      5497	channel.c	FUNCTION_132	IF_1
0xb0fc	              0xc9	                                   leave	      5515	channel.c	FUNCTION_132
0xb0fd	              0xc3	                                     ret	      5515	channel.c	FUNCTION_132
