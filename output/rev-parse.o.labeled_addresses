anti_reference	CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	15
0x6a1	              0x55	                                push rbp	       204	rev-parse.c	FUNCTION_8
0x6a2	          0x4889e5	                            mov rbp, rsp	       204	rev-parse.c	FUNCTION_8
0x6a5	        0x4883ec20	                           sub rsp, 0x20	       204	rev-parse.c	FUNCTION_8
0x6a9	        0x48897df8	                mov qword [rbp - 8], rdi	       204	rev-parse.c	FUNCTION_8
0x6ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       204	rev-parse.c	FUNCTION_8
0x6b1	          0x8955ec	             mov dword [rbp - 0x14], edx	       204	rev-parse.c	FUNCTION_8
0x6b4	        0x48894de0	             mov qword [rbp - 0x20], rcx	       204	rev-parse.c	FUNCTION_8
0x6b8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       205	rev-parse.c	FUNCTION_8	CALL_1
0x6bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       205	rev-parse.c	FUNCTION_8	CALL_1
0x6c0	          0x4889c6	                            mov rsi, rax	       205	rev-parse.c	FUNCTION_8	CALL_1
0x6c3	      0xbf01000000	                              mov edi, 1	       205	rev-parse.c	FUNCTION_8	CALL_1
0x6c8	      0xe81dfdffff	                       call sym.show_rev	       205	rev-parse.c	FUNCTION_8	CALL_1
0x6cd	      0xb800000000	                              mov eax, 0	       206	rev-parse.c	FUNCTION_8
0x6d2	              0xc9	                                   leave	       207	rev-parse.c	FUNCTION_8
0x6d3	              0xc3	                                     ret	       207	rev-parse.c	FUNCTION_8
parseopt_dump	CALL,6:WHILE,0:FOR,0:SWITCH,0:IF,5:ELSE,3:DO,0:functions,0	71
0xc43	              0x55	                                push rbp	       365	rev-parse.c	FUNCTION_14
0xc44	          0x4889e5	                            mov rbp, rsp	       365	rev-parse.c	FUNCTION_14
0xc47	        0x4883ec30	                           sub rsp, 0x30	       365	rev-parse.c	FUNCTION_14
0xc4b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       365	rev-parse.c	FUNCTION_14
0xc4f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       365	rev-parse.c	FUNCTION_14
0xc53	          0x8955dc	             mov dword [rbp - 0x24], edx	       365	rev-parse.c	FUNCTION_14
0xc56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       366	rev-parse.c	FUNCTION_14
0xc5a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       366	rev-parse.c	FUNCTION_14
0xc5e	        0x488945f8	                mov qword [rbp - 8], rax	       366	rev-parse.c	FUNCTION_14
0xc62	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       367	rev-parse.c	FUNCTION_14	IF_1
0xc66	            0x7420	                            je 0x4000cc8	       367	rev-parse.c	FUNCTION_14	IF_1
0xc68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc6c	        0x488b5008	                mov rdx, qword [rax + 8]	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc70	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc74	      0xbe00000000	                              mov esi, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc79	          0x4889c7	                            mov rdi, rax	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc7c	      0xb800000000	                              mov eax, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc81	      0xe800000000	                          call 0x4000cc6	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc86	            0xeb5f	                           jmp 0x4000d27	       368	rev-parse.c	FUNCTION_14	CALL_1
0xc88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xc8c	          0x8b4004	                mov eax, dword [rax + 4]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xc8f	            0x85c0	                           test eax, eax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xc91	            0x7436	                            je 0x4000d09	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xc93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xc97	        0x488b4008	                mov rax, qword [rax + 8]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xc9b	          0x4885c0	                           test rax, rax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xc9e	            0x740a	                            je 0x4000cea	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xca0	    0x8b0500000000	            mov eax, dword [0x04000ce6] 	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xca6	            0x85c0	                           test eax, eax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xca8	            0x751f	                           jne 0x4000d09	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcaa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcae	          0x8b5004	                mov edx, dword [rax + 4]	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcb1	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcb5	      0xbe00000000	                              mov esi, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcba	          0x4889c7	                            mov rdi, rax	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcbd	      0xb800000000	                              mov eax, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcc2	      0xe800000000	                          call 0x4000d07	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcc7	            0xeb1e	                           jmp 0x4000d27	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0xcc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	rev-parse.c	FUNCTION_14	CALL_3
0xccd	        0x488b5008	                mov rdx, qword [rax + 8]	       372	rev-parse.c	FUNCTION_14	CALL_3
0xcd1	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	rev-parse.c	FUNCTION_14	CALL_3
0xcd5	      0xbe00000000	                              mov esi, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0xcda	          0x4889c7	                            mov rdi, rax	       372	rev-parse.c	FUNCTION_14	CALL_3
0xcdd	      0xb800000000	                              mov eax, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0xce2	      0xe800000000	                          call 0x4000d27	       372	rev-parse.c	FUNCTION_14	CALL_3
0xce7	      0x48837de000	               cmp qword [rbp - 0x20], 0	       373	rev-parse.c	FUNCTION_14	IF_3
0xcec	            0x744e	                            je 0x4000d7c	       373	rev-parse.c	FUNCTION_14	IF_3
0xcee	    0x8b0500000000	            mov eax, dword [0x04000d34] 	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0xcf4	            0x85c0	                           test eax, eax	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0xcf6	            0x7513	                           jne 0x4000d4b	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0xcf8	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0xcfc	      0xbe20000000	                           mov esi, 0x20	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0xd01	          0x4889c7	                            mov rdi, rax	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0xd04	      0xe87af4ffff	                   call sym.strbuf_addch	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0xd09	            0xeb1e	                           jmp 0x4000d69	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0xd0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd0f	        0x488b4008	                mov rax, qword [rax + 8]	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd13	          0x4885c0	                           test rax, rax	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd16	            0x7411	                            je 0x4000d69	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd18	        0x488b45f8	                mov rax, qword [rbp - 8]	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd1c	      0xbe3d000000	                           mov esi, 0x3d	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd21	          0x4889c7	                            mov rdi, rax	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd24	      0xe85af4ffff	                   call sym.strbuf_addch	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0xd29	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0xd2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0xd31	          0x4889d6	                            mov rsi, rdx	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0xd34	          0x4889c7	                            mov rdi, rax	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0xd37	      0xe800000000	                          call 0x4000d7c	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0xd3c	      0xb800000000	                              mov eax, 0	       380	rev-parse.c	FUNCTION_14
0xd41	              0xc9	                                   leave	       381	rev-parse.c	FUNCTION_14
0xd42	              0xc3	                                     ret	       381	rev-parse.c	FUNCTION_14
cmd_parseopt	CALL,37:WHILE,2:FOR,1:SWITCH,1:IF,10:ELSE,2:DO,0:functions,0	473
0xdb9	              0x55	                                push rbp	       399	rev-parse.c	FUNCTION_17
0xdba	          0x4889e5	                            mov rbp, rsp	       399	rev-parse.c	FUNCTION_17
0xdbd	              0x53	                                push rbx	       399	rev-parse.c	FUNCTION_17
0xdbe	    0x4881eca80000	                           sub rsp, 0xa8	       399	rev-parse.c	FUNCTION_17
0xdc5	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	       399	rev-parse.c	FUNCTION_17
0xdcb	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       399	rev-parse.c	FUNCTION_17
0xdd2	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       399	rev-parse.c	FUNCTION_17
0xdd9	    0x64488b042528	                mov rax, qword fs:[0x28]	       399	rev-parse.c	FUNCTION_17
0xde2	        0x488945e8	             mov qword [rbp - 0x18], rax	       399	rev-parse.c	FUNCTION_17
0xde6	            0x31c0	                            xor eax, eax	       399	rev-parse.c	FUNCTION_17
0xde8	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       417	rev-parse.c	FUNCTION_17
0xdf0	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       417	rev-parse.c	FUNCTION_17
0xdf8	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       417	rev-parse.c	FUNCTION_17
0xe00	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       417	rev-parse.c	FUNCTION_17
0xe08	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       417	rev-parse.c	FUNCTION_17
0xe10	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       417	rev-parse.c	FUNCTION_17
0xe18	    0x48c745880000	               mov qword [rbp - 0x78], 0	       418	rev-parse.c	FUNCTION_17
0xe20	    0x48c745900000	               mov qword [rbp - 0x70], 0	       419	rev-parse.c	FUNCTION_17
0xe28	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       420	rev-parse.c	FUNCTION_17
0xe32	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	       420	rev-parse.c	FUNCTION_17
0xe3c	    0xc74580000000	               mov dword [rbp - 0x80], 0	       420	rev-parse.c	FUNCTION_17
0xe43	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       420	rev-parse.c	FUNCTION_17
0xe4a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       422	rev-parse.c	FUNCTION_17	CALL_9
0xe4e	      0xbe00000000	                              mov esi, 0	       422	rev-parse.c	FUNCTION_17	CALL_9
0xe53	          0x4889c7	                            mov rdi, rax	       422	rev-parse.c	FUNCTION_17	CALL_9
0xe56	      0xe896f3ffff	                  call sym.strbuf_addstr	       422	rev-parse.c	FUNCTION_17	CALL_9
0xe5b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe62	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe69	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe6f	    0x41b901000000	                              mov r9d, 1	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe75	    0x41b800000000	                              mov r8d, 0	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe7b	      0xb900000000	                              mov ecx, 0	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe80	            0x89c7	                            mov edi, eax	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe82	      0xe800000000	                          call 0x4000ec7	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe87	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       423	rev-parse.c	FUNCTION_17	CALL_10
0xe8d	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xe94	            0x7e1b	                           jle 0x4000ef1	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xe96	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xe9d	          0x488b00	                    mov rax, qword [rax]	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xea0	      0xbe00000000	                              mov esi, 0	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xea5	          0x4889c7	                            mov rdi, rax	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xea8	      0xe800000000	                          call 0x4000eed	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xead	            0x85c0	                           test eax, eax	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xeaf	            0x740f	                            je 0x4000f00	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_11
0xeb1	      0xbe00000000	                              mov esi, 0	       426	rev-parse.c	FUNCTION_17	CALL_12
0xeb6	      0xbf00000000	                              mov edi, 0	       426	rev-parse.c	FUNCTION_17	CALL_12
0xebb	      0xe800000000	                          call 0x4000f00	       426	rev-parse.c	FUNCTION_17	CALL_12
0xec0	    0x488b15000000	            mov rdx, qword [0x04000f07] 	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_13
0xec7	        0x488d45b0	                   lea rax, [rbp - 0x50]	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_13
0xecb	          0x4889d6	                            mov rsi, rdx	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_13
0xece	          0x4889c7	                            mov rdi, rax	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_13
0xed1	      0xe800000000	                          call 0x4000f16	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_13
0xed6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_13
0xed9	            0x750f	                           jne 0x4000f2a	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_13
0xedb	      0xbf00000000	                              mov edi, 0	       431	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0xee0	      0xb800000000	                              mov eax, 0	       431	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0xee5	      0xe800000000	                          call 0x4000f2a	       431	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0xeea	          0x8b4580	             mov eax, dword [rbp - 0x80]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xeed	          0x83c001	                              add eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xef0	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xef3	            0x7e6c	                           jle 0x4000fa1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xef5	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xef8	          0x8d5010	                   lea edx, [rax + 0x10]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xefb	            0x89d0	                            mov eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xefd	             0x1c0	                            add eax, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xeff	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf01	            0x89c2	                            mov edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf03	          0xc1ea1f	                           shr edx, 0x1f	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf06	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf08	            0xd1f8	                              sar eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf0a	            0x89c2	                            mov edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf0c	          0x8b4580	             mov eax, dword [rbp - 0x80]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf0f	          0x83c001	                              add eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf12	            0x39c2	                            cmp edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf14	            0x7d0b	                           jge 0x4000f61	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf16	          0x8b4580	             mov eax, dword [rbp - 0x80]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf19	          0x83c001	                              add eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf1c	          0x894584	             mov dword [rbp - 0x7c], eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf1f	            0xeb18	                           jmp 0x4000f79	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf21	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf24	          0x8d5010	                   lea edx, [rax + 0x10]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf27	            0x89d0	                            mov eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf29	             0x1c0	                            add eax, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf2b	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf2d	            0x89c2	                            mov edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf2f	          0xc1ea1f	                           shr edx, 0x1f	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf32	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf34	            0xd1f8	                              sar eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf36	          0x894584	             mov dword [rbp - 0x7c], eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf39	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf3c	            0x4898	                                    cdqe	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf3e	          0x4889c6	                            mov rsi, rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf41	      0xbf08000000	                              mov edi, 8	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf46	      0xe816f1ffff	                        call sym.st_mult	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf4b	          0x4889c2	                            mov rdx, rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf4e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf52	          0x4889d6	                            mov rsi, rdx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf55	          0x4889c7	                            mov rdi, rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf58	      0xe800000000	                          call 0x4000f9d	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf5d	        0x48894588	             mov qword [rbp - 0x78], rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_15
0xf61	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_16
0xf65	          0x4889c6	                            mov rsi, rax	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_16
0xf68	      0xbf00000000	                              mov edi, 0	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_16
0xf6d	      0xe800000000	                          call 0x4000fb2	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_16
0xf72	            0x85c0	                           test eax, eax	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_16
0xf74	            0x7536	                           jne 0x4000fec	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_16
0xf76	        0x837d8000	               cmp dword [rbp - 0x80], 0	       434	rev-parse.c	FUNCTION_17	FOR_1	IF_3	IF_4
0xf7a	            0x7f0f	                            jg 0x4000fcb	       434	rev-parse.c	FUNCTION_17	FOR_1	IF_3	IF_4
0xf7c	      0xbf00000000	                              mov edi, 0	       435	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_17
0xf81	      0xb800000000	                              mov eax, 0	       435	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_17
0xf86	      0xe800000000	                          call 0x4000fcb	       435	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_17
0xf8b	          0x8b4580	             mov eax, dword [rbp - 0x80]	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0xf8e	            0x4898	                                    cdqe	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0xf90	    0x488d14c50000	                        lea rdx, [rax*8]	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0xf98	        0x488b4588	             mov rax, qword [rbp - 0x78]	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0xf9c	          0x4801d0	                            add rax, rdx	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0xf9f	    0x48c700000000	                      mov qword [rax], 0	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0xfa6	              0x90	                                     nop	       437	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0xfa7	      0xe97b030000	                           jmp 0x4001367	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0xfac	          0x8b4580	             mov eax, dword [rbp - 0x80]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfaf	          0x8d5001	                      lea edx, [rax + 1]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfb2	          0x895580	             mov dword [rbp - 0x80], edx	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfb5	            0x4898	                                    cdqe	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfb7	    0x488d14c50000	                        lea rdx, [rax*8]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfbf	        0x488b4588	             mov rax, qword [rbp - 0x78]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfc3	        0x488d1c02	                    lea rbx, [rdx + rax]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfc7	        0x488d45b0	                   lea rax, [rbp - 0x50]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfcb	      0xbe00000000	                              mov esi, 0	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfd0	          0x4889c7	                            mov rdi, rax	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfd3	      0xe800000000	                          call 0x4001018	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfd8	          0x488903	                    mov qword [rbx], rax	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_18
0xfdb	      0xe9e0feffff	                           jmp 0x4000f00	       440	rev-parse.c	FUNCTION_17	FOR_1
0xfe0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       448	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0xfe4	          0x4885c0	                           test rax, rax	       448	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0xfe7	            0x7505	                           jne 0x400102e	       448	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0xfe9	      0xe939030000	                           jmp 0x4001367	       449	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0xfee	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0xff4	          0x83c001	                              add eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0xff7	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0xffd	     0xf8e81000000	                           jle 0x40010c4	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1003	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1009	          0x8d5010	                   lea edx, [rax + 0x10]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x100c	            0x89d0	                            mov eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x100e	             0x1c0	                            add eax, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1010	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1012	            0x89c2	                            mov edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1014	          0xc1ea1f	                           shr edx, 0x1f	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1017	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1019	            0xd1f8	                              sar eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x101b	            0x89c2	                            mov edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x101d	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1023	          0x83c001	                              add eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1026	            0x39c2	                            cmp edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1028	            0x7d11	                           jge 0x400107b	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x102a	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1030	          0x83c001	                              add eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1033	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1039	            0xeb1e	                           jmp 0x4001099	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x103b	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1041	          0x8d5010	                   lea edx, [rax + 0x10]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1044	            0x89d0	                            mov eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1046	             0x1c0	                            add eax, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1048	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x104a	            0x89c2	                            mov edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x104c	          0xc1ea1f	                           shr edx, 0x1f	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x104f	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1051	            0xd1f8	                              sar eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1053	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1059	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x105f	            0x4898	                                    cdqe	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1061	          0x4889c6	                            mov rsi, rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1064	      0xbf40000000	                           mov edi, 0x40	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1069	      0xe8f3efffff	                        call sym.st_mult	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x106e	          0x4889c2	                            mov rdx, rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1071	        0x488b4590	             mov rax, qword [rbp - 0x70]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1075	          0x4889d6	                            mov rsi, rdx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1078	          0x4889c7	                            mov rdi, rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x107b	      0xe800000000	                          call 0x40010c0	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1080	        0x48894590	             mov qword [rbp - 0x70], rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_20
0x1084	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x108a	            0x4898	                                    cdqe	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x108c	        0x48c1e006	                              shl rax, 6	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x1090	          0x4889c2	                            mov rdx, rax	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x1093	        0x488b4590	             mov rax, qword [rbp - 0x70]	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x1097	          0x4801d0	                            add rax, rdx	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x109a	      0xba40000000	                           mov edx, 0x40	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x109f	      0xbe00000000	                              mov esi, 0	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x10a4	          0x4889c7	                            mov rdi, rax	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x10a7	      0xe800000000	                          call 0x40010ec	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_21
0x10ac	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10b2	          0x8d5001	                      lea edx, [rax + 1]	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10b5	    0x899578ffffff	             mov dword [rbp - 0x88], edx	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10bb	            0x4898	                                    cdqe	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10bd	        0x48c1e006	                              shl rax, 6	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10c1	          0x4889c2	                            mov rdx, rax	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10c4	        0x488b4590	             mov rax, qword [rbp - 0x70]	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10c8	          0x4801d0	                            add rax, rdx	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10cb	        0x488945a0	             mov qword [rbp - 0x60], rax	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x10cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x10d3	          0x4889c7	                            mov rdi, rax	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x10d6	      0xe89afcffff	                      call sym.findspace	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x10db	        0x488945a8	             mov qword [rbp - 0x58], rax	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x10df	      0x48837da800	               cmp qword [rbp - 0x58], 0	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x10e4	            0x740a	                            je 0x4001130	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x10e6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x10ea	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x10ee	            0x752e	                           jne 0x400115e	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x10f0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       457	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x10f4	    0xc70002000000	                      mov dword [rax], 2	       457	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x10fa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x10fe	          0x4889c7	                            mov rdi, rax	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x1101	      0xe83dfcffff	                     call sym.skipspaces	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x1106	          0x4889c7	                            mov rdi, rax	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x1109	      0xe800000000	                          call 0x400114e	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x110e	          0x4889c2	                            mov rdx, rax	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x1111	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x1115	        0x48895020	             mov qword [rax + 0x20], rdx	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_24
0x1119	      0xe909020000	                           jmp 0x4001367	       459	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x111e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       462	rev-parse.c	FUNCTION_17	WHILE_1
0x1122	          0xc60000	                       mov byte [rax], 0	       462	rev-parse.c	FUNCTION_17	WHILE_1
0x1125	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       464	rev-parse.c	FUNCTION_17	WHILE_1
0x1129	    0xc7000c000000	                    mov dword [rax], 0xc	       464	rev-parse.c	FUNCTION_17	WHILE_1
0x112f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x1133	        0x4883c001	                              add rax, 1	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x1137	          0x4889c7	                            mov rdi, rax	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x113a	      0xe804fcffff	                     call sym.skipspaces	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x113f	          0x4889c7	                            mov rdi, rax	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x1142	      0xe800000000	                          call 0x4001187	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x1147	          0x4889c2	                            mov rdx, rax	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x114a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x114e	        0x48895020	             mov qword [rax + 0x20], rdx	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x1152	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       466	rev-parse.c	FUNCTION_17	WHILE_1
0x1156	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       466	rev-parse.c	FUNCTION_17	WHILE_1
0x115a	        0x48895010	             mov qword [rax + 0x10], rdx	       466	rev-parse.c	FUNCTION_17	WHILE_1
0x115e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       467	rev-parse.c	FUNCTION_17	WHILE_1
0x1162	    0xc74028020000	               mov dword [rax + 0x28], 2	       467	rev-parse.c	FUNCTION_17	WHILE_1
0x1169	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       468	rev-parse.c	FUNCTION_17	WHILE_1
0x116d	    0x48c740300000	               mov qword [rax + 0x30], 0	       468	rev-parse.c	FUNCTION_17	WHILE_1
0x1175	    0x488b15000000	            mov rdx, qword [0x040011bc] 	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_27
0x117c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_27
0x1180	          0x4889d6	                            mov rsi, rdx	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_27
0x1183	          0x4889c7	                            mov rdi, rax	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_27
0x1186	      0xe800000000	                          call 0x40011cb	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_27
0x118b	        0x48894598	             mov qword [rbp - 0x68], rax	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_27
0x118f	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       472	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x1194	            0x7508	                           jne 0x40011de	       472	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x1196	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       473	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x119a	        0x48894598	             mov qword [rbp - 0x68], rax	       473	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x119e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11a2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11a6	          0x4829d0	                            sub rax, rdx	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11a9	        0x4883f801	                              cmp rax, 1	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11ad	            0x7516	                           jne 0x4001205	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11af	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11b3	           0xfb600	                   movzx eax, byte [rax]	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11b6	           0xfbed0	                           movsx edx, al	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11b9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11bd	          0x895004	                mov dword [rax + 4], edx	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11c0	      0xe91f010000	                           jmp 0x4001324	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x11c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11c9	        0x4883c001	                              add rax, 1	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11cd	           0xfb600	                   movzx eax, byte [rax]	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11d0	            0x3c2c	                            cmp al, 0x2c	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11d2	            0x742d	                            je 0x4001241	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11d4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11d8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11dc	          0x4829d0	                            sub rax, rdx	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11df	          0x4889c2	                            mov rdx, rax	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11e6	          0x4889d6	                            mov rsi, rdx	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11e9	          0x4889c7	                            mov rdi, rax	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11ec	      0xe800000000	                          call 0x4001231	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11f1	          0x4889c2	                            mov rdx, rax	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11f4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11f8	        0x48895008	                mov qword [rax + 8], rdx	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x11fc	      0xe9e3000000	                           jmp 0x4001324	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x1201	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x1205	           0xfb600	                   movzx eax, byte [rax]	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x1208	           0xfbed0	                           movsx edx, al	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x120b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x120f	          0x895004	                mov dword [rax + 4], edx	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x1212	        0x488b4598	             mov rax, qword [rbp - 0x68]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x1216	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x121a	          0x4829d0	                            sub rax, rdx	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x121d	        0x4883e802	                              sub rax, 2	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x1221	          0x4889c2	                            mov rdx, rax	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x1224	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x1228	        0x4883c002	                              add rax, 2	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x122c	          0x4889d6	                            mov rsi, rdx	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x122f	          0x4889c7	                            mov rdi, rax	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x1232	      0xe800000000	                          call 0x4001277	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x1237	          0x4889c2	                            mov rdx, rax	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x123a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x123e	        0x48895008	                mov qword [rax + 8], rdx	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_29
0x1242	      0xe99d000000	                           jmp 0x4001324	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x1247	        0x488b4598	             mov rax, qword [rbp - 0x68]	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x124b	        0x488d5001	                      lea rdx, [rax + 1]	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x124f	        0x48895598	             mov qword [rbp - 0x68], rdx	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1253	           0xfb600	                   movzx eax, byte [rax]	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1256	           0xfbec0	                           movsx eax, al	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1259	          0x83f82a	                           cmp eax, 0x2a	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x125c	            0x746a	                            je 0x4001308	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x125e	          0x83f82a	                           cmp eax, 0x2a	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1261	            0x7f07	                            jg 0x40012aa	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1263	          0x83f821	                           cmp eax, 0x21	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1266	            0x744b	                            je 0x40012f3	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1268	            0xeb73	                           jmp 0x400131d	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x126a	          0x83f83d	                           cmp eax, 0x3d	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x126d	            0x7407	                            je 0x40012b6	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x126f	          0x83f83f	                           cmp eax, 0x3f	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1272	            0x7417	                            je 0x40012cb	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1274	            0xeb67	                           jmp 0x400131d	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1276	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x127a	          0x8b4028	            mov eax, dword [rax + 0x28] 	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x127d	          0x83e0fd	                     and eax, 0xfffffffd	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1280	            0x89c2	                            mov edx, eax	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1282	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1286	          0x895028	             mov dword [rax + 0x28], edx	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1289	            0xeb59	                           jmp 0x4001324	       489	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x128b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x128f	          0x8b4028	            mov eax, dword [rax + 0x28] 	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1292	          0x83e0fd	                     and eax, 0xfffffffd	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1295	            0x89c2	                            mov edx, eax	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x1297	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x129b	          0x895028	             mov dword [rax + 0x28], edx	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x129e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12a2	          0x8b4028	            mov eax, dword [rax + 0x28] 	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12a5	          0x83c801	                               or eax, 1	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12a8	            0x89c2	                            mov edx, eax	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12aa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12ae	          0x895028	             mov dword [rax + 0x28], edx	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12b1	            0xeb31	                           jmp 0x4001324	       493	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12b3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12b7	          0x8b4028	            mov eax, dword [rax + 0x28] 	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12ba	          0x83c804	                               or eax, 4	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12bd	            0x89c2	                            mov edx, eax	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12bf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12c3	          0x895028	             mov dword [rax + 0x28], edx	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12c6	            0xeb1c	                           jmp 0x4001324	       496	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12c8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12cc	          0x8b4028	            mov eax, dword [rax + 0x28] 	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12cf	          0x83c808	                               or eax, 8	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12d2	            0x89c2	                            mov edx, eax	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12d4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12d8	          0x895028	             mov dword [rax + 0x28], edx	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12db	            0xeb07	                           jmp 0x4001324	       499	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x12dd	      0x48836d9801	               sub qword [rbp - 0x68], 1	       501	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x12e2	            0xeb0e	                           jmp 0x4001332	       502	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x12e4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x12e8	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x12ec	     0xf8255ffffff	                            jb 0x4001287	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x12f2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       505	rev-parse.c	FUNCTION_17	WHILE_1	IF_10
0x12f6	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       505	rev-parse.c	FUNCTION_17	WHILE_1	IF_10
0x12fa	            0x732b	                           jae 0x4001367	       505	rev-parse.c	FUNCTION_17	WHILE_1	IF_10
0x12fc	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1300	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1304	          0x4829c2	                            sub rdx, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1307	          0x4889d0	                            mov rax, rdx	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x130a	          0x4889c2	                            mov rdx, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x130d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1311	          0x4889d6	                            mov rsi, rdx	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1314	          0x4889c7	                            mov rdi, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1317	      0xe800000000	                          call 0x400135c	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x131c	          0x4889c2	                            mov rdx, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x131f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1323	        0x48895018	             mov qword [rax + 0x18], rdx	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_30
0x1327	    0x488b15000000	            mov rdx, qword [0x0400136e] 	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0x132e	        0x488d45b0	                   lea rax, [rbp - 0x50]	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0x1332	          0x4889d6	                            mov rsi, rdx	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0x1335	          0x4889c7	                            mov rdi, rax	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0x1338	      0xe800000000	                          call 0x400137d	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0x133d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0x1340	     0xf859afcffff	                           jne 0x4001020	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_19
0x1346	        0x488d45b0	                   lea rax, [rbp - 0x50]	       508	rev-parse.c	FUNCTION_17	CALL_31
0x134a	          0x4889c7	                            mov rdi, rax	       508	rev-parse.c	FUNCTION_17	CALL_31
0x134d	      0xe800000000	                          call 0x4001392	       508	rev-parse.c	FUNCTION_17	CALL_31
0x1352	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1358	          0x83c001	                              add eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_32
0x135b	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1361	     0xf8e81000000	                           jle 0x4001428	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1367	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x136d	          0x8d5010	                   lea edx, [rax + 0x10]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1370	            0x89d0	                            mov eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1372	             0x1c0	                            add eax, eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1374	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1376	            0x89c2	                            mov edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1378	          0xc1ea1f	                           shr edx, 0x1f	       511	rev-parse.c	FUNCTION_17	CALL_32
0x137b	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_32
0x137d	            0xd1f8	                              sar eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_32
0x137f	            0x89c2	                            mov edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1381	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1387	          0x83c001	                              add eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_32
0x138a	            0x39c2	                            cmp edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x138c	            0x7d11	                           jge 0x40013df	       511	rev-parse.c	FUNCTION_17	CALL_32
0x138e	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1394	          0x83c001	                              add eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_32
0x1397	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x139d	            0xeb1e	                           jmp 0x40013fd	       511	rev-parse.c	FUNCTION_17	CALL_32
0x139f	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13a5	          0x8d5010	                   lea edx, [rax + 0x10]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13a8	            0x89d0	                            mov eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13aa	             0x1c0	                            add eax, eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13ac	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13ae	            0x89c2	                            mov edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13b0	          0xc1ea1f	                           shr edx, 0x1f	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13b3	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13b5	            0xd1f8	                              sar eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13b7	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13bd	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13c3	            0x4898	                                    cdqe	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13c5	          0x4889c6	                            mov rsi, rax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13c8	      0xbf40000000	                           mov edi, 0x40	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13cd	      0xe88fecffff	                        call sym.st_mult	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13d2	          0x4889c2	                            mov rdx, rax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13d5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13d9	          0x4889d6	                            mov rsi, rdx	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13dc	          0x4889c7	                            mov rdi, rax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13df	      0xe800000000	                          call 0x4001424	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13e4	        0x48894590	             mov qword [rbp - 0x70], rax	       511	rev-parse.c	FUNCTION_17	CALL_32
0x13e8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       512	rev-parse.c	FUNCTION_17	CALL_33
0x13ee	            0x4898	                                    cdqe	       512	rev-parse.c	FUNCTION_17	CALL_33
0x13f0	        0x48c1e006	                              shl rax, 6	       512	rev-parse.c	FUNCTION_17	CALL_33
0x13f4	          0x4889c2	                            mov rdx, rax	       512	rev-parse.c	FUNCTION_17	CALL_33
0x13f7	        0x488b4590	             mov rax, qword [rbp - 0x70]	       512	rev-parse.c	FUNCTION_17	CALL_33
0x13fb	          0x4801d0	                            add rax, rdx	       512	rev-parse.c	FUNCTION_17	CALL_33
0x13fe	      0xba40000000	                           mov edx, 0x40	       512	rev-parse.c	FUNCTION_17	CALL_33
0x1403	      0xbe00000000	                              mov esi, 0	       512	rev-parse.c	FUNCTION_17	CALL_33
0x1408	          0x4889c7	                            mov rdi, rax	       512	rev-parse.c	FUNCTION_17	CALL_33
0x140b	      0xe800000000	                          call 0x4001450	       512	rev-parse.c	FUNCTION_17	CALL_33
0x1410	    0x8b0500000000	            mov eax, dword [0x04001456] 	       514	rev-parse.c	FUNCTION_17
0x1416	            0x85c0	                           test eax, eax	       514	rev-parse.c	FUNCTION_17
0x1418	           0xf95c0	                                setne al	       514	rev-parse.c	FUNCTION_17
0x141b	           0xfb6d0	                           movzx edx, al	       514	rev-parse.c	FUNCTION_17
0x141e	    0x8b0500000000	            mov eax, dword [0x04001464] 	       515	rev-parse.c	FUNCTION_17
0x1424	            0x85c0	                           test eax, eax	       515	rev-parse.c	FUNCTION_17
0x1426	            0x7407	                            je 0x400146f	       515	rev-parse.c	FUNCTION_17
0x1428	      0xb802000000	                              mov eax, 2	       515	rev-parse.c	FUNCTION_17
0x142d	            0xeb05	                           jmp 0x4001474	       515	rev-parse.c	FUNCTION_17
0x142f	      0xb800000000	                              mov eax, 0	       515	rev-parse.c	FUNCTION_17
0x1434	             0x9d0	                             or eax, edx	       514	rev-parse.c	FUNCTION_17
0x1436	          0x80cc01	                                or ah, 1	       513	rev-parse.c	FUNCTION_17	CALL_34
0x1439	          0x4189c0	                            mov r8d, eax	       513	rev-parse.c	FUNCTION_17	CALL_34
0x143c	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	       513	rev-parse.c	FUNCTION_17	CALL_34
0x1440	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       513	rev-parse.c	FUNCTION_17	CALL_34
0x1444	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       513	rev-parse.c	FUNCTION_17	CALL_34
0x144b	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       513	rev-parse.c	FUNCTION_17	CALL_34
0x1452	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       513	rev-parse.c	FUNCTION_17	CALL_34
0x1458	          0x4589c1	                            mov r9d, r8d	       513	rev-parse.c	FUNCTION_17	CALL_34
0x145b	          0x4989f8	                             mov r8, rdi	       513	rev-parse.c	FUNCTION_17	CALL_34
0x145e	            0x89c7	                            mov edi, eax	       513	rev-parse.c	FUNCTION_17	CALL_34
0x1460	      0xe800000000	                          call 0x40014a5	       513	rev-parse.c	FUNCTION_17	CALL_34
0x1465	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       513	rev-parse.c	FUNCTION_17	CALL_34
0x146b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       518	rev-parse.c	FUNCTION_17	CALL_35
0x146f	      0xbe00000000	                              mov esi, 0	       518	rev-parse.c	FUNCTION_17	CALL_35
0x1474	          0x4889c7	                            mov rdi, rax	       518	rev-parse.c	FUNCTION_17	CALL_35
0x1477	      0xe875edffff	                  call sym.strbuf_addstr	       518	rev-parse.c	FUNCTION_17	CALL_35
0x147c	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       519	rev-parse.c	FUNCTION_17	CALL_36
0x1483	        0x488d45d0	                   lea rax, [rbp - 0x30]	       519	rev-parse.c	FUNCTION_17	CALL_36
0x1487	          0x4889d6	                            mov rsi, rdx	       519	rev-parse.c	FUNCTION_17	CALL_36
0x148a	          0x4889c7	                            mov rdi, rax	       519	rev-parse.c	FUNCTION_17	CALL_36
0x148d	      0xe800000000	                          call 0x40014d2	       519	rev-parse.c	FUNCTION_17	CALL_36
0x1492	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       520	rev-parse.c	FUNCTION_17	CALL_37
0x1496	          0x4889c7	                            mov rdi, rax	       520	rev-parse.c	FUNCTION_17	CALL_37
0x1499	      0xe800000000	                          call 0x40014de	       520	rev-parse.c	FUNCTION_17	CALL_37
0x149e	      0xb800000000	                              mov eax, 0	       521	rev-parse.c	FUNCTION_17
0x14a3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       522	rev-parse.c	FUNCTION_17
0x14a7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       522	rev-parse.c	FUNCTION_17
0x14b0	            0x7405	                            je 0x40014f7	       522	rev-parse.c	FUNCTION_17
0x14b2	      0xe800000000	                          call 0x40014f7	       522	rev-parse.c	FUNCTION_17
0x14b7	    0x4881c4a80000	                           add rsp, 0xa8	       522	rev-parse.c	FUNCTION_17
0x14be	              0x5b	                                 pop rbx	       522	rev-parse.c	FUNCTION_17
0x14bf	              0x5d	                                 pop rbp	       522	rev-parse.c	FUNCTION_17
0x14c0	              0xc3	                                     ret	       522	rev-parse.c	FUNCTION_17
strbuf_addch	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	33
0x183	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_26
0x184	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_26
0x187	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_26
0x18b	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_26
0x18f	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_26
0x192	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x196	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x199	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x19e	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x1a1	            0x7511	                           jne 0x40001f4	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x1a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x1a7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x1ac	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_26	CALL_2
0x1af	      0xe800000000	                          call 0x40001f4	       228	strbuf.h	FUNCTION_26	CALL_2
0x1b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_26
0x1b8	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_26
0x1bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_26
0x1c0	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_26
0x1c4	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_26
0x1c8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_26
0x1cc	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x1d0	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_26
0x1d3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_26
0x1d6	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_26
0x1d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_26
0x1dc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_26
0x1e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_26
0x1e4	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_26
0x1e8	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_26
0x1eb	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_26
0x1ee	              0x90	                                     nop	       231	strbuf.h	FUNCTION_26
0x1ef	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_26
0x1f0	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_26
skip_prefix	CALL,0:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,1:functions,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_40
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_40
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_40
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_40
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_40
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_40	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_40	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_40	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_40	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_40
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_40
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_40
is_rev_argument	CALL,4:WHILE,0:FOR,1:SWITCH,0:IF,3:ELSE,0:DO,0:functions,0	61
0x252	              0x55	                                push rbp	        47	rev-parse.c	FUNCTION_1
0x253	          0x4889e5	                            mov rbp, rsp	        47	rev-parse.c	FUNCTION_1
0x256	        0x4883ec30	                           sub rsp, 0x30	        47	rev-parse.c	FUNCTION_1
0x25a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        47	rev-parse.c	FUNCTION_1
0x25e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        79	rev-parse.c	FUNCTION_1
0x266	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x26a	           0xfb600	                   movzx eax, byte [rax]	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x26d	            0x3c2d	                            cmp al, 0x2d	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x26f	            0x752b	                           jne 0x40002dc	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x271	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x275	        0x4883c001	                              add rax, 1	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x279	           0xfb600	                   movzx eax, byte [rax]	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x27c	           0xfb6c0	                           movzx eax, al	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x27f	            0x4898	                                    cdqe	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x281	     0xfb680000000	                   movzx eax, byte [rax]	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x288	           0xfb6c0	                           movzx eax, al	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x28b	          0x83e002	                              and eax, 2	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x28e	            0x85c0	                           test eax, eax	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x290	            0x740a	                            je 0x40002dc	        82	rev-parse.c	FUNCTION_1	IF_1	CALL_1
0x292	      0xb801000000	                              mov eax, 1	        83	rev-parse.c	FUNCTION_1	IF_1
0x297	      0xe980000000	                           jmp 0x400035c	        83	rev-parse.c	FUNCTION_1	IF_1
0x29c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        86	rev-parse.c	FUNCTION_1	FOR_1
0x2a0	        0x488d5008	                      lea rdx, [rax + 8]	        86	rev-parse.c	FUNCTION_1	FOR_1
0x2a4	        0x488955f0	             mov qword [rbp - 0x10], rdx	        86	rev-parse.c	FUNCTION_1	FOR_1
0x2a8	          0x488b00	                    mov rax, qword [rax]	        86	rev-parse.c	FUNCTION_1	FOR_1
0x2ab	        0x488945f8	                mov qword [rbp - 8], rax	        86	rev-parse.c	FUNCTION_1	FOR_1
0x2af	      0x48837df800	                  cmp qword [rbp - 8], 0	        88	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x2b4	            0x7507	                           jne 0x40002fd	        88	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x2b6	      0xb800000000	                              mov eax, 0	        89	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x2bb	            0xeb5f	                           jmp 0x400035c	        89	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x2bd	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_2
0x2c1	          0x4889c7	                            mov rdi, rax	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_2
0x2c4	      0xe800000000	                          call 0x4000309	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_2
0x2c9	          0x8945ec	             mov dword [rbp - 0x14], eax	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_2
0x2cc	        0x488b55f8	                mov rdx, qword [rbp - 8]	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2d4	          0x4889d6	                            mov rsi, rdx	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2d7	          0x4889c7	                            mov rdi, rax	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2da	      0xe800000000	                          call 0x400031f	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2df	            0x85c0	                           test eax, eax	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2e1	            0x7434	                            je 0x4000357	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2e3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x2e6	            0x4898	                                    cdqe	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x2e8	        0x488d50ff	                      lea rdx, [rax - 1]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x2ec	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x2f0	          0x4801d0	                            add rax, rdx	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x2f3	           0xfb600	                   movzx eax, byte [rax]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x2f6	            0x3c3d	                            cmp al, 0x3d	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2f8	            0x75a2	                           jne 0x40002dc	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x2fa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x2fd	          0x4863d0	                         movsxd rdx, eax	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x300	        0x488b4df8	                mov rcx, qword [rbp - 8]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x304	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x308	          0x4889ce	                            mov rsi, rcx	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x30b	          0x4889c7	                            mov rdi, rax	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x30e	      0xe800000000	                          call 0x4000353	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x313	            0x85c0	                           test eax, eax	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x315	            0x7585	                           jne 0x40002dc	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_4
0x317	      0xb801000000	                              mov eax, 1	        93	rev-parse.c	FUNCTION_1	FOR_1	IF_3
0x31c	              0xc9	                                   leave	        95	rev-parse.c	FUNCTION_1
0x31d	              0xc3	                                     ret	        95	rev-parse.c	FUNCTION_1
skipspaces	CALL,1:WHILE,1:FOR,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	17
0xd43	              0x55	                                push rbp	       384	rev-parse.c	FUNCTION_15
0xd44	          0x4889e5	                            mov rbp, rsp	       384	rev-parse.c	FUNCTION_15
0xd47	        0x48897df8	                mov qword [rbp - 8], rdi	       384	rev-parse.c	FUNCTION_15
0xd4b	            0xeb05	                           jmp 0x4000d92	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd4d	      0x488345f801	                  add qword [rbp - 8], 1	       386	rev-parse.c	FUNCTION_15	WHILE_1
0xd52	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd56	           0xfb600	                   movzx eax, byte [rax]	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd59	           0xfb6c0	                           movzx eax, al	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd5c	            0x4898	                                    cdqe	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd5e	     0xfb680000000	                   movzx eax, byte [rax]	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd65	           0xfb6c0	                           movzx eax, al	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd68	          0x83e001	                              and eax, 1	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd6b	            0x85c0	                           test eax, eax	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd6d	            0x75de	                           jne 0x4000d8d	       385	rev-parse.c	FUNCTION_15	WHILE_1	CALL_1
0xd6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       387	rev-parse.c	FUNCTION_15
0xd73	              0x5d	                                 pop rbp	       388	rev-parse.c	FUNCTION_15
0xd74	              0xc3	                                     ret	       388	rev-parse.c	FUNCTION_15
show_rev	CALL,11:WHILE,0:FOR,0:SWITCH,1:IF,5:ELSE,3:DO,0:functions,0	105
0x3ea	              0x55	                                push rbp	       126	rev-parse.c	FUNCTION_4
0x3eb	          0x4889e5	                            mov rbp, rsp	       126	rev-parse.c	FUNCTION_4
0x3ee	        0x4883ec50	                           sub rsp, 0x50	       126	rev-parse.c	FUNCTION_4
0x3f2	          0x897dcc	             mov dword [rbp - 0x34], edi	       126	rev-parse.c	FUNCTION_4
0x3f5	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	rev-parse.c	FUNCTION_4
0x3f9	        0x488955b8	             mov qword [rbp - 0x48], rdx	       126	rev-parse.c	FUNCTION_4
0x3fd	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	rev-parse.c	FUNCTION_4
0x406	        0x488945f8	                mov qword [rbp - 8], rax	       126	rev-parse.c	FUNCTION_4
0x40a	            0x31c0	                            xor eax, eax	       126	rev-parse.c	FUNCTION_4
0x40c	    0x8b0500000000	            mov eax, dword [0x04000452] 	       127	rev-parse.c	FUNCTION_4	IF_1
0x412	          0x83e001	                              and eax, 1	       127	rev-parse.c	FUNCTION_4	IF_1
0x415	            0x85c0	                           test eax, eax	       127	rev-parse.c	FUNCTION_4	IF_1
0x417	     0xf8435010000	                            je 0x4000592	       127	rev-parse.c	FUNCTION_4	IF_1
0x41d	    0x48c705000000	               mov qword [0x04000468], 0	       129	rev-parse.c	FUNCTION_4
0x428	    0x8b0500000000	            mov eax, dword [0x0400046e] 	       131	rev-parse.c	FUNCTION_4	IF_2
0x42e	            0x85c0	                           test eax, eax	       131	rev-parse.c	FUNCTION_4	IF_2
0x430	            0x750e	                           jne 0x4000480	       131	rev-parse.c	FUNCTION_4	IF_2
0x432	    0x8b0500000000	            mov eax, dword [0x04000478] 	       131	rev-parse.c	FUNCTION_4	IF_2
0x438	            0x85c0	                           test eax, eax	       131	rev-parse.c	FUNCTION_4	IF_2
0x43a	     0xf84c4000000	                            je 0x4000544	       131	rev-parse.c	FUNCTION_4	IF_2
0x440	      0x48837db800	               cmp qword [rbp - 0x48], 0	       131	rev-parse.c	FUNCTION_4	IF_2
0x445	     0xf84b9000000	                            je 0x4000544	       131	rev-parse.c	FUNCTION_4	IF_2
0x44b	    0x8b0500000000	            mov eax, dword [0x04000491] 	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x451	          0x83f802	                              cmp eax, 2	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x454	            0x740e	                            je 0x40004a4	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x456	    0x8b0500000000	            mov eax, dword [0x0400049c] 	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x45c	            0x85c0	                           test eax, eax	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x45e	     0xf848d000000	                            je 0x4000531	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x464	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x468	          0x4889c7	                            mov rdi, rax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x46b	      0xe800000000	                          call 0x40004b0	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x470	            0x89c6	                            mov esi, eax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x472	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x476	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x47a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x47e	          0x4889c7	                            mov rdi, rax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x481	      0xe800000000	                          call 0x40004c6	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x486	            0x85c0	                           test eax, eax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x488	            0x7457	                            je 0x4000521	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x48a	          0x83f801	                              cmp eax, 1	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x48d	            0x7535	                           jne 0x4000504	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x48f	    0x8b0500000000	            mov eax, dword [0x040004d5] 	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x495	            0x85c0	                           test eax, eax	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x497	            0x7418	                            je 0x40004f1	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x499	    0x8b1500000000	            mov edx, dword [0x040004df] 	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x49f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x4a3	            0x89d6	                            mov esi, edx	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x4a5	          0x4889c7	                            mov rdi, rax	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x4a8	      0xe800000000	                          call 0x40004ed	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x4ad	        0x488945d8	             mov qword [rbp - 0x28], rax	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x4b1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x4b5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x4b8	          0x4889d6	                            mov rsi, rdx	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x4bb	            0x89c7	                            mov edi, eax	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x4bd	      0xe8f5feffff	                 call sym.show_with_type	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x4c2	            0xeb1e	                           jmp 0x4000522	       151	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4c4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_5
0x4c8	          0x4889c6	                            mov rsi, rax	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_5
0x4cb	      0xbf00000000	                              mov edi, 0	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_5
0x4d0	      0xb800000000	                              mov eax, 0	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_5
0x4d5	      0xe800000000	                          call 0x400051a	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_5
0x4da	      0xe821fbffff	                    call sym.const_error	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_5
0x4df	            0xeb01	                           jmp 0x4000522	       154	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4e1	              0x90	                                     nop	       145	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_6
0x4e6	          0x4889c7	                            mov rdi, rax	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_6
0x4e9	      0xe800000000	                          call 0x400052e	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_6
0x4ee	              0x90	                                     nop	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4ef	            0xeb62	                           jmp 0x4000593	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4f1	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_7
0x4f5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_7
0x4f8	          0x4889d6	                            mov rsi, rdx	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_7
0x4fb	            0x89c7	                            mov edi, eax	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_7
0x4fd	      0xe8b5feffff	                 call sym.show_with_type	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_7
0x502	            0xeb4f	                           jmp 0x4000593	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x504	    0x8b0500000000	            mov eax, dword [0x0400054a] 	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x50a	            0x85c0	                           test eax, eax	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x50c	            0x7426	                            je 0x4000574	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x50e	    0x8b1500000000	            mov edx, dword [0x04000554] 	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x514	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x518	            0x89d6	                            mov esi, edx	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x51a	          0x4889c7	                            mov rdi, rax	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x51d	      0xe800000000	                          call 0x4000562	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x522	          0x4889c2	                            mov rdx, rax	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x525	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x528	          0x4889d6	                            mov rsi, rdx	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x52b	            0x89c7	                            mov edi, eax	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x52d	      0xe885feffff	                 call sym.show_with_type	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x532	            0xeb1f	                           jmp 0x4000593	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x534	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	rev-parse.c	FUNCTION_4	CALL_11
0x538	          0x4889c7	                            mov rdi, rax	       164	rev-parse.c	FUNCTION_4	CALL_11
0x53b	      0xe800000000	                          call 0x4000580	       164	rev-parse.c	FUNCTION_4	CALL_11
0x540	          0x4889c2	                            mov rdx, rax	       164	rev-parse.c	FUNCTION_4	CALL_11
0x543	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       164	rev-parse.c	FUNCTION_4	CALL_11
0x546	          0x4889d6	                            mov rsi, rdx	       164	rev-parse.c	FUNCTION_4	CALL_11
0x549	            0x89c7	                            mov edi, eax	       164	rev-parse.c	FUNCTION_4	CALL_11
0x54b	      0xe867feffff	                 call sym.show_with_type	       164	rev-parse.c	FUNCTION_4	CALL_11
0x550	            0xeb01	                           jmp 0x4000593	       164	rev-parse.c	FUNCTION_4	CALL_11
0x552	              0x90	                                     nop	       128	rev-parse.c	FUNCTION_4	IF_1
0x553	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	rev-parse.c	FUNCTION_4
0x557	    0x644833042528	                xor rax, qword fs:[0x28]	       165	rev-parse.c	FUNCTION_4
0x560	            0x7405	                            je 0x40005a7	       165	rev-parse.c	FUNCTION_4
0x562	      0xe800000000	                          call 0x40005a7	       165	rev-parse.c	FUNCTION_4
0x567	              0xc9	                                   leave	       165	rev-parse.c	FUNCTION_4
0x568	              0xc3	                                     ret	       165	rev-parse.c	FUNCTION_4
show_flag	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,2:ELSE,0:DO,0:functions,0	30
0x569	              0x55	                                push rbp	       169	rev-parse.c	FUNCTION_5
0x56a	          0x4889e5	                            mov rbp, rsp	       169	rev-parse.c	FUNCTION_5
0x56d	        0x4883ec10	                           sub rsp, 0x10	       169	rev-parse.c	FUNCTION_5
0x571	        0x48897df8	                mov qword [rbp - 8], rdi	       169	rev-parse.c	FUNCTION_5
0x575	    0x8b0500000000	            mov eax, dword [0x040005bb] 	       170	rev-parse.c	FUNCTION_5	IF_1
0x57b	          0x83e004	                              and eax, 4	       170	rev-parse.c	FUNCTION_5	IF_1
0x57e	            0x85c0	                           test eax, eax	       170	rev-parse.c	FUNCTION_5	IF_1
0x580	            0x7507	                           jne 0x40005c9	       170	rev-parse.c	FUNCTION_5	IF_1
0x582	      0xb800000000	                              mov eax, 0	       171	rev-parse.c	FUNCTION_5	IF_1
0x587	            0xeb40	                           jmp 0x4000609	       171	rev-parse.c	FUNCTION_5	IF_1
0x589	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x58d	          0x4889c7	                            mov rdi, rax	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x590	      0xe8bdfcffff	                call sym.is_rev_argument	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x595	            0x85c0	                           test eax, eax	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x597	            0x7407	                            je 0x40005e0	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x599	      0xba01000000	                              mov edx, 1	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x59e	            0xeb05	                           jmp 0x40005e5	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x5a0	      0xba02000000	                              mov edx, 2	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x5a5	    0x8b0500000000	            mov eax, dword [0x040005eb] 	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x5ab	            0x21d0	                            and eax, edx	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x5ad	            0x85c0	                           test eax, eax	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x5af	            0x7413	                            je 0x4000604	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x5b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	rev-parse.c	FUNCTION_5	IF_2	CALL_2
0x5b5	          0x4889c7	                            mov rdi, rax	       173	rev-parse.c	FUNCTION_5	IF_2	CALL_2
0x5b8	      0xe861fdffff	                           call sym.show	       173	rev-parse.c	FUNCTION_5	IF_2	CALL_2
0x5bd	      0xb801000000	                              mov eax, 1	       174	rev-parse.c	FUNCTION_5	IF_2
0x5c2	            0xeb05	                           jmp 0x4000609	       174	rev-parse.c	FUNCTION_5	IF_2
0x5c4	      0xb800000000	                              mov eax, 0	       176	rev-parse.c	FUNCTION_5
0x5c9	              0xc9	                                   leave	       177	rev-parse.c	FUNCTION_5
0x5ca	              0xc3	                                     ret	       177	rev-parse.c	FUNCTION_5
const_error	CALL,0:WHILE,0:FOR,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_39
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_39
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_39
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_39
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_39
try_difference	CALL,10:WHILE,1:FOR,0:SWITCH,0:IF,6:ELSE,0:DO,0:functions,0	121
0x7ec	              0x55	                                push rbp	       244	rev-parse.c	FUNCTION_12
0x7ed	          0x4889e5	                            mov rbp, rsp	       244	rev-parse.c	FUNCTION_12
0x7f0	    0x4881ec900000	                           sub rsp, 0x90	       244	rev-parse.c	FUNCTION_12
0x7f7	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       244	rev-parse.c	FUNCTION_12
0x7fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       244	rev-parse.c	FUNCTION_12
0x807	        0x488945f8	                mov qword [rbp - 8], rax	       244	rev-parse.c	FUNCTION_12
0x80b	            0x31c0	                            xor eax, eax	       244	rev-parse.c	FUNCTION_12
0x80d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x814	      0xbe00000000	                              mov esi, 0	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x819	          0x4889c7	                            mov rdi, rax	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x81c	      0xe800000000	                          call 0x4000861	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x821	        0x488945a0	             mov qword [rbp - 0x60], rax	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x825	      0x48837da000	               cmp qword [rbp - 0x60], 0	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x82a	            0x750a	                           jne 0x4000876	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x82c	      0xb800000000	                              mov eax, 0	       254	rev-parse.c	FUNCTION_12	IF_1
0x831	      0xe97f010000	                           jmp 0x40009f5	       254	rev-parse.c	FUNCTION_12	IF_1
0x836	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       255	rev-parse.c	FUNCTION_12
0x83a	        0x4883c002	                              add rax, 2	       255	rev-parse.c	FUNCTION_12
0x83e	        0x48894590	             mov qword [rbp - 0x70], rax	       255	rev-parse.c	FUNCTION_12
0x842	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       256	rev-parse.c	FUNCTION_12
0x849	        0x48894598	             mov qword [rbp - 0x68], rax	       256	rev-parse.c	FUNCTION_12
0x84d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       257	rev-parse.c	FUNCTION_12
0x851	           0xfb600	                   movzx eax, byte [rax]	       257	rev-parse.c	FUNCTION_12
0x854	            0x3c2e	                            cmp al, 0x2e	       257	rev-parse.c	FUNCTION_12
0x856	           0xf94c0	                                 sete al	       257	rev-parse.c	FUNCTION_12
0x859	           0xfb6c0	                           movzx eax, al	       257	rev-parse.c	FUNCTION_12
0x85c	          0x894584	             mov dword [rbp - 0x7c], eax	       257	rev-parse.c	FUNCTION_12
0x85f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       259	rev-parse.c	FUNCTION_12
0x863	          0xc60000	                       mov byte [rax], 0	       259	rev-parse.c	FUNCTION_12
0x866	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       260	rev-parse.c	FUNCTION_12
0x869	            0x4898	                                    cdqe	       260	rev-parse.c	FUNCTION_12
0x86b	        0x48014590	            add qword [rbp - 0x70], rax 	       260	rev-parse.c	FUNCTION_12
0x86f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       262	rev-parse.c	FUNCTION_12	IF_2
0x873	           0xfb600	                   movzx eax, byte [rax]	       262	rev-parse.c	FUNCTION_12	IF_2
0x876	            0x84c0	                             test al, al	       262	rev-parse.c	FUNCTION_12	IF_2
0x878	            0x7508	                           jne 0x40008c2	       262	rev-parse.c	FUNCTION_12	IF_2
0x87a	    0x48c745900000	               mov qword [rbp - 0x70], 0	       263	rev-parse.c	FUNCTION_12	IF_2
0x882	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       264	rev-parse.c	FUNCTION_12	IF_3
0x886	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       264	rev-parse.c	FUNCTION_12	IF_3
0x88d	            0x7508	                           jne 0x40008d7	       264	rev-parse.c	FUNCTION_12	IF_3
0x88f	    0x48c745980000	               mov qword [rbp - 0x68], 0	       265	rev-parse.c	FUNCTION_12	IF_3
0x897	    0x48817d980000	               cmp qword [rbp - 0x68], 0	       267	rev-parse.c	FUNCTION_12	IF_4
0x89f	            0x7521	                           jne 0x4000902	       267	rev-parse.c	FUNCTION_12	IF_4
0x8a1	    0x48817d900000	               cmp qword [rbp - 0x70], 0	       267	rev-parse.c	FUNCTION_12	IF_4
0x8a9	            0x7517	                           jne 0x4000902	       267	rev-parse.c	FUNCTION_12	IF_4
0x8ab	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       267	rev-parse.c	FUNCTION_12	IF_4
0x8af	            0x7511	                           jne 0x4000902	       267	rev-parse.c	FUNCTION_12	IF_4
0x8b1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       273	rev-parse.c	FUNCTION_12	IF_4
0x8b5	          0xc6002e	                    mov byte [rax], 0x2e	       273	rev-parse.c	FUNCTION_12	IF_4
0x8b8	      0xb800000000	                              mov eax, 0	       274	rev-parse.c	FUNCTION_12	IF_4
0x8bd	      0xe9f3000000	                           jmp 0x40009f5	       274	rev-parse.c	FUNCTION_12	IF_4
0x8c2	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8c6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8ca	          0x4889d6	                            mov rsi, rdx	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8cd	          0x4889c7	                            mov rdi, rax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8d0	      0xe800000000	                          call 0x4000915	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8d5	            0x85c0	                           test eax, eax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8d7	     0xf85cc000000	                           jne 0x40009e9	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8dd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8e1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8e5	          0x4889d6	                            mov rsi, rdx	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8e8	          0x4889c7	                            mov rdi, rax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8eb	      0xe800000000	                          call 0x4000930	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8f0	            0x85c0	                           test eax, eax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8f2	     0xf85b1000000	                           jne 0x40009e9	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x8f8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x8fc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x900	          0x4889c6	                            mov rsi, rax	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x903	      0xbf00000000	                              mov edi, 0	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x908	      0xe8ddfaffff	                       call sym.show_rev	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x90d	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x911	           0xf94c0	                                 sete al	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x914	           0xfb6c0	                           movzx eax, al	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x917	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x91b	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x91f	          0x4889ce	                            mov rsi, rcx	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x922	            0x89c7	                            mov edi, eax	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x924	      0xe8c1faffff	                       call sym.show_rev	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x929	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       280	rev-parse.c	FUNCTION_12	IF_5	IF_6
0x92d	            0x746c	                            je 0x40009db	       280	rev-parse.c	FUNCTION_12	IF_5	IF_6
0x92f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x933	          0x4889c7	                            mov rdi, rax	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x936	      0xe800000000	                          call 0x400097b	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x93b	        0x488945a8	             mov qword [rbp - 0x58], rax	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x93f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x943	          0x4889c7	                            mov rdi, rax	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x946	      0xe800000000	                          call 0x400098b	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x94b	        0x488945b0	             mov qword [rbp - 0x50], rax	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x94f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x953	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x957	          0x4889d6	                            mov rsi, rdx	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x95a	          0x4889c7	                            mov rdi, rax	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x95d	      0xe800000000	                          call 0x40009a2	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x962	        0x48894588	             mov qword [rbp - 0x78], rax	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x966	            0xeb2a	                           jmp 0x40009d2	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x968	        0x488d4588	                   lea rax, [rbp - 0x78]	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x96c	          0x4889c7	                            mov rdi, rax	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x96f	      0xe800000000	                          call 0x40009b4	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x974	        0x488945b8	             mov qword [rbp - 0x48], rax	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x978	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x97c	        0x4883c004	                              add rax, 4	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x980	      0xba00000000	                              mov edx, 0	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x985	          0x4889c6	                            mov rsi, rax	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x988	      0xbf01000000	                              mov edi, 1	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x98d	      0xe858faffff	                       call sym.show_rev	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x992	        0x488b4588	             mov rax, qword [rbp - 0x78]	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x996	          0x4885c0	                           test rax, rax	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x999	            0x75cd	                           jne 0x40009a8	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x99b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       291	rev-parse.c	FUNCTION_12	IF_5
0x99f	          0xc6002e	                    mov byte [rax], 0x2e	       291	rev-parse.c	FUNCTION_12	IF_5
0x9a2	      0xb801000000	                              mov eax, 1	       292	rev-parse.c	FUNCTION_12	IF_5
0x9a7	            0xeb0c	                           jmp 0x40009f5	       292	rev-parse.c	FUNCTION_12	IF_5
0x9a9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       294	rev-parse.c	FUNCTION_12
0x9ad	          0xc6002e	                    mov byte [rax], 0x2e	       294	rev-parse.c	FUNCTION_12
0x9b0	      0xb800000000	                              mov eax, 0	       295	rev-parse.c	FUNCTION_12
0x9b5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       296	rev-parse.c	FUNCTION_12
0x9b9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       296	rev-parse.c	FUNCTION_12
0x9c2	            0x7405	                            je 0x4000a09	       296	rev-parse.c	FUNCTION_12
0x9c4	      0xe800000000	                          call 0x4000a09	       296	rev-parse.c	FUNCTION_12
0x9c9	              0xc9	                                   leave	       296	rev-parse.c	FUNCTION_12
0x9ca	              0xc3	                                     ret	       296	rev-parse.c	FUNCTION_12
show_reference	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	24
0x64d	              0x55	                                push rbp	       196	rev-parse.c	FUNCTION_7
0x64e	          0x4889e5	                            mov rbp, rsp	       196	rev-parse.c	FUNCTION_7
0x651	        0x4883ec20	                           sub rsp, 0x20	       196	rev-parse.c	FUNCTION_7
0x655	        0x48897df8	                mov qword [rbp - 8], rdi	       196	rev-parse.c	FUNCTION_7
0x659	        0x488975f0	             mov qword [rbp - 0x10], rsi	       196	rev-parse.c	FUNCTION_7
0x65d	          0x8955ec	             mov dword [rbp - 0x14], edx	       196	rev-parse.c	FUNCTION_7
0x660	        0x48894de0	             mov qword [rbp - 0x20], rcx	       196	rev-parse.c	FUNCTION_7
0x664	    0x488b05000000	            mov rax, qword [0x040006ab] 	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x66b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x66f	          0x4889d6	                            mov rsi, rdx	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x672	          0x4889c7	                            mov rdi, rax	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x675	      0xe800000000	                          call 0x40006ba	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x67a	            0x85c0	                           test eax, eax	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x67c	            0x7407	                            je 0x40006c5	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x67e	      0xb800000000	                              mov eax, 0	       198	rev-parse.c	FUNCTION_7	IF_1
0x683	            0xeb1a	                           jmp 0x40006df	       198	rev-parse.c	FUNCTION_7	IF_1
0x685	        0x488b55f8	                mov rdx, qword [rbp - 8]	       199	rev-parse.c	FUNCTION_7	CALL_2
0x689	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       199	rev-parse.c	FUNCTION_7	CALL_2
0x68d	          0x4889c6	                            mov rsi, rax	       199	rev-parse.c	FUNCTION_7	CALL_2
0x690	      0xbf00000000	                              mov edi, 0	       199	rev-parse.c	FUNCTION_7	CALL_2
0x695	      0xe850fdffff	                       call sym.show_rev	       199	rev-parse.c	FUNCTION_7	CALL_2
0x69a	      0xb800000000	                              mov eax, 0	       200	rev-parse.c	FUNCTION_7
0x69f	              0xc9	                                   leave	       201	rev-parse.c	FUNCTION_7
0x6a0	              0xc3	                                     ret	       201	rev-parse.c	FUNCTION_7
try_parent_shorthands	CALL,11:WHILE,0:FOR,1:SWITCH,0:IF,12:ELSE,3:DO,0:functions,0	161
0x9cb	              0x55	                                push rbp	       299	rev-parse.c	FUNCTION_13
0x9cc	          0x4889e5	                            mov rbp, rsp	       299	rev-parse.c	FUNCTION_13
0x9cf	        0x4883ec70	                           sub rsp, 0x70	       299	rev-parse.c	FUNCTION_13
0x9d3	        0x48897d98	             mov qword [rbp - 0x68], rdi	       299	rev-parse.c	FUNCTION_13
0x9d7	    0x64488b042528	                mov rax, qword fs:[0x28]	       299	rev-parse.c	FUNCTION_13
0x9e0	        0x488945f8	                mov qword [rbp - 8], rax	       299	rev-parse.c	FUNCTION_13
0x9e4	            0x31c0	                            xor eax, eax	       299	rev-parse.c	FUNCTION_13
0x9e6	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       305	rev-parse.c	FUNCTION_13
0x9ed	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       306	rev-parse.c	FUNCTION_13
0x9f4	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       307	rev-parse.c	FUNCTION_13
0x9fb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x9ff	      0xbe00000000	                              mov esi, 0	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0xa04	          0x4889c7	                            mov rdi, rax	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0xa07	      0xe800000000	                          call 0x4000a4c	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0xa0c	        0x488945c0	             mov qword [rbp - 0x40], rax	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0xa10	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0xa15	            0x7424	                            je 0x4000a7b	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0xa17	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       310	rev-parse.c	FUNCTION_13	IF_1
0xa1e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0xa22	        0x4883c002	                              add rax, 2	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0xa26	           0xfb600	                   movzx eax, byte [rax]	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0xa29	            0x84c0	                             test al, al	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0xa2b	     0xf84c7000000	                            je 0x4000b38	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0xa31	      0xb800000000	                              mov eax, 0	       312	rev-parse.c	FUNCTION_13	IF_1	IF_2
0xa36	      0xe9f2010000	                           jmp 0x4000c6d	       312	rev-parse.c	FUNCTION_13	IF_1	IF_2
0xa3b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0xa3f	      0xbe00000000	                              mov esi, 0	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0xa44	          0x4889c7	                            mov rdi, rax	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0xa47	      0xe800000000	                          call 0x4000a8c	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0xa4c	        0x488945c0	             mov qword [rbp - 0x40], rax	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0xa50	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0xa55	            0x7424	                            je 0x4000abb	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0xa57	    0xc745b0010000	               mov dword [rbp - 0x50], 1	       314	rev-parse.c	FUNCTION_13	ELSE_1	IF_3
0xa5e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0xa62	        0x4883c002	                              add rax, 2	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0xa66	           0xfb600	                   movzx eax, byte [rax]	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0xa69	            0x84c0	                             test al, al	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0xa6b	     0xf8487000000	                            je 0x4000b38	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0xa71	      0xb800000000	                              mov eax, 0	       316	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0xa76	      0xe9b2010000	                           jmp 0x4000c6d	       316	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0xa7b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0xa7f	      0xbe00000000	                              mov esi, 0	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0xa84	          0x4889c7	                            mov rdi, rax	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0xa87	      0xe800000000	                          call 0x4000acc	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0xa8c	        0x488945c0	             mov qword [rbp - 0x40], rax	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0xa90	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0xa95	            0x7457	                            je 0x4000b2e	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0xa97	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       318	rev-parse.c	FUNCTION_13	ELSE_2	IF_5
0xa9e	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       319	rev-parse.c	FUNCTION_13	ELSE_2	IF_5
0xaa5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0xaa9	        0x4883c002	                              add rax, 2	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0xaad	           0xfb600	                   movzx eax, byte [rax]	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0xab0	            0x84c0	                             test al, al	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0xab2	            0x7444	                            je 0x4000b38	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0xab4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xab8	        0x488d4802	                      lea rcx, [rax + 2]	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xabc	        0x488d45b8	                   lea rax, [rbp - 0x48]	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xac0	      0xba0a000000	                            mov edx, 0xa	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xac5	          0x4889c6	                            mov rsi, rax	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xac8	          0x4889cf	                            mov rdi, rcx	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xacb	      0xe800000000	                          call 0x4000b10	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xad0	          0x8945b4	             mov dword [rbp - 0x4c], eax	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0xad3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xad7	           0xfb600	                   movzx eax, byte [rax]	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xada	            0x84c0	                             test al, al	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xadc	            0x7506	                           jne 0x4000b24	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xade	        0x837db400	               cmp dword [rbp - 0x4c], 0	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xae2	            0x7514	                           jne 0x4000b38	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xae4	      0xb800000000	                              mov eax, 0	       325	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xae9	      0xe93f010000	                           jmp 0x4000c6d	       325	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0xaee	      0xb800000000	                              mov eax, 0	       328	rev-parse.c	FUNCTION_13	ELSE_3
0xaf3	      0xe935010000	                           jmp 0x4000c6d	       328	rev-parse.c	FUNCTION_13	ELSE_3
0xaf8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       330	rev-parse.c	FUNCTION_13	ELSE_3
0xafc	          0xc60000	                       mov byte [rax], 0	       330	rev-parse.c	FUNCTION_13	ELSE_3
0xaff	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0xb03	        0x488b4598	             mov rax, qword [rbp - 0x68]	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0xb07	          0x4889d6	                            mov rsi, rdx	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0xb0a	          0x4889c7	                            mov rdi, rax	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0xb0d	      0xe800000000	                          call 0x4000b52	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0xb12	            0x85c0	                           test eax, eax	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0xb14	            0x7411	                            je 0x4000b67	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0xb16	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       332	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0xb1a	          0xc6005e	                    mov byte [rax], 0x5e	       332	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0xb1d	      0xb800000000	                              mov eax, 0	       333	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0xb22	      0xe906010000	                           jmp 0x4000c6d	       333	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0xb27	        0x488d45e0	                   lea rax, [rbp - 0x20]	       336	rev-parse.c	FUNCTION_13	CALL_6
0xb2b	          0x4889c7	                            mov rdi, rax	       336	rev-parse.c	FUNCTION_13	CALL_6
0xb2e	      0xe800000000	                          call 0x4000b73	       336	rev-parse.c	FUNCTION_13	CALL_6
0xb33	        0x488945d8	             mov qword [rbp - 0x28], rax	       336	rev-parse.c	FUNCTION_13	CALL_6
0xb37	        0x837db400	               cmp dword [rbp - 0x4c], 0	       337	rev-parse.c	FUNCTION_13	IF_9
0xb3b	            0x742a	                            je 0x4000ba7	       337	rev-parse.c	FUNCTION_13	IF_9
0xb3d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0xb41	        0x488b4030	            mov rax, qword [rax + 0x30] 	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0xb45	          0x4889c7	                            mov rdi, rax	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0xb48	      0xe800000000	                          call 0x4000b8d	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0xb4d	            0x89c2	                            mov edx, eax	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0xb4f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0xb52	            0x39c2	                            cmp edx, eax	       337	rev-parse.c	FUNCTION_13	IF_9
0xb54	            0x7311	                           jae 0x4000ba7	       337	rev-parse.c	FUNCTION_13	IF_9
0xb56	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       339	rev-parse.c	FUNCTION_13	IF_9
0xb5a	          0xc6005e	                    mov byte [rax], 0x5e	       339	rev-parse.c	FUNCTION_13	IF_9
0xb5d	      0xb800000000	                              mov eax, 0	       340	rev-parse.c	FUNCTION_13	IF_9
0xb62	      0xe9c6000000	                           jmp 0x4000c6d	       340	rev-parse.c	FUNCTION_13	IF_9
0xb67	        0x837dac00	               cmp dword [rbp - 0x54], 0	       343	rev-parse.c	FUNCTION_13	IF_10
0xb6b	            0x7415	                            je 0x4000bc2	       343	rev-parse.c	FUNCTION_13	IF_10
0xb6d	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       344	rev-parse.c	FUNCTION_13	CALL_8
0xb71	        0x488d45e0	                   lea rax, [rbp - 0x20]	       344	rev-parse.c	FUNCTION_13	CALL_8
0xb75	          0x4889c6	                            mov rsi, rax	       344	rev-parse.c	FUNCTION_13	CALL_8
0xb78	      0xbf00000000	                              mov edi, 0	       344	rev-parse.c	FUNCTION_13	CALL_8
0xb7d	      0xe868f8ffff	                       call sym.show_rev	       344	rev-parse.c	FUNCTION_13	CALL_8
0xb82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	rev-parse.c	FUNCTION_13	FOR_1
0xb86	        0x488b4030	            mov rax, qword [rax + 0x30] 	       345	rev-parse.c	FUNCTION_13	FOR_1
0xb8a	        0x488945c8	             mov qword [rbp - 0x38], rax	       345	rev-parse.c	FUNCTION_13	FOR_1
0xb8e	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       345	rev-parse.c	FUNCTION_13	FOR_1
0xb95	            0xeb7f	                           jmp 0x4000c56	       345	rev-parse.c	FUNCTION_13	FOR_1
0xb97	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       348	rev-parse.c	FUNCTION_13	FOR_1
0xb9f	        0x837db400	               cmp dword [rbp - 0x4c], 0	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0xba3	            0x7408	                            je 0x4000bed	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0xba5	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0xba8	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0xbab	            0x7558	                           jne 0x4000c45	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0xbad	    0x8b0500000000	            mov eax, dword [0x04000bf3] 	       353	rev-parse.c	FUNCTION_13	FOR_1	IF_12
0xbb3	            0x85c0	                           test eax, eax	       353	rev-parse.c	FUNCTION_13	FOR_1	IF_12
0xbb5	            0x741d	                            je 0x4000c14	       353	rev-parse.c	FUNCTION_13	FOR_1	IF_12
0xbb7	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0xbba	        0x488b4598	             mov rax, qword [rbp - 0x68]	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0xbbe	          0x4889c6	                            mov rsi, rax	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0xbc1	      0xbf00000000	                              mov edi, 0	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0xbc6	      0xb800000000	                              mov eax, 0	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0xbcb	      0xe800000000	                          call 0x4000c10	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0xbd0	        0x488945d0	             mov qword [rbp - 0x30], rax	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0xbd4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       356	rev-parse.c	FUNCTION_13	FOR_1
0xbd8	          0x488b00	                    mov rax, qword [rax]	       356	rev-parse.c	FUNCTION_13	FOR_1
0xbdb	        0x488d4804	                      lea rcx, [rax + 4]	       356	rev-parse.c	FUNCTION_13	FOR_1
0xbdf	        0x837db000	               cmp dword [rbp - 0x50], 0	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0xbe3	           0xf94c0	                                 sete al	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0xbe6	           0xfb6c0	                           movzx eax, al	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0xbe9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0xbed	          0x4889ce	                            mov rsi, rcx	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0xbf0	            0x89c7	                            mov edi, eax	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0xbf2	      0xe8f3f7ffff	                       call sym.show_rev	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0xbf7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0xbfb	          0x4889c7	                            mov rdi, rax	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0xbfe	      0xe800000000	                          call 0x4000c43	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0xc03	            0xeb01	                           jmp 0x4000c46	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0xc05	              0x90	                                     nop	       351	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0xc06	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       347	rev-parse.c	FUNCTION_13	FOR_1
0xc0a	        0x488b4008	                mov rax, qword [rax + 8]	       347	rev-parse.c	FUNCTION_13	FOR_1
0xc0e	        0x488945c8	             mov qword [rbp - 0x38], rax	       347	rev-parse.c	FUNCTION_13	FOR_1
0xc12	        0x8345a801	               add dword [rbp - 0x58], 1	       347	rev-parse.c	FUNCTION_13	FOR_1
0xc16	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       345	rev-parse.c	FUNCTION_13	FOR_1
0xc1b	     0xf8576ffffff	                           jne 0x4000bd7	       345	rev-parse.c	FUNCTION_13	FOR_1
0xc21	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       360	rev-parse.c	FUNCTION_13
0xc25	          0xc6005e	                    mov byte [rax], 0x5e	       360	rev-parse.c	FUNCTION_13
0xc28	      0xb801000000	                              mov eax, 1	       361	rev-parse.c	FUNCTION_13
0xc2d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       362	rev-parse.c	FUNCTION_13
0xc31	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       362	rev-parse.c	FUNCTION_13
0xc3a	            0x7405	                            je 0x4000c81	       362	rev-parse.c	FUNCTION_13
0xc3c	      0xe800000000	                          call 0x4000c81	       362	rev-parse.c	FUNCTION_13
0xc41	              0xc9	                                   leave	       362	rev-parse.c	FUNCTION_13
0xc42	              0xc3	                                     ret	       362	rev-parse.c	FUNCTION_13
findspace	CALL,1:WHILE,0:FOR,1:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	23
0xd75	              0x55	                                push rbp	       391	rev-parse.c	FUNCTION_16
0xd76	          0x4889e5	                            mov rbp, rsp	       391	rev-parse.c	FUNCTION_16
0xd79	        0x48897df8	                mov qword [rbp - 8], rdi	       391	rev-parse.c	FUNCTION_16
0xd7d	            0xeb28	                           jmp 0x4000de7	       392	rev-parse.c	FUNCTION_16	FOR_1
0xd7f	        0x488b45f8	                mov rax, qword [rbp - 8]	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd83	           0xfb600	                   movzx eax, byte [rax]	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd86	           0xfb6c0	                           movzx eax, al	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd89	            0x4898	                                    cdqe	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd8b	     0xfb680000000	                   movzx eax, byte [rax]	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd92	           0xfb6c0	                           movzx eax, al	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd95	          0x83e001	                              and eax, 1	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd98	            0x85c0	                           test eax, eax	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd9a	            0x7406	                            je 0x4000de2	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xd9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       394	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0xda0	            0xeb15	                           jmp 0x4000df7	       394	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0xda2	      0x488345f801	                  add qword [rbp - 8], 1	       392	rev-parse.c	FUNCTION_16	FOR_1
0xda7	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	rev-parse.c	FUNCTION_16	FOR_1
0xdab	           0xfb600	                   movzx eax, byte [rax]	       392	rev-parse.c	FUNCTION_16	FOR_1
0xdae	            0x84c0	                             test al, al	       392	rev-parse.c	FUNCTION_16	FOR_1
0xdb0	            0x75cd	                           jne 0x4000dbf	       392	rev-parse.c	FUNCTION_16	FOR_1
0xdb2	      0xb800000000	                              mov eax, 0	       395	rev-parse.c	FUNCTION_16
0xdb7	              0x5d	                                 pop rbp	       396	rev-parse.c	FUNCTION_16
0xdb8	              0xc3	                                     ret	       396	rev-parse.c	FUNCTION_16
cmd_sq_quote	CALL,3:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	31
0x14c1	              0x55	                                push rbp	       525	rev-parse.c	FUNCTION_18
0x14c2	          0x4889e5	                            mov rbp, rsp	       525	rev-parse.c	FUNCTION_18
0x14c5	        0x4883ec30	                           sub rsp, 0x30	       525	rev-parse.c	FUNCTION_18
0x14c9	          0x897ddc	             mov dword [rbp - 0x24], edi	       525	rev-parse.c	FUNCTION_18
0x14cc	        0x488975d0	             mov qword [rbp - 0x30], rsi	       525	rev-parse.c	FUNCTION_18
0x14d0	    0x64488b042528	                mov rax, qword fs:[0x28]	       525	rev-parse.c	FUNCTION_18
0x14d9	        0x488945f8	                mov qword [rbp - 8], rax	       525	rev-parse.c	FUNCTION_18
0x14dd	            0x31c0	                            xor eax, eax	       525	rev-parse.c	FUNCTION_18
0x14df	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       526	rev-parse.c	FUNCTION_18
0x14e7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       526	rev-parse.c	FUNCTION_18
0x14ef	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       526	rev-parse.c	FUNCTION_18
0x14f7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       528	rev-parse.c	FUNCTION_18	IF_1
0x14fb	            0x7413	                            je 0x4001550	       528	rev-parse.c	FUNCTION_18	IF_1
0x14fd	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       529	rev-parse.c	FUNCTION_18	CALL_1
0x1501	        0x488d45e0	                   lea rax, [rbp - 0x20]	       529	rev-parse.c	FUNCTION_18	CALL_1
0x1505	          0x4889d6	                            mov rsi, rdx	       529	rev-parse.c	FUNCTION_18	CALL_1
0x1508	          0x4889c7	                            mov rdi, rax	       529	rev-parse.c	FUNCTION_18	CALL_1
0x150b	      0xe800000000	                          call 0x4001550	       529	rev-parse.c	FUNCTION_18	CALL_1
0x1510	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       530	rev-parse.c	FUNCTION_18	CALL_2
0x1514	          0x4889c7	                            mov rdi, rax	       530	rev-parse.c	FUNCTION_18	CALL_2
0x1517	      0xe800000000	                          call 0x400155c	       530	rev-parse.c	FUNCTION_18	CALL_2
0x151c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       531	rev-parse.c	FUNCTION_18	CALL_3
0x1520	          0x4889c7	                            mov rdi, rax	       531	rev-parse.c	FUNCTION_18	CALL_3
0x1523	      0xe800000000	                          call 0x4001568	       531	rev-parse.c	FUNCTION_18	CALL_3
0x1528	      0xb800000000	                              mov eax, 0	       533	rev-parse.c	FUNCTION_18
0x152d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       534	rev-parse.c	FUNCTION_18
0x1531	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       534	rev-parse.c	FUNCTION_18
0x153a	            0x7405	                            je 0x4001581	       534	rev-parse.c	FUNCTION_18
0x153c	      0xe800000000	                          call 0x4001581	       534	rev-parse.c	FUNCTION_18
0x1541	              0xc9	                                   leave	       534	rev-parse.c	FUNCTION_18
0x1542	              0xc3	                                     ret	       534	rev-parse.c	FUNCTION_18
show_abbrev	CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	13
0x6d4	              0x55	                                push rbp	       210	rev-parse.c	FUNCTION_9
0x6d5	          0x4889e5	                            mov rbp, rsp	       210	rev-parse.c	FUNCTION_9
0x6d8	        0x4883ec10	                           sub rsp, 0x10	       210	rev-parse.c	FUNCTION_9
0x6dc	        0x48897df8	                mov qword [rbp - 8], rdi	       210	rev-parse.c	FUNCTION_9
0x6e0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       210	rev-parse.c	FUNCTION_9
0x6e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	rev-parse.c	FUNCTION_9	CALL_1
0x6e8	      0xba00000000	                              mov edx, 0	       211	rev-parse.c	FUNCTION_9	CALL_1
0x6ed	          0x4889c6	                            mov rsi, rax	       211	rev-parse.c	FUNCTION_9	CALL_1
0x6f0	      0xbf00000000	                              mov edi, 0	       211	rev-parse.c	FUNCTION_9	CALL_1
0x6f5	      0xe8f0fcffff	                       call sym.show_rev	       211	rev-parse.c	FUNCTION_9	CALL_1
0x6fa	      0xb800000000	                              mov eax, 0	       212	rev-parse.c	FUNCTION_9
0x6ff	              0xc9	                                   leave	       213	rev-parse.c	FUNCTION_9
0x700	              0xc3	                                     ret	       213	rev-parse.c	FUNCTION_9
_	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	15
0x226	              0x55	                                push rbp	        51	gettext.h	FUNCTION_63
0x227	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_63
0x22a	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_63
0x22e	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_63
0x232	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_63	IF_1
0x236	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_63	IF_1
0x239	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_63	IF_1
0x23b	            0x7507	                           jne 0x4000284	        52	gettext.h	FUNCTION_63	IF_1
0x23d	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_63	IF_1
0x242	            0xeb0c	                           jmp 0x4000290	        53	gettext.h	FUNCTION_63	IF_1
0x244	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_63	CALL_2
0x248	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_63	CALL_2
0x24b	      0xe800000000	                          call 0x4000290	        54	gettext.h	FUNCTION_63	CALL_2
0x250	              0xc9	                                   leave	        55	gettext.h	FUNCTION_63
0x251	              0xc3	                                     ret	        55	gettext.h	FUNCTION_63
st_mult	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	22
0x61	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_48
0x62	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_48
0x65	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_48
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_48
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_48
0x71	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x76	            0x7430	                            je 0x40000e8	       795	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x78	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x7f	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x84	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x88	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x8c	            0x731a	                           jae 0x40000e8	       795	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x8e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_2
0x92	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_2
0x96	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_2
0x99	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_2
0x9e	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_2
0xa3	      0xe800000000	                          call 0x40000e8	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_2
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_48
0xac	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_48
0xb1	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_48
0xb2	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_48
show_file	CALL,5:WHILE,0:FOR,0:SWITCH,0:IF,2:ELSE,1:DO,0:functions,0	36
0x76a	              0x55	                                push rbp	       228	rev-parse.c	FUNCTION_11
0x76b	          0x4889e5	                            mov rbp, rsp	       228	rev-parse.c	FUNCTION_11
0x76e	        0x4883ec20	                           sub rsp, 0x20	       228	rev-parse.c	FUNCTION_11
0x772	        0x48897de8	             mov qword [rbp - 0x18], rdi	       228	rev-parse.c	FUNCTION_11
0x776	          0x8975e4	             mov dword [rbp - 0x1c], esi	       228	rev-parse.c	FUNCTION_11
0x779	      0xe84dfeffff	                   call sym.show_default	       229	rev-parse.c	FUNCTION_11	CALL_1
0x77e	    0x8b0500000000	            mov eax, dword [0x040007c4] 	       230	rev-parse.c	FUNCTION_11	IF_1
0x784	          0x83e00a	                            and eax, 0xa	       230	rev-parse.c	FUNCTION_11	IF_1
0x787	          0x83f80a	                            cmp eax, 0xa	       230	rev-parse.c	FUNCTION_11	IF_1
0x78a	            0x7559	                           jne 0x4000825	       230	rev-parse.c	FUNCTION_11	IF_1
0x78c	        0x837de400	               cmp dword [rbp - 0x1c], 0	       231	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x790	            0x7440	                            je 0x4000812	       231	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x792	    0x488b05000000	            mov rax, qword [0x040007d9] 	       232	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x799	        0x488b4008	                mov rax, qword [rax + 8]	       232	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x79d	        0x488945f0	             mov qword [rbp - 0x10], rax	       232	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x7a1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x7a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x7a9	          0x4889d6	                            mov rsi, rdx	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x7ac	          0x4889c7	                            mov rdi, rax	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x7af	      0xe800000000	                          call 0x40007f4	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x7b4	        0x488945f8	                mov qword [rbp - 8], rax	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x7b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x7bc	          0x4889c7	                            mov rdi, rax	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x7bf	      0xe85afbffff	                           call sym.show	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x7c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x7c8	          0x4889c7	                            mov rdi, rax	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x7cb	      0xe800000000	                          call 0x4000810	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x7d0	            0xeb0c	                           jmp 0x400081e	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x7d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x7d6	          0x4889c7	                            mov rdi, rax	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x7d9	      0xe840fbffff	                           call sym.show	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x7de	      0xb801000000	                              mov eax, 1	       238	rev-parse.c	FUNCTION_11	IF_1
0x7e3	            0xeb05	                           jmp 0x400082a	       238	rev-parse.c	FUNCTION_11	IF_1
0x7e5	      0xb800000000	                              mov eax, 0	       240	rev-parse.c	FUNCTION_11
0x7ea	              0xc9	                                   leave	       241	rev-parse.c	FUNCTION_11
0x7eb	              0xc3	                                     ret	       241	rev-parse.c	FUNCTION_11
show_datestring	CALL,4:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	30
0x701	              0x55	                                push rbp	       216	rev-parse.c	FUNCTION_10
0x702	          0x4889e5	                            mov rbp, rsp	       216	rev-parse.c	FUNCTION_10
0x705	        0x4883ec20	                           sub rsp, 0x20	       216	rev-parse.c	FUNCTION_10
0x709	        0x48897de8	             mov qword [rbp - 0x18], rdi	       216	rev-parse.c	FUNCTION_10
0x70d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       216	rev-parse.c	FUNCTION_10
0x711	    0x8b0500000000	            mov eax, dword [0x04000757] 	       220	rev-parse.c	FUNCTION_10	IF_1
0x717	          0x83e005	                              and eax, 5	       220	rev-parse.c	FUNCTION_10	IF_1
0x71a	          0x83f805	                              cmp eax, 5	       220	rev-parse.c	FUNCTION_10	IF_1
0x71d	            0x7548	                           jne 0x40007a7	       220	rev-parse.c	FUNCTION_10	IF_1
0x71f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       222	rev-parse.c	FUNCTION_10	CALL_2
0x723	      0xbe00000000	                              mov esi, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x728	          0x4889c7	                            mov rdi, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x72b	      0xe800000000	                          call 0x4000770	       222	rev-parse.c	FUNCTION_10	CALL_2
0x730	          0x4889c2	                            mov rdx, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x733	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	rev-parse.c	FUNCTION_10	CALL_2
0x737	          0x4889c6	                            mov rsi, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x73a	      0xbf00000000	                              mov edi, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x73f	      0xb800000000	                              mov eax, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x744	      0xe800000000	                          call 0x4000789	       222	rev-parse.c	FUNCTION_10	CALL_2
0x749	        0x488945f8	                mov qword [rbp - 8], rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x74d	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	rev-parse.c	FUNCTION_10	CALL_3
0x751	          0x4889c7	                            mov rdi, rax	       223	rev-parse.c	FUNCTION_10	CALL_3
0x754	      0xe8c5fbffff	                           call sym.show	       223	rev-parse.c	FUNCTION_10	CALL_3
0x759	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	rev-parse.c	FUNCTION_10	CALL_4
0x75d	          0x4889c7	                            mov rdi, rax	       224	rev-parse.c	FUNCTION_10	CALL_4
0x760	      0xe800000000	                          call 0x40007a5	       224	rev-parse.c	FUNCTION_10	CALL_4
0x765	            0xeb01	                           jmp 0x40007a8	       224	rev-parse.c	FUNCTION_10	CALL_4
0x767	              0x90	                                     nop	       221	rev-parse.c	FUNCTION_10	IF_1
0x768	              0xc9	                                   leave	       225	rev-parse.c	FUNCTION_10
0x769	              0xc3	                                     ret	       225	rev-parse.c	FUNCTION_10
strbuf_avail	CALL,0:WHILE,0:FOR,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	18
0xb3	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_24
0xb4	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_24
0xb7	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_24
0xbb	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_24
0xbf	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_24
0xc2	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0xc5	            0x741b	                            je 0x4000122	       141	strbuf.h	FUNCTION_24
0xc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_24
0xcb	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_24
0xce	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_24
0xd2	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_24
0xd6	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_24
0xd9	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_24
0xdc	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_24
0xe0	            0xeb05	                           jmp 0x4000127	       141	strbuf.h	FUNCTION_24
0xe2	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_24
0xe7	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_24
0xe8	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_24
show_with_type	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	16
0x3b7	              0x55	                                push rbp	       118	rev-parse.c	FUNCTION_3
0x3b8	          0x4889e5	                            mov rbp, rsp	       118	rev-parse.c	FUNCTION_3
0x3bb	        0x4883ec10	                           sub rsp, 0x10	       118	rev-parse.c	FUNCTION_3
0x3bf	          0x897dfc	                mov dword [rbp - 4], edi	       118	rev-parse.c	FUNCTION_3
0x3c2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       118	rev-parse.c	FUNCTION_3
0x3c6	    0x8b0500000000	            mov eax, dword [0x0400040c] 	       119	rev-parse.c	FUNCTION_3	IF_1
0x3cc	          0x3945fc	                cmp dword [rbp - 4], eax	       119	rev-parse.c	FUNCTION_3	IF_1
0x3cf	            0x740a	                            je 0x400041b	       119	rev-parse.c	FUNCTION_3	IF_1
0x3d1	      0xbf5e000000	                           mov edi, 0x5e	       120	rev-parse.c	FUNCTION_3	CALL_1
0x3d6	      0xe800000000	                          call 0x400041b	       120	rev-parse.c	FUNCTION_3	CALL_1
0x3db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	rev-parse.c	FUNCTION_3	CALL_2
0x3df	          0x4889c7	                            mov rdi, rax	       121	rev-parse.c	FUNCTION_3	CALL_2
0x3e2	      0xe837ffffff	                           call sym.show	       121	rev-parse.c	FUNCTION_3	CALL_2
0x3e7	              0x90	                                     nop	       122	rev-parse.c	FUNCTION_3
0x3e8	              0xc9	                                   leave	       122	rev-parse.c	FUNCTION_3
0x3e9	              0xc3	                                     ret	       122	rev-parse.c	FUNCTION_3
opt_with_value	CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,3:ELSE,0:DO,0:functions,0	36
0x156d	              0x55	                                push rbp	       556	rev-parse.c	FUNCTION_20
0x156e	          0x4889e5	                            mov rbp, rsp	       556	rev-parse.c	FUNCTION_20
0x1571	        0x4883ec18	                           sub rsp, 0x18	       556	rev-parse.c	FUNCTION_20
0x1575	        0x48897df8	                mov qword [rbp - 8], rdi	       556	rev-parse.c	FUNCTION_20
0x1579	        0x488975f0	             mov qword [rbp - 0x10], rsi	       556	rev-parse.c	FUNCTION_20
0x157d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       556	rev-parse.c	FUNCTION_20
0x1581	        0x488b45f8	                mov rax, qword [rbp - 8]	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x1585	        0x488d55f8	                      lea rdx, [rbp - 8]	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x1589	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x158d	          0x4889ce	                            mov rsi, rcx	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x1590	          0x4889c7	                            mov rdi, rax	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x1593	      0xe873eaffff	                    call sym.skip_prefix	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x1598	            0x85c0	                           test eax, eax	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x159a	            0x7442	                            je 0x400161e	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x159c	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15a0	           0xfb600	                   movzx eax, byte [rax]	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15a3	            0x84c0	                             test al, al	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15a5	            0x7512	                           jne 0x40015f9	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       559	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15ab	    0x48c700000000	                      mov qword [rax], 0	       559	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15b2	      0xb801000000	                              mov eax, 1	       560	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15b7	            0xeb2a	                           jmp 0x4001623	       560	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x15b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15bd	        0x488d5001	                      lea rdx, [rax + 1]	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15c1	        0x488955f8	                mov qword [rbp - 8], rdx	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15c5	           0xfb600	                   movzx eax, byte [rax]	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15c8	            0x3c3d	                            cmp al, 0x3d	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15ca	            0x7512	                           jne 0x400161e	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15cc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15d4	          0x488910	                    mov qword [rax], rdx	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15d7	      0xb801000000	                              mov eax, 1	       564	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15dc	            0xeb05	                           jmp 0x4001623	       564	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x15de	      0xb800000000	                              mov eax, 0	       567	rev-parse.c	FUNCTION_20
0x15e3	              0xc9	                                   leave	       568	rev-parse.c	FUNCTION_20
0x15e4	              0xc3	                                     ret	       568	rev-parse.c	FUNCTION_20
strbuf_addstr	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	17
0x1f1	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_27
0x1f2	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_27
0x1f5	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_27
0x1f9	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_27
0x1fd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_27
0x201	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_27	CALL_2
0x205	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x208	      0xe800000000	                          call 0x400024d	       279	strbuf.h	FUNCTION_27	CALL_2
0x20d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x210	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_27	CALL_2
0x214	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_27	CALL_2
0x218	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_27	CALL_2
0x21b	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x21e	      0xe800000000	                          call 0x4000263	       279	strbuf.h	FUNCTION_27	CALL_2
0x223	              0x90	                                     nop	       280	strbuf.h	FUNCTION_27
0x224	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_27
0x225	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_27
handle_ref_opt	CALL,3:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,1:DO,0:functions,0	24
0x15e5	              0x55	                                push rbp	       571	rev-parse.c	FUNCTION_21
0x15e6	          0x4889e5	                            mov rbp, rsp	       571	rev-parse.c	FUNCTION_21
0x15e9	        0x4883ec10	                           sub rsp, 0x10	       571	rev-parse.c	FUNCTION_21
0x15ed	        0x48897df8	                mov qword [rbp - 8], rdi	       571	rev-parse.c	FUNCTION_21
0x15f1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       571	rev-parse.c	FUNCTION_21
0x15f5	      0x48837df800	                  cmp qword [rbp - 8], 0	       572	rev-parse.c	FUNCTION_21	IF_1
0x15fa	            0x741c	                            je 0x4001658	       572	rev-parse.c	FUNCTION_21	IF_1
0x15fc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       573	rev-parse.c	FUNCTION_21	CALL_1
0x1600	        0x488b45f8	                mov rax, qword [rbp - 8]	       573	rev-parse.c	FUNCTION_21	CALL_1
0x1604	      0xb900000000	                              mov ecx, 0	       573	rev-parse.c	FUNCTION_21	CALL_1
0x1609	          0x4889c6	                            mov rsi, rax	       573	rev-parse.c	FUNCTION_21	CALL_1
0x160c	      0xbf00000000	                              mov edi, 0	       573	rev-parse.c	FUNCTION_21	CALL_1
0x1611	      0xe800000000	                          call 0x4001656	       573	rev-parse.c	FUNCTION_21	CALL_1
0x1616	            0xeb16	                           jmp 0x400166e	       573	rev-parse.c	FUNCTION_21	CALL_1
0x1618	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       575	rev-parse.c	FUNCTION_21	CALL_2
0x161c	      0xba00000000	                              mov edx, 0	       575	rev-parse.c	FUNCTION_21	CALL_2
0x1621	      0xbe00000000	                              mov esi, 0	       575	rev-parse.c	FUNCTION_21	CALL_2
0x1626	          0x4889c7	                            mov rdi, rax	       575	rev-parse.c	FUNCTION_21	CALL_2
0x1629	      0xe800000000	                          call 0x400166e	       575	rev-parse.c	FUNCTION_21	CALL_2
0x162e	      0xbf00000000	                              mov edi, 0	       576	rev-parse.c	FUNCTION_21	CALL_3
0x1633	      0xe800000000	                          call 0x4001678	       576	rev-parse.c	FUNCTION_21	CALL_3
0x1638	              0x90	                                     nop	       577	rev-parse.c	FUNCTION_21
0x1639	              0xc9	                                   leave	       577	rev-parse.c	FUNCTION_21
0x163a	              0xc3	                                     ret	       577	rev-parse.c	FUNCTION_21
die_no_single_rev	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,1:DO,0:functions,0	11
0x1543	              0x55	                                push rbp	       537	rev-parse.c	FUNCTION_19
0x1544	          0x4889e5	                            mov rbp, rsp	       537	rev-parse.c	FUNCTION_19
0x1547	        0x4883ec10	                           sub rsp, 0x10	       537	rev-parse.c	FUNCTION_19
0x154b	          0x897dfc	                mov dword [rbp - 4], edi	       537	rev-parse.c	FUNCTION_19
0x154e	        0x837dfc00	                  cmp dword [rbp - 4], 0	       538	rev-parse.c	FUNCTION_19	IF_1
0x1552	            0x740a	                            je 0x400159e	       538	rev-parse.c	FUNCTION_19	IF_1
0x1554	      0xbf01000000	                              mov edi, 1	       539	rev-parse.c	FUNCTION_19	CALL_1
0x1559	      0xe800000000	                          call 0x400159e	       539	rev-parse.c	FUNCTION_19	CALL_1
0x155e	      0xbf00000000	                              mov edi, 0	       541	rev-parse.c	FUNCTION_19	CALL_2
0x1563	      0xb800000000	                              mov eax, 0	       541	rev-parse.c	FUNCTION_19	CALL_2
0x1568	      0xe800000000	                 call sym.opt_with_value	       541	rev-parse.c	FUNCTION_19	CALL_2
strbuf_setlen	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,2:ELSE,1:DO,0:functions,0	43
0xe9	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_25
0xea	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_25
0xed	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_25
0xf1	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_25
0xf5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_25
0xf9	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_25	IF_1
0xfd	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_25	IF_1
0x100	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_25	IF_1
0x103	            0x740d	                            je 0x4000152	       162	strbuf.h	FUNCTION_25	IF_1
0x105	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_25	IF_1
0x109	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_25	IF_1
0x10c	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_25	IF_1
0x110	            0xeb05	                           jmp 0x4000157	       162	strbuf.h	FUNCTION_25	IF_1
0x112	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_25	IF_1
0x117	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_25	IF_1
0x11b	            0x730f	                           jae 0x400016c	       162	strbuf.h	FUNCTION_25	IF_1
0x11d	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_25	CALL_1
0x122	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_25	CALL_1
0x127	      0xe800000000	                          call 0x400016c	       163	strbuf.h	FUNCTION_25	CALL_1
0x12c	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_25
0x130	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_25
0x134	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_25
0x138	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_25	IF_2
0x13c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_25	IF_2
0x140	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_25	IF_2
0x146	            0x7414	                            je 0x400019c	       165	strbuf.h	FUNCTION_25	IF_2
0x148	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_25	IF_2
0x14c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_25	IF_2
0x150	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_25	IF_2
0x154	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_25	IF_2
0x157	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_25	IF_2
0x15a	            0xeb24	                           jmp 0x40001c0	       169	strbuf.h	FUNCTION_25
0x15c	     0xfb605000000	           movzx eax, byte [0x040001a3] 	       168	strbuf.h	FUNCTION_25	CALL_2
0x163	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_25	CALL_2
0x165	            0x7419	                            je 0x40001c0	       168	strbuf.h	FUNCTION_25	CALL_2
0x167	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_25	CALL_2
0x16c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_25	CALL_2
0x171	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_25	CALL_2
0x176	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_25	CALL_2
0x17b	      0xe800000000	                          call 0x40001c0	       168	strbuf.h	FUNCTION_25	CALL_2
0x180	              0x90	                                     nop	       169	strbuf.h	FUNCTION_25
0x181	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_25
0x182	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_25
show	CALL,6:WHILE,1:FOR,0:SWITCH,0:IF,2:ELSE,1:DO,0:functions,0	44
0x31e	              0x55	                                push rbp	        99	rev-parse.c	FUNCTION_2
0x31f	          0x4889e5	                            mov rbp, rsp	        99	rev-parse.c	FUNCTION_2
0x322	        0x4883ec20	                           sub rsp, 0x20	        99	rev-parse.c	FUNCTION_2
0x326	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	rev-parse.c	FUNCTION_2
0x32a	    0x8b0500000000	            mov eax, dword [0x04000370] 	       100	rev-parse.c	FUNCTION_2	IF_1
0x330	            0x85c0	                           test eax, eax	       100	rev-parse.c	FUNCTION_2	IF_1
0x332	            0x7474	                            je 0x40003e8	       100	rev-parse.c	FUNCTION_2	IF_1
0x334	    0xc745f8270000	               mov dword [rbp - 8], 0x27	       101	rev-parse.c	FUNCTION_2	IF_1
0x33b	          0x8b45f8	                mov eax, dword [rbp - 8]	       103	rev-parse.c	FUNCTION_2	IF_1	CALL_1
0x33e	            0x89c7	                            mov edi, eax	       103	rev-parse.c	FUNCTION_2	IF_1	CALL_1
0x340	      0xe800000000	                          call 0x4000385	       103	rev-parse.c	FUNCTION_2	IF_1	CALL_1
0x345	            0xeb30	                           jmp 0x40003b7	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x347	          0x8b45fc	                mov eax, dword [rbp - 4]	       105	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	IF_2
0x34a	          0x3b45f8	                cmp eax, dword [rbp - 8]	       105	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	IF_2
0x34d	            0x751e	                           jne 0x40003ad	       105	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	IF_2
0x34f	    0x488b05000000	            mov rax, qword [0x04000396] 	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x356	          0x4889c1	                            mov rcx, rax	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x359	      0xba03000000	                              mov edx, 3	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x35e	      0xbe01000000	                              mov esi, 1	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x363	      0xbf00000000	                              mov edi, 0	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x368	      0xe800000000	                          call 0x40003ad	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x36d	          0x8b45fc	                mov eax, dword [rbp - 4]	       107	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_3
0x370	            0x89c7	                            mov edi, eax	       107	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_3
0x372	      0xe800000000	                          call 0x40003b7	       107	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_3
0x377	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x37b	        0x488d5001	                      lea rdx, [rax + 1]	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x37f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x383	           0xfb600	                   movzx eax, byte [rax]	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x386	           0xfbec0	                           movsx eax, al	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x389	          0x8945fc	                mov dword [rbp - 4], eax	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x38c	        0x837dfc00	                  cmp dword [rbp - 4], 0	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x390	            0x75b5	                           jne 0x4000387	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x392	          0x8b45f8	                mov eax, dword [rbp - 8]	       109	rev-parse.c	FUNCTION_2	IF_1	CALL_4
0x395	            0x89c7	                            mov edi, eax	       109	rev-parse.c	FUNCTION_2	IF_1	CALL_4
0x397	      0xe800000000	                          call 0x40003dc	       109	rev-parse.c	FUNCTION_2	IF_1	CALL_4
0x39c	      0xbf20000000	                           mov edi, 0x20	       110	rev-parse.c	FUNCTION_2	IF_1	CALL_5
0x3a1	      0xe800000000	                          call 0x40003e6	       110	rev-parse.c	FUNCTION_2	IF_1	CALL_5
0x3a6	            0xeb0c	                           jmp 0x40003f4	       114	rev-parse.c	FUNCTION_2
0x3a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       113	rev-parse.c	FUNCTION_2	CALL_6
0x3ac	          0x4889c7	                            mov rdi, rax	       113	rev-parse.c	FUNCTION_2	CALL_6
0x3af	      0xe800000000	                          call 0x40003f4	       113	rev-parse.c	FUNCTION_2	CALL_6
0x3b4	              0x90	                                     nop	       114	rev-parse.c	FUNCTION_2
0x3b5	              0xc9	                                   leave	       114	rev-parse.c	FUNCTION_2
0x3b6	              0xc3	                                     ret	       114	rev-parse.c	FUNCTION_2
cmd_rev_parse	CALL,148:WHILE,1:FOR,3:SWITCH,0:IF,92:ELSE,8:DO,0:functions,0	1083
0x163b	              0x55	                                push rbp	       580	rev-parse.c	FUNCTION_22
0x163c	          0x4889e5	                            mov rbp, rsp	       580	rev-parse.c	FUNCTION_22
0x163f	    0x4881ec300100	                          sub rsp, 0x130	       580	rev-parse.c	FUNCTION_22
0x1646	    0x89bdecfeffff	            mov dword [rbp - 0x114], edi	       580	rev-parse.c	FUNCTION_22
0x164c	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	       580	rev-parse.c	FUNCTION_22
0x1653	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	       580	rev-parse.c	FUNCTION_22
0x165a	    0x64488b042528	                mov rax, qword fs:[0x28]	       580	rev-parse.c	FUNCTION_22
0x1663	        0x488945f8	                mov qword [rbp - 8], rax	       580	rev-parse.c	FUNCTION_22
0x1667	            0x31c0	                            xor eax, eax	       580	rev-parse.c	FUNCTION_22
0x1669	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	       581	rev-parse.c	FUNCTION_22
0x1673	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	       581	rev-parse.c	FUNCTION_22
0x167d	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	       581	rev-parse.c	FUNCTION_22
0x1687	    0xc78508ffffff	               mov dword [rbp - 0xf8], 0	       581	rev-parse.c	FUNCTION_22
0x1691	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	       581	rev-parse.c	FUNCTION_22
0x169b	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	       582	rev-parse.c	FUNCTION_22
0x16a5	    0xc78514ffffff	               mov dword [rbp - 0xec], 0	       583	rev-parse.c	FUNCTION_22
0x16af	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	       584	rev-parse.c	FUNCTION_22
0x16b9	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	       586	rev-parse.c	FUNCTION_22
0x16c3	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       587	rev-parse.c	FUNCTION_22
0x16ce	    0x48c745800000	               mov qword [rbp - 0x80], 0	       589	rev-parse.c	FUNCTION_22
0x16d6	    0x48c745880000	               mov qword [rbp - 0x78], 0	       589	rev-parse.c	FUNCTION_22
0x16de	    0x48c745900000	               mov qword [rbp - 0x70], 0	       589	rev-parse.c	FUNCTION_22
0x16e6	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x16ed	            0x7e49	                           jle 0x4001778	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x16ef	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x16f6	        0x4883c008	                              add rax, 8	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x16fa	          0x488b00	                    mov rax, qword [rax]	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x16fd	          0x4889c6	                            mov rsi, rax	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x1700	      0xbf00000000	                              mov edi, 0	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x1705	      0xe800000000	                          call 0x400174a	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x170a	            0x85c0	                           test eax, eax	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x170c	            0x752a	                           jne 0x4001778	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x170e	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x1715	        0x488d7008	                      lea rsi, [rax + 8]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x1719	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x171f	          0x8d48ff	                      lea ecx, [rax - 1]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x1722	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x1729	          0x4889c2	                            mov rdx, rax	       592	rev-parse.c	FUNCTION_22	CALL_2
0x172c	            0x89cf	                            mov edi, ecx	       592	rev-parse.c	FUNCTION_22	CALL_2
0x172e	      0xe886f6ffff	                   call sym.cmd_parseopt	       592	rev-parse.c	FUNCTION_22	CALL_2
0x1733	      0xe9a4120000	                           jmp 0x4002a1c	       592	rev-parse.c	FUNCTION_22	CALL_2
0x1738	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x173f	            0x7e42	                           jle 0x40017c3	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x1741	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x1748	        0x4883c008	                              add rax, 8	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x174c	          0x488b00	                    mov rax, qword [rax]	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x174f	          0x4889c6	                            mov rsi, rax	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x1752	      0xbf00000000	                              mov edi, 0	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x1757	      0xe800000000	                          call 0x400179c	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x175c	            0x85c0	                           test eax, eax	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x175e	            0x7523	                           jne 0x40017c3	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x1760	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       595	rev-parse.c	FUNCTION_22	CALL_4
0x1767	        0x488d5010	                   lea rdx, [rax + 0x10]	       595	rev-parse.c	FUNCTION_22	CALL_4
0x176b	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       595	rev-parse.c	FUNCTION_22	CALL_4
0x1771	          0x83e802	                              sub eax, 2	       595	rev-parse.c	FUNCTION_22	CALL_4
0x1774	          0x4889d6	                            mov rsi, rdx	       595	rev-parse.c	FUNCTION_22	CALL_4
0x1777	            0x89c7	                            mov edi, eax	       595	rev-parse.c	FUNCTION_22	CALL_4
0x1779	      0xe843fdffff	                   call sym.cmd_sq_quote	       595	rev-parse.c	FUNCTION_22	CALL_4
0x177e	      0xe959120000	                           jmp 0x4002a1c	       595	rev-parse.c	FUNCTION_22	CALL_4
0x1783	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x178a	            0x7e29	                           jle 0x40017f5	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x178c	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x1793	        0x4883c008	                              add rax, 8	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x1797	          0x488b00	                    mov rax, qword [rax]	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x179a	          0x4889c6	                            mov rsi, rax	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x179d	      0xbf00000000	                              mov edi, 0	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x17a2	      0xe800000000	                          call 0x40017e7	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x17a7	            0x85c0	                           test eax, eax	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x17a9	            0x750a	                           jne 0x40017f5	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x17ab	      0xbf00000000	                              mov edi, 0	       598	rev-parse.c	FUNCTION_22	CALL_6
0x17b0	      0xe800000000	                          call 0x40017f5	       598	rev-parse.c	FUNCTION_22	CALL_6
0x17b5	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	       600	rev-parse.c	FUNCTION_22	FOR_1
0x17bf	            0xeb41	                           jmp 0x4001842	       600	rev-parse.c	FUNCTION_22	FOR_1
0x17c1	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17c7	            0x4898	                                    cdqe	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17c9	    0x488d14c50000	                        lea rdx, [rax*8]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17d1	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17d8	          0x4801d0	                            add rax, rdx	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17db	          0x488b00	                    mov rax, qword [rax]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17de	      0xbe00000000	                              mov esi, 0	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17e3	          0x4889c7	                            mov rdi, rax	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17e6	      0xe800000000	                          call 0x400182b	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17eb	            0x85c0	                           test eax, eax	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17ed	            0x750c	                           jne 0x400183b	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x17ef	    0xc78514ffffff	               mov dword [rbp - 0xec], 1	       602	rev-parse.c	FUNCTION_22	FOR_1	IF_4
0x17f9	            0xeb15	                           jmp 0x4001850	       603	rev-parse.c	FUNCTION_22	FOR_1	IF_4
0x17fb	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       600	rev-parse.c	FUNCTION_22	FOR_1
0x1802	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       600	rev-parse.c	FUNCTION_22	FOR_1
0x1808	    0x3b85ecfeffff	            cmp eax, dword [rbp - 0x114]	       600	rev-parse.c	FUNCTION_22	FOR_1
0x180e	            0x7cb1	                            jl 0x4001801	       600	rev-parse.c	FUNCTION_22	FOR_1
0x1810	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       608	rev-parse.c	FUNCTION_22	IF_5
0x1817	            0x751e	                           jne 0x4001877	       608	rev-parse.c	FUNCTION_22	IF_5
0x1819	      0xe800000000	                          call 0x400185e	       609	rev-parse.c	FUNCTION_22	IF_5	CALL_8
0x181e	      0xbe00000000	                              mov esi, 0	       610	rev-parse.c	FUNCTION_22	IF_5	CALL_9
0x1823	      0xbf00000000	                              mov edi, 0	       610	rev-parse.c	FUNCTION_22	IF_5	CALL_9
0x1828	      0xe800000000	                          call 0x400186d	       610	rev-parse.c	FUNCTION_22	IF_5	CALL_9
0x182d	      0xb800000000	                              mov eax, 0	       611	rev-parse.c	FUNCTION_22	IF_5
0x1832	      0xe9a5110000	                           jmp 0x4002a1c	       611	rev-parse.c	FUNCTION_22	IF_5
0x1837	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	       614	rev-parse.c	FUNCTION_22	FOR_2
0x1841	      0xe912110000	                           jmp 0x4002998	       614	rev-parse.c	FUNCTION_22	FOR_2
0x1846	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x184c	            0x4898	                                    cdqe	       615	rev-parse.c	FUNCTION_22	FOR_2
0x184e	    0x488d14c50000	                        lea rdx, [rax*8]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x1856	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x185d	          0x4801d0	                            add rax, rdx	       615	rev-parse.c	FUNCTION_22	FOR_2
0x1860	          0x488b00	                    mov rax, qword [rax]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x1863	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       615	rev-parse.c	FUNCTION_22	FOR_2
0x186a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x1871	      0xbe00000000	                              mov esi, 0	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x1876	          0x4889c7	                            mov rdi, rax	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x1879	      0xe800000000	                          call 0x40018be	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x187e	            0x85c0	                           test eax, eax	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x1880	            0x7545	                           jne 0x4001907	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x1882	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x188c	            0xeb1f	                           jmp 0x40018ed	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x188e	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x1894	            0x4898	                                    cdqe	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x1896	    0x488b04c50000	                  mov rax, qword [rax*8]	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x189e	          0x4889c7	                            mov rdi, rax	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x18a1	      0xe800000000	                          call 0x40018e6	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x18a6	    0x838520ffffff	               add dword [rbp - 0xe0], 1	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x18ad	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x18b3	            0x4898	                                    cdqe	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x18b5	    0x488b04c50000	                  mov rax, qword [rax*8]	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x18bd	          0x4885c0	                           test rax, rax	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x18c0	            0x75cc	                           jne 0x40018ce	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x18c2	      0xe98a100000	                           jmp 0x4002991	       621	rev-parse.c	FUNCTION_22	FOR_2	IF_6
0x18c7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x18ce	      0xbe00000000	                              mov esi, 0	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x18d3	          0x4889c7	                            mov rdi, rax	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x18d6	      0xe800000000	                          call 0x400191b	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x18db	            0x85c0	                           test eax, eax	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x18dd	     0xf85ac000000	                           jne 0x40019cf	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x18e3	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x18ea	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x18f0	            0x4898	                                    cdqe	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x18f2	    0x488d14c50000	                        lea rdx, [rax*8]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x18fa	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x1901	          0x4801d0	                            add rax, rdx	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x1904	          0x488b00	                    mov rax, qword [rax]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x1907	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x190e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       625	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_8
0x1916	            0x750f	                           jne 0x4001967	       625	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_8
0x1918	      0xbf00000000	                              mov edi, 0	       626	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_13
0x191d	      0xb800000000	                              mov eax, 0	       626	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_13
0x1922	      0xe800000000	                          call 0x4001967	       626	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_13
0x1927	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x192e	      0xbe00000000	                              mov esi, 0	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x1933	          0x4889c7	                            mov rdi, rax	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x1936	      0xe800000000	                          call 0x400197b	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x193b	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x1942	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       628	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_9
0x194a	            0x752f	                           jne 0x40019bb	       628	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_9
0x194c	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x1952	            0x4898	                                    cdqe	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x1954	    0x488d14c50000	                        lea rdx, [rax*8]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x195c	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x1963	          0x4801d0	                            add rax, rdx	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x1966	          0x488b00	                    mov rax, qword [rax]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x1969	          0x4889c6	                            mov rsi, rax	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x196c	      0xbf00000000	                              mov edi, 0	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x1971	      0xb800000000	                              mov eax, 0	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x1976	      0xe800000000	                          call 0x40019bb	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x197b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       630	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_16
0x1982	          0x4889c7	                            mov rdi, rax	       630	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_16
0x1985	      0xe800000000	                          call 0x40019ca	       630	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_16
0x198a	      0xe9c20f0000	                           jmp 0x4002991	       631	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x198f	    0x83bd10ffffff	               cmp dword [rbp - 0xf0], 0	       635	rev-parse.c	FUNCTION_22	FOR_2	IF_10
0x1996	            0x7525	                           jne 0x40019fd	       635	rev-parse.c	FUNCTION_22	FOR_2	IF_10
0x1998	      0xe800000000	                          call 0x40019dd	       636	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_17
0x199d	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       636	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_17
0x19a4	      0xbe00000000	                              mov esi, 0	       637	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_18
0x19a9	      0xbf00000000	                              mov edi, 0	       637	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_18
0x19ae	      0xe800000000	                          call 0x40019f3	       637	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_18
0x19b3	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	       638	rev-parse.c	FUNCTION_22	FOR_2	IF_10
0x19bd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x19c4	      0xbe00000000	                              mov esi, 0	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x19c9	          0x4889c7	                            mov rdi, rax	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x19cc	      0xe800000000	                          call 0x4001a11	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x19d1	            0x85c0	                           test eax, eax	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x19d3	     0xf85a6000000	                           jne 0x4001abf	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x19d9	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19df	            0x4898	                                    cdqe	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19e1	        0x4883c001	                              add rax, 1	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19e5	    0x488d14c50000	                        lea rdx, [rax*8]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19ed	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19f4	          0x4801d0	                            add rax, rdx	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19f7	          0x488b00	                    mov rax, qword [rax]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19fa	          0x4885c0	                           test rax, rax	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19fd	            0x750f	                           jne 0x4001a4e	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x19ff	      0xbf00000000	                              mov edi, 0	       643	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_20
0x1a04	      0xb800000000	                              mov eax, 0	       643	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_20
0x1a09	      0xe800000000	                          call 0x4001a4e	       643	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_20
0x1a0e	        0x488d4580	                   lea rax, [rbp - 0x80]	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_21
0x1a12	      0xbe00000000	                              mov esi, 0	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_21
0x1a17	          0x4889c7	                            mov rdi, rax	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_21
0x1a1a	      0xe8cae6ffff	                  call sym.strbuf_setlen	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_21
0x1a1f	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a25	            0x4898	                                    cdqe	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a27	        0x4883c001	                              add rax, 1	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a2b	    0x488d14c50000	                        lea rdx, [rax*8]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a33	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a3a	          0x4801d0	                            add rax, rdx	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a3d	          0x488b00	                    mov rax, qword [rax]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a40	          0x4889c6	                            mov rsi, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a43	      0xbf00000000	                              mov edi, 0	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a48	      0xb800000000	                              mov eax, 0	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a4d	      0xe800000000	                          call 0x4001a92	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a52	          0x4889c1	                            mov rcx, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a55	        0x488d5580	                   lea rdx, [rbp - 0x80]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a59	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a60	          0x4889c6	                            mov rsi, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a63	          0x4889cf	                            mov rdi, rcx	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a66	      0xe800000000	                          call 0x4001aab	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a6b	          0x4889c7	                            mov rdi, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a6e	      0xe800000000	                          call 0x4001ab3	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_24
0x1a73	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       647	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x1a7a	      0xe9d20e0000	                           jmp 0x4002991	       648	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x1a7f	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	       650	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x1a86	            0x744f	                            je 0x4001b17	       650	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x1a88	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1a8f	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1a95	            0x89d6	                            mov esi, edx	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1a97	          0x4889c7	                            mov rdi, rax	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1a9a	      0xe8cbecffff	                      call sym.show_file	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1a9f	            0x85c0	                           test eax, eax	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1aa1	     0xf847c0e0000	                            je 0x4002963	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1aa7	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 1	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1aae	     0xf8f6f0e0000	                            jg 0x4002963	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_25
0x1ab4	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_26
0x1abb	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_26
0x1ac2	      0xba00000000	                              mov edx, 0	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_26
0x1ac7	          0x4889ce	                            mov rsi, rcx	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_26
0x1aca	          0x4889c7	                            mov rdi, rax	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_26
0x1acd	      0xe800000000	                          call 0x4001b12	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_26
0x1ad2	      0xe94c0e0000	                           jmp 0x4002963	       653	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x1ad7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x1ade	      0xbe00000000	                              mov esi, 0	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x1ae3	          0x4889c7	                            mov rdi, rax	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x1ae6	      0xe800000000	                          call 0x4001b2b	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x1aeb	            0x85c0	                           test eax, eax	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x1aed	            0x757f	                           jne 0x4001bae	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x1aef	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x1af6	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x1afc	    0x3b85ecfeffff	            cmp eax, dword [rbp - 0x114]	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x1b02	            0x7c0f	                            jl 0x4001b53	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x1b04	      0xbf00000000	                              mov edi, 0	       657	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_28
0x1b09	      0xb800000000	                              mov eax, 0	       657	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_28
0x1b0e	      0xe800000000	                          call 0x4001b53	       657	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_28
0x1b13	    0x8b0500000000	            mov eax, dword [0x04001b59] 	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b19	          0x83e004	                              and eax, 4	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b1c	            0x85c0	                           test eax, eax	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b1e	     0xf84020e0000	                            je 0x4002966	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b24	    0x8b0500000000	            mov eax, dword [0x04001b6a] 	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b2a	          0x83e001	                              and eax, 1	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b2d	            0x85c0	                           test eax, eax	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b2f	     0xf84f10d0000	                            je 0x4002966	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x1b35	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       659	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x1b3c	          0x4889c7	                            mov rdi, rax	       659	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x1b3f	      0xe8dae7ffff	                           call sym.show	       659	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x1b44	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b4a	            0x4898	                                    cdqe	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b4c	    0x488d14c50000	                        lea rdx, [rax*8]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b54	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b5b	          0x4801d0	                            add rax, rdx	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b5e	          0x488b00	                    mov rax, qword [rax]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b61	          0x4889c7	                            mov rdi, rax	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b64	      0xe8b5e7ffff	                           call sym.show	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_30
0x1b69	      0xe9b80d0000	                           jmp 0x4002966	       662	rev-parse.c	FUNCTION_22	FOR_2	IF_15
0x1b6e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x1b75	      0xbe00000000	                              mov esi, 0	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x1b7a	          0x4889c7	                            mov rdi, rax	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x1b7d	      0xe800000000	                          call 0x4001bc2	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x1b82	            0x85c0	                           test eax, eax	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x1b84	            0x7436	                            je 0x4001bfc	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x1b86	    0x8b0500000000	            mov eax, dword [0x04001bcc] 	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1b8c	          0x83e004	                              and eax, 4	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1b8f	            0x85c0	                           test eax, eax	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1b91	     0xf84920d0000	                            je 0x4002969	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1b97	    0x8b0500000000	            mov eax, dword [0x04001bdd] 	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1b9d	          0x83e001	                              and eax, 1	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1ba0	            0x85c0	                           test eax, eax	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1ba2	     0xf84810d0000	                            je 0x4002969	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x1ba8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       666	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_32
0x1baf	          0x4889c7	                            mov rdi, rax	       666	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_32
0x1bb2	      0xe867e7ffff	                           call sym.show	       666	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_32
0x1bb7	      0xe96d0d0000	                           jmp 0x4002969	       667	rev-parse.c	FUNCTION_22	FOR_2	IF_18
0x1bbc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x1bc3	           0xfb600	                   movzx eax, byte [rax]	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x1bc6	            0x3c2d	                            cmp al, 0x2d	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x1bc8	     0xf851c0c0000	                           jne 0x400282a	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x1bce	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x1bd5	      0xbe00000000	                              mov esi, 0	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x1bda	          0x4889c7	                            mov rdi, rax	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x1bdd	      0xe800000000	                          call 0x4001c22	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x1be2	            0x85c0	                           test eax, eax	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x1be4	            0x7534	                           jne 0x4001c5a	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x1be6	    0xc785fcfeffff	              mov dword [rbp - 0x104], 2	       672	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x1bf0	    0x8b0500000000	            mov eax, dword [0x04001c36] 	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x1bf6	          0x83e005	                              and eax, 5	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x1bf9	            0x85c0	                           test eax, eax	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x1bfb	     0xf842b0d0000	                            je 0x400296c	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x1c01	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_34
0x1c08	      0xbe00000000	                              mov esi, 0	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_34
0x1c0d	          0x4889c7	                            mov rdi, rax	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_34
0x1c10	      0xe855ebffff	                      call sym.show_file	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_34
0x1c15	      0xe9120d0000	                           jmp 0x400296c	       676	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x1c1a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x1c21	      0xbe00000000	                              mov esi, 0	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x1c26	          0x4889c7	                            mov rdi, rax	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x1c29	      0xe800000000	                          call 0x4001c6e	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x1c2e	            0x85c0	                           test eax, eax	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x1c30	            0x754a	                           jne 0x4001cbc	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x1c32	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c39	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c3f	            0x4898	                                    cdqe	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c41	    0x488d14c50000	                        lea rdx, [rax*8]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c49	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c50	          0x4801d0	                            add rax, rdx	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c53	          0x488b00	                    mov rax, qword [rax]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c56	    0x488905000000	            mov qword [0x04001c9d], rax 	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x1c5d	    0x488b05000000	            mov rax, qword [0x04001ca4] 	       680	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	IF_24
0x1c64	          0x4885c0	                           test rax, rax	       680	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	IF_24
0x1c67	     0xf85c20c0000	                           jne 0x400296f	       680	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	IF_24
0x1c6d	      0xbf00000000	                              mov edi, 0	       681	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_36
0x1c72	      0xb800000000	                              mov eax, 0	       681	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_36
0x1c77	      0xe800000000	                          call 0x4001cbc	       681	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_36
0x1c7c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x1c83	      0xbe00000000	                              mov esi, 0	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x1c88	          0x4889c7	                            mov rdi, rax	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x1c8b	      0xe800000000	                          call 0x4001cd0	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x1c90	            0x85c0	                           test eax, eax	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x1c92	            0x7565	                           jne 0x4001d39	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x1c94	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1c9b	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1ca1	            0x4898	                                    cdqe	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1ca3	    0x488d14c50000	                        lea rdx, [rax*8]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cab	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cb2	          0x4801d0	                            add rax, rdx	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cb5	          0x488b00	                    mov rax, qword [rax]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cb8	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cbf	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       686	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	IF_26
0x1cc7	            0x750f	                           jne 0x4001d18	       686	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	IF_26
0x1cc9	      0xbf00000000	                              mov edi, 0	       687	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_38
0x1cce	      0xb800000000	                              mov eax, 0	       687	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_38
0x1cd3	      0xe800000000	                          call 0x4001d18	       687	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_38
0x1cd8	    0x488b05000000	            mov rax, qword [0x04001d1f] 	       688	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cdf	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	       688	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1ce6	        0x48895008	                mov qword [rax + 8], rdx	       688	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cea	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	       689	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cf4	      0xe9580c0000	                           jmp 0x4002991	       690	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x1cf9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_39
0x1d00	      0xbe00000000	                              mov esi, 0	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_39
0x1d05	          0x4889c7	                            mov rdi, rax	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_39
0x1d08	      0xe800000000	                          call 0x4001d4d	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_39
0x1d0d	            0x85c0	                           test eax, eax	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_39
0x1d0f	            0x7514	                           jne 0x4001d65	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_39
0x1d11	    0x8b0500000000	            mov eax, dword [0x04001d57] 	       693	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x1d17	          0x83e0fd	                     and eax, 0xfffffffd	       693	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x1d1a	    0x890500000000	            mov dword [0x04001d60], eax 	       693	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x1d20	      0xe92c0c0000	                           jmp 0x4002991	       694	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x1d25	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_40
0x1d2c	      0xbe00000000	                              mov esi, 0	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_40
0x1d31	          0x4889c7	                            mov rdi, rax	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_40
0x1d34	      0xe800000000	                          call 0x4001d79	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_40
0x1d39	            0x85c0	                           test eax, eax	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_40
0x1d3b	            0x7514	                           jne 0x4001d91	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_40
0x1d3d	    0x8b0500000000	            mov eax, dword [0x04001d83] 	       697	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x1d43	          0x83e0fe	                     and eax, 0xfffffffe	       697	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x1d46	    0x890500000000	            mov dword [0x04001d8c], eax 	       697	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x1d4c	      0xe9000c0000	                           jmp 0x4002991	       698	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x1d51	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_41
0x1d58	      0xbe00000000	                              mov esi, 0	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_41
0x1d5d	          0x4889c7	                            mov rdi, rax	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_41
0x1d60	      0xe800000000	                          call 0x4001da5	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_41
0x1d65	            0x85c0	                           test eax, eax	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_41
0x1d67	            0x7514	                           jne 0x4001dbd	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_41
0x1d69	    0x8b0500000000	            mov eax, dword [0x04001daf] 	       701	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x1d6f	          0x83e0f7	                     and eax, 0xfffffff7	       701	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x1d72	    0x890500000000	            mov dword [0x04001db8], eax 	       701	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x1d78	      0xe9d40b0000	                           jmp 0x4002991	       702	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x1d7d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_42
0x1d84	      0xbe00000000	                              mov esi, 0	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_42
0x1d89	          0x4889c7	                            mov rdi, rax	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_42
0x1d8c	      0xe800000000	                          call 0x4001dd1	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_42
0x1d91	            0x85c0	                           test eax, eax	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_42
0x1d93	            0x7514	                           jne 0x4001de9	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_42
0x1d95	    0x8b0500000000	            mov eax, dword [0x04001ddb] 	       705	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x1d9b	          0x83e0fb	                     and eax, 0xfffffffb	       705	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x1d9e	    0x890500000000	            mov dword [0x04001de4], eax 	       705	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x1da4	      0xe9a80b0000	                           jmp 0x4002991	       706	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x1da9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_43
0x1db0	      0xbe00000000	                              mov esi, 0	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_43
0x1db5	          0x4889c7	                            mov rdi, rax	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_43
0x1db8	      0xe800000000	                          call 0x4001dfd	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_43
0x1dbd	            0x85c0	                           test eax, eax	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_43
0x1dbf	            0x751e	                           jne 0x4001e1f	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_43
0x1dc1	    0x8b0500000000	            mov eax, dword [0x04001e07] 	       709	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x1dc7	          0x83e0f9	                     and eax, 0xfffffff9	       709	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x1dca	    0x890500000000	            mov dword [0x04001e10], eax 	       709	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x1dd0	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	       710	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x1dda	      0xe9720b0000	                           jmp 0x4002991	       711	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x1ddf	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1de6	      0xbe00000000	                              mov esi, 0	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1deb	          0x4889c7	                            mov rdi, rax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1dee	      0xe800000000	                          call 0x4001e33	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1df3	            0x85c0	                           test eax, eax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1df5	            0x7418	                            je 0x4001e4f	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1df7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1dfe	      0xbe00000000	                              mov esi, 0	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1e03	          0x4889c7	                            mov rdi, rax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1e06	      0xe800000000	                          call 0x4001e4b	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1e0b	            0x85c0	                           test eax, eax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1e0d	            0x7516	                           jne 0x4001e65	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_45
0x1e0f	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	       714	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32
0x1e19	    0x838d1cffffff	                or dword [rbp - 0xe4], 1	       715	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32
0x1e20	      0xe92c0b0000	                           jmp 0x4002991	       716	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32
0x1e25	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x1e2c	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x1e33	      0xbe00000000	                              mov esi, 0	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x1e38	          0x4889c7	                            mov rdi, rax	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x1e3b	      0xe82df7ffff	                 call sym.opt_with_value	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x1e40	            0x85c0	                           test eax, eax	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x1e42	     0xf8493000000	                            je 0x4001f1b	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x1e48	    0x8b0500000000	            mov eax, dword [0x04001e8e] 	       719	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1e4e	          0x83e0f9	                     and eax, 0xfffffff9	       719	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1e51	    0x890500000000	            mov dword [0x04001e97], eax 	       719	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1e57	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	       720	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1e61	    0x8b0500000000	            mov eax, dword [0x04001ea7] 	       721	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1e67	    0x890500000000	            mov dword [0x04001ead], eax 	       721	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1e6d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       722	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x1e74	          0x4885c0	                           test rax, rax	       722	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x1e77	     0xf84b50a0000	                            je 0x4002972	       722	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x1e7d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_47
0x1e84	      0xba0a000000	                            mov edx, 0xa	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_47
0x1e89	      0xbe00000000	                              mov esi, 0	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_47
0x1e8e	          0x4889c7	                            mov rdi, rax	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_47
0x1e91	      0xe800000000	                          call 0x4001ed6	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_47
0x1e96	    0x890500000000	            mov dword [0x04001edc], eax 	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_47
0x1e9c	    0x8b1500000000	            mov edx, dword [0x04001ee2] 	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x1ea2	    0x8b0500000000	            mov eax, dword [0x04001ee8] 	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x1ea8	            0x39c2	                            cmp edx, eax	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x1eaa	            0x7d11	                           jge 0x4001efd	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x1eac	    0x8b0500000000	            mov eax, dword [0x04001ef2] 	       726	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x1eb2	    0x890500000000	            mov dword [0x04001ef8], eax 	       726	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x1eb8	      0xe9780a0000	                           jmp 0x4002975	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1ebd	    0x8b0500000000	            mov eax, dword [0x04001f03] 	       727	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x1ec3	          0x83f827	                           cmp eax, 0x27	       727	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x1ec6	     0xf8e690a0000	                           jle 0x4002975	       727	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x1ecc	    0xc70500000000	           mov dword [0x04001f16], 0x28 	       728	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x1ed6	      0xe95a0a0000	                           jmp 0x4002975	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x1edb	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_48
0x1ee2	      0xbe00000000	                              mov esi, 0	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_48
0x1ee7	          0x4889c7	                            mov rdi, rax	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_48
0x1eea	      0xe800000000	                          call 0x4001f2f	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_48
0x1eef	            0x85c0	                           test eax, eax	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_48
0x1ef1	            0x750f	                           jne 0x4001f42	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_48
0x1ef3	    0xc70500000000	               mov dword [0x04001f3d], 1	       732	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37
0x1efd	      0xe94f0a0000	                           jmp 0x4002991	       733	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37
0x1f02	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_49
0x1f09	      0xbe00000000	                              mov esi, 0	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_49
0x1f0e	          0x4889c7	                            mov rdi, rax	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_49
0x1f11	      0xe800000000	                          call 0x4001f56	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_49
0x1f16	            0x85c0	                           test eax, eax	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_49
0x1f18	            0x7514	                           jne 0x4001f6e	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_49
0x1f1a	    0x8b0500000000	            mov eax, dword [0x04001f60] 	       736	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x1f20	          0x83f001	                              xor eax, 1	       736	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x1f23	    0x890500000000	            mov dword [0x04001f69], eax 	       736	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x1f29	      0xe9230a0000	                           jmp 0x4002991	       737	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x1f2e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_50
0x1f35	      0xbe00000000	                              mov esi, 0	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_50
0x1f3a	          0x4889c7	                            mov rdi, rax	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_50
0x1f3d	      0xe800000000	                          call 0x4001f82	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_50
0x1f42	            0x85c0	                           test eax, eax	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_50
0x1f44	            0x750f	                           jne 0x4001f95	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_50
0x1f46	    0xc70500000000	               mov dword [0x04001f90], 1	       740	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39
0x1f50	      0xe9fc090000	                           jmp 0x4002991	       741	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39
0x1f55	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_51
0x1f5c	      0xbe00000000	                              mov esi, 0	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_51
0x1f61	          0x4889c7	                            mov rdi, rax	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_51
0x1f64	      0xe800000000	                          call 0x4001fa9	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_51
0x1f69	            0x85c0	                           test eax, eax	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_51
0x1f6b	            0x750f	                           jne 0x4001fbc	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_51
0x1f6d	    0xc70500000000	               mov dword [0x04001fb7], 2	       744	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40
0x1f77	      0xe9d5090000	                           jmp 0x4002991	       745	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40
0x1f7c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_52
0x1f83	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_52
0x1f8a	      0xbe00000000	                              mov esi, 0	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_52
0x1f8f	          0x4889c7	                            mov rdi, rax	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_52
0x1f92	      0xe8d6f5ffff	                 call sym.opt_with_value	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_52
0x1f97	            0x85c0	                           test eax, eax	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_52
0x1f99	     0xf848d000000	                            je 0x400206c	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_52
0x1f9f	    0xc70500000000	               mov dword [0x04001fe9], 1	       748	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x1fa9	    0x8b0500000000	            mov eax, dword [0x04001fef] 	       749	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x1faf	    0x890500000000	            mov dword [0x04001ff5], eax 	       749	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x1fb5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       750	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42
0x1fbc	          0x4885c0	                           test rax, rax	       750	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42
0x1fbf	     0xf8473090000	                            je 0x4002978	       750	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42
0x1fc5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_53
0x1fcc	      0xbe00000000	                              mov esi, 0	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_53
0x1fd1	          0x4889c7	                            mov rdi, rax	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_53
0x1fd4	      0xe800000000	                          call 0x4002019	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_53
0x1fd9	            0x85c0	                           test eax, eax	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_53
0x1fdb	            0x750f	                           jne 0x400202c	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_53
0x1fdd	    0xc70500000000	               mov dword [0x04002027], 1	       752	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43
0x1fe7	      0xe94c090000	                           jmp 0x4002978	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x1fec	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_54
0x1ff3	      0xbe00000000	                              mov esi, 0	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_54
0x1ff8	          0x4889c7	                            mov rdi, rax	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_54
0x1ffb	      0xe800000000	                          call 0x4002040	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_54
0x2000	            0x85c0	                           test eax, eax	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_54
0x2002	            0x750f	                           jne 0x4002053	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_54
0x2004	    0xc70500000000	               mov dword [0x0400204e], 0	       754	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44
0x200e	      0xe925090000	                           jmp 0x4002978	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x2013	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_55
0x201a	          0x4889c6	                            mov rsi, rax	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_55
0x201d	      0xbf00000000	                              mov edi, 0	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_55
0x2022	      0xb800000000	                              mov eax, 0	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_55
0x2027	      0xe800000000	                          call 0x400206c	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_55
0x202c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x2033	      0xbe00000000	                              mov esi, 0	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x2038	          0x4889c7	                            mov rdi, rax	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x203b	      0xe800000000	                          call 0x4002080	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x2040	            0x85c0	                           test eax, eax	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x2042	            0x7514	                           jne 0x4002098	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x2044	      0xbe00000000	                              mov esi, 0	       762	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_57
0x2049	      0xbf00000000	                              mov edi, 0	       762	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_57
0x204e	      0xe800000000	                          call 0x4002093	       762	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_57
0x2053	      0xe9f9080000	                           jmp 0x4002991	       763	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45
0x2058	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x205f	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x2066	      0xbe00000000	                              mov esi, 0	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x206b	          0x4889c7	                            mov rdi, rax	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x206e	      0xe898dfffff	                    call sym.skip_prefix	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x2073	            0x85c0	                           test eax, eax	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x2075	            0x741e	                            je 0x40020d5	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x2077	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_59
0x207e	      0xba00000000	                              mov edx, 0	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_59
0x2083	      0xbe00000000	                              mov esi, 0	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_59
0x2088	          0x4889c7	                            mov rdi, rax	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_59
0x208b	      0xe800000000	                          call 0x40020d0	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_59
0x2090	      0xe9bc080000	                           jmp 0x4002991	       767	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46
0x2095	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x209c	      0xbe00000000	                              mov esi, 0	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x20a1	          0x4889c7	                            mov rdi, rax	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x20a4	      0xe800000000	                          call 0x40020e9	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x20a9	            0x85c0	                           test eax, eax	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x20ab	            0x7537	                           jne 0x4002124	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x20ad	      0xb900000000	                              mov ecx, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x20b2	      0xba00000000	                              mov edx, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x20b7	      0xbe00000000	                              mov esi, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x20bc	      0xbf00000000	                              mov edi, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x20c1	      0xe800000000	                          call 0x4002106	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x20c6	      0xb900000000	                              mov ecx, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_62
0x20cb	      0xba00000000	                              mov edx, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_62
0x20d0	      0xbe00000000	                              mov esi, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_62
0x20d5	      0xbf00000000	                              mov edi, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_62
0x20da	      0xe800000000	                          call 0x400211f	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_62
0x20df	      0xe96d080000	                           jmp 0x4002991	       772	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47
0x20e4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x20eb	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x20f2	      0xbe00000000	                              mov esi, 0	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x20f7	          0x4889c7	                            mov rdi, rax	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x20fa	      0xe86ef4ffff	                 call sym.opt_with_value	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x20ff	            0x85c0	                           test eax, eax	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x2101	            0x7419	                            je 0x400215c	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x2103	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_64
0x210a	      0xbe00000000	                              mov esi, 0	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_64
0x210f	          0x4889c7	                            mov rdi, rax	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_64
0x2112	      0xe8cef4ffff	                 call sym.handle_ref_opt	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_64
0x2117	      0xe935080000	                           jmp 0x4002991	       776	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48
0x211c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x2123	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x212a	      0xbe00000000	                              mov esi, 0	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x212f	          0x4889c7	                            mov rdi, rax	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x2132	      0xe836f4ffff	                 call sym.opt_with_value	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x2137	            0x85c0	                           test eax, eax	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x2139	            0x7419	                            je 0x4002194	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x213b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_66
0x2142	      0xbe00000000	                              mov esi, 0	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_66
0x2147	          0x4889c7	                            mov rdi, rax	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_66
0x214a	      0xe896f4ffff	                 call sym.handle_ref_opt	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_66
0x214f	      0xe9fd070000	                           jmp 0x4002991	       780	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49
0x2154	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x215b	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x2162	      0xbe00000000	                              mov esi, 0	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x2167	          0x4889c7	                            mov rdi, rax	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x216a	      0xe89cdeffff	                    call sym.skip_prefix	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x216f	            0x85c0	                           test eax, eax	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x2171	            0x7419	                            je 0x40021cc	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x2173	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_68
0x217a	      0xbe00000000	                              mov esi, 0	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_68
0x217f	          0x4889c7	                            mov rdi, rax	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_68
0x2182	      0xe85ef4ffff	                 call sym.handle_ref_opt	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_68
0x2187	      0xe9c5070000	                           jmp 0x4002991	       784	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50
0x218c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x2193	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x219a	      0xbe00000000	                              mov esi, 0	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x219f	          0x4889c7	                            mov rdi, rax	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x21a2	      0xe8c6f3ffff	                 call sym.opt_with_value	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x21a7	            0x85c0	                           test eax, eax	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x21a9	            0x7419	                            je 0x4002204	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x21ab	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_70
0x21b2	      0xbe00000000	                              mov esi, 0	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_70
0x21b7	          0x4889c7	                            mov rdi, rax	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_70
0x21ba	      0xe826f4ffff	                 call sym.handle_ref_opt	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_70
0x21bf	      0xe98d070000	                           jmp 0x4002991	       788	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51
0x21c4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x21cb	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x21d2	      0xbe00000000	                              mov esi, 0	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x21d7	          0x4889c7	                            mov rdi, rax	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x21da	      0xe82cdeffff	                    call sym.skip_prefix	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x21df	            0x85c0	                           test eax, eax	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x21e1	            0x7419	                            je 0x400223c	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x21e3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_72
0x21ea	          0x4889c6	                            mov rsi, rax	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_72
0x21ed	      0xbf00000000	                              mov edi, 0	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_72
0x21f2	      0xe800000000	                          call 0x4002237	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_72
0x21f7	      0xe955070000	                           jmp 0x4002991	       792	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52
0x21fc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x2203	      0xbe00000000	                              mov esi, 0	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x2208	          0x4889c7	                            mov rdi, rax	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x220b	      0xe800000000	                          call 0x4002250	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x2210	            0x85c0	                           test eax, eax	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x2212	            0x752e	                           jne 0x4002282	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x2214	      0xe800000000	                          call 0x4002259	       795	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_74
0x2219	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       795	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_74
0x2220	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       796	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	IF_54
0x2228	     0xf840d070000	                            je 0x400297b	       796	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	IF_54
0x222e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       797	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_75
0x2235	          0x4889c7	                            mov rdi, rax	       797	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_75
0x2238	      0xe800000000	                          call 0x400227d	       797	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_75
0x223d	      0xe9f9060000	                           jmp 0x400297b	       798	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53
0x2242	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x2249	      0xbe00000000	                              mov esi, 0	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x224e	          0x4889c7	                            mov rdi, rax	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x2251	      0xe800000000	                          call 0x4002296	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x2256	            0x85c0	                           test eax, eax	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x2258	            0x752e	                           jne 0x40022c8	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x225a	      0xe800000000	                          call 0x400229f	       801	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_77
0x225f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       801	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_77
0x2266	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       802	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	IF_56
0x226e	     0xf84ca060000	                            je 0x400297e	       802	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	IF_56
0x2274	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       803	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_78
0x227b	          0x4889c7	                            mov rdi, rax	       803	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_78
0x227e	      0xe800000000	                          call 0x40022c3	       803	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_78
0x2283	      0xe9b6060000	                           jmp 0x400297e	       804	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55
0x2288	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x228f	      0xbe00000000	                              mov esi, 0	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x2294	          0x4889c7	                            mov rdi, rax	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x2297	      0xe800000000	                          call 0x40022dc	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x229c	            0x85c0	                           test eax, eax	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x229e	            0x752d	                           jne 0x400230d	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x22a0	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       807	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	IF_58
0x22a8	            0x7414	                            je 0x40022fe	       807	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	IF_58
0x22aa	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       808	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_80
0x22b1	          0x4889c7	                            mov rdi, rax	       808	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_80
0x22b4	      0xe800000000	                          call 0x40022f9	       808	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_80
0x22b9	      0xe993060000	                           jmp 0x4002991	       811	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57
0x22be	      0xbf0a000000	                            mov edi, 0xa	       810	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_81
0x22c3	      0xe800000000	                          call 0x4002308	       810	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_81
0x22c8	      0xe984060000	                           jmp 0x4002991	       811	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57
0x22cd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_82
0x22d4	      0xbe00000000	                              mov esi, 0	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_82
0x22d9	          0x4889c7	                            mov rdi, rax	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_82
0x22dc	      0xe800000000	                          call 0x4002321	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_82
0x22e1	            0x85c0	                           test eax, eax	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_82
0x22e3	     0xf859a000000	                           jne 0x40023c3	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_82
0x22e9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       814	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59
0x22f0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       814	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59
0x22f7	      0xe800000000	                          call 0x400233c	       815	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_83
0x22fc	            0x85c0	                           test eax, eax	       815	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_83
0x22fe	            0x756a	                           jne 0x40023aa	       815	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_83
0x2300	      0xe800000000	                          call 0x4002345	       816	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x2305	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       816	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x230c	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       818	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	IF_61
0x2314	     0xf8427060000	                            je 0x4002981	       818	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	IF_61
0x231a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       819	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_85
0x2321	          0x4889c7	                            mov rdi, rax	       819	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_85
0x2324	      0xe800000000	                          call 0x4002369	       819	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_85
0x2329	      0xe913060000	                           jmp 0x4002981	       820	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x232e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_86
0x2335	      0xbe2f000000	                           mov esi, 0x2f	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_86
0x233a	          0x4889c7	                            mov rdi, rax	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_86
0x233d	      0xe800000000	                          call 0x4002382	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_86
0x2342	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_86
0x2349	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       824	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62
0x2351	            0x7417	                            je 0x40023aa	       824	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62
0x2353	    0x48838538ffff	               add qword [rbp - 0xc8], 1	       825	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62
0x235b	      0xbf00000000	                              mov edi, 0	       826	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62	CALL_87
0x2360	      0xb800000000	                              mov eax, 0	       826	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62	CALL_87
0x2365	      0xe800000000	                          call 0x40023aa	       826	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62	CALL_87
0x236a	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       822	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1
0x2372	            0x75ba	                           jne 0x400236e	       822	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1
0x2374	      0xbf0a000000	                            mov edi, 0xa	       829	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_88
0x2379	      0xe800000000	                          call 0x40023be	       829	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_88
0x237e	      0xe9ce050000	                           jmp 0x4002991	       830	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59
0x2383	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x238a	      0xbe00000000	                              mov esi, 0	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x238f	          0x4889c7	                            mov rdi, rax	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x2392	      0xe800000000	                          call 0x40023d7	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x2397	            0x85c0	                           test eax, eax	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x2399	            0x741c	                            je 0x40023f7	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x239b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_90
0x23a2	      0xbe00000000	                              mov esi, 0	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_90
0x23a7	          0x4889c7	                            mov rdi, rax	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_90
0x23aa	      0xe800000000	                          call 0x40023ef	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_90
0x23af	            0x85c0	                           test eax, eax	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x23b1	     0xf851f010000	                           jne 0x4002516	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x23b7	      0xbf00000000	                              mov edi, 0	       834	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_91
0x23bc	      0xe800000000	                          call 0x4002401	       834	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_91
0x23c1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       834	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_91
0x23c8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x23cf	        0x4883c002	                              add rax, 2	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x23d3	           0xfb600	                   movzx eax, byte [rax]	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x23d6	            0x3c67	                            cmp al, 0x67	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x23d8	            0x7537	                           jne 0x4002451	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x23da	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       838	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65
0x23e2	            0x7414	                            je 0x4002438	       838	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65
0x23e4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       839	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65	CALL_92
0x23eb	          0x4889c7	                            mov rdi, rax	       839	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65	CALL_92
0x23ee	      0xe800000000	                          call 0x4002433	       839	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65	CALL_92
0x23f3	      0xe959050000	                           jmp 0x4002991	       840	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65
0x23f8	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       842	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66
0x2400	            0x7554	                           jne 0x4002496	       842	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66
0x2402	      0xbf00000000	                              mov edi, 0	       843	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66	CALL_93
0x2407	      0xe800000000	                          call 0x400244c	       843	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66	CALL_93
0x240c	      0xe940050000	                           jmp 0x4002991	       844	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66
0x2411	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x2419	            0x7515	                           jne 0x4002470	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x241b	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x2423	            0x750b	                           jne 0x4002470	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x2425	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       848	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x2430	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       849	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68
0x2438	            0x741c	                            je 0x4002496	       849	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68
0x243a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_95
0x2441	          0x4889c7	                            mov rdi, rax	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_95
0x2444	      0xe800000000	                          call 0x4002489	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_95
0x2449	          0x4889c7	                            mov rdi, rax	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_95
0x244c	      0xe800000000	                          call 0x4002491	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_95
0x2451	      0xe9fb040000	                           jmp 0x4002991	       851	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68
0x2456	      0xe800000000	                          call 0x400249b	       854	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_96
0x245b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       854	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_96
0x2462	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x2469	          0x4889c7	                            mov rdi, rax	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x246c	      0xe800000000	                          call 0x40024b1	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x2471	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x2477	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x247e	            0x7424	                            je 0x40024e4	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x2480	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x2486	            0x4898	                                    cdqe	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x2488	        0x488d50ff	                      lea rdx, [rax - 1]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x248c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x2493	          0x4801d0	                            add rax, rdx	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x2496	           0xfb600	                   movzx eax, byte [rax]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x2499	            0x3c2f	                            cmp al, 0x2f	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x249b	            0x7407	                            je 0x40024e4	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x249d	      0xba00000000	                              mov edx, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24a2	            0xeb05	                           jmp 0x40024e9	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24a4	      0xba00000000	                              mov edx, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24a9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24b0	          0x4889c6	                            mov rsi, rax	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24b3	      0xbf00000000	                              mov edi, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24b8	      0xb800000000	                              mov eax, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24bd	      0xe800000000	                          call 0x4002502	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x24c2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       857	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_99
0x24c9	          0x4889c7	                            mov rdi, rax	       857	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_99
0x24cc	      0xe800000000	                          call 0x4002511	       857	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_99
0x24d1	      0xe97b040000	                           jmp 0x4002991	       858	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63
0x24d6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_100
0x24dd	      0xbe00000000	                              mov esi, 0	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_100
0x24e2	          0x4889c7	                            mov rdi, rax	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_100
0x24e5	      0xe800000000	                          call 0x400252a	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_100
0x24ea	            0x85c0	                           test eax, eax	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_100
0x24ec	            0x753c	                           jne 0x400256a	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_100
0x24ee	        0x488d4580	                   lea rax, [rbp - 0x80]	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_101
0x24f2	      0xbe00000000	                              mov esi, 0	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_101
0x24f7	          0x4889c7	                            mov rdi, rax	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_101
0x24fa	      0xe8eadbffff	                  call sym.strbuf_setlen	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_101
0x24ff	      0xe800000000	                          call 0x4002544	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x2504	          0x4889c1	                            mov rcx, rax	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x2507	        0x488d5580	                   lea rdx, [rbp - 0x80]	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x250b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x2512	          0x4889c6	                            mov rsi, rax	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x2515	          0x4889cf	                            mov rdi, rcx	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x2518	      0xe800000000	                          call 0x400255d	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x251d	          0x4889c7	                            mov rdi, rax	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x2520	      0xe800000000	                          call 0x4002565	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_104
0x2525	      0xe927040000	                           jmp 0x4002991	       864	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69
0x252a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x2531	      0xbe00000000	                              mov esi, 0	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x2536	          0x4889c7	                            mov rdi, rax	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x2539	      0xe800000000	                          call 0x400257e	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x253e	            0x85c0	                           test eax, eax	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x2540	            0x7522	                           jne 0x40025a4	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x2542	      0xe800000000	                          call 0x4002587	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x2547	            0x85c0	                           test eax, eax	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x2549	            0x7407	                            je 0x4002592	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x254b	      0xb800000000	                              mov eax, 0	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x2550	            0xeb05	                           jmp 0x4002597	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x2552	      0xb800000000	                              mov eax, 0	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x2557	          0x4889c7	                            mov rdi, rax	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x255a	      0xe800000000	                          call 0x400259f	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_107
0x255f	      0xe9ed030000	                           jmp 0x4002991	       869	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70
0x2564	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x256b	      0xbe00000000	                              mov esi, 0	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x2570	          0x4889c7	                            mov rdi, rax	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x2573	      0xe800000000	                          call 0x40025b8	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x2578	            0x85c0	                           test eax, eax	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x257a	            0x7522	                           jne 0x40025de	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x257c	      0xe800000000	                          call 0x40025c1	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x2581	            0x85c0	                           test eax, eax	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x2583	            0x7407	                            je 0x40025cc	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x2585	      0xb800000000	                              mov eax, 0	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x258a	            0xeb05	                           jmp 0x40025d1	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x258c	      0xb800000000	                              mov eax, 0	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x2591	          0x4889c7	                            mov rdi, rax	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x2594	      0xe800000000	                          call 0x40025d9	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_110
0x2599	      0xe9b3030000	                           jmp 0x4002991	       874	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71
0x259e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x25a5	      0xbe00000000	                              mov esi, 0	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x25aa	          0x4889c7	                            mov rdi, rax	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x25ad	      0xe800000000	                          call 0x40025f2	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x25b2	            0x85c0	                           test eax, eax	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x25b4	            0x7522	                           jne 0x4002618	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x25b6	      0xe800000000	                          call 0x40025fb	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25bb	            0x85c0	                           test eax, eax	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25bd	            0x7407	                            je 0x4002606	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25bf	      0xb800000000	                              mov eax, 0	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25c4	            0xeb05	                           jmp 0x400260b	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25c6	      0xb800000000	                              mov eax, 0	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25cb	          0x4889c7	                            mov rdi, rax	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25ce	      0xe800000000	                          call 0x4002613	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_113
0x25d3	      0xe979030000	                           jmp 0x4002991	       879	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72
0x25d8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x25df	      0xbe00000000	                              mov esi, 0	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x25e4	          0x4889c7	                            mov rdi, rax	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x25e7	      0xe800000000	                          call 0x400262c	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x25ec	            0x85c0	                           test eax, eax	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x25ee	            0x7522	                           jne 0x4002652	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x25f0	      0xe800000000	                          call 0x4002635	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x25f5	            0x85c0	                           test eax, eax	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x25f7	            0x7407	                            je 0x4002640	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x25f9	      0xb800000000	                              mov eax, 0	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x25fe	            0xeb05	                           jmp 0x4002645	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x2600	      0xb800000000	                              mov eax, 0	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x2605	          0x4889c7	                            mov rdi, rax	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x2608	      0xe800000000	                          call 0x400264d	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_116
0x260d	      0xe93f030000	                           jmp 0x4002991	       884	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73
0x2612	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_117
0x2619	      0xbe00000000	                              mov esi, 0	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_117
0x261e	          0x4889c7	                            mov rdi, rax	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_117
0x2621	      0xe800000000	                          call 0x4002666	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_117
0x2626	            0x85c0	                           test eax, eax	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_117
0x2628	     0xf85a6000000	                           jne 0x4002714	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_117
0x262e	      0xbf00000000	                              mov edi, 0	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_118
0x2633	      0xe800000000	                          call 0x4002678	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_118
0x2638	            0x85c0	                           test eax, eax	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_118
0x263a	            0x7917	                           jns 0x4002693	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_118
0x263c	      0xbf00000000	                              mov edi, 0	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_120
0x2641	      0xe8e0dbffff	                               call sym.	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_120
0x2646	          0x4889c7	                            mov rdi, rax	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_120
0x2649	      0xb800000000	                              mov eax, 0	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_120
0x264e	      0xe800000000	                          call 0x4002693	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_120
0x2653	    0x488b05000000	            mov rax, qword [0x0400269a] 	       889	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x265a	          0x4885c0	                           test rax, rax	       889	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x265d	     0xf84e1020000	                            je 0x4002984	       889	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x2663	    0x488b05000000	            mov rax, qword [0x040026aa] 	       890	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x266a	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       890	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x2671	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x2678	          0x4889c7	                            mov rdi, rax	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x267b	      0xe800000000	                          call 0x40026c0	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x2680	          0x4889c6	                            mov rsi, rax	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x2683	      0xbf00000000	                              mov edi, 0	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x2688	      0xb800000000	                              mov eax, 0	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x268d	      0xe800000000	                          call 0x40026d2	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x2692	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x2699	        0x488d4580	                   lea rax, [rbp - 0x80]	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_123
0x269d	      0xbe00000000	                              mov esi, 0	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_123
0x26a2	          0x4889c7	                            mov rdi, rax	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_123
0x26a5	      0xe83fdaffff	                  call sym.strbuf_setlen	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_123
0x26aa	        0x488d5580	                   lea rdx, [rbp - 0x80]	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26ae	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26b5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26bc	          0x4889ce	                            mov rsi, rcx	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26bf	          0x4889c7	                            mov rdi, rax	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26c2	      0xe800000000	                          call 0x4002707	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26c7	          0x4889c7	                            mov rdi, rax	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26ca	      0xe800000000	                          call 0x400270f	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_125
0x26cf	      0xe970020000	                           jmp 0x4002984	       895	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74
0x26d4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_126
0x26db	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_126
0x26e2	      0xbe00000000	                              mov esi, 0	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_126
0x26e7	          0x4889c7	                            mov rdi, rax	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_126
0x26ea	      0xe81cd9ffff	                    call sym.skip_prefix	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_126
0x26ef	            0x85c0	                           test eax, eax	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_126
0x26f1	            0x7419	                            je 0x400274c	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_126
0x26f3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_127
0x26fa	          0x4889c6	                            mov rsi, rax	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_127
0x26fd	      0xbf00000000	                              mov edi, 0	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_127
0x2702	      0xe8fadfffff	                call sym.show_datestring	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_127
0x2707	      0xe945020000	                           jmp 0x4002991	       899	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77
0x270c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_128
0x2713	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_128
0x271a	      0xbe00000000	                              mov esi, 0	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_128
0x271f	          0x4889c7	                            mov rdi, rax	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_128
0x2722	      0xe8e4d8ffff	                    call sym.skip_prefix	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_128
0x2727	            0x85c0	                           test eax, eax	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_128
0x2729	            0x7419	                            je 0x4002784	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_128
0x272b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_129
0x2732	          0x4889c6	                            mov rsi, rax	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_129
0x2735	      0xbf00000000	                              mov edi, 0	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_129
0x273a	      0xe8c2dfffff	                call sym.show_datestring	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_129
0x273f	      0xe90d020000	                           jmp 0x4002991	       903	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78
0x2744	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_130
0x274b	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_130
0x2752	      0xbe00000000	                              mov esi, 0	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_130
0x2757	          0x4889c7	                            mov rdi, rax	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_130
0x275a	      0xe8acd8ffff	                    call sym.skip_prefix	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_130
0x275f	            0x85c0	                           test eax, eax	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_130
0x2761	            0x7419	                            je 0x40027bc	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_130
0x2763	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_131
0x276a	          0x4889c6	                            mov rsi, rax	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_131
0x276d	      0xbf00000000	                              mov edi, 0	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_131
0x2772	      0xe88adfffff	                call sym.show_datestring	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_131
0x2777	      0xe9d5010000	                           jmp 0x4002991	       907	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79
0x277c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_132
0x2783	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_132
0x278a	      0xbe00000000	                              mov esi, 0	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_132
0x278f	          0x4889c7	                            mov rdi, rax	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_132
0x2792	      0xe874d8ffff	                    call sym.skip_prefix	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_132
0x2797	            0x85c0	                           test eax, eax	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_132
0x2799	            0x7419	                            je 0x40027f4	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_132
0x279b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_133
0x27a2	          0x4889c6	                            mov rsi, rax	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_133
0x27a5	      0xbf00000000	                              mov edi, 0	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_133
0x27aa	      0xe852dfffff	                call sym.show_datestring	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_133
0x27af	      0xe99d010000	                           jmp 0x4002991	       911	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80
0x27b4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_134
0x27bb	          0x4889c7	                            mov rdi, rax	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_134
0x27be	      0xe8a6ddffff	                      call sym.show_flag	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_134
0x27c3	            0x85c0	                           test eax, eax	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_134
0x27c5	     0xf847c010000	                            je 0x4002987	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_134
0x27cb	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_134
0x27d2	     0xf846f010000	                            je 0x4002987	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_134
0x27d8	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	       914	rev-parse.c	FUNCTION_22	FOR_2	IF_20	CALL_135
0x27de	            0x89c7	                            mov edi, eax	       914	rev-parse.c	FUNCTION_22	FOR_2	IF_20	CALL_135
0x27e0	      0xe85eedffff	              call sym.die_no_single_rev	       914	rev-parse.c	FUNCTION_22	FOR_2	IF_20	CALL_135
0x27e5	      0xe95d010000	                           jmp 0x4002987	       915	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x27ea	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_136
0x27f1	          0x4889c7	                            mov rdi, rax	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_136
0x27f4	      0xe8f3dfffff	                 call sym.try_difference	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_136
0x27f9	            0x85c0	                           test eax, eax	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_136
0x27fb	     0xf8549010000	                           jne 0x400298a	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_136
0x2801	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_137
0x2808	          0x4889c7	                            mov rdi, rax	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_137
0x280b	      0xe8bbe1ffff	          call sym.try_parent_shorthands	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_137
0x2810	            0x85c0	                           test eax, eax	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_137
0x2812	     0xf8535010000	                           jne 0x400298d	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_137
0x2818	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       923	rev-parse.c	FUNCTION_22	FOR_2
0x281f	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       923	rev-parse.c	FUNCTION_22	FOR_2
0x2826	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	       924	rev-parse.c	FUNCTION_22	FOR_2
0x2830	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x2837	           0xfb600	                   movzx eax, byte [rax]	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x283a	            0x3c5e	                            cmp al, 0x5e	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x283c	            0x7512	                           jne 0x4002890	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x283e	    0x48838530ffff	               add qword [rbp - 0xd0], 1	       926	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x2846	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	       927	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x2850	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x2854	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x2858	    0x8bb51cffffff	             mov esi, dword [rbp - 0xe4]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x285e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x2865	          0x4889c7	                            mov rdi, rax	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x2868	      0xe800000000	                          call 0x40028ad	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x286d	            0x85c0	                           test eax, eax	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x286f	            0x7535	                           jne 0x40028e6	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_138
0x2871	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       930	rev-parse.c	FUNCTION_22	FOR_2	IF_85	IF_86
0x2878	            0x740c	                            je 0x40028c6	       930	rev-parse.c	FUNCTION_22	FOR_2	IF_85	IF_86
0x287a	    0x838508ffffff	               add dword [rbp - 0xf8], 1	       931	rev-parse.c	FUNCTION_22	FOR_2	IF_85	IF_86
0x2881	      0xe9cb000000	                           jmp 0x4002991	       934	rev-parse.c	FUNCTION_22	FOR_2	IF_85
0x2886	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_139
0x288d	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_139
0x2891	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_139
0x2897	          0x4889ce	                            mov rsi, rcx	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_139
0x289a	            0x89c7	                            mov edi, eax	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_139
0x289c	      0xe849dbffff	                       call sym.show_rev	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_139
0x28a1	      0xe9ab000000	                           jmp 0x4002991	       934	rev-parse.c	FUNCTION_22	FOR_2	IF_85
0x28a6	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       936	rev-parse.c	FUNCTION_22	FOR_2	IF_87
0x28ad	            0x740d	                            je 0x40028fc	       936	rev-parse.c	FUNCTION_22	FOR_2	IF_87
0x28af	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	       937	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x28b5	            0x89c7	                            mov edi, eax	       937	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x28b7	      0xe887ecffff	              call sym.die_no_single_rev	       937	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x28bc	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	       938	rev-parse.c	FUNCTION_22	FOR_2	IF_88
0x28c3	            0x7419	                            je 0x400291e	       938	rev-parse.c	FUNCTION_22	FOR_2	IF_88
0x28c5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_141
0x28cc	          0x4889c6	                            mov rsi, rax	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_141
0x28cf	      0xbf00000000	                              mov edi, 0	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_141
0x28d4	      0xb800000000	                              mov eax, 0	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_141
0x28d9	      0xe800000000	                          call 0x400291e	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_141
0x28de	    0xc785fcfeffff	              mov dword [rbp - 0x104], 1	       940	rev-parse.c	FUNCTION_22	FOR_2
0x28e8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_142
0x28ef	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_142
0x28f5	            0x89d6	                            mov esi, edx	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_142
0x28f7	          0x4889c7	                            mov rdi, rax	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_142
0x28fa	      0xe86bdeffff	                      call sym.show_file	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_142
0x28ff	            0x85c0	                           test eax, eax	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_142
0x2901	            0x744d	                            je 0x4002990	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_142
0x2903	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_143
0x290a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_143
0x2911	      0xba01000000	                              mov edx, 1	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_143
0x2916	          0x4889ce	                            mov rsi, rcx	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_143
0x2919	          0x4889c7	                            mov rdi, rax	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_143
0x291c	      0xe800000000	                          call 0x4002961	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_143
0x2921	            0xeb2e	                           jmp 0x4002991	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_143
0x2923	              0x90	                                     nop	       653	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x2924	            0xeb2b	                           jmp 0x4002991	       653	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x2926	              0x90	                                     nop	       662	rev-parse.c	FUNCTION_22	FOR_2	IF_15
0x2927	            0xeb28	                           jmp 0x4002991	       662	rev-parse.c	FUNCTION_22	FOR_2	IF_15
0x2929	              0x90	                                     nop	       667	rev-parse.c	FUNCTION_22	FOR_2	IF_18
0x292a	            0xeb25	                           jmp 0x4002991	       667	rev-parse.c	FUNCTION_22	FOR_2	IF_18
0x292c	              0x90	                                     nop	       676	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x292d	            0xeb22	                           jmp 0x4002991	       676	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x292f	              0x90	                                     nop	       682	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x2930	            0xeb1f	                           jmp 0x4002991	       682	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x2932	              0x90	                                     nop	       723	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x2933	            0xeb1c	                           jmp 0x4002991	       723	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x2935	              0x90	                                     nop	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x2936	            0xeb19	                           jmp 0x4002991	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x2938	              0x90	                                     nop	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x2939	            0xeb16	                           jmp 0x4002991	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x293b	              0x90	                                     nop	       798	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53
0x293c	            0xeb13	                           jmp 0x4002991	       798	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53
0x293e	              0x90	                                     nop	       804	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55
0x293f	            0xeb10	                           jmp 0x4002991	       804	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55
0x2941	              0x90	                                     nop	       820	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x2942	            0xeb0d	                           jmp 0x4002991	       820	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x2944	              0x90	                                     nop	       895	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74
0x2945	            0xeb0a	                           jmp 0x4002991	       895	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74
0x2947	              0x90	                                     nop	       915	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x2948	            0xeb07	                           jmp 0x4002991	       915	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x294a	              0x90	                                     nop	       920	rev-parse.c	FUNCTION_22	FOR_2	IF_82
0x294b	            0xeb04	                           jmp 0x4002991	       920	rev-parse.c	FUNCTION_22	FOR_2	IF_82
0x294d	              0x90	                                     nop	       922	rev-parse.c	FUNCTION_22	FOR_2	IF_83
0x294e	            0xeb01	                           jmp 0x4002991	       922	rev-parse.c	FUNCTION_22	FOR_2	IF_83
0x2950	              0x90	                                     nop	       942	rev-parse.c	FUNCTION_22	FOR_2	IF_89
0x2951	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       614	rev-parse.c	FUNCTION_22	FOR_2
0x2958	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       614	rev-parse.c	FUNCTION_22	FOR_2
0x295e	    0x3b85ecfeffff	            cmp eax, dword [rbp - 0x114]	       614	rev-parse.c	FUNCTION_22	FOR_2
0x2964	     0xf8cdceeffff	                            jl 0x4001886	       614	rev-parse.c	FUNCTION_22	FOR_2
0x296a	        0x488d4580	                   lea rax, [rbp - 0x80]	       945	rev-parse.c	FUNCTION_22	CALL_144
0x296e	          0x4889c7	                            mov rdi, rax	       945	rev-parse.c	FUNCTION_22	CALL_144
0x2971	      0xe800000000	                          call 0x40029b6	       945	rev-parse.c	FUNCTION_22	CALL_144
0x2976	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       946	rev-parse.c	FUNCTION_22	IF_90
0x297d	            0x7453	                            je 0x4002a12	       946	rev-parse.c	FUNCTION_22	IF_90
0x297f	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 1	       947	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x2986	            0x7522	                           jne 0x40029ea	       947	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x2988	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_145
0x298f	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_145
0x2993	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_145
0x2999	          0x4889ce	                            mov rsi, rcx	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_145
0x299c	            0x89c7	                            mov edi, eax	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_145
0x299e	      0xe847daffff	                       call sym.show_rev	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_145
0x29a3	      0xb800000000	                              mov eax, 0	       949	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x29a8	            0xeb32	                           jmp 0x4002a1c	       949	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x29aa	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_146
0x29b1	            0x7510	                           jne 0x4002a03	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_146
0x29b3	      0xe813dcffff	                   call sym.show_default	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_146
0x29b8	            0x85c0	                           test eax, eax	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_146
0x29ba	            0x7407	                            je 0x4002a03	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_146
0x29bc	      0xb800000000	                              mov eax, 0	       951	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92
0x29c1	            0xeb19	                           jmp 0x4002a1c	       951	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92
0x29c3	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_147
0x29c9	            0x89c7	                            mov edi, eax	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_147
0x29cb	      0xe873ebffff	              call sym.die_no_single_rev	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_147
0x29d0	            0xeb05	                           jmp 0x4002a17	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_147
0x29d2	      0xe8f4dbffff	                   call sym.show_default	       954	rev-parse.c	FUNCTION_22	CALL_148
0x29d7	      0xb800000000	                              mov eax, 0	       955	rev-parse.c	FUNCTION_22
0x29dc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       956	rev-parse.c	FUNCTION_22
0x29e0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       956	rev-parse.c	FUNCTION_22
0x29e9	            0x7405	                            je 0x4002a30	       956	rev-parse.c	FUNCTION_22
0x29eb	      0xe800000000	                          call 0x4002a30	       956	rev-parse.c	FUNCTION_22
0x29f0	              0xc9	                                   leave	       956	rev-parse.c	FUNCTION_22
0x29f1	              0xc3	                                     ret	       956	rev-parse.c	FUNCTION_22
show_default	CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,2:ELSE,0:DO,0:functions,0	32
0x5cb	              0x55	                                push rbp	       180	rev-parse.c	FUNCTION_6
0x5cc	          0x4889e5	                            mov rbp, rsp	       180	rev-parse.c	FUNCTION_6
0x5cf	        0x4883ec30	                           sub rsp, 0x30	       180	rev-parse.c	FUNCTION_6
0x5d3	    0x64488b042528	                mov rax, qword fs:[0x28]	       180	rev-parse.c	FUNCTION_6
0x5dc	        0x488945f8	                mov qword [rbp - 8], rax	       180	rev-parse.c	FUNCTION_6
0x5e0	            0x31c0	                            xor eax, eax	       180	rev-parse.c	FUNCTION_6
0x5e2	    0x488b05000000	            mov rax, qword [0x04000629] 	       181	rev-parse.c	FUNCTION_6
0x5e9	        0x488945d8	             mov qword [rbp - 0x28], rax	       181	rev-parse.c	FUNCTION_6
0x5ed	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       183	rev-parse.c	FUNCTION_6	IF_1
0x5f2	            0x743e	                            je 0x4000672	       183	rev-parse.c	FUNCTION_6	IF_1
0x5f4	    0x48c705000000	               mov qword [0x0400063f], 0	       186	rev-parse.c	FUNCTION_6	IF_1
0x5ff	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x603	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x607	          0x4889d6	                            mov rsi, rdx	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x60a	          0x4889c7	                            mov rdi, rax	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x60d	      0xe800000000	                          call 0x4000652	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x612	            0x85c0	                           test eax, eax	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x614	            0x751c	                           jne 0x4000672	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x616	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x61a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x61e	          0x4889c6	                            mov rsi, rax	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x621	      0xbf00000000	                              mov edi, 0	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x626	      0xe8bffdffff	                       call sym.show_rev	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x62b	      0xb801000000	                              mov eax, 1	       189	rev-parse.c	FUNCTION_6	IF_1	IF_2
0x630	            0xeb05	                           jmp 0x4000677	       189	rev-parse.c	FUNCTION_6	IF_1	IF_2
0x632	      0xb800000000	                              mov eax, 0	       192	rev-parse.c	FUNCTION_6
0x637	        0x488b4df8	                mov rcx, qword [rbp - 8]	       193	rev-parse.c	FUNCTION_6
0x63b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       193	rev-parse.c	FUNCTION_6
0x644	            0x7405	                            je 0x400068b	       193	rev-parse.c	FUNCTION_6
0x646	      0xe800000000	                          call 0x400068b	       193	rev-parse.c	FUNCTION_6
0x64b	              0xc9	                                   leave	       193	rev-parse.c	FUNCTION_6
0x64c	              0xc3	                                     ret	       193	rev-parse.c	FUNCTION_6
