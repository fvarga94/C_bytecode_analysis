remove_temporary_files	functions,0:IF,2:DO,0:CALL,7:ELSE,0:SWITCH,0:FOR,0:WHILE,1	44
0x303	              0x55	                                push rbp	        86	prune.c	FUNCTION_5
0x304	          0x4889e5	                            mov rbp, rsp	        86	prune.c	FUNCTION_5
0x307	        0x4883ec20	                           sub rsp, 0x20	        86	prune.c	FUNCTION_5
0x30b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	prune.c	FUNCTION_5
0x30f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	prune.c	FUNCTION_5	CALL_1
0x313	          0x4889c7	                            mov rdi, rax	        90	prune.c	FUNCTION_5	CALL_1
0x316	      0xe800000000	                          call 0x400035b	        90	prune.c	FUNCTION_5	CALL_1
0x31b	        0x488945f0	             mov qword [rbp - 0x10], rax	        90	prune.c	FUNCTION_5	CALL_1
0x31f	      0x48837df000	               cmp qword [rbp - 0x10], 0	        91	prune.c	FUNCTION_5	IF_1
0x324	            0x755e	                           jne 0x40003c4	        91	prune.c	FUNCTION_5	IF_1
0x326	    0x488b05000000	            mov rax, qword [0x0400036d] 	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x32d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x331	      0xbe00000000	                              mov esi, 0	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x336	          0x4889c7	                            mov rdi, rax	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x339	      0xb800000000	                              mov eax, 0	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x33e	      0xe800000000	                          call 0x4000383	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x343	            0xeb62	                           jmp 0x40003e7	        93	prune.c	FUNCTION_5	IF_1
0x345	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x349	        0x4883c013	                           add rax, 0x13	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x34d	      0xbe00000000	                              mov esi, 0	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x352	          0x4889c7	                            mov rdi, rax	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x355	      0xe800000000	                          call 0x400039a	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x35a	            0x85c0	                           test eax, eax	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x35c	            0x7426	                            je 0x40003c4	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x35e	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x362	        0x488d5013	                   lea rdx, [rax + 0x13]	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x366	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x36a	          0x4889c6	                            mov rsi, rax	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x36d	      0xbf00000000	                              mov edi, 0	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x372	      0xb800000000	                              mov eax, 0	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x377	      0xe800000000	                          call 0x40003bc	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x37c	          0x4889c7	                            mov rdi, rax	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x37f	      0xe8b3fcffff	                 call sym.prune_tmp_file	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x384	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x388	          0x4889c7	                            mov rdi, rax	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x38b	      0xe800000000	                          call 0x40003d0	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x390	        0x488945f8	                mov qword [rbp - 8], rax	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x394	      0x48837df800	                  cmp qword [rbp - 8], 0	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x399	            0x75aa	                           jne 0x4000385	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x39b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        98	prune.c	FUNCTION_5	CALL_7
0x39f	          0x4889c7	                            mov rdi, rax	        98	prune.c	FUNCTION_5	CALL_7
0x3a2	      0xe800000000	                          call 0x40003e7	        98	prune.c	FUNCTION_5	CALL_7
0x3a7	              0xc9	                                   leave	        99	prune.c	FUNCTION_5
0x3a8	              0xc3	                                     ret	        99	prune.c	FUNCTION_5
prune_object	functions,0:IF,5:DO,0:CALL,8:ELSE,0:SWITCH,0:FOR,0:WHILE,0	83
0x110	              0x55	                                push rbp	        35	prune.c	FUNCTION_2
0x111	          0x4889e5	                            mov rbp, rsp	        35	prune.c	FUNCTION_2
0x114	              0x53	                                push rbx	        35	prune.c	FUNCTION_2
0x115	    0x4881ecd80000	                           sub rsp, 0xd8	        35	prune.c	FUNCTION_2
0x11c	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	        35	prune.c	FUNCTION_2
0x123	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	        35	prune.c	FUNCTION_2
0x12a	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	        35	prune.c	FUNCTION_2
0x131	    0x64488b042528	                mov rax, qword fs:[0x28]	        35	prune.c	FUNCTION_2
0x13a	        0x488945e8	             mov qword [rbp - 0x18], rax	        35	prune.c	FUNCTION_2
0x13e	            0x31c0	                            xor eax, eax	        35	prune.c	FUNCTION_2
0x140	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x147	          0x4889c7	                            mov rdi, rax	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x14a	      0xe800000000	                          call 0x400018f	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x14f	          0x4885c0	                           test rax, rax	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x152	            0x740a	                            je 0x400019e	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x154	      0xb800000000	                              mov eax, 0	        43	prune.c	FUNCTION_2	IF_1
0x159	      0xe9fc000000	                           jmp 0x400029a	        43	prune.c	FUNCTION_2	IF_1
0x15e	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	        45	prune.c	FUNCTION_2	IF_2	CALL_2
0x165	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        45	prune.c	FUNCTION_2	IF_2	CALL_2
0x16c	          0x4889d6	                            mov rsi, rdx	        45	prune.c	FUNCTION_2	IF_2	CALL_2
0x16f	          0x4889c7	                            mov rdi, rax	        45	prune.c	FUNCTION_2	IF_2	CALL_2
0x172	      0xe800000000	                          call 0x40001b7	        45	prune.c	FUNCTION_2	IF_2	CALL_2
0x177	            0x85c0	                           test eax, eax	        45	prune.c	FUNCTION_2	IF_2	CALL_2
0x179	            0x7428	                            je 0x40001e3	        45	prune.c	FUNCTION_2	IF_2	CALL_2
0x17b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        47	prune.c	FUNCTION_2	IF_2	CALL_3
0x182	          0x4889c6	                            mov rsi, rax	        47	prune.c	FUNCTION_2	IF_2	CALL_3
0x185	      0xbf00000000	                              mov edi, 0	        47	prune.c	FUNCTION_2	IF_2	CALL_3
0x18a	      0xb800000000	                              mov eax, 0	        47	prune.c	FUNCTION_2	IF_2	CALL_3
0x18f	      0xe800000000	                          call 0x40001d4	        47	prune.c	FUNCTION_2	IF_2	CALL_3
0x194	      0xe867feffff	                    call sym.const_error	        47	prune.c	FUNCTION_2	IF_2	CALL_3
0x199	      0xb800000000	                              mov eax, 0	        48	prune.c	FUNCTION_2	IF_2
0x19e	      0xe9b7000000	                           jmp 0x400029a	        48	prune.c	FUNCTION_2	IF_2
0x1a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        50	prune.c	FUNCTION_2	IF_3
0x1a7	          0x4889c2	                            mov rdx, rax	        50	prune.c	FUNCTION_2	IF_3
0x1aa	    0x488b05000000	            mov rax, qword [0x040001f1] 	        50	prune.c	FUNCTION_2	IF_3
0x1b1	          0x4839c2	                            cmp rdx, rax	        50	prune.c	FUNCTION_2	IF_3
0x1b4	            0x760a	                           jbe 0x4000200	        50	prune.c	FUNCTION_2	IF_3
0x1b6	      0xb800000000	                              mov eax, 0	        51	prune.c	FUNCTION_2	IF_3
0x1bb	      0xe99a000000	                           jmp 0x400029a	        51	prune.c	FUNCTION_2	IF_3
0x1c0	    0x8b0500000000	            mov eax, dword [0x04000206] 	        52	prune.c	FUNCTION_2	IF_4
0x1c6	            0x85c0	                           test eax, eax	        52	prune.c	FUNCTION_2	IF_4
0x1c8	            0x750a	                           jne 0x4000214	        52	prune.c	FUNCTION_2	IF_4
0x1ca	    0x8b0500000000	            mov eax, dword [0x04000210] 	        52	prune.c	FUNCTION_2	IF_4
0x1d0	            0x85c0	                           test eax, eax	        52	prune.c	FUNCTION_2	IF_4
0x1d2	            0x7468	                            je 0x400027c	        52	prune.c	FUNCTION_2	IF_4
0x1d4	    0x488b05000000	            mov rax, qword [0x0400021b] 	        53	prune.c	FUNCTION_2	IF_4	CALL_4
0x1db	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	        53	prune.c	FUNCTION_2	IF_4	CALL_4
0x1e2	      0xba00000000	                              mov edx, 0	        53	prune.c	FUNCTION_2	IF_4	CALL_4
0x1e7	          0x4889ce	                            mov rsi, rcx	        53	prune.c	FUNCTION_2	IF_4	CALL_4
0x1ea	          0x4889c7	                            mov rdi, rax	        53	prune.c	FUNCTION_2	IF_4	CALL_4
0x1ed	      0xe800000000	                          call 0x4000232	        53	prune.c	FUNCTION_2	IF_4	CALL_4
0x1f2	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	        53	prune.c	FUNCTION_2	IF_4	CALL_4
0x1f8	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x1ff	            0x7e12	                           jle 0x4000253	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x201	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	        56	prune.c	FUNCTION_2	IF_4	CALL_7
0x207	            0x89c7	                            mov edi, eax	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x209	      0xe800000000	                          call 0x400024e	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x20e	          0x4889c3	                            mov rbx, rax	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x211	            0xeb05	                           jmp 0x4000258	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x213	      0xbb00000000	                              mov ebx, 0	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x218	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x21f	          0x4889c7	                            mov rdi, rax	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x222	      0xe800000000	                          call 0x4000267	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x227	          0x4889da	                            mov rdx, rbx	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x22a	          0x4889c6	                            mov rsi, rax	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x22d	      0xbf00000000	                              mov edi, 0	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x232	      0xb800000000	                              mov eax, 0	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x237	      0xe800000000	                          call 0x400027c	        55	prune.c	FUNCTION_2	IF_4	CALL_6
0x23c	    0x8b0500000000	            mov eax, dword [0x04000282] 	        58	prune.c	FUNCTION_2	IF_5
0x242	            0x85c0	                           test eax, eax	        58	prune.c	FUNCTION_2	IF_5
0x244	            0x750f	                           jne 0x4000295	        58	prune.c	FUNCTION_2	IF_5
0x246	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        59	prune.c	FUNCTION_2	CALL_8
0x24d	          0x4889c7	                            mov rdi, rax	        59	prune.c	FUNCTION_2	CALL_8
0x250	      0xe800000000	                          call 0x4000295	        59	prune.c	FUNCTION_2	CALL_8
0x255	      0xb800000000	                              mov eax, 0	        60	prune.c	FUNCTION_2
0x25a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        61	prune.c	FUNCTION_2
0x25e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        61	prune.c	FUNCTION_2
0x267	            0x7405	                            je 0x40002ae	        61	prune.c	FUNCTION_2
0x269	      0xe800000000	                          call 0x40002ae	        61	prune.c	FUNCTION_2
0x26e	    0x4881c4d80000	                           add rsp, 0xd8	        61	prune.c	FUNCTION_2
0x275	              0x5b	                                 pop rbx	        61	prune.c	FUNCTION_2
0x276	              0x5d	                                 pop rbp	        61	prune.c	FUNCTION_2
0x277	              0xc3	                                     ret	        61	prune.c	FUNCTION_2
prune_tmp_file	functions,0:IF,4:DO,0:CALL,4:ELSE,0:SWITCH,0:FOR,0:WHILE,0	52
0x37	              0x55	                                push rbp	        20	prune.c	FUNCTION_1
0x38	          0x4889e5	                            mov rbp, rsp	        20	prune.c	FUNCTION_1
0x3b	    0x4881ecb00000	                           sub rsp, 0xb0	        20	prune.c	FUNCTION_1
0x42	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	        20	prune.c	FUNCTION_1
0x49	    0x64488b042528	                mov rax, qword fs:[0x28]	        20	prune.c	FUNCTION_1
0x52	        0x488945f8	                mov qword [rbp - 8], rax	        20	prune.c	FUNCTION_1
0x56	            0x31c0	                            xor eax, eax	        20	prune.c	FUNCTION_1
0x58	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        22	prune.c	FUNCTION_1	IF_1	CALL_1
0x5f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        22	prune.c	FUNCTION_1	IF_1	CALL_1
0x66	          0x4889d6	                            mov rsi, rdx	        22	prune.c	FUNCTION_1	IF_1	CALL_1
0x69	          0x4889c7	                            mov rdi, rax	        22	prune.c	FUNCTION_1	IF_1	CALL_1
0x6c	      0xe800000000	                          call 0x40000b1	        22	prune.c	FUNCTION_1	IF_1	CALL_1
0x71	            0x85c0	                           test eax, eax	        22	prune.c	FUNCTION_1	IF_1	CALL_1
0x73	            0x7420	                            je 0x40000d5	        22	prune.c	FUNCTION_1	IF_1	CALL_1
0x75	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        23	prune.c	FUNCTION_1	CALL_2
0x7c	          0x4889c6	                            mov rsi, rax	        23	prune.c	FUNCTION_1	CALL_2
0x7f	      0xbf00000000	                              mov edi, 0	        23	prune.c	FUNCTION_1	CALL_2
0x84	      0xb800000000	                              mov eax, 0	        23	prune.c	FUNCTION_1	CALL_2
0x89	      0xe800000000	                          call 0x40000ce	        23	prune.c	FUNCTION_1	CALL_2
0x8e	      0xe86dffffff	                    call sym.const_error	        23	prune.c	FUNCTION_1	CALL_2
0x93	            0xeb65	                           jmp 0x400013a	        23	prune.c	FUNCTION_1	CALL_2
0x95	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        24	prune.c	FUNCTION_1	IF_2
0x99	          0x4889c2	                            mov rdx, rax	        24	prune.c	FUNCTION_1	IF_2
0x9c	    0x488b05000000	            mov rax, qword [0x040000e3] 	        24	prune.c	FUNCTION_1	IF_2
0xa3	          0x4839c2	                            cmp rdx, rax	        24	prune.c	FUNCTION_1	IF_2
0xa6	            0x7607	                           jbe 0x40000ef	        24	prune.c	FUNCTION_1	IF_2
0xa8	      0xb800000000	                              mov eax, 0	        25	prune.c	FUNCTION_1	IF_2
0xad	            0xeb4b	                           jmp 0x400013a	        25	prune.c	FUNCTION_1	IF_2
0xaf	    0x8b0500000000	            mov eax, dword [0x040000f5] 	        26	prune.c	FUNCTION_1	IF_3
0xb5	            0x85c0	                           test eax, eax	        26	prune.c	FUNCTION_1	IF_3
0xb7	            0x750a	                           jne 0x4000103	        26	prune.c	FUNCTION_1	IF_3
0xb9	    0x8b0500000000	            mov eax, dword [0x040000ff] 	        26	prune.c	FUNCTION_1	IF_3
0xbf	            0x85c0	                           test eax, eax	        26	prune.c	FUNCTION_1	IF_3
0xc1	            0x7419	                            je 0x400011c	        26	prune.c	FUNCTION_1	IF_3
0xc3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        27	prune.c	FUNCTION_1	CALL_3
0xca	          0x4889c6	                            mov rsi, rax	        27	prune.c	FUNCTION_1	CALL_3
0xcd	      0xbf00000000	                              mov edi, 0	        27	prune.c	FUNCTION_1	CALL_3
0xd2	      0xb800000000	                              mov eax, 0	        27	prune.c	FUNCTION_1	CALL_3
0xd7	      0xe800000000	                          call 0x400011c	        27	prune.c	FUNCTION_1	CALL_3
0xdc	    0x8b0500000000	            mov eax, dword [0x04000122] 	        28	prune.c	FUNCTION_1	IF_4
0xe2	            0x85c0	                           test eax, eax	        28	prune.c	FUNCTION_1	IF_4
0xe4	            0x750f	                           jne 0x4000135	        28	prune.c	FUNCTION_1	IF_4
0xe6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        29	prune.c	FUNCTION_1	CALL_4
0xed	          0x4889c7	                            mov rdi, rax	        29	prune.c	FUNCTION_1	CALL_4
0xf0	      0xe800000000	                          call 0x4000135	        29	prune.c	FUNCTION_1	CALL_4
0xf5	      0xb800000000	                              mov eax, 0	        30	prune.c	FUNCTION_1
0xfa	        0x488b4df8	                mov rcx, qword [rbp - 8]	        31	prune.c	FUNCTION_1
0xfe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        31	prune.c	FUNCTION_1
0x107	            0x7405	                            je 0x400014e	        31	prune.c	FUNCTION_1
0x109	      0xe800000000	                          call 0x400014e	        31	prune.c	FUNCTION_1
0x10e	              0xc9	                                   leave	        31	prune.c	FUNCTION_1
0x10f	              0xc3	                                     ret	        31	prune.c	FUNCTION_1
const_error	functions,0:IF,0:DO,0:CALL,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_12
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_12
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_12
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_12
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_12
_	functions,0:IF,1:DO,0:CALL,2:ELSE,0:SWITCH,0:FOR,0:WHILE,0	15
0xb	              0x55	                                push rbp	        51	gettext.h	FUNCTION_36
0xc	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_36
0xf	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_36
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_36
0x17	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_36	IF_1
0x1b	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_36	IF_1
0x1e	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_36	IF_1
0x20	            0x7507	                           jne 0x4000069	        52	gettext.h	FUNCTION_36	IF_1
0x22	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_36	IF_1
0x27	            0xeb0c	                           jmp 0x4000075	        53	gettext.h	FUNCTION_36	IF_1
0x29	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_36	CALL_2
0x2d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_36	CALL_2
0x30	      0xe800000000	                          call 0x4000075	        54	gettext.h	FUNCTION_36	CALL_2
0x35	              0xc9	                                   leave	        55	gettext.h	FUNCTION_36
0x36	              0xc3	                                     ret	        55	gettext.h	FUNCTION_36
prune_subdir	functions,0:IF,1:DO,0:CALL,1:ELSE,0:SWITCH,0:FOR,0:WHILE,0	15
0x2d3	              0x55	                                push rbp	        73	prune.c	FUNCTION_4
0x2d4	          0x4889e5	                            mov rbp, rsp	        73	prune.c	FUNCTION_4
0x2d7	        0x4883ec20	                           sub rsp, 0x20	        73	prune.c	FUNCTION_4
0x2db	          0x897dfc	                mov dword [rbp - 4], edi	        73	prune.c	FUNCTION_4
0x2de	        0x488975f0	             mov qword [rbp - 0x10], rsi	        73	prune.c	FUNCTION_4
0x2e2	        0x488955e8	             mov qword [rbp - 0x18], rdx	        73	prune.c	FUNCTION_4
0x2e6	    0x8b0500000000	            mov eax, dword [0x0400032c] 	        74	prune.c	FUNCTION_4	IF_1
0x2ec	            0x85c0	                           test eax, eax	        74	prune.c	FUNCTION_4	IF_1
0x2ee	            0x750c	                           jne 0x400033c	        74	prune.c	FUNCTION_4	IF_1
0x2f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        75	prune.c	FUNCTION_4	CALL_1
0x2f4	          0x4889c7	                            mov rdi, rax	        75	prune.c	FUNCTION_4	CALL_1
0x2f7	      0xe800000000	                          call 0x400033c	        75	prune.c	FUNCTION_4	CALL_1
0x2fc	      0xb800000000	                              mov eax, 0	        76	prune.c	FUNCTION_4
0x301	              0xc9	                                   leave	        77	prune.c	FUNCTION_4
0x302	              0xc3	                                     ret	        77	prune.c	FUNCTION_4
prune_cruft	functions,0:IF,1:DO,0:CALL,3:ELSE,1:SWITCH,0:FOR,0:WHILE,0	25
0x278	              0x55	                                push rbp	        64	prune.c	FUNCTION_3
0x279	          0x4889e5	                            mov rbp, rsp	        64	prune.c	FUNCTION_3
0x27c	        0x4883ec20	                           sub rsp, 0x20	        64	prune.c	FUNCTION_3
0x280	        0x48897df8	                mov qword [rbp - 8], rdi	        64	prune.c	FUNCTION_3
0x284	        0x488975f0	             mov qword [rbp - 0x10], rsi	        64	prune.c	FUNCTION_3
0x288	        0x488955e8	             mov qword [rbp - 0x18], rdx	        64	prune.c	FUNCTION_3
0x28c	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x290	      0xbe00000000	                              mov esi, 0	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x295	          0x4889c7	                            mov rdi, rax	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x298	      0xe800000000	                          call 0x40002dd	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x29d	            0x85c0	                           test eax, eax	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x29f	            0x740e	                            je 0x40002ef	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x2a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        66	prune.c	FUNCTION_3	CALL_2
0x2a5	          0x4889c7	                            mov rdi, rax	        66	prune.c	FUNCTION_3	CALL_2
0x2a8	      0xe88afdffff	                 call sym.prune_tmp_file	        66	prune.c	FUNCTION_3	CALL_2
0x2ad	            0xeb1d	                           jmp 0x400030c	        66	prune.c	FUNCTION_3	CALL_2
0x2af	    0x488b05000000	            mov rax, qword [0x040002f6] 	        68	prune.c	FUNCTION_3	CALL_3
0x2b6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        68	prune.c	FUNCTION_3	CALL_3
0x2ba	      0xbe00000000	                              mov esi, 0	        68	prune.c	FUNCTION_3	CALL_3
0x2bf	          0x4889c7	                            mov rdi, rax	        68	prune.c	FUNCTION_3	CALL_3
0x2c2	      0xb800000000	                              mov eax, 0	        68	prune.c	FUNCTION_3	CALL_3
0x2c7	      0xe800000000	                          call 0x400030c	        68	prune.c	FUNCTION_3	CALL_3
0x2cc	      0xb800000000	                              mov eax, 0	        69	prune.c	FUNCTION_3
0x2d1	              0xc9	                                   leave	        70	prune.c	FUNCTION_3
0x2d2	              0xc3	                                     ret	        70	prune.c	FUNCTION_3
cmd_prune	functions,0:IF,6:DO,0:CALL,35:ELSE,1:SWITCH,0:FOR,0:WHILE,1	181
0x3a9	              0x55	                                push rbp	       102	prune.c	FUNCTION_6
0x3aa	          0x4889e5	                            mov rbp, rsp	       102	prune.c	FUNCTION_6
0x3ad	    0x4881ecb00a00	                          sub rsp, 0xab0	       102	prune.c	FUNCTION_6
0x3b4	    0x89bd6cf5ffff	            mov dword [rbp - 0xa94], edi	       102	prune.c	FUNCTION_6
0x3ba	    0x4889b560f5ff	            mov qword [rbp - 0xaa0], rsi	       102	prune.c	FUNCTION_6
0x3c1	    0x48899558f5ff	            mov qword [rbp - 0xaa8], rdx	       102	prune.c	FUNCTION_6
0x3c8	    0x64488b042528	                mov rax, qword fs:[0x28]	       102	prune.c	FUNCTION_6
0x3d1	        0x488945f8	                mov qword [rbp - 8], rax	       102	prune.c	FUNCTION_6
0x3d5	            0x31c0	                            xor eax, eax	       102	prune.c	FUNCTION_6
0x3d7	    0x48c78580f5ff	              mov qword [rbp - 0xa80], 0	       104	prune.c	FUNCTION_6
0x3e2	    0xc7857cf5ffff	              mov dword [rbp - 0xa84], 0	       105	prune.c	FUNCTION_6
0x3ec	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	       106	prune.c	FUNCTION_6
0x3f3	      0xb800000000	                              mov eax, 0	       106	prune.c	FUNCTION_6
0x3f8	      0xb930000000	                           mov ecx, 0x30	       106	prune.c	FUNCTION_6
0x3fd	          0x4889d7	                            mov rdi, rdx	       106	prune.c	FUNCTION_6
0x400	          0xf348ab	              rep stosq qword [rdi], rax	       106	prune.c	FUNCTION_6
0x403	    0xc785c0f5ffff	              mov dword [rbp - 0xa40], 7	       106	prune.c	FUNCTION_6
0x40d	    0xc785c4f5ffff	          mov dword [rbp - 0xa3c], 0x6e 	       106	prune.c	FUNCTION_6
0x417	    0x48c785c8f5ff	              mov qword [rbp - 0xa38], 0	       106	prune.c	FUNCTION_6
0x422	    0x48c785d0f5ff	              mov qword [rbp - 0xa30], 0	       106	prune.c	FUNCTION_6
0x42d	    0x48c785e0f5ff	              mov qword [rbp - 0xa20], 0	       106	prune.c	FUNCTION_6
0x438	    0xc785e8f5ffff	              mov dword [rbp - 0xa18], 2	       106	prune.c	FUNCTION_6
0x442	    0x48c785f8f5ff	              mov qword [rbp - 0xa08], 1	       106	prune.c	FUNCTION_6
0x44d	    0xc78500f6ffff	              mov dword [rbp - 0xa00], 6	       106	prune.c	FUNCTION_6
0x457	    0xc78504f6ffff	          mov dword [rbp - 0x9fc], 0x76 	       106	prune.c	FUNCTION_6
0x461	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	       106	prune.c	FUNCTION_6
0x46c	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	       106	prune.c	FUNCTION_6
0x477	    0x48c78520f6ff	              mov qword [rbp - 0x9e0], 0	       106	prune.c	FUNCTION_6
0x482	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 2	       106	prune.c	FUNCTION_6
0x48c	    0xc78540f6ffff	              mov dword [rbp - 0x9c0], 7	       106	prune.c	FUNCTION_6
0x496	    0x48c78548f6ff	              mov qword [rbp - 0x9b8], 0	       106	prune.c	FUNCTION_6
0x4a1	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	       106	prune.c	FUNCTION_6
0x4ac	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	       106	prune.c	FUNCTION_6
0x4b7	    0xc78568f6ffff	              mov dword [rbp - 0x998], 2	       106	prune.c	FUNCTION_6
0x4c1	    0x48c78578f6ff	              mov qword [rbp - 0x988], 1	       106	prune.c	FUNCTION_6
0x4cc	    0xc78580f6ffff	           mov dword [rbp - 0x980], 0xc 	       106	prune.c	FUNCTION_6
0x4d6	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	       106	prune.c	FUNCTION_6
0x4e1	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	       106	prune.c	FUNCTION_6
0x4ec	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	       106	prune.c	FUNCTION_6
0x4f7	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       106	prune.c	FUNCTION_6
0x502	    0x48c785b0f6ff	              mov qword [rbp - 0x950], 0	       106	prune.c	FUNCTION_6
0x50d	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 7	       106	prune.c	FUNCTION_6
0x517	    0x48c785c8f6ff	              mov qword [rbp - 0x938], 0	       106	prune.c	FUNCTION_6
0x522	    0x488d857cf5ff	                  lea rax, [rbp - 0xa84]	       106	prune.c	FUNCTION_6
0x529	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       106	prune.c	FUNCTION_6
0x530	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	       106	prune.c	FUNCTION_6
0x53b	    0xc785e8f6ffff	              mov dword [rbp - 0x918], 2	       106	prune.c	FUNCTION_6
0x545	    0x48c785f8f6ff	              mov qword [rbp - 0x908], 1	       106	prune.c	FUNCTION_6
0x550	    0x48c705000000	mov qword [0x0400059b], 0xffffffffffffffff 	       118	prune.c	FUNCTION_6
0x55b	    0xc70500000000	               mov dword [0x040005a5], 0	       119	prune.c	FUNCTION_6
0x565	    0xc70500000000	               mov dword [0x040005af], 0	       120	prune.c	FUNCTION_6
0x56f	    0xc70500000000	               mov dword [0x040005b9], 1	       121	prune.c	FUNCTION_6
0x579	    0x488b9558f5ff	            mov rdx, qword [rbp - 0xaa8]	       122	prune.c	FUNCTION_6	CALL_12
0x580	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       122	prune.c	FUNCTION_6	CALL_12
0x587	          0x4889d6	                            mov rsi, rdx	       122	prune.c	FUNCTION_6	CALL_12
0x58a	          0x4889c7	                            mov rdi, rax	       122	prune.c	FUNCTION_6	CALL_12
0x58d	      0xe800000000	                          call 0x40005d2	       122	prune.c	FUNCTION_6	CALL_12
0x592	    0x488d8dc0f5ff	                  lea rcx, [rbp - 0xa40]	       124	prune.c	FUNCTION_6	CALL_13
0x599	    0x488b9558f5ff	            mov rdx, qword [rbp - 0xaa8]	       124	prune.c	FUNCTION_6	CALL_13
0x5a0	    0x488bb560f5ff	            mov rsi, qword [rbp - 0xaa0]	       124	prune.c	FUNCTION_6	CALL_13
0x5a7	    0x8b856cf5ffff	            mov eax, dword [rbp - 0xa94]	       124	prune.c	FUNCTION_6	CALL_13
0x5ad	    0x41b900000000	                              mov r9d, 0	       124	prune.c	FUNCTION_6	CALL_13
0x5b3	    0x41b800000000	                              mov r8d, 0	       124	prune.c	FUNCTION_6	CALL_13
0x5b9	            0x89c7	                            mov edi, eax	       124	prune.c	FUNCTION_6	CALL_13
0x5bb	      0xe800000000	                          call 0x4000600	       124	prune.c	FUNCTION_6	CALL_13
0x5c0	    0x89856cf5ffff	            mov dword [rbp - 0xa94], eax	       124	prune.c	FUNCTION_6	CALL_13
0x5c6	    0x8b0500000000	            mov eax, dword [0x0400060c] 	       126	prune.c	FUNCTION_6	IF_1
0x5cc	            0x85c0	                           test eax, eax	       126	prune.c	FUNCTION_6	IF_1
0x5ce	     0xf84a9000000	                            je 0x40006bd	       126	prune.c	FUNCTION_6	IF_1
0x5d4	      0xbf00000000	                              mov edi, 0	       127	prune.c	FUNCTION_6	CALL_15
0x5d9	      0xe82dfaffff	                               call sym.	       127	prune.c	FUNCTION_6	CALL_15
0x5de	          0x4889c7	                            mov rdi, rax	       127	prune.c	FUNCTION_6	CALL_15
0x5e1	      0xb800000000	                              mov eax, 0	       127	prune.c	FUNCTION_6	CALL_15
0x5e6	      0xe800000000	                          call 0x400062b	       127	prune.c	FUNCTION_6	CALL_15
0x5eb	    0x488b8560f5ff	            mov rax, qword [rbp - 0xaa0]	       131	prune.c	FUNCTION_6	WHILE_1
0x5f2	        0x488d5008	                      lea rdx, [rax + 8]	       131	prune.c	FUNCTION_6	WHILE_1
0x5f6	    0x48899560f5ff	            mov qword [rbp - 0xaa0], rdx	       131	prune.c	FUNCTION_6	WHILE_1
0x5fd	          0x488b00	                    mov rax, qword [rax]	       131	prune.c	FUNCTION_6	WHILE_1
0x600	    0x48898588f5ff	            mov qword [rbp - 0xa78], rax	       131	prune.c	FUNCTION_6	WHILE_1
0x607	    0x488d95a0f5ff	                  lea rdx, [rbp - 0xa60]	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x60e	    0x488b8588f5ff	            mov rax, qword [rbp - 0xa78]	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x615	          0x4889d6	                            mov rsi, rdx	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x618	          0x4889c7	                            mov rdi, rax	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x61b	      0xe800000000	                          call 0x4000660	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x620	            0x85c0	                           test eax, eax	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x622	            0x7540	                           jne 0x40006a4	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x624	    0x488b9588f5ff	            mov rdx, qword [rbp - 0xa78]	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x62b	    0x488d85a0f5ff	                  lea rax, [rbp - 0xa60]	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x632	          0x4889d6	                            mov rsi, rdx	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x635	          0x4889c7	                            mov rdi, rax	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x638	      0xe800000000	                          call 0x400067d	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x63d	    0x48898590f5ff	            mov qword [rbp - 0xa70], rax	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x644	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x64b	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x652	      0xba00000000	                              mov edx, 0	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x657	          0x4889ce	                            mov rsi, rcx	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x65a	          0x4889c7	                            mov rdi, rax	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x65d	      0xe800000000	                          call 0x40006a2	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x662	            0xeb19	                           jmp 0x40006bd	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x664	    0x488b8588f5ff	            mov rax, qword [rbp - 0xa78]	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x66b	          0x4889c6	                            mov rsi, rax	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x66e	      0xbf00000000	                              mov edi, 0	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x673	      0xb800000000	                              mov eax, 0	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x678	      0xe800000000	                          call 0x40006bd	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x67d	    0x8b856cf5ffff	            mov eax, dword [rbp - 0xa94]	       129	prune.c	FUNCTION_6	WHILE_1
0x683	          0x8d50ff	                      lea edx, [rax - 1]	       129	prune.c	FUNCTION_6	WHILE_1
0x686	    0x89956cf5ffff	            mov dword [rbp - 0xa94], edx	       129	prune.c	FUNCTION_6	WHILE_1
0x68c	            0x85c0	                           test eax, eax	       129	prune.c	FUNCTION_6	WHILE_1
0x68e	     0xf8557ffffff	                           jne 0x400062b	       129	prune.c	FUNCTION_6	WHILE_1
0x694	    0x8b0500000000	            mov eax, dword [0x040006da] 	       142	prune.c	FUNCTION_6	IF_3
0x69a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       142	prune.c	FUNCTION_6	IF_3
0x69d	            0x7510	                           jne 0x40006ef	       142	prune.c	FUNCTION_6	IF_3
0x69f	      0xbf02000000	                              mov edi, 2	       143	prune.c	FUNCTION_6	CALL_20
0x6a4	      0xe800000000	                          call 0x40006e9	       143	prune.c	FUNCTION_6	CALL_20
0x6a9	    0x890500000000	            mov dword [0x040006ef], eax 	       143	prune.c	FUNCTION_6	CALL_20
0x6af	    0x8b0500000000	            mov eax, dword [0x040006f5] 	       144	prune.c	FUNCTION_6	IF_4
0x6b5	            0x85c0	                           test eax, eax	       144	prune.c	FUNCTION_6	IF_4
0x6b7	            0x741e	                            je 0x4000717	       144	prune.c	FUNCTION_6	IF_4
0x6b9	      0xbf00000000	                              mov edi, 0	       145	prune.c	FUNCTION_6	CALL_22
0x6be	      0xe848f9ffff	                               call sym.	       145	prune.c	FUNCTION_6	CALL_22
0x6c3	      0xbe00000000	                              mov esi, 0	       145	prune.c	FUNCTION_6	CALL_22
0x6c8	          0x4889c7	                            mov rdi, rax	       145	prune.c	FUNCTION_6	CALL_22
0x6cb	      0xe800000000	                          call 0x4000710	       145	prune.c	FUNCTION_6	CALL_22
0x6d0	    0x48898580f5ff	            mov qword [rbp - 0xa80], rax	       145	prune.c	FUNCTION_6	CALL_22
0x6d7	    0x8b857cf5ffff	            mov eax, dword [rbp - 0xa84]	       146	prune.c	FUNCTION_6	IF_5
0x6dd	            0x85c0	                           test eax, eax	       146	prune.c	FUNCTION_6	IF_5
0x6df	            0x741a	                            je 0x400073b	       146	prune.c	FUNCTION_6	IF_5
0x6e1	    0xc70500000000	               mov dword [0x0400072b], 0	       147	prune.c	FUNCTION_6	IF_5
0x6eb	     0xfb685b8f7ff	           movzx eax, byte [rbp - 0x848]	       148	prune.c	FUNCTION_6	IF_5
0x6f2	          0x83c880	                      or eax, 0xffffff80	       148	prune.c	FUNCTION_6	IF_5
0x6f5	    0x8885b8f7ffff	              mov byte [rbp - 0x848], al	       148	prune.c	FUNCTION_6	IF_5
0x6fb	    0x488b8d80f5ff	            mov rcx, qword [rbp - 0xa80]	       151	prune.c	FUNCTION_6	CALL_23
0x702	    0x488b15000000	            mov rdx, qword [0x04000749] 	       151	prune.c	FUNCTION_6	CALL_23
0x709	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       151	prune.c	FUNCTION_6	CALL_23
0x710	      0xbe01000000	                              mov esi, 1	       151	prune.c	FUNCTION_6	CALL_23
0x715	          0x4889c7	                            mov rdi, rax	       151	prune.c	FUNCTION_6	CALL_23
0x718	      0xe800000000	                          call 0x400075d	       151	prune.c	FUNCTION_6	CALL_23
0x71d	    0x488d8580f5ff	                  lea rax, [rbp - 0xa80]	       152	prune.c	FUNCTION_6	CALL_24
0x724	          0x4889c7	                            mov rdi, rax	       152	prune.c	FUNCTION_6	CALL_24
0x727	      0xe800000000	                          call 0x400076c	       152	prune.c	FUNCTION_6	CALL_24
0x72c	      0xe800000000	                          call 0x4000771	       153	prune.c	FUNCTION_6	CALL_26
0x731	    0x41b800000000	                              mov r8d, 0	       153	prune.c	FUNCTION_6	CALL_26
0x737	      0xb900000000	                              mov ecx, 0	       153	prune.c	FUNCTION_6	CALL_26
0x73c	      0xba00000000	                              mov edx, 0	       153	prune.c	FUNCTION_6	CALL_26
0x741	      0xbe00000000	                              mov esi, 0	       153	prune.c	FUNCTION_6	CALL_26
0x746	          0x4889c7	                            mov rdi, rax	       153	prune.c	FUNCTION_6	CALL_26
0x749	      0xe800000000	                          call 0x400078e	       153	prune.c	FUNCTION_6	CALL_26
0x74e	    0x8b0500000000	            mov eax, dword [0x04000794] 	       156	prune.c	FUNCTION_6	CALL_27
0x754	            0x85c0	                           test eax, eax	       156	prune.c	FUNCTION_6	CALL_27
0x756	           0xf95c0	                                setne al	       156	prune.c	FUNCTION_6	CALL_27
0x759	           0xfb6c0	                           movzx eax, al	       156	prune.c	FUNCTION_6	CALL_27
0x75c	            0x89c7	                            mov edi, eax	       156	prune.c	FUNCTION_6	CALL_27
0x75e	      0xe800000000	                          call 0x40007a3	       156	prune.c	FUNCTION_6	CALL_27
0x763	      0xe800000000	                          call 0x40007a8	       157	prune.c	FUNCTION_6	CALL_29
0x768	          0x4889c7	                            mov rdi, rax	       157	prune.c	FUNCTION_6	CALL_29
0x76b	      0xe893fbffff	         call sym.remove_temporary_files	       157	prune.c	FUNCTION_6	CALL_29
0x770	      0xe800000000	                          call 0x40007b5	       158	prune.c	FUNCTION_6	CALL_31
0x775	          0x4889c6	                            mov rsi, rax	       158	prune.c	FUNCTION_6	CALL_31
0x778	      0xbf00000000	                              mov edi, 0	       158	prune.c	FUNCTION_6	CALL_31
0x77d	      0xb800000000	                              mov eax, 0	       158	prune.c	FUNCTION_6	CALL_31
0x782	      0xe800000000	                          call 0x40007c7	       158	prune.c	FUNCTION_6	CALL_31
0x787	    0x48898598f5ff	            mov qword [rbp - 0xa68], rax	       158	prune.c	FUNCTION_6	CALL_31
0x78e	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	       159	prune.c	FUNCTION_6	CALL_32
0x795	          0x4889c7	                            mov rdi, rax	       159	prune.c	FUNCTION_6	CALL_32
0x798	      0xe866fbffff	         call sym.remove_temporary_files	       159	prune.c	FUNCTION_6	CALL_32
0x79d	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	       160	prune.c	FUNCTION_6	CALL_33
0x7a4	          0x4889c7	                            mov rdi, rax	       160	prune.c	FUNCTION_6	CALL_33
0x7a7	      0xe800000000	                          call 0x40007ec	       160	prune.c	FUNCTION_6	CALL_33
0x7ac	      0xe800000000	                          call 0x40007f1	       162	prune.c	FUNCTION_6	IF_6	CALL_34
0x7b1	            0x85c0	                           test eax, eax	       162	prune.c	FUNCTION_6	IF_6	CALL_34
0x7b3	            0x740d	                            je 0x4000802	       162	prune.c	FUNCTION_6	IF_6	CALL_34
0x7b5	    0x8b0500000000	            mov eax, dword [0x040007fb] 	       163	prune.c	FUNCTION_6	CALL_35
0x7bb	            0x89c7	                            mov edi, eax	       163	prune.c	FUNCTION_6	CALL_35
0x7bd	      0xe800000000	                          call 0x4000802	       163	prune.c	FUNCTION_6	CALL_35
0x7c2	      0xb800000000	                              mov eax, 0	       165	prune.c	FUNCTION_6
0x7c7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       166	prune.c	FUNCTION_6
0x7cb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       166	prune.c	FUNCTION_6
0x7d4	            0x7405	                            je 0x400081b	       166	prune.c	FUNCTION_6
0x7d6	      0xe800000000	                          call 0x400081b	       166	prune.c	FUNCTION_6
0x7db	              0xc9	                                   leave	       166	prune.c	FUNCTION_6
0x7dc	              0xc3	                                     ret	       166	prune.c	FUNCTION_6
