strbuf_addftime	DO,0:SWITCH,1:functions,0:WHILE,1:CALL,12:FOR,1:ELSE,0:IF,4	150
0x2aec	              0x55	                                push rbp	       857	strbuf.c	FUNCTION_62
0x2aed	          0x4889e5	                            mov rbp, rsp	       857	strbuf.c	FUNCTION_62
0x2af0	        0x4883ec60	                           sub rsp, 0x60	       857	strbuf.c	FUNCTION_62
0x2af4	        0x48897db8	             mov qword [rbp - 0x48], rdi	       857	strbuf.c	FUNCTION_62
0x2af8	        0x488975b0	             mov qword [rbp - 0x50], rsi	       857	strbuf.c	FUNCTION_62
0x2afc	        0x488955a8	             mov qword [rbp - 0x58], rdx	       857	strbuf.c	FUNCTION_62
0x2b00	          0x894da4	             mov dword [rbp - 0x5c], ecx	       857	strbuf.c	FUNCTION_62
0x2b03	        0x448945a0	             mov dword [rbp - 0x60], r8d	       857	strbuf.c	FUNCTION_62
0x2b07	    0x64488b042528	                mov rax, qword fs:[0x28]	       857	strbuf.c	FUNCTION_62
0x2b10	        0x488945f8	                mov qword [rbp - 8], rax	       857	strbuf.c	FUNCTION_62
0x2b14	            0x31c0	                            xor eax, eax	       857	strbuf.c	FUNCTION_62
0x2b16	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       858	strbuf.c	FUNCTION_62
0x2b1e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       858	strbuf.c	FUNCTION_62
0x2b26	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       858	strbuf.c	FUNCTION_62
0x2b2e	    0x48c745c88000	           mov qword [rbp - 0x38], 0x80 	       859	strbuf.c	FUNCTION_62
0x2b36	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       862	strbuf.c	FUNCTION_62	IF_1
0x2b3a	           0xfb600	                   movzx eax, byte [rax]	       862	strbuf.c	FUNCTION_62	IF_1
0x2b3d	            0x84c0	                             test al, al	       862	strbuf.c	FUNCTION_62	IF_1
0x2b3f	     0xf84cd010000	                            je 0x4002d52	       862	strbuf.c	FUNCTION_62	IF_1
0x2b45	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       870	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x2b49	      0xbe25000000	                           mov esi, 0x25	       870	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x2b4e	          0x4889c7	                            mov rdi, rax	       870	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x2b51	      0xe800000000	                          call 0x4002b96	       870	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x2b56	        0x488945d8	             mov qword [rbp - 0x28], rax	       870	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x2b5a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b5e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b62	          0x4829c2	                            sub rdx, rax	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b65	          0x4889d0	                            mov rax, rdx	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b68	          0x4889c2	                            mov rdx, rax	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b6b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b6f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b73	          0x4889ce	                            mov rsi, rcx	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b76	          0x4889c7	                            mov rdi, rax	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b79	      0xe800000000	                          call 0x4002bbe	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_2
0x2b7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x2b82	           0xfb600	                   movzx eax, byte [rax]	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x2b85	            0x84c0	                             test al, al	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x2b87	     0xf8480000000	                            je 0x4002c4d	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x2b8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       874	strbuf.c	FUNCTION_62	FOR_1
0x2b91	        0x4883c001	                              add rax, 1	       874	strbuf.c	FUNCTION_62	FOR_1
0x2b95	        0x488945b0	             mov qword [rbp - 0x50], rax	       874	strbuf.c	FUNCTION_62	FOR_1
0x2b99	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2b9d	           0xfb600	                   movzx eax, byte [rax]	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2ba0	           0xfbec0	                           movsx eax, al	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2ba3	          0x83f85a	                           cmp eax, 0x5a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2ba6	            0x7442	                            je 0x4002c2a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2ba8	          0x83f87a	                           cmp eax, 0x7a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2bab	            0x741d	                            je 0x4002c0a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2bad	          0x83f825	                           cmp eax, 0x25	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2bb0	            0x7545	                           jne 0x4002c37	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2bb2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x2bb6	      0xbe00000000	                              mov esi, 0	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x2bbb	          0x4889c7	                            mov rdi, rax	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x2bbe	      0xe80dd7ffff	                  call sym.strbuf_addstr	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x2bc3	      0x488345b001	               add qword [rbp - 0x50], 1	       878	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2bc8	            0xeb3e	                           jmp 0x4002c48	       879	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2bca	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x2bcd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x2bd1	      0xbe00000000	                              mov esi, 0	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x2bd6	          0x4889c7	                            mov rdi, rax	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x2bd9	      0xb800000000	                              mov eax, 0	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x2bde	      0xe800000000	                          call 0x4002c23	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x2be3	      0x488345b001	               add qword [rbp - 0x50], 1	       882	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2be8	            0xeb1e	                           jmp 0x4002c48	       883	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x2bea	        0x837da000	               cmp dword [rbp - 0x60], 0	       885	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x2bee	            0x7407	                            je 0x4002c37	       885	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x2bf0	      0x488345b001	               add qword [rbp - 0x50], 1	       886	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x2bf5	            0xeb11	                           jmp 0x4002c48	       887	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x2bf7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_5
0x2bfb	      0xbe25000000	                           mov esi, 0x25	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_5
0x2c00	          0x4889c7	                            mov rdi, rax	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_5
0x2c03	      0xe85ad6ffff	                   call sym.strbuf_addch	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_5
0x2c08	      0xe938ffffff	                           jmp 0x4002b85	       893	strbuf.c	FUNCTION_62	FOR_1
0x2c0d	              0x90	                                     nop	       873	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x2c0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       894	strbuf.c	FUNCTION_62
0x2c12	        0x488945b0	             mov qword [rbp - 0x50], rax	       894	strbuf.c	FUNCTION_62
0x2c16	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       896	strbuf.c	FUNCTION_62	CALL_6
0x2c1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       896	strbuf.c	FUNCTION_62	CALL_6
0x2c1e	          0x4889d6	                            mov rsi, rdx	       896	strbuf.c	FUNCTION_62	CALL_6
0x2c21	          0x4889c7	                            mov rdi, rax	       896	strbuf.c	FUNCTION_62	CALL_6
0x2c24	      0xe800000000	                          call 0x4002c69	       896	strbuf.c	FUNCTION_62	CALL_6
0x2c29	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c2d	          0x488b10	                    mov rdx, qword [rax]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c30	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c34	        0x488b4008	                mov rax, qword [rax + 8]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c38	          0x4889d6	                            mov rsi, rdx	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c3b	          0x4829c6	                            sub rsi, rax	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c3e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c42	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c46	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c4a	        0x488b4008	                mov rax, qword [rax + 8]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c4e	        0x488d3c02	                    lea rdi, [rdx + rax]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c52	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c56	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c5a	          0x4889d1	                            mov rcx, rdx	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c5d	          0x4889c2	                            mov rdx, rax	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c60	      0xe800000000	                          call 0x4002ca5	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c65	        0x488945d0	             mov qword [rbp - 0x30], rax	       897	strbuf.c	FUNCTION_62	CALL_7
0x2c69	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       899	strbuf.c	FUNCTION_62	IF_4
0x2c6e	            0x7576	                           jne 0x4002d26	       899	strbuf.c	FUNCTION_62	IF_4
0x2c70	        0x488d45e0	                   lea rax, [rbp - 0x20]	       907	strbuf.c	FUNCTION_62	IF_4	CALL_8
0x2c74	      0xbe20000000	                           mov esi, 0x20	       907	strbuf.c	FUNCTION_62	IF_4	CALL_8
0x2c79	          0x4889c7	                            mov rdi, rax	       907	strbuf.c	FUNCTION_62	IF_4	CALL_8
0x2c7c	      0xe8e1d5ffff	                   call sym.strbuf_addch	       907	strbuf.c	FUNCTION_62	IF_4	CALL_8
0x2c81	            0xeb57	                           jmp 0x4002d1a	       908	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x2c83	        0x48d165c8	               shl qword [rbp - 0x38], 1	       909	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x2c87	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x2c8b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x2c8f	          0x4889d6	                            mov rsi, rdx	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x2c92	          0x4889c7	                            mov rdi, rax	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x2c95	      0xe800000000	                          call 0x4002cda	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x2c9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       912	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x2c9e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2ca2	          0x488b0a	                    mov rcx, qword [rdx]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2ca5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2ca9	        0x488b5208	                mov rdx, qword [rdx + 8]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cad	          0x4829d1	                            sub rcx, rdx	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cb0	          0x4889ce	                            mov rsi, rcx	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cb3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cb7	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cbb	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cbf	        0x488b5208	                mov rdx, qword [rdx + 8]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cc3	        0x488d3c11	                    lea rdi, [rcx + rdx]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cc7	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2ccb	          0x4889d1	                            mov rcx, rdx	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cce	          0x4889c2	                            mov rdx, rax	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cd1	      0xe800000000	                          call 0x4002d16	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cd6	        0x488945d0	             mov qword [rbp - 0x30], rax	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_10
0x2cda	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       908	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x2cdf	            0x74a2	                            je 0x4002cc3	       908	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x2ce1	      0x48836dd001	               sub qword [rbp - 0x30], 1	       914	strbuf.c	FUNCTION_62	IF_4
0x2ce6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       916	strbuf.c	FUNCTION_62	CALL_11
0x2cea	          0x4889c7	                            mov rdi, rax	       916	strbuf.c	FUNCTION_62	CALL_11
0x2ced	      0xe800000000	                          call 0x4002d32	       916	strbuf.c	FUNCTION_62	CALL_11
0x2cf2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       917	strbuf.c	FUNCTION_62	CALL_12
0x2cf6	        0x488b5008	                mov rdx, qword [rax + 8]	       917	strbuf.c	FUNCTION_62	CALL_12
0x2cfa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       917	strbuf.c	FUNCTION_62	CALL_12
0x2cfe	          0x4801c2	                            add rdx, rax	       917	strbuf.c	FUNCTION_62	CALL_12
0x2d01	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       917	strbuf.c	FUNCTION_62	CALL_12
0x2d05	          0x4889d6	                            mov rsi, rdx	       917	strbuf.c	FUNCTION_62	CALL_12
0x2d08	          0x4889c7	                            mov rdi, rax	       917	strbuf.c	FUNCTION_62	CALL_12
0x2d0b	      0xe8b8d4ffff	                  call sym.strbuf_setlen	       917	strbuf.c	FUNCTION_62	CALL_12
0x2d10	            0xeb01	                           jmp 0x4002d53	       917	strbuf.c	FUNCTION_62	CALL_12
0x2d12	              0x90	                                     nop	       863	strbuf.c	FUNCTION_62	IF_1
0x2d13	        0x488b45f8	                mov rax, qword [rbp - 8]	       918	strbuf.c	FUNCTION_62
0x2d17	    0x644833042528	                xor rax, qword fs:[0x28]	       918	strbuf.c	FUNCTION_62
0x2d20	            0x7405	                            je 0x4002d67	       918	strbuf.c	FUNCTION_62
0x2d22	      0xe800000000	                          call 0x4002d67	       918	strbuf.c	FUNCTION_62
0x2d27	              0xc9	                                   leave	       918	strbuf.c	FUNCTION_62
0x2d28	              0xc3	                                     ret	       918	strbuf.c	FUNCTION_62
strbuf_ltrim	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,2:FOR,0:ELSE,0:IF,0	44
0x8be	              0x55	                                push rbp	       124	strbuf.c	FUNCTION_12
0x8bf	          0x4889e5	                            mov rbp, rsp	       124	strbuf.c	FUNCTION_12
0x8c2	        0x4883ec20	                           sub rsp, 0x20	       124	strbuf.c	FUNCTION_12
0x8c6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       124	strbuf.c	FUNCTION_12
0x8ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	strbuf.c	FUNCTION_12
0x8ce	        0x488b4010	            mov rax, qword [rax + 0x10] 	       125	strbuf.c	FUNCTION_12
0x8d2	        0x488945f8	                mov qword [rbp - 8], rax	       125	strbuf.c	FUNCTION_12
0x8d6	            0xeb19	                           jmp 0x4000931	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x8d8	      0x488345f801	                  add qword [rbp - 8], 1	       127	strbuf.c	FUNCTION_12	WHILE_1
0x8dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x8e1	        0x488b4008	                mov rax, qword [rax + 8]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x8e5	        0x488d50ff	                      lea rdx, [rax - 1]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x8e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x8ed	        0x48895008	                mov qword [rax + 8], rdx	       128	strbuf.c	FUNCTION_12	WHILE_1
0x8f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x8f5	        0x488b4008	                mov rax, qword [rax + 8]	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x8f9	          0x4885c0	                           test rax, rax	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x8fc	            0x741d	                            je 0x400095b	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x8fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x902	           0xfb600	                   movzx eax, byte [rax]	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x905	           0xfb6c0	                           movzx eax, al	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x908	            0x4898	                                    cdqe	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x90a	     0xfb680000000	                   movzx eax, byte [rax]	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x911	           0xfb6c0	                           movzx eax, al	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x914	          0x83e001	                              and eax, 1	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x917	            0x85c0	                           test eax, eax	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x919	            0x75bd	                           jne 0x4000918	       126	strbuf.c	FUNCTION_12	WHILE_1	CALL_1
0x91b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	strbuf.c	FUNCTION_12	CALL_2
0x91f	        0x488b5008	                mov rdx, qword [rax + 8]	       130	strbuf.c	FUNCTION_12	CALL_2
0x923	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	strbuf.c	FUNCTION_12	CALL_2
0x927	        0x488b4010	            mov rax, qword [rax + 0x10] 	       130	strbuf.c	FUNCTION_12	CALL_2
0x92b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       130	strbuf.c	FUNCTION_12	CALL_2
0x92f	          0x4889ce	                            mov rsi, rcx	       130	strbuf.c	FUNCTION_12	CALL_2
0x932	          0x4889c7	                            mov rdi, rax	       130	strbuf.c	FUNCTION_12	CALL_2
0x935	      0xe800000000	                          call 0x400097a	       130	strbuf.c	FUNCTION_12	CALL_2
0x93a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	strbuf.c	FUNCTION_12
0x93e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       131	strbuf.c	FUNCTION_12
0x942	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	strbuf.c	FUNCTION_12
0x946	        0x488b4008	                mov rax, qword [rax + 8]	       131	strbuf.c	FUNCTION_12
0x94a	          0x4801d0	                            add rax, rdx	       131	strbuf.c	FUNCTION_12
0x94d	          0xc60000	                       mov byte [rax], 0	       131	strbuf.c	FUNCTION_12
0x950	              0x90	                                     nop	       132	strbuf.c	FUNCTION_12
0x951	              0xc9	                                   leave	       132	strbuf.c	FUNCTION_12
0x952	              0xc3	                                     ret	       132	strbuf.c	FUNCTION_12
strbuf_fread	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4:FOR,0:ELSE,1:IF,2	45
0x1868	              0x55	                                push rbp	       402	strbuf.c	FUNCTION_33
0x1869	          0x4889e5	                            mov rbp, rsp	       402	strbuf.c	FUNCTION_33
0x186c	        0x4883ec30	                           sub rsp, 0x30	       402	strbuf.c	FUNCTION_33
0x1870	        0x48897de8	             mov qword [rbp - 0x18], rdi	       402	strbuf.c	FUNCTION_33
0x1874	        0x488975e0	             mov qword [rbp - 0x20], rsi	       402	strbuf.c	FUNCTION_33
0x1878	        0x488955d8	             mov qword [rbp - 0x28], rdx	       402	strbuf.c	FUNCTION_33
0x187c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	strbuf.c	FUNCTION_33
0x1880	          0x488b00	                    mov rax, qword [rax]	       404	strbuf.c	FUNCTION_33
0x1883	        0x488945f0	             mov qword [rbp - 0x10], rax	       404	strbuf.c	FUNCTION_33
0x1887	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       406	strbuf.c	FUNCTION_33	CALL_1
0x188b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       406	strbuf.c	FUNCTION_33	CALL_1
0x188f	          0x4889d6	                            mov rsi, rdx	       406	strbuf.c	FUNCTION_33	CALL_1
0x1892	          0x4889c7	                            mov rdi, rax	       406	strbuf.c	FUNCTION_33	CALL_1
0x1895	      0xe800000000	                          call 0x40018da	       406	strbuf.c	FUNCTION_33	CALL_1
0x189a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	strbuf.c	FUNCTION_33	CALL_2
0x189e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       407	strbuf.c	FUNCTION_33	CALL_2
0x18a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	strbuf.c	FUNCTION_33	CALL_2
0x18a6	        0x488b4008	                mov rax, qword [rax + 8]	       407	strbuf.c	FUNCTION_33	CALL_2
0x18aa	        0x488d3c02	                    lea rdi, [rdx + rax]	       407	strbuf.c	FUNCTION_33	CALL_2
0x18ae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       407	strbuf.c	FUNCTION_33	CALL_2
0x18b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       407	strbuf.c	FUNCTION_33	CALL_2
0x18b6	          0x4889d1	                            mov rcx, rdx	       407	strbuf.c	FUNCTION_33	CALL_2
0x18b9	          0x4889c2	                            mov rdx, rax	       407	strbuf.c	FUNCTION_33	CALL_2
0x18bc	      0xbe01000000	                              mov esi, 1	       407	strbuf.c	FUNCTION_33	CALL_2
0x18c1	      0xe800000000	                          call 0x4001906	       407	strbuf.c	FUNCTION_33	CALL_2
0x18c6	        0x488945f8	                mov qword [rbp - 8], rax	       407	strbuf.c	FUNCTION_33	CALL_2
0x18ca	      0x48837df800	                  cmp qword [rbp - 8], 0	       408	strbuf.c	FUNCTION_33	IF_1
0x18cf	            0x7420	                            je 0x4001931	       408	strbuf.c	FUNCTION_33	IF_1
0x18d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	strbuf.c	FUNCTION_33	CALL_3
0x18d5	        0x488b5008	                mov rdx, qword [rax + 8]	       409	strbuf.c	FUNCTION_33	CALL_3
0x18d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       409	strbuf.c	FUNCTION_33	CALL_3
0x18dd	          0x4801c2	                            add rdx, rax	       409	strbuf.c	FUNCTION_33	CALL_3
0x18e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	strbuf.c	FUNCTION_33	CALL_3
0x18e4	          0x4889d6	                            mov rsi, rdx	       409	strbuf.c	FUNCTION_33	CALL_3
0x18e7	          0x4889c7	                            mov rdi, rax	       409	strbuf.c	FUNCTION_33	CALL_3
0x18ea	      0xe8d9e8ffff	                  call sym.strbuf_setlen	       409	strbuf.c	FUNCTION_33	CALL_3
0x18ef	            0xeb13	                           jmp 0x4001944	       409	strbuf.c	FUNCTION_33	CALL_3
0x18f1	      0x48837df000	               cmp qword [rbp - 0x10], 0	       410	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x18f6	            0x750c	                           jne 0x4001944	       410	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x18f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x18fc	          0x4889c7	                            mov rdi, rax	       411	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x18ff	      0xe800000000	                          call 0x4001944	       411	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x1904	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	strbuf.c	FUNCTION_33
0x1908	              0xc9	                                   leave	       413	strbuf.c	FUNCTION_33
0x1909	              0xc3	                                     ret	       413	strbuf.c	FUNCTION_33
strbuf_release	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,1	19
0x56e	              0x55	                                push rbp	        62	strbuf.c	FUNCTION_5
0x56f	          0x4889e5	                            mov rbp, rsp	        62	strbuf.c	FUNCTION_5
0x572	        0x4883ec10	                           sub rsp, 0x10	        62	strbuf.c	FUNCTION_5
0x576	        0x48897df8	                mov qword [rbp - 8], rdi	        62	strbuf.c	FUNCTION_5
0x57a	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	strbuf.c	FUNCTION_5	IF_1
0x57e	          0x488b00	                    mov rax, qword [rax]	        63	strbuf.c	FUNCTION_5	IF_1
0x581	          0x4885c0	                           test rax, rax	        63	strbuf.c	FUNCTION_5	IF_1
0x584	            0x7421	                            je 0x40005e7	        63	strbuf.c	FUNCTION_5	IF_1
0x586	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x58a	        0x488b4010	            mov rax, qword [rax + 0x10] 	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x58e	          0x4889c7	                            mov rdi, rax	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x591	      0xe800000000	                          call 0x40005d6	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x596	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x59a	      0xbe00000000	                              mov esi, 0	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x59f	          0x4889c7	                            mov rdi, rax	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x5a2	      0xe800000000	                          call 0x40005e7	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x5a7	              0x90	                                     nop	        67	strbuf.c	FUNCTION_5
0x5a8	              0xc9	                                   leave	        67	strbuf.c	FUNCTION_5
0x5a9	              0xc3	                                     ret	        67	strbuf.c	FUNCTION_5
st_mult	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,1	22
0x78	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_81
0x79	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_81
0x7c	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_81
0x80	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_81
0x84	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_81
0x88	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x8d	            0x7430	                            je 0x40000ff	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x8f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x96	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x9b	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x9f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0xa3	            0x731a	                           jae 0x40000ff	       795	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0xa5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0xa9	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0xad	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0xb0	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0xb5	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0xba	      0xe800000000	                          call 0x40000ff	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_2
0xbf	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_81
0xc3	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_81
0xc8	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_81
0xc9	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_81
strbuf_cmp	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,1	44
0xd69	              0x55	                                push rbp	       211	strbuf.c	FUNCTION_18
0xd6a	          0x4889e5	                            mov rbp, rsp	       211	strbuf.c	FUNCTION_18
0xd6d	        0x4883ec20	                           sub rsp, 0x20	       211	strbuf.c	FUNCTION_18
0xd71	        0x48897de8	             mov qword [rbp - 0x18], rdi	       211	strbuf.c	FUNCTION_18
0xd75	        0x488975e0	             mov qword [rbp - 0x20], rsi	       211	strbuf.c	FUNCTION_18
0xd79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	strbuf.c	FUNCTION_18
0xd7d	        0x488b5008	                mov rdx, qword [rax + 8]	       212	strbuf.c	FUNCTION_18
0xd81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       212	strbuf.c	FUNCTION_18
0xd85	        0x488b4008	                mov rax, qword [rax + 8]	       212	strbuf.c	FUNCTION_18
0xd89	          0x4839c2	                            cmp rdx, rax	       212	strbuf.c	FUNCTION_18
0xd8c	        0x480f46c2	                         cmovbe rax, rdx	       212	strbuf.c	FUNCTION_18
0xd90	          0x8945f8	                mov dword [rbp - 8], eax	       212	strbuf.c	FUNCTION_18
0xd93	          0x8b45f8	                mov eax, dword [rbp - 8]	       213	strbuf.c	FUNCTION_18	CALL_1
0xd96	          0x4863d0	                         movsxd rdx, eax	       213	strbuf.c	FUNCTION_18	CALL_1
0xd99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       213	strbuf.c	FUNCTION_18	CALL_1
0xd9d	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       213	strbuf.c	FUNCTION_18	CALL_1
0xda1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	strbuf.c	FUNCTION_18	CALL_1
0xda5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       213	strbuf.c	FUNCTION_18	CALL_1
0xda9	          0x4889ce	                            mov rsi, rcx	       213	strbuf.c	FUNCTION_18	CALL_1
0xdac	          0x4889c7	                            mov rdi, rax	       213	strbuf.c	FUNCTION_18	CALL_1
0xdaf	      0xe800000000	                          call 0x4000df4	       213	strbuf.c	FUNCTION_18	CALL_1
0xdb4	          0x8945fc	                mov dword [rbp - 4], eax	       213	strbuf.c	FUNCTION_18	CALL_1
0xdb7	        0x837dfc00	                  cmp dword [rbp - 4], 0	       214	strbuf.c	FUNCTION_18	IF_1
0xdbb	            0x7405	                            je 0x4000e02	       214	strbuf.c	FUNCTION_18	IF_1
0xdbd	          0x8b45fc	                mov eax, dword [rbp - 4]	       215	strbuf.c	FUNCTION_18	IF_1
0xdc0	            0xeb36	                           jmp 0x4000e38	       215	strbuf.c	FUNCTION_18	IF_1
0xdc2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	strbuf.c	FUNCTION_18
0xdc6	        0x488b5008	                mov rdx, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0xdca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       216	strbuf.c	FUNCTION_18
0xdce	        0x488b4008	                mov rax, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0xdd2	          0x4839c2	                            cmp rdx, rax	       216	strbuf.c	FUNCTION_18
0xdd5	            0x721b	                            jb 0x4000e32	       216	strbuf.c	FUNCTION_18
0xdd7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	strbuf.c	FUNCTION_18
0xddb	        0x488b5008	                mov rdx, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0xddf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       216	strbuf.c	FUNCTION_18
0xde3	        0x488b4008	                mov rax, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0xde7	          0x4839c2	                            cmp rdx, rax	       216	strbuf.c	FUNCTION_18
0xdea	           0xf95c0	                                setne al	       216	strbuf.c	FUNCTION_18
0xded	           0xfb6c0	                           movzx eax, al	       216	strbuf.c	FUNCTION_18
0xdf0	            0xeb05	                           jmp 0x4000e37	       216	strbuf.c	FUNCTION_18
0xdf2	      0xb8ffffffff	                     mov eax, 0xffffffff	       216	strbuf.c	FUNCTION_18
0xdf7	              0x90	                                     nop	       216	strbuf.c	FUNCTION_18
0xdf8	              0xc9	                                   leave	       217	strbuf.c	FUNCTION_18
0xdf9	              0xc3	                                     ret	       217	strbuf.c	FUNCTION_18
starts_with	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0:FOR,1:ELSE,1:IF,2	23
0x3b6	              0x55	                                push rbp	         7	strbuf.c	FUNCTION_1
0x3b7	          0x4889e5	                            mov rbp, rsp	         7	strbuf.c	FUNCTION_1
0x3ba	        0x48897df8	                mov qword [rbp - 8], rdi	         7	strbuf.c	FUNCTION_1
0x3be	        0x488975f0	             mov qword [rbp - 0x10], rsi	         7	strbuf.c	FUNCTION_1
0x3c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x3c6	           0xfb600	                   movzx eax, byte [rax]	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x3c9	            0x84c0	                             test al, al	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x3cb	            0x7507	                           jne 0x4000414	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x3cd	      0xb801000000	                              mov eax, 1	        10	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x3d2	            0xeb25	                           jmp 0x4000439	        10	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x3d4	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3d8	           0xfb610	                   movzx edx, byte [rax]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3df	           0xfb600	                   movzx eax, byte [rax]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3e2	            0x38c2	                              cmp dl, al	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3e4	            0x7407	                            je 0x400042d	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3e6	      0xb800000000	                              mov eax, 0	        12	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3eb	            0xeb0c	                           jmp 0x4000439	        12	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x3ed	      0x488345f801	                  add qword [rbp - 8], 1	         8	strbuf.c	FUNCTION_1	FOR_1
0x3f2	      0x488345f001	               add qword [rbp - 0x10], 1	         8	strbuf.c	FUNCTION_1	FOR_1
0x3f7	            0xebc9	                           jmp 0x4000402	        13	strbuf.c	FUNCTION_1
0x3f9	              0x5d	                                 pop rbp	        13	strbuf.c	FUNCTION_1
0x3fa	              0xc3	                                     ret	        13	strbuf.c	FUNCTION_1
skip_prefix	DO,1:SWITCH,0:functions,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,1	27
0x22	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_73
0x23	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_73
0x26	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_73
0x2a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_73
0x2e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_73
0x32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x36	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x39	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x3b	            0x7512	                           jne 0x400008f	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x41	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x45	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x48	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4d	            0xeb27	                           jmp 0x40000b6	       486	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x53	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x57	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_73	DO_1
0x5b	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x5e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x62	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x66	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_73	DO_1
0x6a	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x6d	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_73	DO_1
0x6f	            0x74c1	                            je 0x4000072	       488	git-compat-util.h	FUNCTION_73	DO_1
0x71	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_73
0x76	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_73
0x77	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_73
strbuf_swap	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	39
0xfe	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_94
0xff	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_94
0x102	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_94
0x106	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_94
0x10a	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_94
0x10e	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_94
0x117	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_94
0x11b	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_94
0x11d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_94	CALL_1
0x121	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_94	CALL_1
0x125	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_94	CALL_1
0x129	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_94	CALL_1
0x12d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_94	CALL_1
0x131	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_94	CALL_1
0x134	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_94	CALL_1
0x138	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_94	CALL_1
0x13c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_94	CALL_1
0x140	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_94	CALL_1
0x144	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_94	CALL_1
0x148	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_94	CALL_1
0x14c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_94	CALL_1
0x150	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_94	CALL_1
0x155	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_94	CALL_1
0x158	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_94	CALL_1
0x15b	      0xe800000000	                          call 0x40001a0	       127	strbuf.h	FUNCTION_94	CALL_1
0x160	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_94	CALL_1
0x164	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_94	CALL_1
0x168	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_94	CALL_1
0x16b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_94	CALL_1
0x16f	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_94	CALL_1
0x173	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_94	CALL_1
0x177	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_94	CALL_1
0x17b	              0x90	                                     nop	       128	strbuf.h	FUNCTION_94
0x17c	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_94
0x180	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_94
0x189	            0x7405	                            je 0x40001d0	       128	strbuf.h	FUNCTION_94
0x18b	      0xe800000000	                          call 0x40001d0	       128	strbuf.h	FUNCTION_94
0x190	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_94
0x191	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_94
strbuf_list_free	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,3:FOR,0:ELSE,0:IF,0	27
0xd12	              0x55	                                push rbp	       200	strbuf.c	FUNCTION_17
0xd13	          0x4889e5	                            mov rbp, rsp	       200	strbuf.c	FUNCTION_17
0xd16	        0x4883ec20	                           sub rsp, 0x20	       200	strbuf.c	FUNCTION_17
0xd1a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       200	strbuf.c	FUNCTION_17
0xd1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	strbuf.c	FUNCTION_17
0xd22	        0x488945f8	                mov qword [rbp - 8], rax	       201	strbuf.c	FUNCTION_17
0xd26	            0xeb26	                           jmp 0x4000d8e	       203	strbuf.c	FUNCTION_17	WHILE_1
0xd28	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0xd2c	          0x488b00	                    mov rax, qword [rax]	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0xd2f	          0x4889c7	                            mov rdi, rax	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0xd32	      0xe800000000	                          call 0x4000d77	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0xd37	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0xd3b	        0x488d5008	                      lea rdx, [rax + 8]	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0xd3f	        0x488955f8	                mov qword [rbp - 8], rdx	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0xd43	          0x488b00	                    mov rax, qword [rax]	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0xd46	          0x4889c7	                            mov rdi, rax	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0xd49	      0xe800000000	                          call 0x4000d8e	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0xd4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       203	strbuf.c	FUNCTION_17	WHILE_1
0xd52	          0x488b00	                    mov rax, qword [rax]	       203	strbuf.c	FUNCTION_17	WHILE_1
0xd55	          0x4885c0	                           test rax, rax	       203	strbuf.c	FUNCTION_17	WHILE_1
0xd58	            0x75ce	                           jne 0x4000d68	       203	strbuf.c	FUNCTION_17	WHILE_1
0xd5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       207	strbuf.c	FUNCTION_17	CALL_3
0xd5e	          0x4889c7	                            mov rdi, rax	       207	strbuf.c	FUNCTION_17	CALL_3
0xd61	      0xe800000000	                          call 0x4000da6	       207	strbuf.c	FUNCTION_17	CALL_3
0xd66	              0x90	                                     nop	       208	strbuf.c	FUNCTION_17
0xd67	              0xc9	                                   leave	       208	strbuf.c	FUNCTION_17
0xd68	              0xc3	                                     ret	       208	strbuf.c	FUNCTION_17
strbuf_addch	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,1	33
0x262	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_97
0x263	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_97
0x266	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_97
0x26a	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_97
0x26e	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_97
0x271	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x275	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x278	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x27d	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x280	            0x7511	                           jne 0x40002d3	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x282	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_97	CALL_2
0x286	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_97	CALL_2
0x28b	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_97	CALL_2
0x28e	      0xe800000000	                          call 0x40002d3	       228	strbuf.h	FUNCTION_97	CALL_2
0x293	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_97
0x297	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_97
0x29b	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_97
0x29f	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_97
0x2a3	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_97
0x2a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_97
0x2ab	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_97
0x2af	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_97
0x2b2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_97
0x2b5	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_97
0x2b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_97
0x2bb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_97
0x2bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_97
0x2c3	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_97
0x2c7	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_97
0x2ca	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_97
0x2cd	              0x90	                                     nop	       231	strbuf.h	FUNCTION_97
0x2ce	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_97
0x2cf	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_97
is_rfc3986_unreserved	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	25
0x21c7	              0x55	                                push rbp	       708	strbuf.c	FUNCTION_50
0x21c8	          0x4889e5	                            mov rbp, rsp	       708	strbuf.c	FUNCTION_50
0x21cb	            0x89f8	                            mov eax, edi	       708	strbuf.c	FUNCTION_50
0x21cd	          0x8845fc	                  mov byte [rbp - 4], al	       708	strbuf.c	FUNCTION_50
0x21d0	         0xfb645fc	               movzx eax, byte [rbp - 4]	       709	strbuf.c	FUNCTION_50	CALL_1
0x21d4	           0xfb6c0	                           movzx eax, al	       709	strbuf.c	FUNCTION_50	CALL_1
0x21d7	            0x4898	                                    cdqe	       709	strbuf.c	FUNCTION_50	CALL_1
0x21d9	     0xfb680000000	                   movzx eax, byte [rax]	       709	strbuf.c	FUNCTION_50	CALL_1
0x21e0	           0xfb6c0	                           movzx eax, al	       709	strbuf.c	FUNCTION_50	CALL_1
0x21e3	          0x83e006	                              and eax, 6	       709	strbuf.c	FUNCTION_50	CALL_1
0x21e6	            0x85c0	                           test eax, eax	       710	strbuf.c	FUNCTION_50
0x21e8	            0x7518	                           jne 0x4002242	       710	strbuf.c	FUNCTION_50
0x21ea	        0x807dfc2d	                cmp byte [rbp - 4], 0x2d	       709	strbuf.c	FUNCTION_50	CALL_1
0x21ee	            0x7412	                            je 0x4002242	       709	strbuf.c	FUNCTION_50	CALL_1
0x21f0	        0x807dfc5f	                cmp byte [rbp - 4], 0x5f	       710	strbuf.c	FUNCTION_50
0x21f4	            0x740c	                            je 0x4002242	       710	strbuf.c	FUNCTION_50
0x21f6	        0x807dfc2e	                cmp byte [rbp - 4], 0x2e	       710	strbuf.c	FUNCTION_50
0x21fa	            0x7406	                            je 0x4002242	       710	strbuf.c	FUNCTION_50
0x21fc	        0x807dfc7e	                cmp byte [rbp - 4], 0x7e	       710	strbuf.c	FUNCTION_50
0x2200	            0x7507	                           jne 0x4002249	       710	strbuf.c	FUNCTION_50
0x2202	      0xb801000000	                              mov eax, 1	       710	strbuf.c	FUNCTION_50
0x2207	            0xeb05	                           jmp 0x400224e	       710	strbuf.c	FUNCTION_50
0x2209	      0xb800000000	                              mov eax, 0	       710	strbuf.c	FUNCTION_50
0x220e	              0x5d	                                 pop rbp	       711	strbuf.c	FUNCTION_50
0x220f	              0xc3	                                     ret	       711	strbuf.c	FUNCTION_50
strbuf_insert	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	19
0xf2d	              0x55	                                push rbp	       239	strbuf.c	FUNCTION_20
0xf2e	          0x4889e5	                            mov rbp, rsp	       239	strbuf.c	FUNCTION_20
0xf31	        0x4883ec20	                           sub rsp, 0x20	       239	strbuf.c	FUNCTION_20
0xf35	        0x48897df8	                mov qword [rbp - 8], rdi	       239	strbuf.c	FUNCTION_20
0xf39	        0x488975f0	             mov qword [rbp - 0x10], rsi	       239	strbuf.c	FUNCTION_20
0xf3d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       239	strbuf.c	FUNCTION_20
0xf41	        0x48894de0	             mov qword [rbp - 0x20], rcx	       239	strbuf.c	FUNCTION_20
0xf45	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       240	strbuf.c	FUNCTION_20	CALL_1
0xf49	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       240	strbuf.c	FUNCTION_20	CALL_1
0xf4d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       240	strbuf.c	FUNCTION_20	CALL_1
0xf51	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	strbuf.c	FUNCTION_20	CALL_1
0xf55	          0x4989c8	                             mov r8, rcx	       240	strbuf.c	FUNCTION_20	CALL_1
0xf58	          0x4889d1	                            mov rcx, rdx	       240	strbuf.c	FUNCTION_20	CALL_1
0xf5b	      0xba00000000	                              mov edx, 0	       240	strbuf.c	FUNCTION_20	CALL_1
0xf60	          0x4889c7	                            mov rdi, rax	       240	strbuf.c	FUNCTION_20	CALL_1
0xf63	      0xe800000000	                          call 0x4000fa8	       240	strbuf.c	FUNCTION_20	CALL_1
0xf68	              0x90	                                     nop	       241	strbuf.c	FUNCTION_20
0xf69	              0xc9	                                   leave	       241	strbuf.c	FUNCTION_20
0xf6a	              0xc3	                                     ret	       241	strbuf.c	FUNCTION_20
strbuf_vaddf	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,12:FOR,0:ELSE,0:IF,4	109
0x14f6	              0x55	                                push rbp	       327	strbuf.c	FUNCTION_29
0x14f7	          0x4889e5	                            mov rbp, rsp	       327	strbuf.c	FUNCTION_29
0x14fa	              0x53	                                push rbx	       327	strbuf.c	FUNCTION_29
0x14fb	        0x4883ec58	                           sub rsp, 0x58	       327	strbuf.c	FUNCTION_29
0x14ff	        0x48897db8	             mov qword [rbp - 0x48], rdi	       327	strbuf.c	FUNCTION_29
0x1503	        0x488975b0	             mov qword [rbp - 0x50], rsi	       327	strbuf.c	FUNCTION_29
0x1507	        0x488955a8	             mov qword [rbp - 0x58], rdx	       327	strbuf.c	FUNCTION_29
0x150b	    0x64488b042528	                mov rax, qword fs:[0x28]	       327	strbuf.c	FUNCTION_29
0x1514	        0x488945e8	             mov qword [rbp - 0x18], rax	       327	strbuf.c	FUNCTION_29
0x1518	            0x31c0	                            xor eax, eax	       327	strbuf.c	FUNCTION_29
0x151a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x151e	          0x4889c7	                            mov rdi, rax	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x1521	      0xe86cecffff	                   call sym.strbuf_avail	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x1526	          0x4885c0	                           test rax, rax	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x1529	            0x7511	                           jne 0x400157c	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x152b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       332	strbuf.c	FUNCTION_29	CALL_2
0x152f	      0xbe40000000	                           mov esi, 0x40	       332	strbuf.c	FUNCTION_29	CALL_2
0x1534	          0x4889c7	                            mov rdi, rax	       332	strbuf.c	FUNCTION_29	CALL_2
0x1537	      0xe800000000	                          call 0x400157c	       332	strbuf.c	FUNCTION_29	CALL_2
0x153c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       333	strbuf.c	FUNCTION_29	CALL_3
0x1540	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       333	strbuf.c	FUNCTION_29	CALL_3
0x1544	          0x488b0a	                    mov rcx, qword [rdx]	       333	strbuf.c	FUNCTION_29	CALL_3
0x1547	          0x488908	                    mov qword [rax], rcx	       333	strbuf.c	FUNCTION_29	CALL_3
0x154a	        0x488b4a08	                mov rcx, qword [rdx + 8]	       333	strbuf.c	FUNCTION_29	CALL_3
0x154e	        0x48894808	                mov qword [rax + 8], rcx	       333	strbuf.c	FUNCTION_29	CALL_3
0x1552	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       333	strbuf.c	FUNCTION_29	CALL_3
0x1556	        0x48895010	             mov qword [rax + 0x10], rdx	       333	strbuf.c	FUNCTION_29	CALL_3
0x155a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29	CALL_4
0x155e	          0x488b10	                    mov rdx, qword [rax]	       334	strbuf.c	FUNCTION_29	CALL_4
0x1561	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29	CALL_4
0x1565	        0x488b4008	                mov rax, qword [rax + 8]	       334	strbuf.c	FUNCTION_29	CALL_4
0x1569	          0x4889d6	                            mov rsi, rdx	       334	strbuf.c	FUNCTION_29	CALL_4
0x156c	          0x4829c6	                            sub rsi, rax	       334	strbuf.c	FUNCTION_29	CALL_4
0x156f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29	CALL_4
0x1573	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       334	strbuf.c	FUNCTION_29	CALL_4
0x1577	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29	CALL_4
0x157b	        0x488b4008	                mov rax, qword [rax + 8]	       334	strbuf.c	FUNCTION_29	CALL_4
0x157f	        0x488d3c02	                    lea rdi, [rdx + rax]	       334	strbuf.c	FUNCTION_29	CALL_4
0x1583	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       334	strbuf.c	FUNCTION_29	CALL_4
0x1587	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       334	strbuf.c	FUNCTION_29	CALL_4
0x158b	          0x4889d1	                            mov rcx, rdx	       334	strbuf.c	FUNCTION_29	CALL_4
0x158e	          0x4889c2	                            mov rdx, rax	       334	strbuf.c	FUNCTION_29	CALL_4
0x1591	      0xe800000000	                          call 0x40015d6	       334	strbuf.c	FUNCTION_29	CALL_4
0x1596	          0x8945cc	             mov dword [rbp - 0x34], eax	       334	strbuf.c	FUNCTION_29	CALL_4
0x1599	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       336	strbuf.c	FUNCTION_29	IF_2
0x159d	            0x7914	                           jns 0x40015f3	       336	strbuf.c	FUNCTION_29	IF_2
0x159f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       337	strbuf.c	FUNCTION_29	CALL_6
0x15a2	            0x89c6	                            mov esi, eax	       337	strbuf.c	FUNCTION_29	CALL_6
0x15a4	      0xbf00000000	                              mov edi, 0	       337	strbuf.c	FUNCTION_29	CALL_6
0x15a9	      0xb800000000	                              mov eax, 0	       337	strbuf.c	FUNCTION_29	CALL_6
0x15ae	      0xe800000000	                          call 0x40015f3	       337	strbuf.c	FUNCTION_29	CALL_6
0x15b3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       338	strbuf.c	FUNCTION_29	IF_3	CALL_7
0x15b6	          0x4863d8	                         movsxd rbx, eax	       338	strbuf.c	FUNCTION_29	IF_3	CALL_7
0x15b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       338	strbuf.c	FUNCTION_29	IF_3	CALL_7
0x15bd	          0x4889c7	                            mov rdi, rax	       338	strbuf.c	FUNCTION_29	IF_3	CALL_7
0x15c0	      0xe8cdebffff	                   call sym.strbuf_avail	       338	strbuf.c	FUNCTION_29	IF_3	CALL_7
0x15c5	          0x4839c3	                            cmp rbx, rax	       338	strbuf.c	FUNCTION_29	IF_3	CALL_7
0x15c8	            0x767a	                           jbe 0x4001684	       338	strbuf.c	FUNCTION_29	IF_3	CALL_7
0x15ca	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       339	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x15cd	          0x4863d0	                         movsxd rdx, eax	       339	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x15d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       339	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x15d4	          0x4889d6	                            mov rsi, rdx	       339	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x15d7	          0x4889c7	                            mov rdi, rax	       339	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x15da	      0xe800000000	                          call 0x400161f	       339	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x15df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15e3	          0x488b10	                    mov rdx, qword [rax]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15ea	        0x488b4008	                mov rax, qword [rax + 8]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15ee	          0x4889d6	                            mov rsi, rdx	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15f1	          0x4829c6	                            sub rsi, rax	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15f4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15f8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x15fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x1600	        0x488b4008	                mov rax, qword [rax + 8]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x1604	        0x488d3c02	                    lea rdi, [rdx + rax]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x1608	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x160c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x1610	          0x4889d1	                            mov rcx, rdx	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x1613	          0x4889c2	                            mov rdx, rax	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x1616	      0xe800000000	                          call 0x400165b	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x161b	          0x8945cc	             mov dword [rbp - 0x34], eax	       340	strbuf.c	FUNCTION_29	IF_3	CALL_9
0x161e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_10
0x1621	          0x4863d8	                         movsxd rbx, eax	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_10
0x1624	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_10
0x1628	          0x4889c7	                            mov rdi, rax	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_10
0x162b	      0xe862ebffff	                   call sym.strbuf_avail	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_10
0x1630	          0x4839c3	                            cmp rbx, rax	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_10
0x1633	            0x760f	                           jbe 0x4001684	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_10
0x1635	      0xbf00000000	                              mov edi, 0	       342	strbuf.c	FUNCTION_29	IF_3	CALL_11
0x163a	      0xb800000000	                              mov eax, 0	       342	strbuf.c	FUNCTION_29	IF_3	CALL_11
0x163f	      0xe800000000	                          call 0x4001684	       342	strbuf.c	FUNCTION_29	IF_3	CALL_11
0x1644	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       344	strbuf.c	FUNCTION_29	CALL_12
0x1648	        0x488b5008	                mov rdx, qword [rax + 8]	       344	strbuf.c	FUNCTION_29	CALL_12
0x164c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       344	strbuf.c	FUNCTION_29	CALL_12
0x164f	            0x4898	                                    cdqe	       344	strbuf.c	FUNCTION_29	CALL_12
0x1651	          0x4801c2	                            add rdx, rax	       344	strbuf.c	FUNCTION_29	CALL_12
0x1654	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       344	strbuf.c	FUNCTION_29	CALL_12
0x1658	          0x4889d6	                            mov rsi, rdx	       344	strbuf.c	FUNCTION_29	CALL_12
0x165b	          0x4889c7	                            mov rdi, rax	       344	strbuf.c	FUNCTION_29	CALL_12
0x165e	      0xe865ebffff	                  call sym.strbuf_setlen	       344	strbuf.c	FUNCTION_29	CALL_12
0x1663	              0x90	                                     nop	       345	strbuf.c	FUNCTION_29
0x1664	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	strbuf.c	FUNCTION_29
0x1668	    0x644833042528	                xor rax, qword fs:[0x28]	       345	strbuf.c	FUNCTION_29
0x1671	            0x7405	                            je 0x40016b8	       345	strbuf.c	FUNCTION_29
0x1673	      0xe800000000	                          call 0x40016b8	       345	strbuf.c	FUNCTION_29
0x1678	        0x4883c458	                           add rsp, 0x58	       345	strbuf.c	FUNCTION_29
0x167c	              0x5b	                                 pop rbx	       345	strbuf.c	FUNCTION_29
0x167d	              0x5d	                                 pop rbp	       345	strbuf.c	FUNCTION_29
0x167e	              0xc3	                                     ret	       345	strbuf.c	FUNCTION_29
strbuf_read_file	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,2	40
0x1ff6	              0x55	                                push rbp	       645	strbuf.c	FUNCTION_46
0x1ff7	          0x4889e5	                            mov rbp, rsp	       645	strbuf.c	FUNCTION_46
0x1ffa	        0x4883ec30	                           sub rsp, 0x30	       645	strbuf.c	FUNCTION_46
0x1ffe	        0x48897de8	             mov qword [rbp - 0x18], rdi	       645	strbuf.c	FUNCTION_46
0x2002	        0x488975e0	             mov qword [rbp - 0x20], rsi	       645	strbuf.c	FUNCTION_46
0x2006	        0x488955d8	             mov qword [rbp - 0x28], rdx	       645	strbuf.c	FUNCTION_46
0x200a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       650	strbuf.c	FUNCTION_46	CALL_1
0x200e	      0xbe00000000	                              mov esi, 0	       650	strbuf.c	FUNCTION_46	CALL_1
0x2013	          0x4889c7	                            mov rdi, rax	       650	strbuf.c	FUNCTION_46	CALL_1
0x2016	      0xb800000000	                              mov eax, 0	       650	strbuf.c	FUNCTION_46	CALL_1
0x201b	      0xe800000000	                          call 0x4002060	       650	strbuf.c	FUNCTION_46	CALL_1
0x2020	          0x8945f0	             mov dword [rbp - 0x10], eax	       650	strbuf.c	FUNCTION_46	CALL_1
0x2023	        0x837df000	               cmp dword [rbp - 0x10], 0	       651	strbuf.c	FUNCTION_46	IF_1
0x2027	            0x7909	                           jns 0x4002072	       651	strbuf.c	FUNCTION_46	IF_1
0x2029	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       652	strbuf.c	FUNCTION_46	IF_1
0x2030	            0xeb4e	                           jmp 0x40020c0	       652	strbuf.c	FUNCTION_46	IF_1
0x2032	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       653	strbuf.c	FUNCTION_46	CALL_2
0x2036	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       653	strbuf.c	FUNCTION_46	CALL_2
0x2039	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       653	strbuf.c	FUNCTION_46	CALL_2
0x203d	            0x89ce	                            mov esi, ecx	       653	strbuf.c	FUNCTION_46	CALL_2
0x203f	          0x4889c7	                            mov rdi, rax	       653	strbuf.c	FUNCTION_46	CALL_2
0x2042	      0xe800000000	                          call 0x4002087	       653	strbuf.c	FUNCTION_46	CALL_2
0x2047	        0x488945f8	                mov qword [rbp - 8], rax	       653	strbuf.c	FUNCTION_46	CALL_2
0x204b	      0xe800000000	                          call 0x4002090	       654	strbuf.c	FUNCTION_46
0x2050	            0x8b00	                    mov eax, dword [rax]	       654	strbuf.c	FUNCTION_46
0x2052	          0x8945f4	              mov dword [rbp - 0xc], eax	       654	strbuf.c	FUNCTION_46
0x2055	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       655	strbuf.c	FUNCTION_46	CALL_3
0x2058	            0x89c7	                            mov edi, eax	       655	strbuf.c	FUNCTION_46	CALL_3
0x205a	      0xe800000000	                          call 0x400209f	       655	strbuf.c	FUNCTION_46	CALL_3
0x205f	      0x48837df800	                  cmp qword [rbp - 8], 0	       656	strbuf.c	FUNCTION_46	IF_2
0x2064	            0x7916	                           jns 0x40020bc	       656	strbuf.c	FUNCTION_46	IF_2
0x2066	      0xe800000000	                          call 0x40020ab	       657	strbuf.c	FUNCTION_46	IF_2
0x206b	          0x4889c2	                            mov rdx, rax	       657	strbuf.c	FUNCTION_46	IF_2
0x206e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       657	strbuf.c	FUNCTION_46	IF_2
0x2071	            0x8902	                    mov dword [rdx], eax	       657	strbuf.c	FUNCTION_46	IF_2
0x2073	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       658	strbuf.c	FUNCTION_46	IF_2
0x207a	            0xeb04	                           jmp 0x40020c0	       658	strbuf.c	FUNCTION_46	IF_2
0x207c	        0x488b45f8	                mov rax, qword [rbp - 8]	       661	strbuf.c	FUNCTION_46
0x2080	              0xc9	                                   leave	       662	strbuf.c	FUNCTION_46
0x2081	              0xc3	                                     ret	       662	strbuf.c	FUNCTION_46
strbuf_complete_line	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	11
0x357	              0x55	                                push rbp	       600	strbuf.h	FUNCTION_104
0x358	          0x4889e5	                            mov rbp, rsp	       600	strbuf.h	FUNCTION_104
0x35b	        0x4883ec10	                           sub rsp, 0x10	       600	strbuf.h	FUNCTION_104
0x35f	        0x48897df8	                mov qword [rbp - 8], rdi	       600	strbuf.h	FUNCTION_104
0x363	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.h	FUNCTION_104	CALL_1
0x367	      0xbe0a000000	                            mov esi, 0xa	       601	strbuf.h	FUNCTION_104	CALL_1
0x36c	          0x4889c7	                            mov rdi, rax	       601	strbuf.h	FUNCTION_104	CALL_1
0x36f	      0xe891ffffff	                call sym.strbuf_complete	       601	strbuf.h	FUNCTION_104	CALL_1
0x374	              0x90	                                     nop	       602	strbuf.h	FUNCTION_104
0x375	              0xc9	                                   leave	       602	strbuf.h	FUNCTION_104
0x376	              0xc3	                                     ret	       602	strbuf.h	FUNCTION_104
strbuf_remove	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	16
0xf6b	              0x55	                                push rbp	       244	strbuf.c	FUNCTION_21
0xf6c	          0x4889e5	                            mov rbp, rsp	       244	strbuf.c	FUNCTION_21
0xf6f	        0x4883ec20	                           sub rsp, 0x20	       244	strbuf.c	FUNCTION_21
0xf73	        0x48897df8	                mov qword [rbp - 8], rdi	       244	strbuf.c	FUNCTION_21
0xf77	        0x488975f0	             mov qword [rbp - 0x10], rsi	       244	strbuf.c	FUNCTION_21
0xf7b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       244	strbuf.c	FUNCTION_21
0xf7f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       245	strbuf.c	FUNCTION_21	CALL_1
0xf83	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       245	strbuf.c	FUNCTION_21	CALL_1
0xf87	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	strbuf.c	FUNCTION_21	CALL_1
0xf8b	    0x41b800000000	                              mov r8d, 0	       245	strbuf.c	FUNCTION_21	CALL_1
0xf91	      0xb900000000	                              mov ecx, 0	       245	strbuf.c	FUNCTION_21	CALL_1
0xf96	          0x4889c7	                            mov rdi, rax	       245	strbuf.c	FUNCTION_21	CALL_1
0xf99	      0xe800000000	                          call 0x4000fde	       245	strbuf.c	FUNCTION_21	CALL_1
0xf9e	              0x90	                                     nop	       246	strbuf.c	FUNCTION_21
0xf9f	              0xc9	                                   leave	       246	strbuf.c	FUNCTION_21
0xfa0	              0xc3	                                     ret	       246	strbuf.c	FUNCTION_21
strbuf_getdelim	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,2	36
0x1dd8	              0x55	                                push rbp	       598	strbuf.c	FUNCTION_41
0x1dd9	          0x4889e5	                            mov rbp, rsp	       598	strbuf.c	FUNCTION_41
0x1ddc	        0x4883ec20	                           sub rsp, 0x20	       598	strbuf.c	FUNCTION_41
0x1de0	        0x48897df8	                mov qword [rbp - 8], rdi	       598	strbuf.c	FUNCTION_41
0x1de4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       598	strbuf.c	FUNCTION_41
0x1de8	          0x8955ec	             mov dword [rbp - 0x14], edx	       598	strbuf.c	FUNCTION_41
0x1deb	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1dee	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1df2	        0x488b45f8	                mov rax, qword [rbp - 8]	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1df6	          0x4889ce	                            mov rsi, rcx	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1df9	          0x4889c7	                            mov rdi, rax	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1dfc	      0xe800000000	                          call 0x4001e41	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1e01	            0x85c0	                           test eax, eax	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1e03	            0x7407	                            je 0x4001e4c	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x1e05	      0xb8ffffffff	                     mov eax, 0xffffffff	       600	strbuf.c	FUNCTION_41	IF_1
0x1e0a	            0xeb42	                           jmp 0x4001e8e	       600	strbuf.c	FUNCTION_41	IF_1
0x1e0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.c	FUNCTION_41	IF_2
0x1e10	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       601	strbuf.c	FUNCTION_41	IF_2
0x1e14	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.c	FUNCTION_41	IF_2
0x1e18	        0x488b4008	                mov rax, qword [rax + 8]	       601	strbuf.c	FUNCTION_41	IF_2
0x1e1c	        0x4883e801	                              sub rax, 1	       601	strbuf.c	FUNCTION_41	IF_2
0x1e20	          0x4801d0	                            add rax, rdx	       601	strbuf.c	FUNCTION_41	IF_2
0x1e23	           0xfb600	                   movzx eax, byte [rax]	       601	strbuf.c	FUNCTION_41	IF_2
0x1e26	           0xfbec0	                           movsx eax, al	       601	strbuf.c	FUNCTION_41	IF_2
0x1e29	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       601	strbuf.c	FUNCTION_41	IF_2
0x1e2c	            0x751b	                           jne 0x4001e89	       601	strbuf.c	FUNCTION_41	IF_2
0x1e2e	        0x488b45f8	                mov rax, qword [rbp - 8]	       602	strbuf.c	FUNCTION_41	CALL_2
0x1e32	        0x488b4008	                mov rax, qword [rax + 8]	       602	strbuf.c	FUNCTION_41	CALL_2
0x1e36	        0x488d50ff	                      lea rdx, [rax - 1]	       602	strbuf.c	FUNCTION_41	CALL_2
0x1e3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       602	strbuf.c	FUNCTION_41	CALL_2
0x1e3e	          0x4889d6	                            mov rsi, rdx	       602	strbuf.c	FUNCTION_41	CALL_2
0x1e41	          0x4889c7	                            mov rdi, rax	       602	strbuf.c	FUNCTION_41	CALL_2
0x1e44	      0xe87fe3ffff	                  call sym.strbuf_setlen	       602	strbuf.c	FUNCTION_41	CALL_2
0x1e49	      0xb800000000	                              mov eax, 0	       603	strbuf.c	FUNCTION_41
0x1e4e	              0xc9	                                   leave	       604	strbuf.c	FUNCTION_41
0x1e4f	              0xc3	                                     ret	       604	strbuf.c	FUNCTION_41
strbuf_detach	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,1	25
0x5aa	              0x55	                                push rbp	        70	strbuf.c	FUNCTION_6
0x5ab	          0x4889e5	                            mov rbp, rsp	        70	strbuf.c	FUNCTION_6
0x5ae	        0x4883ec20	                           sub rsp, 0x20	        70	strbuf.c	FUNCTION_6
0x5b2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        70	strbuf.c	FUNCTION_6
0x5b6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        70	strbuf.c	FUNCTION_6
0x5ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	strbuf.c	FUNCTION_6	CALL_1
0x5be	      0xbe00000000	                              mov esi, 0	        72	strbuf.c	FUNCTION_6	CALL_1
0x5c3	          0x4889c7	                            mov rdi, rax	        72	strbuf.c	FUNCTION_6	CALL_1
0x5c6	      0xe800000000	                          call 0x400060b	        72	strbuf.c	FUNCTION_6	CALL_1
0x5cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	strbuf.c	FUNCTION_6
0x5cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	        73	strbuf.c	FUNCTION_6
0x5d3	        0x488945f8	                mov qword [rbp - 8], rax	        73	strbuf.c	FUNCTION_6
0x5d7	      0x48837de000	               cmp qword [rbp - 0x20], 0	        74	strbuf.c	FUNCTION_6	IF_1
0x5dc	            0x740f	                            je 0x400062d	        74	strbuf.c	FUNCTION_6	IF_1
0x5de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	strbuf.c	FUNCTION_6	IF_1
0x5e2	        0x488b5008	                mov rdx, qword [rax + 8]	        75	strbuf.c	FUNCTION_6	IF_1
0x5e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        75	strbuf.c	FUNCTION_6	IF_1
0x5ea	          0x488910	                    mov qword [rax], rdx	        75	strbuf.c	FUNCTION_6	IF_1
0x5ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	strbuf.c	FUNCTION_6	CALL_2
0x5f1	      0xbe00000000	                              mov esi, 0	        76	strbuf.c	FUNCTION_6	CALL_2
0x5f6	          0x4889c7	                            mov rdi, rax	        76	strbuf.c	FUNCTION_6	CALL_2
0x5f9	      0xe800000000	                          call 0x400063e	        76	strbuf.c	FUNCTION_6	CALL_2
0x5fe	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	strbuf.c	FUNCTION_6
0x602	              0xc9	                                   leave	        78	strbuf.c	FUNCTION_6
0x603	              0xc3	                                     ret	        78	strbuf.c	FUNCTION_6
strbuf_commented_addf	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,5:FOR,0:ELSE,0:IF,1	83
0x134f	              0x55	                                push rbp	       310	strbuf.c	FUNCTION_28
0x1350	          0x4889e5	                            mov rbp, rsp	       310	strbuf.c	FUNCTION_28
0x1353	    0x4881ec100100	                          sub rsp, 0x110	       310	strbuf.c	FUNCTION_28
0x135a	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	       310	strbuf.c	FUNCTION_28
0x1361	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	       310	strbuf.c	FUNCTION_28
0x1368	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       310	strbuf.c	FUNCTION_28
0x136f	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       310	strbuf.c	FUNCTION_28
0x1376	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       310	strbuf.c	FUNCTION_28
0x137d	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       310	strbuf.c	FUNCTION_28
0x1384	            0x84c0	                             test al, al	       310	strbuf.c	FUNCTION_28
0x1386	            0x7420	                            je 0x40013e8	       310	strbuf.c	FUNCTION_28
0x1388	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       310	strbuf.c	FUNCTION_28
0x138c	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       310	strbuf.c	FUNCTION_28
0x1390	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       310	strbuf.c	FUNCTION_28
0x1394	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       310	strbuf.c	FUNCTION_28
0x1398	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       310	strbuf.c	FUNCTION_28
0x139c	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       310	strbuf.c	FUNCTION_28
0x13a0	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       310	strbuf.c	FUNCTION_28
0x13a4	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       310	strbuf.c	FUNCTION_28
0x13a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       310	strbuf.c	FUNCTION_28
0x13b1	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       310	strbuf.c	FUNCTION_28
0x13b8	            0x31c0	                            xor eax, eax	       310	strbuf.c	FUNCTION_28
0x13ba	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       312	strbuf.c	FUNCTION_28
0x13c5	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       312	strbuf.c	FUNCTION_28
0x13d0	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       312	strbuf.c	FUNCTION_28
0x13db	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       313	strbuf.c	FUNCTION_28
0x13e2	        0x488b4008	                mov rax, qword [rax + 8]	       313	strbuf.c	FUNCTION_28
0x13e6	          0x4885c0	                           test rax, rax	       313	strbuf.c	FUNCTION_28
0x13e9	            0x742b	                            je 0x4001456	       313	strbuf.c	FUNCTION_28
0x13eb	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       313	strbuf.c	FUNCTION_28
0x13f2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       313	strbuf.c	FUNCTION_28
0x13f6	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       313	strbuf.c	FUNCTION_28
0x13fd	        0x488b4008	                mov rax, qword [rax + 8]	       313	strbuf.c	FUNCTION_28
0x1401	        0x4883e801	                              sub rax, 1	       313	strbuf.c	FUNCTION_28
0x1405	          0x4801d0	                            add rax, rdx	       313	strbuf.c	FUNCTION_28
0x1408	           0xfb600	                   movzx eax, byte [rax]	       313	strbuf.c	FUNCTION_28
0x140b	            0x3c0a	                             cmp al, 0xa	       313	strbuf.c	FUNCTION_28
0x140d	            0x7407	                            je 0x4001456	       313	strbuf.c	FUNCTION_28
0x140f	      0xb801000000	                              mov eax, 1	       313	strbuf.c	FUNCTION_28
0x1414	            0xeb05	                           jmp 0x400145b	       313	strbuf.c	FUNCTION_28
0x1416	      0xb800000000	                              mov eax, 0	       313	strbuf.c	FUNCTION_28
0x141b	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	       313	strbuf.c	FUNCTION_28
0x1421	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       315	strbuf.c	FUNCTION_28	CALL_1
0x142b	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       315	strbuf.c	FUNCTION_28	CALL_1
0x1435	        0x488d4510	                   lea rax, [rbp + 0x10]	       315	strbuf.c	FUNCTION_28	CALL_1
0x1439	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       315	strbuf.c	FUNCTION_28	CALL_1
0x1440	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       315	strbuf.c	FUNCTION_28	CALL_1
0x1447	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       315	strbuf.c	FUNCTION_28	CALL_1
0x144e	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       316	strbuf.c	FUNCTION_28	CALL_2
0x1455	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	       316	strbuf.c	FUNCTION_28	CALL_2
0x145c	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       316	strbuf.c	FUNCTION_28	CALL_2
0x1463	          0x4889ce	                            mov rsi, rcx	       316	strbuf.c	FUNCTION_28	CALL_2
0x1466	          0x4889c7	                            mov rdi, rax	       316	strbuf.c	FUNCTION_28	CALL_2
0x1469	      0xe800000000	                          call 0x40014ae	       316	strbuf.c	FUNCTION_28	CALL_2
0x146e	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       319	strbuf.c	FUNCTION_28	CALL_4
0x1475	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       319	strbuf.c	FUNCTION_28	CALL_4
0x147c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       319	strbuf.c	FUNCTION_28	CALL_4
0x1483	          0x4889ce	                            mov rsi, rcx	       319	strbuf.c	FUNCTION_28	CALL_4
0x1486	          0x4889c7	                            mov rdi, rax	       319	strbuf.c	FUNCTION_28	CALL_4
0x1489	      0xe800000000	                          call 0x40014ce	       319	strbuf.c	FUNCTION_28	CALL_4
0x148e	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	       320	strbuf.c	FUNCTION_28	IF_1
0x1495	            0x7436	                            je 0x400150d	       320	strbuf.c	FUNCTION_28	IF_1
0x1497	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x149e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       321	strbuf.c	FUNCTION_28	IF_1
0x14a2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x14a9	        0x488b4008	                mov rax, qword [rax + 8]	       321	strbuf.c	FUNCTION_28	IF_1
0x14ad	        0x488d48ff	                      lea rcx, [rax - 1]	       321	strbuf.c	FUNCTION_28	IF_1
0x14b1	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x14b8	        0x48894808	                mov qword [rax + 8], rcx	       321	strbuf.c	FUNCTION_28	IF_1
0x14bc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x14c3	        0x488b4008	                mov rax, qword [rax + 8]	       321	strbuf.c	FUNCTION_28	IF_1
0x14c7	          0x4801d0	                            add rax, rdx	       321	strbuf.c	FUNCTION_28	IF_1
0x14ca	          0xc60000	                       mov byte [rax], 0	       321	strbuf.c	FUNCTION_28	IF_1
0x14cd	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       323	strbuf.c	FUNCTION_28	CALL_5
0x14d4	          0x4889c7	                            mov rdi, rax	       323	strbuf.c	FUNCTION_28	CALL_5
0x14d7	      0xe800000000	                          call 0x400151c	       323	strbuf.c	FUNCTION_28	CALL_5
0x14dc	              0x90	                                     nop	       324	strbuf.c	FUNCTION_28
0x14dd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       324	strbuf.c	FUNCTION_28
0x14e4	    0x644833042528	                xor rax, qword fs:[0x28]	       324	strbuf.c	FUNCTION_28
0x14ed	            0x7405	                            je 0x4001534	       324	strbuf.c	FUNCTION_28
0x14ef	      0xe800000000	                          call 0x4001534	       324	strbuf.c	FUNCTION_28
0x14f4	              0xc9	                                   leave	       324	strbuf.c	FUNCTION_28
0x14f5	              0xc3	                                     ret	       324	strbuf.c	FUNCTION_28
strbuf_attach	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,0	32
0x604	              0x55	                                push rbp	        81	strbuf.c	FUNCTION_7
0x605	          0x4889e5	                            mov rbp, rsp	        81	strbuf.c	FUNCTION_7
0x608	        0x4883ec20	                           sub rsp, 0x20	        81	strbuf.c	FUNCTION_7
0x60c	        0x48897df8	                mov qword [rbp - 8], rdi	        81	strbuf.c	FUNCTION_7
0x610	        0x488975f0	             mov qword [rbp - 0x10], rsi	        81	strbuf.c	FUNCTION_7
0x614	        0x488955e8	             mov qword [rbp - 0x18], rdx	        81	strbuf.c	FUNCTION_7
0x618	        0x48894de0	             mov qword [rbp - 0x20], rcx	        81	strbuf.c	FUNCTION_7
0x61c	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	strbuf.c	FUNCTION_7	CALL_1
0x620	          0x4889c7	                            mov rdi, rax	        82	strbuf.c	FUNCTION_7	CALL_1
0x623	      0xe800000000	                          call 0x4000668	        82	strbuf.c	FUNCTION_7	CALL_1
0x628	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	strbuf.c	FUNCTION_7
0x62c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        83	strbuf.c	FUNCTION_7
0x630	        0x48895010	             mov qword [rax + 0x10], rdx	        83	strbuf.c	FUNCTION_7
0x634	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	strbuf.c	FUNCTION_7
0x638	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        84	strbuf.c	FUNCTION_7
0x63c	        0x48895008	                mov qword [rax + 8], rdx	        84	strbuf.c	FUNCTION_7
0x640	        0x488b45f8	                mov rax, qword [rbp - 8]	        85	strbuf.c	FUNCTION_7
0x644	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        85	strbuf.c	FUNCTION_7
0x648	          0x488910	                    mov qword [rax], rdx	        85	strbuf.c	FUNCTION_7
0x64b	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	strbuf.c	FUNCTION_7	CALL_2
0x64f	      0xbe00000000	                              mov esi, 0	        86	strbuf.c	FUNCTION_7	CALL_2
0x654	          0x4889c7	                            mov rdi, rax	        86	strbuf.c	FUNCTION_7	CALL_2
0x657	      0xe800000000	                          call 0x400069c	        86	strbuf.c	FUNCTION_7	CALL_2
0x65c	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	strbuf.c	FUNCTION_7
0x660	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        87	strbuf.c	FUNCTION_7
0x664	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	strbuf.c	FUNCTION_7
0x668	        0x488b4008	                mov rax, qword [rax + 8]	        87	strbuf.c	FUNCTION_7
0x66c	          0x4801d0	                            add rax, rdx	        87	strbuf.c	FUNCTION_7
0x66f	          0xc60000	                       mov byte [rax], 0	        87	strbuf.c	FUNCTION_7
0x672	              0x90	                                     nop	        88	strbuf.c	FUNCTION_7
0x673	              0xc9	                                   leave	        88	strbuf.c	FUNCTION_7
0x674	              0xc3	                                     ret	        88	strbuf.c	FUNCTION_7
strbuf_add_real_path	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4:FOR,0:ELSE,1:IF,1	43
0x25fa	              0x55	                                push rbp	       778	strbuf.c	FUNCTION_55
0x25fb	          0x4889e5	                            mov rbp, rsp	       778	strbuf.c	FUNCTION_55
0x25fe	        0x4883ec30	                           sub rsp, 0x30	       778	strbuf.c	FUNCTION_55
0x2602	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       778	strbuf.c	FUNCTION_55
0x2606	        0x488975d0	             mov qword [rbp - 0x30], rsi	       778	strbuf.c	FUNCTION_55
0x260a	    0x64488b042528	                mov rax, qword fs:[0x28]	       778	strbuf.c	FUNCTION_55
0x2613	        0x488945f8	                mov qword [rbp - 8], rax	       778	strbuf.c	FUNCTION_55
0x2617	            0x31c0	                            xor eax, eax	       778	strbuf.c	FUNCTION_55
0x2619	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       779	strbuf.c	FUNCTION_55	IF_1
0x261d	        0x488b4008	                mov rax, qword [rax + 8]	       779	strbuf.c	FUNCTION_55	IF_1
0x2621	          0x4885c0	                           test rax, rax	       779	strbuf.c	FUNCTION_55	IF_1
0x2624	            0x7451	                            je 0x40026b7	       779	strbuf.c	FUNCTION_55	IF_1
0x2626	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       780	strbuf.c	FUNCTION_55	IF_1
0x262e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       780	strbuf.c	FUNCTION_55	IF_1
0x2636	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       780	strbuf.c	FUNCTION_55	IF_1
0x263e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x2642	        0x488d45e0	                   lea rax, [rbp - 0x20]	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x2646	      0xba01000000	                              mov edx, 1	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x264b	          0x4889ce	                            mov rsi, rcx	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x264e	          0x4889c7	                            mov rdi, rax	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x2651	      0xe800000000	                          call 0x4002696	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x2656	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x265a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x265e	          0x4889d6	                            mov rsi, rdx	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x2661	          0x4889c7	                            mov rdi, rax	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x2664	      0xe800000000	                          call 0x40026a9	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x2669	        0x488d45e0	                   lea rax, [rbp - 0x20]	       783	strbuf.c	FUNCTION_55	IF_1	CALL_3
0x266d	          0x4889c7	                            mov rdi, rax	       783	strbuf.c	FUNCTION_55	IF_1	CALL_3
0x2670	      0xe800000000	                          call 0x40026b5	       783	strbuf.c	FUNCTION_55	IF_1	CALL_3
0x2675	            0xeb18	                           jmp 0x40026cf	       786	strbuf.c	FUNCTION_55
0x2677	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       785	strbuf.c	FUNCTION_55	CALL_4
0x267b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       785	strbuf.c	FUNCTION_55	CALL_4
0x267f	      0xba01000000	                              mov edx, 1	       785	strbuf.c	FUNCTION_55	CALL_4
0x2684	          0x4889ce	                            mov rsi, rcx	       785	strbuf.c	FUNCTION_55	CALL_4
0x2687	          0x4889c7	                            mov rdi, rax	       785	strbuf.c	FUNCTION_55	CALL_4
0x268a	      0xe800000000	                          call 0x40026cf	       785	strbuf.c	FUNCTION_55	CALL_4
0x268f	              0x90	                                     nop	       786	strbuf.c	FUNCTION_55
0x2690	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	strbuf.c	FUNCTION_55
0x2694	    0x644833042528	                xor rax, qword fs:[0x28]	       786	strbuf.c	FUNCTION_55
0x269d	            0x7405	                            je 0x40026e4	       786	strbuf.c	FUNCTION_55
0x269f	      0xe800000000	                          call 0x40026e4	       786	strbuf.c	FUNCTION_55
0x26a4	              0xc9	                                   leave	       786	strbuf.c	FUNCTION_55
0x26a5	              0xc3	                                     ret	       786	strbuf.c	FUNCTION_55
printf_ln	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4:FOR,0:ELSE,0:IF,1	50
0x26a6	              0x55	                                push rbp	       789	strbuf.c	FUNCTION_56
0x26a7	          0x4889e5	                            mov rbp, rsp	       789	strbuf.c	FUNCTION_56
0x26aa	    0x4881ecf00000	                           sub rsp, 0xf0	       789	strbuf.c	FUNCTION_56
0x26b1	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       789	strbuf.c	FUNCTION_56
0x26b8	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       789	strbuf.c	FUNCTION_56
0x26bf	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       789	strbuf.c	FUNCTION_56
0x26c6	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       789	strbuf.c	FUNCTION_56
0x26cd	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       789	strbuf.c	FUNCTION_56
0x26d4	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       789	strbuf.c	FUNCTION_56
0x26db	            0x84c0	                             test al, al	       789	strbuf.c	FUNCTION_56
0x26dd	            0x7420	                            je 0x400273f	       789	strbuf.c	FUNCTION_56
0x26df	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       789	strbuf.c	FUNCTION_56
0x26e3	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       789	strbuf.c	FUNCTION_56
0x26e7	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       789	strbuf.c	FUNCTION_56
0x26eb	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       789	strbuf.c	FUNCTION_56
0x26ef	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       789	strbuf.c	FUNCTION_56
0x26f3	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       789	strbuf.c	FUNCTION_56
0x26f7	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       789	strbuf.c	FUNCTION_56
0x26fb	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       789	strbuf.c	FUNCTION_56
0x26ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       789	strbuf.c	FUNCTION_56
0x2708	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       789	strbuf.c	FUNCTION_56
0x270f	            0x31c0	                            xor eax, eax	       789	strbuf.c	FUNCTION_56
0x2711	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       792	strbuf.c	FUNCTION_56	CALL_1
0x271b	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       792	strbuf.c	FUNCTION_56	CALL_1
0x2725	        0x488d4510	                   lea rax, [rbp + 0x10]	       792	strbuf.c	FUNCTION_56	CALL_1
0x2729	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       792	strbuf.c	FUNCTION_56	CALL_1
0x2730	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       792	strbuf.c	FUNCTION_56	CALL_1
0x2737	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       792	strbuf.c	FUNCTION_56	CALL_1
0x273e	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       793	strbuf.c	FUNCTION_56	CALL_2
0x2745	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       793	strbuf.c	FUNCTION_56	CALL_2
0x274c	          0x4889d6	                            mov rsi, rdx	       793	strbuf.c	FUNCTION_56	CALL_2
0x274f	          0x4889c7	                            mov rdi, rax	       793	strbuf.c	FUNCTION_56	CALL_2
0x2752	      0xe800000000	                          call 0x4002797	       793	strbuf.c	FUNCTION_56	CALL_2
0x2757	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       793	strbuf.c	FUNCTION_56	CALL_2
0x275d	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x2764	            0x780f	                            js 0x40027b5	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x2766	      0xbf0a000000	                            mov edi, 0xa	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x276b	      0xe800000000	                          call 0x40027b0	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x2770	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x2773	            0x7507	                           jne 0x40027bc	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x2775	      0xb8ffffffff	                     mov eax, 0xffffffff	       796	strbuf.c	FUNCTION_56	IF_1
0x277a	            0xeb09	                           jmp 0x40027c5	       796	strbuf.c	FUNCTION_56	IF_1
0x277c	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       797	strbuf.c	FUNCTION_56
0x2782	          0x83c001	                              add eax, 1	       797	strbuf.c	FUNCTION_56
0x2785	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       798	strbuf.c	FUNCTION_56
0x278c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       798	strbuf.c	FUNCTION_56
0x2795	            0x7405	                            je 0x40027dc	       798	strbuf.c	FUNCTION_56
0x2797	      0xe800000000	                          call 0x40027dc	       798	strbuf.c	FUNCTION_56
0x279c	              0xc9	                                   leave	       798	strbuf.c	FUNCTION_56
0x279d	              0xc3	                                     ret	       798	strbuf.c	FUNCTION_56
git_has_dos_drive_prefix	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,0	6
0x0	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_67
0x1	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_67
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_67
0x8	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_67
0xd	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_67
0xe	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_67
strbuf_grow	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4:FOR,0:ELSE,0:IF,3	91
0x675	              0x55	                                push rbp	        91	strbuf.c	FUNCTION_8
0x676	          0x4889e5	                            mov rbp, rsp	        91	strbuf.c	FUNCTION_8
0x679	        0x4883ec20	                           sub rsp, 0x20	        91	strbuf.c	FUNCTION_8
0x67d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        91	strbuf.c	FUNCTION_8
0x681	        0x488975e0	             mov qword [rbp - 0x20], rsi	        91	strbuf.c	FUNCTION_8
0x685	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	strbuf.c	FUNCTION_8
0x689	          0x488b00	                    mov rax, qword [rax]	        92	strbuf.c	FUNCTION_8
0x68c	          0x4885c0	                           test rax, rax	        92	strbuf.c	FUNCTION_8
0x68f	           0xf94c0	                                 sete al	        92	strbuf.c	FUNCTION_8
0x692	           0xfb6c0	                           movzx eax, al	        92	strbuf.c	FUNCTION_8
0x695	          0x8945fc	                mov dword [rbp - 4], eax	        92	strbuf.c	FUNCTION_8
0x698	      0x48837de0ff	cmp qword [rbp - 0x20], 0xffffffffffffffff	        93	strbuf.c	FUNCTION_8	IF_1	CALL_1
0x69d	            0x7418	                            je 0x40006f7	        93	strbuf.c	FUNCTION_8	IF_1	CALL_1
0x69f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	strbuf.c	FUNCTION_8	IF_1	CALL_2
0x6a3	        0x488d5001	                      lea rdx, [rax + 1]	        94	strbuf.c	FUNCTION_8	IF_1	CALL_2
0x6a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	strbuf.c	FUNCTION_8	IF_1	CALL_2
0x6ab	        0x488b4008	                mov rax, qword [rax + 8]	        94	strbuf.c	FUNCTION_8	IF_1	CALL_2
0x6af	          0x48f7d0	                                 not rax	        94	strbuf.c	FUNCTION_8	IF_1	CALL_2
0x6b2	          0x4839c2	                            cmp rdx, rax	        93	strbuf.c	FUNCTION_8	IF_1	CALL_1
0x6b5	            0x760f	                           jbe 0x4000706	        93	strbuf.c	FUNCTION_8	IF_1	CALL_1
0x6b7	      0xbf00000000	                              mov edi, 0	        95	strbuf.c	FUNCTION_8	CALL_3
0x6bc	      0xb800000000	                              mov eax, 0	        95	strbuf.c	FUNCTION_8	CALL_3
0x6c1	      0xe800000000	                          call 0x4000706	        95	strbuf.c	FUNCTION_8	CALL_3
0x6c6	        0x837dfc00	                  cmp dword [rbp - 4], 0	        96	strbuf.c	FUNCTION_8	IF_2
0x6ca	            0x740c	                            je 0x4000718	        96	strbuf.c	FUNCTION_8	IF_2
0x6cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	strbuf.c	FUNCTION_8	IF_2
0x6d0	    0x48c740100000	               mov qword [rax + 0x10], 0	        97	strbuf.c	FUNCTION_8	IF_2
0x6d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x6dc	        0x488b5008	                mov rdx, qword [rax + 8]	        98	strbuf.c	FUNCTION_8	CALL_4
0x6e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        98	strbuf.c	FUNCTION_8	CALL_4
0x6e4	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x6e7	        0x488d5001	                      lea rdx, [rax + 1]	        98	strbuf.c	FUNCTION_8	CALL_4
0x6eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x6ef	          0x488b00	                    mov rax, qword [rax]	        98	strbuf.c	FUNCTION_8	CALL_4
0x6f2	          0x4839c2	                            cmp rdx, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x6f5	     0xf86a4000000	                           jbe 0x40007df	        98	strbuf.c	FUNCTION_8	CALL_4
0x6fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x6ff	          0x488b10	                    mov rdx, qword [rax]	        98	strbuf.c	FUNCTION_8	CALL_4
0x702	          0x4889d0	                            mov rax, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x705	          0x4801c0	                            add rax, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x708	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x70b	        0x4883c030	                           add rax, 0x30	        98	strbuf.c	FUNCTION_8	CALL_4
0x70f	          0x48d1e8	                              shr rax, 1	        98	strbuf.c	FUNCTION_8	CALL_4
0x712	          0x4889c1	                            mov rcx, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x715	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x719	        0x488b5008	                mov rdx, qword [rax + 8]	        98	strbuf.c	FUNCTION_8	CALL_4
0x71d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        98	strbuf.c	FUNCTION_8	CALL_4
0x721	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x724	        0x4883c001	                              add rax, 1	        98	strbuf.c	FUNCTION_8	CALL_4
0x728	          0x4839c1	                            cmp rcx, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x72b	            0x731c	                           jae 0x4000789	        98	strbuf.c	FUNCTION_8	CALL_4
0x72d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x731	        0x488b5008	                mov rdx, qword [rax + 8]	        98	strbuf.c	FUNCTION_8	CALL_4
0x735	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        98	strbuf.c	FUNCTION_8	CALL_4
0x739	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x73c	        0x488d5001	                      lea rdx, [rax + 1]	        98	strbuf.c	FUNCTION_8	CALL_4
0x740	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x744	          0x488910	                    mov qword [rax], rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x747	            0xeb21	                           jmp 0x40007aa	        98	strbuf.c	FUNCTION_8	CALL_4
0x749	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x74d	          0x488b10	                    mov rdx, qword [rax]	        98	strbuf.c	FUNCTION_8	CALL_4
0x750	          0x4889d0	                            mov rax, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x753	          0x4801c0	                            add rax, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x756	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x759	        0x4883c030	                           add rax, 0x30	        98	strbuf.c	FUNCTION_8	CALL_4
0x75d	          0x48d1e8	                              shr rax, 1	        98	strbuf.c	FUNCTION_8	CALL_4
0x760	          0x4889c2	                            mov rdx, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x763	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x767	          0x488910	                    mov qword [rax], rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x76a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x76e	          0x488b00	                    mov rax, qword [rax]	        98	strbuf.c	FUNCTION_8	CALL_4
0x771	          0x4889c6	                            mov rsi, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x774	      0xbf01000000	                              mov edi, 1	        98	strbuf.c	FUNCTION_8	CALL_4
0x779	      0xe8faf8ffff	                        call sym.st_mult	        98	strbuf.c	FUNCTION_8	CALL_4
0x77e	          0x4889c2	                            mov rdx, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x781	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x785	        0x488b4010	            mov rax, qword [rax + 0x10] 	        98	strbuf.c	FUNCTION_8	CALL_4
0x789	          0x4889d6	                            mov rsi, rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x78c	          0x4889c7	                            mov rdi, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x78f	      0xe800000000	                          call 0x40007d4	        98	strbuf.c	FUNCTION_8	CALL_4
0x794	          0x4889c2	                            mov rdx, rax	        98	strbuf.c	FUNCTION_8	CALL_4
0x797	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8	CALL_4
0x79b	        0x48895010	             mov qword [rax + 0x10], rdx	        98	strbuf.c	FUNCTION_8	CALL_4
0x79f	        0x837dfc00	                  cmp dword [rbp - 4], 0	        99	strbuf.c	FUNCTION_8	IF_3
0x7a3	            0x740b	                            je 0x40007f0	        99	strbuf.c	FUNCTION_8	IF_3
0x7a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	strbuf.c	FUNCTION_8	IF_3
0x7a9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       100	strbuf.c	FUNCTION_8	IF_3
0x7ad	          0xc60000	                       mov byte [rax], 0	       100	strbuf.c	FUNCTION_8	IF_3
0x7b0	              0x90	                                     nop	       101	strbuf.c	FUNCTION_8
0x7b1	              0xc9	                                   leave	       101	strbuf.c	FUNCTION_8
0x7b2	              0xc3	                                     ret	       101	strbuf.c	FUNCTION_8
skip_to_optional_arg_default	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,5	50
0x46a	              0x55	                                push rbp	        26	strbuf.c	FUNCTION_3
0x46b	          0x4889e5	                            mov rbp, rsp	        26	strbuf.c	FUNCTION_3
0x46e	        0x4883ec30	                           sub rsp, 0x30	        26	strbuf.c	FUNCTION_3
0x472	        0x48897de8	             mov qword [rbp - 0x18], rdi	        26	strbuf.c	FUNCTION_3
0x476	        0x488975e0	             mov qword [rbp - 0x20], rsi	        26	strbuf.c	FUNCTION_3
0x47a	        0x488955d8	             mov qword [rbp - 0x28], rdx	        26	strbuf.c	FUNCTION_3
0x47e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        26	strbuf.c	FUNCTION_3
0x482	    0x64488b042528	                mov rax, qword fs:[0x28]	        26	strbuf.c	FUNCTION_3
0x48b	        0x488945f8	                mov qword [rbp - 8], rax	        26	strbuf.c	FUNCTION_3
0x48f	            0x31c0	                            xor eax, eax	        26	strbuf.c	FUNCTION_3
0x491	        0x488d55f0	                   lea rdx, [rbp - 0x10]	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x495	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x499	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x49d	          0x4889ce	                            mov rsi, rcx	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x4a0	          0x4889c7	                            mov rdi, rax	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x4a3	      0xe87afbffff	                    call sym.skip_prefix	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x4a8	            0x85c0	                           test eax, eax	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x4aa	            0x7507	                           jne 0x40004f3	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x4ac	      0xb800000000	                              mov eax, 0	        30	strbuf.c	FUNCTION_3	IF_1
0x4b1	            0xeb51	                           jmp 0x4000544	        30	strbuf.c	FUNCTION_3	IF_1
0x4b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        32	strbuf.c	FUNCTION_3	IF_2
0x4b7	           0xfb600	                   movzx eax, byte [rax]	        32	strbuf.c	FUNCTION_3	IF_2
0x4ba	            0x84c0	                             test al, al	        32	strbuf.c	FUNCTION_3	IF_2
0x4bc	            0x7519	                           jne 0x4000517	        32	strbuf.c	FUNCTION_3	IF_2
0x4be	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        33	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4c3	            0x740b	                            je 0x4000510	        33	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        34	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4c9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        34	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4cd	          0x488910	                    mov qword [rax], rdx	        34	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4d0	      0xb801000000	                              mov eax, 1	        35	strbuf.c	FUNCTION_3	IF_2
0x4d5	            0xeb2d	                           jmp 0x4000544	        35	strbuf.c	FUNCTION_3	IF_2
0x4d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        38	strbuf.c	FUNCTION_3	IF_4
0x4db	           0xfb600	                   movzx eax, byte [rax]	        38	strbuf.c	FUNCTION_3	IF_4
0x4de	            0x3c3d	                            cmp al, 0x3d	        38	strbuf.c	FUNCTION_3	IF_4
0x4e0	            0x7407	                            je 0x4000529	        38	strbuf.c	FUNCTION_3	IF_4
0x4e2	      0xb800000000	                              mov eax, 0	        39	strbuf.c	FUNCTION_3	IF_4
0x4e7	            0xeb1b	                           jmp 0x4000544	        39	strbuf.c	FUNCTION_3	IF_4
0x4e9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        41	strbuf.c	FUNCTION_3	IF_5
0x4ee	            0x740f	                            je 0x400053f	        41	strbuf.c	FUNCTION_3	IF_5
0x4f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        42	strbuf.c	FUNCTION_3	IF_5
0x4f4	        0x488d5001	                      lea rdx, [rax + 1]	        42	strbuf.c	FUNCTION_3	IF_5
0x4f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        42	strbuf.c	FUNCTION_3	IF_5
0x4fc	          0x488910	                    mov qword [rax], rdx	        42	strbuf.c	FUNCTION_3	IF_5
0x4ff	      0xb801000000	                              mov eax, 1	        43	strbuf.c	FUNCTION_3
0x504	        0x488b75f8	                mov rsi, qword [rbp - 8]	        44	strbuf.c	FUNCTION_3
0x508	    0x644833342528	                xor rsi, qword fs:[0x28]	        44	strbuf.c	FUNCTION_3
0x511	            0x7405	                            je 0x4000558	        44	strbuf.c	FUNCTION_3
0x513	      0xe800000000	                          call 0x4000558	        44	strbuf.c	FUNCTION_3
0x518	              0xc9	                                   leave	        44	strbuf.c	FUNCTION_3
0x519	              0xc3	                                     ret	        44	strbuf.c	FUNCTION_3
strbuf_add_absolute_path	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,13:FOR,0:ELSE,1:IF,4	111
0x23ff	              0x55	                                push rbp	       753	strbuf.c	FUNCTION_54
0x2400	          0x4889e5	                            mov rbp, rsp	       753	strbuf.c	FUNCTION_54
0x2403	    0x4881ec600100	                          sub rsp, 0x160	       753	strbuf.c	FUNCTION_54
0x240a	    0x4889bda8feff	            mov qword [rbp - 0x158], rdi	       753	strbuf.c	FUNCTION_54
0x2411	    0x4889b5a0feff	            mov qword [rbp - 0x160], rsi	       753	strbuf.c	FUNCTION_54
0x2418	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	strbuf.c	FUNCTION_54
0x2421	        0x488945f8	                mov qword [rbp - 8], rax	       753	strbuf.c	FUNCTION_54
0x2425	            0x31c0	                            xor eax, eax	       753	strbuf.c	FUNCTION_54
0x2427	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       754	strbuf.c	FUNCTION_54	IF_1
0x242e	           0xfb600	                   movzx eax, byte [rax]	       754	strbuf.c	FUNCTION_54	IF_1
0x2431	            0x84c0	                             test al, al	       754	strbuf.c	FUNCTION_54	IF_1
0x2433	            0x750f	                           jne 0x4002484	       754	strbuf.c	FUNCTION_54	IF_1
0x2435	      0xbf00000000	                              mov edi, 0	       755	strbuf.c	FUNCTION_54	CALL_1
0x243a	      0xb800000000	                              mov eax, 0	       755	strbuf.c	FUNCTION_54	CALL_1
0x243f	      0xe800000000	                          call 0x4002484	       755	strbuf.c	FUNCTION_54	CALL_1
0x2444	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x244b	          0x4889c7	                            mov rdi, rax	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x244e	      0xe824dfffff	               call sym.is_absolute_path	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x2453	            0x85c0	                           test eax, eax	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x2455	     0xf856f010000	                           jne 0x400260a	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x245b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       758	strbuf.c	FUNCTION_54	IF_2
0x2462	        0x488b4008	                mov rax, qword [rax + 8]	       758	strbuf.c	FUNCTION_54	IF_2
0x2466	    0x488985b8feff	            mov qword [rbp - 0x148], rax	       758	strbuf.c	FUNCTION_54	IF_2
0x246d	      0xe800000000	                          call 0x40024b2	       759	strbuf.c	FUNCTION_54	IF_2	CALL_3
0x2472	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       759	strbuf.c	FUNCTION_54	IF_2	CALL_3
0x2479	      0xbf00000000	                              mov edi, 0	       760	strbuf.c	FUNCTION_54	IF_2	CALL_4
0x247e	      0xe800000000	                          call 0x40024c3	       760	strbuf.c	FUNCTION_54	IF_2	CALL_4
0x2483	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       760	strbuf.c	FUNCTION_54	IF_2	CALL_4
0x248a	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x2492	     0xf84b4000000	                            je 0x400258c	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x2498	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x249f	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24a6	          0x4889d6	                            mov rsi, rdx	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24a9	          0x4889c7	                            mov rdi, rax	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24ac	      0xe800000000	                          call 0x40024f1	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24b1	            0x85c0	                           test eax, eax	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24b3	     0xf8493000000	                            je 0x400258c	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24b9	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	       762	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_6
0x24c0	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       762	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_6
0x24c7	          0x4889d6	                            mov rsi, rdx	       762	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_6
0x24ca	          0x4889c7	                            mov rdi, rax	       762	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_6
0x24cd	      0xe800000000	                          call 0x4002512	       762	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_6
0x24d2	            0x85c0	                           test eax, eax	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24d4	            0x7576	                           jne 0x400258c	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x24d6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x24dd	          0x4885c0	                           test rax, rax	       762	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_6
0x24e0	            0x750c	                           jne 0x400252e	       762	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_6
0x24e2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x24e9	          0x4885c0	                           test rax, rax	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x24ec	            0x745e	                            je 0x400258c	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x24ee	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       764	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_7
0x24f5	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       764	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_7
0x24fc	          0x4889d6	                            mov rsi, rdx	       764	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_7
0x24ff	          0x4889c7	                            mov rdi, rax	       764	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_7
0x2502	      0xe800000000	                          call 0x4002547	       764	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_7
0x2507	            0x85c0	                           test eax, eax	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x2509	            0x7541	                           jne 0x400258c	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x250b	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x2512	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x2519	          0x4839c2	                            cmp rdx, rax	       764	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_7
0x251c	            0x752e	                           jne 0x400258c	       764	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_7
0x251e	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       766	strbuf.c	FUNCTION_54	IF_2	IF_3
0x2525	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       766	strbuf.c	FUNCTION_54	IF_2	IF_3
0x252c	          0x4839c2	                            cmp rdx, rax	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x252f	            0x751b	                           jne 0x400258c	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x2531	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       767	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x2538	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       767	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x253f	          0x4889d6	                            mov rsi, rdx	       767	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x2542	          0x4889c7	                            mov rdi, rax	       767	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x2545	      0xe886ddffff	                  call sym.strbuf_addstr	       767	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x254a	            0xeb19	                           jmp 0x40025a5	       767	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x254c	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       769	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x2553	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       769	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x255a	          0x4889d6	                            mov rsi, rdx	       769	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x255d	          0x4889c7	                            mov rdi, rax	       769	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x2560	      0xe86bddffff	                  call sym.strbuf_addstr	       769	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x2565	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x256c	        0x488b4008	                mov rax, qword [rax + 8]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2570	    0x483b85b8feff	            cmp rax, qword [rbp - 0x148]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2577	            0x7642	                           jbe 0x40025fb	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2579	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2580	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2584	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x258b	        0x488b4008	                mov rax, qword [rax + 8]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x258f	        0x4883e801	                              sub rax, 1	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2593	          0x4801d0	                            add rax, rdx	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2596	           0xfb600	                   movzx eax, byte [rax]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x2599	           0xfbec0	                           movsx eax, al	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x259c	            0x89c7	                            mov edi, eax	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x259e	      0xe86cdaffff	                 call sym.git_is_dir_sep	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x25a3	            0x85c0	                           test eax, eax	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x25a5	            0x7514	                           jne 0x40025fb	       770	strbuf.c	FUNCTION_54	IF_2	IF_4	CALL_10
0x25a7	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       771	strbuf.c	FUNCTION_54	IF_2	CALL_11
0x25ae	      0xbe2f000000	                           mov esi, 0x2f	       771	strbuf.c	FUNCTION_54	IF_2	CALL_11
0x25b3	          0x4889c7	                            mov rdi, rax	       771	strbuf.c	FUNCTION_54	IF_2	CALL_11
0x25b6	      0xe8a7dcffff	                   call sym.strbuf_addch	       771	strbuf.c	FUNCTION_54	IF_2	CALL_11
0x25bb	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       772	strbuf.c	FUNCTION_54	IF_2	CALL_12
0x25c2	          0x4889c7	                            mov rdi, rax	       772	strbuf.c	FUNCTION_54	IF_2	CALL_12
0x25c5	      0xe800000000	                          call 0x400260a	       772	strbuf.c	FUNCTION_54	IF_2	CALL_12
0x25ca	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       774	strbuf.c	FUNCTION_54	CALL_13
0x25d1	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       774	strbuf.c	FUNCTION_54	CALL_13
0x25d8	          0x4889d6	                            mov rsi, rdx	       774	strbuf.c	FUNCTION_54	CALL_13
0x25db	          0x4889c7	                            mov rdi, rax	       774	strbuf.c	FUNCTION_54	CALL_13
0x25de	      0xe8eddcffff	                  call sym.strbuf_addstr	       774	strbuf.c	FUNCTION_54	CALL_13
0x25e3	              0x90	                                     nop	       775	strbuf.c	FUNCTION_54
0x25e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       775	strbuf.c	FUNCTION_54
0x25e8	    0x644833042528	                xor rax, qword fs:[0x28]	       775	strbuf.c	FUNCTION_54
0x25f1	            0x7405	                            je 0x4002638	       775	strbuf.c	FUNCTION_54
0x25f3	      0xe800000000	                          call 0x4002638	       775	strbuf.c	FUNCTION_54
0x25f8	              0xc9	                                   leave	       775	strbuf.c	FUNCTION_54
0x25f9	              0xc3	                                     ret	       775	strbuf.c	FUNCTION_54
strbuf_init	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,1	23
0x51a	              0x55	                                push rbp	        54	strbuf.c	FUNCTION_4
0x51b	          0x4889e5	                            mov rbp, rsp	        54	strbuf.c	FUNCTION_4
0x51e	        0x4883ec10	                           sub rsp, 0x10	        54	strbuf.c	FUNCTION_4
0x522	        0x48897df8	                mov qword [rbp - 8], rdi	        54	strbuf.c	FUNCTION_4
0x526	        0x488975f0	             mov qword [rbp - 0x10], rsi	        54	strbuf.c	FUNCTION_4
0x52a	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	strbuf.c	FUNCTION_4
0x52e	    0x48c740080000	                  mov qword [rax + 8], 0	        55	strbuf.c	FUNCTION_4
0x536	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	strbuf.c	FUNCTION_4
0x53a	        0x488b5008	                mov rdx, qword [rax + 8]	        55	strbuf.c	FUNCTION_4
0x53e	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	strbuf.c	FUNCTION_4
0x542	          0x488910	                    mov qword [rax], rdx	        55	strbuf.c	FUNCTION_4
0x545	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	strbuf.c	FUNCTION_4
0x549	    0x48c740100000	               mov qword [rax + 0x10], 0	        56	strbuf.c	FUNCTION_4
0x551	      0x48837df000	               cmp qword [rbp - 0x10], 0	        57	strbuf.c	FUNCTION_4	IF_1
0x556	            0x7413	                            je 0x40005ab	        57	strbuf.c	FUNCTION_4	IF_1
0x558	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        58	strbuf.c	FUNCTION_4	CALL_1
0x55c	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	strbuf.c	FUNCTION_4	CALL_1
0x560	          0x4889d6	                            mov rsi, rdx	        58	strbuf.c	FUNCTION_4	CALL_1
0x563	          0x4889c7	                            mov rdi, rax	        58	strbuf.c	FUNCTION_4	CALL_1
0x566	      0xe800000000	                          call 0x40005ab	        58	strbuf.c	FUNCTION_4	CALL_1
0x56b	              0x90	                                     nop	        59	strbuf.c	FUNCTION_4
0x56c	              0xc9	                                   leave	        59	strbuf.c	FUNCTION_4
0x56d	              0xc3	                                     ret	        59	strbuf.c	FUNCTION_4
strbuf_avail	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,0	18
0x192	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_95
0x193	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_95
0x196	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_95
0x19a	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_95
0x19e	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_95
0x1a1	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_95
0x1a4	            0x741b	                            je 0x4000201	       141	strbuf.h	FUNCTION_95
0x1a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_95
0x1aa	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_95
0x1ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_95
0x1b1	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_95
0x1b5	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_95
0x1b8	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_95
0x1bb	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_95
0x1bf	            0xeb05	                           jmp 0x4000206	       141	strbuf.h	FUNCTION_95
0x1c1	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_95
0x1c6	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_95
0x1c7	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_95
strbuf_getline_lf	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	13
0x1f0c	              0x55	                                push rbp	       619	strbuf.c	FUNCTION_43
0x1f0d	          0x4889e5	                            mov rbp, rsp	       619	strbuf.c	FUNCTION_43
0x1f10	        0x4883ec10	                           sub rsp, 0x10	       619	strbuf.c	FUNCTION_43
0x1f14	        0x48897df8	                mov qword [rbp - 8], rdi	       619	strbuf.c	FUNCTION_43
0x1f18	        0x488975f0	             mov qword [rbp - 0x10], rsi	       619	strbuf.c	FUNCTION_43
0x1f1c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       620	strbuf.c	FUNCTION_43	CALL_1
0x1f20	        0x488b45f8	                mov rax, qword [rbp - 8]	       620	strbuf.c	FUNCTION_43	CALL_1
0x1f24	      0xba0a000000	                            mov edx, 0xa	       620	strbuf.c	FUNCTION_43	CALL_1
0x1f29	          0x4889ce	                            mov rsi, rcx	       620	strbuf.c	FUNCTION_43	CALL_1
0x1f2c	          0x4889c7	                            mov rdi, rax	       620	strbuf.c	FUNCTION_43	CALL_1
0x1f2f	      0xe8a4feffff	                call sym.strbuf_getdelim	       620	strbuf.c	FUNCTION_43	CALL_1
0x1f34	              0xc9	                                   leave	       621	strbuf.c	FUNCTION_43
0x1f35	              0xc3	                                     ret	       621	strbuf.c	FUNCTION_43
strbuf_splice	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,8:FOR,0:ELSE,0:IF,4	83
0xdfa	              0x55	                                push rbp	       221	strbuf.c	FUNCTION_19
0xdfb	          0x4889e5	                            mov rbp, rsp	       221	strbuf.c	FUNCTION_19
0xdfe	        0x4883ec30	                           sub rsp, 0x30	       221	strbuf.c	FUNCTION_19
0xe02	        0x48897df8	                mov qword [rbp - 8], rdi	       221	strbuf.c	FUNCTION_19
0xe06	        0x488975f0	             mov qword [rbp - 0x10], rsi	       221	strbuf.c	FUNCTION_19
0xe0a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       221	strbuf.c	FUNCTION_19
0xe0e	        0x48894de0	             mov qword [rbp - 0x20], rcx	       221	strbuf.c	FUNCTION_19
0xe12	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       221	strbuf.c	FUNCTION_19
0xe16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       222	strbuf.c	FUNCTION_19	IF_1	CALL_1
0xe1a	          0x48f7d0	                                 not rax	       222	strbuf.c	FUNCTION_19	IF_1	CALL_1
0xe1d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       222	strbuf.c	FUNCTION_19	IF_1	CALL_1
0xe21	            0x730f	                           jae 0x4000e72	       222	strbuf.c	FUNCTION_19	IF_1	CALL_1
0xe23	      0xbf00000000	                              mov edi, 0	       223	strbuf.c	FUNCTION_19	CALL_2
0xe28	      0xb800000000	                              mov eax, 0	       223	strbuf.c	FUNCTION_19	CALL_2
0xe2d	      0xe800000000	                          call 0x4000e72	       223	strbuf.c	FUNCTION_19	CALL_2
0xe32	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	strbuf.c	FUNCTION_19	IF_2
0xe36	        0x488b4008	                mov rax, qword [rax + 8]	       224	strbuf.c	FUNCTION_19	IF_2
0xe3a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       224	strbuf.c	FUNCTION_19	IF_2
0xe3e	            0x730f	                           jae 0x4000e8f	       224	strbuf.c	FUNCTION_19	IF_2
0xe40	      0xbf00000000	                              mov edi, 0	       225	strbuf.c	FUNCTION_19	CALL_3
0xe45	      0xb800000000	                              mov eax, 0	       225	strbuf.c	FUNCTION_19	CALL_3
0xe4a	      0xe800000000	                          call 0x4000e8f	       225	strbuf.c	FUNCTION_19	CALL_3
0xe4f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       226	strbuf.c	FUNCTION_19	IF_3
0xe53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	strbuf.c	FUNCTION_19	IF_3
0xe57	          0x4801c2	                            add rdx, rax	       226	strbuf.c	FUNCTION_19	IF_3
0xe5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       226	strbuf.c	FUNCTION_19	IF_3
0xe5e	        0x488b4008	                mov rax, qword [rax + 8]	       226	strbuf.c	FUNCTION_19	IF_3
0xe62	          0x4839c2	                            cmp rdx, rax	       226	strbuf.c	FUNCTION_19	IF_3
0xe65	            0x760f	                           jbe 0x4000eb6	       226	strbuf.c	FUNCTION_19	IF_3
0xe67	      0xbf00000000	                              mov edi, 0	       227	strbuf.c	FUNCTION_19	CALL_4
0xe6c	      0xb800000000	                              mov eax, 0	       227	strbuf.c	FUNCTION_19	CALL_4
0xe71	      0xe800000000	                          call 0x4000eb6	       227	strbuf.c	FUNCTION_19	CALL_4
0xe76	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	strbuf.c	FUNCTION_19	IF_4
0xe7a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       229	strbuf.c	FUNCTION_19	IF_4
0xe7e	            0x721a	                            jb 0x4000eda	       229	strbuf.c	FUNCTION_19	IF_4
0xe80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       230	strbuf.c	FUNCTION_19	CALL_5
0xe84	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       230	strbuf.c	FUNCTION_19	CALL_5
0xe88	          0x4889c2	                            mov rdx, rax	       230	strbuf.c	FUNCTION_19	CALL_5
0xe8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.c	FUNCTION_19	CALL_5
0xe8f	          0x4889d6	                            mov rsi, rdx	       230	strbuf.c	FUNCTION_19	CALL_5
0xe92	          0x4889c7	                            mov rdi, rax	       230	strbuf.c	FUNCTION_19	CALL_5
0xe95	      0xe800000000	                          call 0x4000eda	       230	strbuf.c	FUNCTION_19	CALL_5
0xe9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       233	strbuf.c	FUNCTION_19
0xe9e	        0x488b4008	                mov rax, qword [rax + 8]	       233	strbuf.c	FUNCTION_19
0xea2	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       233	strbuf.c	FUNCTION_19
0xea6	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       231	strbuf.c	FUNCTION_19	CALL_6
0xeaa	        0x488b55f8	                mov rdx, qword [rbp - 8]	       232	strbuf.c	FUNCTION_19
0xeae	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       232	strbuf.c	FUNCTION_19
0xeb2	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       232	strbuf.c	FUNCTION_19
0xeb6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       232	strbuf.c	FUNCTION_19
0xeba	          0x4801f1	                            add rcx, rsi	       232	strbuf.c	FUNCTION_19
0xebd	        0x488d340a	                    lea rsi, [rdx + rcx]	       232	strbuf.c	FUNCTION_19
0xec1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       231	strbuf.c	FUNCTION_19	CALL_6
0xec5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       231	strbuf.c	FUNCTION_19	CALL_6
0xec9	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	       231	strbuf.c	FUNCTION_19	CALL_6
0xecd	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       231	strbuf.c	FUNCTION_19	CALL_6
0xed1	          0x4801f9	                            add rcx, rdi	       231	strbuf.c	FUNCTION_19	CALL_6
0xed4	          0x4801d1	                            add rcx, rdx	       231	strbuf.c	FUNCTION_19	CALL_6
0xed7	          0x4889c2	                            mov rdx, rax	       231	strbuf.c	FUNCTION_19	CALL_6
0xeda	          0x4889cf	                            mov rdi, rcx	       231	strbuf.c	FUNCTION_19	CALL_6
0xedd	      0xe800000000	                          call 0x4000f22	       231	strbuf.c	FUNCTION_19	CALL_6
0xee2	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	strbuf.c	FUNCTION_19	CALL_7
0xee6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       234	strbuf.c	FUNCTION_19	CALL_7
0xeea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       234	strbuf.c	FUNCTION_19	CALL_7
0xeee	        0x488d0c02	                    lea rcx, [rdx + rax]	       234	strbuf.c	FUNCTION_19	CALL_7
0xef2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       234	strbuf.c	FUNCTION_19	CALL_7
0xef6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       234	strbuf.c	FUNCTION_19	CALL_7
0xefa	          0x4889c6	                            mov rsi, rax	       234	strbuf.c	FUNCTION_19	CALL_7
0xefd	          0x4889cf	                            mov rdi, rcx	       234	strbuf.c	FUNCTION_19	CALL_7
0xf00	      0xe800000000	                          call 0x4000f45	       234	strbuf.c	FUNCTION_19	CALL_7
0xf05	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	strbuf.c	FUNCTION_19	CALL_8
0xf09	        0x488b5008	                mov rdx, qword [rax + 8]	       235	strbuf.c	FUNCTION_19	CALL_8
0xf0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	strbuf.c	FUNCTION_19	CALL_8
0xf11	          0x4801d0	                            add rax, rdx	       235	strbuf.c	FUNCTION_19	CALL_8
0xf14	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       235	strbuf.c	FUNCTION_19	CALL_8
0xf18	          0x4889c2	                            mov rdx, rax	       235	strbuf.c	FUNCTION_19	CALL_8
0xf1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	strbuf.c	FUNCTION_19	CALL_8
0xf1f	          0x4889d6	                            mov rsi, rdx	       235	strbuf.c	FUNCTION_19	CALL_8
0xf22	          0x4889c7	                            mov rdi, rax	       235	strbuf.c	FUNCTION_19	CALL_8
0xf25	      0xe89ef2ffff	                  call sym.strbuf_setlen	       235	strbuf.c	FUNCTION_19	CALL_8
0xf2a	              0x90	                                     nop	       236	strbuf.c	FUNCTION_19
0xf2b	              0xc9	                                   leave	       236	strbuf.c	FUNCTION_19
0xf2c	              0xc3	                                     ret	       236	strbuf.c	FUNCTION_19
strbuf_getwholeline	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,7:FOR,0:ELSE,0:IF,4	70
0x1ccb	              0x55	                                push rbp	       526	strbuf.c	FUNCTION_39
0x1ccc	          0x4889e5	                            mov rbp, rsp	       526	strbuf.c	FUNCTION_39
0x1ccf	        0x4883ec30	                           sub rsp, 0x30	       526	strbuf.c	FUNCTION_39
0x1cd3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       526	strbuf.c	FUNCTION_39
0x1cd7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       526	strbuf.c	FUNCTION_39
0x1cdb	          0x8955dc	             mov dword [rbp - 0x24], edx	       526	strbuf.c	FUNCTION_39
0x1cde	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x1ce2	          0x4889c7	                            mov rdi, rax	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x1ce5	      0xe800000000	                          call 0x4001d2a	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x1cea	            0x85c0	                           test eax, eax	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x1cec	            0x740a	                            je 0x4001d38	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x1cee	      0xb8ffffffff	                     mov eax, 0xffffffff	       530	strbuf.c	FUNCTION_39	IF_1
0x1cf3	      0xe9de000000	                           jmp 0x4001e16	       530	strbuf.c	FUNCTION_39	IF_1
0x1cf8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	strbuf.c	FUNCTION_39	CALL_2
0x1cfc	      0xbe00000000	                              mov esi, 0	       532	strbuf.c	FUNCTION_39	CALL_2
0x1d01	          0x4889c7	                            mov rdi, rax	       532	strbuf.c	FUNCTION_39	CALL_2
0x1d04	      0xe8bfe4ffff	                  call sym.strbuf_setlen	       532	strbuf.c	FUNCTION_39	CALL_2
0x1d09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	strbuf.c	FUNCTION_39	IF_2
0x1d0d	          0x488b00	                    mov rax, qword [rax]	       535	strbuf.c	FUNCTION_39	IF_2
0x1d10	          0x4885c0	                           test rax, rax	       535	strbuf.c	FUNCTION_39	IF_2
0x1d13	            0x750c	                           jne 0x4001d61	       535	strbuf.c	FUNCTION_39	IF_2
0x1d15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	strbuf.c	FUNCTION_39	IF_2
0x1d19	    0x48c740100000	               mov qword [rax + 0x10], 0	       536	strbuf.c	FUNCTION_39	IF_2
0x1d21	      0xe800000000	                          call 0x4001d66	       537	strbuf.c	FUNCTION_39
0x1d26	    0xc70000000000	                      mov dword [rax], 0	       537	strbuf.c	FUNCTION_39
0x1d2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d30	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d34	        0x488d7a10	                   lea rdi, [rdx + 0x10]	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d38	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d3c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d3f	          0x4889c6	                            mov rsi, rax	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d42	      0xe800000000	                          call 0x4001d87	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d47	        0x488945f8	                mov qword [rbp - 8], rax	       538	strbuf.c	FUNCTION_39	CALL_3
0x1d4b	      0x48837df800	                  cmp qword [rbp - 8], 0	       540	strbuf.c	FUNCTION_39	IF_3
0x1d50	            0x7e13	                           jle 0x4001da5	       540	strbuf.c	FUNCTION_39	IF_3
0x1d52	        0x488b55f8	                mov rdx, qword [rbp - 8]	       541	strbuf.c	FUNCTION_39	IF_3
0x1d56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       541	strbuf.c	FUNCTION_39	IF_3
0x1d5a	        0x48895008	                mov qword [rax + 8], rdx	       541	strbuf.c	FUNCTION_39	IF_3
0x1d5e	      0xb800000000	                              mov eax, 0	       542	strbuf.c	FUNCTION_39	IF_3
0x1d63	            0xeb71	                           jmp 0x4001e16	       542	strbuf.c	FUNCTION_39	IF_3
0x1d65	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       544	strbuf.c	FUNCTION_39	CALL_4
0x1d6a	            0x7419	                            je 0x4001dc5	       544	strbuf.c	FUNCTION_39	CALL_4
0x1d6c	      0xb900000000	                              mov ecx, 0	       544	strbuf.c	FUNCTION_39	CALL_4
0x1d71	      0xba20020000	                          mov edx, 0x220	       544	strbuf.c	FUNCTION_39	CALL_4
0x1d76	      0xbe00000000	                              mov esi, 0	       544	strbuf.c	FUNCTION_39	CALL_4
0x1d7b	      0xbf00000000	                              mov edi, 0	       544	strbuf.c	FUNCTION_39	CALL_4
0x1d80	      0xe800000000	                          call 0x4001dc5	       544	strbuf.c	FUNCTION_39	CALL_4
0x1d85	      0xe800000000	                          call 0x4001dca	       557	strbuf.c	FUNCTION_39	IF_4
0x1d8a	            0x8b00	                    mov eax, dword [rax]	       557	strbuf.c	FUNCTION_39	IF_4
0x1d8c	          0x83f80c	                            cmp eax, 0xc	       557	strbuf.c	FUNCTION_39	IF_4
0x1d8f	            0x750f	                           jne 0x4001de0	       557	strbuf.c	FUNCTION_39	IF_4
0x1d91	      0xbf00000000	                              mov edi, 0	       558	strbuf.c	FUNCTION_39	CALL_5
0x1d96	      0xb800000000	                              mov eax, 0	       558	strbuf.c	FUNCTION_39	CALL_5
0x1d9b	      0xe800000000	                          call 0x4001de0	       558	strbuf.c	FUNCTION_39	CALL_5
0x1da0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       565	strbuf.c	FUNCTION_39	IF_5
0x1da4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       565	strbuf.c	FUNCTION_39	IF_5
0x1da8	          0x4885c0	                           test rax, rax	       565	strbuf.c	FUNCTION_39	IF_5
0x1dab	            0x7513	                           jne 0x4001e00	       565	strbuf.c	FUNCTION_39	IF_5
0x1dad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       566	strbuf.c	FUNCTION_39	CALL_6
0x1db1	      0xbe00000000	                              mov esi, 0	       566	strbuf.c	FUNCTION_39	CALL_6
0x1db6	          0x4889c7	                            mov rdi, rax	       566	strbuf.c	FUNCTION_39	CALL_6
0x1db9	      0xe800000000	                          call 0x4001dfe	       566	strbuf.c	FUNCTION_39	CALL_6
0x1dbe	            0xeb11	                           jmp 0x4001e11	       566	strbuf.c	FUNCTION_39	CALL_6
0x1dc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	strbuf.c	FUNCTION_39	CALL_7
0x1dc4	      0xbe00000000	                              mov esi, 0	       568	strbuf.c	FUNCTION_39	CALL_7
0x1dc9	          0x4889c7	                            mov rdi, rax	       568	strbuf.c	FUNCTION_39	CALL_7
0x1dcc	      0xe8f7e3ffff	                  call sym.strbuf_setlen	       568	strbuf.c	FUNCTION_39	CALL_7
0x1dd1	      0xb8ffffffff	                     mov eax, 0xffffffff	       569	strbuf.c	FUNCTION_39
0x1dd6	              0xc9	                                   leave	       570	strbuf.c	FUNCTION_39
0x1dd7	              0xc3	                                     ret	       570	strbuf.c	FUNCTION_39
add_lines	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,4:FOR,0:ELSE,0:IF,0	68
0x11c8	              0x55	                                push rbp	       281	strbuf.c	FUNCTION_26
0x11c9	          0x4889e5	                            mov rbp, rsp	       281	strbuf.c	FUNCTION_26
0x11cc	        0x4883ec40	                           sub rsp, 0x40	       281	strbuf.c	FUNCTION_26
0x11d0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       281	strbuf.c	FUNCTION_26
0x11d4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       281	strbuf.c	FUNCTION_26
0x11d8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       281	strbuf.c	FUNCTION_26
0x11dc	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       281	strbuf.c	FUNCTION_26
0x11e0	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       281	strbuf.c	FUNCTION_26
0x11e4	      0xe9b5000000	                           jmp 0x40012de	       282	strbuf.c	FUNCTION_26	WHILE_1
0x11e9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x11ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x11f1	      0xbe0a000000	                            mov esi, 0xa	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x11f6	          0x4889c7	                            mov rdi, rax	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x11f9	      0xe800000000	                          call 0x400123e	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x11fe	        0x488945f0	             mov qword [rbp - 0x10], rax	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x1202	      0x48837df000	               cmp qword [rbp - 0x10], 0	       285	strbuf.c	FUNCTION_26	WHILE_1
0x1207	            0x740a	                            je 0x4001253	       285	strbuf.c	FUNCTION_26	WHILE_1
0x1209	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       285	strbuf.c	FUNCTION_26	WHILE_1
0x120d	        0x4883c001	                              add rax, 1	       285	strbuf.c	FUNCTION_26	WHILE_1
0x1211	            0xeb0b	                           jmp 0x400125e	       285	strbuf.c	FUNCTION_26	WHILE_1
0x1213	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       285	strbuf.c	FUNCTION_26	WHILE_1
0x1217	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       285	strbuf.c	FUNCTION_26	WHILE_1
0x121b	          0x4801d0	                            add rax, rdx	       285	strbuf.c	FUNCTION_26	WHILE_1
0x121e	        0x488945f0	             mov qword [rbp - 0x10], rax	       285	strbuf.c	FUNCTION_26	WHILE_1
0x1222	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       288	strbuf.c	FUNCTION_26	WHILE_1
0x1227	            0x741c	                            je 0x4001285	       288	strbuf.c	FUNCTION_26	WHILE_1
0x1229	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x122d	           0xfb600	                   movzx eax, byte [rax]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x1230	            0x3c0a	                             cmp al, 0xa	       287	strbuf.c	FUNCTION_26	WHILE_1
0x1232	            0x740b	                            je 0x400127f	       287	strbuf.c	FUNCTION_26	WHILE_1
0x1234	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x1238	           0xfb600	                   movzx eax, byte [rax]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x123b	            0x3c09	                               cmp al, 9	       287	strbuf.c	FUNCTION_26	WHILE_1
0x123d	            0x7506	                           jne 0x4001285	       287	strbuf.c	FUNCTION_26	WHILE_1
0x123f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       288	strbuf.c	FUNCTION_26	WHILE_1
0x1243	            0xeb04	                           jmp 0x4001289	       288	strbuf.c	FUNCTION_26	WHILE_1
0x1245	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	strbuf.c	FUNCTION_26	WHILE_1
0x1249	        0x488945f8	                mov qword [rbp - 8], rax	       287	strbuf.c	FUNCTION_26	WHILE_1
0x124d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x1251	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x1255	          0x4889d6	                            mov rsi, rdx	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x1258	          0x4889c7	                            mov rdi, rax	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x125b	      0xe870f0ffff	                  call sym.strbuf_addstr	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x1260	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x1264	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x1268	          0x4829c2	                            sub rdx, rax	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x126b	          0x4889d0	                            mov rax, rdx	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x126e	          0x4889c2	                            mov rdx, rax	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x1271	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x1275	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x1279	          0x4889ce	                            mov rsi, rcx	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x127c	          0x4889c7	                            mov rdi, rax	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x127f	      0xe800000000	                          call 0x40012c4	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x1284	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       291	strbuf.c	FUNCTION_26	WHILE_1
0x1288	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       291	strbuf.c	FUNCTION_26	WHILE_1
0x128c	          0x4829c2	                            sub rdx, rax	       291	strbuf.c	FUNCTION_26	WHILE_1
0x128f	          0x4889d0	                            mov rax, rdx	       291	strbuf.c	FUNCTION_26	WHILE_1
0x1292	        0x482945c8	             sub qword [rbp - 0x38], rax	       291	strbuf.c	FUNCTION_26	WHILE_1
0x1296	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	strbuf.c	FUNCTION_26	WHILE_1
0x129a	        0x488945d0	             mov qword [rbp - 0x30], rax	       292	strbuf.c	FUNCTION_26	WHILE_1
0x129e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       282	strbuf.c	FUNCTION_26	WHILE_1
0x12a3	     0xf8540ffffff	                           jne 0x4001229	       282	strbuf.c	FUNCTION_26	WHILE_1
0x12a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       294	strbuf.c	FUNCTION_26	CALL_4
0x12ad	          0x4889c7	                            mov rdi, rax	       294	strbuf.c	FUNCTION_26	CALL_4
0x12b0	      0xe8a2f0ffff	           call sym.strbuf_complete_line	       294	strbuf.c	FUNCTION_26	CALL_4
0x12b5	              0x90	                                     nop	       295	strbuf.c	FUNCTION_26
0x12b6	              0xc9	                                   leave	       295	strbuf.c	FUNCTION_26
0x12b7	              0xc3	                                     ret	       295	strbuf.c	FUNCTION_26
strbuf_addbuf	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,0	35
0x1010	              0x55	                                push rbp	       256	strbuf.c	FUNCTION_23
0x1011	          0x4889e5	                            mov rbp, rsp	       256	strbuf.c	FUNCTION_23
0x1014	        0x4883ec10	                           sub rsp, 0x10	       256	strbuf.c	FUNCTION_23
0x1018	        0x48897df8	                mov qword [rbp - 8], rdi	       256	strbuf.c	FUNCTION_23
0x101c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       256	strbuf.c	FUNCTION_23
0x1020	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	strbuf.c	FUNCTION_23	CALL_1
0x1024	        0x488b5008	                mov rdx, qword [rax + 8]	       257	strbuf.c	FUNCTION_23	CALL_1
0x1028	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	strbuf.c	FUNCTION_23	CALL_1
0x102c	          0x4889d6	                            mov rsi, rdx	       257	strbuf.c	FUNCTION_23	CALL_1
0x102f	          0x4889c7	                            mov rdi, rax	       257	strbuf.c	FUNCTION_23	CALL_1
0x1032	      0xe800000000	                          call 0x4001077	       257	strbuf.c	FUNCTION_23	CALL_1
0x1037	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	strbuf.c	FUNCTION_23	CALL_2
0x103b	        0x488b5008	                mov rdx, qword [rax + 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x103f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	strbuf.c	FUNCTION_23	CALL_2
0x1043	        0x488b4010	            mov rax, qword [rax + 0x10] 	       258	strbuf.c	FUNCTION_23	CALL_2
0x1047	        0x488b4df8	                mov rcx, qword [rbp - 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x104b	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	       258	strbuf.c	FUNCTION_23	CALL_2
0x104f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x1053	        0x488b4908	                mov rcx, qword [rcx + 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x1057	          0x4801f1	                            add rcx, rsi	       258	strbuf.c	FUNCTION_23	CALL_2
0x105a	          0x4889c6	                            mov rsi, rax	       258	strbuf.c	FUNCTION_23	CALL_2
0x105d	          0x4889cf	                            mov rdi, rcx	       258	strbuf.c	FUNCTION_23	CALL_2
0x1060	      0xe800000000	                          call 0x40010a5	       258	strbuf.c	FUNCTION_23	CALL_2
0x1065	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x1069	        0x488b5008	                mov rdx, qword [rax + 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x106d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	strbuf.c	FUNCTION_23	CALL_3
0x1071	        0x488b4008	                mov rax, qword [rax + 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x1075	          0x4801c2	                            add rdx, rax	       259	strbuf.c	FUNCTION_23	CALL_3
0x1078	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x107c	          0x4889d6	                            mov rsi, rdx	       259	strbuf.c	FUNCTION_23	CALL_3
0x107f	          0x4889c7	                            mov rdi, rax	       259	strbuf.c	FUNCTION_23	CALL_3
0x1082	      0xe841f1ffff	                  call sym.strbuf_setlen	       259	strbuf.c	FUNCTION_23	CALL_3
0x1087	              0x90	                                     nop	       260	strbuf.c	FUNCTION_23
0x1088	              0xc9	                                   leave	       260	strbuf.c	FUNCTION_23
0x1089	              0xc3	                                     ret	       260	strbuf.c	FUNCTION_23
strbuf_getcwd	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,6:FOR,1:ELSE,1:IF,4	61
0x1bf5	              0x55	                                push rbp	       493	strbuf.c	FUNCTION_38
0x1bf6	          0x4889e5	                            mov rbp, rsp	       493	strbuf.c	FUNCTION_38
0x1bf9	        0x4883ec20	                           sub rsp, 0x20	       493	strbuf.c	FUNCTION_38
0x1bfd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       493	strbuf.c	FUNCTION_38
0x1c01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	strbuf.c	FUNCTION_38
0x1c05	          0x488b00	                    mov rax, qword [rax]	       494	strbuf.c	FUNCTION_38
0x1c08	        0x488945f8	                mov qword [rbp - 8], rax	       494	strbuf.c	FUNCTION_38
0x1c0c	    0x48c745f08000	           mov qword [rbp - 0x10], 0x80 	       495	strbuf.c	FUNCTION_38
0x1c14	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x1c18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x1c1c	          0x4889d6	                            mov rsi, rdx	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x1c1f	          0x4889c7	                            mov rdi, rax	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x1c22	      0xe800000000	                          call 0x4001c67	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x1c27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c2b	          0x488b10	                    mov rdx, qword [rax]	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c32	        0x488b4010	            mov rax, qword [rax + 0x10] 	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c36	          0x4889d6	                            mov rsi, rdx	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c39	          0x4889c7	                            mov rdi, rax	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c3c	      0xe800000000	                          call 0x4001c81	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c41	          0x4885c0	                           test rax, rax	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c44	            0x7429	                            je 0x4001caf	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x1c46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c4a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c4e	          0x4889c7	                            mov rdi, rax	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c51	      0xe800000000	                          call 0x4001c96	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c56	          0x4889c2	                            mov rdx, rax	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c5d	          0x4889d6	                            mov rsi, rdx	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c60	          0x4889c7	                            mov rdi, rax	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c63	      0xe860e5ffff	                  call sym.strbuf_setlen	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x1c68	      0xb800000000	                              mov eax, 0	       501	strbuf.c	FUNCTION_38	FOR_1	IF_1
0x1c6d	            0xeb5a	                           jmp 0x4001d09	       501	strbuf.c	FUNCTION_38	FOR_1	IF_1
0x1c6f	      0xe800000000	                          call 0x4001cb4	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x1c74	            0x8b00	                    mov eax, dword [rax]	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x1c76	          0x83f80d	                            cmp eax, 0xd	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x1c79	            0x750a	                           jne 0x4001cc5	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x1c7b	    0x48817df0ff0f	          cmp qword [rbp - 0x10], 0xfff 	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x1c83	            0x760e	                           jbe 0x4001cd3	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x1c85	      0xe800000000	                          call 0x4001cca	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x1c8a	            0x8b00	                    mov eax, dword [rax]	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x1c8c	          0x83f822	                           cmp eax, 0x22	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x1c8f	            0x750c	                           jne 0x4001cdd	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x1c91	            0xeb01	                           jmp 0x4001cd4	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x1c93	              0x90	                                     nop	       512	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x1c94	        0x48d165f0	               shl qword [rbp - 0x10], 1	       497	strbuf.c	FUNCTION_38	FOR_1
0x1c98	      0xe977ffffff	                           jmp 0x4001c54	       516	strbuf.c	FUNCTION_38	FOR_1
0x1c9d	              0x90	                                     nop	       515	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x1c9e	      0x48837df800	                  cmp qword [rbp - 8], 0	       517	strbuf.c	FUNCTION_38	IF_4
0x1ca3	            0x750e	                           jne 0x4001cf3	       517	strbuf.c	FUNCTION_38	IF_4
0x1ca5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	strbuf.c	FUNCTION_38	CALL_5
0x1ca9	          0x4889c7	                            mov rdi, rax	       518	strbuf.c	FUNCTION_38	CALL_5
0x1cac	      0xe800000000	                          call 0x4001cf1	       518	strbuf.c	FUNCTION_38	CALL_5
0x1cb1	            0xeb11	                           jmp 0x4001d04	       518	strbuf.c	FUNCTION_38	CALL_5
0x1cb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       520	strbuf.c	FUNCTION_38	CALL_6
0x1cb7	      0xbe00000000	                              mov esi, 0	       520	strbuf.c	FUNCTION_38	CALL_6
0x1cbc	          0x4889c7	                            mov rdi, rax	       520	strbuf.c	FUNCTION_38	CALL_6
0x1cbf	      0xe804e5ffff	                  call sym.strbuf_setlen	       520	strbuf.c	FUNCTION_38	CALL_6
0x1cc4	      0xb8ffffffff	                     mov eax, 0xffffffff	       521	strbuf.c	FUNCTION_38
0x1cc9	              0xc9	                                   leave	       522	strbuf.c	FUNCTION_38
0x1cca	              0xc3	                                     ret	       522	strbuf.c	FUNCTION_38
strbuf_add_lines	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	19
0x2082	              0x55	                                push rbp	       666	strbuf.c	FUNCTION_47
0x2083	          0x4889e5	                            mov rbp, rsp	       666	strbuf.c	FUNCTION_47
0x2086	        0x4883ec20	                           sub rsp, 0x20	       666	strbuf.c	FUNCTION_47
0x208a	        0x48897df8	                mov qword [rbp - 8], rdi	       666	strbuf.c	FUNCTION_47
0x208e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       666	strbuf.c	FUNCTION_47
0x2092	        0x488955e8	             mov qword [rbp - 0x18], rdx	       666	strbuf.c	FUNCTION_47
0x2096	        0x48894de0	             mov qword [rbp - 0x20], rcx	       666	strbuf.c	FUNCTION_47
0x209a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       667	strbuf.c	FUNCTION_47	CALL_1
0x209e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       667	strbuf.c	FUNCTION_47	CALL_1
0x20a2	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       667	strbuf.c	FUNCTION_47	CALL_1
0x20a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       667	strbuf.c	FUNCTION_47	CALL_1
0x20aa	          0x4989c8	                             mov r8, rcx	       667	strbuf.c	FUNCTION_47	CALL_1
0x20ad	          0x4889d1	                            mov rcx, rdx	       667	strbuf.c	FUNCTION_47	CALL_1
0x20b0	      0xba00000000	                              mov edx, 0	       667	strbuf.c	FUNCTION_47	CALL_1
0x20b5	          0x4889c7	                            mov rdi, rax	       667	strbuf.c	FUNCTION_47	CALL_1
0x20b8	      0xe80bf1ffff	                      call sym.add_lines	       667	strbuf.c	FUNCTION_47	CALL_1
0x20bd	              0x90	                                     nop	       668	strbuf.c	FUNCTION_47
0x20be	              0xc9	                                   leave	       668	strbuf.c	FUNCTION_47
0x20bf	              0xc3	                                     ret	       668	strbuf.c	FUNCTION_47
strbuf_expand_dict_cb	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,1:ELSE,0:IF,2	45
0x1751	              0x55	                                push rbp	       376	strbuf.c	FUNCTION_31
0x1752	          0x4889e5	                            mov rbp, rsp	       376	strbuf.c	FUNCTION_31
0x1755	        0x4883ec30	                           sub rsp, 0x30	       376	strbuf.c	FUNCTION_31
0x1759	        0x48897de8	             mov qword [rbp - 0x18], rdi	       376	strbuf.c	FUNCTION_31
0x175d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       376	strbuf.c	FUNCTION_31
0x1761	        0x488955d8	             mov qword [rbp - 0x28], rdx	       376	strbuf.c	FUNCTION_31
0x1765	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       377	strbuf.c	FUNCTION_31
0x1769	        0x488945f0	             mov qword [rbp - 0x10], rax	       377	strbuf.c	FUNCTION_31
0x176d	            0xeb4d	                           jmp 0x40017fc	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x176f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1773	          0x488b08	                    mov rcx, qword [rax]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1776	        0x488b55f8	                mov rdx, qword [rbp - 8]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x177a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x177e	          0x4889ce	                            mov rsi, rcx	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1781	          0x4889c7	                            mov rdi, rax	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1784	      0xe800000000	                          call 0x40017c9	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1789	            0x85c0	                           test eax, eax	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x178b	            0x752a	                           jne 0x40017f7	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x178d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x1791	        0x488b4008	                mov rax, qword [rax + 8]	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x1795	          0x4885c0	                           test rax, rax	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x1798	            0x7417	                            je 0x40017f1	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x179a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x179e	        0x488b5008	                mov rdx, qword [rax + 8]	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x17a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x17a6	          0x4889d6	                            mov rsi, rdx	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x17a9	          0x4889c7	                            mov rdi, rax	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x17ac	      0xe81febffff	                  call sym.strbuf_addstr	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x17b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       384	strbuf.c	FUNCTION_31	FOR_1	IF_1
0x17b5	            0xeb30	                           jmp 0x4001827	       384	strbuf.c	FUNCTION_31	FOR_1	IF_1
0x17b7	      0x488345f010	            add qword [rbp - 0x10], 0x10	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17c0	          0x488b00	                    mov rax, qword [rax]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17c3	          0x4885c0	                           test rax, rax	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17c6	            0x741a	                            je 0x4001822	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17cc	          0x488b00	                    mov rax, qword [rax]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17cf	          0x4889c7	                            mov rdi, rax	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17d2	      0xe800000000	                          call 0x4001817	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17d7	        0x488945f8	                mov qword [rbp - 8], rax	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17db	      0x48837df800	                  cmp qword [rbp - 8], 0	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17e0	            0x758d	                           jne 0x40017af	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x17e2	      0xb800000000	                              mov eax, 0	       387	strbuf.c	FUNCTION_31
0x17e7	              0xc9	                                   leave	       388	strbuf.c	FUNCTION_31
0x17e8	              0xc3	                                     ret	       388	strbuf.c	FUNCTION_31
strbuf_addstr_xml_quoted	DO,0:SWITCH,1:functions,0:WHILE,1:CALL,6:FOR,0:ELSE,0:IF,0	65
0x20c0	              0x55	                                push rbp	       671	strbuf.c	FUNCTION_48
0x20c1	          0x4889e5	                            mov rbp, rsp	       671	strbuf.c	FUNCTION_48
0x20c4	        0x4883ec20	                           sub rsp, 0x20	       671	strbuf.c	FUNCTION_48
0x20c8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       671	strbuf.c	FUNCTION_48
0x20cc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       671	strbuf.c	FUNCTION_48
0x20d0	      0xe9af000000	                           jmp 0x40021c4	       672	strbuf.c	FUNCTION_48	WHILE_1
0x20d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x20d9	      0xbe00000000	                              mov esi, 0	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x20de	          0x4889c7	                            mov rdi, rax	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x20e1	      0xe800000000	                          call 0x4002126	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x20e6	        0x488945f8	                mov qword [rbp - 8], rax	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x20ea	        0x488b55f8	                mov rdx, qword [rbp - 8]	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x20ee	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x20f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x20f6	          0x4889ce	                            mov rsi, rcx	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x20f9	          0x4889c7	                            mov rdi, rax	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x20fc	      0xe800000000	                          call 0x4002141	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x2101	        0x488b45f8	                mov rax, qword [rbp - 8]	       675	strbuf.c	FUNCTION_48	WHILE_1
0x2105	        0x480145e0	            add qword [rbp - 0x20], rax 	       675	strbuf.c	FUNCTION_48	WHILE_1
0x2109	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x210d	           0xfb600	                   movzx eax, byte [rax]	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2110	           0xfbec0	                           movsx eax, al	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2113	          0x83f826	                           cmp eax, 0x26	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2116	            0x7455	                            je 0x40021ad	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2118	          0x83f826	                           cmp eax, 0x26	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x211b	            0x7f0b	                            jg 0x4002168	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x211d	            0x85c0	                           test eax, eax	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x211f	            0x7474	                            je 0x40021d5	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2121	          0x83f822	                           cmp eax, 0x22	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2124	            0x740e	                            je 0x4002174	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2126	            0xeb57	                           jmp 0x40021bf	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2128	          0x83f83c	                           cmp eax, 0x3c	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x212b	            0x741a	                            je 0x4002187	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x212d	          0x83f83e	                           cmp eax, 0x3e	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2130	            0x7428	                            je 0x400219a	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2132	            0xeb4b	                           jmp 0x40021bf	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2134	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x2138	      0xbe00000000	                              mov esi, 0	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x213d	          0x4889c7	                            mov rdi, rax	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x2140	      0xe88be1ffff	                  call sym.strbuf_addstr	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x2145	            0xeb38	                           jmp 0x40021bf	       679	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2147	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x214b	      0xbe00000000	                              mov esi, 0	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x2150	          0x4889c7	                            mov rdi, rax	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x2153	      0xe878e1ffff	                  call sym.strbuf_addstr	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x2158	            0xeb25	                           jmp 0x40021bf	       682	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x215a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x215e	      0xbe00000000	                              mov esi, 0	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x2163	          0x4889c7	                            mov rdi, rax	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x2166	      0xe865e1ffff	                  call sym.strbuf_addstr	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x216b	            0xeb12	                           jmp 0x40021bf	       685	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x216d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x2171	      0xbe00000000	                              mov esi, 0	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x2176	          0x4889c7	                            mov rdi, rax	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x2179	      0xe852e1ffff	                  call sym.strbuf_addstr	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x217e	              0x90	                                     nop	       688	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x217f	      0x488345e001	               add qword [rbp - 0x20], 1	       692	strbuf.c	FUNCTION_48	WHILE_1
0x2184	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       672	strbuf.c	FUNCTION_48	WHILE_1
0x2188	           0xfb600	                   movzx eax, byte [rax]	       672	strbuf.c	FUNCTION_48	WHILE_1
0x218b	            0x84c0	                             test al, al	       672	strbuf.c	FUNCTION_48	WHILE_1
0x218d	     0xf8542ffffff	                           jne 0x4002115	       672	strbuf.c	FUNCTION_48	WHILE_1
0x2193	            0xeb01	                           jmp 0x40021d6	       672	strbuf.c	FUNCTION_48	WHILE_1
0x2195	              0x90	                                     nop	       690	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x2196	              0xc9	                                   leave	       694	strbuf.c	FUNCTION_48
0x2197	              0xc3	                                     ret	       694	strbuf.c	FUNCTION_48
strbuf_addstr_urlencode	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,0	20
0x22b7	              0x55	                                push rbp	       729	strbuf.c	FUNCTION_52
0x22b8	          0x4889e5	                            mov rbp, rsp	       729	strbuf.c	FUNCTION_52
0x22bb	        0x4883ec20	                           sub rsp, 0x20	       729	strbuf.c	FUNCTION_52
0x22bf	        0x48897df8	                mov qword [rbp - 8], rdi	       729	strbuf.c	FUNCTION_52
0x22c3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       729	strbuf.c	FUNCTION_52
0x22c7	          0x8955ec	             mov dword [rbp - 0x14], edx	       729	strbuf.c	FUNCTION_52
0x22ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       730	strbuf.c	FUNCTION_52	CALL_2
0x22ce	          0x4889c7	                            mov rdi, rax	       730	strbuf.c	FUNCTION_52	CALL_2
0x22d1	      0xe800000000	                          call 0x4002316	       730	strbuf.c	FUNCTION_52	CALL_2
0x22d6	          0x4889c7	                            mov rdi, rax	       730	strbuf.c	FUNCTION_52	CALL_2
0x22d9	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       730	strbuf.c	FUNCTION_52	CALL_2
0x22dc	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       730	strbuf.c	FUNCTION_52	CALL_2
0x22e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       730	strbuf.c	FUNCTION_52	CALL_2
0x22e4	            0x89d1	                            mov ecx, edx	       730	strbuf.c	FUNCTION_52	CALL_2
0x22e6	          0x4889fa	                            mov rdx, rdi	       730	strbuf.c	FUNCTION_52	CALL_2
0x22e9	          0x4889c7	                            mov rdi, rax	       730	strbuf.c	FUNCTION_52	CALL_2
0x22ec	      0xe81fffffff	           call sym.strbuf_add_urlencode	       730	strbuf.c	FUNCTION_52	CALL_2
0x22f1	              0x90	                                     nop	       731	strbuf.c	FUNCTION_52
0x22f2	              0xc9	                                   leave	       731	strbuf.c	FUNCTION_52
0x22f3	              0xc3	                                     ret	       731	strbuf.c	FUNCTION_52
sane_case	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,1	19
0xca	              0x55	                                push rbp	       992	git-compat-util.h	FUNCTION_87
0xcb	          0x4889e5	                            mov rbp, rsp	       992	git-compat-util.h	FUNCTION_87
0xce	          0x897dfc	                mov dword [rbp - 4], edi	       992	git-compat-util.h	FUNCTION_87
0xd1	          0x8975f8	                mov dword [rbp - 8], esi	       992	git-compat-util.h	FUNCTION_87
0xd4	          0x8b45fc	                mov eax, dword [rbp - 4]	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xd7	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xda	            0x4898	                                    cdqe	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xdc	     0xfb680000000	                   movzx eax, byte [rax]	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xe3	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xe6	          0x83e004	                              and eax, 4	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xe9	            0x85c0	                           test eax, eax	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xeb	            0x740c	                            je 0x4000139	       993	git-compat-util.h	FUNCTION_87	IF_1	CALL_1
0xed	          0x8b45fc	                mov eax, dword [rbp - 4]	       994	git-compat-util.h	FUNCTION_87	IF_1
0xf0	          0x83e0df	                     and eax, 0xffffffdf	       994	git-compat-util.h	FUNCTION_87	IF_1
0xf3	           0xb45f8	                 or eax, dword [rbp - 8]	       994	git-compat-util.h	FUNCTION_87	IF_1
0xf6	          0x8945fc	                mov dword [rbp - 4], eax	       994	git-compat-util.h	FUNCTION_87	IF_1
0xf9	          0x8b45fc	                mov eax, dword [rbp - 4]	       995	git-compat-util.h	FUNCTION_87
0xfc	              0x5d	                                 pop rbp	       996	git-compat-util.h	FUNCTION_87
0xfd	              0xc3	                                     ret	       996	git-compat-util.h	FUNCTION_87
strbuf_add_unique_abbrev	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,0	33
0x2d29	              0x55	                                push rbp	       922	strbuf.c	FUNCTION_63
0x2d2a	          0x4889e5	                            mov rbp, rsp	       922	strbuf.c	FUNCTION_63
0x2d2d	        0x4883ec30	                           sub rsp, 0x30	       922	strbuf.c	FUNCTION_63
0x2d31	        0x48897de8	             mov qword [rbp - 0x18], rdi	       922	strbuf.c	FUNCTION_63
0x2d35	        0x488975e0	             mov qword [rbp - 0x20], rsi	       922	strbuf.c	FUNCTION_63
0x2d39	          0x8955dc	             mov dword [rbp - 0x24], edx	       922	strbuf.c	FUNCTION_63
0x2d3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       924	strbuf.c	FUNCTION_63	CALL_1
0x2d40	      0xbe29000000	                           mov esi, 0x29	       924	strbuf.c	FUNCTION_63	CALL_1
0x2d45	          0x4889c7	                            mov rdi, rax	       924	strbuf.c	FUNCTION_63	CALL_1
0x2d48	      0xe800000000	                          call 0x4002d8d	       924	strbuf.c	FUNCTION_63	CALL_1
0x2d4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d51	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d59	        0x488b4008	                mov rax, qword [rax + 8]	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d5d	        0x488d0c02	                    lea rcx, [rdx + rax]	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d61	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d68	          0x4889c6	                            mov rsi, rax	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d6b	          0x4889cf	                            mov rdi, rcx	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d6e	      0xe800000000	                          call 0x4002db3	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d73	          0x8945fc	                mov dword [rbp - 4], eax	       925	strbuf.c	FUNCTION_63	CALL_2
0x2d76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d7a	        0x488b5008	                mov rdx, qword [rax + 8]	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d7e	          0x8b45fc	                mov eax, dword [rbp - 4]	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d81	            0x4898	                                    cdqe	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d83	          0x4801c2	                            add rdx, rax	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d8a	          0x4889d6	                            mov rsi, rdx	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d8d	          0x4889c7	                            mov rdi, rax	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d90	      0xe833d4ffff	                  call sym.strbuf_setlen	       926	strbuf.c	FUNCTION_63	CALL_3
0x2d95	              0x90	                                     nop	       927	strbuf.c	FUNCTION_63
0x2d96	              0xc9	                                   leave	       927	strbuf.c	FUNCTION_63
0x2d97	              0xc3	                                     ret	       927	strbuf.c	FUNCTION_63
xstrvfmt	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,0	27
0x299f	              0x55	                                push rbp	       837	strbuf.c	FUNCTION_60
0x29a0	          0x4889e5	                            mov rbp, rsp	       837	strbuf.c	FUNCTION_60
0x29a3	        0x4883ec30	                           sub rsp, 0x30	       837	strbuf.c	FUNCTION_60
0x29a7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       837	strbuf.c	FUNCTION_60
0x29ab	        0x488975d0	             mov qword [rbp - 0x30], rsi	       837	strbuf.c	FUNCTION_60
0x29af	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	strbuf.c	FUNCTION_60
0x29b8	        0x488945f8	                mov qword [rbp - 8], rax	       837	strbuf.c	FUNCTION_60
0x29bc	            0x31c0	                            xor eax, eax	       837	strbuf.c	FUNCTION_60
0x29be	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       838	strbuf.c	FUNCTION_60
0x29c6	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       838	strbuf.c	FUNCTION_60
0x29ce	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       838	strbuf.c	FUNCTION_60
0x29d6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       839	strbuf.c	FUNCTION_60	CALL_1
0x29da	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       839	strbuf.c	FUNCTION_60	CALL_1
0x29de	        0x488d45e0	                   lea rax, [rbp - 0x20]	       839	strbuf.c	FUNCTION_60	CALL_1
0x29e2	          0x4889ce	                            mov rsi, rcx	       839	strbuf.c	FUNCTION_60	CALL_1
0x29e5	          0x4889c7	                            mov rdi, rax	       839	strbuf.c	FUNCTION_60	CALL_1
0x29e8	      0xe800000000	                          call 0x4002a2d	       839	strbuf.c	FUNCTION_60	CALL_1
0x29ed	        0x488d45e0	                   lea rax, [rbp - 0x20]	       840	strbuf.c	FUNCTION_60	CALL_2
0x29f1	      0xbe00000000	                              mov esi, 0	       840	strbuf.c	FUNCTION_60	CALL_2
0x29f6	          0x4889c7	                            mov rdi, rax	       840	strbuf.c	FUNCTION_60	CALL_2
0x29f9	      0xe800000000	                          call 0x4002a3e	       840	strbuf.c	FUNCTION_60	CALL_2
0x29fe	        0x488b4df8	                mov rcx, qword [rbp - 8]	       841	strbuf.c	FUNCTION_60
0x2a02	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       841	strbuf.c	FUNCTION_60
0x2a0b	            0x7405	                            je 0x4002a52	       841	strbuf.c	FUNCTION_60
0x2a0d	      0xe800000000	                          call 0x4002a52	       841	strbuf.c	FUNCTION_60
0x2a12	              0xc9	                                   leave	       841	strbuf.c	FUNCTION_60
0x2a13	              0xc3	                                     ret	       841	strbuf.c	FUNCTION_60
xstrdup_toupper	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,1:ELSE,0:IF,0	36
0x2923	              0x55	                                push rbp	       825	strbuf.c	FUNCTION_59
0x2924	          0x4889e5	                            mov rbp, rsp	       825	strbuf.c	FUNCTION_59
0x2927	              0x53	                                push rbx	       825	strbuf.c	FUNCTION_59
0x2928	        0x4883ec38	                           sub rsp, 0x38	       825	strbuf.c	FUNCTION_59
0x292c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       825	strbuf.c	FUNCTION_59
0x2930	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       829	strbuf.c	FUNCTION_59	CALL_1
0x2934	          0x4889c7	                            mov rdi, rax	       829	strbuf.c	FUNCTION_59	CALL_1
0x2937	      0xe800000000	                          call 0x400297c	       829	strbuf.c	FUNCTION_59	CALL_1
0x293c	        0x488945e0	             mov qword [rbp - 0x20], rax	       829	strbuf.c	FUNCTION_59	CALL_1
0x2940	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       830	strbuf.c	FUNCTION_59	CALL_2
0x2944	          0x4889c7	                            mov rdi, rax	       830	strbuf.c	FUNCTION_59	CALL_2
0x2947	      0xe800000000	                          call 0x400298c	       830	strbuf.c	FUNCTION_59	CALL_2
0x294c	        0x488945e8	             mov qword [rbp - 0x18], rax	       830	strbuf.c	FUNCTION_59	CALL_2
0x2950	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       831	strbuf.c	FUNCTION_59	FOR_1
0x2958	            0xeb30	                           jmp 0x40029ca	       831	strbuf.c	FUNCTION_59	FOR_1
0x295a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       832	strbuf.c	FUNCTION_59	CALL_3
0x295e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	strbuf.c	FUNCTION_59	CALL_3
0x2962	        0x488d1c02	                    lea rbx, [rdx + rax]	       832	strbuf.c	FUNCTION_59	CALL_3
0x2966	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       832	strbuf.c	FUNCTION_59	CALL_3
0x296a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	strbuf.c	FUNCTION_59	CALL_3
0x296e	          0x4801d0	                            add rax, rdx	       832	strbuf.c	FUNCTION_59	CALL_3
0x2971	           0xfb600	                   movzx eax, byte [rax]	       832	strbuf.c	FUNCTION_59	CALL_3
0x2974	           0xfb6c0	                           movzx eax, al	       832	strbuf.c	FUNCTION_59	CALL_3
0x2977	      0xbe00000000	                              mov esi, 0	       832	strbuf.c	FUNCTION_59	CALL_3
0x297c	            0x89c7	                            mov edi, eax	       832	strbuf.c	FUNCTION_59	CALL_3
0x297e	      0xe847d7ffff	                      call sym.sane_case	       832	strbuf.c	FUNCTION_59	CALL_3
0x2983	            0x8803	                      mov byte [rbx], al	       832	strbuf.c	FUNCTION_59	CALL_3
0x2985	      0x488345d801	               add qword [rbp - 0x28], 1	       831	strbuf.c	FUNCTION_59	FOR_1
0x298a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       831	strbuf.c	FUNCTION_59	FOR_1
0x298e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       831	strbuf.c	FUNCTION_59	FOR_1
0x2992	            0x72c6	                            jb 0x400299a	       831	strbuf.c	FUNCTION_59	FOR_1
0x2994	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       833	strbuf.c	FUNCTION_59
0x2998	        0x4883c438	                           add rsp, 0x38	       834	strbuf.c	FUNCTION_59
0x299c	              0x5b	                                 pop rbx	       834	strbuf.c	FUNCTION_59
0x299d	              0x5d	                                 pop rbp	       834	strbuf.c	FUNCTION_59
0x299e	              0xc3	                                     ret	       834	strbuf.c	FUNCTION_59
strbuf_getline_nul	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	13
0x1f36	              0x55	                                push rbp	       624	strbuf.c	FUNCTION_44
0x1f37	          0x4889e5	                            mov rbp, rsp	       624	strbuf.c	FUNCTION_44
0x1f3a	        0x4883ec10	                           sub rsp, 0x10	       624	strbuf.c	FUNCTION_44
0x1f3e	        0x48897df8	                mov qword [rbp - 8], rdi	       624	strbuf.c	FUNCTION_44
0x1f42	        0x488975f0	             mov qword [rbp - 0x10], rsi	       624	strbuf.c	FUNCTION_44
0x1f46	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       625	strbuf.c	FUNCTION_44	CALL_1
0x1f4a	        0x488b45f8	                mov rax, qword [rbp - 8]	       625	strbuf.c	FUNCTION_44	CALL_1
0x1f4e	      0xba00000000	                              mov edx, 0	       625	strbuf.c	FUNCTION_44	CALL_1
0x1f53	          0x4889ce	                            mov rsi, rcx	       625	strbuf.c	FUNCTION_44	CALL_1
0x1f56	          0x4889c7	                            mov rdi, rax	       625	strbuf.c	FUNCTION_44	CALL_1
0x1f59	      0xe87afeffff	                call sym.strbuf_getdelim	       625	strbuf.c	FUNCTION_44	CALL_1
0x1f5e	              0xc9	                                   leave	       626	strbuf.c	FUNCTION_44
0x1f5f	              0xc3	                                     ret	       626	strbuf.c	FUNCTION_44
strbuf_setlen	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,1:IF,2	43
0x1c8	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_96
0x1c9	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_96
0x1cc	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_96
0x1d0	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_96
0x1d4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_96
0x1d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_96	IF_1
0x1dc	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_96	IF_1
0x1df	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_96	IF_1
0x1e2	            0x740d	                            je 0x4000231	       162	strbuf.h	FUNCTION_96	IF_1
0x1e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_96	IF_1
0x1e8	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_96	IF_1
0x1eb	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_96	IF_1
0x1ef	            0xeb05	                           jmp 0x4000236	       162	strbuf.h	FUNCTION_96	IF_1
0x1f1	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_96	IF_1
0x1f6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_96	IF_1
0x1fa	            0x730f	                           jae 0x400024b	       162	strbuf.h	FUNCTION_96	IF_1
0x1fc	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_96	CALL_1
0x201	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_96	CALL_1
0x206	      0xe800000000	                          call 0x400024b	       163	strbuf.h	FUNCTION_96	CALL_1
0x20b	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_96
0x20f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_96
0x213	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_96
0x217	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_96	IF_2
0x21b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_96	IF_2
0x21f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_96	IF_2
0x225	            0x7414	                            je 0x400027b	       165	strbuf.h	FUNCTION_96	IF_2
0x227	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_96	IF_2
0x22b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_96	IF_2
0x22f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_96	IF_2
0x233	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_96	IF_2
0x236	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_96	IF_2
0x239	            0xeb24	                           jmp 0x400029f	       169	strbuf.h	FUNCTION_96
0x23b	     0xfb605000000	           movzx eax, byte [0x04000282] 	       168	strbuf.h	FUNCTION_96	CALL_2
0x242	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_96	CALL_2
0x244	            0x7419	                            je 0x400029f	       168	strbuf.h	FUNCTION_96	CALL_2
0x246	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_96	CALL_2
0x24b	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_96	CALL_2
0x250	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_96	CALL_2
0x255	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_96	CALL_2
0x25a	      0xe800000000	                          call 0x400029f	       168	strbuf.h	FUNCTION_96	CALL_2
0x25f	              0x90	                                     nop	       169	strbuf.h	FUNCTION_96
0x260	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_96
0x261	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_96
strbuf_tolower	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,1:ELSE,0:IF,0	30
0xa08	              0x55	                                push rbp	       151	strbuf.c	FUNCTION_14
0xa09	          0x4889e5	                            mov rbp, rsp	       151	strbuf.c	FUNCTION_14
0xa0c	        0x4883ec18	                           sub rsp, 0x18	       151	strbuf.c	FUNCTION_14
0xa10	        0x48897de8	             mov qword [rbp - 0x18], rdi	       151	strbuf.c	FUNCTION_14
0xa14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	strbuf.c	FUNCTION_14
0xa18	        0x488b4010	            mov rax, qword [rax + 0x10] 	       152	strbuf.c	FUNCTION_14
0xa1c	        0x488945f0	             mov qword [rbp - 0x10], rax	       152	strbuf.c	FUNCTION_14
0xa20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	strbuf.c	FUNCTION_14
0xa24	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       152	strbuf.c	FUNCTION_14
0xa28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	strbuf.c	FUNCTION_14
0xa2c	        0x488b4008	                mov rax, qword [rax + 8]	       152	strbuf.c	FUNCTION_14
0xa30	          0x4801d0	                            add rax, rdx	       152	strbuf.c	FUNCTION_14
0xa33	        0x488945f8	                mov qword [rbp - 8], rax	       152	strbuf.c	FUNCTION_14
0xa37	            0xeb23	                           jmp 0x4000a9c	       153	strbuf.c	FUNCTION_14	FOR_1
0xa39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	strbuf.c	FUNCTION_14	CALL_1
0xa3d	           0xfb600	                   movzx eax, byte [rax]	       154	strbuf.c	FUNCTION_14	CALL_1
0xa40	           0xfb6c0	                           movzx eax, al	       154	strbuf.c	FUNCTION_14	CALL_1
0xa43	      0xbe20000000	                           mov esi, 0x20	       154	strbuf.c	FUNCTION_14	CALL_1
0xa48	            0x89c7	                            mov edi, eax	       154	strbuf.c	FUNCTION_14	CALL_1
0xa4a	      0xe87bf6ffff	                      call sym.sane_case	       154	strbuf.c	FUNCTION_14	CALL_1
0xa4f	            0x89c2	                            mov edx, eax	       154	strbuf.c	FUNCTION_14	CALL_1
0xa51	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	strbuf.c	FUNCTION_14	CALL_1
0xa55	            0x8810	                      mov byte [rax], dl	       154	strbuf.c	FUNCTION_14	CALL_1
0xa57	      0x488345f001	               add qword [rbp - 0x10], 1	       153	strbuf.c	FUNCTION_14	FOR_1
0xa5c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	strbuf.c	FUNCTION_14	FOR_1
0xa60	        0x483b45f8	                cmp rax, qword [rbp - 8]	       153	strbuf.c	FUNCTION_14	FOR_1
0xa64	            0x72d3	                            jb 0x4000a79	       153	strbuf.c	FUNCTION_14	FOR_1
0xa66	              0x90	                                     nop	       155	strbuf.c	FUNCTION_14
0xa67	              0xc9	                                   leave	       155	strbuf.c	FUNCTION_14
0xa68	              0xc3	                                     ret	       155	strbuf.c	FUNCTION_14
strbuf_add	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,0	32
0xfa1	              0x55	                                push rbp	       249	strbuf.c	FUNCTION_22
0xfa2	          0x4889e5	                            mov rbp, rsp	       249	strbuf.c	FUNCTION_22
0xfa5	        0x4883ec20	                           sub rsp, 0x20	       249	strbuf.c	FUNCTION_22
0xfa9	        0x48897df8	                mov qword [rbp - 8], rdi	       249	strbuf.c	FUNCTION_22
0xfad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       249	strbuf.c	FUNCTION_22
0xfb1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       249	strbuf.c	FUNCTION_22
0xfb5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       250	strbuf.c	FUNCTION_22	CALL_1
0xfb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	strbuf.c	FUNCTION_22	CALL_1
0xfbd	          0x4889d6	                            mov rsi, rdx	       250	strbuf.c	FUNCTION_22	CALL_1
0xfc0	          0x4889c7	                            mov rdi, rax	       250	strbuf.c	FUNCTION_22	CALL_1
0xfc3	      0xe800000000	                          call 0x4001008	       250	strbuf.c	FUNCTION_22	CALL_1
0xfc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	strbuf.c	FUNCTION_22	CALL_2
0xfcc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       251	strbuf.c	FUNCTION_22	CALL_2
0xfd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	strbuf.c	FUNCTION_22	CALL_2
0xfd4	        0x488b4008	                mov rax, qword [rax + 8]	       251	strbuf.c	FUNCTION_22	CALL_2
0xfd8	        0x488d0c02	                    lea rcx, [rdx + rax]	       251	strbuf.c	FUNCTION_22	CALL_2
0xfdc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       251	strbuf.c	FUNCTION_22	CALL_2
0xfe0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       251	strbuf.c	FUNCTION_22	CALL_2
0xfe4	          0x4889c6	                            mov rsi, rax	       251	strbuf.c	FUNCTION_22	CALL_2
0xfe7	          0x4889cf	                            mov rdi, rcx	       251	strbuf.c	FUNCTION_22	CALL_2
0xfea	      0xe800000000	                          call 0x400102f	       251	strbuf.c	FUNCTION_22	CALL_2
0xfef	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	strbuf.c	FUNCTION_22	CALL_3
0xff3	        0x488b5008	                mov rdx, qword [rax + 8]	       252	strbuf.c	FUNCTION_22	CALL_3
0xff7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	strbuf.c	FUNCTION_22	CALL_3
0xffb	          0x4801c2	                            add rdx, rax	       252	strbuf.c	FUNCTION_22	CALL_3
0xffe	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	strbuf.c	FUNCTION_22	CALL_3
0x1002	          0x4889d6	                            mov rsi, rdx	       252	strbuf.c	FUNCTION_22	CALL_3
0x1005	          0x4889c7	                            mov rdi, rax	       252	strbuf.c	FUNCTION_22	CALL_3
0x1008	      0xe8bbf1ffff	                  call sym.strbuf_setlen	       252	strbuf.c	FUNCTION_22	CALL_3
0x100d	              0x90	                                     nop	       253	strbuf.c	FUNCTION_22
0x100e	              0xc9	                                   leave	       253	strbuf.c	FUNCTION_22
0x100f	              0xc3	                                     ret	       253	strbuf.c	FUNCTION_22
strbuf_getline	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,3	54
0x1e50	              0x55	                                push rbp	       607	strbuf.c	FUNCTION_42
0x1e51	          0x4889e5	                            mov rbp, rsp	       607	strbuf.c	FUNCTION_42
0x1e54	        0x4883ec10	                           sub rsp, 0x10	       607	strbuf.c	FUNCTION_42
0x1e58	        0x48897df8	                mov qword [rbp - 8], rdi	       607	strbuf.c	FUNCTION_42
0x1e5c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       607	strbuf.c	FUNCTION_42
0x1e60	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e64	        0x488b45f8	                mov rax, qword [rbp - 8]	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e68	      0xba0a000000	                            mov edx, 0xa	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e6d	          0x4889ce	                            mov rsi, rcx	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e70	          0x4889c7	                            mov rdi, rax	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e73	      0xe800000000	                          call 0x4001eb8	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e78	            0x85c0	                           test eax, eax	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e7a	            0x740a	                            je 0x4001ec6	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x1e7c	      0xb8ffffffff	                     mov eax, 0xffffffff	       609	strbuf.c	FUNCTION_42	IF_1
0x1e81	      0xe984000000	                           jmp 0x4001f4a	       609	strbuf.c	FUNCTION_42	IF_1
0x1e86	        0x488b45f8	                mov rax, qword [rbp - 8]	       610	strbuf.c	FUNCTION_42	IF_2
0x1e8a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       610	strbuf.c	FUNCTION_42	IF_2
0x1e8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       610	strbuf.c	FUNCTION_42	IF_2
0x1e92	        0x488b4008	                mov rax, qword [rax + 8]	       610	strbuf.c	FUNCTION_42	IF_2
0x1e96	        0x4883e801	                              sub rax, 1	       610	strbuf.c	FUNCTION_42	IF_2
0x1e9a	          0x4801d0	                            add rax, rdx	       610	strbuf.c	FUNCTION_42	IF_2
0x1e9d	           0xfb600	                   movzx eax, byte [rax]	       610	strbuf.c	FUNCTION_42	IF_2
0x1ea0	            0x3c0a	                             cmp al, 0xa	       610	strbuf.c	FUNCTION_42	IF_2
0x1ea2	            0x7561	                           jne 0x4001f45	       610	strbuf.c	FUNCTION_42	IF_2
0x1ea4	        0x488b45f8	                mov rax, qword [rbp - 8]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x1ea8	        0x488b4008	                mov rax, qword [rax + 8]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x1eac	        0x488d50ff	                      lea rdx, [rax - 1]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x1eb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x1eb4	          0x4889d6	                            mov rsi, rdx	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x1eb7	          0x4889c7	                            mov rdi, rax	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x1eba	      0xe809e3ffff	                  call sym.strbuf_setlen	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x1ebf	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ec3	        0x488b4008	                mov rax, qword [rax + 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ec7	          0x4885c0	                           test rax, rax	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1eca	            0x7439	                            je 0x4001f45	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ecc	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ed0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ed4	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ed8	        0x488b4008	                mov rax, qword [rax + 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1edc	        0x4883e801	                              sub rax, 1	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ee0	          0x4801d0	                            add rax, rdx	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ee3	           0xfb600	                   movzx eax, byte [rax]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ee6	            0x3c0d	                             cmp al, 0xd	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1ee8	            0x751b	                           jne 0x4001f45	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x1eea	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x1eee	        0x488b4008	                mov rax, qword [rax + 8]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x1ef2	        0x488d50ff	                      lea rdx, [rax - 1]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x1ef6	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x1efa	          0x4889d6	                            mov rsi, rdx	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x1efd	          0x4889c7	                            mov rdi, rax	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x1f00	      0xe8c3e2ffff	                  call sym.strbuf_setlen	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x1f05	      0xb800000000	                              mov eax, 0	       615	strbuf.c	FUNCTION_42
0x1f0a	              0xc9	                                   leave	       616	strbuf.c	FUNCTION_42
0x1f0b	              0xc3	                                     ret	       616	strbuf.c	FUNCTION_42
xstrdup_tolower	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,1:ELSE,0:IF,0	36
0x28a7	              0x55	                                push rbp	       813	strbuf.c	FUNCTION_58
0x28a8	          0x4889e5	                            mov rbp, rsp	       813	strbuf.c	FUNCTION_58
0x28ab	              0x53	                                push rbx	       813	strbuf.c	FUNCTION_58
0x28ac	        0x4883ec38	                           sub rsp, 0x38	       813	strbuf.c	FUNCTION_58
0x28b0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       813	strbuf.c	FUNCTION_58
0x28b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       817	strbuf.c	FUNCTION_58	CALL_1
0x28b8	          0x4889c7	                            mov rdi, rax	       817	strbuf.c	FUNCTION_58	CALL_1
0x28bb	      0xe800000000	                          call 0x4002900	       817	strbuf.c	FUNCTION_58	CALL_1
0x28c0	        0x488945e0	             mov qword [rbp - 0x20], rax	       817	strbuf.c	FUNCTION_58	CALL_1
0x28c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       818	strbuf.c	FUNCTION_58	CALL_2
0x28c8	          0x4889c7	                            mov rdi, rax	       818	strbuf.c	FUNCTION_58	CALL_2
0x28cb	      0xe800000000	                          call 0x4002910	       818	strbuf.c	FUNCTION_58	CALL_2
0x28d0	        0x488945e8	             mov qword [rbp - 0x18], rax	       818	strbuf.c	FUNCTION_58	CALL_2
0x28d4	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       819	strbuf.c	FUNCTION_58	FOR_1
0x28dc	            0xeb30	                           jmp 0x400294e	       819	strbuf.c	FUNCTION_58	FOR_1
0x28de	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       820	strbuf.c	FUNCTION_58	CALL_3
0x28e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	strbuf.c	FUNCTION_58	CALL_3
0x28e6	        0x488d1c02	                    lea rbx, [rdx + rax]	       820	strbuf.c	FUNCTION_58	CALL_3
0x28ea	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       820	strbuf.c	FUNCTION_58	CALL_3
0x28ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	strbuf.c	FUNCTION_58	CALL_3
0x28f2	          0x4801d0	                            add rax, rdx	       820	strbuf.c	FUNCTION_58	CALL_3
0x28f5	           0xfb600	                   movzx eax, byte [rax]	       820	strbuf.c	FUNCTION_58	CALL_3
0x28f8	           0xfb6c0	                           movzx eax, al	       820	strbuf.c	FUNCTION_58	CALL_3
0x28fb	      0xbe20000000	                           mov esi, 0x20	       820	strbuf.c	FUNCTION_58	CALL_3
0x2900	            0x89c7	                            mov edi, eax	       820	strbuf.c	FUNCTION_58	CALL_3
0x2902	      0xe8c3d7ffff	                      call sym.sane_case	       820	strbuf.c	FUNCTION_58	CALL_3
0x2907	            0x8803	                      mov byte [rbx], al	       820	strbuf.c	FUNCTION_58	CALL_3
0x2909	      0x488345d801	               add qword [rbp - 0x28], 1	       819	strbuf.c	FUNCTION_58	FOR_1
0x290e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       819	strbuf.c	FUNCTION_58	FOR_1
0x2912	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       819	strbuf.c	FUNCTION_58	FOR_1
0x2916	            0x72c6	                            jb 0x400291e	       819	strbuf.c	FUNCTION_58	FOR_1
0x2918	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       821	strbuf.c	FUNCTION_58
0x291c	        0x4883c438	                           add rsp, 0x38	       822	strbuf.c	FUNCTION_58
0x2920	              0x5b	                                 pop rbx	       822	strbuf.c	FUNCTION_58
0x2921	              0x5d	                                 pop rbp	       822	strbuf.c	FUNCTION_58
0x2922	              0xc3	                                     ret	       822	strbuf.c	FUNCTION_58
strbuf_add_urlencode	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,5:FOR,0:ELSE,1:IF,1	51
0x2210	              0x55	                                push rbp	       715	strbuf.c	FUNCTION_51
0x2211	          0x4889e5	                            mov rbp, rsp	       715	strbuf.c	FUNCTION_51
0x2214	        0x4883ec30	                           sub rsp, 0x30	       715	strbuf.c	FUNCTION_51
0x2218	        0x48897de8	             mov qword [rbp - 0x18], rdi	       715	strbuf.c	FUNCTION_51
0x221c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       715	strbuf.c	FUNCTION_51
0x2220	        0x488955d8	             mov qword [rbp - 0x28], rdx	       715	strbuf.c	FUNCTION_51
0x2224	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       715	strbuf.c	FUNCTION_51
0x2227	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       716	strbuf.c	FUNCTION_51	CALL_1
0x222b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       716	strbuf.c	FUNCTION_51	CALL_1
0x222f	          0x4889d6	                            mov rsi, rdx	       716	strbuf.c	FUNCTION_51	CALL_1
0x2232	          0x4889c7	                            mov rdi, rax	       716	strbuf.c	FUNCTION_51	CALL_1
0x2235	      0xe800000000	                          call 0x400227a	       716	strbuf.c	FUNCTION_51	CALL_1
0x223a	            0xeb67	                           jmp 0x40022e3	       717	strbuf.c	FUNCTION_51	WHILE_1
0x223c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       718	strbuf.c	FUNCTION_51	WHILE_1
0x2240	        0x488d5001	                      lea rdx, [rax + 1]	       718	strbuf.c	FUNCTION_51	WHILE_1
0x2244	        0x488955e0	             mov qword [rbp - 0x20], rdx	       718	strbuf.c	FUNCTION_51	WHILE_1
0x2248	           0xfb600	                   movzx eax, byte [rax]	       718	strbuf.c	FUNCTION_51	WHILE_1
0x224b	          0x8845ff	                  mov byte [rbp - 1], al	       718	strbuf.c	FUNCTION_51	WHILE_1
0x224e	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x2252	            0x89c7	                            mov edi, eax	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x2254	      0xe86effffff	          call sym.is_rfc3986_unreserved	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x2259	            0x85c0	                           test eax, eax	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x225b	            0x7515	                           jne 0x40022b2	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x225d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x2261	            0x7523	                           jne 0x40022c6	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x2263	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x2267	            0x89c7	                            mov edi, eax	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x2269	      0xe82affffff	            call sym.is_rfc3986_reserved	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x226e	            0x85c0	                           test eax, eax	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x2270	            0x7414	                            je 0x40022c6	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x2272	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x2276	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x227a	            0x89d6	                            mov esi, edx	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x227c	          0x4889c7	                            mov rdi, rax	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x227f	      0xe8dedfffff	                   call sym.strbuf_addch	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x2284	            0xeb1d	                           jmp 0x40022e3	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x2286	         0xfb645ff	               movzx eax, byte [rbp - 1]	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x228a	           0xfb6d0	                           movzx edx, al	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x228d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x2291	      0xbe00000000	                              mov esi, 0	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x2296	          0x4889c7	                            mov rdi, rax	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x2299	      0xb800000000	                              mov eax, 0	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x229e	      0xe800000000	                          call 0x40022e3	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x22a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       717	strbuf.c	FUNCTION_51	WHILE_1
0x22a7	        0x488d50ff	                      lea rdx, [rax - 1]	       717	strbuf.c	FUNCTION_51	WHILE_1
0x22ab	        0x488955d8	             mov qword [rbp - 0x28], rdx	       717	strbuf.c	FUNCTION_51	WHILE_1
0x22af	          0x4885c0	                           test rax, rax	       717	strbuf.c	FUNCTION_51	WHILE_1
0x22b2	            0x7588	                           jne 0x400227c	       717	strbuf.c	FUNCTION_51	WHILE_1
0x22b4	              0x90	                                     nop	       725	strbuf.c	FUNCTION_51
0x22b5	              0xc9	                                   leave	       725	strbuf.c	FUNCTION_51
0x22b6	              0xc3	                                     ret	       725	strbuf.c	FUNCTION_51
strbuf_add_commented_lines	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,1	38
0x12b8	              0x55	                                push rbp	       298	strbuf.c	FUNCTION_27
0x12b9	          0x4889e5	                            mov rbp, rsp	       298	strbuf.c	FUNCTION_27
0x12bc	        0x4883ec20	                           sub rsp, 0x20	       298	strbuf.c	FUNCTION_27
0x12c0	        0x48897df8	                mov qword [rbp - 8], rdi	       298	strbuf.c	FUNCTION_27
0x12c4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       298	strbuf.c	FUNCTION_27
0x12c8	        0x488955e8	             mov qword [rbp - 0x18], rdx	       298	strbuf.c	FUNCTION_27
0x12cc	     0xfb615000000	           movzx edx, byte [0x04001313] 	       302	strbuf.c	FUNCTION_27	IF_1
0x12d3	     0xfb605000000	           movzx eax, byte [0x0400131a] 	       302	strbuf.c	FUNCTION_27	IF_1
0x12da	            0x38c2	                              cmp dl, al	       302	strbuf.c	FUNCTION_27	IF_1
0x12dc	            0x744a	                            je 0x4001368	       302	strbuf.c	FUNCTION_27	IF_1
0x12de	     0xfb605000000	           movzx eax, byte [0x04001325] 	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x12e5	           0xfbec0	                           movsx eax, al	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x12e8	            0x89c1	                            mov ecx, eax	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x12ea	      0xba00000000	                              mov edx, 0	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x12ef	      0xbe03000000	                              mov esi, 3	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x12f4	      0xbf00000000	                              mov edi, 0	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x12f9	      0xb800000000	                              mov eax, 0	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x12fe	      0xe800000000	                          call 0x4001343	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x1303	     0xfb605000000	           movzx eax, byte [0x0400134a] 	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x130a	           0xfbec0	                           movsx eax, al	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x130d	            0x89c1	                            mov ecx, eax	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x130f	      0xba00000000	                              mov edx, 0	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x1314	      0xbe02000000	                              mov esi, 2	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x1319	      0xbf00000000	                              mov edi, 0	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x131e	      0xb800000000	                              mov eax, 0	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x1323	      0xe800000000	                          call 0x4001368	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x1328	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       306	strbuf.c	FUNCTION_27	CALL_3
0x132c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       306	strbuf.c	FUNCTION_27	CALL_3
0x1330	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	strbuf.c	FUNCTION_27	CALL_3
0x1334	          0x4989c8	                             mov r8, rcx	       306	strbuf.c	FUNCTION_27	CALL_3
0x1337	          0x4889d1	                            mov rcx, rdx	       306	strbuf.c	FUNCTION_27	CALL_3
0x133a	      0xba00000000	                              mov edx, 0	       306	strbuf.c	FUNCTION_27	CALL_3
0x133f	      0xbe00000000	                              mov esi, 0	       306	strbuf.c	FUNCTION_27	CALL_3
0x1344	          0x4889c7	                            mov rdi, rax	       306	strbuf.c	FUNCTION_27	CALL_3
0x1347	      0xe87cfeffff	                      call sym.add_lines	       306	strbuf.c	FUNCTION_27	CALL_3
0x134c	              0x90	                                     nop	       307	strbuf.c	FUNCTION_27
0x134d	              0xc9	                                   leave	       307	strbuf.c	FUNCTION_27
0x134e	              0xc3	                                     ret	       307	strbuf.c	FUNCTION_27
git_is_dir_sep	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,0	8
0xf	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_69
0x10	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_69
0x13	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_69
0x16	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_69
0x1a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_69
0x1d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_69
0x20	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_69
0x21	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_69
xstrfmt	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,0	41
0x2a14	              0x55	                                push rbp	       844	strbuf.c	FUNCTION_61
0x2a15	          0x4889e5	                            mov rbp, rsp	       844	strbuf.c	FUNCTION_61
0x2a18	    0x4881ecf00000	                           sub rsp, 0xf0	       844	strbuf.c	FUNCTION_61
0x2a1f	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       844	strbuf.c	FUNCTION_61
0x2a26	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       844	strbuf.c	FUNCTION_61
0x2a2d	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       844	strbuf.c	FUNCTION_61
0x2a34	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       844	strbuf.c	FUNCTION_61
0x2a3b	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       844	strbuf.c	FUNCTION_61
0x2a42	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       844	strbuf.c	FUNCTION_61
0x2a49	            0x84c0	                             test al, al	       844	strbuf.c	FUNCTION_61
0x2a4b	            0x7420	                            je 0x4002aad	       844	strbuf.c	FUNCTION_61
0x2a4d	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       844	strbuf.c	FUNCTION_61
0x2a51	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       844	strbuf.c	FUNCTION_61
0x2a55	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       844	strbuf.c	FUNCTION_61
0x2a59	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       844	strbuf.c	FUNCTION_61
0x2a5d	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       844	strbuf.c	FUNCTION_61
0x2a61	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       844	strbuf.c	FUNCTION_61
0x2a65	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       844	strbuf.c	FUNCTION_61
0x2a69	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       844	strbuf.c	FUNCTION_61
0x2a6d	    0x64488b042528	                mov rax, qword fs:[0x28]	       844	strbuf.c	FUNCTION_61
0x2a76	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       844	strbuf.c	FUNCTION_61
0x2a7d	            0x31c0	                            xor eax, eax	       844	strbuf.c	FUNCTION_61
0x2a7f	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       848	strbuf.c	FUNCTION_61	CALL_1
0x2a89	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       848	strbuf.c	FUNCTION_61	CALL_1
0x2a93	        0x488d4510	                   lea rax, [rbp + 0x10]	       848	strbuf.c	FUNCTION_61	CALL_1
0x2a97	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       848	strbuf.c	FUNCTION_61	CALL_1
0x2a9e	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       848	strbuf.c	FUNCTION_61	CALL_1
0x2aa5	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       848	strbuf.c	FUNCTION_61	CALL_1
0x2aac	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       849	strbuf.c	FUNCTION_61	CALL_2
0x2ab3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       849	strbuf.c	FUNCTION_61	CALL_2
0x2aba	          0x4889d6	                            mov rsi, rdx	       849	strbuf.c	FUNCTION_61	CALL_2
0x2abd	          0x4889c7	                            mov rdi, rax	       849	strbuf.c	FUNCTION_61	CALL_2
0x2ac0	      0xe800000000	                          call 0x4002b05	       849	strbuf.c	FUNCTION_61	CALL_2
0x2ac5	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       849	strbuf.c	FUNCTION_61	CALL_2
0x2acc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       852	strbuf.c	FUNCTION_61
0x2ad3	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       853	strbuf.c	FUNCTION_61
0x2ada	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       853	strbuf.c	FUNCTION_61
0x2ae3	            0x7405	                            je 0x4002b2a	       853	strbuf.c	FUNCTION_61
0x2ae5	      0xe800000000	                          call 0x4002b2a	       853	strbuf.c	FUNCTION_61
0x2aea	              0xc9	                                   leave	       853	strbuf.c	FUNCTION_61
0x2aeb	              0xc3	                                     ret	       853	strbuf.c	FUNCTION_61
strbuf_humanise_bytes	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4:FOR,0:ELSE,3:IF,3	74
0x22f4	              0x55	                                push rbp	       734	strbuf.c	FUNCTION_53
0x22f5	          0x4889e5	                            mov rbp, rsp	       734	strbuf.c	FUNCTION_53
0x22f8	        0x4883ec20	                           sub rsp, 0x20	       734	strbuf.c	FUNCTION_53
0x22fc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       734	strbuf.c	FUNCTION_53
0x2300	        0x488975e0	             mov qword [rbp - 0x20], rsi	       734	strbuf.c	FUNCTION_53
0x2304	    0x48817de00000	     cmp qword [rbp - 0x20], 0x40000000 	       735	strbuf.c	FUNCTION_53	IF_1
0x230c	            0x7e48	                           jle 0x4002396	       735	strbuf.c	FUNCTION_53	IF_1
0x230e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       738	strbuf.c	FUNCTION_53	IF_1
0x2312	      0x25ffffff3f	                     and eax, 0x3fffffff	       738	strbuf.c	FUNCTION_53	IF_1
0x2317	          0x4863d0	                         movsxd rdx, eax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x231a	    0x4869d2c5ffff	               imul rdx, rdx, 0x31ffffc5	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x2321	        0x48c1ea20	                           shr rdx, 0x20	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x2325	          0xc1fa15	                           sar edx, 0x15	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x2328	          0xc1f81f	                           sar eax, 0x1f	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x232b	            0x29c2	                            sub edx, eax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x232d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       737	strbuf.c	FUNCTION_53	IF_1
0x2331	        0x48c1f81e	                           sar rax, 0x1e	       737	strbuf.c	FUNCTION_53	IF_1
0x2335	            0x89c6	                            mov esi, eax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x2337	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x233b	            0x89d1	                            mov ecx, edx	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x233d	            0x89f2	                            mov edx, esi	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x233f	      0xbe00000000	                              mov esi, 0	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x2344	          0x4889c7	                            mov rdi, rax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x2347	      0xb800000000	                              mov eax, 0	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x234c	      0xe800000000	                          call 0x4002391	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x2351	      0xe9a6000000	                           jmp 0x400243c	       750	strbuf.c	FUNCTION_53
0x2356	    0x48817de00000	       cmp qword [rbp - 0x20], 0x100000 	       739	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x235e	            0x7e3c	                           jle 0x40023dc	       739	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x2360	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       740	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x2364	       0x57b140000	                         add eax, 0x147b	       740	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x2369	          0x8945f8	                mov dword [rbp - 8], eax	       740	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x236c	          0x8b45f8	                mov eax, dword [rbp - 8]	       742	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x236f	      0x25ffff0f00	                        and eax, 0xfffff	       742	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x2374	          0x6bc064	                     imul eax, eax, 0x64	       742	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x2377	          0xc1f814	                           sar eax, 0x14	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x237a	            0x89c1	                            mov ecx, eax	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x237c	          0x8b45f8	                mov eax, dword [rbp - 8]	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x237f	          0xc1f814	                           sar eax, 0x14	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x2382	            0x89c2	                            mov edx, eax	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x2384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x2388	      0xbe00000000	                              mov esi, 0	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x238d	          0x4889c7	                            mov rdi, rax	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x2390	      0xb800000000	                              mov eax, 0	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x2395	      0xe800000000	                          call 0x40023da	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x239a	            0xeb60	                           jmp 0x400243c	       750	strbuf.c	FUNCTION_53
0x239c	    0x48817de00004	          cmp qword [rbp - 0x20], 0x400 	       743	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23a4	            0x7e3a	                           jle 0x4002420	       743	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       744	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23aa	          0x83c005	                              add eax, 5	       744	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23ad	          0x8945fc	                mov dword [rbp - 4], eax	       744	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23b0	          0x8b45fc	                mov eax, dword [rbp - 4]	       746	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23b3	      0x25ff030000	                          and eax, 0x3ff	       746	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23b8	          0x6bc064	                     imul eax, eax, 0x64	       746	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x23bb	          0xc1f80a	                            sar eax, 0xa	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23be	            0x89c1	                            mov ecx, eax	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23c0	          0x8b45fc	                mov eax, dword [rbp - 4]	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23c3	          0xc1f80a	                            sar eax, 0xa	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23c6	            0x89c2	                            mov edx, eax	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23cc	      0xbe00000000	                              mov esi, 0	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23d1	          0x4889c7	                            mov rdi, rax	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23d4	      0xb800000000	                              mov eax, 0	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23d9	      0xe800000000	                          call 0x400241e	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x23de	            0xeb1c	                           jmp 0x400243c	       750	strbuf.c	FUNCTION_53
0x23e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x23e4	            0x89c2	                            mov edx, eax	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x23e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x23ea	      0xbe00000000	                              mov esi, 0	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x23ef	          0x4889c7	                            mov rdi, rax	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x23f2	      0xb800000000	                              mov eax, 0	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x23f7	      0xe800000000	                          call 0x400243c	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x23fc	              0x90	                                     nop	       750	strbuf.c	FUNCTION_53
0x23fd	              0xc9	                                   leave	       750	strbuf.c	FUNCTION_53
0x23fe	              0xc3	                                     ret	       750	strbuf.c	FUNCTION_53
strbuf_addbuf_percentquote	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,1:ELSE,0:IF,1	40
0x17e9	              0x55	                                push rbp	       391	strbuf.c	FUNCTION_32
0x17ea	          0x4889e5	                            mov rbp, rsp	       391	strbuf.c	FUNCTION_32
0x17ed	        0x4883ec20	                           sub rsp, 0x20	       391	strbuf.c	FUNCTION_32
0x17f1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       391	strbuf.c	FUNCTION_32
0x17f5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       391	strbuf.c	FUNCTION_32
0x17f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	strbuf.c	FUNCTION_32
0x17fd	        0x488b4008	                mov rax, qword [rax + 8]	       392	strbuf.c	FUNCTION_32
0x1801	          0x8945fc	                mov dword [rbp - 4], eax	       392	strbuf.c	FUNCTION_32
0x1804	    0xc745f8000000	                  mov dword [rbp - 8], 0	       394	strbuf.c	FUNCTION_32	FOR_1
0x180b	            0xeb50	                           jmp 0x400189d	       394	strbuf.c	FUNCTION_32	FOR_1
0x180d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x1811	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x1815	          0x8b45f8	                mov eax, dword [rbp - 8]	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x1818	            0x4898	                                    cdqe	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x181a	          0x4801d0	                            add rax, rdx	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x181d	           0xfb600	                   movzx eax, byte [rax]	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x1820	            0x3c25	                            cmp al, 0x25	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x1822	            0x7511	                           jne 0x4001875	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x1824	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x1828	      0xbe25000000	                           mov esi, 0x25	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x182d	          0x4889c7	                            mov rdi, rax	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x1830	      0xe82deaffff	                   call sym.strbuf_addch	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x1835	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1839	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x183d	          0x8b45f8	                mov eax, dword [rbp - 8]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1840	            0x4898	                                    cdqe	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1842	          0x4801d0	                            add rax, rdx	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1845	           0xfb600	                   movzx eax, byte [rax]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1848	           0xfbed0	                           movsx edx, al	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x184b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x184f	            0x89d6	                            mov esi, edx	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1851	          0x4889c7	                            mov rdi, rax	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1854	      0xe809eaffff	                   call sym.strbuf_addch	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x1859	        0x8345f801	                  add dword [rbp - 8], 1	       394	strbuf.c	FUNCTION_32	FOR_1
0x185d	          0x8b45f8	                mov eax, dword [rbp - 8]	       394	strbuf.c	FUNCTION_32	FOR_1
0x1860	          0x3b45fc	                cmp eax, dword [rbp - 4]	       394	strbuf.c	FUNCTION_32	FOR_1
0x1863	            0x7ca8	                            jl 0x400184d	       394	strbuf.c	FUNCTION_32	FOR_1
0x1865	              0x90	                                     nop	       399	strbuf.c	FUNCTION_32
0x1866	              0xc9	                                   leave	       399	strbuf.c	FUNCTION_32
0x1867	              0xc3	                                     ret	       399	strbuf.c	FUNCTION_32
strbuf_addchars	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,0	32
0x108a	              0x55	                                push rbp	       263	strbuf.c	FUNCTION_24
0x108b	          0x4889e5	                            mov rbp, rsp	       263	strbuf.c	FUNCTION_24
0x108e	        0x4883ec20	                           sub rsp, 0x20	       263	strbuf.c	FUNCTION_24
0x1092	        0x48897df8	                mov qword [rbp - 8], rdi	       263	strbuf.c	FUNCTION_24
0x1096	          0x8975f4	              mov dword [rbp - 0xc], esi	       263	strbuf.c	FUNCTION_24
0x1099	        0x488955e8	             mov qword [rbp - 0x18], rdx	       263	strbuf.c	FUNCTION_24
0x109d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       264	strbuf.c	FUNCTION_24	CALL_1
0x10a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       264	strbuf.c	FUNCTION_24	CALL_1
0x10a5	          0x4889d6	                            mov rsi, rdx	       264	strbuf.c	FUNCTION_24	CALL_1
0x10a8	          0x4889c7	                            mov rdi, rax	       264	strbuf.c	FUNCTION_24	CALL_1
0x10ab	      0xe800000000	                          call 0x40010f0	       264	strbuf.c	FUNCTION_24	CALL_1
0x10b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       265	strbuf.c	FUNCTION_24	CALL_2
0x10b4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       265	strbuf.c	FUNCTION_24	CALL_2
0x10b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       265	strbuf.c	FUNCTION_24	CALL_2
0x10bc	        0x488b4008	                mov rax, qword [rax + 8]	       265	strbuf.c	FUNCTION_24	CALL_2
0x10c0	        0x488d0c02	                    lea rcx, [rdx + rax]	       265	strbuf.c	FUNCTION_24	CALL_2
0x10c4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       265	strbuf.c	FUNCTION_24	CALL_2
0x10c8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       265	strbuf.c	FUNCTION_24	CALL_2
0x10cb	            0x89c6	                            mov esi, eax	       265	strbuf.c	FUNCTION_24	CALL_2
0x10cd	          0x4889cf	                            mov rdi, rcx	       265	strbuf.c	FUNCTION_24	CALL_2
0x10d0	      0xe800000000	                          call 0x4001115	       265	strbuf.c	FUNCTION_24	CALL_2
0x10d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	strbuf.c	FUNCTION_24	CALL_3
0x10d9	        0x488b5008	                mov rdx, qword [rax + 8]	       266	strbuf.c	FUNCTION_24	CALL_3
0x10dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	strbuf.c	FUNCTION_24	CALL_3
0x10e1	          0x4801c2	                            add rdx, rax	       266	strbuf.c	FUNCTION_24	CALL_3
0x10e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	strbuf.c	FUNCTION_24	CALL_3
0x10e8	          0x4889d6	                            mov rsi, rdx	       266	strbuf.c	FUNCTION_24	CALL_3
0x10eb	          0x4889c7	                            mov rdi, rax	       266	strbuf.c	FUNCTION_24	CALL_3
0x10ee	      0xe8d5f0ffff	                  call sym.strbuf_setlen	       266	strbuf.c	FUNCTION_24	CALL_3
0x10f3	              0x90	                                     nop	       267	strbuf.c	FUNCTION_24
0x10f4	              0xc9	                                   leave	       267	strbuf.c	FUNCTION_24
0x10f5	              0xc3	                                     ret	       267	strbuf.c	FUNCTION_24
strbuf_split_buf	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,6:FOR,0:ELSE,0:IF,2	148
0xa69	              0x55	                                push rbp	       159	strbuf.c	FUNCTION_15
0xa6a	          0x4889e5	                            mov rbp, rsp	       159	strbuf.c	FUNCTION_15
0xa6d	        0x4883ec50	                           sub rsp, 0x50	       159	strbuf.c	FUNCTION_15
0xa71	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       159	strbuf.c	FUNCTION_15
0xa75	        0x488975c0	             mov qword [rbp - 0x40], rsi	       159	strbuf.c	FUNCTION_15
0xa79	          0x8955bc	             mov dword [rbp - 0x44], edx	       159	strbuf.c	FUNCTION_15
0xa7c	          0x894db8	             mov dword [rbp - 0x48], ecx	       159	strbuf.c	FUNCTION_15
0xa7f	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       160	strbuf.c	FUNCTION_15
0xa87	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       161	strbuf.c	FUNCTION_15
0xa8f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       161	strbuf.c	FUNCTION_15
0xa97	      0xe942010000	                           jmp 0x4000c1e	       164	strbuf.c	FUNCTION_15	WHILE_1
0xa9c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       165	strbuf.c	FUNCTION_15	WHILE_1
0xaa0	          0x8945d4	             mov dword [rbp - 0x2c], eax	       165	strbuf.c	FUNCTION_15	WHILE_1
0xaa3	        0x837db800	               cmp dword [rbp - 0x48], 0	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xaa7	            0x7e12	                           jle 0x4000afb	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xaa9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xaad	        0x488d5001	                      lea rdx, [rax + 1]	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xab1	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xab4	            0x4898	                                    cdqe	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xab6	          0x4839c2	                            cmp rdx, rax	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xab9	            0x7334	                           jae 0x4000b2f	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0xabb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0xabf	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0xac2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0xac6	            0x89ce	                            mov esi, ecx	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0xac8	          0x4889c7	                            mov rdi, rax	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0xacb	      0xe800000000	                          call 0x4000b10	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0xad0	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0xad4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       168	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xad9	            0x7414	                            je 0x4000b2f	       168	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xadb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xadf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xae3	          0x4829c2	                            sub rdx, rax	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xae6	          0x4889d0	                            mov rax, rdx	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xae9	          0x83c001	                              add eax, 1	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xaec	          0x8945d4	             mov dword [rbp - 0x2c], eax	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0xaef	      0xbf18000000	                           mov edi, 0x18	       171	strbuf.c	FUNCTION_15	WHILE_1	CALL_2
0xaf4	      0xe800000000	                          call 0x4000b39	       171	strbuf.c	FUNCTION_15	WHILE_1	CALL_2
0xaf9	        0x488945f8	                mov qword [rbp - 8], rax	       171	strbuf.c	FUNCTION_15	WHILE_1	CALL_2
0xafd	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0xb00	          0x4863d0	                         movsxd rdx, eax	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0xb03	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0xb07	          0x4889d6	                            mov rsi, rdx	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0xb0a	          0x4889c7	                            mov rdi, rax	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0xb0d	      0xe800000000	                          call 0x4000b52	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0xb12	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0xb15	          0x4863d0	                         movsxd rdx, eax	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0xb18	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0xb1c	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0xb20	          0x4889ce	                            mov rsi, rcx	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0xb23	          0x4889c7	                            mov rdi, rax	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0xb26	      0xe800000000	                          call 0x4000b6b	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0xb2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb2f	        0x4883c002	                              add rax, 2	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb33	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb37	            0x7671	                           jbe 0x4000bea	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb39	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb3d	          0x4889d0	                            mov rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb40	          0x4801c0	                            add rax, rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb43	          0x4801d0	                            add rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb46	        0x4883c030	                           add rax, 0x30	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb4a	          0x48d1e8	                              shr rax, 1	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb4d	          0x4889c2	                            mov rdx, rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb50	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb54	        0x4883c002	                              add rax, 2	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb58	          0x4839c2	                            cmp rdx, rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb5b	            0x730e	                           jae 0x4000bab	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb61	        0x4883c002	                              add rax, 2	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb65	        0x488945e8	             mov qword [rbp - 0x18], rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb69	            0xeb18	                           jmp 0x4000bc3	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb6b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb6f	          0x4889d0	                            mov rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb72	          0x4801c0	                            add rax, rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb75	          0x4801d0	                            add rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb78	        0x4883c030	                           add rax, 0x30	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb7c	          0x48d1e8	                              shr rax, 1	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb7f	        0x488945e8	             mov qword [rbp - 0x18], rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb87	          0x4889c6	                            mov rsi, rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb8a	      0xbf08000000	                              mov edi, 8	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb8f	      0xe8e4f4ffff	                        call sym.st_mult	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb94	          0x4889c2	                            mov rdx, rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb9b	          0x4889d6	                            mov rsi, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xb9e	          0x4889c7	                            mov rdi, rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xba1	      0xe800000000	                          call 0x4000be6	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xba6	        0x488945d8	             mov qword [rbp - 0x28], rax	       174	strbuf.c	FUNCTION_15	WHILE_1	CALL_5
0xbaa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbae	        0x488d5001	                      lea rdx, [rax + 1]	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbb2	        0x488955e0	             mov qword [rbp - 0x20], rdx	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbb6	    0x488d14c50000	                        lea rdx, [rax*8]	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbbe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbc2	          0x4801c2	                            add rdx, rax	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbc5	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbc9	          0x488902	                    mov qword [rdx], rax	       175	strbuf.c	FUNCTION_15	WHILE_1
0xbcc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       176	strbuf.c	FUNCTION_15	WHILE_1
0xbcf	            0x4898	                                    cdqe	       176	strbuf.c	FUNCTION_15	WHILE_1
0xbd1	        0x480145c8	            add qword [rbp - 0x38], rax 	       176	strbuf.c	FUNCTION_15	WHILE_1
0xbd5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       177	strbuf.c	FUNCTION_15	WHILE_1
0xbd8	            0x4898	                                    cdqe	       177	strbuf.c	FUNCTION_15	WHILE_1
0xbda	        0x482945c0	             sub qword [rbp - 0x40], rax	       177	strbuf.c	FUNCTION_15	WHILE_1
0xbde	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       164	strbuf.c	FUNCTION_15	WHILE_1
0xbe3	     0xf85b3feffff	                           jne 0x4000adc	       164	strbuf.c	FUNCTION_15	WHILE_1
0xbe9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       179	strbuf.c	FUNCTION_15	CALL_6
0xbed	        0x4883c001	                              add rax, 1	       179	strbuf.c	FUNCTION_15	CALL_6
0xbf1	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15	CALL_6
0xbf5	            0x7671	                           jbe 0x4000ca8	       179	strbuf.c	FUNCTION_15	CALL_6
0xbf7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15	CALL_6
0xbfb	          0x4889d0	                            mov rax, rdx	       179	strbuf.c	FUNCTION_15	CALL_6
0xbfe	          0x4801c0	                            add rax, rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc01	          0x4801d0	                            add rax, rdx	       179	strbuf.c	FUNCTION_15	CALL_6
0xc04	        0x4883c030	                           add rax, 0x30	       179	strbuf.c	FUNCTION_15	CALL_6
0xc08	          0x48d1e8	                              shr rax, 1	       179	strbuf.c	FUNCTION_15	CALL_6
0xc0b	          0x4889c2	                            mov rdx, rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc0e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       179	strbuf.c	FUNCTION_15	CALL_6
0xc12	        0x4883c001	                              add rax, 1	       179	strbuf.c	FUNCTION_15	CALL_6
0xc16	          0x4839c2	                            cmp rdx, rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc19	            0x730e	                           jae 0x4000c69	       179	strbuf.c	FUNCTION_15	CALL_6
0xc1b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       179	strbuf.c	FUNCTION_15	CALL_6
0xc1f	        0x4883c001	                              add rax, 1	       179	strbuf.c	FUNCTION_15	CALL_6
0xc23	        0x488945e8	             mov qword [rbp - 0x18], rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc27	            0xeb18	                           jmp 0x4000c81	       179	strbuf.c	FUNCTION_15	CALL_6
0xc29	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15	CALL_6
0xc2d	          0x4889d0	                            mov rax, rdx	       179	strbuf.c	FUNCTION_15	CALL_6
0xc30	          0x4801c0	                            add rax, rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc33	          0x4801d0	                            add rax, rdx	       179	strbuf.c	FUNCTION_15	CALL_6
0xc36	        0x4883c030	                           add rax, 0x30	       179	strbuf.c	FUNCTION_15	CALL_6
0xc3a	          0x48d1e8	                              shr rax, 1	       179	strbuf.c	FUNCTION_15	CALL_6
0xc3d	        0x488945e8	             mov qword [rbp - 0x18], rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15	CALL_6
0xc45	          0x4889c6	                            mov rsi, rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc48	      0xbf08000000	                              mov edi, 8	       179	strbuf.c	FUNCTION_15	CALL_6
0xc4d	      0xe826f4ffff	                        call sym.st_mult	       179	strbuf.c	FUNCTION_15	CALL_6
0xc52	          0x4889c2	                            mov rdx, rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       179	strbuf.c	FUNCTION_15	CALL_6
0xc59	          0x4889d6	                            mov rsi, rdx	       179	strbuf.c	FUNCTION_15	CALL_6
0xc5c	          0x4889c7	                            mov rdi, rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc5f	      0xe800000000	                          call 0x4000ca4	       179	strbuf.c	FUNCTION_15	CALL_6
0xc64	        0x488945d8	             mov qword [rbp - 0x28], rax	       179	strbuf.c	FUNCTION_15	CALL_6
0xc68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       180	strbuf.c	FUNCTION_15
0xc6c	    0x488d14c50000	                        lea rdx, [rax*8]	       180	strbuf.c	FUNCTION_15
0xc74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	strbuf.c	FUNCTION_15
0xc78	          0x4801d0	                            add rax, rdx	       180	strbuf.c	FUNCTION_15
0xc7b	    0x48c700000000	                      mov qword [rax], 0	       180	strbuf.c	FUNCTION_15
0xc82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	strbuf.c	FUNCTION_15
0xc86	              0xc9	                                   leave	       182	strbuf.c	FUNCTION_15
0xc87	              0xc3	                                     ret	       182	strbuf.c	FUNCTION_15
fprintf_ln	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4:FOR,0:ELSE,0:IF,1	53
0x279e	              0x55	                                push rbp	       801	strbuf.c	FUNCTION_57
0x279f	          0x4889e5	                            mov rbp, rsp	       801	strbuf.c	FUNCTION_57
0x27a2	    0x4881ecf00000	                           sub rsp, 0xf0	       801	strbuf.c	FUNCTION_57
0x27a9	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       801	strbuf.c	FUNCTION_57
0x27b0	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       801	strbuf.c	FUNCTION_57
0x27b7	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       801	strbuf.c	FUNCTION_57
0x27be	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       801	strbuf.c	FUNCTION_57
0x27c5	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       801	strbuf.c	FUNCTION_57
0x27cc	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       801	strbuf.c	FUNCTION_57
0x27d3	            0x84c0	                             test al, al	       801	strbuf.c	FUNCTION_57
0x27d5	            0x7420	                            je 0x4002837	       801	strbuf.c	FUNCTION_57
0x27d7	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       801	strbuf.c	FUNCTION_57
0x27db	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       801	strbuf.c	FUNCTION_57
0x27df	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       801	strbuf.c	FUNCTION_57
0x27e3	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       801	strbuf.c	FUNCTION_57
0x27e7	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       801	strbuf.c	FUNCTION_57
0x27eb	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       801	strbuf.c	FUNCTION_57
0x27ef	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       801	strbuf.c	FUNCTION_57
0x27f3	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       801	strbuf.c	FUNCTION_57
0x27f7	    0x64488b042528	                mov rax, qword fs:[0x28]	       801	strbuf.c	FUNCTION_57
0x2800	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       801	strbuf.c	FUNCTION_57
0x2807	            0x31c0	                            xor eax, eax	       801	strbuf.c	FUNCTION_57
0x2809	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       804	strbuf.c	FUNCTION_57	CALL_1
0x2813	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       804	strbuf.c	FUNCTION_57	CALL_1
0x281d	        0x488d4510	                   lea rax, [rbp + 0x10]	       804	strbuf.c	FUNCTION_57	CALL_1
0x2821	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       804	strbuf.c	FUNCTION_57	CALL_1
0x2828	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       804	strbuf.c	FUNCTION_57	CALL_1
0x282f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       804	strbuf.c	FUNCTION_57	CALL_1
0x2836	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       805	strbuf.c	FUNCTION_57	CALL_2
0x283d	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       805	strbuf.c	FUNCTION_57	CALL_2
0x2844	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       805	strbuf.c	FUNCTION_57	CALL_2
0x284b	          0x4889ce	                            mov rsi, rcx	       805	strbuf.c	FUNCTION_57	CALL_2
0x284e	          0x4889c7	                            mov rdi, rax	       805	strbuf.c	FUNCTION_57	CALL_2
0x2851	      0xe800000000	                          call 0x4002896	       805	strbuf.c	FUNCTION_57	CALL_2
0x2856	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       805	strbuf.c	FUNCTION_57	CALL_2
0x285c	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x2863	            0x7819	                            js 0x40028be	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x2865	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x286c	          0x4889c6	                            mov rsi, rax	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x286f	      0xbf0a000000	                            mov edi, 0xa	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x2874	      0xe800000000	                          call 0x40028b9	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x2879	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x287c	            0x7507	                           jne 0x40028c5	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x287e	      0xb8ffffffff	                     mov eax, 0xffffffff	       808	strbuf.c	FUNCTION_57	IF_1
0x2883	            0xeb09	                           jmp 0x40028ce	       808	strbuf.c	FUNCTION_57	IF_1
0x2885	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       809	strbuf.c	FUNCTION_57
0x288b	          0x83c001	                              add eax, 1	       809	strbuf.c	FUNCTION_57
0x288e	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       810	strbuf.c	FUNCTION_57
0x2895	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       810	strbuf.c	FUNCTION_57
0x289e	            0x7405	                            je 0x40028e5	       810	strbuf.c	FUNCTION_57
0x28a0	      0xe800000000	                          call 0x40028e5	       810	strbuf.c	FUNCTION_57
0x28a5	              0xc9	                                   leave	       810	strbuf.c	FUNCTION_57
0x28a6	              0xc3	                                     ret	       810	strbuf.c	FUNCTION_57
strbuf_reencode	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,2	50
0x953	              0x55	                                push rbp	       135	strbuf.c	FUNCTION_13
0x954	          0x4889e5	                            mov rbp, rsp	       135	strbuf.c	FUNCTION_13
0x957	        0x4883ec40	                           sub rsp, 0x40	       135	strbuf.c	FUNCTION_13
0x95b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       135	strbuf.c	FUNCTION_13
0x95f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       135	strbuf.c	FUNCTION_13
0x963	        0x488955c8	             mov qword [rbp - 0x38], rdx	       135	strbuf.c	FUNCTION_13
0x967	    0x64488b042528	                mov rax, qword fs:[0x28]	       135	strbuf.c	FUNCTION_13
0x970	        0x488945f8	                mov qword [rbp - 8], rax	       135	strbuf.c	FUNCTION_13
0x974	            0x31c0	                            xor eax, eax	       135	strbuf.c	FUNCTION_13
0x976	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x97a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x97e	          0x4889d6	                            mov rsi, rdx	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x981	          0x4889c7	                            mov rdi, rax	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x984	      0xe800000000	                          call 0x40009c9	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x989	            0x85c0	                           test eax, eax	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x98b	            0x7407	                            je 0x40009d4	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x98d	      0xb800000000	                              mov eax, 0	       140	strbuf.c	FUNCTION_13	IF_1
0x992	            0xeb5e	                           jmp 0x4000a32	       140	strbuf.c	FUNCTION_13	IF_1
0x994	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	strbuf.c	FUNCTION_13	CALL_2
0x998	        0x488b4008	                mov rax, qword [rax + 8]	       142	strbuf.c	FUNCTION_13	CALL_2
0x99c	            0x89c7	                            mov edi, eax	       142	strbuf.c	FUNCTION_13	CALL_2
0x99e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	strbuf.c	FUNCTION_13	CALL_2
0x9a2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       142	strbuf.c	FUNCTION_13	CALL_2
0x9a6	        0x488d75ec	                   lea rsi, [rbp - 0x14]	       142	strbuf.c	FUNCTION_13	CALL_2
0x9aa	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       142	strbuf.c	FUNCTION_13	CALL_2
0x9ae	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       142	strbuf.c	FUNCTION_13	CALL_2
0x9b2	          0x4989f0	                             mov r8, rsi	       142	strbuf.c	FUNCTION_13	CALL_2
0x9b5	            0x89fe	                            mov esi, edi	       142	strbuf.c	FUNCTION_13	CALL_2
0x9b7	          0x4889c7	                            mov rdi, rax	       142	strbuf.c	FUNCTION_13	CALL_2
0x9ba	      0xe800000000	                          call 0x40009ff	       142	strbuf.c	FUNCTION_13	CALL_2
0x9bf	        0x488945f0	             mov qword [rbp - 0x10], rax	       142	strbuf.c	FUNCTION_13	CALL_2
0x9c3	      0x48837df000	               cmp qword [rbp - 0x10], 0	       143	strbuf.c	FUNCTION_13	IF_2
0x9c8	            0x7507	                           jne 0x4000a11	       143	strbuf.c	FUNCTION_13	IF_2
0x9ca	      0xb8ffffffff	                     mov eax, 0xffffffff	       144	strbuf.c	FUNCTION_13	IF_2
0x9cf	            0xeb21	                           jmp 0x4000a32	       144	strbuf.c	FUNCTION_13	IF_2
0x9d1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       146	strbuf.c	FUNCTION_13	CALL_3
0x9d4	          0x4863c8	                         movsxd rcx, eax	       146	strbuf.c	FUNCTION_13	CALL_3
0x9d7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       146	strbuf.c	FUNCTION_13	CALL_3
0x9da	          0x4863d0	                         movsxd rdx, eax	       146	strbuf.c	FUNCTION_13	CALL_3
0x9dd	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       146	strbuf.c	FUNCTION_13	CALL_3
0x9e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	strbuf.c	FUNCTION_13	CALL_3
0x9e5	          0x4889c7	                            mov rdi, rax	       146	strbuf.c	FUNCTION_13	CALL_3
0x9e8	      0xe800000000	                          call 0x4000a2d	       146	strbuf.c	FUNCTION_13	CALL_3
0x9ed	      0xb800000000	                              mov eax, 0	       147	strbuf.c	FUNCTION_13
0x9f2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       148	strbuf.c	FUNCTION_13
0x9f6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       148	strbuf.c	FUNCTION_13
0x9ff	            0x7405	                            je 0x4000a46	       148	strbuf.c	FUNCTION_13
0xa01	      0xe800000000	                          call 0x4000a46	       148	strbuf.c	FUNCTION_13
0xa06	              0xc9	                                   leave	       148	strbuf.c	FUNCTION_13
0xa07	              0xc3	                                     ret	       148	strbuf.c	FUNCTION_13
strbuf_expand	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,5:FOR,1:ELSE,1:IF,3	60
0x167f	              0x55	                                push rbp	       349	strbuf.c	FUNCTION_30
0x1680	          0x4889e5	                            mov rbp, rsp	       349	strbuf.c	FUNCTION_30
0x1683	        0x4883ec30	                           sub rsp, 0x30	       349	strbuf.c	FUNCTION_30
0x1687	        0x48897de8	             mov qword [rbp - 0x18], rdi	       349	strbuf.c	FUNCTION_30
0x168b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       349	strbuf.c	FUNCTION_30
0x168f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       349	strbuf.c	FUNCTION_30
0x1693	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       349	strbuf.c	FUNCTION_30
0x1697	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       354	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x169b	      0xbe25000000	                           mov esi, 0x25	       354	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x16a0	          0x4889c7	                            mov rdi, rax	       354	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x16a3	      0xe800000000	                          call 0x40016e8	       354	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x16a8	        0x488945f0	             mov qword [rbp - 0x10], rax	       354	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x16ac	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16b4	          0x4829c2	                            sub rdx, rax	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16b7	          0x4889d0	                            mov rax, rdx	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16ba	          0x4889c2	                            mov rdx, rax	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16bd	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16c5	          0x4889ce	                            mov rsi, rcx	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16c8	          0x4889c7	                            mov rdi, rax	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16cb	      0xe800000000	                          call 0x4001710	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_2
0x16d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x16d4	           0xfb600	                   movzx eax, byte [rax]	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x16d7	            0x84c0	                             test al, al	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x16d9	            0x7472	                            je 0x400178d	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x16db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	strbuf.c	FUNCTION_30	FOR_1
0x16df	        0x4883c001	                              add rax, 1	       358	strbuf.c	FUNCTION_30	FOR_1
0x16e3	        0x488945e0	             mov qword [rbp - 0x20], rax	       358	strbuf.c	FUNCTION_30	FOR_1
0x16e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x16eb	           0xfb600	                   movzx eax, byte [rax]	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x16ee	            0x3c25	                            cmp al, 0x25	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x16f0	            0x7518	                           jne 0x400174a	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x16f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_3
0x16f6	      0xbe25000000	                           mov esi, 0x25	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_3
0x16fb	          0x4889c7	                            mov rdi, rax	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_3
0x16fe	      0xe85febffff	                   call sym.strbuf_addch	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_3
0x1703	      0x488345e001	               add qword [rbp - 0x20], 1	       362	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x1708	            0xeb3e	                           jmp 0x4001788	       363	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x170a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x170e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x1712	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x1716	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x171a	          0x4889cf	                            mov rdi, rcx	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x171d	            0xffd0	                                call rax	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x171f	        0x488945f8	                mov qword [rbp - 8], rax	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x1723	      0x48837df800	                  cmp qword [rbp - 8], 0	       367	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x1728	            0x740d	                            je 0x4001777	       367	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x172a	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x172e	        0x480145e0	            add qword [rbp - 0x20], rax 	       368	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x1732	      0xe960ffffff	                           jmp 0x40016d7	       368	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x1737	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_5
0x173b	      0xbe25000000	                           mov esi, 0x25	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_5
0x1740	          0x4889c7	                            mov rdi, rax	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_5
0x1743	      0xe81aebffff	                   call sym.strbuf_addch	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_5
0x1748	      0xe94affffff	                           jmp 0x40016d7	       371	strbuf.c	FUNCTION_30	FOR_1
0x174d	              0x90	                                     nop	       357	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x174e	              0x90	                                     nop	       372	strbuf.c	FUNCTION_30
0x174f	              0xc9	                                   leave	       372	strbuf.c	FUNCTION_30
0x1750	              0xc3	                                     ret	       372	strbuf.c	FUNCTION_30
istarts_with	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,1:ELSE,1:IF,2	36
0x3fb	              0x55	                                push rbp	        16	strbuf.c	FUNCTION_2
0x3fc	          0x4889e5	                            mov rbp, rsp	        16	strbuf.c	FUNCTION_2
0x3ff	              0x53	                                push rbx	        16	strbuf.c	FUNCTION_2
0x400	        0x4883ec10	                           sub rsp, 0x10	        16	strbuf.c	FUNCTION_2
0x404	        0x48897df0	             mov qword [rbp - 0x10], rdi	        16	strbuf.c	FUNCTION_2
0x408	        0x488975e8	             mov qword [rbp - 0x18], rsi	        16	strbuf.c	FUNCTION_2
0x40c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x410	           0xfb600	                   movzx eax, byte [rax]	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x413	            0x84c0	                             test al, al	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x415	            0x7507	                           jne 0x400045e	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x417	      0xb801000000	                              mov eax, 1	        19	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x41c	            0xeb45	                           jmp 0x40004a3	        19	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x41e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x422	           0xfb600	                   movzx eax, byte [rax]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x425	           0xfb6c0	                           movzx eax, al	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x428	      0xbe20000000	                           mov esi, 0x20	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x42d	            0x89c7	                            mov edi, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x42f	      0xe896fcffff	                      call sym.sane_case	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x434	            0x89c3	                            mov ebx, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x436	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x43a	           0xfb600	                   movzx eax, byte [rax]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x43d	           0xfb6c0	                           movzx eax, al	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x440	      0xbe20000000	                           mov esi, 0x20	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x445	            0x89c7	                            mov edi, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x447	      0xe87efcffff	                      call sym.sane_case	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x44c	            0x39c3	                            cmp ebx, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x44e	            0x7407	                            je 0x4000497	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x450	      0xb800000000	                              mov eax, 0	        21	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x455	            0xeb0c	                           jmp 0x40004a3	        21	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x457	      0x488345f001	               add qword [rbp - 0x10], 1	        17	strbuf.c	FUNCTION_2	FOR_1
0x45c	      0x488345e801	               add qword [rbp - 0x18], 1	        17	strbuf.c	FUNCTION_2	FOR_1
0x461	            0xeba9	                           jmp 0x400044c	        22	strbuf.c	FUNCTION_2
0x463	        0x4883c410	                           add rsp, 0x10	        22	strbuf.c	FUNCTION_2
0x467	              0x5b	                                 pop rbx	        22	strbuf.c	FUNCTION_2
0x468	              0x5d	                                 pop rbp	        22	strbuf.c	FUNCTION_2
0x469	              0xc3	                                     ret	        22	strbuf.c	FUNCTION_2
strbuf_addf	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,0	41
0x10f6	              0x55	                                push rbp	       270	strbuf.c	FUNCTION_25
0x10f7	          0x4889e5	                            mov rbp, rsp	       270	strbuf.c	FUNCTION_25
0x10fa	    0x4881ece00000	                           sub rsp, 0xe0	       270	strbuf.c	FUNCTION_25
0x1101	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       270	strbuf.c	FUNCTION_25
0x1108	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       270	strbuf.c	FUNCTION_25
0x110f	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       270	strbuf.c	FUNCTION_25
0x1116	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       270	strbuf.c	FUNCTION_25
0x111d	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       270	strbuf.c	FUNCTION_25
0x1124	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       270	strbuf.c	FUNCTION_25
0x112b	            0x84c0	                             test al, al	       270	strbuf.c	FUNCTION_25
0x112d	            0x7420	                            je 0x400118f	       270	strbuf.c	FUNCTION_25
0x112f	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       270	strbuf.c	FUNCTION_25
0x1133	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       270	strbuf.c	FUNCTION_25
0x1137	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       270	strbuf.c	FUNCTION_25
0x113b	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       270	strbuf.c	FUNCTION_25
0x113f	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       270	strbuf.c	FUNCTION_25
0x1143	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       270	strbuf.c	FUNCTION_25
0x1147	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       270	strbuf.c	FUNCTION_25
0x114b	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       270	strbuf.c	FUNCTION_25
0x114f	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	strbuf.c	FUNCTION_25
0x1158	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       270	strbuf.c	FUNCTION_25
0x115f	            0x31c0	                            xor eax, eax	       270	strbuf.c	FUNCTION_25
0x1161	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       272	strbuf.c	FUNCTION_25	CALL_1
0x116b	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       272	strbuf.c	FUNCTION_25	CALL_1
0x1175	        0x488d4510	                   lea rax, [rbp + 0x10]	       272	strbuf.c	FUNCTION_25	CALL_1
0x1179	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       272	strbuf.c	FUNCTION_25	CALL_1
0x1180	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       272	strbuf.c	FUNCTION_25	CALL_1
0x1187	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       272	strbuf.c	FUNCTION_25	CALL_1
0x118e	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       273	strbuf.c	FUNCTION_25	CALL_2
0x1195	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       273	strbuf.c	FUNCTION_25	CALL_2
0x119c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       273	strbuf.c	FUNCTION_25	CALL_2
0x11a3	          0x4889ce	                            mov rsi, rcx	       273	strbuf.c	FUNCTION_25	CALL_2
0x11a6	          0x4889c7	                            mov rdi, rax	       273	strbuf.c	FUNCTION_25	CALL_2
0x11a9	      0xe800000000	                          call 0x40011ee	       273	strbuf.c	FUNCTION_25	CALL_2
0x11ae	              0x90	                                     nop	       275	strbuf.c	FUNCTION_25
0x11af	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       275	strbuf.c	FUNCTION_25
0x11b6	    0x644833042528	                xor rax, qword fs:[0x28]	       275	strbuf.c	FUNCTION_25
0x11bf	            0x7405	                            je 0x4001206	       275	strbuf.c	FUNCTION_25
0x11c1	      0xe800000000	                          call 0x4001206	       275	strbuf.c	FUNCTION_25
0x11c6	              0xc9	                                   leave	       275	strbuf.c	FUNCTION_25
0x11c7	              0xc3	                                     ret	       275	strbuf.c	FUNCTION_25
strbuf_stripspace	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,5:FOR,1:ELSE,1:IF,3	117
0x2de7	              0x55	                                push rbp	       962	strbuf.c	FUNCTION_65
0x2de8	          0x4889e5	                            mov rbp, rsp	       962	strbuf.c	FUNCTION_65
0x2deb	        0x4883ec40	                           sub rsp, 0x40	       962	strbuf.c	FUNCTION_65
0x2def	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       962	strbuf.c	FUNCTION_65
0x2df3	          0x8975c4	             mov dword [rbp - 0x3c], esi	       962	strbuf.c	FUNCTION_65
0x2df6	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       963	strbuf.c	FUNCTION_65
0x2dfd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       968	strbuf.c	FUNCTION_65	CALL_1
0x2e01	      0xbe01000000	                              mov esi, 1	       968	strbuf.c	FUNCTION_65	CALL_1
0x2e06	          0x4889c7	                            mov rdi, rax	       968	strbuf.c	FUNCTION_65	CALL_1
0x2e09	      0xe800000000	                          call 0x4002e4e	       968	strbuf.c	FUNCTION_65	CALL_1
0x2e0e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       970	strbuf.c	FUNCTION_65	FOR_1
0x2e16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       970	strbuf.c	FUNCTION_65	FOR_1
0x2e1a	        0x488945d8	             mov qword [rbp - 0x28], rax	       970	strbuf.c	FUNCTION_65	FOR_1
0x2e1e	      0xe95d010000	                           jmp 0x4002fc0	       970	strbuf.c	FUNCTION_65	FOR_1
0x2e23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e27	        0x488b4008	                mov rax, qword [rax + 8]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e2b	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e2f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e33	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e37	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e3b	          0x4801d1	                            add rcx, rdx	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e3e	          0x4889c2	                            mov rdx, rax	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e41	      0xbe0a000000	                            mov esi, 0xa	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e46	          0x4889cf	                            mov rdi, rcx	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e49	      0xe800000000	                          call 0x4002e8e	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e4e	        0x488945f0	             mov qword [rbp - 0x10], rax	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x2e52	      0x48837df000	               cmp qword [rbp - 0x10], 0	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e57	            0x741f	                            je 0x4002eb8	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e59	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e61	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e69	          0x4801c8	                            add rax, rcx	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e6c	          0x4829c2	                            sub rdx, rax	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e6f	          0x4889d0	                            mov rax, rdx	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e72	        0x4883c001	                              add rax, 1	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e76	            0xeb0c	                           jmp 0x4002ec4	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e7c	        0x488b4008	                mov rax, qword [rax + 8]	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e80	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e84	        0x488945f8	                mov qword [rbp - 8], rax	       972	strbuf.c	FUNCTION_65	FOR_1
0x2e88	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2e8c	            0x7431	                            je 0x4002eff	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2e8e	      0x48837df800	                  cmp qword [rbp - 8], 0	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2e93	            0x742a	                            je 0x4002eff	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2e95	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2e99	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2e9d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2ea1	          0x4801d0	                            add rax, rdx	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2ea4	           0xfb610	                   movzx edx, byte [rax]	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2ea7	     0xfb605000000	           movzx eax, byte [0x04002eee] 	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2eae	            0x38c2	                              cmp dl, al	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2eb0	            0x750d	                           jne 0x4002eff	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2eb2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       975	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2eba	      0xe9b1000000	                           jmp 0x4002fb0	       976	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x2ebf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ec3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ec7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ecb	          0x4801c2	                            add rdx, rax	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ece	        0x488b45f8	                mov rax, qword [rbp - 8]	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ed2	          0x4889c6	                            mov rsi, rax	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ed5	          0x4889d7	                            mov rdi, rdx	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ed8	      0xe8bbfeffff	                        call sym.cleanup	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2edd	        0x488945e8	             mov qword [rbp - 0x18], rax	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x2ee1	      0x48837de800	               cmp qword [rbp - 0x18], 0	       981	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2ee6	     0xf8480000000	                            je 0x4002fac	       981	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2eec	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2ef0	            0x7e21	                           jle 0x4002f53	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2ef2	      0x48837de000	               cmp qword [rbp - 0x20], 0	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2ef7	            0x741a	                            je 0x4002f53	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2ef9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2efd	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2f01	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2f05	        0x488d5001	                      lea rdx, [rax + 1]	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2f09	        0x488955e0	             mov qword [rbp - 0x20], rdx	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2f0d	          0x4801c8	                            add rax, rcx	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2f10	          0xc6000a	                     mov byte [rax], 0xa	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x2f13	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       984	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f1a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f1e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f26	        0x488d3402	                    lea rsi, [rdx + rax]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f2e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f32	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f36	        0x488d0c02	                    lea rcx, [rdx + rax]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f3e	          0x4889c2	                            mov rdx, rax	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f41	          0x4889cf	                            mov rdi, rcx	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f44	      0xe800000000	                          call 0x4002f89	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x2f49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f4d	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f55	        0x488d5001	                      lea rdx, [rax + 1]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f59	        0x488955e0	             mov qword [rbp - 0x20], rdx	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f5d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f61	          0x4801d0	                            add rax, rdx	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f64	          0x4801c8	                            add rax, rcx	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f67	          0xc6000a	                     mov byte [rax], 0xa	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f6a	            0xeb04	                           jmp 0x4002fb0	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x2f6c	        0x8345d401	               add dword [rbp - 0x2c], 1	       988	strbuf.c	FUNCTION_65	FOR_1	ELSE_1
0x2f70	        0x488b45f8	                mov rax, qword [rbp - 8]	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f74	        0x480145d8	            add qword [rbp - 0x28], rax 	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f7c	        0x480145e0	            add qword [rbp - 0x20], rax 	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f80	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f84	        0x488b4008	                mov rax, qword [rax + 8]	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f88	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f8c	     0xf8791feffff	                            ja 0x4002e63	       970	strbuf.c	FUNCTION_65	FOR_1
0x2f92	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       992	strbuf.c	FUNCTION_65	CALL_5
0x2f96	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       992	strbuf.c	FUNCTION_65	CALL_5
0x2f9a	          0x4889d6	                            mov rsi, rdx	       992	strbuf.c	FUNCTION_65	CALL_5
0x2f9d	          0x4889c7	                            mov rdi, rax	       992	strbuf.c	FUNCTION_65	CALL_5
0x2fa0	      0xe823d2ffff	                  call sym.strbuf_setlen	       992	strbuf.c	FUNCTION_65	CALL_5
0x2fa5	              0x90	                                     nop	       993	strbuf.c	FUNCTION_65
0x2fa6	              0xc9	                                   leave	       993	strbuf.c	FUNCTION_65
0x2fa7	              0xc3	                                     ret	       993	strbuf.c	FUNCTION_65
strbuf_rtrim	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,1:FOR,0:ELSE,0:IF,0	36
0x7da	              0x55	                                push rbp	       110	strbuf.c	FUNCTION_10
0x7db	          0x4889e5	                            mov rbp, rsp	       110	strbuf.c	FUNCTION_10
0x7de	        0x48897df8	                mov qword [rbp - 8], rdi	       110	strbuf.c	FUNCTION_10
0x7e2	            0xeb14	                           jmp 0x4000838	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x7e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x7e8	        0x488b4008	                mov rax, qword [rax + 8]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x7ec	        0x488d50ff	                      lea rdx, [rax - 1]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x7f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x7f4	        0x48895008	                mov qword [rax + 8], rdx	       112	strbuf.c	FUNCTION_10	WHILE_1
0x7f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x7fc	        0x488b4008	                mov rax, qword [rax + 8]	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x800	          0x4885c0	                           test rax, rax	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x803	            0x7430	                            je 0x4000875	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x805	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x809	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x80d	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x811	        0x488b4008	                mov rax, qword [rax + 8]	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x815	        0x4883e801	                              sub rax, 1	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x819	          0x4801d0	                            add rax, rdx	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x81c	           0xfb600	                   movzx eax, byte [rax]	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x81f	           0xfb6c0	                           movzx eax, al	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x822	            0x4898	                                    cdqe	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x824	     0xfb680000000	                   movzx eax, byte [rax]	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x82b	           0xfb6c0	                           movzx eax, al	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x82e	          0x83e001	                              and eax, 1	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x831	            0x85c0	                           test eax, eax	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x833	            0x75af	                           jne 0x4000824	       111	strbuf.c	FUNCTION_10	WHILE_1	CALL_1
0x835	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	strbuf.c	FUNCTION_10
0x839	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       113	strbuf.c	FUNCTION_10
0x83d	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	strbuf.c	FUNCTION_10
0x841	        0x488b4008	                mov rax, qword [rax + 8]	       113	strbuf.c	FUNCTION_10
0x845	          0x4801d0	                            add rax, rdx	       113	strbuf.c	FUNCTION_10
0x848	          0xc60000	                       mov byte [rax], 0	       113	strbuf.c	FUNCTION_10
0x84b	              0x90	                                     nop	       114	strbuf.c	FUNCTION_10
0x84c	              0x5d	                                 pop rbp	       114	strbuf.c	FUNCTION_10
0x84d	              0xc3	                                     ret	       114	strbuf.c	FUNCTION_10
strbuf_complete	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,1	27
0x305	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_103
0x306	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_103
0x309	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_103
0x30d	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_103
0x311	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_103
0x313	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_103
0x316	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_103	IF_1
0x31a	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_103	IF_1
0x31e	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_103	IF_1
0x321	            0x7431	                            je 0x4000394	       595	strbuf.h	FUNCTION_103	IF_1
0x323	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_103	IF_1
0x327	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_103	IF_1
0x32b	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_103	IF_1
0x32f	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_103	IF_1
0x333	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_103	IF_1
0x337	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_103	IF_1
0x33a	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_103	IF_1
0x33d	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_103	IF_1
0x340	            0x7412	                            je 0x4000394	       595	strbuf.h	FUNCTION_103	IF_1
0x342	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_103	CALL_1
0x346	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_103	CALL_1
0x34a	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_103	CALL_1
0x34c	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_103	CALL_1
0x34f	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_103	CALL_1
0x354	              0x90	                                     nop	       597	strbuf.h	FUNCTION_103
0x355	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_103
0x356	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_103
strbuf_add_separated_string_list	DO,0:SWITCH,0:functions,1:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,0	40
0xc88	              0x55	                                push rbp	       187	strbuf.c	FUNCTION_16
0xc89	          0x4889e5	                            mov rbp, rsp	       187	strbuf.c	FUNCTION_16
0xc8c	        0x4883ec30	                           sub rsp, 0x30	       187	strbuf.c	FUNCTION_16
0xc90	        0x48897de8	             mov qword [rbp - 0x18], rdi	       187	strbuf.c	FUNCTION_16
0xc94	        0x488975e0	             mov qword [rbp - 0x20], rsi	       187	strbuf.c	FUNCTION_16
0xc98	        0x488955d8	             mov qword [rbp - 0x28], rdx	       187	strbuf.c	FUNCTION_16
0xc9c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       189	strbuf.c	FUNCTION_16
0xca3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xca7	          0x488b00	                    mov rax, qword [rax]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcaa	        0x488945f8	                mov qword [rbp - 8], rax	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcae	            0xeb3b	                           jmp 0x4000d2b	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcb0	        0x837df400	                cmp dword [rbp - 0xc], 0	       192	strbuf.c	FUNCTION_16	FUNCTION_1	IF_1
0xcb4	            0x7413	                            je 0x4000d09	       192	strbuf.c	FUNCTION_16	FUNCTION_1	IF_1
0xcb6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0xcba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0xcbe	          0x4889d6	                            mov rsi, rdx	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0xcc1	          0x4889c7	                            mov rdi, rax	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0xcc4	      0xe807f6ffff	                  call sym.strbuf_addstr	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0xcc9	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0xccd	          0x488b10	                    mov rdx, qword [rax]	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0xcd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0xcd4	          0x4889d6	                            mov rsi, rdx	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0xcd7	          0x4889c7	                            mov rdi, rax	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0xcda	      0xe8f1f5ffff	                  call sym.strbuf_addstr	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0xcdf	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       195	strbuf.c	FUNCTION_16	FUNCTION_1
0xce6	      0x488345f810	               add qword [rbp - 8], 0x10	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xceb	      0x48837df800	                  cmp qword [rbp - 8], 0	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcf0	            0x741d	                            je 0x4000d4f	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcf2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcf6	          0x488b10	                    mov rdx, qword [rax]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xcfd	          0x8b4008	                mov eax, dword [rax + 8]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xd00	            0x89c0	                            mov eax, eax	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xd02	        0x48c1e004	                              shl rax, 4	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xd06	          0x4801d0	                            add rax, rdx	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xd09	        0x483b45f8	                cmp rax, qword [rbp - 8]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xd0d	            0x77a1	                            ja 0x4000cf0	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0xd0f	              0x90	                                     nop	       197	strbuf.c	FUNCTION_16
0xd10	              0xc9	                                   leave	       197	strbuf.c	FUNCTION_16
0xd11	              0xc3	                                     ret	       197	strbuf.c	FUNCTION_16
strbuf_trim	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,0	13
0x7b3	              0x55	                                push rbp	       104	strbuf.c	FUNCTION_9
0x7b4	          0x4889e5	                            mov rbp, rsp	       104	strbuf.c	FUNCTION_9
0x7b7	        0x4883ec10	                           sub rsp, 0x10	       104	strbuf.c	FUNCTION_9
0x7bb	        0x48897df8	                mov qword [rbp - 8], rdi	       104	strbuf.c	FUNCTION_9
0x7bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	strbuf.c	FUNCTION_9	CALL_1
0x7c3	          0x4889c7	                            mov rdi, rax	       105	strbuf.c	FUNCTION_9	CALL_1
0x7c6	      0xe800000000	                          call 0x400080b	       105	strbuf.c	FUNCTION_9	CALL_1
0x7cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	strbuf.c	FUNCTION_9	CALL_2
0x7cf	          0x4889c7	                            mov rdi, rax	       106	strbuf.c	FUNCTION_9	CALL_2
0x7d2	      0xe800000000	                          call 0x4000817	       106	strbuf.c	FUNCTION_9	CALL_2
0x7d7	              0x90	                                     nop	       107	strbuf.c	FUNCTION_9
0x7d8	              0xc9	                                   leave	       107	strbuf.c	FUNCTION_9
0x7d9	              0xc3	                                     ret	       107	strbuf.c	FUNCTION_9
strbuf_trim_trailing_dir_sep	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,1:FOR,0:ELSE,0:IF,0	35
0x84e	              0x55	                                push rbp	       117	strbuf.c	FUNCTION_11
0x84f	          0x4889e5	                            mov rbp, rsp	       117	strbuf.c	FUNCTION_11
0x852	        0x4883ec08	                              sub rsp, 8	       117	strbuf.c	FUNCTION_11
0x856	        0x48897df8	                mov qword [rbp - 8], rdi	       117	strbuf.c	FUNCTION_11
0x85a	            0xeb14	                           jmp 0x40008b0	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x85c	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x860	        0x488b4008	                mov rax, qword [rax + 8]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x864	        0x488d50ff	                      lea rdx, [rax - 1]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x868	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x86c	        0x48895008	                mov qword [rax + 8], rdx	       119	strbuf.c	FUNCTION_11	WHILE_1
0x870	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x874	        0x488b4008	                mov rax, qword [rax + 8]	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x878	          0x4885c0	                           test rax, rax	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x87b	            0x7428	                            je 0x40008e5	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x87d	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x881	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x885	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x889	        0x488b4008	                mov rax, qword [rax + 8]	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x88d	        0x4883e801	                              sub rax, 1	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x891	          0x4801d0	                            add rax, rdx	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x894	           0xfb600	                   movzx eax, byte [rax]	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x897	           0xfb6c0	                           movzx eax, al	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x89a	            0x89c7	                            mov edi, eax	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x89c	      0xe86ef7ffff	                 call sym.git_is_dir_sep	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x8a1	            0x85c0	                           test eax, eax	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x8a3	            0x75b7	                           jne 0x400089c	       118	strbuf.c	FUNCTION_11	WHILE_1	CALL_1
0x8a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	strbuf.c	FUNCTION_11
0x8a9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       120	strbuf.c	FUNCTION_11
0x8ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	strbuf.c	FUNCTION_11
0x8b1	        0x488b4008	                mov rax, qword [rax + 8]	       120	strbuf.c	FUNCTION_11
0x8b5	          0x4801d0	                            add rax, rdx	       120	strbuf.c	FUNCTION_11
0x8b8	          0xc60000	                       mov byte [rax], 0	       120	strbuf.c	FUNCTION_11
0x8bb	              0x90	                                     nop	       121	strbuf.c	FUNCTION_11
0x8bc	              0xc9	                                   leave	       121	strbuf.c	FUNCTION_11
0x8bd	              0xc3	                                     ret	       121	strbuf.c	FUNCTION_11
strbuf_read_once	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4:FOR,0:ELSE,1:IF,2	54
0x1a2e	              0x55	                                push rbp	       443	strbuf.c	FUNCTION_35
0x1a2f	          0x4889e5	                            mov rbp, rsp	       443	strbuf.c	FUNCTION_35
0x1a32	        0x4883ec30	                           sub rsp, 0x30	       443	strbuf.c	FUNCTION_35
0x1a36	        0x48897de8	             mov qword [rbp - 0x18], rdi	       443	strbuf.c	FUNCTION_35
0x1a3a	          0x8975e4	             mov dword [rbp - 0x1c], esi	       443	strbuf.c	FUNCTION_35
0x1a3d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       443	strbuf.c	FUNCTION_35
0x1a41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	strbuf.c	FUNCTION_35
0x1a45	          0x488b00	                    mov rax, qword [rax]	       444	strbuf.c	FUNCTION_35
0x1a48	        0x488945f0	             mov qword [rbp - 0x10], rax	       444	strbuf.c	FUNCTION_35
0x1a4c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a51	            0x7406	                            je 0x4001a99	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a57	            0xeb05	                           jmp 0x4001a9e	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a59	      0xb800200000	                         mov eax, 0x2000	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a5e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a62	          0x4889c6	                            mov rsi, rax	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a65	          0x4889d7	                            mov rdi, rdx	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a68	      0xe800000000	                          call 0x4001aad	       447	strbuf.c	FUNCTION_35	CALL_1
0x1a6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a71	          0x488b10	                    mov rdx, qword [rax]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a78	        0x488b4008	                mov rax, qword [rax + 8]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a7c	          0x4829c2	                            sub rdx, rax	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a7f	          0x4889d0	                            mov rax, rdx	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a82	        0x488d50ff	                      lea rdx, [rax - 1]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a8a	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a92	        0x488b4008	                mov rax, qword [rax + 8]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a96	          0x4801c1	                            add rcx, rax	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a99	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a9c	          0x4889ce	                            mov rsi, rcx	       448	strbuf.c	FUNCTION_35	CALL_2
0x1a9f	            0x89c7	                            mov edi, eax	       448	strbuf.c	FUNCTION_35	CALL_2
0x1aa1	      0xe800000000	                          call 0x4001ae6	       448	strbuf.c	FUNCTION_35	CALL_2
0x1aa6	        0x488945f8	                mov qword [rbp - 8], rax	       448	strbuf.c	FUNCTION_35	CALL_2
0x1aaa	      0x48837df800	                  cmp qword [rbp - 8], 0	       449	strbuf.c	FUNCTION_35	IF_1
0x1aaf	            0x7e20	                           jle 0x4001b11	       449	strbuf.c	FUNCTION_35	IF_1
0x1ab1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	strbuf.c	FUNCTION_35	CALL_3
0x1ab5	        0x488b5008	                mov rdx, qword [rax + 8]	       450	strbuf.c	FUNCTION_35	CALL_3
0x1ab9	        0x488b45f8	                mov rax, qword [rbp - 8]	       450	strbuf.c	FUNCTION_35	CALL_3
0x1abd	          0x4801c2	                            add rdx, rax	       450	strbuf.c	FUNCTION_35	CALL_3
0x1ac0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	strbuf.c	FUNCTION_35	CALL_3
0x1ac4	          0x4889d6	                            mov rsi, rdx	       450	strbuf.c	FUNCTION_35	CALL_3
0x1ac7	          0x4889c7	                            mov rdi, rax	       450	strbuf.c	FUNCTION_35	CALL_3
0x1aca	      0xe8f9e6ffff	                  call sym.strbuf_setlen	       450	strbuf.c	FUNCTION_35	CALL_3
0x1acf	            0xeb13	                           jmp 0x4001b24	       450	strbuf.c	FUNCTION_35	CALL_3
0x1ad1	      0x48837df000	               cmp qword [rbp - 0x10], 0	       451	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x1ad6	            0x750c	                           jne 0x4001b24	       451	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x1ad8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x1adc	          0x4889c7	                            mov rdi, rax	       452	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x1adf	      0xe800000000	                          call 0x4001b24	       452	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x1ae4	        0x488b45f8	                mov rax, qword [rbp - 8]	       453	strbuf.c	FUNCTION_35
0x1ae8	              0xc9	                                   leave	       454	strbuf.c	FUNCTION_35
0x1ae9	              0xc3	                                     ret	       454	strbuf.c	FUNCTION_35
is_rfc3986_reserved	DO,0:SWITCH,1:functions,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,0	16
0x2198	              0x55	                                push rbp	       697	strbuf.c	FUNCTION_49
0x2199	          0x4889e5	                            mov rbp, rsp	       697	strbuf.c	FUNCTION_49
0x219c	            0x89f8	                            mov eax, edi	       697	strbuf.c	FUNCTION_49
0x219e	          0x8845fc	                  mov byte [rbp - 4], al	       697	strbuf.c	FUNCTION_49
0x21a1	         0xfbe45fc	               movsx eax, byte [rbp - 4]	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x21a5	          0x83e821	                           sub eax, 0x21	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x21a8	          0x83f83c	                           cmp eax, 0x3c	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x21ab	            0x7713	                            ja 0x4002200	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x21ad	            0x89c0	                            mov eax, eax	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x21af	    0x488b04c50000	                  mov rax, qword [rax*8]	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x21b7	            0xffe0	                                 jmp rax	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x21b9	      0xb801000000	                              mov eax, 1	       702	strbuf.c	FUNCTION_49	SWITCH_1
0x21be	            0xeb05	                           jmp 0x4002205	       702	strbuf.c	FUNCTION_49	SWITCH_1
0x21c0	      0xb800000000	                              mov eax, 0	       704	strbuf.c	FUNCTION_49
0x21c5	              0x5d	                                 pop rbp	       705	strbuf.c	FUNCTION_49
0x21c6	              0xc3	                                     ret	       705	strbuf.c	FUNCTION_49
strbuf_read	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,5:FOR,1:ELSE,1:IF,3	81
0x190a	              0x55	                                push rbp	       416	strbuf.c	FUNCTION_34
0x190b	          0x4889e5	                            mov rbp, rsp	       416	strbuf.c	FUNCTION_34
0x190e	        0x4883ec40	                           sub rsp, 0x40	       416	strbuf.c	FUNCTION_34
0x1912	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       416	strbuf.c	FUNCTION_34
0x1916	          0x8975d4	             mov dword [rbp - 0x2c], esi	       416	strbuf.c	FUNCTION_34
0x1919	        0x488955c8	             mov qword [rbp - 0x38], rdx	       416	strbuf.c	FUNCTION_34
0x191d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       417	strbuf.c	FUNCTION_34
0x1921	        0x488b4008	                mov rax, qword [rax + 8]	       417	strbuf.c	FUNCTION_34
0x1925	        0x488945e0	             mov qword [rbp - 0x20], rax	       417	strbuf.c	FUNCTION_34
0x1929	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       418	strbuf.c	FUNCTION_34
0x192d	          0x488b00	                    mov rax, qword [rax]	       418	strbuf.c	FUNCTION_34
0x1930	        0x488945e8	             mov qword [rbp - 0x18], rax	       418	strbuf.c	FUNCTION_34
0x1934	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       420	strbuf.c	FUNCTION_34	CALL_1
0x1939	            0x7406	                            je 0x4001981	       420	strbuf.c	FUNCTION_34	CALL_1
0x193b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       420	strbuf.c	FUNCTION_34	CALL_1
0x193f	            0xeb05	                           jmp 0x4001986	       420	strbuf.c	FUNCTION_34	CALL_1
0x1941	      0xb800200000	                         mov eax, 0x2000	       420	strbuf.c	FUNCTION_34	CALL_1
0x1946	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       420	strbuf.c	FUNCTION_34	CALL_1
0x194a	          0x4889c6	                            mov rsi, rax	       420	strbuf.c	FUNCTION_34	CALL_1
0x194d	          0x4889d7	                            mov rdi, rdx	       420	strbuf.c	FUNCTION_34	CALL_1
0x1950	      0xe800000000	                          call 0x4001995	       420	strbuf.c	FUNCTION_34	CALL_1
0x1955	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	strbuf.c	FUNCTION_34	FOR_1
0x1959	          0x488b10	                    mov rdx, qword [rax]	       422	strbuf.c	FUNCTION_34	FOR_1
0x195c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	strbuf.c	FUNCTION_34	FOR_1
0x1960	        0x488b4008	                mov rax, qword [rax + 8]	       422	strbuf.c	FUNCTION_34	FOR_1
0x1964	          0x4829c2	                            sub rdx, rax	       422	strbuf.c	FUNCTION_34	FOR_1
0x1967	          0x4889d0	                            mov rax, rdx	       422	strbuf.c	FUNCTION_34	FOR_1
0x196a	        0x4883e801	                              sub rax, 1	       422	strbuf.c	FUNCTION_34	FOR_1
0x196e	        0x488945f0	             mov qword [rbp - 0x10], rax	       422	strbuf.c	FUNCTION_34	FOR_1
0x1972	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x1976	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x197a	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x197e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x1982	        0x488b4008	                mov rax, qword [rax + 8]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x1986	          0x4801c1	                            add rcx, rax	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x1989	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x198c	          0x4889ce	                            mov rsi, rcx	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x198f	            0x89c7	                            mov edi, eax	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x1991	      0xe800000000	                          call 0x40019d6	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x1996	        0x488945f8	                mov qword [rbp - 8], rax	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x199a	      0x48837df800	                  cmp qword [rbp - 8], 0	       425	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x199f	            0x7931	                           jns 0x4001a12	       425	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x19a1	      0x48837de800	               cmp qword [rbp - 0x18], 0	       426	strbuf.c	FUNCTION_34	FOR_1	IF_1	IF_2
0x19a6	            0x750e	                           jne 0x40019f6	       426	strbuf.c	FUNCTION_34	FOR_1	IF_1	IF_2
0x19a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x19ac	          0x4889c7	                            mov rdi, rax	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x19af	      0xe800000000	                          call 0x40019f4	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x19b4	            0xeb13	                           jmp 0x4001a09	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x19b6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x19ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x19be	          0x4889d6	                            mov rsi, rdx	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x19c1	          0x4889c7	                            mov rdi, rax	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x19c4	      0xe8ffe7ffff	                  call sym.strbuf_setlen	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x19c9	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       430	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x19d0	            0xeb5a	                           jmp 0x4001a6c	       430	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x19d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	strbuf.c	FUNCTION_34	FOR_1
0x19d6	        0x488b5008	                mov rdx, qword [rax + 8]	       432	strbuf.c	FUNCTION_34	FOR_1
0x19da	        0x488b45f8	                mov rax, qword [rbp - 8]	       432	strbuf.c	FUNCTION_34	FOR_1
0x19de	          0x4801c2	                            add rdx, rax	       432	strbuf.c	FUNCTION_34	FOR_1
0x19e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	strbuf.c	FUNCTION_34	FOR_1
0x19e5	        0x48895008	                mov qword [rax + 8], rdx	       432	strbuf.c	FUNCTION_34	FOR_1
0x19e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       433	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x19ed	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       433	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x19f1	            0x7c16	                            jl 0x4001a49	       433	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x19f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x19f7	      0xbe00200000	                         mov esi, 0x2000	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x19fc	          0x4889c7	                            mov rdi, rax	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x19ff	      0xe800000000	                          call 0x4001a44	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x1a04	      0xe94cffffff	                           jmp 0x4001995	       436	strbuf.c	FUNCTION_34	FOR_1
0x1a09	              0x90	                                     nop	       434	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x1a0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       438	strbuf.c	FUNCTION_34
0x1a0e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       438	strbuf.c	FUNCTION_34
0x1a12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       438	strbuf.c	FUNCTION_34
0x1a16	        0x488b4008	                mov rax, qword [rax + 8]	       438	strbuf.c	FUNCTION_34
0x1a1a	          0x4801d0	                            add rax, rdx	       438	strbuf.c	FUNCTION_34
0x1a1d	          0xc60000	                       mov byte [rax], 0	       438	strbuf.c	FUNCTION_34
0x1a20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	strbuf.c	FUNCTION_34
0x1a24	        0x488b4008	                mov rax, qword [rax + 8]	       439	strbuf.c	FUNCTION_34
0x1a28	        0x482b45e0	             sub rax, qword [rbp - 0x20]	       439	strbuf.c	FUNCTION_34
0x1a2c	              0xc9	                                   leave	       440	strbuf.c	FUNCTION_34
0x1a2d	              0xc3	                                     ret	       440	strbuf.c	FUNCTION_34
strbuf_readlink	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,4:FOR,0:ELSE,1:IF,5	56
0x1b31	              0x55	                                push rbp	       465	strbuf.c	FUNCTION_37
0x1b32	          0x4889e5	                            mov rbp, rsp	       465	strbuf.c	FUNCTION_37
0x1b35	        0x4883ec30	                           sub rsp, 0x30	       465	strbuf.c	FUNCTION_37
0x1b39	        0x48897de8	             mov qword [rbp - 0x18], rdi	       465	strbuf.c	FUNCTION_37
0x1b3d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       465	strbuf.c	FUNCTION_37
0x1b41	        0x488955d8	             mov qword [rbp - 0x28], rdx	       465	strbuf.c	FUNCTION_37
0x1b45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       466	strbuf.c	FUNCTION_37
0x1b49	          0x488b00	                    mov rax, qword [rax]	       466	strbuf.c	FUNCTION_37
0x1b4c	        0x488945f8	                mov qword [rbp - 8], rax	       466	strbuf.c	FUNCTION_37
0x1b50	      0x48837dd81f	           cmp qword [rbp - 0x28], 0x1f 	       468	strbuf.c	FUNCTION_37	IF_1
0x1b55	            0x777a	                            ja 0x4001c11	       468	strbuf.c	FUNCTION_37	IF_1
0x1b57	    0x48c745d82000	           mov qword [rbp - 0x28], 0x20 	       469	strbuf.c	FUNCTION_37	IF_1
0x1b5f	            0xeb70	                           jmp 0x4001c11	       471	strbuf.c	FUNCTION_37	WHILE_1
0x1b61	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x1b65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x1b69	          0x4889d6	                            mov rsi, rdx	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x1b6c	          0x4889c7	                            mov rdi, rax	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x1b6f	      0xe800000000	                          call 0x4001bb4	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x1b74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b78	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b7c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b80	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b84	          0x4889ce	                            mov rsi, rcx	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b87	          0x4889c7	                            mov rdi, rax	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b8a	      0xe800000000	                          call 0x4001bcf	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b8f	          0x8945f4	              mov dword [rbp - 0xc], eax	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x1b92	        0x837df400	                cmp dword [rbp - 0xc], 0	       476	strbuf.c	FUNCTION_37	WHILE_1	IF_2
0x1b96	            0x790e	                           jns 0x4001be6	       476	strbuf.c	FUNCTION_37	WHILE_1	IF_2
0x1b98	      0xe800000000	                          call 0x4001bdd	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x1b9d	            0x8b00	                    mov eax, dword [rax]	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x1b9f	          0x83f822	                           cmp eax, 0x22	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x1ba2	            0x7429	                            je 0x4001c0d	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x1ba4	            0xeb35	                           jmp 0x4001c1b	       478	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x1ba6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x1ba9	            0x4898	                                    cdqe	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x1bab	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x1baf	            0x731c	                           jae 0x4001c0d	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x1bb1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x1bb4	          0x4863d0	                         movsxd rdx, eax	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x1bb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x1bbb	          0x4889d6	                            mov rsi, rdx	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x1bbe	          0x4889c7	                            mov rdi, rax	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x1bc1	      0xe802e6ffff	                  call sym.strbuf_setlen	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x1bc6	      0xb800000000	                              mov eax, 0	       481	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x1bcb	            0xeb26	                           jmp 0x4001c33	       481	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x1bcd	        0x48d165d8	               shl qword [rbp - 0x28], 1	       485	strbuf.c	FUNCTION_37	WHILE_1
0x1bd1	    0x48817dd8ff1f	         cmp qword [rbp - 0x28], 0x1fff 	       471	strbuf.c	FUNCTION_37	WHILE_1
0x1bd9	            0x7686	                           jbe 0x4001ba1	       471	strbuf.c	FUNCTION_37	WHILE_1
0x1bdb	      0x48837df800	                  cmp qword [rbp - 8], 0	       487	strbuf.c	FUNCTION_37	IF_5
0x1be0	            0x750c	                           jne 0x4001c2e	       487	strbuf.c	FUNCTION_37	IF_5
0x1be2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       488	strbuf.c	FUNCTION_37	CALL_4
0x1be6	          0x4889c7	                            mov rdi, rax	       488	strbuf.c	FUNCTION_37	CALL_4
0x1be9	      0xe800000000	                          call 0x4001c2e	       488	strbuf.c	FUNCTION_37	CALL_4
0x1bee	      0xb8ffffffff	                     mov eax, 0xffffffff	       489	strbuf.c	FUNCTION_37
0x1bf3	              0xc9	                                   leave	       490	strbuf.c	FUNCTION_37
0x1bf4	              0xc3	                                     ret	       490	strbuf.c	FUNCTION_37
strbuf_normalize_path	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,7:FOR,0:ELSE,0:IF,1	52
0x2fa8	              0x55	                                push rbp	       996	strbuf.c	FUNCTION_66
0x2fa9	          0x4889e5	                            mov rbp, rsp	       996	strbuf.c	FUNCTION_66
0x2fac	        0x4883ec30	                           sub rsp, 0x30	       996	strbuf.c	FUNCTION_66
0x2fb0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       996	strbuf.c	FUNCTION_66
0x2fb4	    0x64488b042528	                mov rax, qword fs:[0x28]	       996	strbuf.c	FUNCTION_66
0x2fbd	        0x488945f8	                mov qword [rbp - 8], rax	       996	strbuf.c	FUNCTION_66
0x2fc1	            0x31c0	                            xor eax, eax	       996	strbuf.c	FUNCTION_66
0x2fc3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       997	strbuf.c	FUNCTION_66
0x2fcb	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       997	strbuf.c	FUNCTION_66
0x2fd3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       997	strbuf.c	FUNCTION_66
0x2fdb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       999	strbuf.c	FUNCTION_66	CALL_1
0x2fdf	        0x488b5008	                mov rdx, qword [rax + 8]	       999	strbuf.c	FUNCTION_66	CALL_1
0x2fe3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       999	strbuf.c	FUNCTION_66	CALL_1
0x2fe7	          0x4889d6	                            mov rsi, rdx	       999	strbuf.c	FUNCTION_66	CALL_1
0x2fea	          0x4889c7	                            mov rdi, rax	       999	strbuf.c	FUNCTION_66	CALL_1
0x2fed	      0xe800000000	                          call 0x4003032	       999	strbuf.c	FUNCTION_66	CALL_1
0x2ff2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x2ff6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x2ffa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x2ffe	          0x4889d6	                            mov rsi, rdx	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x3001	          0x4889c7	                            mov rdi, rax	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x3004	      0xe800000000	                          call 0x4003049	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x3009	            0x85c0	                           test eax, eax	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x300b	            0x7913	                           jns 0x4003060	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x300d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1001	strbuf.c	FUNCTION_66	IF_1	CALL_3
0x3011	          0x4889c7	                            mov rdi, rax	      1001	strbuf.c	FUNCTION_66	IF_1	CALL_3
0x3014	      0xe800000000	                          call 0x4003059	      1001	strbuf.c	FUNCTION_66	IF_1	CALL_3
0x3019	      0xb8ffffffff	                     mov eax, 0xffffffff	      1002	strbuf.c	FUNCTION_66	IF_1
0x301e	            0xeb42	                           jmp 0x40030a2	      1002	strbuf.c	FUNCTION_66	IF_1
0x3020	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1009	strbuf.c	FUNCTION_66	CALL_5
0x3024	          0x4889c7	                            mov rdi, rax	      1009	strbuf.c	FUNCTION_66	CALL_5
0x3027	      0xe800000000	                          call 0x400306c	      1009	strbuf.c	FUNCTION_66	CALL_5
0x302c	          0x4889c2	                            mov rdx, rax	      1009	strbuf.c	FUNCTION_66	CALL_5
0x302f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1009	strbuf.c	FUNCTION_66	CALL_5
0x3033	          0x4889d6	                            mov rsi, rdx	      1009	strbuf.c	FUNCTION_66	CALL_5
0x3036	          0x4889c7	                            mov rdi, rax	      1009	strbuf.c	FUNCTION_66	CALL_5
0x3039	      0xe88ad1ffff	                  call sym.strbuf_setlen	      1009	strbuf.c	FUNCTION_66	CALL_5
0x303e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1010	strbuf.c	FUNCTION_66	CALL_6
0x3042	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1010	strbuf.c	FUNCTION_66	CALL_6
0x3046	          0x4889d6	                            mov rsi, rdx	      1010	strbuf.c	FUNCTION_66	CALL_6
0x3049	          0x4889c7	                            mov rdi, rax	      1010	strbuf.c	FUNCTION_66	CALL_6
0x304c	      0xe8add0ffff	                    call sym.strbuf_swap	      1010	strbuf.c	FUNCTION_66	CALL_6
0x3051	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1011	strbuf.c	FUNCTION_66	CALL_7
0x3055	          0x4889c7	                            mov rdi, rax	      1011	strbuf.c	FUNCTION_66	CALL_7
0x3058	      0xe800000000	                          call 0x400309d	      1011	strbuf.c	FUNCTION_66	CALL_7
0x305d	      0xb800000000	                              mov eax, 0	      1012	strbuf.c	FUNCTION_66
0x3062	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1013	strbuf.c	FUNCTION_66
0x3066	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1013	strbuf.c	FUNCTION_66
0x306f	            0x7405	                            je 0x40030b6	      1013	strbuf.c	FUNCTION_66
0x3071	      0xe800000000	                          call 0x40030b6	      1013	strbuf.c	FUNCTION_66
0x3076	              0xc9	                                   leave	      1013	strbuf.c	FUNCTION_66
0x3077	              0xc3	                                     ret	      1013	strbuf.c	FUNCTION_66
cleanup	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,1:FOR,0:ELSE,0:IF,1	26
0x2d98	              0x55	                                push rbp	       935	strbuf.c	FUNCTION_64
0x2d99	          0x4889e5	                            mov rbp, rsp	       935	strbuf.c	FUNCTION_64
0x2d9c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       935	strbuf.c	FUNCTION_64
0x2da0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       935	strbuf.c	FUNCTION_64
0x2da4	            0xeb31	                           jmp 0x4002e17	       936	strbuf.c	FUNCTION_64	WHILE_1
0x2da6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x2daa	        0x488d50ff	                      lea rdx, [rax - 1]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x2dae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x2db2	          0x4801d0	                            add rax, rdx	       937	strbuf.c	FUNCTION_64	WHILE_1
0x2db5	           0xfb600	                   movzx eax, byte [rax]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x2db8	          0x8845ff	                  mov byte [rbp - 1], al	       937	strbuf.c	FUNCTION_64	WHILE_1
0x2dbb	         0xfb645ff	               movzx eax, byte [rbp - 1]	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1	CALL_1
0x2dbf	            0x4898	                                    cdqe	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1	CALL_1
0x2dc1	     0xfb680000000	                   movzx eax, byte [rax]	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1	CALL_1
0x2dc8	           0xfb6c0	                           movzx eax, al	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1	CALL_1
0x2dcb	          0x83e001	                              and eax, 1	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1	CALL_1
0x2dce	            0x85c0	                           test eax, eax	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1	CALL_1
0x2dd0	            0x740e	                            je 0x4002e20	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1	CALL_1
0x2dd2	      0x48836de001	               sub qword [rbp - 0x20], 1	       940	strbuf.c	FUNCTION_64	WHILE_1
0x2dd7	      0x48837de000	               cmp qword [rbp - 0x20], 0	       936	strbuf.c	FUNCTION_64	WHILE_1
0x2ddc	            0x75c8	                           jne 0x4002de6	       936	strbuf.c	FUNCTION_64	WHILE_1
0x2dde	            0xeb01	                           jmp 0x4002e21	       936	strbuf.c	FUNCTION_64	WHILE_1
0x2de0	              0x90	                                     nop	       939	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x2de1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       943	strbuf.c	FUNCTION_64
0x2de5	              0x5d	                                 pop rbp	       944	strbuf.c	FUNCTION_64
0x2de6	              0xc3	                                     ret	       944	strbuf.c	FUNCTION_64
strbuf_addstr	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,0	17
0x2d0	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_98
0x2d1	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_98
0x2d4	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_98
0x2d8	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_98
0x2dc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_98
0x2e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_98	CALL_2
0x2e4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_98	CALL_2
0x2e7	      0xe800000000	                          call 0x400032c	       279	strbuf.h	FUNCTION_98	CALL_2
0x2ec	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_98	CALL_2
0x2ef	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_98	CALL_2
0x2f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_98	CALL_2
0x2f7	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_98	CALL_2
0x2fa	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_98	CALL_2
0x2fd	      0xe800000000	                          call 0x4000342	       279	strbuf.h	FUNCTION_98	CALL_2
0x302	              0x90	                                     nop	       280	strbuf.h	FUNCTION_98
0x303	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_98
0x304	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_98
strbuf_getwholeline_fd	DO,0:SWITCH,0:functions,0:WHILE,1:CALL,3:FOR,0:ELSE,0:IF,2	41
0x1f60	              0x55	                                push rbp	       629	strbuf.c	FUNCTION_45
0x1f61	          0x4889e5	                            mov rbp, rsp	       629	strbuf.c	FUNCTION_45
0x1f64	        0x4883ec30	                           sub rsp, 0x30	       629	strbuf.c	FUNCTION_45
0x1f68	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       629	strbuf.c	FUNCTION_45
0x1f6c	          0x8975d4	             mov dword [rbp - 0x2c], esi	       629	strbuf.c	FUNCTION_45
0x1f6f	          0x8955d0	             mov dword [rbp - 0x30], edx	       629	strbuf.c	FUNCTION_45
0x1f72	    0x64488b042528	                mov rax, qword fs:[0x28]	       629	strbuf.c	FUNCTION_45
0x1f7b	        0x488945f8	                mov qword [rbp - 8], rax	       629	strbuf.c	FUNCTION_45
0x1f7f	            0x31c0	                            xor eax, eax	       629	strbuf.c	FUNCTION_45
0x1f81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       630	strbuf.c	FUNCTION_45	CALL_1
0x1f85	      0xbe00000000	                              mov esi, 0	       630	strbuf.c	FUNCTION_45	CALL_1
0x1f8a	          0x4889c7	                            mov rdi, rax	       630	strbuf.c	FUNCTION_45	CALL_1
0x1f8d	      0xe836e2ffff	                  call sym.strbuf_setlen	       630	strbuf.c	FUNCTION_45	CALL_1
0x1f92	        0x488d4def	                   lea rcx, [rbp - 0x11]	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x1f96	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x1f99	      0xba01000000	                              mov edx, 1	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x1f9e	          0x4889ce	                            mov rsi, rcx	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x1fa1	            0x89c7	                            mov edi, eax	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x1fa3	      0xe800000000	                          call 0x4001fe8	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x1fa8	        0x488945f0	             mov qword [rbp - 0x10], rax	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x1fac	      0x48837df000	               cmp qword [rbp - 0x10], 0	       635	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x1fb1	            0x7f07	                            jg 0x4001ffa	       635	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x1fb3	      0xb8ffffffff	                     mov eax, 0xffffffff	       636	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x1fb8	            0xeb26	                           jmp 0x4002020	       636	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x1fba	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_3
0x1fbe	           0xfbed0	                           movsx edx, al	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_3
0x1fc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_3
0x1fc5	            0x89d6	                            mov esi, edx	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_3
0x1fc7	          0x4889c7	                            mov rdi, rax	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_3
0x1fca	      0xe893e2ffff	                   call sym.strbuf_addch	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_3
0x1fcf	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x1fd3	           0xfbec0	                           movsx eax, al	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x1fd6	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x1fd9	            0x75b7	                           jne 0x4001fd2	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x1fdb	      0xb800000000	                              mov eax, 0	       641	strbuf.c	FUNCTION_45
0x1fe0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       642	strbuf.c	FUNCTION_45
0x1fe4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       642	strbuf.c	FUNCTION_45
0x1fed	            0x7405	                            je 0x4002034	       642	strbuf.c	FUNCTION_45
0x1fef	      0xe800000000	                          call 0x4002034	       642	strbuf.c	FUNCTION_45
0x1ff4	              0xc9	                                   leave	       642	strbuf.c	FUNCTION_45
0x1ff5	              0xc3	                                     ret	       642	strbuf.c	FUNCTION_45
strbuf_write	DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0	21
0x1aea	              0x55	                                push rbp	       457	strbuf.c	FUNCTION_36
0x1aeb	          0x4889e5	                            mov rbp, rsp	       457	strbuf.c	FUNCTION_36
0x1aee	        0x4883ec10	                           sub rsp, 0x10	       457	strbuf.c	FUNCTION_36
0x1af2	        0x48897df8	                mov qword [rbp - 8], rdi	       457	strbuf.c	FUNCTION_36
0x1af6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       457	strbuf.c	FUNCTION_36
0x1afa	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x1afe	        0x488b4008	                mov rax, qword [rax + 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b02	          0x4885c0	                           test rax, rax	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b05	            0x7423	                            je 0x4001b6a	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b07	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b0b	        0x488b5008	                mov rdx, qword [rax + 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b13	        0x488b4010	            mov rax, qword [rax + 0x10] 	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b17	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b1b	      0xbe01000000	                              mov esi, 1	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b20	          0x4889c7	                            mov rdi, rax	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b23	      0xe800000000	                          call 0x4001b68	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b28	            0xeb05	                           jmp 0x4001b6f	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b2a	      0xb800000000	                              mov eax, 0	       458	strbuf.c	FUNCTION_36	CALL_1
0x1b2f	              0xc9	                                   leave	       459	strbuf.c	FUNCTION_36
0x1b30	              0xc3	                                     ret	       459	strbuf.c	FUNCTION_36
