st_mult	DO,0:CALL,2:WHILE,0:ELSE,0:IF,1:SWITCH,0:functions,0:FOR,0	22
0x14	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_15
0x15	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_15
0x18	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_15
0x1c	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_15
0x20	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_15
0x24	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x29	            0x7430	                            je 0x400009b	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x2b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x32	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x37	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x3b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x3f	            0x731a	                           jae 0x400009b	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x41	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x45	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x49	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x4c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x51	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x56	      0xe800000000	                          call 0x400009b	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_15
0x5f	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_15
0x64	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_15
0x65	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_15
git_bswap32	DO,0:CALL,3:WHILE,0:ELSE,1:IF,1:SWITCH,0:functions,0:FOR,0	9
0x0	              0x55	                                push rbp	        39	bswap.h	FUNCTION_31
0x1	          0x4889e5	                            mov rbp, rsp	        39	bswap.h	FUNCTION_31
0x4	          0x897dec	             mov dword [rbp - 0x14], edi	        39	bswap.h	FUNCTION_31
0x7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        44	bswap.h	FUNCTION_31	CALL_3
0xa	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_31	CALL_3
0xc	          0x8945fc	                mov dword [rbp - 4], eax	        44	bswap.h	FUNCTION_31	CALL_3
0xf	          0x8b45fc	                mov eax, dword [rbp - 4]	        45	bswap.h	FUNCTION_31
0x12	              0x5d	                                 pop rbp	        46	bswap.h	FUNCTION_31
0x13	              0xc3	                                     ret	        46	bswap.h	FUNCTION_31
cmd_main	DO,0:CALL,34:WHILE,0:ELSE,3:IF,15:SWITCH,0:functions,0:FOR,6	308
0x66	              0x55	                                push rbp	         8	show-index.c	FUNCTION_28
0x67	          0x4889e5	                            mov rbp, rsp	         8	show-index.c	FUNCTION_28
0x6a	              0x53	                                push rbx	         8	show-index.c	FUNCTION_28
0x6b	        0x4883ec68	                           sub rsp, 0x68	         8	show-index.c	FUNCTION_28
0x6f	          0x897d9c	             mov dword [rbp - 0x64], edi	         8	show-index.c	FUNCTION_28
0x72	        0x48897590	             mov qword [rbp - 0x70], rsi	         8	show-index.c	FUNCTION_28
0x76	    0x64488b042528	                mov rax, qword fs:[0x28]	         8	show-index.c	FUNCTION_28
0x7f	        0x488945e8	             mov qword [rbp - 0x18], rax	         8	show-index.c	FUNCTION_28
0x83	            0x31c0	                            xor eax, eax	         8	show-index.c	FUNCTION_28
0x85	        0x837d9c01	               cmp dword [rbp - 0x64], 1	        14	show-index.c	FUNCTION_28	IF_1
0x89	            0x740a	                            je 0x40000d5	        14	show-index.c	FUNCTION_28	IF_1
0x8b	      0xbf00000000	                              mov edi, 0	        15	show-index.c	FUNCTION_28	CALL_1
0x90	      0xe800000000	                          call 0x40000d5	        15	show-index.c	FUNCTION_28	CALL_1
0x95	    0x488b05000000	            mov rax, qword [0x040000dc] 	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0x9c	          0x4889c1	                            mov rcx, rax	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0x9f	      0xba01000000	                              mov edx, 1	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0xa4	      0xbe08000000	                              mov esi, 8	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0xa9	      0xbf00000000	                              mov edi, 0	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0xae	      0xe800000000	                          call 0x40000f3	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0xb3	        0x4883f801	                              cmp rax, 1	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0xb7	            0x740f	                            je 0x4000108	        16	show-index.c	FUNCTION_28	IF_2	CALL_2
0xb9	      0xbf00000000	                              mov edi, 0	        17	show-index.c	FUNCTION_28	CALL_3
0xbe	      0xb800000000	                              mov eax, 0	        17	show-index.c	FUNCTION_28	CALL_3
0xc3	      0xe800000000	                          call 0x4000108	        17	show-index.c	FUNCTION_28	CALL_3
0xc8	    0x8b1d00000000	            mov ebx, dword [0x0400010e] 	        18	show-index.c	FUNCTION_28	IF_3	CALL_4
0xce	      0xbf634f74ff	                     mov edi, 0xff744f63	        18	show-index.c	FUNCTION_28	IF_3	CALL_4
0xd3	      0xe828ffffff	                    call sym.git_bswap32	        18	show-index.c	FUNCTION_28	IF_3	CALL_4
0xd8	            0x39c3	                            cmp ebx, eax	        18	show-index.c	FUNCTION_28	IF_3	CALL_4
0xda	            0x755e	                           jne 0x400017a	        18	show-index.c	FUNCTION_28	IF_3	CALL_4
0xdc	    0x8b0500000000	            mov eax, dword [0x04000122] 	        19	show-index.c	FUNCTION_28	IF_3	CALL_5
0xe2	            0x89c7	                            mov edi, eax	        19	show-index.c	FUNCTION_28	IF_3	CALL_5
0xe4	      0xe817ffffff	                    call sym.git_bswap32	        19	show-index.c	FUNCTION_28	IF_3	CALL_5
0xe9	          0x8945ac	             mov dword [rbp - 0x54], eax	        19	show-index.c	FUNCTION_28	IF_3	CALL_5
0xec	        0x837dac01	               cmp dword [rbp - 0x54], 1	        20	show-index.c	FUNCTION_28	IF_3	IF_4
0xf0	            0x7606	                           jbe 0x4000138	        20	show-index.c	FUNCTION_28	IF_3	IF_4
0xf2	        0x837dac02	               cmp dword [rbp - 0x54], 2	        20	show-index.c	FUNCTION_28	IF_3	IF_4
0xf6	            0x760f	                           jbe 0x4000147	        20	show-index.c	FUNCTION_28	IF_3	IF_4
0xf8	      0xbf00000000	                              mov edi, 0	        21	show-index.c	FUNCTION_28	IF_3	CALL_6
0xfd	      0xb800000000	                              mov eax, 0	        21	show-index.c	FUNCTION_28	IF_3	CALL_6
0x102	      0xe800000000	                          call 0x4000147	        21	show-index.c	FUNCTION_28	IF_3	CALL_6
0x107	    0x488b05000000	            mov rax, qword [0x0400014e] 	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x10e	          0x4889c1	                            mov rcx, rax	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x111	      0xba01000000	                              mov edx, 1	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x116	      0xbe00040000	                          mov esi, 0x400	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x11b	      0xbf00000000	                              mov edi, 0	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x120	      0xe800000000	                          call 0x4000165	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x125	        0x4883f801	                              cmp rax, 1	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x129	            0x7449	                            je 0x40001b4	        22	show-index.c	FUNCTION_28	IF_3	IF_5	CALL_7
0x12b	      0xbf00000000	                              mov edi, 0	        23	show-index.c	FUNCTION_28	IF_3	CALL_8
0x130	      0xb800000000	                              mov eax, 0	        23	show-index.c	FUNCTION_28	IF_3	CALL_8
0x135	      0xe800000000	                          call 0x400017a	        23	show-index.c	FUNCTION_28	IF_3	CALL_8
0x13a	    0xc745ac010000	               mov dword [rbp - 0x54], 1	        25	show-index.c	FUNCTION_28	ELSE_1
0x141	    0x488b05000000	            mov rax, qword [0x04000188] 	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x148	          0x4889c1	                            mov rcx, rax	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x14b	      0xba01000000	                              mov edx, 1	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x150	      0xbef8030000	                          mov esi, 0x3f8	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x155	      0xbf00000000	                              mov edi, 0	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x15a	      0xe800000000	                          call 0x400019f	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x15f	        0x4883f801	                              cmp rax, 1	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x163	            0x740f	                            je 0x40001b4	        26	show-index.c	FUNCTION_28	ELSE_1	IF_6	CALL_9
0x165	      0xbf00000000	                              mov edi, 0	        27	show-index.c	FUNCTION_28	ELSE_1	CALL_10
0x16a	      0xb800000000	                              mov eax, 0	        27	show-index.c	FUNCTION_28	ELSE_1	CALL_10
0x16f	      0xe800000000	                          call 0x40001b4	        27	show-index.c	FUNCTION_28	ELSE_1	CALL_10
0x174	    0xc745a8000000	               mov dword [rbp - 0x58], 0	        29	show-index.c	FUNCTION_28
0x17b	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        30	show-index.c	FUNCTION_28	FOR_1
0x182	            0xeb37	                           jmp 0x40001fb	        30	show-index.c	FUNCTION_28	FOR_1
0x184	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        31	show-index.c	FUNCTION_28	FOR_1	CALL_11
0x187	            0x4898	                                    cdqe	        31	show-index.c	FUNCTION_28	FOR_1	CALL_11
0x189	    0x8b0485000000	                  mov eax, dword [rax*4]	        31	show-index.c	FUNCTION_28	FOR_1	CALL_11
0x190	            0x89c7	                            mov edi, eax	        31	show-index.c	FUNCTION_28	FOR_1	CALL_11
0x192	      0xe869feffff	                    call sym.git_bswap32	        31	show-index.c	FUNCTION_28	FOR_1	CALL_11
0x197	          0x8945b4	             mov dword [rbp - 0x4c], eax	        31	show-index.c	FUNCTION_28	FOR_1	CALL_11
0x19a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        32	show-index.c	FUNCTION_28	FOR_1	IF_7
0x19d	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	        32	show-index.c	FUNCTION_28	FOR_1	IF_7
0x1a0	            0x730f	                           jae 0x40001f1	        32	show-index.c	FUNCTION_28	FOR_1	IF_7
0x1a2	      0xbf00000000	                              mov edi, 0	        33	show-index.c	FUNCTION_28	FOR_1	CALL_12
0x1a7	      0xb800000000	                              mov eax, 0	        33	show-index.c	FUNCTION_28	FOR_1	CALL_12
0x1ac	      0xe800000000	                          call 0x40001f1	        33	show-index.c	FUNCTION_28	FOR_1	CALL_12
0x1b1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        34	show-index.c	FUNCTION_28	FOR_1
0x1b4	          0x8945a8	             mov dword [rbp - 0x58], eax	        34	show-index.c	FUNCTION_28	FOR_1
0x1b7	        0x8345a401	               add dword [rbp - 0x5c], 1	        30	show-index.c	FUNCTION_28	FOR_1
0x1bb	    0x817da4ff0000	           cmp dword [rbp - 0x5c], 0xff 	        30	show-index.c	FUNCTION_28	FOR_1
0x1c2	            0x7ec0	                           jle 0x40001c4	        30	show-index.c	FUNCTION_28	FOR_1
0x1c4	        0x837dac01	               cmp dword [rbp - 0x54], 1	        36	show-index.c	FUNCTION_28	IF_8
0x1c8	     0xf858b000000	                           jne 0x4000299	        36	show-index.c	FUNCTION_28	IF_8
0x1ce	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        37	show-index.c	FUNCTION_28	IF_8	FOR_2
0x1d5	            0xeb75	                           jmp 0x400028c	        37	show-index.c	FUNCTION_28	IF_8	FOR_2
0x1d7	    0x488b15000000	            mov rdx, qword [0x0400021e] 	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1de	        0x488d45d0	                   lea rax, [rbp - 0x30]	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1e2	          0x4889d1	                            mov rcx, rdx	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1e5	      0xba01000000	                              mov edx, 1	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1ea	      0xbe18000000	                           mov esi, 0x18	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1ef	          0x4889c7	                            mov rdi, rax	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1f2	      0xe800000000	                          call 0x4000237	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1f7	        0x4883f801	                              cmp rax, 1	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1fb	            0x7417	                            je 0x4000254	        40	show-index.c	FUNCTION_28	IF_8	FOR_2	IF_9	CALL_13
0x1fd	          0x8b55a8	             mov edx, dword [rbp - 0x58]	        41	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_14
0x200	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        41	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_14
0x203	            0x89c6	                            mov esi, eax	        41	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_14
0x205	      0xbf00000000	                              mov edi, 0	        41	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_14
0x20a	      0xb800000000	                              mov eax, 0	        41	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_14
0x20f	      0xe800000000	                          call 0x4000254	        41	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_14
0x214	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        42	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_15
0x217	            0x89c7	                            mov edi, eax	        42	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_15
0x219	      0xe8e2fdffff	                    call sym.git_bswap32	        42	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_15
0x21e	          0x8945b8	             mov dword [rbp - 0x48], eax	        42	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_15
0x221	        0x488d45d0	                   lea rax, [rbp - 0x30]	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x225	        0x4883c004	                              add rax, 4	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x229	          0x4889c7	                            mov rdi, rax	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x22c	      0xe800000000	                          call 0x4000271	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x231	          0x4889c2	                            mov rdx, rax	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x234	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x237	            0x89c6	                            mov esi, eax	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x239	      0xbf00000000	                              mov edi, 0	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x23e	      0xb800000000	                              mov eax, 0	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x243	      0xe800000000	                          call 0x4000288	        43	show-index.c	FUNCTION_28	IF_8	FOR_2	CALL_17
0x248	        0x8345a401	               add dword [rbp - 0x5c], 1	        37	show-index.c	FUNCTION_28	IF_8	FOR_2
0x24c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        37	show-index.c	FUNCTION_28	IF_8	FOR_2
0x24f	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	        37	show-index.c	FUNCTION_28	IF_8	FOR_2
0x252	            0x7283	                            jb 0x4000217	        37	show-index.c	FUNCTION_28	IF_8	FOR_2
0x254	      0xe9ae020000	                           jmp 0x4000547	        37	show-index.c	FUNCTION_28	IF_8	FOR_2
0x259	    0xc745b0000000	               mov dword [rbp - 0x50], 0	        46	show-index.c	FUNCTION_28	ELSE_2
0x260	          0x8b45a8	             mov eax, dword [rbp - 0x58]	        52	show-index.c	FUNCTION_28	ELSE_2	CALL_18
0x263	          0x4889c6	                            mov rsi, rax	        52	show-index.c	FUNCTION_28	ELSE_2	CALL_18
0x266	      0xbf1c000000	                           mov edi, 0x1c	        52	show-index.c	FUNCTION_28	ELSE_2	CALL_18
0x26b	      0xe8a4fdffff	                        call sym.st_mult	        52	show-index.c	FUNCTION_28	ELSE_2	CALL_18
0x270	          0x4889c7	                            mov rdi, rax	        52	show-index.c	FUNCTION_28	ELSE_2	CALL_18
0x273	      0xe800000000	                          call 0x40002b8	        52	show-index.c	FUNCTION_28	ELSE_2	CALL_18
0x278	        0x488945c8	             mov qword [rbp - 0x38], rax	        52	show-index.c	FUNCTION_28	ELSE_2	CALL_18
0x27c	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        53	show-index.c	FUNCTION_28	ELSE_2	FOR_3
0x283	            0xeb58	                           jmp 0x400031d	        53	show-index.c	FUNCTION_28	ELSE_2	FOR_3
0x285	    0x488b15000000	            mov rdx, qword [0x040002cc] 	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x28c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x28f	            0x4898	                                    cdqe	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x291	        0x48c1e002	                              shl rax, 2	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x295	    0x488d0cc50000	                        lea rcx, [rax*8]	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x29d	          0x4829c1	                            sub rcx, rax	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2a4	          0x4801c8	                            add rax, rcx	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2a7	          0x4889d1	                            mov rcx, rdx	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2aa	      0xba01000000	                              mov edx, 1	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2af	      0xbe14000000	                           mov esi, 0x14	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2b4	          0x4889c7	                            mov rdi, rax	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2b7	      0xe800000000	                          call 0x40002fc	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2bc	        0x4883f801	                              cmp rax, 1	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2c0	            0x7417	                            je 0x4000319	        54	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10	CALL_19
0x2c2	          0x8b55a8	             mov edx, dword [rbp - 0x58]	        55	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10
0x2c5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        55	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10
0x2c8	            0x89c6	                            mov esi, eax	        55	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10
0x2ca	      0xbf00000000	                              mov edi, 0	        55	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10
0x2cf	      0xb800000000	                              mov eax, 0	        55	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10
0x2d4	      0xe800000000	                          call 0x4000319	        55	show-index.c	FUNCTION_28	ELSE_2	FOR_3	IF_10
0x2d9	        0x8345a401	               add dword [rbp - 0x5c], 1	        53	show-index.c	FUNCTION_28	ELSE_2	FOR_3
0x2dd	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        53	show-index.c	FUNCTION_28	ELSE_2	FOR_3
0x2e0	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	        53	show-index.c	FUNCTION_28	ELSE_2	FOR_3
0x2e3	            0x72a0	                            jb 0x40002c5	        53	show-index.c	FUNCTION_28	ELSE_2	FOR_3
0x2e5	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        56	show-index.c	FUNCTION_28	ELSE_2	FOR_4
0x2ec	            0xeb5c	                           jmp 0x400038a	        56	show-index.c	FUNCTION_28	ELSE_2	FOR_4
0x2ee	    0x488b15000000	            mov rdx, qword [0x04000335] 	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x2f5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x2f8	            0x4898	                                    cdqe	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x2fa	        0x48c1e002	                              shl rax, 2	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x2fe	    0x488d0cc50000	                        lea rcx, [rax*8]	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x306	          0x4829c1	                            sub rcx, rax	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x309	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x30d	          0x4801c8	                            add rax, rcx	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x310	        0x4883c014	                           add rax, 0x14	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x314	          0x4889d1	                            mov rcx, rdx	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x317	      0xba01000000	                              mov edx, 1	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x31c	      0xbe04000000	                              mov esi, 4	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x321	          0x4889c7	                            mov rdi, rax	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x324	      0xe800000000	                          call 0x4000369	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x329	        0x4883f801	                              cmp rax, 1	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x32d	            0x7417	                            je 0x4000386	        57	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11	CALL_21
0x32f	          0x8b55a8	             mov edx, dword [rbp - 0x58]	        58	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11
0x332	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        58	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11
0x335	            0x89c6	                            mov esi, eax	        58	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11
0x337	      0xbf00000000	                              mov edi, 0	        58	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11
0x33c	      0xb800000000	                              mov eax, 0	        58	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11
0x341	      0xe800000000	                          call 0x4000386	        58	show-index.c	FUNCTION_28	ELSE_2	FOR_4	IF_11
0x346	        0x8345a401	               add dword [rbp - 0x5c], 1	        56	show-index.c	FUNCTION_28	ELSE_2	FOR_4
0x34a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        56	show-index.c	FUNCTION_28	ELSE_2	FOR_4
0x34d	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	        56	show-index.c	FUNCTION_28	ELSE_2	FOR_4
0x350	            0x729c	                            jb 0x400032e	        56	show-index.c	FUNCTION_28	ELSE_2	FOR_4
0x352	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        59	show-index.c	FUNCTION_28	ELSE_2	FOR_5
0x359	            0xeb5c	                           jmp 0x40003f7	        59	show-index.c	FUNCTION_28	ELSE_2	FOR_5
0x35b	    0x488b15000000	            mov rdx, qword [0x040003a2] 	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x362	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x365	            0x4898	                                    cdqe	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x367	        0x48c1e002	                              shl rax, 2	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x36b	    0x488d0cc50000	                        lea rcx, [rax*8]	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x373	          0x4829c1	                            sub rcx, rax	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x376	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x37a	          0x4801c8	                            add rax, rcx	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x37d	        0x4883c018	                           add rax, 0x18	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x381	          0x4889d1	                            mov rcx, rdx	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x384	      0xba01000000	                              mov edx, 1	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x389	      0xbe04000000	                              mov esi, 4	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x38e	          0x4889c7	                            mov rdi, rax	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x391	      0xe800000000	                          call 0x40003d6	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x396	        0x4883f801	                              cmp rax, 1	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x39a	            0x7417	                            je 0x40003f3	        60	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12	CALL_23
0x39c	          0x8b55a8	             mov edx, dword [rbp - 0x58]	        61	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12
0x39f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        61	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12
0x3a2	            0x89c6	                            mov esi, eax	        61	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12
0x3a4	      0xbf00000000	                              mov edi, 0	        61	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12
0x3a9	      0xb800000000	                              mov eax, 0	        61	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12
0x3ae	      0xe800000000	                          call 0x40003f3	        61	show-index.c	FUNCTION_28	ELSE_2	FOR_5	IF_12
0x3b3	        0x8345a401	               add dword [rbp - 0x5c], 1	        59	show-index.c	FUNCTION_28	ELSE_2	FOR_5
0x3b7	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        59	show-index.c	FUNCTION_28	ELSE_2	FOR_5
0x3ba	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	        59	show-index.c	FUNCTION_28	ELSE_2	FOR_5
0x3bd	            0x729c	                            jb 0x400039b	        59	show-index.c	FUNCTION_28	ELSE_2	FOR_5
0x3bf	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        62	show-index.c	FUNCTION_28	ELSE_2	FOR_6
0x3c6	      0xe924010000	                           jmp 0x400052f	        62	show-index.c	FUNCTION_28	ELSE_2	FOR_6
0x3cb	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3ce	            0x4898	                                    cdqe	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3d0	        0x48c1e002	                              shl rax, 2	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3d4	    0x488d14c50000	                        lea rdx, [rax*8]	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3dc	          0x4829c2	                            sub rdx, rax	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3e3	          0x4801d0	                            add rax, rdx	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3e6	          0x8b4018	            mov eax, dword [rax + 0x18] 	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3e9	            0x89c7	                            mov edi, eax	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3eb	      0xe810fcffff	                    call sym.git_bswap32	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3f0	          0x8945bc	             mov dword [rbp - 0x44], eax	        64	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_25
0x3f3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	        65	show-index.c	FUNCTION_28	ELSE_2	FOR_6	IF_13
0x3f6	            0x85c0	                           test eax, eax	        65	show-index.c	FUNCTION_28	ELSE_2	FOR_6	IF_13
0x3f8	            0x780c	                            js 0x4000446	        65	show-index.c	FUNCTION_28	ELSE_2	FOR_6	IF_13
0x3fa	          0x8b45bc	             mov eax, dword [rbp - 0x44]	        66	show-index.c	FUNCTION_28	ELSE_2	FOR_6	IF_13
0x3fd	        0x488945c0	             mov qword [rbp - 0x40], rax	        66	show-index.c	FUNCTION_28	ELSE_2	FOR_6	IF_13
0x401	      0xe980000000	                           jmp 0x40004c6	        66	show-index.c	FUNCTION_28	ELSE_2	FOR_6	IF_13
0x406	          0x8b45bc	             mov eax, dword [rbp - 0x44]	        69	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_14
0x409	      0x25ffffff7f	                     and eax, 0x7fffffff	        69	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_14
0x40e	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	        69	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_14
0x411	            0x740f	                            je 0x4000462	        69	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_14
0x413	      0xbf00000000	                              mov edi, 0	        70	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_26
0x418	      0xb800000000	                              mov eax, 0	        70	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_26
0x41d	      0xe800000000	                          call 0x4000462	        70	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_26
0x422	    0x488b15000000	            mov rdx, qword [0x04000469] 	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x429	        0x488d45d0	                   lea rax, [rbp - 0x30]	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x42d	          0x4889d1	                            mov rcx, rdx	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x430	      0xba01000000	                              mov edx, 1	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x435	      0xbe08000000	                              mov esi, 8	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x43a	          0x4889c7	                            mov rdi, rax	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x43d	      0xe800000000	                          call 0x4000482	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x442	        0x4883f801	                              cmp rax, 1	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x446	            0x7414	                            je 0x400049c	        71	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	IF_15	CALL_27
0x448	          0x8b45b0	             mov eax, dword [rbp - 0x50]	        72	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_28
0x44b	            0x89c6	                            mov esi, eax	        72	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_28
0x44d	      0xbf00000000	                              mov edi, 0	        72	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_28
0x452	      0xb800000000	                              mov eax, 0	        72	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_28
0x457	      0xe800000000	                          call 0x400049c	        72	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_28
0x45c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x45f	            0x89c7	                            mov edi, eax	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x461	      0xe89afbffff	                    call sym.git_bswap32	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x466	            0x89c0	                            mov eax, eax	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x468	        0x48c1e020	                           shl rax, 0x20	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x46c	          0x4889c3	                            mov rbx, rax	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x46f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	        74	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_30
0x472	            0x89c7	                            mov edi, eax	        74	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_30
0x474	      0xe887fbffff	                    call sym.git_bswap32	        74	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_30
0x479	            0x89c0	                            mov eax, eax	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x47b	          0x4809d8	                             or rax, rbx	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x47e	        0x488945c0	             mov qword [rbp - 0x40], rax	        73	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3	CALL_29
0x482	        0x8345b001	               add dword [rbp - 0x50], 1	        75	show-index.c	FUNCTION_28	ELSE_2	FOR_6	ELSE_3
0x486	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        80	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_33
0x489	            0x4898	                                    cdqe	        80	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_33
0x48b	        0x48c1e002	                              shl rax, 2	        80	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_33
0x48f	    0x488d14c50000	                        lea rdx, [rax*8]	        80	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_33
0x497	          0x4829c2	                            sub rdx, rax	        80	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_33
0x49a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        80	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_33
0x49e	          0x4801d0	                            add rax, rdx	        80	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_33
0x4a1	          0x8b4014	            mov eax, dword [rax + 0x14] 	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4a4	            0x89c7	                            mov edi, eax	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4a6	      0xe855fbffff	                    call sym.git_bswap32	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4ab	            0x89c3	                            mov ebx, eax	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4ad	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        79	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_32
0x4b0	            0x4898	                                    cdqe	        79	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_32
0x4b2	        0x48c1e002	                              shl rax, 2	        79	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_32
0x4b6	    0x488d14c50000	                        lea rdx, [rax*8]	        79	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_32
0x4be	          0x4829c2	                            sub rdx, rax	        79	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_32
0x4c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        79	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_32
0x4c5	          0x4801d0	                            add rax, rdx	        79	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_32
0x4c8	          0x4889c7	                            mov rdi, rax	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4cb	      0xe800000000	                          call 0x4000510	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4d0	          0x4889c2	                            mov rdx, rax	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4d3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4d7	            0x89d9	                            mov ecx, ebx	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4d9	          0x4889c6	                            mov rsi, rax	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4dc	      0xbf00000000	                              mov edi, 0	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4e1	      0xb800000000	                              mov eax, 0	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4e6	      0xe800000000	                          call 0x400052b	        77	show-index.c	FUNCTION_28	ELSE_2	FOR_6	CALL_31
0x4eb	        0x8345a401	               add dword [rbp - 0x5c], 1	        62	show-index.c	FUNCTION_28	ELSE_2	FOR_6
0x4ef	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        62	show-index.c	FUNCTION_28	ELSE_2	FOR_6
0x4f2	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	        62	show-index.c	FUNCTION_28	ELSE_2	FOR_6
0x4f5	     0xf82d0feffff	                            jb 0x400040b	        62	show-index.c	FUNCTION_28	ELSE_2	FOR_6
0x4fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        82	show-index.c	FUNCTION_28	ELSE_2	CALL_34
0x4ff	          0x4889c7	                            mov rdi, rax	        82	show-index.c	FUNCTION_28	ELSE_2	CALL_34
0x502	      0xe800000000	                          call 0x4000547	        82	show-index.c	FUNCTION_28	ELSE_2	CALL_34
0x507	      0xb800000000	                              mov eax, 0	        84	show-index.c	FUNCTION_28
0x50c	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	        85	show-index.c	FUNCTION_28
0x510	    0x6448331c2528	                xor rbx, qword fs:[0x28]	        85	show-index.c	FUNCTION_28
0x519	            0x7405	                            je 0x4000560	        85	show-index.c	FUNCTION_28
0x51b	      0xe800000000	                          call 0x4000560	        85	show-index.c	FUNCTION_28
0x520	        0x4883c468	                           add rsp, 0x68	        85	show-index.c	FUNCTION_28
0x524	              0x5b	                                 pop rbx	        85	show-index.c	FUNCTION_28
0x525	              0x5d	                                 pop rbp	        85	show-index.c	FUNCTION_28
0x526	              0xc3	                                     ret	        85	show-index.c	FUNCTION_28
