reflog_message	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,8	62
0x9393	              0x55	                                push rbp	      2959	sequencer.c	FUNCTION_86
0x9394	          0x4889e5	                            mov rbp, rsp	      2959	sequencer.c	FUNCTION_86
0x9397	    0x4881ecf00000	                           sub rsp, 0xf0	      2959	sequencer.c	FUNCTION_86
0x939e	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      2959	sequencer.c	FUNCTION_86
0x93a5	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	      2959	sequencer.c	FUNCTION_86
0x93ac	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	      2959	sequencer.c	FUNCTION_86
0x93b3	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	      2959	sequencer.c	FUNCTION_86
0x93ba	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	      2959	sequencer.c	FUNCTION_86
0x93c1	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	      2959	sequencer.c	FUNCTION_86
0x93c8	            0x84c0	                             test al, al	      2959	sequencer.c	FUNCTION_86
0x93ca	            0x7420	                            je 0x400942c	      2959	sequencer.c	FUNCTION_86
0x93cc	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	      2959	sequencer.c	FUNCTION_86
0x93d0	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	      2959	sequencer.c	FUNCTION_86
0x93d4	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	      2959	sequencer.c	FUNCTION_86
0x93d8	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	      2959	sequencer.c	FUNCTION_86
0x93dc	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	      2959	sequencer.c	FUNCTION_86
0x93e0	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	      2959	sequencer.c	FUNCTION_86
0x93e4	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	      2959	sequencer.c	FUNCTION_86
0x93e8	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	      2959	sequencer.c	FUNCTION_86
0x93ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      2959	sequencer.c	FUNCTION_86
0x93f5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2959	sequencer.c	FUNCTION_86
0x93fc	            0x31c0	                            xor eax, eax	      2959	sequencer.c	FUNCTION_86
0x93fe	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	      2963	sequencer.c	FUNCTION_86	CALL_1
0x9408	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	      2963	sequencer.c	FUNCTION_86	CALL_1
0x9412	        0x488d4510	                   lea rax, [rbp + 0x10]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x9416	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x941d	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x9424	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x942b	      0xbe00000000	                              mov esi, 0	      2964	sequencer.c	FUNCTION_86	CALL_2
0x9430	      0xbf00000000	                              mov edi, 0	      2964	sequencer.c	FUNCTION_86	CALL_2
0x9435	      0xe8f36cffff	                  call sym.strbuf_setlen	      2964	sequencer.c	FUNCTION_86	CALL_2
0x943a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2965	sequencer.c	FUNCTION_86	CALL_4
0x9441	          0x4889c7	                            mov rdi, rax	      2965	sequencer.c	FUNCTION_86	CALL_4
0x9444	      0xe8f67bffff	                    call sym.action_name	      2965	sequencer.c	FUNCTION_86	CALL_4
0x9449	          0x4889c6	                            mov rsi, rax	      2965	sequencer.c	FUNCTION_86	CALL_4
0x944c	      0xbf00000000	                              mov edi, 0	      2965	sequencer.c	FUNCTION_86	CALL_4
0x9451	      0xe8df6dffff	                  call sym.strbuf_addstr	      2965	sequencer.c	FUNCTION_86	CALL_4
0x9456	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2966	sequencer.c	FUNCTION_86	IF_1
0x945e	            0x741e	                            je 0x40094be	      2966	sequencer.c	FUNCTION_86	IF_1
0x9460	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2967	sequencer.c	FUNCTION_86	CALL_5
0x9467	          0x4889c2	                            mov rdx, rax	      2967	sequencer.c	FUNCTION_86	CALL_5
0x946a	      0xbe00000000	                              mov esi, 0	      2967	sequencer.c	FUNCTION_86	CALL_5
0x946f	      0xbf00000000	                              mov edi, 0	      2967	sequencer.c	FUNCTION_86	CALL_5
0x9474	      0xb800000000	                              mov eax, 0	      2967	sequencer.c	FUNCTION_86	CALL_5
0x9479	      0xe800000000	                          call 0x40094be	      2967	sequencer.c	FUNCTION_86	CALL_5
0x947e	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2968	sequencer.c	FUNCTION_86	IF_2
0x9486	            0x742a	                            je 0x40094f2	      2968	sequencer.c	FUNCTION_86	IF_2
0x9488	      0xbe00000000	                              mov esi, 0	      2969	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x948d	      0xbf00000000	                              mov edi, 0	      2969	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x9492	      0xe89e6dffff	                  call sym.strbuf_addstr	      2969	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x9497	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_7
0x949e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_7
0x94a5	          0x4889c6	                            mov rsi, rax	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_7
0x94a8	      0xbf00000000	                              mov edi, 0	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_7
0x94ad	      0xe800000000	                          call 0x40094f2	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_7
0x94b2	    0x488b05000000	            mov rax, qword [0x040094f9] 	      2974	sequencer.c	FUNCTION_86
0x94b9	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2975	sequencer.c	FUNCTION_86
0x94c0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2975	sequencer.c	FUNCTION_86
0x94c9	            0x7405	                            je 0x4009510	      2975	sequencer.c	FUNCTION_86
0x94cb	      0xe800000000	                          call 0x4009510	      2975	sequencer.c	FUNCTION_86
0x94d0	              0xc9	                                   leave	      2975	sequencer.c	FUNCTION_86
0x94d1	              0xc3	                                     ret	      2975	sequencer.c	FUNCTION_86
error_dirty_index	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,10	43
0x1585	              0x55	                                push rbp	       430	sequencer.c	FUNCTION_17
0x1586	          0x4889e5	                            mov rbp, rsp	       430	sequencer.c	FUNCTION_17
0x1589	              0x53	                                push rbx	       430	sequencer.c	FUNCTION_17
0x158a	        0x4883ec18	                           sub rsp, 0x18	       430	sequencer.c	FUNCTION_17
0x158e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       430	sequencer.c	FUNCTION_17
0x1592	      0xbf00000000	                              mov edi, 0	       431	sequencer.c	FUNCTION_17	IF_1	CALL_1
0x1597	      0xe800000000	                          call 0x40015dc	       431	sequencer.c	FUNCTION_17	IF_1	CALL_1
0x159c	            0x85c0	                           test eax, eax	       431	sequencer.c	FUNCTION_17	IF_1	CALL_1
0x159e	            0x741e	                            je 0x40015fe	       431	sequencer.c	FUNCTION_17	IF_1	CALL_1
0x15a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       432	sequencer.c	FUNCTION_17	CALL_4
0x15a4	          0x4889c7	                            mov rdi, rax	       432	sequencer.c	FUNCTION_17	CALL_4
0x15a7	      0xe893faffff	                    call sym.action_name	       432	sequencer.c	FUNCTION_17	CALL_4
0x15ac	          0x4889c7	                            mov rdi, rax	       432	sequencer.c	FUNCTION_17	CALL_4
0x15af	      0xe8b3edffff	                               call sym.	       432	sequencer.c	FUNCTION_17	CALL_4
0x15b4	          0x4889c7	                            mov rdi, rax	       432	sequencer.c	FUNCTION_17	CALL_4
0x15b7	      0xe800000000	                          call 0x40015fc	       432	sequencer.c	FUNCTION_17	CALL_4
0x15bc	            0xeb5c	                           jmp 0x400165a	       432	sequencer.c	FUNCTION_17	CALL_4
0x15be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       434	sequencer.c	FUNCTION_17	CALL_6
0x15c2	          0x4889c7	                            mov rdi, rax	       434	sequencer.c	FUNCTION_17	CALL_6
0x15c5	      0xe875faffff	                    call sym.action_name	       434	sequencer.c	FUNCTION_17	CALL_6
0x15ca	          0x4889c7	                            mov rdi, rax	       434	sequencer.c	FUNCTION_17	CALL_6
0x15cd	      0xe895edffff	                               call sym.	       434	sequencer.c	FUNCTION_17	CALL_6
0x15d2	          0x4889c3	                            mov rbx, rax	       434	sequencer.c	FUNCTION_17	CALL_6
0x15d5	      0xbf00000000	                              mov edi, 0	       434	sequencer.c	FUNCTION_17	CALL_6
0x15da	      0xe888edffff	                               call sym.	       434	sequencer.c	FUNCTION_17	CALL_6
0x15df	          0x4889de	                            mov rsi, rbx	       434	sequencer.c	FUNCTION_17	CALL_6
0x15e2	          0x4889c7	                            mov rdi, rax	       434	sequencer.c	FUNCTION_17	CALL_6
0x15e5	      0xb800000000	                              mov eax, 0	       434	sequencer.c	FUNCTION_17	CALL_6
0x15ea	      0xe800000000	                          call 0x400162f	       434	sequencer.c	FUNCTION_17	CALL_6
0x15ef	      0xe80ceaffff	                    call sym.const_error	       434	sequencer.c	FUNCTION_17	CALL_6
0x15f4	    0x8b0500000000	            mov eax, dword [0x0400163a] 	       437	sequencer.c	FUNCTION_17	IF_2
0x15fa	            0x85c0	                           test eax, eax	       437	sequencer.c	FUNCTION_17	IF_2
0x15fc	            0x7417	                            je 0x4001655	       437	sequencer.c	FUNCTION_17	IF_2
0x15fe	      0xbf00000000	                              mov edi, 0	       438	sequencer.c	FUNCTION_17	CALL_10
0x1603	      0xe85fedffff	                               call sym.	       438	sequencer.c	FUNCTION_17	CALL_10
0x1608	          0x4889c7	                            mov rdi, rax	       438	sequencer.c	FUNCTION_17	CALL_10
0x160b	      0xb800000000	                              mov eax, 0	       438	sequencer.c	FUNCTION_17	CALL_10
0x1610	      0xe800000000	                          call 0x4001655	       438	sequencer.c	FUNCTION_17	CALL_10
0x1615	      0xb8ffffffff	                     mov eax, 0xffffffff	       439	sequencer.c	FUNCTION_17
0x161a	        0x4883c418	                           add rsp, 0x18	       440	sequencer.c	FUNCTION_17
0x161e	              0x5b	                                 pop rbx	       440	sequencer.c	FUNCTION_17
0x161f	              0x5d	                                 pop rbp	       440	sequencer.c	FUNCTION_17
0x1620	              0xc3	                                     ret	       440	sequencer.c	FUNCTION_17
rest_is_empty	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,1:IF,3:WHILE,1:CALL,4	82
0x25f7	              0x55	                                push rbp	       784	sequencer.c	FUNCTION_27
0x25f8	          0x4889e5	                            mov rbp, rsp	       784	sequencer.c	FUNCTION_27
0x25fb	        0x4883ec20	                           sub rsp, 0x20	       784	sequencer.c	FUNCTION_27
0x25ff	        0x48897de8	             mov qword [rbp - 0x18], rdi	       784	sequencer.c	FUNCTION_27
0x2603	          0x8975e4	             mov dword [rbp - 0x1c], esi	       784	sequencer.c	FUNCTION_27
0x2606	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       789	sequencer.c	FUNCTION_27	FOR_1
0x2609	          0x8945f0	             mov dword [rbp - 0x10], eax	       789	sequencer.c	FUNCTION_27	FOR_1
0x260c	      0xe9d3000000	                           jmp 0x4002724	       789	sequencer.c	FUNCTION_27	FOR_1
0x2611	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2615	        0x488b5008	                mov rdx, qword [rax + 8]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2619	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x261c	            0x4898	                                    cdqe	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x261e	          0x4829c2	                            sub rdx, rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2621	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2625	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2629	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x262c	            0x4898	                                    cdqe	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x262e	          0x4801c8	                            add rax, rcx	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2631	      0xbe0a000000	                            mov esi, 0xa	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2636	          0x4889c7	                            mov rdi, rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2639	      0xe800000000	                          call 0x400267e	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x263e	        0x488945f8	                mov qword [rbp - 8], rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x2642	      0x48837df800	                  cmp qword [rbp - 8], 0	       791	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x2647	            0x7417	                            je 0x40026a0	       791	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x2649	        0x488b55f8	                mov rdx, qword [rbp - 8]	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x264d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x2651	        0x488b4010	            mov rax, qword [rax + 0x10] 	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x2655	          0x4829c2	                            sub rdx, rax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x2658	          0x4889d0	                            mov rax, rdx	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x265b	          0x8945f4	              mov dword [rbp - 0xc], eax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x265e	            0xeb0b	                           jmp 0x40026ab	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x2660	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       794	sequencer.c	FUNCTION_27	FOR_1	ELSE_1
0x2664	        0x488b4008	                mov rax, qword [rax + 8]	       794	sequencer.c	FUNCTION_27	FOR_1	ELSE_1
0x2668	          0x8945f4	              mov dword [rbp - 0xc], eax	       794	sequencer.c	FUNCTION_27	FOR_1	ELSE_1
0x266b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x266e	          0x2b45f0	             sub eax, dword [rbp - 0x10]	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x2671	            0x4898	                                    cdqe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x2673	        0x4883f80e	                            cmp rax, 0xe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x2677	            0x765f	                           jbe 0x4002718	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x2679	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x267d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x2681	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x2684	            0x4898	                                    cdqe	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x2686	          0x4801d0	                            add rax, rdx	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x2689	      0xbe00000000	                              mov esi, 0	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x268e	          0x4889c7	                            mov rdi, rax	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x2691	      0xe800000000	                          call 0x40026d6	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x2696	            0x85c0	                           test eax, eax	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x2698	            0x743e	                            je 0x4002718	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x269a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       798	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x269d	          0x8945f0	             mov dword [rbp - 0x10], eax	       798	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x26a0	            0xeb3e	                           jmp 0x4002720	       799	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x26a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26a6	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26aa	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26ad	          0x8d5001	                      lea edx, [rax + 1]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26b0	          0x8955f0	             mov dword [rbp - 0x10], edx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26b3	            0x4898	                                    cdqe	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26b5	          0x4801c8	                            add rax, rcx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26b8	           0xfb600	                   movzx eax, byte [rax]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26bb	           0xfb6c0	                           movzx eax, al	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26be	            0x4898	                                    cdqe	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26c0	     0xfb680000000	                   movzx eax, byte [rax]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26c7	           0xfb6c0	                           movzx eax, al	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26ca	          0x83e001	                              and eax, 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26cd	            0x85c0	                           test eax, eax	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26cf	            0x7507	                           jne 0x4002718	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3	CALL_4
0x26d1	      0xb800000000	                              mov eax, 0	       803	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x26d6	            0xeb28	                           jmp 0x4002740	       803	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x26d8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x26db	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x26de	            0x7cc2	                            jl 0x40026e2	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x26e0	        0x8345f001	               add dword [rbp - 0x10], 1	       789	sequencer.c	FUNCTION_27	FOR_1
0x26e4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       789	sequencer.c	FUNCTION_27	FOR_1
0x26e7	          0x4863d0	                         movsxd rdx, eax	       789	sequencer.c	FUNCTION_27	FOR_1
0x26ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       789	sequencer.c	FUNCTION_27	FOR_1
0x26ee	        0x488b4008	                mov rax, qword [rax + 8]	       789	sequencer.c	FUNCTION_27	FOR_1
0x26f2	          0x4839c2	                            cmp rdx, rax	       789	sequencer.c	FUNCTION_27	FOR_1
0x26f5	     0xf8216ffffff	                            jb 0x4002651	       789	sequencer.c	FUNCTION_27	FOR_1
0x26fb	      0xb801000000	                              mov eax, 1	       806	sequencer.c	FUNCTION_27
0x2700	              0xc9	                                   leave	       807	sequencer.c	FUNCTION_27
0x2701	              0xc3	                                     ret	       807	sequencer.c	FUNCTION_27
update_abort_safety_file	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,2:WHILE,0:CALL,8	45
0x1621	              0x55	                                push rbp	       443	sequencer.c	FUNCTION_18
0x1622	          0x4889e5	                            mov rbp, rsp	       443	sequencer.c	FUNCTION_18
0x1625	              0x53	                                push rbx	       443	sequencer.c	FUNCTION_18
0x1626	        0x4883ec28	                           sub rsp, 0x28	       443	sequencer.c	FUNCTION_18
0x162a	    0x64488b042528	                mov rax, qword fs:[0x28]	       443	sequencer.c	FUNCTION_18
0x1633	        0x488945e8	             mov qword [rbp - 0x18], rax	       443	sequencer.c	FUNCTION_18
0x1637	            0x31c0	                            xor eax, eax	       443	sequencer.c	FUNCTION_18
0x1639	      0xe800000000	                          call 0x400167e	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x163e	          0x4889c7	                            mov rdi, rax	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x1641	      0xe800000000	                          call 0x4001686	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x1646	            0x85c0	                           test eax, eax	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x1648	            0x745e	                            je 0x40016e8	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x164a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x164e	          0x4889c6	                            mov rsi, rax	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x1651	      0xbf00000000	                              mov edi, 0	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x1656	      0xe800000000	                          call 0x400169b	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x165b	            0x85c0	                           test eax, eax	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x165d	            0x752b	                           jne 0x40016ca	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x165f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       451	sequencer.c	FUNCTION_18	CALL_6
0x1663	          0x4889c7	                            mov rdi, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x1666	      0xe800000000	                          call 0x40016ab	       451	sequencer.c	FUNCTION_18	CALL_6
0x166b	          0x4889c3	                            mov rbx, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x166e	      0xe85eefffff	     call sym.git_path_abort_safety_file	       451	sequencer.c	FUNCTION_18	CALL_6
0x1673	          0x4889da	                            mov rdx, rbx	       451	sequencer.c	FUNCTION_18	CALL_6
0x1676	      0xbe00000000	                              mov esi, 0	       451	sequencer.c	FUNCTION_18	CALL_6
0x167b	          0x4889c7	                            mov rdi, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x167e	      0xb800000000	                              mov eax, 0	       451	sequencer.c	FUNCTION_18	CALL_6
0x1683	      0xe800000000	                          call 0x40016c8	       451	sequencer.c	FUNCTION_18	CALL_6
0x1688	            0xeb1f	                           jmp 0x40016e9	       451	sequencer.c	FUNCTION_18	CALL_6
0x168a	      0xe842efffff	     call sym.git_path_abort_safety_file	       453	sequencer.c	FUNCTION_18	CALL_8
0x168f	      0xba00000000	                              mov edx, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x1694	      0xbe00000000	                              mov esi, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x1699	          0x4889c7	                            mov rdi, rax	       453	sequencer.c	FUNCTION_18	CALL_8
0x169c	      0xb800000000	                              mov eax, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x16a1	      0xe800000000	                          call 0x40016e6	       453	sequencer.c	FUNCTION_18	CALL_8
0x16a6	            0xeb01	                           jmp 0x40016e9	       453	sequencer.c	FUNCTION_18	CALL_8
0x16a8	              0x90	                                     nop	       448	sequencer.c	FUNCTION_18	IF_1
0x16a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	sequencer.c	FUNCTION_18
0x16ad	    0x644833042528	                xor rax, qword fs:[0x28]	       454	sequencer.c	FUNCTION_18
0x16b6	            0x7405	                            je 0x40016fd	       454	sequencer.c	FUNCTION_18
0x16b8	      0xe800000000	                          call 0x40016fd	       454	sequencer.c	FUNCTION_18
0x16bd	        0x4883c428	                           add rsp, 0x28	       454	sequencer.c	FUNCTION_18
0x16c1	              0x5b	                                 pop rbx	       454	sequencer.c	FUNCTION_18
0x16c2	              0x5d	                                 pop rbp	       454	sequencer.c	FUNCTION_18
0x16c3	              0xc3	                                     ret	       454	sequencer.c	FUNCTION_18
is_rebase_i	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,0	10
0xc88	              0x55	                                push rbp	       193	sequencer.c	FUNCTION_3
0xc89	          0x4889e5	                            mov rbp, rsp	       193	sequencer.c	FUNCTION_3
0xc8c	        0x48897df8	                mov qword [rbp - 8], rdi	       193	sequencer.c	FUNCTION_3
0xc90	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	sequencer.c	FUNCTION_3
0xc94	            0x8b00	                    mov eax, dword [rax]	       194	sequencer.c	FUNCTION_3
0xc96	          0x83f802	                              cmp eax, 2	       194	sequencer.c	FUNCTION_3
0xc99	           0xf94c0	                                 sete al	       194	sequencer.c	FUNCTION_3
0xc9c	           0xfb6c0	                           movzx eax, al	       194	sequencer.c	FUNCTION_3
0xc9f	              0x5d	                                 pop rbp	       195	sequencer.c	FUNCTION_3
0xca0	              0xc3	                                     ret	       195	sequencer.c	FUNCTION_3
parse_commit	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	10
0x4c7	              0x55	                                push rbp	        74	commit.h	FUNCTION_106
0x4c8	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_106
0x4cb	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_106
0x4cf	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_106
0x4d3	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_106	CALL_1
0x4d7	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_106	CALL_1
0x4dc	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_106	CALL_1
0x4df	      0xe800000000	                          call 0x4000524	        75	commit.h	FUNCTION_106	CALL_1
0x4e4	              0xc9	                                   leave	        76	commit.h	FUNCTION_106
0x4e5	              0xc3	                                     ret	        76	commit.h	FUNCTION_106
gpg_sign_opt_quoted	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,2	21
0xe0a	              0x55	                                push rbp	       246	sequencer.c	FUNCTION_7
0xe0b	          0x4889e5	                            mov rbp, rsp	       246	sequencer.c	FUNCTION_7
0xe0e	        0x4883ec10	                           sub rsp, 0x10	       246	sequencer.c	FUNCTION_7
0xe12	        0x48897df8	                mov qword [rbp - 8], rdi	       246	sequencer.c	FUNCTION_7
0xe16	      0xbe00000000	                              mov esi, 0	       249	sequencer.c	FUNCTION_7	CALL_1
0xe1b	      0xbf00000000	                              mov edi, 0	       249	sequencer.c	FUNCTION_7	CALL_1
0xe20	      0xe808f3ffff	                  call sym.strbuf_setlen	       249	sequencer.c	FUNCTION_7	CALL_1
0xe25	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	sequencer.c	FUNCTION_7	IF_1
0xe29	        0x488b4030	            mov rax, qword [rax + 0x30] 	       250	sequencer.c	FUNCTION_7	IF_1
0xe2d	          0x4885c0	                           test rax, rax	       250	sequencer.c	FUNCTION_7	IF_1
0xe30	            0x741f	                            je 0x4000e91	       250	sequencer.c	FUNCTION_7	IF_1
0xe32	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	sequencer.c	FUNCTION_7	CALL_2
0xe36	        0x488b4030	            mov rax, qword [rax + 0x30] 	       251	sequencer.c	FUNCTION_7	CALL_2
0xe3a	          0x4889c2	                            mov rdx, rax	       251	sequencer.c	FUNCTION_7	CALL_2
0xe3d	      0xbe00000000	                              mov esi, 0	       251	sequencer.c	FUNCTION_7	CALL_2
0xe42	      0xbf00000000	                              mov edi, 0	       251	sequencer.c	FUNCTION_7	CALL_2
0xe47	      0xb800000000	                              mov eax, 0	       251	sequencer.c	FUNCTION_7	CALL_2
0xe4c	      0xe800000000	                          call 0x4000e91	       251	sequencer.c	FUNCTION_7	CALL_2
0xe51	    0x488b05000000	            mov rax, qword [0x04000e98] 	       252	sequencer.c	FUNCTION_7
0xe58	              0xc9	                                   leave	       253	sequencer.c	FUNCTION_7
0xe59	              0xc3	                                     ret	       253	sequencer.c	FUNCTION_7
strbuf_addstr	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,2	17
0x235	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_111
0x236	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_111
0x239	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_111
0x23d	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_111
0x241	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_111
0x245	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_111	CALL_2
0x249	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x24c	      0xe800000000	                          call 0x4000291	       279	strbuf.h	FUNCTION_111	CALL_2
0x251	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x254	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_111	CALL_2
0x258	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_111	CALL_2
0x25c	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_111	CALL_2
0x25f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x262	      0xe800000000	                          call 0x40002a7	       279	strbuf.h	FUNCTION_111	CALL_2
0x267	              0x90	                                     nop	       280	strbuf.h	FUNCTION_111
0x268	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_111
0x269	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_111
commit_staged_changes	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,19:WHILE,1:CALL,65	345
0xa5ca	              0x55	                                push rbp	      3253	sequencer.c	FUNCTION_89
0xa5cb	          0x4889e5	                            mov rbp, rsp	      3253	sequencer.c	FUNCTION_89
0xa5ce	              0x53	                                push rbx	      3253	sequencer.c	FUNCTION_89
0xa5cf	    0x4881eca80000	                           sub rsp, 0xa8	      3253	sequencer.c	FUNCTION_89
0xa5d6	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3253	sequencer.c	FUNCTION_89
0xa5dd	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      3253	sequencer.c	FUNCTION_89
0xa5e4	    0x64488b042528	                mov rax, qword fs:[0x28]	      3253	sequencer.c	FUNCTION_89
0xa5ed	        0x488945e8	             mov qword [rbp - 0x18], rax	      3253	sequencer.c	FUNCTION_89
0xa5f1	            0x31c0	                            xor eax, eax	      3253	sequencer.c	FUNCTION_89
0xa5f3	    0xc78560ffffff	               mov dword [rbp - 0xa0], 3	      3254	sequencer.c	FUNCTION_89
0xa5fd	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      3255	sequencer.c	FUNCTION_89
0xa607	      0xbf01000000	                              mov edi, 1	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0xa60c	      0xe800000000	                          call 0x400a651	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0xa611	            0x85c0	                           test eax, eax	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0xa613	            0x7421	                            je 0x400a676	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0xa615	      0xbf00000000	                              mov edi, 0	      3258	sequencer.c	FUNCTION_89	CALL_3
0xa61a	      0xe8485dffff	                               call sym.	      3258	sequencer.c	FUNCTION_89	CALL_3
0xa61f	          0x4889c7	                            mov rdi, rax	      3258	sequencer.c	FUNCTION_89	CALL_3
0xa622	      0xb800000000	                              mov eax, 0	      3258	sequencer.c	FUNCTION_89	CALL_3
0xa627	      0xe800000000	                          call 0x400a66c	      3258	sequencer.c	FUNCTION_89	CALL_3
0xa62c	      0xe8cf59ffff	                    call sym.const_error	      3258	sequencer.c	FUNCTION_89	CALL_3
0xa631	      0xe95a050000	                           jmp 0x400abd0	      3258	sequencer.c	FUNCTION_89	CALL_3
0xa636	      0xbf00000000	                              mov edi, 0	      3260	sequencer.c	FUNCTION_89	CALL_4
0xa63b	      0xe800000000	                          call 0x400a680	      3260	sequencer.c	FUNCTION_89	CALL_4
0xa640	            0x85c0	                           test eax, eax	      3260	sequencer.c	FUNCTION_89	CALL_4
0xa642	           0xf94c0	                                 sete al	      3260	sequencer.c	FUNCTION_89	CALL_4
0xa645	           0xfb6c0	                           movzx eax, al	      3260	sequencer.c	FUNCTION_89	CALL_4
0xa648	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      3260	sequencer.c	FUNCTION_89	CALL_4
0xa64e	      0xe88361ffff	              call sym.rebase_path_amend	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_6
0xa653	          0x4889c7	                            mov rdi, rax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_6
0xa656	      0xe800000000	                          call 0x400a69b	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_6
0xa65b	            0x85c0	                           test eax, eax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_6
0xa65d	     0xf84ff030000	                            je 0x400aaa2	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_6
0xa663	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0xa66b	    0x48c745980000	               mov qword [rbp - 0x68], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0xa673	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0xa67b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_7
0xa67f	          0x4889c6	                            mov rsi, rax	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_7
0xa682	      0xbf00000000	                              mov edi, 0	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_7
0xa687	      0xe800000000	                          call 0x400a6cc	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_7
0xa68c	            0x85c0	                           test eax, eax	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_7
0xa68e	            0x7421	                            je 0x400a6f1	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_7
0xa690	      0xbf00000000	                              mov edi, 0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xa695	      0xe8cd5cffff	                               call sym.	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xa69a	          0x4889c7	                            mov rdi, rax	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xa69d	      0xb800000000	                              mov eax, 0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xa6a2	      0xe800000000	                          call 0x400a6e7	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xa6a7	      0xe85459ffff	                    call sym.const_error	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xa6ac	      0xe9df040000	                           jmp 0x400abd0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xa6b1	      0xe82061ffff	              call sym.rebase_path_amend	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6b6	          0x4889c1	                            mov rcx, rax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6b9	        0x488d4590	                   lea rax, [rbp - 0x70]	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6bd	      0xba00000000	                              mov edx, 0	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6c2	          0x4889ce	                            mov rsi, rcx	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6c5	          0x4889c7	                            mov rdi, rax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6c8	      0xe8536dffff	                  call sym.read_oneliner	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6cd	            0x85c0	                           test eax, eax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6cf	            0x752c	                           jne 0x400a73d	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_11
0xa6d1	      0xe80061ffff	              call sym.rebase_path_amend	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6d6	          0x4889c3	                            mov rbx, rax	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6d9	      0xbf00000000	                              mov edi, 0	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6de	      0xe8845cffff	                               call sym.	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6e3	          0x4889de	                            mov rsi, rbx	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6e6	          0x4889c7	                            mov rdi, rax	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6e9	      0xb800000000	                              mov eax, 0	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6ee	      0xe800000000	                          call 0x400a733	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6f3	      0xe80859ffff	                    call sym.const_error	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6f8	      0xe993040000	                           jmp 0x400abd0	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_14
0xa6fd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_15
0xa701	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_15
0xa705	          0x4889d6	                            mov rsi, rdx	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_15
0xa708	          0x4889c7	                            mov rdi, rax	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_15
0xa70b	      0xe800000000	                          call 0x400a750	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_15
0xa710	            0x85c0	                           test eax, eax	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_15
0xa712	            0x742c	                            je 0x400a780	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_15
0xa714	      0xe8bd60ffff	              call sym.rebase_path_amend	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa719	          0x4889c3	                            mov rbx, rax	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa71c	      0xbf00000000	                              mov edi, 0	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa721	      0xe8415cffff	                               call sym.	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa726	          0x4889de	                            mov rsi, rbx	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa729	          0x4889c7	                            mov rdi, rax	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa72c	      0xb800000000	                              mov eax, 0	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa731	      0xe800000000	                          call 0x400a776	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa736	      0xe8c558ffff	                    call sym.const_error	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa73b	      0xe950040000	                           jmp 0x400abd0	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_17
0xa740	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa747	            0x7538	                           jne 0x400a7c1	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa749	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa74d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa751	          0x4889d6	                            mov rsi, rdx	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa754	          0x4889c7	                            mov rdi, rax	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa757	      0xe8615cffff	                         call sym.oidcmp	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa75c	            0x85c0	                           test eax, eax	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa75e	            0x7421	                            je 0x400a7c1	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_19
0xa760	      0xbf00000000	                              mov edi, 0	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_21
0xa765	      0xe8fd5bffff	                               call sym.	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_21
0xa76a	          0x4889c7	                            mov rdi, rax	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_21
0xa76d	      0xb800000000	                              mov eax, 0	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_21
0xa772	      0xe800000000	                          call 0x400a7b7	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_21
0xa777	      0xe88458ffff	                    call sym.const_error	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_21
0xa77c	      0xe90f040000	                           jmp 0x400abd0	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_21
0xa781	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa788	     0xf84c1020000	                            je 0x400aa8f	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa78e	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa792	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa796	          0x4889d6	                            mov rsi, rdx	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa799	          0x4889c7	                            mov rdi, rax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa79c	      0xe81c5cffff	                         call sym.oidcmp	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa7a1	            0x85c0	                           test eax, eax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa7a3	     0xf85a6020000	                           jne 0x400aa8f	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa7a9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7b0	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7b3	            0x85c0	                           test eax, eax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa7b5	     0xf8e94020000	                           jle 0x400aa8f	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_22
0xa7bb	      0xe84560ffff	        call sym.rebase_path_stopped_sha	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_24
0xa7c0	          0x4889c7	                            mov rdi, rax	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_24
0xa7c3	      0xe800000000	                          call 0x400a808	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_24
0xa7c8	            0x85c0	                           test eax, eax	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7ca	     0xf847f020000	                            je 0x400aa8f	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7d0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7d7	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7db	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7e2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7e9	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7ed	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7f3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7fa	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa7fd	          0x8d50ff	                      lea edx, [rax - 1]	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa800	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa807	          0x895078	             mov dword [rax + 0x78], edx	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0xa80a	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0xa811	            0x752a	                           jne 0x400a87d	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0xa813	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_25
0xa81a	          0x4889c1	                            mov rcx, rax	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_25
0xa81d	      0xba00000000	                              mov edx, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_25
0xa822	      0xbedd0c0000	                          mov esi, 0xcdd	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_25
0xa827	      0xbf00000000	                              mov edi, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_25
0xa82c	      0xb800000000	                              mov eax, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_25
0xa831	      0xe800000000	                          call 0x400a876	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_25
0xa836	    0x83ad68ffffff	               sub dword [rbp - 0x98], 1	      3295	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa83d	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa844	            0x741d	                            je 0x400a8a3	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa846	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa84c	            0x4898	                                    cdqe	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa84e	        0x488d50ff	                      lea rdx, [rax - 1]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa852	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa859	          0x4801d0	                            add rax, rdx	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa85c	           0xfb600	                   movzx eax, byte [rax]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa85f	            0x3c0a	                             cmp al, 0xa	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa861	            0x75d3	                           jne 0x400a876	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0xa863	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_26
0xa869	            0x4898	                                    cdqe	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_26
0xa86b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_26
0xa872	        0x4883c260	                           add rdx, 0x60	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_26
0xa876	          0x4889c6	                            mov rsi, rax	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_26
0xa879	          0x4889d7	                            mov rdi, rdx	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_26
0xa87c	      0xe8ac58ffff	                  call sym.strbuf_setlen	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_26
0xa881	      0xe8f25effff	     call sym.rebase_path_current_fixups	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa886	          0x4889c2	                            mov rdx, rax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa889	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa88f	          0x4863f0	                         movsxd rsi, eax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa892	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa899	      0xb900000000	                              mov ecx, 0	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa89e	          0x4889c7	                            mov rdi, rax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa8a1	      0xe8ff69ffff	                  call sym.write_message	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa8a6	            0x85c0	                           test eax, eax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa8a8	            0x792c	                           jns 0x400a916	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_28
0xa8aa	      0xe8c95effff	     call sym.rebase_path_current_fixups	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8af	          0x4889c3	                            mov rbx, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8b2	      0xbf00000000	                              mov edi, 0	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8b7	      0xe8ab5affff	                               call sym.	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8bc	          0x4889de	                            mov rsi, rbx	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8bf	          0x4889c7	                            mov rdi, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8c2	      0xb800000000	                              mov eax, 0	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8c7	      0xe800000000	                          call 0x400a90c	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8cc	      0xe82f57ffff	                    call sym.const_error	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8d1	      0xe9ba020000	                           jmp 0x400abd0	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_30
0xa8d6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0xa8dd	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0xa8e0	            0x85c0	                           test eax, eax	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0xa8e2	            0x7e79	                           jle 0x400a99d	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0xa8e4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_33
0xa8eb	      0xbe00000000	                              mov esi, 0	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_33
0xa8f0	          0x4889c7	                            mov rdi, rax	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_33
0xa8f3	      0xe853e7ffff	                   call sym.peek_command	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_33
0xa8f8	            0x89c7	                            mov edi, eax	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_33
0xa8fa	      0xe85393ffff	                       call sym.is_fixup	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_33
0xa8ff	            0x85c0	                           test eax, eax	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0xa901	            0x755a	                           jne 0x400a99d	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0xa903	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0xa90d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa914	      0xbe00000000	                              mov esi, 0	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa919	          0x4889c7	                            mov rdi, rax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa91c	      0xe800000000	                          call 0x400a961	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa921	            0x85c0	                           test eax, eax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa923	     0xf8525010000	                           jne 0x400aa8e	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa929	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_35
0xa930	      0xbe00000000	                              mov esi, 0	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_35
0xa935	          0x4889c7	                            mov rdi, rax	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_35
0xa938	      0xe800000000	                          call 0x400a97d	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_35
0xa93d	          0x4885c0	                           test rax, rax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa940	     0xf8508010000	                           jne 0x400aa8e	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa946	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0xa94c	          0x83e0f5	                     and eax, 0xfffffff5	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0xa94f	          0x83c808	                               or eax, 8	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0xa952	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0xa958	      0xe9f1000000	                           jmp 0x400aa8e	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xa95d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa964	      0xbe00000000	                              mov esi, 0	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa969	          0x4889c7	                            mov rdi, rax	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa96c	      0xe8dae6ffff	                   call sym.peek_command	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa971	            0x89c7	                            mov edi, eax	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa973	      0xe8da92ffff	                       call sym.is_fixup	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa978	            0x85c0	                           test eax, eax	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa97a	     0xf84cf000000	                            je 0x400aa8f	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0xa980	      0xe8955dffff	         call sym.rebase_path_squash_msg	      3331	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0xa985	        0x48894580	             mov qword [rbp - 0x80], rax	      3331	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0xa989	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa990	          0x4889c7	                            mov rdi, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa993	      0xe8f588ffff	                     call sym.parse_head	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa998	            0x85c0	                           test eax, eax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa99a	            0x7553	                           jne 0x400aa2f	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa99c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_40
0xa9a3	      0xbe00000000	                              mov esi, 0	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa9a8	          0x4889c7	                            mov rdi, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa9ab	      0xe800000000	                          call 0x400a9f0	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa9b0	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa9b7	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa9bf	            0x742e	                            je 0x400aa2f	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_39
0xa9c1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9c8	          0x4889c7	                            mov rdi, rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9cb	      0xe800000000	                          call 0x400aa10	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9d0	          0x4889c6	                            mov rsi, rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9d3	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9de	      0xb900000000	                              mov ecx, 0	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9e3	          0x4889c7	                            mov rdi, rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9e6	      0xe8ba68ffff	                  call sym.write_message	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_42
0xa9eb	            0x85c0	                           test eax, eax	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_40
0xa9ed	            0x7444	                            je 0x400aa73	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_40
0xa9ef	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_43
0xa9f6	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_43
0xa9fd	          0x4889d6	                            mov rsi, rdx	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_43
0xaa00	          0x4889c7	                            mov rdi, rax	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_43
0xaa03	      0xe800000000	                          call 0x400aa48	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_43
0xaa08	      0xbf00000000	                              mov edi, 0	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa0d	      0xe85559ffff	                               call sym.	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa12	          0x4889c2	                            mov rdx, rax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa15	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa19	          0x4889c6	                            mov rsi, rax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa1c	          0x4889d7	                            mov rdi, rdx	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa1f	      0xb800000000	                              mov eax, 0	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa24	      0xe800000000	                          call 0x400aa69	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa29	      0xe8d255ffff	                    call sym.const_error	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_45
0xaa2e	      0xe95d010000	                           jmp 0x400abd0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_9
0xaa33	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_46
0xaa3a	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_46
0xaa41	          0x4889d6	                            mov rsi, rdx	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_46
0xaa44	          0x4889c7	                            mov rdi, rax	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_46
0xaa47	      0xe800000000	                          call 0x400aa8c	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_46
0xaa4c	            0xeb01	                           jmp 0x400aa8f	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_46
0xaa4e	              0x90	                                     nop	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_34
0xaa4f	        0x488d4590	                   lea rax, [rbp - 0x70]	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_47
0xaa53	          0x4889c7	                            mov rdi, rax	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_47
0xaa56	      0xe800000000	                          call 0x400aa9b	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_47
0xaa5b	    0x838d60ffffff	                or dword [rbp - 0xa0], 4	      3345	sequencer.c	FUNCTION_89	IF_2
0xaa62	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3348	sequencer.c	FUNCTION_89	IF_14
0xaa69	            0x745d	                            je 0x400ab08	      3348	sequencer.c	FUNCTION_89	IF_14
0xaa6b	      0xe800000000	                          call 0x400aab0	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_48
0xaa70	        0x48894588	             mov qword [rbp - 0x78], rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_48
0xaa74	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa78	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa7b	      0xe800000000	                          call 0x400aac0	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa80	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa82	            0x7431	                            je 0x400aaf5	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa84	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa88	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa8b	      0xe800000000	                          call 0x400aad0	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa90	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa92	            0x7421	                            je 0x400aaf5	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_50
0xaa94	      0xbf00000000	                              mov edi, 0	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_52
0xaa99	      0xe8c958ffff	                               call sym.	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_52
0xaa9e	          0x4889c7	                            mov rdi, rax	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_52
0xaaa1	      0xb800000000	                              mov eax, 0	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_52
0xaaa6	      0xe800000000	                          call 0x400aaeb	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_52
0xaaab	      0xe85055ffff	                    call sym.const_error	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_52
0xaab0	      0xe9db000000	                           jmp 0x400abd0	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_52
0xaab5	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0xaabc	            0x750a	                           jne 0x400ab08	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0xaabe	      0xb800000000	                              mov eax, 0	      3354	sequencer.c	FUNCTION_89	IF_14	IF_16
0xaac3	      0xe9c8000000	                           jmp 0x400abd0	      3354	sequencer.c	FUNCTION_89	IF_14	IF_16
0xaac8	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaacf	            0x750a	                           jne 0x400ab1b	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaad1	      0xe8155cffff	            call sym.rebase_path_message	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaad6	          0x4889c1	                            mov rcx, rax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaad9	            0xeb05	                           jmp 0x400ab20	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaadb	      0xb900000000	                              mov ecx, 0	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaae0	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaae6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaaed	          0x4889c6	                            mov rsi, rax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaaf0	          0x4889cf	                            mov rdi, rcx	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaaf3	      0xe88177ffff	                 call sym.run_git_commit	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaaf8	            0x85c0	                           test eax, eax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaafa	            0x741e	                            je 0x400ab5a	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_54
0xaafc	      0xbf00000000	                              mov edi, 0	      3359	sequencer.c	FUNCTION_89	CALL_56
0xab01	      0xe86158ffff	                               call sym.	      3359	sequencer.c	FUNCTION_89	CALL_56
0xab06	          0x4889c7	                            mov rdi, rax	      3359	sequencer.c	FUNCTION_89	CALL_56
0xab09	      0xb800000000	                              mov eax, 0	      3359	sequencer.c	FUNCTION_89	CALL_56
0xab0e	      0xe800000000	                          call 0x400ab53	      3359	sequencer.c	FUNCTION_89	CALL_56
0xab13	      0xe8e854ffff	                    call sym.const_error	      3359	sequencer.c	FUNCTION_89	CALL_56
0xab18	            0xeb76	                           jmp 0x400abd0	      3359	sequencer.c	FUNCTION_89	CALL_56
0xab1a	      0xe8b75cffff	              call sym.rebase_path_amend	      3360	sequencer.c	FUNCTION_89	CALL_58
0xab1f	          0x4889c7	                            mov rdi, rax	      3360	sequencer.c	FUNCTION_89	CALL_58
0xab22	      0xe800000000	                          call 0x400ab67	      3360	sequencer.c	FUNCTION_89	CALL_58
0xab27	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      3361	sequencer.c	FUNCTION_89	IF_18
0xab2e	            0x741a	                            je 0x400ab8a	      3361	sequencer.c	FUNCTION_89	IF_18
0xab30	      0xe8145cffff	          call sym.rebase_path_fixup_msg	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_60
0xab35	          0x4889c7	                            mov rdi, rax	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_60
0xab38	      0xe800000000	                          call 0x400ab7d	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_60
0xab3d	      0xe8d85bffff	         call sym.rebase_path_squash_msg	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_62
0xab42	          0x4889c7	                            mov rdi, rax	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_62
0xab45	      0xe800000000	                          call 0x400ab8a	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_62
0xab4a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3365	sequencer.c	FUNCTION_89	IF_19
0xab51	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3365	sequencer.c	FUNCTION_89	IF_19
0xab54	            0x85c0	                           test eax, eax	      3365	sequencer.c	FUNCTION_89	IF_19
0xab56	            0x7e33	                           jle 0x400abcb	      3365	sequencer.c	FUNCTION_89	IF_19
0xab58	      0xe81b5cffff	     call sym.rebase_path_current_fixups	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_64
0xab5d	          0x4889c7	                            mov rdi, rax	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_64
0xab60	      0xe800000000	                          call 0x400aba5	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_64
0xab65	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3371	sequencer.c	FUNCTION_89	IF_19	CALL_65
0xab6c	        0x4883c060	                           add rax, 0x60	      3371	sequencer.c	FUNCTION_89	IF_19	CALL_65
0xab70	      0xbe00000000	                              mov esi, 0	      3371	sequencer.c	FUNCTION_89	IF_19	CALL_65
0xab75	          0x4889c7	                            mov rdi, rax	      3371	sequencer.c	FUNCTION_89	IF_19	CALL_65
0xab78	      0xe8b055ffff	                  call sym.strbuf_setlen	      3371	sequencer.c	FUNCTION_89	IF_19	CALL_65
0xab7d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3372	sequencer.c	FUNCTION_89	IF_19
0xab84	    0xc74078000000	               mov dword [rax + 0x78], 0	      3372	sequencer.c	FUNCTION_89	IF_19
0xab8b	      0xb800000000	                              mov eax, 0	      3374	sequencer.c	FUNCTION_89
0xab90	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3375	sequencer.c	FUNCTION_89
0xab94	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3375	sequencer.c	FUNCTION_89
0xab9d	            0x7405	                            je 0x400abe4	      3375	sequencer.c	FUNCTION_89
0xab9f	      0xe800000000	                          call 0x400abe4	      3375	sequencer.c	FUNCTION_89
0xaba4	    0x4881c4a80000	                           add rsp, 0xa8	      3375	sequencer.c	FUNCTION_89
0xabab	              0x5b	                                 pop rbx	      3375	sequencer.c	FUNCTION_89
0xabac	              0x5d	                                 pop rbp	      3375	sequencer.c	FUNCTION_89
0xabad	              0xc3	                                     ret	      3375	sequencer.c	FUNCTION_89
fast_forward_to	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,17	111
0x16c4	              0x55	                                push rbp	       458	sequencer.c	FUNCTION_19
0x16c5	          0x4889e5	                            mov rbp, rsp	       458	sequencer.c	FUNCTION_19
0x16c8	              0x53	                                push rbx	       458	sequencer.c	FUNCTION_19
0x16c9	        0x4883ec78	                           sub rsp, 0x78	       458	sequencer.c	FUNCTION_19
0x16cd	        0x48897d98	             mov qword [rbp - 0x68], rdi	       458	sequencer.c	FUNCTION_19
0x16d1	        0x48897590	             mov qword [rbp - 0x70], rsi	       458	sequencer.c	FUNCTION_19
0x16d5	          0x89558c	             mov dword [rbp - 0x74], edx	       458	sequencer.c	FUNCTION_19
0x16d8	        0x48894d80	             mov qword [rbp - 0x80], rcx	       458	sequencer.c	FUNCTION_19
0x16dc	    0x64488b042528	                mov rax, qword fs:[0x28]	       458	sequencer.c	FUNCTION_19
0x16e5	        0x488945e8	             mov qword [rbp - 0x18], rax	       458	sequencer.c	FUNCTION_19
0x16e9	            0x31c0	                            xor eax, eax	       458	sequencer.c	FUNCTION_19
0x16eb	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       460	sequencer.c	FUNCTION_19
0x16f3	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       460	sequencer.c	FUNCTION_19
0x16fb	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       460	sequencer.c	FUNCTION_19
0x1703	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       461	sequencer.c	FUNCTION_19
0x170b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       461	sequencer.c	FUNCTION_19
0x1713	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       461	sequencer.c	FUNCTION_19
0x171b	      0xbf00000000	                              mov edi, 0	       463	sequencer.c	FUNCTION_19	CALL_1
0x1720	      0xe800000000	                          call 0x4001765	       463	sequencer.c	FUNCTION_19	CALL_1
0x1725	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x1729	        0x488b4590	             mov rax, qword [rbp - 0x70]	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x172d	      0xba01000000	                              mov edx, 1	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x1732	          0x4889ce	                            mov rsi, rcx	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x1735	          0x4889c7	                            mov rdi, rax	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x1738	      0xe800000000	                          call 0x400177d	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x173d	            0x85c0	                           test eax, eax	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x173f	            0x740a	                            je 0x400178b	       464	sequencer.c	FUNCTION_19	IF_1	CALL_2
0x1741	      0xb8ffffffff	                     mov eax, 0xffffffff	       465	sequencer.c	FUNCTION_19	IF_1
0x1746	      0xe921010000	                           jmp 0x40018ac	       465	sequencer.c	FUNCTION_19	IF_1
0x174b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       467	sequencer.c	FUNCTION_19	CALL_6
0x174f	          0x4889c7	                            mov rdi, rax	       467	sequencer.c	FUNCTION_19	CALL_6
0x1752	      0xe8e8f8ffff	                    call sym.action_name	       467	sequencer.c	FUNCTION_19	CALL_6
0x1757	          0x4889c7	                            mov rdi, rax	       467	sequencer.c	FUNCTION_19	CALL_6
0x175a	      0xe808ecffff	                               call sym.	       467	sequencer.c	FUNCTION_19	CALL_6
0x175f	          0x4889c3	                            mov rbx, rax	       467	sequencer.c	FUNCTION_19	CALL_6
0x1762	      0xbf00000000	                              mov edi, 0	       467	sequencer.c	FUNCTION_19	CALL_6
0x1767	      0xe8fbebffff	                               call sym.	       467	sequencer.c	FUNCTION_19	CALL_6
0x176c	          0x4889c1	                            mov rcx, rax	       467	sequencer.c	FUNCTION_19	CALL_6
0x176f	        0x488d45b0	                   lea rax, [rbp - 0x50]	       467	sequencer.c	FUNCTION_19	CALL_6
0x1773	          0x4889da	                            mov rdx, rbx	       467	sequencer.c	FUNCTION_19	CALL_6
0x1776	          0x4889ce	                            mov rsi, rcx	       467	sequencer.c	FUNCTION_19	CALL_6
0x1779	          0x4889c7	                            mov rdi, rax	       467	sequencer.c	FUNCTION_19	CALL_6
0x177c	      0xb800000000	                              mov eax, 0	       467	sequencer.c	FUNCTION_19	CALL_6
0x1781	      0xe800000000	                          call 0x40017c6	       467	sequencer.c	FUNCTION_19	CALL_6
0x1786	        0x488d45d0	                   lea rax, [rbp - 0x30]	       469	sequencer.c	FUNCTION_19	CALL_7
0x178a	          0x4889c7	                            mov rdi, rax	       469	sequencer.c	FUNCTION_19	CALL_7
0x178d	      0xe800000000	                          call 0x40017d2	       469	sequencer.c	FUNCTION_19	CALL_7
0x1792	        0x488945a8	             mov qword [rbp - 0x58], rax	       469	sequencer.c	FUNCTION_19	CALL_7
0x1796	      0x48837da800	               cmp qword [rbp - 0x58], 0	       470	sequencer.c	FUNCTION_19	IF_2
0x179b	            0x745b	                            je 0x4001838	       470	sequencer.c	FUNCTION_19	IF_2
0x179d	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       473	sequencer.c	FUNCTION_19	IF_2
0x17a1	        0x837d8c00	               cmp dword [rbp - 0x74], 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17a5	            0x7506	                           jne 0x40017ed	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17a7	        0x488b4590	             mov rax, qword [rbp - 0x70]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17ab	            0xeb05	                           jmp 0x40017f2	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17ad	      0xb800000000	                              mov eax, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17b2	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17b6	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17ba	        0x4883ec08	                              sub rsp, 8	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17be	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17c2	              0x51	                                push rcx	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17c3	          0x4989f1	                             mov r9, rsi	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17c6	    0x41b800000000	                              mov r8d, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17cc	          0x4889c1	                            mov rcx, rax	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17cf	      0xbe00000000	                              mov esi, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17d4	      0xe800000000	                          call 0x4001819	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17d9	        0x4883c410	                           add rsp, 0x10	       471	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x17dd	            0x85c0	                           test eax, eax	       470	sequencer.c	FUNCTION_19	IF_2
0x17df	            0x7517	                           jne 0x4001838	       470	sequencer.c	FUNCTION_19	IF_2
0x17e1	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       474	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x17e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       474	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x17e9	          0x4889d6	                            mov rsi, rdx	       474	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x17ec	          0x4889c7	                            mov rdi, rax	       474	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x17ef	      0xe800000000	                          call 0x4001834	       474	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x17f4	            0x85c0	                           test eax, eax	       473	sequencer.c	FUNCTION_19	IF_2
0x17f6	            0x7446	                            je 0x400187e	       473	sequencer.c	FUNCTION_19	IF_2
0x17f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       475	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x17fc	          0x4889c7	                            mov rdi, rax	       475	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x17ff	      0xe800000000	                          call 0x4001844	       475	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x1804	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       476	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x1808	          0x4889c6	                            mov rsi, rax	       476	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x180b	      0xbf00000000	                              mov edi, 0	       476	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x1810	      0xb800000000	                              mov eax, 0	       476	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x1815	      0xe800000000	                          call 0x400185a	       476	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x181a	      0xe8e1e7ffff	                    call sym.const_error	       476	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x181f	        0x488d45b0	                   lea rax, [rbp - 0x50]	       477	sequencer.c	FUNCTION_19	IF_2	CALL_12
0x1823	          0x4889c7	                            mov rdi, rax	       477	sequencer.c	FUNCTION_19	IF_2	CALL_12
0x1826	      0xe800000000	                          call 0x400186b	       477	sequencer.c	FUNCTION_19	IF_2	CALL_12
0x182b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       478	sequencer.c	FUNCTION_19	IF_2	CALL_13
0x182f	          0x4889c7	                            mov rdi, rax	       478	sequencer.c	FUNCTION_19	IF_2	CALL_13
0x1832	      0xe800000000	                          call 0x4001877	       478	sequencer.c	FUNCTION_19	IF_2	CALL_13
0x1837	      0xb8ffffffff	                     mov eax, 0xffffffff	       479	sequencer.c	FUNCTION_19	IF_2
0x183c	            0xeb2e	                           jmp 0x40018ac	       479	sequencer.c	FUNCTION_19	IF_2
0x183e	        0x488d45b0	                   lea rax, [rbp - 0x50]	       482	sequencer.c	FUNCTION_19	CALL_14
0x1842	          0x4889c7	                            mov rdi, rax	       482	sequencer.c	FUNCTION_19	CALL_14
0x1845	      0xe800000000	                          call 0x400188a	       482	sequencer.c	FUNCTION_19	CALL_14
0x184a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       483	sequencer.c	FUNCTION_19	CALL_15
0x184e	          0x4889c7	                            mov rdi, rax	       483	sequencer.c	FUNCTION_19	CALL_15
0x1851	      0xe800000000	                          call 0x4001896	       483	sequencer.c	FUNCTION_19	CALL_15
0x1856	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       484	sequencer.c	FUNCTION_19	CALL_16
0x185a	          0x4889c7	                            mov rdi, rax	       484	sequencer.c	FUNCTION_19	CALL_16
0x185d	      0xe800000000	                          call 0x40018a2	       484	sequencer.c	FUNCTION_19	CALL_16
0x1862	      0xe8bafdffff	       call sym.update_abort_safety_file	       485	sequencer.c	FUNCTION_19	CALL_17
0x1867	      0xb800000000	                              mov eax, 0	       486	sequencer.c	FUNCTION_19
0x186c	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       487	sequencer.c	FUNCTION_19
0x1870	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       487	sequencer.c	FUNCTION_19
0x1879	            0x7405	                            je 0x40018c0	       487	sequencer.c	FUNCTION_19
0x187b	      0xe800000000	                          call 0x40018c0	       487	sequencer.c	FUNCTION_19
0x1880	        0x488b5df8	                mov rbx, qword [rbp - 8]	       487	sequencer.c	FUNCTION_19
0x1884	              0xc9	                                   leave	       487	sequencer.c	FUNCTION_19
0x1885	              0xc3	                                     ret	       487	sequencer.c	FUNCTION_19
rollback_lock_file	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	10
0x4ac	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_127
0x4ad	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_127
0x4b0	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_127
0x4b4	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_127
0x4b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_127	CALL_1
0x4bc	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_127	CALL_1
0x4bf	      0xe800000000	                          call 0x4000504	       304	lockfile.h	FUNCTION_127	CALL_1
0x4c4	              0x90	                                     nop	       305	lockfile.h	FUNCTION_127
0x4c5	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_127
0x4c6	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_127
record_in_rewritten	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,7	34
0x4426	              0x55	                                push rbp	      1482	sequencer.c	FUNCTION_47
0x4427	          0x4889e5	                            mov rbp, rsp	      1482	sequencer.c	FUNCTION_47
0x442a	        0x4883ec20	                           sub rsp, 0x20	      1482	sequencer.c	FUNCTION_47
0x442e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1482	sequencer.c	FUNCTION_47
0x4432	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1482	sequencer.c	FUNCTION_47
0x4435	      0xe829c4ffff	  call sym.rebase_path_rewritten_pending	      1483	sequencer.c	FUNCTION_47	CALL_2
0x443a	      0xbe00000000	                              mov esi, 0	      1483	sequencer.c	FUNCTION_47	CALL_2
0x443f	          0x4889c7	                            mov rdi, rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x4442	      0xe800000000	                          call 0x4004487	      1483	sequencer.c	FUNCTION_47	CALL_2
0x4447	        0x488945f8	                mov qword [rbp - 8], rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x444b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1485	sequencer.c	FUNCTION_47	IF_1
0x4450	            0x7446	                            je 0x40044d8	      1485	sequencer.c	FUNCTION_47	IF_1
0x4452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4456	          0x4889c7	                            mov rdi, rax	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4459	      0xe800000000	                          call 0x400449e	      1488	sequencer.c	FUNCTION_47	CALL_4
0x445e	          0x4889c2	                            mov rdx, rax	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4461	        0x488b45f8	                mov rax, qword [rbp - 8]	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4465	      0xbe00000000	                              mov esi, 0	      1488	sequencer.c	FUNCTION_47	CALL_4
0x446a	          0x4889c7	                            mov rdi, rax	      1488	sequencer.c	FUNCTION_47	CALL_4
0x446d	      0xb800000000	                              mov eax, 0	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4472	      0xe800000000	                          call 0x40044b7	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4477	        0x488b45f8	                mov rax, qword [rbp - 8]	      1489	sequencer.c	FUNCTION_47	CALL_5
0x447b	          0x4889c7	                            mov rdi, rax	      1489	sequencer.c	FUNCTION_47	CALL_5
0x447e	      0xe800000000	                          call 0x40044c3	      1489	sequencer.c	FUNCTION_47	CALL_5
0x4483	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x4486	            0x89c7	                            mov edi, eax	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x4488	      0xe8c5f7ffff	                       call sym.is_fixup	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x448d	            0x85c0	                           test eax, eax	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x448f	            0x7508	                           jne 0x40044d9	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x4491	      0xe841feffff	        call sym.flush_rewritten_pending	      1492	sequencer.c	FUNCTION_47	CALL_7
0x4496	            0xeb01	                           jmp 0x40044d9	      1492	sequencer.c	FUNCTION_47	CALL_7
0x4498	              0x90	                                     nop	      1486	sequencer.c	FUNCTION_47	IF_1
0x4499	              0xc9	                                   leave	      1493	sequencer.c	FUNCTION_47
0x449a	              0xc3	                                     ret	      1493	sequencer.c	FUNCTION_47
st_mult	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,2	22
0xa5	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_142
0xa6	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_142
0xa9	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_142
0xad	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_142
0xb1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_142
0xb5	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0xba	            0x7430	                            je 0x400012c	       795	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0xbc	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0xc3	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0xc8	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0xcc	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0xd0	            0x731a	                           jae 0x400012c	       795	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0xd2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_142	IF_1	CALL_2
0xd6	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_142	IF_1	CALL_2
0xda	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_142	IF_1	CALL_2
0xdd	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_142	IF_1	CALL_2
0xe2	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_142	IF_1	CALL_2
0xe7	      0xe800000000	                          call 0x400012c	       796	git-compat-util.h	FUNCTION_142	IF_1	CALL_2
0xec	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_142
0xf0	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_142
0xf5	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_142
0xf6	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_142
sequencer_init_config	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	13
0xc5d	              0x55	                                push rbp	       187	sequencer.c	FUNCTION_2
0xc5e	          0x4889e5	                            mov rbp, rsp	       187	sequencer.c	FUNCTION_2
0xc61	        0x4883ec10	                           sub rsp, 0x10	       187	sequencer.c	FUNCTION_2
0xc65	        0x48897df8	                mov qword [rbp - 8], rdi	       187	sequencer.c	FUNCTION_2
0xc69	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	sequencer.c	FUNCTION_2
0xc6d	    0xc74038010000	               mov dword [rax + 0x38], 1	       188	sequencer.c	FUNCTION_2
0xc74	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	sequencer.c	FUNCTION_2	CALL_1
0xc78	          0x4889c6	                            mov rsi, rax	       189	sequencer.c	FUNCTION_2	CALL_1
0xc7b	      0xbf00000000	                              mov edi, 0	       189	sequencer.c	FUNCTION_2	CALL_1
0xc80	      0xe800000000	                          call 0x4000cc5	       189	sequencer.c	FUNCTION_2	CALL_1
0xc85	              0x90	                                     nop	       190	sequencer.c	FUNCTION_2
0xc86	              0xc9	                                   leave	       190	sequencer.c	FUNCTION_2
0xc87	              0xc3	                                     ret	       190	sequencer.c	FUNCTION_2
skip_prefix	FOR,0:SWITCH,0:functions,0:DO,1:ELSE,0:IF,1:WHILE,0:CALL,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_134
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_134
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_134
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_134
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_134
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_134	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_134	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_134	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_134	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_134	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_134	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_134	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_134	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_134	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_134	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_134	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_134
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_134
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_134
save_todo	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,8:WHILE,0:CALL,23	167
0x7079	              0x55	                                push rbp	      2326	sequencer.c	FUNCTION_72
0x707a	          0x4889e5	                            mov rbp, rsp	      2326	sequencer.c	FUNCTION_72
0x707d	              0x53	                                push rbx	      2326	sequencer.c	FUNCTION_72
0x707e	        0x4883ec58	                           sub rsp, 0x58	      2326	sequencer.c	FUNCTION_72
0x7082	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2326	sequencer.c	FUNCTION_72
0x7086	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2326	sequencer.c	FUNCTION_72
0x708a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2326	sequencer.c	FUNCTION_72
0x7093	        0x488945e8	             mov qword [rbp - 0x18], rax	      2326	sequencer.c	FUNCTION_72
0x7097	            0x31c0	                            xor eax, eax	      2326	sequencer.c	FUNCTION_72
0x7099	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2327	sequencer.c	FUNCTION_72
0x70a1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2328	sequencer.c	FUNCTION_72	CALL_1
0x70a5	          0x4889c7	                            mov rdi, rax	      2328	sequencer.c	FUNCTION_72	CALL_1
0x70a8	      0xe81e9cffff	                  call sym.get_todo_path	      2328	sequencer.c	FUNCTION_72	CALL_1
0x70ad	        0x488945d8	             mov qword [rbp - 0x28], rax	      2328	sequencer.c	FUNCTION_72	CALL_1
0x70b1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2329	sequencer.c	FUNCTION_72
0x70b5	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2329	sequencer.c	FUNCTION_72
0x70b8	          0x8945bc	             mov dword [rbp - 0x44], eax	      2329	sequencer.c	FUNCTION_72
0x70bb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x70bf	          0x4889c7	                            mov rdi, rax	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x70c2	      0xe8c19bffff	                    call sym.is_rebase_i	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x70c7	            0x85c0	                           test eax, eax	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x70c9	            0x7404	                            je 0x400710f	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x70cb	        0x8345bc01	               add dword [rbp - 0x44], 1	      2336	sequencer.c	FUNCTION_72	IF_1
0x70cf	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2338	sequencer.c	FUNCTION_72	CALL_3
0x70d3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2338	sequencer.c	FUNCTION_72	CALL_3
0x70d7	      0xba00000000	                              mov edx, 0	      2338	sequencer.c	FUNCTION_72	CALL_3
0x70dc	          0x4889ce	                            mov rsi, rcx	      2338	sequencer.c	FUNCTION_72	CALL_3
0x70df	          0x4889c7	                            mov rdi, rax	      2338	sequencer.c	FUNCTION_72	CALL_3
0x70e2	      0xe89893ffff	      call sym.hold_lock_file_for_update	      2338	sequencer.c	FUNCTION_72	CALL_3
0x70e7	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2338	sequencer.c	FUNCTION_72	CALL_3
0x70ea	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2339	sequencer.c	FUNCTION_72	IF_2
0x70ee	            0x792b	                           jns 0x400715b	      2339	sequencer.c	FUNCTION_72	IF_2
0x70f0	      0xbf00000000	                              mov edi, 0	      2340	sequencer.c	FUNCTION_72	CALL_5
0x70f5	      0xe86d92ffff	                               call sym.	      2340	sequencer.c	FUNCTION_72	CALL_5
0x70fa	          0x4889c2	                            mov rdx, rax	      2340	sequencer.c	FUNCTION_72	CALL_5
0x70fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2340	sequencer.c	FUNCTION_72	CALL_5
0x7101	          0x4889c6	                            mov rsi, rax	      2340	sequencer.c	FUNCTION_72	CALL_5
0x7104	          0x4889d7	                            mov rdi, rdx	      2340	sequencer.c	FUNCTION_72	CALL_5
0x7107	      0xb800000000	                              mov eax, 0	      2340	sequencer.c	FUNCTION_72	CALL_5
0x710c	      0xe800000000	                          call 0x4007151	      2340	sequencer.c	FUNCTION_72	CALL_5
0x7111	      0xe8ea8effff	                    call sym.const_error	      2340	sequencer.c	FUNCTION_72	CALL_5
0x7116	      0xe9b5010000	                           jmp 0x4007310	      2340	sequencer.c	FUNCTION_72	CALL_5
0x711b	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2341	sequencer.c	FUNCTION_72	CALL_6
0x711e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2341	sequencer.c	FUNCTION_72	CALL_6
0x7122	            0x89d6	                            mov esi, edx	      2341	sequencer.c	FUNCTION_72	CALL_6
0x7124	          0x4889c7	                            mov rdi, rax	      2341	sequencer.c	FUNCTION_72	CALL_6
0x7127	      0xe8bee9ffff	           call sym.get_item_line_offset	      2341	sequencer.c	FUNCTION_72	CALL_6
0x712c	          0x8945c8	             mov dword [rbp - 0x38], eax	      2341	sequencer.c	FUNCTION_72	CALL_6
0x712f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2343	sequencer.c	FUNCTION_72	IF_3
0x7133	        0x488b5008	                mov rdx, qword [rax + 8]	      2343	sequencer.c	FUNCTION_72	IF_3
0x7137	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x713a	            0x4898	                                    cdqe	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x713c	          0x4829c2	                            sub rdx, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x713f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x7143	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x7147	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x714a	            0x4898	                                    cdqe	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x714c	          0x4801c1	                            add rcx, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x714f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x7152	          0x4889ce	                            mov rsi, rcx	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x7155	            0x89c7	                            mov edi, eax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x7157	      0xe800000000	                          call 0x400719c	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x715c	          0x4885c0	                           test rax, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x715f	            0x792b	                           jns 0x40071cc	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_7
0x7161	      0xbf00000000	                              mov edi, 0	      2344	sequencer.c	FUNCTION_72	CALL_9
0x7166	      0xe8fc91ffff	                               call sym.	      2344	sequencer.c	FUNCTION_72	CALL_9
0x716b	          0x4889c2	                            mov rdx, rax	      2344	sequencer.c	FUNCTION_72	CALL_9
0x716e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2344	sequencer.c	FUNCTION_72	CALL_9
0x7172	          0x4889c6	                            mov rsi, rax	      2344	sequencer.c	FUNCTION_72	CALL_9
0x7175	          0x4889d7	                            mov rdi, rdx	      2344	sequencer.c	FUNCTION_72	CALL_9
0x7178	      0xb800000000	                              mov eax, 0	      2344	sequencer.c	FUNCTION_72	CALL_9
0x717d	      0xe800000000	                          call 0x40071c2	      2344	sequencer.c	FUNCTION_72	CALL_9
0x7182	      0xe8798effff	                    call sym.const_error	      2344	sequencer.c	FUNCTION_72	CALL_9
0x7187	      0xe944010000	                           jmp 0x4007310	      2344	sequencer.c	FUNCTION_72	CALL_9
0x718c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_10
0x7190	          0x4889c7	                            mov rdi, rax	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_10
0x7193	      0xe800000000	                          call 0x40071d8	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_10
0x7198	            0x85c0	                           test eax, eax	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_10
0x719a	            0x792b	                           jns 0x4007207	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_10
0x719c	      0xbf00000000	                              mov edi, 0	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71a1	      0xe8c191ffff	                               call sym.	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71a6	          0x4889c2	                            mov rdx, rax	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71ad	          0x4889c6	                            mov rsi, rax	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71b0	          0x4889d7	                            mov rdi, rdx	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71b3	      0xb800000000	                              mov eax, 0	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71b8	      0xe800000000	                          call 0x40071fd	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71bd	      0xe83e8effff	                    call sym.const_error	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71c2	      0xe909010000	                           jmp 0x4007310	      2346	sequencer.c	FUNCTION_72	CALL_12
0x71c7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_13
0x71cb	          0x4889c7	                            mov rdi, rax	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_13
0x71ce	      0xe8b59affff	                    call sym.is_rebase_i	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_13
0x71d3	            0x85c0	                           test eax, eax	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_13
0x71d5	     0xf84f0000000	                            je 0x400730b	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_13
0x71db	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_13
0x71df	     0xf8ee6000000	                           jle 0x400730b	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_13
0x71e5	      0xe87494ffff	               call sym.rebase_path_done	      2349	sequencer.c	FUNCTION_72	IF_5	CALL_14
0x71ea	        0x488945e0	             mov qword [rbp - 0x20], rax	      2349	sequencer.c	FUNCTION_72	IF_5	CALL_14
0x71ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_15
0x71f2	      0xbab6010000	                          mov edx, 0x1b6	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_15
0x71f7	      0xbe41040000	                          mov esi, 0x441	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_15
0x71fc	          0x4889c7	                            mov rdi, rax	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_15
0x71ff	      0xb800000000	                              mov eax, 0	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_15
0x7204	      0xe800000000	                          call 0x4007249	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_15
0x7209	          0x8945cc	             mov dword [rbp - 0x34], eax	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_15
0x720c	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2351	sequencer.c	FUNCTION_72	IF_5
0x7213	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x7217	            0x790a	                           jns 0x4007263	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x7219	      0xb800000000	                              mov eax, 0	      2354	sequencer.c	FUNCTION_72	IF_5	IF_6
0x721e	      0xe9ad000000	                           jmp 0x4007310	      2354	sequencer.c	FUNCTION_72	IF_5	IF_6
0x7223	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_18
0x7226	          0x8d50ff	                      lea edx, [rax - 1]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_18
0x7229	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_18
0x722d	            0x89d6	                            mov esi, edx	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_18
0x722f	          0x4889c7	                            mov rdi, rax	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_18
0x7232	      0xe82de9ffff	           call sym.get_item_line_length	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_18
0x7237	          0x4863d8	                         movsxd rbx, eax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x723a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x723d	          0x8d50ff	                      lea edx, [rax - 1]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7240	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7244	            0x89d6	                            mov esi, edx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7246	          0x4889c7	                            mov rdi, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7249	      0xe8e1e8ffff	                  call sym.get_item_line	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x724e	          0x4889c1	                            mov rcx, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7251	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7254	          0x4889da	                            mov rdx, rbx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7257	          0x4889ce	                            mov rsi, rcx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x725a	            0x89c7	                            mov edi, eax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x725c	      0xe800000000	                          call 0x40072a1	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7261	          0x4885c0	                           test rax, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7264	            0x7929	                           jns 0x40072cf	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_17
0x7266	      0xbf00000000	                              mov edi, 0	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x726b	      0xe8f790ffff	                               call sym.	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x7270	          0x4889c2	                            mov rdx, rax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x7273	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x7277	          0x4889c6	                            mov rsi, rax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x727a	          0x4889d7	                            mov rdi, rdx	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x727d	      0xb800000000	                              mov eax, 0	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x7282	      0xe800000000	                          call 0x40072c7	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x7287	      0xe8748dffff	                    call sym.const_error	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x728c	          0x8945c0	             mov dword [rbp - 0x40], eax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_20
0x728f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_21
0x7292	            0x89c7	                            mov edi, eax	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_21
0x7294	      0xe800000000	                          call 0x40072d9	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_21
0x7299	            0x85c0	                           test eax, eax	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_21
0x729b	            0x7929	                           jns 0x4007306	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_21
0x729d	      0xbf00000000	                              mov edi, 0	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72a2	      0xe8c090ffff	                               call sym.	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72a7	          0x4889c2	                            mov rdx, rax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72ae	          0x4889c6	                            mov rsi, rax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72b1	          0x4889d7	                            mov rdi, rdx	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72b4	      0xb800000000	                              mov eax, 0	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72b9	      0xe800000000	                          call 0x40072fe	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72be	      0xe83d8dffff	                    call sym.const_error	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72c3	          0x8945c0	             mov dword [rbp - 0x40], eax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_23
0x72c6	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2361	sequencer.c	FUNCTION_72	IF_5
0x72c9	            0xeb05	                           jmp 0x4007310	      2361	sequencer.c	FUNCTION_72	IF_5
0x72cb	      0xb800000000	                              mov eax, 0	      2363	sequencer.c	FUNCTION_72
0x72d0	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2364	sequencer.c	FUNCTION_72
0x72d4	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2364	sequencer.c	FUNCTION_72
0x72dd	            0x7405	                            je 0x4007324	      2364	sequencer.c	FUNCTION_72
0x72df	      0xe800000000	                          call 0x4007324	      2364	sequencer.c	FUNCTION_72
0x72e4	        0x4883c458	                           add rsp, 0x58	      2364	sequencer.c	FUNCTION_72
0x72e8	              0x5b	                                 pop rbx	      2364	sequencer.c	FUNCTION_72
0x72e9	              0x5d	                                 pop rbp	      2364	sequencer.c	FUNCTION_72
0x72ea	              0xc3	                                     ret	      2364	sequencer.c	FUNCTION_72
do_reset	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,8:WHILE,0:CALL,38	219
0x81b9	              0x55	                                push rbp	      2625	sequencer.c	FUNCTION_81
0x81ba	          0x4889e5	                            mov rbp, rsp	      2625	sequencer.c	FUNCTION_81
0x81bd	              0x53	                                push rbx	      2625	sequencer.c	FUNCTION_81
0x81be	    0x4881ecc80300	                          sub rsp, 0x3c8	      2625	sequencer.c	FUNCTION_81
0x81c5	    0x4889bd48fcff	            mov qword [rbp - 0x3b8], rdi	      2625	sequencer.c	FUNCTION_81
0x81cc	    0x89b544fcffff	            mov dword [rbp - 0x3bc], esi	      2625	sequencer.c	FUNCTION_81
0x81d2	    0x48899538fcff	            mov qword [rbp - 0x3c8], rdx	      2625	sequencer.c	FUNCTION_81
0x81d9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2625	sequencer.c	FUNCTION_81
0x81e2	        0x488945e8	             mov qword [rbp - 0x18], rax	      2625	sequencer.c	FUNCTION_81
0x81e6	            0x31c0	                            xor eax, eax	      2625	sequencer.c	FUNCTION_81
0x81e8	    0x48c78570fcff	              mov qword [rbp - 0x390], 0	      2626	sequencer.c	FUNCTION_81
0x81f3	    0x48c78578fcff	              mov qword [rbp - 0x388], 0	      2626	sequencer.c	FUNCTION_81
0x81fe	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	      2626	sequencer.c	FUNCTION_81
0x8209	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	      2628	sequencer.c	FUNCTION_81
0x8214	    0xc78558fcffff	              mov dword [rbp - 0x3a8], 0	      2632	sequencer.c	FUNCTION_81
0x821e	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x8225	      0xbe04000000	                              mov esi, 4	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x822a	          0x4889c7	                            mov rdi, rax	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x822d	      0xe800000000	                          call 0x4008272	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x8232	            0x85c0	                           test eax, eax	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x8234	            0x790a	                           jns 0x4008280	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x8236	      0xb8ffffffff	                     mov eax, 0xffffffff	      2635	sequencer.c	FUNCTION_81	IF_1
0x823b	      0xe997030000	                           jmp 0x4008617	      2635	sequencer.c	FUNCTION_81	IF_1
0x8240	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 0	      2638	sequencer.c	FUNCTION_81	FOR_1
0x824a	            0xeb3f	                           jmp 0x40082cb	      2638	sequencer.c	FUNCTION_81	FOR_1
0x824c	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8252	          0x4863d0	                         movsxd rdx, eax	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8255	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x825c	          0x4801d0	                            add rax, rdx	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x825f	           0xfb600	                   movzx eax, byte [rax]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8262	           0xfb6c0	                           movzx eax, al	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8265	            0x4898	                                    cdqe	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8267	     0xfb680000000	                   movzx eax, byte [rax]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x826e	           0xfb6c0	                           movzx eax, al	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8271	          0x83e001	                              and eax, 1	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8274	            0x85c0	                           test eax, eax	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8276	            0x740c	                            je 0x40082c4	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x8278	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      2640	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x827e	    0x898544fcffff	            mov dword [rbp - 0x3bc], eax	      2640	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x8284	    0x83855cfcffff	              add dword [rbp - 0x3a4], 1	      2638	sequencer.c	FUNCTION_81	FOR_1
0x828b	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      2638	sequencer.c	FUNCTION_81	FOR_1
0x8291	    0x3b8544fcffff	            cmp eax, dword [rbp - 0x3bc]	      2638	sequencer.c	FUNCTION_81	FOR_1
0x8297	            0x7cb3	                            jl 0x400828c	      2638	sequencer.c	FUNCTION_81	FOR_1
0x8299	    0x488b8d48fcff	            mov rcx, qword [rbp - 0x3b8]	      2642	sequencer.c	FUNCTION_81	CALL_3
0x82a0	    0x8b9544fcffff	            mov edx, dword [rbp - 0x3bc]	      2642	sequencer.c	FUNCTION_81	CALL_3
0x82a6	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2642	sequencer.c	FUNCTION_81	CALL_3
0x82ad	      0xbe00000000	                              mov esi, 0	      2642	sequencer.c	FUNCTION_81	CALL_3
0x82b2	          0x4889c7	                            mov rdi, rax	      2642	sequencer.c	FUNCTION_81	CALL_3
0x82b5	      0xb800000000	                              mov eax, 0	      2642	sequencer.c	FUNCTION_81	CALL_3
0x82ba	      0xe800000000	                          call 0x40082ff	      2642	sequencer.c	FUNCTION_81	CALL_3
0x82bf	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82c6	    0x488d95c0fcff	                  lea rdx, [rbp - 0x340]	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82cd	          0x4889d6	                            mov rsi, rdx	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82d0	          0x4889c7	                            mov rdi, rax	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82d3	      0xe800000000	                          call 0x4008318	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82d8	            0x85c0	                           test eax, eax	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82da	            0x746f	                            je 0x400838b	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82dc	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x82e3	        0x488d500f	                    lea rdx, [rax + 0xf]	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x82e7	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x82ee	          0x4889c6	                            mov rsi, rax	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x82f1	          0x4889d7	                            mov rdi, rdx	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x82f4	      0xe800000000	                          call 0x4008339	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x82f9	            0x85c0	                           test eax, eax	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82fb	            0x744e	                            je 0x400838b	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_4
0x82fd	    0x488b9d80fcff	            mov rbx, qword [rbp - 0x380]	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x8304	      0xbf00000000	                              mov edi, 0	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x8309	      0xe85980ffff	                               call sym.	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x830e	          0x4889de	                            mov rsi, rbx	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x8311	          0x4889c7	                            mov rdi, rax	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x8314	      0xb800000000	                              mov eax, 0	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x8319	      0xe800000000	                          call 0x400835e	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x831e	      0xe8dd7cffff	                    call sym.const_error	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x8323	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2646	sequencer.c	FUNCTION_81	IF_3	CALL_9
0x832a	          0x4889c7	                            mov rdi, rax	      2646	sequencer.c	FUNCTION_81	IF_3	CALL_9
0x832d	      0xe87a81ffff	             call sym.rollback_lock_file	      2646	sequencer.c	FUNCTION_81	IF_3	CALL_9
0x8332	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2647	sequencer.c	FUNCTION_81	IF_3	CALL_10
0x8339	          0x4889c7	                            mov rdi, rax	      2647	sequencer.c	FUNCTION_81	IF_3	CALL_10
0x833c	      0xe800000000	                          call 0x4008381	      2647	sequencer.c	FUNCTION_81	IF_3	CALL_10
0x8341	      0xb8ffffffff	                     mov eax, 0xffffffff	      2648	sequencer.c	FUNCTION_81	IF_3
0x8346	      0xe98c020000	                           jmp 0x4008617	      2648	sequencer.c	FUNCTION_81	IF_3
0x834b	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	      2651	sequencer.c	FUNCTION_81	CALL_11
0x8352	      0xba00030000	                          mov edx, 0x300	      2651	sequencer.c	FUNCTION_81	CALL_11
0x8357	      0xbe00000000	                              mov esi, 0	      2651	sequencer.c	FUNCTION_81	CALL_11
0x835c	          0x4889c7	                            mov rdi, rax	      2651	sequencer.c	FUNCTION_81	CALL_11
0x835f	      0xe800000000	                          call 0x40083a4	      2651	sequencer.c	FUNCTION_81	CALL_11
0x8364	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	      2652	sequencer.c	FUNCTION_81	CALL_12
0x836b	      0xbe00000000	                              mov esi, 0	      2652	sequencer.c	FUNCTION_81	CALL_12
0x8370	          0x4889c7	                            mov rdi, rax	      2652	sequencer.c	FUNCTION_81	CALL_12
0x8373	      0xe800000000	                          call 0x40083b8	      2652	sequencer.c	FUNCTION_81	CALL_12
0x8378	    0xc785e0feffff	              mov dword [rbp - 0x120], 1	      2653	sequencer.c	FUNCTION_81
0x8382	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2654	sequencer.c	FUNCTION_81
0x838d	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	      2655	sequencer.c	FUNCTION_81
0x8398	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	      2656	sequencer.c	FUNCTION_81
0x83a3	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	      2657	sequencer.c	FUNCTION_81
0x83ad	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	      2658	sequencer.c	FUNCTION_81
0x83b7	      0xbf00000000	                              mov edi, 0	      2660	sequencer.c	FUNCTION_81	IF_4	CALL_13
0x83bc	      0xe800000000	                          call 0x4008401	      2660	sequencer.c	FUNCTION_81	IF_4	CALL_13
0x83c1	            0x85c0	                           test eax, eax	      2660	sequencer.c	FUNCTION_81	IF_4	CALL_13
0x83c3	            0x7442	                            je 0x4008447	      2660	sequencer.c	FUNCTION_81	IF_4	CALL_13
0x83c5	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2661	sequencer.c	FUNCTION_81	IF_4	CALL_14
0x83cc	          0x4889c7	                            mov rdi, rax	      2661	sequencer.c	FUNCTION_81	IF_4	CALL_14
0x83cf	      0xe8d880ffff	             call sym.rollback_lock_file	      2661	sequencer.c	FUNCTION_81	IF_4	CALL_14
0x83d4	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2662	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x83db	          0x4889c7	                            mov rdi, rax	      2662	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x83de	      0xe800000000	                          call 0x4008423	      2662	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x83e3	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x83ea	          0x4889c7	                            mov rdi, rax	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x83ed	      0xe84d8cffff	                    call sym.action_name	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x83f2	          0x4889c7	                            mov rdi, rax	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x83f5	      0xe86d7fffff	                               call sym.	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x83fa	          0x4889c7	                            mov rdi, rax	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x83fd	      0xe800000000	                          call 0x4008442	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x8402	      0xe9d0010000	                           jmp 0x4008617	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_18
0x8407	    0x488d95c0fcff	                  lea rdx, [rbp - 0x340]	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x840e	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x8415	          0x4889d6	                            mov rsi, rdx	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x8418	          0x4889c7	                            mov rdi, rax	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x841b	      0xe800000000	                          call 0x4008460	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x8420	          0x4885c0	                           test rax, rax	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x8423	            0x7568	                           jne 0x40084cd	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x8425	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x842c	          0x4889c7	                            mov rdi, rax	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x842f	      0xe800000000	                          call 0x4008474	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x8434	          0x4889c3	                            mov rbx, rax	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x8437	      0xbf00000000	                              mov edi, 0	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x843c	      0xe8267fffff	                               call sym.	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x8441	          0x4889de	                            mov rsi, rbx	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x8444	          0x4889c7	                            mov rdi, rax	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x8447	      0xb800000000	                              mov eax, 0	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x844c	      0xe800000000	                          call 0x4008491	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x8451	      0xe8aa7bffff	                    call sym.const_error	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_22
0x8456	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2668	sequencer.c	FUNCTION_81	IF_5	CALL_23
0x845d	          0x4889c7	                            mov rdi, rax	      2668	sequencer.c	FUNCTION_81	IF_5	CALL_23
0x8460	      0xe84780ffff	             call sym.rollback_lock_file	      2668	sequencer.c	FUNCTION_81	IF_5	CALL_23
0x8465	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	      2669	sequencer.c	FUNCTION_81	IF_5	CALL_24
0x846c	          0x4889c7	                            mov rdi, rax	      2669	sequencer.c	FUNCTION_81	IF_5	CALL_24
0x846f	      0xe800000000	                          call 0x40084b4	      2669	sequencer.c	FUNCTION_81	IF_5	CALL_24
0x8474	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2670	sequencer.c	FUNCTION_81	IF_5	CALL_25
0x847b	          0x4889c7	                            mov rdi, rax	      2670	sequencer.c	FUNCTION_81	IF_5	CALL_25
0x847e	      0xe800000000	                          call 0x40084c3	      2670	sequencer.c	FUNCTION_81	IF_5	CALL_25
0x8483	      0xb8ffffffff	                     mov eax, 0xffffffff	      2671	sequencer.c	FUNCTION_81	IF_5
0x8488	      0xe94a010000	                           jmp 0x4008617	      2671	sequencer.c	FUNCTION_81	IF_5
0x848d	    0x488d95e0fcff	                  lea rdx, [rbp - 0x320]	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_26
0x8494	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_26
0x849b	          0x4889c6	                            mov rsi, rax	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_26
0x849e	      0xbf01000000	                              mov edi, 1	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_26
0x84a3	      0xe800000000	                          call 0x40084e8	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_26
0x84a8	            0x85c0	                           test eax, eax	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_26
0x84aa	            0x7437	                            je 0x4008523	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_26
0x84ac	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2675	sequencer.c	FUNCTION_81	IF_6	CALL_27
0x84b3	          0x4889c7	                            mov rdi, rax	      2675	sequencer.c	FUNCTION_81	IF_6	CALL_27
0x84b6	      0xe8f17fffff	             call sym.rollback_lock_file	      2675	sequencer.c	FUNCTION_81	IF_6	CALL_27
0x84bb	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	      2676	sequencer.c	FUNCTION_81	IF_6	CALL_28
0x84c2	          0x4889c7	                            mov rdi, rax	      2676	sequencer.c	FUNCTION_81	IF_6	CALL_28
0x84c5	      0xe800000000	                          call 0x400850a	      2676	sequencer.c	FUNCTION_81	IF_6	CALL_28
0x84ca	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2677	sequencer.c	FUNCTION_81	IF_6	CALL_29
0x84d1	          0x4889c7	                            mov rdi, rax	      2677	sequencer.c	FUNCTION_81	IF_6	CALL_29
0x84d4	      0xe800000000	                          call 0x4008519	      2677	sequencer.c	FUNCTION_81	IF_6	CALL_29
0x84d9	      0xb8ffffffff	                     mov eax, 0xffffffff	      2678	sequencer.c	FUNCTION_81	IF_6
0x84de	      0xe9f4000000	                           jmp 0x4008617	      2678	sequencer.c	FUNCTION_81	IF_6
0x84e3	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2681	sequencer.c	FUNCTION_81	CALL_30
0x84ea	          0x4889c7	                            mov rdi, rax	      2681	sequencer.c	FUNCTION_81	CALL_30
0x84ed	      0xe800000000	                          call 0x4008532	      2681	sequencer.c	FUNCTION_81	CALL_30
0x84f2	    0x48898568fcff	            mov qword [rbp - 0x398], rax	      2681	sequencer.c	FUNCTION_81	CALL_30
0x84f9	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      2682	sequencer.c	FUNCTION_81	CALL_31
0x8500	          0x4889c6	                            mov rsi, rax	      2682	sequencer.c	FUNCTION_81	CALL_31
0x8503	      0xbf00000000	                              mov edi, 0	      2682	sequencer.c	FUNCTION_81	CALL_31
0x8508	      0xe800000000	                          call 0x400854d	      2682	sequencer.c	FUNCTION_81	CALL_31
0x850d	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_32
0x8514	      0xba01000000	                              mov edx, 1	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_32
0x8519	          0x4889c6	                            mov rsi, rax	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_32
0x851c	      0xbf00000000	                              mov edi, 0	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_32
0x8521	      0xe800000000	                          call 0x4008566	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_32
0x8526	            0x85c0	                           test eax, eax	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_32
0x8528	            0x7922	                           jns 0x400858c	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_32
0x852a	      0xbf00000000	                              mov edi, 0	      2685	sequencer.c	FUNCTION_81	CALL_34
0x852f	      0xe8337effff	                               call sym.	      2685	sequencer.c	FUNCTION_81	CALL_34
0x8534	          0x4889c7	                            mov rdi, rax	      2685	sequencer.c	FUNCTION_81	CALL_34
0x8537	      0xb800000000	                              mov eax, 0	      2685	sequencer.c	FUNCTION_81	CALL_34
0x853c	      0xe800000000	                          call 0x4008581	      2685	sequencer.c	FUNCTION_81	CALL_34
0x8541	      0xe8ba7affff	                    call sym.const_error	      2685	sequencer.c	FUNCTION_81	CALL_34
0x8546	    0x898558fcffff	            mov dword [rbp - 0x3a8], eax	      2685	sequencer.c	FUNCTION_81	CALL_34
0x854c	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	      2686	sequencer.c	FUNCTION_81	CALL_35
0x8553	          0x4889c7	                            mov rdi, rax	      2686	sequencer.c	FUNCTION_81	CALL_35
0x8556	      0xe800000000	                          call 0x400859b	      2686	sequencer.c	FUNCTION_81	CALL_35
0x855b	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 0	      2688	sequencer.c	FUNCTION_81	IF_8
0x8562	            0x755e	                           jne 0x4008602	      2688	sequencer.c	FUNCTION_81	IF_8
0x8564	    0x488b8d48fcff	            mov rcx, qword [rbp - 0x3b8]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x856b	    0x8b9544fcffff	            mov edx, dword [rbp - 0x3bc]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x8571	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x8578	          0x4989c8	                             mov r8, rcx	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x857b	            0x89d1	                            mov ecx, edx	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x857d	      0xba00000000	                              mov edx, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x8582	      0xbe00000000	                              mov esi, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x8587	          0x4889c7	                            mov rdi, rax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x858a	      0xb800000000	                              mov eax, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x858f	      0xe8ff0d0000	                 call sym.reflog_message	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x8594	          0x4889c7	                            mov rdi, rax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x8597	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x859e	    0x41b900000000	                              mov r9d, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x85a4	    0x41b800000000	                              mov r8d, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x85aa	      0xb900000000	                              mov ecx, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x85af	          0x4889c2	                            mov rdx, rax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x85b2	      0xbe00000000	                              mov esi, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x85b7	      0xe800000000	                          call 0x40085fc	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x85bc	    0x898558fcffff	            mov dword [rbp - 0x3a8], eax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_37
0x85c2	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2693	sequencer.c	FUNCTION_81	CALL_38
0x85c9	          0x4889c7	                            mov rdi, rax	      2693	sequencer.c	FUNCTION_81	CALL_38
0x85cc	      0xe800000000	                          call 0x4008611	      2693	sequencer.c	FUNCTION_81	CALL_38
0x85d1	    0x8b8558fcffff	            mov eax, dword [rbp - 0x3a8]	      2694	sequencer.c	FUNCTION_81
0x85d7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2695	sequencer.c	FUNCTION_81
0x85db	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2695	sequencer.c	FUNCTION_81
0x85e4	            0x7405	                            je 0x400862b	      2695	sequencer.c	FUNCTION_81
0x85e6	      0xe800000000	                          call 0x400862b	      2695	sequencer.c	FUNCTION_81
0x85eb	    0x4881c4c80300	                          add rsp, 0x3c8	      2695	sequencer.c	FUNCTION_81
0x85f2	              0x5b	                                 pop rbx	      2695	sequencer.c	FUNCTION_81
0x85f3	              0x5d	                                 pop rbp	      2695	sequencer.c	FUNCTION_81
0x85f4	              0xc3	                                     ret	      2695	sequencer.c	FUNCTION_81
safe_append	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,4:WHILE,0:CALL,20	135
0x7c77	              0x55	                                push rbp	      2545	sequencer.c	FUNCTION_79
0x7c78	          0x4889e5	                            mov rbp, rsp	      2545	sequencer.c	FUNCTION_79
0x7c7b	    0x4881ec200100	                          sub rsp, 0x120	      2545	sequencer.c	FUNCTION_79
0x7c82	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      2545	sequencer.c	FUNCTION_79
0x7c89	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	      2545	sequencer.c	FUNCTION_79
0x7c90	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      2545	sequencer.c	FUNCTION_79
0x7c97	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	      2545	sequencer.c	FUNCTION_79
0x7c9e	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	      2545	sequencer.c	FUNCTION_79
0x7ca5	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	      2545	sequencer.c	FUNCTION_79
0x7cac	            0x84c0	                             test al, al	      2545	sequencer.c	FUNCTION_79
0x7cae	            0x7420	                            je 0x4007d10	      2545	sequencer.c	FUNCTION_79
0x7cb0	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	      2545	sequencer.c	FUNCTION_79
0x7cb4	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	      2545	sequencer.c	FUNCTION_79
0x7cb8	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	      2545	sequencer.c	FUNCTION_79
0x7cbc	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	      2545	sequencer.c	FUNCTION_79
0x7cc0	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	      2545	sequencer.c	FUNCTION_79
0x7cc4	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	      2545	sequencer.c	FUNCTION_79
0x7cc8	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	      2545	sequencer.c	FUNCTION_79
0x7ccc	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	      2545	sequencer.c	FUNCTION_79
0x7cd0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2545	sequencer.c	FUNCTION_79
0x7cd9	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2545	sequencer.c	FUNCTION_79
0x7ce0	            0x31c0	                            xor eax, eax	      2545	sequencer.c	FUNCTION_79
0x7ce2	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2547	sequencer.c	FUNCTION_79
0x7ced	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      2548	sequencer.c	FUNCTION_79	CALL_1
0x7cf4	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2548	sequencer.c	FUNCTION_79	CALL_1
0x7cfb	      0xba04000000	                              mov edx, 4	      2548	sequencer.c	FUNCTION_79	CALL_1
0x7d00	          0x4889ce	                            mov rsi, rcx	      2548	sequencer.c	FUNCTION_79	CALL_1
0x7d03	          0x4889c7	                            mov rdi, rax	      2548	sequencer.c	FUNCTION_79	CALL_1
0x7d06	      0xe87487ffff	      call sym.hold_lock_file_for_update	      2548	sequencer.c	FUNCTION_79	CALL_1
0x7d0b	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2548	sequencer.c	FUNCTION_79	CALL_1
0x7d11	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2550	sequencer.c	FUNCTION_79
0x7d1c	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      2550	sequencer.c	FUNCTION_79
0x7d27	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      2550	sequencer.c	FUNCTION_79
0x7d32	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      2552	sequencer.c	FUNCTION_79	IF_1
0x7d39	            0x790a	                           jns 0x4007d85	      2552	sequencer.c	FUNCTION_79	IF_1
0x7d3b	      0xb8ffffffff	                     mov eax, 0xffffffff	      2553	sequencer.c	FUNCTION_79	IF_1
0x7d40	      0xe9b3010000	                           jmp 0x4007f38	      2553	sequencer.c	FUNCTION_79	IF_1
0x7d45	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d4c	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d53	      0xba00000000	                              mov edx, 0	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d58	          0x4889ce	                            mov rsi, rcx	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d5b	          0x4889c7	                            mov rdi, rax	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d5e	      0xe800000000	                          call 0x4007da3	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d63	          0x4885c0	                           test rax, rax	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d66	            0x794e	                           jns 0x4007df6	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d68	      0xe800000000	                          call 0x4007dad	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d6d	            0x8b00	                    mov eax, dword [rax]	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d6f	          0x83f802	                              cmp eax, 2	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d72	            0x7442	                            je 0x4007df6	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x7d74	      0xbf00000000	                              mov edi, 0	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d79	      0xe8e985ffff	                               call sym.	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d7e	          0x4889c2	                            mov rdx, rax	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d81	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d88	          0x4889c6	                            mov rsi, rax	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d8b	          0x4889d7	                            mov rdi, rdx	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d8e	      0xb800000000	                              mov eax, 0	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d93	      0xe800000000	                          call 0x4007dd8	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d98	      0xe86382ffff	                    call sym.const_error	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x7d9d	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2557	sequencer.c	FUNCTION_79	IF_2	CALL_5
0x7da4	          0x4889c7	                            mov rdi, rax	      2557	sequencer.c	FUNCTION_79	IF_2	CALL_5
0x7da7	      0xe80087ffff	             call sym.rollback_lock_file	      2557	sequencer.c	FUNCTION_79	IF_2	CALL_5
0x7dac	      0xb8ffffffff	                     mov eax, 0xffffffff	      2558	sequencer.c	FUNCTION_79	IF_2
0x7db1	      0xe942010000	                           jmp 0x4007f38	      2558	sequencer.c	FUNCTION_79	IF_2
0x7db6	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2560	sequencer.c	FUNCTION_79	CALL_6
0x7dbd	      0xbe0a000000	                            mov esi, 0xa	      2560	sequencer.c	FUNCTION_79	CALL_6
0x7dc2	          0x4889c7	                            mov rdi, rax	      2560	sequencer.c	FUNCTION_79	CALL_6
0x7dc5	      0xe8a084ffff	                call sym.strbuf_complete	      2560	sequencer.c	FUNCTION_79	CALL_6
0x7dca	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	      2561	sequencer.c	FUNCTION_79	CALL_7
0x7dd4	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	      2561	sequencer.c	FUNCTION_79	CALL_7
0x7dde	        0x488d4510	                   lea rax, [rbp + 0x10]	      2561	sequencer.c	FUNCTION_79	CALL_7
0x7de2	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2561	sequencer.c	FUNCTION_79	CALL_7
0x7de9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2561	sequencer.c	FUNCTION_79	CALL_7
0x7df0	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2561	sequencer.c	FUNCTION_79	CALL_7
0x7df7	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2562	sequencer.c	FUNCTION_79	CALL_8
0x7dfe	    0x488b8de0feff	            mov rcx, qword [rbp - 0x120]	      2562	sequencer.c	FUNCTION_79	CALL_8
0x7e05	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2562	sequencer.c	FUNCTION_79	CALL_8
0x7e0c	          0x4889ce	                            mov rsi, rcx	      2562	sequencer.c	FUNCTION_79	CALL_8
0x7e0f	          0x4889c7	                            mov rdi, rax	      2562	sequencer.c	FUNCTION_79	CALL_8
0x7e12	      0xe800000000	                          call 0x4007e57	      2562	sequencer.c	FUNCTION_79	CALL_8
0x7e17	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e1e	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e25	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e2b	          0x4889ce	                            mov rsi, rcx	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e2e	            0x89c7	                            mov edi, eax	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e30	      0xe800000000	                          call 0x4007e75	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e35	          0x4885c0	                           test rax, rax	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e38	            0x794e	                           jns 0x4007ec8	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x7e3a	      0xbf00000000	                              mov edi, 0	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e3f	      0xe82385ffff	                               call sym.	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e44	          0x4889c2	                            mov rdx, rax	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e47	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e4e	          0x4889c6	                            mov rsi, rax	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e51	          0x4889d7	                            mov rdi, rdx	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e54	      0xb800000000	                              mov eax, 0	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e59	      0xe800000000	                          call 0x4007e9e	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e5e	      0xe89d81ffff	                    call sym.const_error	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x7e63	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_13
0x7e6a	          0x4889c7	                            mov rdi, rax	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_13
0x7e6d	      0xe800000000	                          call 0x4007eb2	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_13
0x7e72	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2568	sequencer.c	FUNCTION_79	IF_3	CALL_14
0x7e79	          0x4889c7	                            mov rdi, rax	      2568	sequencer.c	FUNCTION_79	IF_3	CALL_14
0x7e7c	      0xe82b86ffff	             call sym.rollback_lock_file	      2568	sequencer.c	FUNCTION_79	IF_3	CALL_14
0x7e81	      0xb8ffffffff	                     mov eax, 0xffffffff	      2569	sequencer.c	FUNCTION_79	IF_3
0x7e86	            0xeb70	                           jmp 0x4007f38	      2569	sequencer.c	FUNCTION_79	IF_3
0x7e88	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x7e8f	          0x4889c7	                            mov rdi, rax	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x7e92	      0xe800000000	                          call 0x4007ed7	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x7e97	            0x85c0	                           test eax, eax	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x7e99	            0x7949	                           jns 0x4007f24	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x7e9b	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x7ea2	          0x4889c7	                            mov rdi, rax	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x7ea5	      0xe800000000	                          call 0x4007eea	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x7eaa	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2573	sequencer.c	FUNCTION_79	IF_4	CALL_17
0x7eb1	          0x4889c7	                            mov rdi, rax	      2573	sequencer.c	FUNCTION_79	IF_4	CALL_17
0x7eb4	      0xe8f385ffff	             call sym.rollback_lock_file	      2573	sequencer.c	FUNCTION_79	IF_4	CALL_17
0x7eb9	      0xbf00000000	                              mov edi, 0	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ebe	      0xe8a484ffff	                               call sym.	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ec3	          0x4889c2	                            mov rdx, rax	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ec6	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ecd	          0x4889c6	                            mov rsi, rax	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ed0	          0x4889d7	                            mov rdi, rdx	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ed3	      0xb800000000	                              mov eax, 0	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ed8	      0xe800000000	                          call 0x4007f1d	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7edd	      0xe81e81ffff	                    call sym.const_error	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ee2	            0xeb14	                           jmp 0x4007f38	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_19
0x7ee4	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2577	sequencer.c	FUNCTION_79	CALL_20
0x7eeb	          0x4889c7	                            mov rdi, rax	      2577	sequencer.c	FUNCTION_79	CALL_20
0x7eee	      0xe800000000	                          call 0x4007f33	      2577	sequencer.c	FUNCTION_79	CALL_20
0x7ef3	      0xb800000000	                              mov eax, 0	      2578	sequencer.c	FUNCTION_79
0x7ef8	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2579	sequencer.c	FUNCTION_79
0x7eff	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2579	sequencer.c	FUNCTION_79
0x7f08	            0x7405	                            je 0x4007f4f	      2579	sequencer.c	FUNCTION_79
0x7f0a	      0xe800000000	                          call 0x4007f4f	      2579	sequencer.c	FUNCTION_79
0x7f0f	              0xc9	                                   leave	      2579	sequencer.c	FUNCTION_79
0x7f10	              0xc3	                                     ret	      2579	sequencer.c	FUNCTION_79
flush_rewritten_pending	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,1:CALL,12	86
0x42d7	              0x55	                                push rbp	      1457	sequencer.c	FUNCTION_46
0x42d8	          0x4889e5	                            mov rbp, rsp	      1457	sequencer.c	FUNCTION_46
0x42db	        0x4883ec60	                           sub rsp, 0x60	      1457	sequencer.c	FUNCTION_46
0x42df	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	sequencer.c	FUNCTION_46
0x42e8	        0x488945f8	                mov qword [rbp - 8], rax	      1457	sequencer.c	FUNCTION_46
0x42ec	            0x31c0	                            xor eax, eax	      1457	sequencer.c	FUNCTION_46
0x42ee	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1458	sequencer.c	FUNCTION_46
0x42f6	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1458	sequencer.c	FUNCTION_46
0x42fe	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1458	sequencer.c	FUNCTION_46
0x4306	      0xe858c5ffff	  call sym.rebase_path_rewritten_pending	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x430b	          0x4889c1	                            mov rcx, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x430e	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4312	      0xba52000000	                           mov edx, 0x52	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4317	          0x4889ce	                            mov rsi, rcx	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x431a	          0x4889c7	                            mov rdi, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x431d	      0xe800000000	                          call 0x4004362	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4322	          0x4885c0	                           test rax, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4325	     0xf8ed8000000	                           jle 0x4004443	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x432b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x432f	          0x4889c6	                            mov rsi, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4332	      0xbf00000000	                              mov edi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4337	      0xe800000000	                          call 0x400437c	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x433c	            0x85c0	                           test eax, eax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x433e	     0xf85bf000000	                           jne 0x4004443	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4344	      0xe8ebc4ffff	     call sym.rebase_path_rewritten_list	      1464	sequencer.c	FUNCTION_46	IF_1	CALL_5
0x4349	      0xbe00000000	                              mov esi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x434e	          0x4889c7	                            mov rdi, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4351	      0xe800000000	                          call 0x4004396	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4356	        0x488945b0	             mov qword [rbp - 0x50], rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x435a	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x435f	     0xf849e000000	                            je 0x4004443	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4365	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1465	sequencer.c	FUNCTION_46	IF_1
0x4369	        0x488945a8	             mov qword [rbp - 0x58], rax	      1465	sequencer.c	FUNCTION_46	IF_1
0x436d	            0xeb6d	                           jmp 0x400441c	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x436f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x4373	      0xbe0a000000	                            mov esi, 0xa	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x4378	          0x4889c7	                            mov rdi, rax	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x437b	      0xe800000000	                          call 0x40043c0	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x4380	        0x488945b8	             mov qword [rbp - 0x48], rax	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x4384	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x4388	          0x4889c7	                            mov rdi, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x438b	      0xe800000000	                          call 0x40043d0	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x4390	          0x4889c1	                            mov rcx, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x4393	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x4397	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x439b	          0x4829c2	                            sub rdx, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x439e	          0x4889d0	                            mov rax, rdx	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43a1	            0x89c6	                            mov esi, eax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43a3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43a7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43ab	          0x4989c8	                             mov r8, rcx	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43ae	          0x4889d1	                            mov rcx, rdx	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43b1	            0x89f2	                            mov edx, esi	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43b3	      0xbe00000000	                              mov esi, 0	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43b8	          0x4889c7	                            mov rdi, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43bb	      0xb800000000	                              mov eax, 0	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43c0	      0xe800000000	                          call 0x4004405	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_7
0x43c5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x43c9	           0xfb600	                   movzx eax, byte [rax]	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x43cc	            0x84c0	                             test al, al	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x43ce	            0x7419	                            je 0x4004429	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x43d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43d4	        0x4883c001	                              add rax, 1	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43d8	        0x488945a8	             mov qword [rbp - 0x58], rax	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43dc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43e0	           0xfb600	                   movzx eax, byte [rax]	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43e3	            0x84c0	                             test al, al	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43e5	            0x7588	                           jne 0x40043af	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43e7	            0xeb01	                           jmp 0x400442a	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x43e9	              0x90	                                     nop	      1472	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x43ea	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x43ee	          0x4889c7	                            mov rdi, rax	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x43f1	      0xe800000000	                          call 0x4004436	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x43f6	      0xe868c4ffff	  call sym.rebase_path_rewritten_pending	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_11
0x43fb	          0x4889c7	                            mov rdi, rax	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_11
0x43fe	      0xe800000000	                          call 0x4004443	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_11
0x4403	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1478	sequencer.c	FUNCTION_46	CALL_12
0x4407	          0x4889c7	                            mov rdi, rax	      1478	sequencer.c	FUNCTION_46	CALL_12
0x440a	      0xe800000000	                          call 0x400444f	      1478	sequencer.c	FUNCTION_46	CALL_12
0x440f	              0x90	                                     nop	      1479	sequencer.c	FUNCTION_46
0x4410	        0x488b45f8	                mov rax, qword [rbp - 8]	      1479	sequencer.c	FUNCTION_46
0x4414	    0x644833042528	                xor rax, qword fs:[0x28]	      1479	sequencer.c	FUNCTION_46
0x441d	            0x7405	                            je 0x4004464	      1479	sequencer.c	FUNCTION_46
0x441f	      0xe800000000	                          call 0x4004464	      1479	sequencer.c	FUNCTION_46
0x4424	              0xc9	                                   leave	      1479	sequencer.c	FUNCTION_46
0x4425	              0xc3	                                     ret	      1479	sequencer.c	FUNCTION_46
label_oid	FOR,2:SWITCH,0:functions,0:DO,0:ELSE,1:IF,6:WHILE,0:CALL,27	255
0xb500	              0x55	                                push rbp	      3589	sequencer.c	FUNCTION_95
0xb501	          0x4889e5	                            mov rbp, rsp	      3589	sequencer.c	FUNCTION_95
0xb504	              0x53	                                push rbx	      3589	sequencer.c	FUNCTION_95
0xb505	    0x4881ec980000	                           sub rsp, 0x98	      3589	sequencer.c	FUNCTION_95
0xb50c	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      3589	sequencer.c	FUNCTION_95
0xb513	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      3589	sequencer.c	FUNCTION_95
0xb51a	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      3589	sequencer.c	FUNCTION_95
0xb521	    0x64488b042528	                mov rax, qword fs:[0x28]	      3589	sequencer.c	FUNCTION_95
0xb52a	        0x488945e8	             mov qword [rbp - 0x18], rax	      3589	sequencer.c	FUNCTION_95
0xb52e	            0x31c0	                            xor eax, eax	      3589	sequencer.c	FUNCTION_95
0xb530	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3596	sequencer.c	FUNCTION_95	CALL_1
0xb537	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3596	sequencer.c	FUNCTION_95	CALL_1
0xb53e	          0x4889d6	                            mov rsi, rdx	      3596	sequencer.c	FUNCTION_95	CALL_1
0xb541	          0x4889c7	                            mov rdi, rax	      3596	sequencer.c	FUNCTION_95	CALL_1
0xb544	      0xe800000000	                          call 0x400b589	      3596	sequencer.c	FUNCTION_95	CALL_1
0xb549	        0x48894598	             mov qword [rbp - 0x68], rax	      3596	sequencer.c	FUNCTION_95	CALL_1
0xb54d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      3597	sequencer.c	FUNCTION_95	IF_1
0xb552	            0x740d	                            je 0x400b5a1	      3597	sequencer.c	FUNCTION_95	IF_1
0xb554	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3598	sequencer.c	FUNCTION_95	IF_1
0xb558	        0x4883c028	                           add rax, 0x28	      3598	sequencer.c	FUNCTION_95	IF_1
0xb55c	      0xe9b1030000	                           jmp 0x400b952	      3598	sequencer.c	FUNCTION_95	IF_1
0xb561	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      3613	sequencer.c	FUNCTION_95	IF_2
0xb569	     0xf8535010000	                           jne 0x400b6e4	      3613	sequencer.c	FUNCTION_95	IF_2
0xb56f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3616	sequencer.c	FUNCTION_95	IF_2	CALL_2
0xb576	        0x4883c060	                           add rax, 0x60	      3616	sequencer.c	FUNCTION_95	IF_2	CALL_2
0xb57a	      0xbe00000000	                              mov esi, 0	      3616	sequencer.c	FUNCTION_95	IF_2	CALL_2
0xb57f	          0x4889c7	                            mov rdi, rax	      3616	sequencer.c	FUNCTION_95	IF_2	CALL_2
0xb582	      0xe8a64bffff	                  call sym.strbuf_setlen	      3616	sequencer.c	FUNCTION_95	IF_2	CALL_2
0xb587	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_3
0xb58e	        0x4883c060	                           add rax, 0x60	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_3
0xb592	      0xbe28000000	                           mov esi, 0x28	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_3
0xb597	          0x4889c7	                            mov rdi, rax	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_3
0xb59a	      0xe800000000	                          call 0x400b5df	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_3
0xb59f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3618	sequencer.c	FUNCTION_95	IF_2
0xb5a6	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3618	sequencer.c	FUNCTION_95	IF_2
0xb5aa	        0x488945a0	             mov qword [rbp - 0x60], rax	      3618	sequencer.c	FUNCTION_95	IF_2
0xb5ae	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3618	sequencer.c	FUNCTION_95	IF_2
0xb5b2	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3618	sequencer.c	FUNCTION_95	IF_2
0xb5b9	    0x8b1500000000	            mov edx, dword [0x0400b5ff] 	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_4
0xb5bf	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_4
0xb5c6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_4
0xb5ca	          0x4889ce	                            mov rsi, rcx	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_4
0xb5cd	          0x4889c7	                            mov rdi, rax	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_4
0xb5d0	      0xe800000000	                          call 0x400b615	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_4
0xb5d5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5d9	          0x4889c7	                            mov rdi, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5dc	      0xe800000000	                          call 0x400b621	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5e1	            0x89c6	                            mov esi, eax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5e3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5ea	        0x488d4830	                   lea rcx, [rax + 0x30]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5ee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5f2	          0x4889c2	                            mov rdx, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5f5	          0x4889cf	                            mov rdi, rcx	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5f8	      0xe80a4dffff	          call sym.hashmap_get_from_hash	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb5fd	          0x4885c0	                           test rax, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb600	     0xf84db010000	                            je 0x400b821	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0xb606	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0xb60a	          0x4889c7	                            mov rdi, rax	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0xb60d	      0xe800000000	                          call 0x400b652	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0xb612	        0x4883c001	                              add rax, 1	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0xb616	        0x48894590	             mov qword [rbp - 0x70], rax	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0xb61a	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_8
0xb621	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_8
0xb625	          0x4889d6	                            mov rsi, rdx	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_8
0xb628	          0x4889c7	                            mov rdi, rax	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_8
0xb62b	      0xe800000000	                          call 0x400b670	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_8
0xb630	            0xeb66	                           jmp 0x400b6d8	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb632	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb636	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb63a	          0x4801d0	                            add rax, rdx	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb63d	           0xfb600	                   movzx eax, byte [rax]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb640	          0x88458b	               mov byte [rbp - 0x75], al	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb643	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb647	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb64b	          0x4801d0	                            add rax, rdx	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb64e	          0xc60000	                       mov byte [rax], 0	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb651	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb655	          0x4889c7	                            mov rdi, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb658	      0xe800000000	                          call 0x400b69d	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb65d	            0x89c6	                            mov esi, eax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb65f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb666	        0x488d4830	                   lea rcx, [rax + 0x30]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb66a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb66e	          0x4889c2	                            mov rdx, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb671	          0x4889cf	                            mov rdi, rcx	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb674	      0xe88e4cffff	          call sym.hashmap_get_from_hash	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb679	          0x4885c0	                           test rax, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb67c	     0xf845e010000	                            je 0x400b820	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_9
0xb682	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb686	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb68a	          0x4801c2	                            add rdx, rax	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb68d	         0xfb6458b	            movzx eax, byte [rbp - 0x75]	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb691	            0x8802	                      mov byte [rdx], al	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb693	      0x4883459001	               add qword [rbp - 0x70], 1	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb698	      0x48837d9027	           cmp qword [rbp - 0x70], 0x27 	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb69d	            0x7693	                           jbe 0x400b672	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb69f	      0xe93d010000	                           jmp 0x400b821	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0xb6a4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6ab	          0x4889c7	                            mov rdi, rax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6ae	      0xe800000000	                          call 0x400b6f3	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6b3	        0x488945a8	             mov qword [rbp - 0x58], rax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6b7	      0x48837da814	           cmp qword [rbp - 0x58], 0x14 	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6bc	            0x751a	                           jne 0x400b718	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6be	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0xb6c2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0xb6c9	          0x4889d6	                            mov rsi, rdx	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0xb6cc	          0x4889c7	                            mov rdi, rax	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0xb6cf	      0xe800000000	                          call 0x400b714	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0xb6d4	            0x85c0	                           test eax, eax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6d6	            0x744c	                            je 0x400b764	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0xb6d8	      0x48837da801	               cmp qword [rbp - 0x58], 1	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0xb6dd	            0x750e	                           jne 0x400b72d	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0xb6df	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb6e6	           0xfb600	                   movzx eax, byte [rax]	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb6e9	            0x3c23	                            cmp al, 0x23	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb6eb	            0x7437	                            je 0x400b764	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb6ed	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb6f4	          0x4889c7	                            mov rdi, rax	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb6f7	      0xe800000000	                          call 0x400b73c	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb6fc	            0x89c6	                            mov esi, eax	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb6fe	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb705	        0x488d4830	                   lea rcx, [rax + 0x30]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb709	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb710	          0x4889c2	                            mov rdx, rax	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb713	          0x4889cf	                            mov rdi, rcx	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb716	      0xe8ec4bffff	          call sym.hashmap_get_from_hash	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_13
0xb71b	          0x4885c0	                           test rax, rax	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb71e	     0xf84bd000000	                            je 0x400b821	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb724	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb72b	        0x4883c060	                           add rax, 0x60	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb72f	        0x488945b0	             mov qword [rbp - 0x50], rax	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb733	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_15
0xb737	      0xbe00000000	                              mov esi, 0	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_15
0xb73c	          0x4889c7	                            mov rdi, rax	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_15
0xb73f	      0xe8e949ffff	                  call sym.strbuf_setlen	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_15
0xb744	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_16
0xb748	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_16
0xb74f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_16
0xb753	          0x4889ce	                            mov rsi, rcx	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_16
0xb756	          0x4889c7	                            mov rdi, rax	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_16
0xb759	      0xe800000000	                          call 0x400b79e	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_16
0xb75e	    0xc7458c020000	               mov dword [rbp - 0x74], 2	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0xb765	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_17
0xb769	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_17
0xb76d	          0x4889d6	                            mov rsi, rdx	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_17
0xb770	          0x4889c7	                            mov rdi, rax	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_17
0xb773	      0xe8b549ffff	                  call sym.strbuf_setlen	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_17
0xb778	          0x8b558c	             mov edx, dword [rbp - 0x74]	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_18
0xb77b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_18
0xb77f	      0xbe00000000	                              mov esi, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_18
0xb784	          0x4889c7	                            mov rdi, rax	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_18
0xb787	      0xb800000000	                              mov eax, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_18
0xb78c	      0xe800000000	                          call 0x400b7d1	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_18
0xb791	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3660	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6
0xb795	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      3660	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6
0xb799	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_20
0xb79d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_20
0xb7a1	          0x4889c7	                            mov rdi, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7a4	      0xe800000000	                          call 0x400b7e9	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7a9	            0x89c1	                            mov ecx, eax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7ab	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7b2	        0x4883c030	                           add rax, 0x30	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7b6	          0x4889da	                            mov rdx, rbx	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7b9	            0x89ce	                            mov esi, ecx	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7bb	          0x4889c7	                            mov rdi, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7be	      0xe8444bffff	          call sym.hashmap_get_from_hash	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7c3	          0x4885c0	                           test rax, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7c6	            0x7406	                            je 0x400b80e	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_19
0xb7c8	        0x83458c01	               add dword [rbp - 0x74], 1	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0xb7cc	            0xeb97	                           jmp 0x400b7a5	      3662	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0xb7ce	              0x90	                                     nop	      3661	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6
0xb7cf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb7d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb7d7	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb7de	            0xeb01	                           jmp 0x400b821	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0xb7e0	              0x90	                                     nop	      3635	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4
0xb7e1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb7e8	          0x4889c7	                            mov rdi, rax	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb7eb	      0xe800000000	                          call 0x400b830	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb7f0	        0x488945b8	             mov qword [rbp - 0x48], rax	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb7f4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb7f8	          0x4889c6	                            mov rsi, rax	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb7fb	      0xbf10000000	                           mov edi, 0x10	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb800	      0xe85c48ffff	                         call sym.st_add	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb805	      0xbe01000000	                              mov esi, 1	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb80a	          0x4889c7	                            mov rdi, rax	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb80d	      0xe84f48ffff	                         call sym.st_add	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb812	          0x4889c6	                            mov rsi, rax	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb815	      0xbf01000000	                              mov edi, 1	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb81a	      0xe800000000	                          call 0x400b85f	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb81f	        0x488945c0	             mov qword [rbp - 0x40], rax	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb823	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb827	        0x488d4810	                   lea rcx, [rax + 0x10]	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb82b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb82f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb836	          0x4889c6	                            mov rsi, rax	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb839	          0x4889cf	                            mov rdi, rcx	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb83c	      0xe800000000	                          call 0x400b881	      3667	sequencer.c	FUNCTION_95	CALL_21
0xb841	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb848	          0x4889c7	                            mov rdi, rax	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb84b	      0xe800000000	                          call 0x400b890	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb850	            0x89c2	                            mov edx, eax	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb852	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb856	            0x89d6	                            mov esi, edx	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb858	          0x4889c7	                            mov rdi, rax	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb85b	      0xe87c4affff	             call sym.hashmap_entry_init	      3668	sequencer.c	FUNCTION_95	CALL_23
0xb860	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3669	sequencer.c	FUNCTION_95	CALL_24
0xb867	        0x488d5030	                   lea rdx, [rax + 0x30]	      3669	sequencer.c	FUNCTION_95	CALL_24
0xb86b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3669	sequencer.c	FUNCTION_95	CALL_24
0xb86f	          0x4889c6	                            mov rsi, rax	      3669	sequencer.c	FUNCTION_95	CALL_24
0xb872	          0x4889d7	                            mov rdi, rdx	      3669	sequencer.c	FUNCTION_95	CALL_24
0xb875	      0xe800000000	                          call 0x400b8ba	      3669	sequencer.c	FUNCTION_95	CALL_24
0xb87a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb881	          0x4889c7	                            mov rdi, rax	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb884	      0xe800000000	                          call 0x400b8c9	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb889	        0x488945c8	             mov qword [rbp - 0x38], rax	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb88d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb891	          0x4889c6	                            mov rsi, rax	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb894	      0xbf28000000	                           mov edi, 0x28	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb899	      0xe8c347ffff	                         call sym.st_add	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb89e	      0xbe01000000	                              mov esi, 1	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8a3	          0x4889c7	                            mov rdi, rax	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8a6	      0xe8b647ffff	                         call sym.st_add	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8ab	          0x4889c6	                            mov rsi, rax	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8ae	      0xbf01000000	                              mov edi, 1	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8b3	      0xe800000000	                          call 0x400b8f8	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8b8	        0x48894598	             mov qword [rbp - 0x68], rax	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8bc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8c0	        0x488d4828	                   lea rcx, [rax + 0x28]	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8c4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8c8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8cf	          0x4889c6	                            mov rsi, rax	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8d2	          0x4889cf	                            mov rdi, rcx	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8d5	      0xe800000000	                          call 0x400b91a	      3671	sequencer.c	FUNCTION_95	CALL_25
0xb8da	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3672	sequencer.c	FUNCTION_95	CALL_26
0xb8de	        0x488d5010	                   lea rdx, [rax + 0x10]	      3672	sequencer.c	FUNCTION_95	CALL_26
0xb8e2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3672	sequencer.c	FUNCTION_95	CALL_26
0xb8e9	          0x4889c6	                            mov rsi, rax	      3672	sequencer.c	FUNCTION_95	CALL_26
0xb8ec	          0x4889d7	                            mov rdi, rdx	      3672	sequencer.c	FUNCTION_95	CALL_26
0xb8ef	      0xe8404bffff	                         call sym.oidcpy	      3672	sequencer.c	FUNCTION_95	CALL_26
0xb8f4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3673	sequencer.c	FUNCTION_95	CALL_27
0xb8fb	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3673	sequencer.c	FUNCTION_95	CALL_27
0xb8ff	          0x4889d6	                            mov rsi, rdx	      3673	sequencer.c	FUNCTION_95	CALL_27
0xb902	          0x4889c7	                            mov rdi, rax	      3673	sequencer.c	FUNCTION_95	CALL_27
0xb905	      0xe800000000	                          call 0x400b94a	      3673	sequencer.c	FUNCTION_95	CALL_27
0xb90a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3675	sequencer.c	FUNCTION_95
0xb90e	        0x4883c028	                           add rax, 0x28	      3675	sequencer.c	FUNCTION_95
0xb912	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3676	sequencer.c	FUNCTION_95
0xb916	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3676	sequencer.c	FUNCTION_95
0xb91f	            0x7405	                            je 0x400b966	      3676	sequencer.c	FUNCTION_95
0xb921	      0xe800000000	                          call 0x400b966	      3676	sequencer.c	FUNCTION_95
0xb926	    0x4881c4980000	                           add rsp, 0x98	      3676	sequencer.c	FUNCTION_95
0xb92d	              0x5b	                                 pop rbx	      3676	sequencer.c	FUNCTION_95
0xb92e	              0x5d	                                 pop rbp	      3676	sequencer.c	FUNCTION_95
0xb92f	              0xc3	                                     ret	      3676	sequencer.c	FUNCTION_95
update_head_with_reflog	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,3:WHILE,0:CALL,11	104
0x284a	              0x55	                                push rbp	       848	sequencer.c	FUNCTION_30
0x284b	          0x4889e5	                            mov rbp, rsp	       848	sequencer.c	FUNCTION_30
0x284e	        0x4883ec70	                           sub rsp, 0x70	       848	sequencer.c	FUNCTION_30
0x2852	        0x48897db8	             mov qword [rbp - 0x48], rdi	       848	sequencer.c	FUNCTION_30
0x2856	        0x488975b0	             mov qword [rbp - 0x50], rsi	       848	sequencer.c	FUNCTION_30
0x285a	        0x488955a8	             mov qword [rbp - 0x58], rdx	       848	sequencer.c	FUNCTION_30
0x285e	        0x48894da0	             mov qword [rbp - 0x60], rcx	       848	sequencer.c	FUNCTION_30
0x2862	        0x4c894598	              mov qword [rbp - 0x68], r8	       848	sequencer.c	FUNCTION_30
0x2866	    0x64488b042528	                mov rax, qword fs:[0x28]	       848	sequencer.c	FUNCTION_30
0x286f	        0x488945f8	                mov qword [rbp - 8], rax	       848	sequencer.c	FUNCTION_30
0x2873	            0x31c0	                            xor eax, eax	       848	sequencer.c	FUNCTION_30
0x2875	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       850	sequencer.c	FUNCTION_30
0x287d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       850	sequencer.c	FUNCTION_30
0x2885	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       850	sequencer.c	FUNCTION_30
0x288d	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       852	sequencer.c	FUNCTION_30
0x2894	      0x48837da800	               cmp qword [rbp - 0x58], 0	       854	sequencer.c	FUNCTION_30	IF_1
0x2899	            0x7424	                            je 0x40028ff	       854	sequencer.c	FUNCTION_30	IF_1
0x289b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x289f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x28a3	          0x4889d6	                            mov rsi, rdx	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x28a6	          0x4889c7	                            mov rdi, rax	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x28a9	      0xe887d9ffff	                  call sym.strbuf_addstr	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x28ae	        0x488d45e0	                   lea rax, [rbp - 0x20]	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x28b2	      0xbe00000000	                              mov esi, 0	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x28b7	          0x4889c7	                            mov rdi, rax	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x28ba	      0xe876d9ffff	                  call sym.strbuf_addstr	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x28bf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       859	sequencer.c	FUNCTION_30	CALL_3
0x28c3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       859	sequencer.c	FUNCTION_30	CALL_3
0x28c7	      0xbe0a000000	                            mov esi, 0xa	       859	sequencer.c	FUNCTION_30	CALL_3
0x28cc	          0x4889c7	                            mov rdi, rax	       859	sequencer.c	FUNCTION_30	CALL_3
0x28cf	      0xe800000000	                          call 0x4002914	       859	sequencer.c	FUNCTION_30	CALL_3
0x28d4	        0x488945d0	             mov qword [rbp - 0x30], rax	       859	sequencer.c	FUNCTION_30	CALL_3
0x28d8	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       860	sequencer.c	FUNCTION_30	IF_2
0x28dd	            0x7435	                            je 0x4002954	       860	sequencer.c	FUNCTION_30	IF_2
0x28df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28e3	        0x4883c001	                              add rax, 1	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28e7	          0x4889c2	                            mov rdx, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28ea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28ee	        0x488b4010	            mov rax, qword [rax + 0x10] 	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28f2	          0x4829c2	                            sub rdx, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28f5	          0x4889d0	                            mov rax, rdx	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28f8	          0x4889c2	                            mov rdx, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28fb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x28ff	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x2903	        0x488d45e0	                   lea rax, [rbp - 0x20]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x2907	          0x4889ce	                            mov rsi, rcx	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x290a	          0x4889c7	                            mov rdi, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x290d	      0xe800000000	                          call 0x4002952	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x2912	            0xeb24	                           jmp 0x4002978	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x2914	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x2918	        0x488d45e0	                   lea rax, [rbp - 0x20]	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x291c	          0x4889d6	                            mov rsi, rdx	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x291f	          0x4889c7	                            mov rdi, rax	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x2922	      0xe800000000	                          call 0x4002967	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x2927	        0x488d45e0	                   lea rax, [rbp - 0x20]	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x292b	      0xbe0a000000	                            mov esi, 0xa	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x2930	          0x4889c7	                            mov rdi, rax	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x2933	      0xe88fd8ffff	                   call sym.strbuf_addch	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x2938	        0x488b4598	             mov rax, qword [rbp - 0x68]	       867	sequencer.c	FUNCTION_30	CALL_7
0x293c	          0x4889c7	                            mov rdi, rax	       867	sequencer.c	FUNCTION_30	CALL_7
0x293f	      0xe800000000	                          call 0x4002984	       867	sequencer.c	FUNCTION_30	CALL_7
0x2944	        0x488945d8	             mov qword [rbp - 0x28], rax	       867	sequencer.c	FUNCTION_30	CALL_7
0x2948	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       868	sequencer.c	FUNCTION_30	IF_3
0x294d	            0x745e	                            je 0x40029ed	       868	sequencer.c	FUNCTION_30	IF_3
0x294f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       871	sequencer.c	FUNCTION_30	IF_3
0x2953	      0x48837db800	               cmp qword [rbp - 0x48], 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2958	            0x740a	                            je 0x40029a4	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x295a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x295e	        0x488d4804	                      lea rcx, [rax + 4]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2962	            0xeb05	                           jmp 0x40029a9	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2964	      0xb900000000	                              mov ecx, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2969	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x296d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2971	        0x4883ec08	                              sub rsp, 8	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2975	          0xff7598	                 push qword [rbp - 0x68]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2978	          0x4989f1	                             mov r9, rsi	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x297b	    0x41b800000000	                              mov r8d, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2981	      0xbe00000000	                              mov esi, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2986	          0x4889c7	                            mov rdi, rax	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2989	      0xe800000000	                          call 0x40029ce	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x298e	        0x4883c410	                           add rsp, 0x10	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x2992	            0x85c0	                           test eax, eax	       868	sequencer.c	FUNCTION_30	IF_3
0x2994	            0x7517	                           jne 0x40029ed	       868	sequencer.c	FUNCTION_30	IF_3
0x2996	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x299a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x299e	          0x4889d6	                            mov rsi, rdx	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x29a1	          0x4889c7	                            mov rdi, rax	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x29a4	      0xe800000000	                          call 0x40029e9	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x29a9	            0x85c0	                           test eax, eax	       871	sequencer.c	FUNCTION_30	IF_3
0x29ab	            0x7407	                            je 0x40029f4	       871	sequencer.c	FUNCTION_30	IF_3
0x29ad	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	       873	sequencer.c	FUNCTION_30	IF_3
0x29b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       875	sequencer.c	FUNCTION_30	CALL_10
0x29b8	          0x4889c7	                            mov rdi, rax	       875	sequencer.c	FUNCTION_30	CALL_10
0x29bb	      0xe800000000	                          call 0x4002a00	       875	sequencer.c	FUNCTION_30	CALL_10
0x29c0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       876	sequencer.c	FUNCTION_30	CALL_11
0x29c4	          0x4889c7	                            mov rdi, rax	       876	sequencer.c	FUNCTION_30	CALL_11
0x29c7	      0xe800000000	                          call 0x4002a0c	       876	sequencer.c	FUNCTION_30	CALL_11
0x29cc	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       878	sequencer.c	FUNCTION_30
0x29cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	       879	sequencer.c	FUNCTION_30
0x29d3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       879	sequencer.c	FUNCTION_30
0x29dc	            0x7405	                            je 0x4002a23	       879	sequencer.c	FUNCTION_30
0x29de	      0xe800000000	                          call 0x4002a23	       879	sequencer.c	FUNCTION_30
0x29e3	              0xc9	                                   leave	       879	sequencer.c	FUNCTION_30
0x29e4	              0xc3	                                     ret	       879	sequencer.c	FUNCTION_30
git_config_string_dup	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,3	26
0x6051	              0x55	                                push rbp	      2034	sequencer.c	FUNCTION_61
0x6052	          0x4889e5	                            mov rbp, rsp	      2034	sequencer.c	FUNCTION_61
0x6055	        0x4883ec20	                           sub rsp, 0x20	      2034	sequencer.c	FUNCTION_61
0x6059	        0x48897df8	                mov qword [rbp - 8], rdi	      2034	sequencer.c	FUNCTION_61
0x605d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2034	sequencer.c	FUNCTION_61
0x6061	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2034	sequencer.c	FUNCTION_61
0x6065	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2035	sequencer.c	FUNCTION_61	IF_1
0x606a	            0x7513	                           jne 0x40060bf	      2035	sequencer.c	FUNCTION_61	IF_1
0x606c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2036	sequencer.c	FUNCTION_61	CALL_1
0x6070	          0x4889c7	                            mov rdi, rax	      2036	sequencer.c	FUNCTION_61	CALL_1
0x6073	      0xe800000000	                          call 0x40060b8	      2036	sequencer.c	FUNCTION_61	CALL_1
0x6078	      0xe8839fffff	                    call sym.const_error	      2036	sequencer.c	FUNCTION_61	CALL_1
0x607d	            0xeb2a	                           jmp 0x40060e9	      2036	sequencer.c	FUNCTION_61	CALL_1
0x607f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2037	sequencer.c	FUNCTION_61	CALL_2
0x6083	          0x488b00	                    mov rax, qword [rax]	      2037	sequencer.c	FUNCTION_61	CALL_2
0x6086	          0x4889c7	                            mov rdi, rax	      2037	sequencer.c	FUNCTION_61	CALL_2
0x6089	      0xe800000000	                          call 0x40060ce	      2037	sequencer.c	FUNCTION_61	CALL_2
0x608e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2038	sequencer.c	FUNCTION_61	CALL_3
0x6092	          0x4889c7	                            mov rdi, rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x6095	      0xe800000000	                          call 0x40060da	      2038	sequencer.c	FUNCTION_61	CALL_3
0x609a	          0x4889c2	                            mov rdx, rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x609d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2038	sequencer.c	FUNCTION_61	CALL_3
0x60a1	          0x488910	                    mov qword [rax], rdx	      2038	sequencer.c	FUNCTION_61	CALL_3
0x60a4	      0xb800000000	                              mov eax, 0	      2039	sequencer.c	FUNCTION_61
0x60a9	              0xc9	                                   leave	      2040	sequencer.c	FUNCTION_61
0x60aa	              0xc3	                                     ret	      2040	sequencer.c	FUNCTION_61
do_commit	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,5:WHILE,0:CALL,12	94
0x38d5	              0x55	                                push rbp	      1210	sequencer.c	FUNCTION_38
0x38d6	          0x4889e5	                            mov rbp, rsp	      1210	sequencer.c	FUNCTION_38
0x38d9	        0x4883ec70	                           sub rsp, 0x70	      1210	sequencer.c	FUNCTION_38
0x38dd	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1210	sequencer.c	FUNCTION_38
0x38e1	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1210	sequencer.c	FUNCTION_38
0x38e5	        0x48895598	             mov qword [rbp - 0x68], rdx	      1210	sequencer.c	FUNCTION_38
0x38e9	          0x894d94	             mov dword [rbp - 0x6c], ecx	      1210	sequencer.c	FUNCTION_38
0x38ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      1210	sequencer.c	FUNCTION_38
0x38f5	        0x488945f8	                mov qword [rbp - 8], rax	      1210	sequencer.c	FUNCTION_38
0x38f9	            0x31c0	                            xor eax, eax	      1210	sequencer.c	FUNCTION_38
0x38fb	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      1211	sequencer.c	FUNCTION_38
0x3902	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1213	sequencer.c	FUNCTION_38	IF_1
0x3905	          0x83e002	                              and eax, 2	      1213	sequencer.c	FUNCTION_38	IF_1
0x3908	            0x85c0	                           test eax, eax	      1213	sequencer.c	FUNCTION_38	IF_1
0x390a	     0xf85fb000000	                           jne 0x4003a4b	      1213	sequencer.c	FUNCTION_38	IF_1
0x3910	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1213	sequencer.c	FUNCTION_38	IF_1
0x3913	          0x83e010	                           and eax, 0x10	      1213	sequencer.c	FUNCTION_38	IF_1
0x3916	            0x85c0	                           test eax, eax	      1213	sequencer.c	FUNCTION_38	IF_1
0x3918	     0xf85ed000000	                           jne 0x4003a4b	      1213	sequencer.c	FUNCTION_38	IF_1
0x391e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x3926	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x392e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x3936	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x393b	            0x7448	                            je 0x40039c5	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x393d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x3941	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x3945	      0xba00080000	                          mov edx, 0x800	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x394a	          0x4889ce	                            mov rsi, rcx	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x394d	          0x4889c7	                            mov rdi, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x3950	      0xe800000000	                          call 0x4003995	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x3955	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x3958	            0x792b	                           jns 0x40039c5	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x395a	      0xbf00000000	                              mov edi, 0	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x395f	      0xe803caffff	                               call sym.	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x3964	          0x4889c2	                            mov rdx, rax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x3967	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x396b	          0x4889c6	                            mov rsi, rax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x396e	          0x4889d7	                            mov rdi, rdx	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x3971	      0xb800000000	                              mov eax, 0	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x3976	      0xe800000000	                          call 0x40039bb	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x397b	      0xe880c6ffff	                    call sym.const_error	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x3980	      0xe9a7000000	                           jmp 0x4003a6c	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x3985	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x398a	            0x7406	                            je 0x40039d2	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x398c	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x3990	            0xeb05	                           jmp 0x40039d7	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x3992	      0xb800000000	                              mov eax, 0	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x3997	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x399b	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x399e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x39a2	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x39a6	          0x4989f8	                             mov r8, rdi	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x39a9	          0x4889c7	                            mov rdi, rax	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x39ac	      0xe8eff9ffff	                  call sym.try_to_commit	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x39b1	          0x8945bc	             mov dword [rbp - 0x44], eax	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x39b4	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_5
0x39b8	          0x4889c7	                            mov rdi, rax	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_5
0x39bb	      0xe800000000	                          call 0x4003a00	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_5
0x39c0	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1225	sequencer.c	FUNCTION_38	IF_1	IF_3
0x39c4	            0x7545	                           jne 0x4003a4b	      1225	sequencer.c	FUNCTION_38	IF_1	IF_3
0x39c6	      0xe800000000	                          call 0x4003a0b	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_7
0x39cb	          0x4889c7	                            mov rdi, rax	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_7
0x39ce	      0xe800000000	                          call 0x4003a13	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_7
0x39d3	      0xe800000000	                          call 0x4003a18	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_9
0x39d8	          0x4889c7	                            mov rdi, rax	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_9
0x39db	      0xe800000000	                          call 0x4003a20	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_9
0x39e0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x39e4	          0x4889c7	                            mov rdi, rax	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x39e7	      0xe89cd2ffff	                    call sym.is_rebase_i	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x39ec	            0x85c0	                           test eax, eax	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x39ee	            0x7516	                           jne 0x4003a46	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x39f0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_11
0x39f4	      0xba02000000	                              mov edx, 2	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_11
0x39f9	          0x4889c6	                            mov rsi, rax	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_11
0x39fc	      0xbf00000000	                              mov edi, 0	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_11
0x3a01	      0xe800000000	                          call 0x4003a46	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_11
0x3a06	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1231	sequencer.c	FUNCTION_38	IF_1	IF_3
0x3a09	            0xeb21	                           jmp 0x4003a6c	      1231	sequencer.c	FUNCTION_38	IF_1	IF_3
0x3a0b	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      1234	sequencer.c	FUNCTION_38	IF_5
0x3a0f	            0x7518	                           jne 0x4003a69	      1234	sequencer.c	FUNCTION_38	IF_5
0x3a11	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      1235	sequencer.c	FUNCTION_38	CALL_12
0x3a14	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1235	sequencer.c	FUNCTION_38	CALL_12
0x3a18	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1235	sequencer.c	FUNCTION_38	CALL_12
0x3a1c	          0x4889ce	                            mov rsi, rcx	      1235	sequencer.c	FUNCTION_38	CALL_12
0x3a1f	          0x4889c7	                            mov rdi, rax	      1235	sequencer.c	FUNCTION_38	CALL_12
0x3a22	      0xe852e8ffff	                 call sym.run_git_commit	      1235	sequencer.c	FUNCTION_38	CALL_12
0x3a27	            0xeb03	                           jmp 0x4003a6c	      1235	sequencer.c	FUNCTION_38	CALL_12
0x3a29	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1237	sequencer.c	FUNCTION_38
0x3a2c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1238	sequencer.c	FUNCTION_38
0x3a30	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1238	sequencer.c	FUNCTION_38
0x3a39	            0x7405	                            je 0x4003a80	      1238	sequencer.c	FUNCTION_38
0x3a3b	      0xe800000000	                          call 0x4003a80	      1238	sequencer.c	FUNCTION_38
0x3a40	              0xc9	                                   leave	      1238	sequencer.c	FUNCTION_38
0x3a41	              0xc3	                                     ret	      1238	sequencer.c	FUNCTION_38
make_script_with_merges	FOR,5:SWITCH,0:functions,0:DO,0:ELSE,8:IF,21:WHILE,2:CALL,82	775
0xb930	              0x55	                                push rbp	      3681	sequencer.c	FUNCTION_96
0xb931	          0x4889e5	                            mov rbp, rsp	      3681	sequencer.c	FUNCTION_96
0xb934	              0x53	                                push rbx	      3681	sequencer.c	FUNCTION_96
0xb935	    0x4881eca80200	                          sub rsp, 0x2a8	      3681	sequencer.c	FUNCTION_96
0xb93c	    0x4889bd68fdff	            mov qword [rbp - 0x298], rdi	      3681	sequencer.c	FUNCTION_96
0xb943	    0x4889b560fdff	            mov qword [rbp - 0x2a0], rsi	      3681	sequencer.c	FUNCTION_96
0xb94a	    0x48899558fdff	            mov qword [rbp - 0x2a8], rdx	      3681	sequencer.c	FUNCTION_96
0xb951	    0x898d54fdffff	            mov dword [rbp - 0x2ac], ecx	      3681	sequencer.c	FUNCTION_96
0xb957	    0x64488b042528	                mov rax, qword fs:[0x28]	      3681	sequencer.c	FUNCTION_96
0xb960	        0x488945e8	             mov qword [rbp - 0x18], rax	      3681	sequencer.c	FUNCTION_96
0xb964	            0x31c0	                            xor eax, eax	      3681	sequencer.c	FUNCTION_96
0xb966	    0x8b8554fdffff	            mov eax, dword [rbp - 0x2ac]	      3682	sequencer.c	FUNCTION_96
0xb96c	          0x83e001	                              and eax, 1	      3682	sequencer.c	FUNCTION_96
0xb96f	    0x89857cfdffff	            mov dword [rbp - 0x284], eax	      3682	sequencer.c	FUNCTION_96
0xb975	    0x8b8554fdffff	            mov eax, dword [rbp - 0x2ac]	      3683	sequencer.c	FUNCTION_96
0xb97b	          0x83e010	                           and eax, 0x10	      3683	sequencer.c	FUNCTION_96
0xb97e	    0x898580fdffff	            mov dword [rbp - 0x280], eax	      3683	sequencer.c	FUNCTION_96
0xb984	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	      3684	sequencer.c	FUNCTION_96
0xb98f	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      3684	sequencer.c	FUNCTION_96
0xb99a	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      3684	sequencer.c	FUNCTION_96
0xb9a5	    0x48c78570feff	              mov qword [rbp - 0x190], 0	      3684	sequencer.c	FUNCTION_96
0xb9b0	    0x48c78578feff	              mov qword [rbp - 0x188], 0	      3684	sequencer.c	FUNCTION_96
0xb9bb	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      3684	sequencer.c	FUNCTION_96
0xb9c6	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      3685	sequencer.c	FUNCTION_96
0xb9d1	    0x48c78598feff	              mov qword [rbp - 0x168], 0	      3685	sequencer.c	FUNCTION_96
0xb9dc	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      3685	sequencer.c	FUNCTION_96
0xb9e7	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	      3686	sequencer.c	FUNCTION_96
0xb9f2	    0x488d8590fdff	                  lea rax, [rbp - 0x270]	      3686	sequencer.c	FUNCTION_96
0xb9f9	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3686	sequencer.c	FUNCTION_96
0xba00	    0x48c78598fdff	              mov qword [rbp - 0x268], 0	      3687	sequencer.c	FUNCTION_96
0xba0b	    0x488d8598fdff	                  lea rax, [rbp - 0x268]	      3687	sequencer.c	FUNCTION_96
0xba12	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      3687	sequencer.c	FUNCTION_96
0xba19	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      3689	sequencer.c	FUNCTION_96
0xba20	      0xb800000000	                              mov eax, 0	      3689	sequencer.c	FUNCTION_96
0xba25	      0xb906000000	                              mov ecx, 6	      3689	sequencer.c	FUNCTION_96
0xba2a	          0x4889d7	                            mov rdi, rdx	      3689	sequencer.c	FUNCTION_96
0xba2d	          0xf348ab	              rep stosq qword [rdi], rax	      3689	sequencer.c	FUNCTION_96
0xba30	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      3691	sequencer.c	FUNCTION_96
0xba37	      0xb800000000	                              mov eax, 0	      3691	sequencer.c	FUNCTION_96
0xba3c	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0xba41	          0x4889d7	                            mov rdi, rdx	      3691	sequencer.c	FUNCTION_96
0xba44	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0xba47	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	      3691	sequencer.c	FUNCTION_96
0xba4e	      0xb800000000	                              mov eax, 0	      3691	sequencer.c	FUNCTION_96
0xba53	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0xba58	          0x4889d7	                            mov rdi, rdx	      3691	sequencer.c	FUNCTION_96
0xba5b	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0xba5e	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      3692	sequencer.c	FUNCTION_96
0xba65	      0xb800000000	                              mov eax, 0	      3692	sequencer.c	FUNCTION_96
0xba6a	      0xb906000000	                              mov ecx, 6	      3692	sequencer.c	FUNCTION_96
0xba6f	          0x4889d7	                            mov rdi, rdx	      3692	sequencer.c	FUNCTION_96
0xba72	          0xf348ab	              rep stosq qword [rdi], rax	      3692	sequencer.c	FUNCTION_96
0xba75	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3693	sequencer.c	FUNCTION_96
0xba7c	      0xb800000000	                              mov eax, 0	      3693	sequencer.c	FUNCTION_96
0xba81	      0xb90f000000	                            mov ecx, 0xf	      3693	sequencer.c	FUNCTION_96
0xba86	          0x4889d7	                            mov rdi, rdx	      3693	sequencer.c	FUNCTION_96
0xba89	          0xf348ab	              rep stosq qword [rdi], rax	      3693	sequencer.c	FUNCTION_96
0xba8c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3693	sequencer.c	FUNCTION_96
0xba94	    0x8b8554fdffff	            mov eax, dword [rbp - 0x2ac]	      3695	sequencer.c	FUNCTION_96
0xba9a	          0x83e004	                              and eax, 4	      3695	sequencer.c	FUNCTION_96
0xba9d	    0x898584fdffff	            mov dword [rbp - 0x27c], eax	      3695	sequencer.c	FUNCTION_96
0xbaa3	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3696	sequencer.c	FUNCTION_96
0xbaaa	            0x7407	                            je 0x400baf3	      3696	sequencer.c	FUNCTION_96
0xbaac	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0xbab1	            0xeb05	                           jmp 0x400baf8	      3696	sequencer.c	FUNCTION_96
0xbab3	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0xbab8	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      3696	sequencer.c	FUNCTION_96
0xbabf	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3697	sequencer.c	FUNCTION_96
0xbac6	            0x7407	                            je 0x400bb0f	      3697	sequencer.c	FUNCTION_96
0xbac8	      0xb800000000	                              mov eax, 0	      3697	sequencer.c	FUNCTION_96
0xbacd	            0xeb05	                           jmp 0x400bb14	      3697	sequencer.c	FUNCTION_96
0xbacf	      0xb800000000	                              mov eax, 0	      3697	sequencer.c	FUNCTION_96
0xbad4	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      3697	sequencer.c	FUNCTION_96
0xbadb	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3698	sequencer.c	FUNCTION_96
0xbae2	            0x7407	                            je 0x400bb2b	      3698	sequencer.c	FUNCTION_96
0xbae4	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0xbae9	            0xeb05	                           jmp 0x400bb30	      3698	sequencer.c	FUNCTION_96
0xbaeb	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0xbaf0	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      3698	sequencer.c	FUNCTION_96
0xbaf7	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3699	sequencer.c	FUNCTION_96
0xbafe	            0x7407	                            je 0x400bb47	      3699	sequencer.c	FUNCTION_96
0xbb00	      0xb800000000	                              mov eax, 0	      3699	sequencer.c	FUNCTION_96
0xbb05	            0xeb05	                           jmp 0x400bb4c	      3699	sequencer.c	FUNCTION_96
0xbb07	      0xb800000000	                              mov eax, 0	      3699	sequencer.c	FUNCTION_96
0xbb0c	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      3699	sequencer.c	FUNCTION_96
0xbb13	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3701	sequencer.c	FUNCTION_96	CALL_1
0xbb1a	      0xbe00000000	                              mov esi, 0	      3701	sequencer.c	FUNCTION_96	CALL_1
0xbb1f	          0x4889c7	                            mov rdi, rax	      3701	sequencer.c	FUNCTION_96	CALL_1
0xbb22	      0xe800000000	                          call 0x400bb67	      3701	sequencer.c	FUNCTION_96	CALL_1
0xbb27	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3702	sequencer.c	FUNCTION_96	CALL_2
0xbb2e	      0xbe00000000	                              mov esi, 0	      3702	sequencer.c	FUNCTION_96	CALL_2
0xbb33	          0x4889c7	                            mov rdi, rax	      3702	sequencer.c	FUNCTION_96	CALL_2
0xbb36	      0xe800000000	                          call 0x400bb7b	      3702	sequencer.c	FUNCTION_96	CALL_2
0xbb3b	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3703	sequencer.c	FUNCTION_96	CALL_3
0xbb42	        0x4883c030	                           add rax, 0x30	      3703	sequencer.c	FUNCTION_96	CALL_3
0xbb46	      0xb900000000	                              mov ecx, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0xbb4b	      0xba00000000	                              mov edx, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0xbb50	      0xbe00000000	                              mov esi, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0xbb55	          0x4889c7	                            mov rdi, rax	      3703	sequencer.c	FUNCTION_96	CALL_3
0xbb58	      0xe800000000	                          call 0x400bb9d	      3703	sequencer.c	FUNCTION_96	CALL_3
0xbb5d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3704	sequencer.c	FUNCTION_96	CALL_4
0xbb64	        0x4883c060	                           add rax, 0x60	      3704	sequencer.c	FUNCTION_96	CALL_4
0xbb68	      0xbe20000000	                           mov esi, 0x20	      3704	sequencer.c	FUNCTION_96	CALL_4
0xbb6d	          0x4889c7	                            mov rdi, rax	      3704	sequencer.c	FUNCTION_96	CALL_4
0xbb70	      0xe800000000	                          call 0x400bbb5	      3704	sequencer.c	FUNCTION_96	CALL_4
0xbb75	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb7c	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb7f	            0x85c0	                           test eax, eax	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb81	     0xf84c8060000	                            je 0x400c28f	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb87	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb8e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb92	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb95	      0x2500040000	                          and eax, 0x400	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb9a	            0x85c0	                           test eax, eax	      3706	sequencer.c	FUNCTION_96	IF_1
0xbb9c	     0xf84ad060000	                            je 0x400c28f	      3706	sequencer.c	FUNCTION_96	IF_1
0xbba2	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3707	sequencer.c	FUNCTION_96	IF_1
0xbba9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3707	sequencer.c	FUNCTION_96	IF_1
0xbbad	          0x488b00	                    mov rax, qword [rax]	      3707	sequencer.c	FUNCTION_96	IF_1
0xbbb0	        0x4883c004	                              add rax, 4	      3707	sequencer.c	FUNCTION_96	IF_1
0xbbb4	    0x48898500feff	            mov qword [rbp - 0x200], rax	      3707	sequencer.c	FUNCTION_96	IF_1
0xbbbb	    0x48c78508feff	              mov qword [rbp - 0x1f8], 4	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbc6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbcd	          0x4889c6	                            mov rsi, rax	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbd0	      0xbf28000000	                           mov edi, 0x28	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbd5	      0xe88744ffff	                         call sym.st_add	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbda	      0xbe01000000	                              mov esi, 1	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbdf	          0x4889c7	                            mov rdi, rax	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbe2	      0xe87a44ffff	                         call sym.st_add	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbe7	          0x4889c6	                            mov rsi, rax	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbea	      0xbf01000000	                              mov edi, 1	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbef	      0xe800000000	                          call 0x400bc34	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbf4	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbbfb	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbc02	        0x488d4828	                   lea rcx, [rax + 0x28]	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbc06	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbc0d	          0x4889c2	                            mov rdx, rax	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbc10	      0xbe00000000	                              mov esi, 0	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbc15	          0x4889cf	                            mov rdi, rcx	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbc18	      0xe800000000	                          call 0x400bc5d	      3708	sequencer.c	FUNCTION_96	IF_1	CALL_5
0xbc1d	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_6
0xbc24	        0x488d5010	                   lea rdx, [rax + 0x10]	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_6
0xbc28	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_6
0xbc2f	          0x4889c6	                            mov rsi, rax	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_6
0xbc32	          0x4889d7	                            mov rdi, rdx	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_6
0xbc35	      0xe8fa47ffff	                         call sym.oidcpy	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_6
0xbc3a	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_7
0xbc41	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_7
0xbc48	          0x4889d6	                            mov rsi, rdx	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_7
0xbc4b	          0x4889c7	                            mov rdi, rax	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_7
0xbc4e	      0xe800000000	                          call 0x400bc93	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_7
0xbc53	      0xe9f7050000	                           jmp 0x400c28f	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0xbc58	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0xbc5f	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0xbc66	          0x4889d6	                            mov rsi, rdx	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0xbc69	          0x4889c7	                            mov rdi, rax	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0xbc6c	      0xe800000000	                          call 0x400bcb1	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0xbc71	        0x4883c008	                              add rax, 8	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0xbc75	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0xbc7c	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0xbc83	        0x488d5004	                      lea rdx, [rax + 4]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0xbc87	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0xbc8e	          0x4889d6	                            mov rsi, rdx	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0xbc91	          0x4889c7	                            mov rdi, rax	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0xbc94	      0xe800000000	                          call 0x400bcd9	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0xbc99	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0xbca0	          0x4889c7	                            mov rdi, rax	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0xbca3	      0xe89a7dffff	       call sym.is_original_commit_empty	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0xbca8	    0x898588fdffff	            mov dword [rbp - 0x278], eax	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0xbcae	    0x83bd88fdffff	              cmp dword [rbp - 0x278], 0	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbcb5	            0x751e	                           jne 0x400bd15	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbcb7	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbcbe	            0x8b00	                    mov eax, dword [rax]	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbcc0	          0xc1e804	                              shr eax, 4	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbcc3	      0x25ffffff07	                      and eax, 0x7ffffff	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbcc8	      0x2500020000	                          and eax, 0x200	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbccd	            0x85c0	                           test eax, eax	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbccf	     0xf8579050000	                           jne 0x400c28e	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xbcd5	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      3733	sequencer.c	FUNCTION_96	WHILE_1	CALL_12
0xbcdc	      0xbe00000000	                              mov esi, 0	      3733	sequencer.c	FUNCTION_96	WHILE_1	CALL_12
0xbce1	          0x4889c7	                            mov rdi, rax	      3733	sequencer.c	FUNCTION_96	WHILE_1	CALL_12
0xbce4	      0xe84444ffff	                  call sym.strbuf_setlen	      3733	sequencer.c	FUNCTION_96	WHILE_1	CALL_12
0xbce9	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_13
0xbcf0	    0x488b8dc0fdff	            mov rcx, qword [rbp - 0x240]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_13
0xbcf7	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_13
0xbcfe	          0x4889ce	                            mov rsi, rcx	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_13
0xbd01	          0x4889c7	                            mov rdi, rax	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_13
0xbd04	      0xe800000000	                          call 0x400bd49	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_13
0xbd09	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd10	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd14	          0x4885c0	                           test rax, rax	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd17	            0x7411	                            je 0x400bd6a	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd19	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd20	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd24	        0x488b4008	                mov rax, qword [rax + 8]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd28	            0xeb05	                           jmp 0x400bd6f	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd2a	      0xb800000000	                              mov eax, 0	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd2f	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      3736	sequencer.c	FUNCTION_96	WHILE_1
0xbd36	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0xbd3e	     0xf8537010000	                           jne 0x400bebb	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0xbd44	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_14
0xbd4b	      0xbe00000000	                              mov esi, 0	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_14
0xbd50	          0x4889c7	                            mov rdi, rax	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_14
0xbd53	      0xe8d543ffff	                  call sym.strbuf_setlen	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_14
0xbd58	    0x83bd7cfdffff	              cmp dword [rbp - 0x284], 0	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0xbd5f	            0x752c	                           jne 0x400bdcd	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0xbd61	    0x83bd88fdffff	              cmp dword [rbp - 0x278], 0	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0xbd68	            0x7423	                            je 0x400bdcd	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0xbd6a	     0xfb605000000	           movzx eax, byte [0x0400bdb1] 	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0xbd71	           0xfbed0	                           movsx edx, al	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0xbd74	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0xbd7b	      0xbe00000000	                              mov esi, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0xbd80	          0x4889c7	                            mov rdi, rax	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0xbd83	      0xb800000000	                              mov eax, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0xbd88	      0xe800000000	                          call 0x400bdcd	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0xbd8d	    0x488b9d80feff	            mov rbx, qword [rbp - 0x180]	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbd94	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3743	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_17
0xbd9b	        0x4883c004	                              add rax, 4	      3743	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_17
0xbd9f	          0x4889c7	                            mov rdi, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbda2	      0xe800000000	                          call 0x400bde7	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbda7	          0x4889c1	                            mov rcx, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdaa	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdb1	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdb8	          0x4989d8	                             mov r8, rbx	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdbb	      0xbe00000000	                              mov esi, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdc0	          0x4889c7	                            mov rdi, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdc3	      0xb800000000	                              mov eax, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdc8	      0xe800000000	                          call 0x400be0d	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0xbdcd	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbdd4	          0x4889c7	                            mov rdi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbdd7	      0xe800000000	                          call 0x400be1c	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbddc	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbde3	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbdea	          0x4889c6	                            mov rsi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbded	      0xbf28000000	                           mov edi, 0x28	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbdf2	      0xe86a42ffff	                         call sym.st_add	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbdf7	      0xbe01000000	                              mov esi, 1	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbdfc	          0x4889c7	                            mov rdi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbdff	      0xe85d42ffff	                         call sym.st_add	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe04	          0x4889c6	                            mov rsi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe07	      0xbf01000000	                              mov edi, 1	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe0c	      0xe800000000	                          call 0x400be51	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe11	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe18	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe1f	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe26	        0x488d4a28	                   lea rcx, [rdx + 0x28]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe2a	    0x488b9538feff	            mov rdx, qword [rbp - 0x1c8]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe31	          0x4889c6	                            mov rsi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe34	          0x4889cf	                            mov rdi, rcx	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe37	      0xe800000000	                          call 0x400be7c	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_18
0xbe3c	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_19
0xbe43	        0x488d5004	                      lea rdx, [rax + 4]	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_19
0xbe47	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_19
0xbe4e	        0x4883c010	                           add rax, 0x10	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_19
0xbe52	          0x4889d6	                            mov rsi, rdx	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_19
0xbe55	          0x4889c7	                            mov rdi, rax	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_19
0xbe58	      0xe8d745ffff	                         call sym.oidcpy	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_19
0xbe5d	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_20
0xbe64	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_20
0xbe6b	          0x4889d6	                            mov rsi, rdx	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_20
0xbe6e	          0x4889c7	                            mov rdi, rax	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_20
0xbe71	      0xe800000000	                          call 0x400beb6	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_20
0xbe76	      0xe9d4030000	                           jmp 0x400c28f	      3750	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0xbe7b	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe83	            0x7417	                            je 0x400bedc	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe85	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe8c	        0x488b4008	                mov rax, qword [rax + 8]	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe90	          0x4885c0	                           test rax, rax	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe93	            0x7407	                            je 0x400bedc	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe95	      0xb801000000	                              mov eax, 1	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe9a	            0xeb05	                           jmp 0x400bee1	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbe9c	      0xb800000000	                              mov eax, 0	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbea1	    0x89858cfdffff	            mov dword [rbp - 0x274], eax	      3753	sequencer.c	FUNCTION_96	WHILE_1
0xbea7	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	      3755	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0xbeae	            0x7419	                            je 0x400bf09	      3755	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0xbeb0	      0xba00000000	                              mov edx, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	CALL_21
0xbeb5	      0xbeac0e0000	                          mov esi, 0xeac	      3756	sequencer.c	FUNCTION_96	WHILE_1	CALL_21
0xbeba	      0xbf00000000	                              mov edi, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	CALL_21
0xbebf	      0xb800000000	                              mov eax, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	CALL_21
0xbec4	      0xe800000000	                          call 0x400bf09	      3756	sequencer.c	FUNCTION_96	WHILE_1	CALL_21
0xbec9	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3759	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0xbed0	      0xbe00000000	                              mov esi, 0	      3759	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0xbed5	          0x4889c7	                            mov rdi, rax	      3759	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0xbed8	      0xe85042ffff	                  call sym.strbuf_setlen	      3759	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0xbedd	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbee4	    0x488d95a0fdff	                  lea rdx, [rbp - 0x260]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbeeb	      0xbe00000000	                              mov esi, 0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbef0	          0x4889c7	                            mov rdi, rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbef3	      0xe81341ffff	                    call sym.skip_prefix	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbef8	            0x85c0	                           test eax, eax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbefa	     0xf848d000000	                            je 0x400bfcd	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbf00	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf07	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf0c	          0x4889c7	                            mov rdi, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf0f	      0xe800000000	                          call 0x400bf54	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf14	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf1b	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf22	          0x4885c0	                           test rax, rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbf25	            0x7466	                            je 0x400bfcd	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_23
0xbf27	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_25
0xbf2e	        0x4883c001	                              add rax, 1	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_25
0xbf32	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf39	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_25
0xbf40	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf45	          0x4889c7	                            mov rdi, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf48	      0xe800000000	                          call 0x400bf8d	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf4d	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf54	    0x4883bd20feff	              cmp qword [rbp - 0x1e0], 0	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf5c	            0x742f	                            je 0x400bfcd	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_24
0xbf5e	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf65	    0x488b95a0fdff	            mov rdx, qword [rbp - 0x260]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf6c	          0x4829d0	                            sub rax, rdx	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf6f	          0x4889c2	                            mov rdx, rax	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf72	    0x488b8da0fdff	            mov rcx, qword [rbp - 0x260]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf79	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf80	          0x4889ce	                            mov rsi, rcx	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf83	          0x4889c7	                            mov rdi, rax	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf86	      0xe800000000	                          call 0x400bfcb	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf8b	            0xeb7e	                           jmp 0x400c04b	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0xbf8d	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_27
0xbf94	    0x488d95a0fdff	                  lea rdx, [rbp - 0x260]	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_27
0xbf9b	      0xbe00000000	                              mov esi, 0	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_27
0xbfa0	          0x4889c7	                            mov rdi, rax	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_27
0xbfa3	      0xe86340ffff	                    call sym.skip_prefix	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_27
0xbfa8	            0x85c0	                           test eax, eax	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_27
0xbfaa	            0x7446	                            je 0x400c032	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_27
0xbfac	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_28
0xbfb3	      0xbe00000000	                              mov esi, 0	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_28
0xbfb8	          0x4889c7	                            mov rdi, rax	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_28
0xbfbb	      0xe800000000	                          call 0x400c000	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_28
0xbfc0	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_28
0xbfc7	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_28
0xbfce	          0x4885c0	                           test rax, rax	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbfd1	            0x741f	                            je 0x400c032	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbfd3	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbfda	        0x488d5006	                      lea rdx, [rax + 6]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbfde	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbfe5	          0x4889d6	                            mov rsi, rdx	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbfe8	          0x4889c7	                            mov rdi, rax	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbfeb	      0xe84542ffff	                  call sym.strbuf_addstr	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbff0	            0xeb19	                           jmp 0x400c04b	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0xbff2	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0xbff9	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0xc000	          0x4889d6	                            mov rsi, rdx	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0xc003	          0x4889c7	                            mov rdi, rax	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0xc006	      0xe800000000	                          call 0x400c04b	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0xc00b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc012	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc019	            0xeb3c	                           jmp 0x400c097	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc01b	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc022	           0xfb600	                   movzx eax, byte [rax]	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc025	           0xfb6c0	                           movzx eax, al	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc028	            0x4898	                                    cdqe	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc02a	     0xfb680000000	                   movzx eax, byte [rax]	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc031	           0xfb6c0	                           movzx eax, al	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc034	          0x83e001	                              and eax, 1	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc037	            0x85c0	                           test eax, eax	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc039	            0x740a	                            je 0x400c085	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8	CALL_32
0xc03b	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3773	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0xc042	          0xc6002d	                    mov byte [rax], 0x2d	      3773	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0xc045	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc04c	        0x4883c001	                              add rax, 1	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc050	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc057	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc05e	           0xfb600	                   movzx eax, byte [rax]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc061	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc063	            0x75b6	                           jne 0x400c05b	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0xc065	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3775	sequencer.c	FUNCTION_96	WHILE_1	CALL_33
0xc06c	      0xbe00000000	                              mov esi, 0	      3775	sequencer.c	FUNCTION_96	WHILE_1	CALL_33
0xc071	          0x4889c7	                            mov rdi, rax	      3775	sequencer.c	FUNCTION_96	WHILE_1	CALL_33
0xc074	      0xe8b440ffff	                  call sym.strbuf_setlen	      3775	sequencer.c	FUNCTION_96	WHILE_1	CALL_33
0xc079	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3777	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0xc080	        0x4883c004	                              add rax, 4	      3777	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0xc084	          0x4889c7	                            mov rdi, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc087	      0xe800000000	                          call 0x400c0cc	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc08c	          0x4889c1	                            mov rcx, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc08f	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc096	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc09d	      0xbe00000000	                              mov esi, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc0a2	          0x4889c7	                            mov rdi, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc0a5	      0xb800000000	                              mov eax, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc0aa	      0xe800000000	                          call 0x400c0ef	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0xc0af	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0xc0b6	          0x488b00	                    mov rax, qword [rax]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0xc0b9	        0x4883c004	                              add rax, 4	      3780	sequencer.c	FUNCTION_96	WHILE_1
0xc0bd	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      3780	sequencer.c	FUNCTION_96	WHILE_1
0xc0c4	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0xc0cb	      0xbe20000000	                           mov esi, 0x20	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0xc0d0	          0x4889c7	                            mov rdi, rax	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0xc0d3	      0xe8ef40ffff	                   call sym.strbuf_addch	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0xc0d8	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_37
0xc0df	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_37
0xc0e6	          0x4889d6	                            mov rsi, rdx	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_37
0xc0e9	          0x4889c7	                            mov rdi, rax	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_37
0xc0ec	      0xe800000000	                          call 0x400c131	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_37
0xc0f1	            0x85c0	                           test eax, eax	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_37
0xc0f3	            0x7532	                           jne 0x400c167	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_37
0xc0f5	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc0fc	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc103	      0xbe00000000	                              mov esi, 0	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc108	          0x4889c7	                            mov rdi, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc10b	      0xe8f0f3ffff	                      call sym.label_oid	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc110	          0x4889c2	                            mov rdx, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc113	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc11a	          0x4889d6	                            mov rsi, rdx	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc11d	          0x4889c7	                            mov rdi, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc120	      0xe81041ffff	                  call sym.strbuf_addstr	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc125	            0xeb5c	                           jmp 0x400c1c3	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_39
0xc127	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc12e	          0x488b00	                    mov rax, qword [rax]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc131	    0x488b95b8fdff	            mov rdx, qword [rbp - 0x248]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc138	          0x4889d6	                            mov rsi, rdx	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc13b	          0x4889c7	                            mov rdi, rax	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc13e	      0xe800000000	                          call 0x400c183	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc143	        0x4883c008	                              add rax, 8	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc147	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_40
0xc14e	    0x488b8da0feff	            mov rcx, qword [rbp - 0x160]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc155	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc15c	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc163	          0x4889ce	                            mov rsi, rcx	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc166	          0x4889c7	                            mov rdi, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc169	      0xe892f3ffff	                      call sym.label_oid	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc16e	          0x4889c2	                            mov rdx, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc171	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc178	          0x4889d6	                            mov rsi, rdx	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc17b	          0x4889c7	                            mov rdi, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc17e	      0xe8b240ffff	                  call sym.strbuf_addstr	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_42
0xc183	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_43
0xc18a	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_43
0xc191	      0xbe00000000	                              mov esi, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_43
0xc196	          0x4889c7	                            mov rdi, rax	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_43
0xc199	      0xb800000000	                              mov eax, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_43
0xc19e	      0xe800000000	                          call 0x400c1e3	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_43
0xc1a3	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1aa	          0x4889c7	                            mov rdi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1ad	      0xe800000000	                          call 0x400c1f2	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1b2	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1b9	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1c0	          0x4889c6	                            mov rsi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1c3	      0xbf28000000	                           mov edi, 0x28	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1c8	      0xe8943effff	                         call sym.st_add	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1cd	      0xbe01000000	                              mov esi, 1	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1d2	          0x4889c7	                            mov rdi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1d5	      0xe8873effff	                         call sym.st_add	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1da	          0x4889c6	                            mov rsi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1dd	      0xbf01000000	                              mov edi, 1	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1e2	      0xe800000000	                          call 0x400c227	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1e7	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1ee	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1f5	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc1fc	        0x488d4a28	                   lea rcx, [rdx + 0x28]	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc200	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc207	          0x4889c6	                            mov rsi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc20a	          0x4889cf	                            mov rdi, rcx	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc20d	      0xe800000000	                          call 0x400c252	      3793	sequencer.c	FUNCTION_96	WHILE_1	CALL_44
0xc212	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_45
0xc219	        0x488d5004	                      lea rdx, [rax + 4]	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_45
0xc21d	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_45
0xc224	        0x4883c010	                           add rax, 0x10	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_45
0xc228	          0x4889d6	                            mov rsi, rdx	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_45
0xc22b	          0x4889c7	                            mov rdi, rax	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_45
0xc22e	      0xe80142ffff	                         call sym.oidcpy	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_45
0xc233	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_46
0xc23a	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_46
0xc241	          0x4889d6	                            mov rsi, rdx	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_46
0xc244	          0x4889c7	                            mov rdi, rax	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_46
0xc247	      0xe800000000	                          call 0x400c28c	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_46
0xc24c	            0xeb01	                           jmp 0x400c28f	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_46
0xc24e	              0x90	                                     nop	      3731	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0xc24f	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0xc256	          0x4889c7	                            mov rdi, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0xc259	      0xe800000000	                          call 0x400c29e	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0xc25e	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0xc265	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0xc26d	     0xf85e5f9ffff	                           jne 0x400bc98	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0xc273	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc27a	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc281	      0xe90b010000	                           jmp 0x400c3d1	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc286	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3804	sequencer.c	FUNCTION_96	FOR_2
0xc28d	          0x488b00	                    mov rax, qword [rax]	      3804	sequencer.c	FUNCTION_96	FOR_2
0xc290	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3804	sequencer.c	FUNCTION_96	FOR_2
0xc294	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      3804	sequencer.c	FUNCTION_96	FOR_2
0xc29b	      0xe99a000000	                           jmp 0x400c37a	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc2a0	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc2a7	          0x488b00	                    mov rax, qword [rax]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc2aa	        0x4883c004	                              add rax, 4	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc2ae	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc2b5	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_47
0xc2bc	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_47
0xc2c3	          0x4889d6	                            mov rsi, rdx	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_47
0xc2c6	          0x4889c7	                            mov rdi, rax	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_47
0xc2c9	      0xe800000000	                          call 0x400c30e	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_47
0xc2ce	            0x85c0	                           test eax, eax	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_47
0xc2d0	            0x7455	                            je 0x400c367	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_47
0xc2d2	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_48
0xc2d9	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_48
0xc2e0	          0x4889d6	                            mov rsi, rdx	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_48
0xc2e3	          0x4889c7	                            mov rdi, rax	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_48
0xc2e6	      0xe800000000	                          call 0x400c32b	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_48
0xc2eb	            0x85c0	                           test eax, eax	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_48
0xc2ed	            0x751b	                           jne 0x400c34a	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_48
0xc2ef	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_49
0xc2f6	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_49
0xc2fd	          0x4889d6	                            mov rsi, rdx	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_49
0xc300	          0x4889c7	                            mov rdi, rax	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_49
0xc303	      0xe800000000	                          call 0x400c348	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_49
0xc308	            0xeb1e	                           jmp 0x400c368	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_49
0xc30a	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_50
0xc311	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_50
0xc318	      0xbe00000000	                              mov esi, 0	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_50
0xc31d	          0x4889c7	                            mov rdi, rax	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_50
0xc320	      0xe8dbf1ffff	                      call sym.label_oid	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_50
0xc325	            0xeb01	                           jmp 0x400c368	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_50
0xc327	              0x90	                                     nop	      3808	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10
0xc328	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc32f	        0x488b4008	                mov rax, qword [rax + 8]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc333	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc33a	    0x4883bdc8fdff	              cmp qword [rbp - 0x238], 0	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc342	     0xf8558ffffff	                           jne 0x400c2e0	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0xc348	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0xc34f	        0x488b4008	                mov rax, qword [rax + 8]	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0xc353	          0x4885c0	                           test rax, rax	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0xc356	            0x7527	                           jne 0x400c3bf	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0xc358	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc35f	          0x488b00	                    mov rax, qword [rax]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc362	    0x488b95b8fdff	            mov rdx, qword [rbp - 0x248]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc369	          0x4889d6	                            mov rsi, rdx	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc36c	          0x4889c7	                            mov rdi, rax	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc36f	      0xe800000000	                          call 0x400c3b4	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc374	        0x4883c008	                              add rax, 8	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc378	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_51
0xc37f	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc386	        0x488b4008	                mov rax, qword [rax + 8]	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc38a	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc391	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc399	     0xf85e7feffff	                           jne 0x400c2c6	      3803	sequencer.c	FUNCTION_96	FOR_2
0xc39f	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      3828	sequencer.c	FUNCTION_96	CALL_52
0xc3a6	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3828	sequencer.c	FUNCTION_96	CALL_52
0xc3ad	      0xbe00000000	                              mov esi, 0	      3828	sequencer.c	FUNCTION_96	CALL_52
0xc3b2	          0x4889c7	                            mov rdi, rax	      3828	sequencer.c	FUNCTION_96	CALL_52
0xc3b5	      0xb800000000	                              mov eax, 0	      3828	sequencer.c	FUNCTION_96	CALL_52
0xc3ba	      0xe800000000	                          call 0x400c3ff	      3828	sequencer.c	FUNCTION_96	CALL_52
0xc3bf	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc3c6	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc3cd	      0xe9bb030000	                           jmp 0x400c7cd	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc3d2	    0x48c785a0fdff	              mov qword [rbp - 0x260], 0	      3830	sequencer.c	FUNCTION_96	FOR_4
0xc3dd	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3832	sequencer.c	FUNCTION_96	FOR_4
0xc3e4	          0x488b00	                    mov rax, qword [rax]	      3832	sequencer.c	FUNCTION_96	FOR_4
0xc3e7	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      3832	sequencer.c	FUNCTION_96	FOR_4
0xc3ee	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc3f5	        0x488d5004	                      lea rdx, [rax + 4]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc3f9	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc400	          0x4889d6	                            mov rsi, rdx	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc403	          0x4889c7	                            mov rdi, rax	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc406	      0xe800000000	                          call 0x400c44b	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc40b	            0x85c0	                           test eax, eax	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc40d	     0xf8567030000	                           jne 0x400c7ba	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_53
0xc413	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_54
0xc41a	        0x488d5004	                      lea rdx, [rax + 4]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_54
0xc41e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_54
0xc425	          0x4889d6	                            mov rsi, rdx	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_54
0xc428	          0x4889c7	                            mov rdi, rax	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_54
0xc42b	      0xe800000000	                          call 0x400c470	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_54
0xc430	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_54
0xc437	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0xc43f	            0x7426	                            je 0x400c4a7	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0xc441	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc448	        0x488d5028	                   lea rdx, [rax + 0x28]	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc44c	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc453	      0xbe00000000	                              mov esi, 0	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc458	          0x4889c7	                            mov rdi, rax	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc45b	      0xb800000000	                              mov eax, 0	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc460	      0xe800000000	                          call 0x400c4a5	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc465	            0xeb61	                           jmp 0x400c508	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_55
0xc467	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_56
0xc46e	          0x4889c6	                            mov rsi, rax	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_56
0xc471	      0xbf0a000000	                            mov edi, 0xa	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_56
0xc476	      0xe800000000	                          call 0x400c4bb	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_56
0xc47b	            0xeb4b	                           jmp 0x400c508	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc47d	    0x488d95a0fdff	                  lea rdx, [rbp - 0x260]	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_59
0xc484	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_59
0xc48b	          0x4889d6	                            mov rsi, rdx	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_59
0xc48e	          0x4889c7	                            mov rdi, rax	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_59
0xc491	      0xe800000000	                          call 0x400c4d6	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_59
0xc496	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0xc49d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0xc4a1	          0x4885c0	                           test rax, rax	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0xc4a4	            0x750d	                           jne 0x400c4f3	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0xc4a6	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      3846	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0xc4b1	            0xeb5b	                           jmp 0x400c54e	      3847	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0xc4b3	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0xc4ba	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0xc4be	          0x488b00	                    mov rax, qword [rax]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0xc4c1	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0xc4c8	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4cf	        0x488d5004	                      lea rdx, [rax + 4]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4d3	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4da	          0x4889d6	                            mov rsi, rdx	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4dd	          0x4889c7	                            mov rdi, rax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4e0	      0xe800000000	                          call 0x400c525	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4e5	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4e7	            0x7425	                            je 0x400c54e	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc4e9	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_58
0xc4f0	        0x488d5004	                      lea rdx, [rax + 4]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_58
0xc4f4	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_58
0xc4fb	          0x4889d6	                            mov rsi, rdx	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_58
0xc4fe	          0x4889c7	                            mov rdi, rax	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_58
0xc501	      0xe800000000	                          call 0x400c546	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_58
0xc506	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc508	     0xf846fffffff	                            je 0x400c4bd	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_57
0xc50e	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0xc516	            0x7525	                           jne 0x400c57d	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0xc518	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_60
0xc51f	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_60
0xc526	      0xbe00000000	                              mov esi, 0	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_60
0xc52b	          0x4889c7	                            mov rdi, rax	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_60
0xc52e	      0xb800000000	                              mov eax, 0	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_60
0xc533	      0xe800000000	                          call 0x400c578	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_60
0xc538	      0xe928010000	                           jmp 0x400c6a5	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_60
0xc53d	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	      3855	sequencer.c	FUNCTION_96	FOR_4	ELSE_6
0xc548	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3858	sequencer.c	FUNCTION_96	FOR_4	ELSE_6
0xc54f	        0x488d5004	                      lea rdx, [rax + 4]	      3858	sequencer.c	FUNCTION_96	FOR_4	ELSE_6
0xc553	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_61
0xc55a	          0x4889d6	                            mov rsi, rdx	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_61
0xc55d	          0x4889c7	                            mov rdi, rax	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_61
0xc560	      0xe800000000	                          call 0x400c5a5	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_61
0xc565	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_61
0xc56c	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0xc574	            0x7414	                            je 0x400c5ca	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0xc576	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0xc57d	        0x4883c028	                           add rax, 0x28	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0xc581	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0xc588	            0xeb32	                           jmp 0x400c5fc	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0xc58a	    0x83bd80fdffff	              cmp dword [rbp - 0x280], 0	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0xc591	            0x7529	                           jne 0x400c5fc	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0xc593	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc59a	        0x488d4804	                      lea rcx, [rax + 4]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc59e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc5a5	          0x4889c2	                            mov rdx, rax	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc5a8	      0xbe00000000	                              mov esi, 0	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc5ad	          0x4889cf	                            mov rdi, rcx	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc5b0	      0xe84befffff	                      call sym.label_oid	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc5b5	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_62
0xc5bc	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5c4	            0x7418	                            je 0x400c61e	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5c6	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5cd	      0xbe00000000	                              mov esi, 0	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5d2	          0x4889c7	                            mov rdi, rax	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5d5	      0xe800000000	                          call 0x400c61a	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5da	            0x85c0	                           test eax, eax	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5dc	            0x7522	                           jne 0x400c640	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_63
0xc5de	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_64
0xc5e5	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_64
0xc5ec	      0xbe00000000	                              mov esi, 0	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_64
0xc5f1	          0x4889c7	                            mov rdi, rax	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_64
0xc5f4	      0xb800000000	                              mov eax, 0	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_64
0xc5f9	      0xe800000000	                          call 0x400c63e	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_64
0xc5fe	            0xeb65	                           jmp 0x400c6a5	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_64
0xc600	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_65
0xc607	      0xbe00000000	                              mov esi, 0	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_65
0xc60c	          0x4889c7	                            mov rdi, rax	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_65
0xc60f	      0xe8193bffff	                  call sym.strbuf_setlen	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_65
0xc614	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_66
0xc61b	    0x488b8dc0fdff	            mov rcx, qword [rbp - 0x240]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_66
0xc622	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_66
0xc629	          0x4889ce	                            mov rsi, rcx	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_66
0xc62c	          0x4889c7	                            mov rdi, rax	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_66
0xc62f	      0xe800000000	                          call 0x400c674	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_66
0xc634	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc63b	    0x488b8dd8fdff	            mov rcx, qword [rbp - 0x228]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc642	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc649	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc650	          0x4989f0	                             mov r8, rsi	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc653	      0xbe00000000	                              mov esi, 0	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc658	          0x4889c7	                            mov rdi, rax	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc65b	      0xb800000000	                              mov eax, 0	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc660	      0xe800000000	                          call 0x400c6a5	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_67
0xc665	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc66c	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc673	      0xe9e3000000	                           jmp 0x400c79b	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc678	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc67f	          0x488b00	                    mov rax, qword [rax]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc682	        0x4883c004	                              add rax, 4	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc686	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc68d	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_68
0xc694	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_68
0xc69b	          0x4889d6	                            mov rsi, rdx	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_68
0xc69e	          0x4889c7	                            mov rdi, rax	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_68
0xc6a1	      0xe800000000	                          call 0x400c6e6	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_68
0xc6a6	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_68
0xc6ad	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0xc6b5	            0x7424	                            je 0x400c71b	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0xc6b7	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_69
0xc6be	        0x488d5028	                   lea rdx, [rax + 0x28]	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_69
0xc6c2	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_69
0xc6c9	      0xbe00000000	                              mov esi, 0	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_69
0xc6ce	          0x4889c7	                            mov rdi, rax	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_69
0xc6d1	      0xb800000000	                              mov eax, 0	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_69
0xc6d6	      0xe800000000	                          call 0x400c71b	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_69
0xc6db	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_70
0xc6e2	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_70
0xc6e9	          0x4889d6	                            mov rsi, rdx	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_70
0xc6ec	          0x4889c7	                            mov rdi, rax	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_70
0xc6ef	      0xe800000000	                          call 0x400c734	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_70
0xc6f4	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_70
0xc6fb	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0xc703	            0x742b	                            je 0x400c770	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0xc705	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3884	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0xc70c	        0x488d4828	                   lea rcx, [rax + 0x28]	      3884	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0xc710	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_71
0xc717	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_71
0xc71e	      0xbe00000000	                              mov esi, 0	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_71
0xc723	          0x4889c7	                            mov rdi, rax	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_71
0xc726	      0xb800000000	                              mov eax, 0	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_71
0xc72b	      0xe800000000	                          call 0x400c770	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_71
0xc730	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_72
0xc737	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_72
0xc73e	          0x4889d6	                            mov rsi, rdx	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_72
0xc741	          0x4889c7	                            mov rdi, rax	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_72
0xc744	      0xe800000000	                          call 0x400c789	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_72
0xc749	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc750	        0x488b4008	                mov rax, qword [rax + 8]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc754	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc75b	    0x4883bdd0fdff	              cmp qword [rbp - 0x230], 0	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc763	     0xf850fffffff	                           jne 0x400c6b8	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0xc769	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_73
0xc770	          0x4889c7	                            mov rdi, rax	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_73
0xc773	      0xe800000000	                          call 0x400c7b8	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_73
0xc778	            0xeb01	                           jmp 0x400c7bb	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_73
0xc77a	              0x90	                                     nop	      3834	sequencer.c	FUNCTION_96	FOR_4	IF_13
0xc77b	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc782	        0x488b4008	                mov rax, qword [rax + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc786	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc78d	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc795	     0xf8537fcffff	                           jne 0x400c412	      3829	sequencer.c	FUNCTION_96	FOR_4
0xc79b	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3891	sequencer.c	FUNCTION_96	CALL_74
0xc7a2	          0x4889c7	                            mov rdi, rax	      3891	sequencer.c	FUNCTION_96	CALL_74
0xc7a5	      0xe800000000	                          call 0x400c7ea	      3891	sequencer.c	FUNCTION_96	CALL_74
0xc7aa	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      3892	sequencer.c	FUNCTION_96	CALL_75
0xc7b1	          0x4889c7	                            mov rdi, rax	      3892	sequencer.c	FUNCTION_96	CALL_75
0xc7b4	      0xe800000000	                          call 0x400c7f9	      3892	sequencer.c	FUNCTION_96	CALL_75
0xc7b9	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3894	sequencer.c	FUNCTION_96	CALL_76
0xc7c0	          0x4889c7	                            mov rdi, rax	      3894	sequencer.c	FUNCTION_96	CALL_76
0xc7c3	      0xe800000000	                          call 0x400c808	      3894	sequencer.c	FUNCTION_96	CALL_76
0xc7c8	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      3895	sequencer.c	FUNCTION_96	CALL_77
0xc7cf	          0x4889c7	                            mov rdi, rax	      3895	sequencer.c	FUNCTION_96	CALL_77
0xc7d2	      0xe800000000	                          call 0x400c817	      3895	sequencer.c	FUNCTION_96	CALL_77
0xc7d7	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3896	sequencer.c	FUNCTION_96	CALL_78
0xc7de	          0x4889c7	                            mov rdi, rax	      3896	sequencer.c	FUNCTION_96	CALL_78
0xc7e1	      0xe800000000	                          call 0x400c826	      3896	sequencer.c	FUNCTION_96	CALL_78
0xc7e6	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3898	sequencer.c	FUNCTION_96	CALL_79
0xc7ed	      0xbe01000000	                              mov esi, 1	      3898	sequencer.c	FUNCTION_96	CALL_79
0xc7f2	          0x4889c7	                            mov rdi, rax	      3898	sequencer.c	FUNCTION_96	CALL_79
0xc7f5	      0xe800000000	                          call 0x400c83a	      3898	sequencer.c	FUNCTION_96	CALL_79
0xc7fa	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3899	sequencer.c	FUNCTION_96	CALL_80
0xc801	      0xbe01000000	                              mov esi, 1	      3899	sequencer.c	FUNCTION_96	CALL_80
0xc806	          0x4889c7	                            mov rdi, rax	      3899	sequencer.c	FUNCTION_96	CALL_80
0xc809	      0xe800000000	                          call 0x400c84e	      3899	sequencer.c	FUNCTION_96	CALL_80
0xc80e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3900	sequencer.c	FUNCTION_96	CALL_81
0xc815	        0x4883c030	                           add rax, 0x30	      3900	sequencer.c	FUNCTION_96	CALL_81
0xc819	      0xbe01000000	                              mov esi, 1	      3900	sequencer.c	FUNCTION_96	CALL_81
0xc81e	          0x4889c7	                            mov rdi, rax	      3900	sequencer.c	FUNCTION_96	CALL_81
0xc821	      0xe800000000	                          call 0x400c866	      3900	sequencer.c	FUNCTION_96	CALL_81
0xc826	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3901	sequencer.c	FUNCTION_96	CALL_82
0xc82d	        0x4883c060	                           add rax, 0x60	      3901	sequencer.c	FUNCTION_96	CALL_82
0xc831	          0x4889c7	                            mov rdi, rax	      3901	sequencer.c	FUNCTION_96	CALL_82
0xc834	      0xe800000000	                          call 0x400c879	      3901	sequencer.c	FUNCTION_96	CALL_82
0xc839	      0xb800000000	                              mov eax, 0	      3903	sequencer.c	FUNCTION_96
0xc83e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3904	sequencer.c	FUNCTION_96
0xc842	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3904	sequencer.c	FUNCTION_96
0xc84b	            0x7405	                            je 0x400c892	      3904	sequencer.c	FUNCTION_96
0xc84d	      0xe800000000	                          call 0x400c892	      3904	sequencer.c	FUNCTION_96
0xc852	    0x4881c4a80200	                          add rsp, 0x2a8	      3904	sequencer.c	FUNCTION_96
0xc859	              0x5b	                                 pop rbx	      3904	sequencer.c	FUNCTION_96
0xc85a	              0x5d	                                 pop rbp	      3904	sequencer.c	FUNCTION_96
0xc85b	              0xc3	                                     ret	      3904	sequencer.c	FUNCTION_96
strbuf_setlen	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,2:WHILE,0:CALL,2	43
0x12d	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_109
0x12e	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_109
0x131	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_109
0x135	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_109
0x139	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_109
0x13d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_109	IF_1
0x141	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_109	IF_1
0x144	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_109	IF_1
0x147	            0x740d	                            je 0x4000196	       162	strbuf.h	FUNCTION_109	IF_1
0x149	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_109	IF_1
0x14d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_109	IF_1
0x150	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_109	IF_1
0x154	            0xeb05	                           jmp 0x400019b	       162	strbuf.h	FUNCTION_109	IF_1
0x156	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_109	IF_1
0x15b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_109	IF_1
0x15f	            0x730f	                           jae 0x40001b0	       162	strbuf.h	FUNCTION_109	IF_1
0x161	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_109	CALL_1
0x166	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_109	CALL_1
0x16b	      0xe800000000	                          call 0x40001b0	       163	strbuf.h	FUNCTION_109	CALL_1
0x170	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_109
0x174	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_109
0x178	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_109
0x17c	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_109	IF_2
0x180	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_109	IF_2
0x184	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x18a	            0x7414	                            je 0x40001e0	       165	strbuf.h	FUNCTION_109	IF_2
0x18c	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_109	IF_2
0x190	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_109	IF_2
0x194	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_109	IF_2
0x198	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_109	IF_2
0x19b	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x19e	            0xeb24	                           jmp 0x4000204	       169	strbuf.h	FUNCTION_109
0x1a0	     0xfb605000000	           movzx eax, byte [0x040001e7] 	       168	strbuf.h	FUNCTION_109	CALL_2
0x1a7	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_109	CALL_2
0x1a9	            0x7419	                            je 0x4000204	       168	strbuf.h	FUNCTION_109	CALL_2
0x1ab	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x1b0	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_109	CALL_2
0x1b5	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x1ba	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x1bf	      0xe800000000	                          call 0x4000204	       168	strbuf.h	FUNCTION_109	CALL_2
0x1c4	              0x90	                                     nop	       169	strbuf.h	FUNCTION_109
0x1c5	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_109
0x1c6	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_109
message_is_empty	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,1	19
0x2702	              0x55	                                push rbp	       815	sequencer.c	FUNCTION_28
0x2703	          0x4889e5	                            mov rbp, rsp	       815	sequencer.c	FUNCTION_28
0x2706	        0x4883ec10	                           sub rsp, 0x10	       815	sequencer.c	FUNCTION_28
0x270a	        0x48897df8	                mov qword [rbp - 8], rdi	       815	sequencer.c	FUNCTION_28
0x270e	          0x8975f4	              mov dword [rbp - 0xc], esi	       815	sequencer.c	FUNCTION_28
0x2711	        0x837df401	                cmp dword [rbp - 0xc], 1	       816	sequencer.c	FUNCTION_28	IF_1
0x2715	            0x7514	                           jne 0x400276b	       816	sequencer.c	FUNCTION_28	IF_1
0x2717	        0x488b45f8	                mov rax, qword [rbp - 8]	       816	sequencer.c	FUNCTION_28	IF_1
0x271b	        0x488b4008	                mov rax, qword [rax + 8]	       816	sequencer.c	FUNCTION_28	IF_1
0x271f	          0x4885c0	                           test rax, rax	       816	sequencer.c	FUNCTION_28	IF_1
0x2722	            0x7407	                            je 0x400276b	       816	sequencer.c	FUNCTION_28	IF_1
0x2724	      0xb800000000	                              mov eax, 0	       817	sequencer.c	FUNCTION_28	IF_1
0x2729	            0xeb11	                           jmp 0x400277c	       817	sequencer.c	FUNCTION_28	IF_1
0x272b	        0x488b45f8	                mov rax, qword [rbp - 8]	       818	sequencer.c	FUNCTION_28	CALL_1
0x272f	      0xbe00000000	                              mov esi, 0	       818	sequencer.c	FUNCTION_28	CALL_1
0x2734	          0x4889c7	                            mov rdi, rax	       818	sequencer.c	FUNCTION_28	CALL_1
0x2737	      0xe8bbfeffff	                  call sym.rest_is_empty	       818	sequencer.c	FUNCTION_28	CALL_1
0x273c	              0xc9	                                   leave	       819	sequencer.c	FUNCTION_28
0x273d	              0xc3	                                     ret	       819	sequencer.c	FUNCTION_28
is_noop	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,0	8
0x3c3f	              0x55	                                push rbp	      1357	sequencer.c	FUNCTION_43
0x3c40	          0x4889e5	                            mov rbp, rsp	      1357	sequencer.c	FUNCTION_43
0x3c43	          0x897dfc	                mov dword [rbp - 4], edi	      1357	sequencer.c	FUNCTION_43
0x3c46	        0x837dfc09	                  cmp dword [rbp - 4], 9	      1358	sequencer.c	FUNCTION_43
0x3c4a	           0xf97c0	                                 seta al	      1358	sequencer.c	FUNCTION_43
0x3c4d	           0xfb6c0	                           movzx eax, al	      1358	sequencer.c	FUNCTION_43
0x3c50	              0x5d	                                 pop rbp	      1359	sequencer.c	FUNCTION_43
0x3c51	              0xc3	                                     ret	      1359	sequencer.c	FUNCTION_43
continue_single_pick	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,7	35
0xa53c	              0x55	                                push rbp	      3242	sequencer.c	FUNCTION_88
0xa53d	          0x4889e5	                            mov rbp, rsp	      3242	sequencer.c	FUNCTION_88
0xa540	        0x4883ec20	                           sub rsp, 0x20	      3242	sequencer.c	FUNCTION_88
0xa544	    0x64488b042528	                mov rax, qword fs:[0x28]	      3242	sequencer.c	FUNCTION_88
0xa54d	        0x488945f8	                mov qword [rbp - 8], rax	      3242	sequencer.c	FUNCTION_88
0xa551	            0x31c0	                            xor eax, eax	      3242	sequencer.c	FUNCTION_88
0xa553	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3243	sequencer.c	FUNCTION_88
0xa55b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      3243	sequencer.c	FUNCTION_88
0xa563	      0xe800000000	                          call 0x400a5a8	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0xa568	          0x4889c7	                            mov rdi, rax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0xa56b	      0xe800000000	                          call 0x400a5b0	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0xa570	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0xa572	            0x752f	                           jne 0x400a5e3	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0xa574	      0xe800000000	                          call 0x400a5b9	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0xa579	          0x4889c7	                            mov rdi, rax	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0xa57c	      0xe800000000	                          call 0x400a5c1	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0xa581	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0xa583	            0x751e	                           jne 0x400a5e3	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0xa585	      0xbf00000000	                              mov edi, 0	      3247	sequencer.c	FUNCTION_88	CALL_6
0xa58a	      0xe8d85dffff	                               call sym.	      3247	sequencer.c	FUNCTION_88	CALL_6
0xa58f	          0x4889c7	                            mov rdi, rax	      3247	sequencer.c	FUNCTION_88	CALL_6
0xa592	      0xb800000000	                              mov eax, 0	      3247	sequencer.c	FUNCTION_88	CALL_6
0xa597	      0xe800000000	                          call 0x400a5dc	      3247	sequencer.c	FUNCTION_88	CALL_6
0xa59c	      0xe85f5affff	                    call sym.const_error	      3247	sequencer.c	FUNCTION_88	CALL_6
0xa5a1	            0xeb11	                           jmp 0x400a5f4	      3247	sequencer.c	FUNCTION_88	CALL_6
0xa5a3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3248	sequencer.c	FUNCTION_88	CALL_7
0xa5a7	      0xbe02000000	                              mov esi, 2	      3248	sequencer.c	FUNCTION_88	CALL_7
0xa5ac	          0x4889c7	                            mov rdi, rax	      3248	sequencer.c	FUNCTION_88	CALL_7
0xa5af	      0xe800000000	                          call 0x400a5f4	      3248	sequencer.c	FUNCTION_88	CALL_7
0xa5b4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3249	sequencer.c	FUNCTION_88
0xa5b8	    0x644833142528	                xor rdx, qword fs:[0x28]	      3249	sequencer.c	FUNCTION_88
0xa5c1	            0x7405	                            je 0x400a608	      3249	sequencer.c	FUNCTION_88
0xa5c3	      0xe800000000	                          call 0x400a608	      3249	sequencer.c	FUNCTION_88
0xa5c8	              0xc9	                                   leave	      3249	sequencer.c	FUNCTION_88
0xa5c9	              0xc3	                                     ret	      3249	sequencer.c	FUNCTION_88
read_env_script	FOR,2:SWITCH,0:functions,0:DO,0:ELSE,2:IF,4:WHILE,0:CALL,7	105
0x2077	              0x55	                                push rbp	       647	sequencer.c	FUNCTION_24
0x2078	          0x4889e5	                            mov rbp, rsp	       647	sequencer.c	FUNCTION_24
0x207b	        0x4883ec50	                           sub rsp, 0x50	       647	sequencer.c	FUNCTION_24
0x207f	        0x48897db8	             mov qword [rbp - 0x48], rdi	       647	sequencer.c	FUNCTION_24
0x2083	    0x64488b042528	                mov rax, qword fs:[0x28]	       647	sequencer.c	FUNCTION_24
0x208c	        0x488945f8	                mov qword [rbp - 8], rax	       647	sequencer.c	FUNCTION_24
0x2090	            0x31c0	                            xor eax, eax	       647	sequencer.c	FUNCTION_24
0x2092	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       648	sequencer.c	FUNCTION_24
0x209a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       648	sequencer.c	FUNCTION_24
0x20a2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       648	sequencer.c	FUNCTION_24
0x20aa	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       649	sequencer.c	FUNCTION_24
0x20b1	      0xe8f1e6ffff	      call sym.rebase_path_author_script	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20b6	          0x4889c1	                            mov rcx, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20b9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20bd	      0xba00010000	                          mov edx, 0x100	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20c2	          0x4889ce	                            mov rsi, rcx	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20c5	          0x4889c7	                            mov rdi, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20c8	      0xe800000000	                          call 0x400210d	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20cd	          0x4885c0	                           test rax, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20d0	            0x7f0a	                            jg 0x400211c	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x20d2	      0xb8ffffffff	                     mov eax, 0xffffffff	       653	sequencer.c	FUNCTION_24	IF_1
0x20d7	      0xe91c010000	                           jmp 0x4002238	       653	sequencer.c	FUNCTION_24	IF_1
0x20dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       655	sequencer.c	FUNCTION_24	FOR_1
0x20e0	        0x488945d8	             mov qword [rbp - 0x28], rax	       655	sequencer.c	FUNCTION_24	FOR_1
0x20e4	      0xe9b7000000	                           jmp 0x40021e0	       655	sequencer.c	FUNCTION_24	FOR_1
0x20e9	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x20ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x20f1	      0xbe00000000	                              mov esi, 0	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x20f6	          0x4889c7	                            mov rdi, rax	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x20f9	      0xe80ddfffff	                    call sym.skip_prefix	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x20fe	            0x85c0	                           test eax, eax	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x2100	            0x743e	                            je 0x4002180	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x2102	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2106	          0x4889c2	                            mov rdx, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2109	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x210d	          0x4829c2	                            sub rdx, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2110	          0x4889d0	                            mov rax, rdx	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2113	          0x4889c7	                            mov rdi, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2116	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x211a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x211e	          0x4829d0	                            sub rax, rdx	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2121	          0x4889c6	                            mov rsi, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2124	        0x488d45e0	                   lea rax, [rbp - 0x20]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2128	    0x41b801000000	                              mov r8d, 1	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x212e	      0xb900000000	                              mov ecx, 0	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2133	          0x4889fa	                            mov rdx, rdi	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2136	          0x4889c7	                            mov rdi, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2139	      0xe800000000	                          call 0x400217e	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x213e	            0xeb5b	                           jmp 0x40021db	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x2140	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2144	           0xfb600	                   movzx eax, byte [rax]	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2147	            0x3c27	                            cmp al, 0x27	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2149	            0x753a	                           jne 0x40021c5	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x214b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x214f	        0x488d50ff	                      lea rdx, [rax - 1]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2153	        0x488955d8	             mov qword [rbp - 0x28], rdx	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2157	          0x4889c2	                            mov rdx, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x215a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x215e	          0x4829c2	                            sub rdx, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2161	          0x4889d0	                            mov rax, rdx	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2164	          0x4889c6	                            mov rsi, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2167	        0x488d45e0	                   lea rax, [rbp - 0x20]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x216b	    0x41b800000000	                              mov r8d, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2171	      0xb900000000	                              mov ecx, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2176	      0xba01000000	                              mov edx, 1	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x217b	          0x4889c7	                            mov rdi, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x217e	      0xe800000000	                          call 0x40021c3	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2183	            0xeb16	                           jmp 0x40021db	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x2185	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x2189	           0xfb600	                   movzx eax, byte [rax]	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x218c	            0x3c0a	                             cmp al, 0xa	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x218e	            0x750b	                           jne 0x40021db	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x2190	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       661	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x2194	          0xc60000	                       mov byte [rax], 0	       661	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x2197	        0x8345cc01	               add dword [rbp - 0x34], 1	       662	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x219b	      0x488345d801	               add qword [rbp - 0x28], 1	       655	sequencer.c	FUNCTION_24	FOR_1
0x21a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       655	sequencer.c	FUNCTION_24	FOR_1
0x21a4	           0xfb600	                   movzx eax, byte [rax]	       655	sequencer.c	FUNCTION_24	FOR_1
0x21a7	            0x84c0	                             test al, al	       655	sequencer.c	FUNCTION_24	FOR_1
0x21a9	     0xf853affffff	                           jne 0x4002129	       655	sequencer.c	FUNCTION_24	FOR_1
0x21af	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       665	sequencer.c	FUNCTION_24	FOR_2
0x21b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       665	sequencer.c	FUNCTION_24	FOR_2
0x21ba	        0x488945d8	             mov qword [rbp - 0x28], rax	       665	sequencer.c	FUNCTION_24	FOR_2
0x21be	            0xeb2b	                           jmp 0x400222b	       665	sequencer.c	FUNCTION_24	FOR_2
0x21c0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x21c4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x21c8	          0x4889d6	                            mov rsi, rdx	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x21cb	          0x4889c7	                            mov rdi, rax	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x21ce	      0xe800000000	                          call 0x4002213	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x21d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x21d7	          0x4889c7	                            mov rdi, rax	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x21da	      0xe800000000	                          call 0x400221f	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x21df	        0x4883c001	                              add rax, 1	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x21e3	        0x480145d8	            add qword [rbp - 0x28], rax 	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x21e7	        0x8345c801	               add dword [rbp - 0x38], 1	       665	sequencer.c	FUNCTION_24	FOR_2
0x21eb	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       665	sequencer.c	FUNCTION_24	FOR_2
0x21ee	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       665	sequencer.c	FUNCTION_24	FOR_2
0x21f1	            0x7ccd	                            jl 0x4002200	       665	sequencer.c	FUNCTION_24	FOR_2
0x21f3	      0xb800000000	                              mov eax, 0	       670	sequencer.c	FUNCTION_24
0x21f8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       671	sequencer.c	FUNCTION_24
0x21fc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       671	sequencer.c	FUNCTION_24
0x2205	            0x7405	                            je 0x400224c	       671	sequencer.c	FUNCTION_24
0x2207	      0xe800000000	                          call 0x400224c	       671	sequencer.c	FUNCTION_24
0x220c	              0xc9	                                   leave	       671	sequencer.c	FUNCTION_24
0x220d	              0xc3	                                     ret	       671	sequencer.c	FUNCTION_24
run_git_commit	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,2:IF,15:WHILE,0:CALL,21	212
0x2279	              0x55	                                push rbp	       719	sequencer.c	FUNCTION_26
0x227a	          0x4889e5	                            mov rbp, rsp	       719	sequencer.c	FUNCTION_26
0x227d	    0x4881ecd00000	                           sub rsp, 0xd0	       719	sequencer.c	FUNCTION_26
0x2284	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       719	sequencer.c	FUNCTION_26
0x228b	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       719	sequencer.c	FUNCTION_26
0x2292	    0x89953cffffff	             mov dword [rbp - 0xc4], edx	       719	sequencer.c	FUNCTION_26
0x2298	    0x64488b042528	                mov rax, qword fs:[0x28]	       719	sequencer.c	FUNCTION_26
0x22a1	        0x488945f8	                mov qword [rbp - 8], rax	       719	sequencer.c	FUNCTION_26
0x22a5	            0x31c0	                            xor eax, eax	       719	sequencer.c	FUNCTION_26
0x22a7	        0x488d5590	                   lea rdx, [rbp - 0x70]	       720	sequencer.c	FUNCTION_26
0x22ab	      0xb800000000	                              mov eax, 0	       720	sequencer.c	FUNCTION_26
0x22b0	      0xb90c000000	                            mov ecx, 0xc	       720	sequencer.c	FUNCTION_26
0x22b5	          0x4889d7	                            mov rdi, rdx	       720	sequencer.c	FUNCTION_26
0x22b8	          0xf348ab	              rep stosq qword [rdi], rax	       720	sequencer.c	FUNCTION_26
0x22bb	    0x48c745980000	               mov qword [rbp - 0x68], 0	       720	sequencer.c	FUNCTION_26
0x22c3	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       720	sequencer.c	FUNCTION_26
0x22cb	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       723	sequencer.c	FUNCTION_26
0x22cf	          0x83c808	                               or eax, 8	       723	sequencer.c	FUNCTION_26
0x22d2	          0x8845d8	               mov byte [rbp - 0x28], al	       723	sequencer.c	FUNCTION_26
0x22d5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x22dc	          0x4889c7	                            mov rdi, rax	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x22df	      0xe8a4e9ffff	                    call sym.is_rebase_i	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x22e4	            0x85c0	                           test eax, eax	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x22e6	            0x747d	                            je 0x40023a5	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x22e8	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x22ee	          0x83e002	                              and eax, 2	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x22f1	            0x85c0	                           test eax, eax	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x22f3	            0x7511	                           jne 0x4002346	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x22f5	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x22f9	          0x83c820	                            or eax, 0x20	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x22fc	          0x8845d8	               mov byte [rbp - 0x28], al	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x22ff	    0xc745c4ffffff	     mov dword [rbp - 0x3c], 0xffffffff 	       728	sequencer.c	FUNCTION_26	IF_1	IF_2
0x2306	        0x488d4590	                   lea rax, [rbp - 0x70]	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x230a	        0x4883c018	                           add rax, 0x18	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x230e	          0x4889c7	                            mov rdi, rax	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x2311	      0xe861fdffff	                call sym.read_env_script	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x2316	            0x85c0	                           test eax, eax	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x2318	            0x744b	                            je 0x40023a5	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x231a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x2321	          0x4889c7	                            mov rdi, rax	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x2324	      0xe8e1eaffff	            call sym.gpg_sign_opt_quoted	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x2329	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x2330	      0xbf00000000	                              mov edi, 0	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x2335	      0xe82de0ffff	                               call sym.	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x233a	          0x4889c1	                            mov rcx, rax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x233d	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x2344	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x234b	          0x4889c6	                            mov rsi, rax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x234e	          0x4889cf	                            mov rdi, rcx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x2351	      0xb800000000	                              mov eax, 0	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x2356	      0xe800000000	                          call 0x400239b	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x235b	      0xe8a0dcffff	                    call sym.const_error	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x2360	      0xe97c020000	                           jmp 0x4002621	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_5
0x2365	        0x488d4590	                   lea rax, [rbp - 0x70]	       739	sequencer.c	FUNCTION_26	CALL_6
0x2369	        0x4883c008	                              add rax, 8	       739	sequencer.c	FUNCTION_26	CALL_6
0x236d	      0xbe00000000	                              mov esi, 0	       739	sequencer.c	FUNCTION_26	CALL_6
0x2372	          0x4889c7	                            mov rdi, rax	       739	sequencer.c	FUNCTION_26	CALL_6
0x2375	      0xe800000000	                          call 0x40023ba	       739	sequencer.c	FUNCTION_26	CALL_6
0x237a	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       741	sequencer.c	FUNCTION_26	IF_4
0x2380	          0x83e010	                           and eax, 0x10	       741	sequencer.c	FUNCTION_26	IF_4
0x2383	            0x85c0	                           test eax, eax	       741	sequencer.c	FUNCTION_26	IF_4
0x2385	            0x7515	                           jne 0x40023dc	       741	sequencer.c	FUNCTION_26	IF_4
0x2387	        0x488d4590	                   lea rax, [rbp - 0x70]	       742	sequencer.c	FUNCTION_26	CALL_7
0x238b	        0x4883c008	                              add rax, 8	       742	sequencer.c	FUNCTION_26	CALL_7
0x238f	      0xbe00000000	                              mov esi, 0	       742	sequencer.c	FUNCTION_26	CALL_7
0x2394	          0x4889c7	                            mov rdi, rax	       742	sequencer.c	FUNCTION_26	CALL_7
0x2397	      0xe800000000	                          call 0x40023dc	       742	sequencer.c	FUNCTION_26	CALL_7
0x239c	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       743	sequencer.c	FUNCTION_26	IF_5
0x23a2	          0x83e004	                              and eax, 4	       743	sequencer.c	FUNCTION_26	IF_5
0x23a5	            0x85c0	                           test eax, eax	       743	sequencer.c	FUNCTION_26	IF_5
0x23a7	            0x7415	                            je 0x40023fe	       743	sequencer.c	FUNCTION_26	IF_5
0x23a9	        0x488d4590	                   lea rax, [rbp - 0x70]	       744	sequencer.c	FUNCTION_26	CALL_8
0x23ad	        0x4883c008	                              add rax, 8	       744	sequencer.c	FUNCTION_26	CALL_8
0x23b1	      0xbe00000000	                              mov esi, 0	       744	sequencer.c	FUNCTION_26	CALL_8
0x23b6	          0x4889c7	                            mov rdi, rax	       744	sequencer.c	FUNCTION_26	CALL_8
0x23b9	      0xe800000000	                          call 0x40023fe	       744	sequencer.c	FUNCTION_26	CALL_8
0x23be	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       745	sequencer.c	FUNCTION_26	IF_6
0x23c5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       745	sequencer.c	FUNCTION_26	IF_6
0x23c9	          0x4885c0	                           test rax, rax	       745	sequencer.c	FUNCTION_26	IF_6
0x23cc	            0x7428	                            je 0x4002436	       745	sequencer.c	FUNCTION_26	IF_6
0x23ce	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       746	sequencer.c	FUNCTION_26	CALL_9
0x23d5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       746	sequencer.c	FUNCTION_26	CALL_9
0x23d9	        0x488d5590	                   lea rdx, [rbp - 0x70]	       746	sequencer.c	FUNCTION_26	CALL_9
0x23dd	        0x488d4a08	                      lea rcx, [rdx + 8]	       746	sequencer.c	FUNCTION_26	CALL_9
0x23e1	          0x4889c2	                            mov rdx, rax	       746	sequencer.c	FUNCTION_26	CALL_9
0x23e4	      0xbe00000000	                              mov esi, 0	       746	sequencer.c	FUNCTION_26	CALL_9
0x23e9	          0x4889cf	                            mov rdi, rcx	       746	sequencer.c	FUNCTION_26	CALL_9
0x23ec	      0xb800000000	                              mov eax, 0	       746	sequencer.c	FUNCTION_26	CALL_9
0x23f1	      0xe800000000	                          call 0x4002436	       746	sequencer.c	FUNCTION_26	CALL_9
0x23f6	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       747	sequencer.c	FUNCTION_26	IF_7
0x23fe	            0x7428	                            je 0x4002468	       747	sequencer.c	FUNCTION_26	IF_7
0x2400	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       748	sequencer.c	FUNCTION_26	CALL_10
0x2407	        0x488d5590	                   lea rdx, [rbp - 0x70]	       748	sequencer.c	FUNCTION_26	CALL_10
0x240b	        0x488d7a08	                      lea rdi, [rdx + 8]	       748	sequencer.c	FUNCTION_26	CALL_10
0x240f	      0xb900000000	                              mov ecx, 0	       748	sequencer.c	FUNCTION_26	CALL_10
0x2414	          0x4889c2	                            mov rdx, rax	       748	sequencer.c	FUNCTION_26	CALL_10
0x2417	      0xbe00000000	                              mov esi, 0	       748	sequencer.c	FUNCTION_26	CALL_10
0x241c	      0xb800000000	                              mov eax, 0	       748	sequencer.c	FUNCTION_26	CALL_10
0x2421	      0xe800000000	                          call 0x4002466	       748	sequencer.c	FUNCTION_26	CALL_10
0x2426	            0xeb31	                           jmp 0x4002499	       748	sequencer.c	FUNCTION_26	CALL_10
0x2428	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x242e	          0x83e002	                              and eax, 2	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2431	            0x85c0	                           test eax, eax	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2433	            0x7524	                           jne 0x4002499	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2435	        0x488d4590	                   lea rax, [rbp - 0x70]	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2439	        0x4883c008	                              add rax, 8	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x243d	      0xb900000000	                              mov ecx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2442	      0xba00000000	                              mov edx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2447	      0xbe00000000	                              mov esi, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x244c	          0x4889c7	                            mov rdi, rax	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x244f	      0xb800000000	                              mov eax, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2454	      0xe800000000	                          call 0x4002499	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x2459	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       751	sequencer.c	FUNCTION_26	IF_9
0x245f	          0x83e008	                              and eax, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x2462	            0x85c0	                           test eax, eax	       751	sequencer.c	FUNCTION_26	IF_9
0x2464	            0x7415	                            je 0x40024bb	       751	sequencer.c	FUNCTION_26	IF_9
0x2466	        0x488d4590	                   lea rax, [rbp - 0x70]	       752	sequencer.c	FUNCTION_26	CALL_12
0x246a	        0x4883c008	                              add rax, 8	       752	sequencer.c	FUNCTION_26	CALL_12
0x246e	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_12
0x2473	          0x4889c7	                            mov rdi, rax	       752	sequencer.c	FUNCTION_26	CALL_12
0x2476	      0xe800000000	                          call 0x40024bb	       752	sequencer.c	FUNCTION_26	CALL_12
0x247b	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       753	sequencer.c	FUNCTION_26	IF_10
0x2481	          0x83e002	                              and eax, 2	       753	sequencer.c	FUNCTION_26	IF_10
0x2484	            0x85c0	                           test eax, eax	       753	sequencer.c	FUNCTION_26	IF_10
0x2486	            0x7417	                            je 0x40024df	       753	sequencer.c	FUNCTION_26	IF_10
0x2488	        0x488d4590	                   lea rax, [rbp - 0x70]	       754	sequencer.c	FUNCTION_26	CALL_13
0x248c	        0x4883c008	                              add rax, 8	       754	sequencer.c	FUNCTION_26	CALL_13
0x2490	      0xbe00000000	                              mov esi, 0	       754	sequencer.c	FUNCTION_26	CALL_13
0x2495	          0x4889c7	                            mov rdi, rax	       754	sequencer.c	FUNCTION_26	CALL_13
0x2498	      0xe800000000	                          call 0x40024dd	       754	sequencer.c	FUNCTION_26	CALL_13
0x249d	            0xeb56	                           jmp 0x4002535	       754	sequencer.c	FUNCTION_26	CALL_13
0x249f	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24a5	          0x83e008	                              and eax, 8	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24a8	            0x85c0	                           test eax, eax	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24aa	            0x7549	                           jne 0x4002535	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24ac	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24b3	          0x8b4010	            mov eax, dword [rax + 0x10] 	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24b6	            0x85c0	                           test eax, eax	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24b8	            0x753b	                           jne 0x4002535	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24ba	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24c1	          0x8b4008	                mov eax, dword [rax + 8]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24c4	            0x85c0	                           test eax, eax	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24c6	            0x752d	                           jne 0x4002535	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24c8	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_14
0x24cf	          0x4889c6	                            mov rsi, rax	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_14
0x24d2	      0xbf00000000	                              mov edi, 0	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_14
0x24d7	      0xe800000000	                          call 0x400251c	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_14
0x24dc	            0x85c0	                           test eax, eax	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24de	            0x7415	                            je 0x4002535	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24e0	        0x488d4590	                   lea rax, [rbp - 0x70]	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24e4	        0x4883c008	                              add rax, 8	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24e8	      0xbe00000000	                              mov esi, 0	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24ed	          0x4889c7	                            mov rdi, rax	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24f0	      0xe800000000	                          call 0x4002535	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x24f5	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       760	sequencer.c	FUNCTION_26	IF_12
0x24fb	          0x83e001	                              and eax, 1	       760	sequencer.c	FUNCTION_26	IF_12
0x24fe	            0x85c0	                           test eax, eax	       760	sequencer.c	FUNCTION_26	IF_12
0x2500	            0x7415	                            je 0x4002557	       760	sequencer.c	FUNCTION_26	IF_12
0x2502	        0x488d4590	                   lea rax, [rbp - 0x70]	       761	sequencer.c	FUNCTION_26	CALL_16
0x2506	        0x4883c008	                              add rax, 8	       761	sequencer.c	FUNCTION_26	CALL_16
0x250a	      0xbe00000000	                              mov esi, 0	       761	sequencer.c	FUNCTION_26	CALL_16
0x250f	          0x4889c7	                            mov rdi, rax	       761	sequencer.c	FUNCTION_26	CALL_16
0x2512	      0xe800000000	                          call 0x4002557	       761	sequencer.c	FUNCTION_26	CALL_16
0x2517	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       763	sequencer.c	FUNCTION_26	IF_13
0x251e	          0x8b4020	            mov eax, dword [rax + 0x20] 	       763	sequencer.c	FUNCTION_26	IF_13
0x2521	            0x85c0	                           test eax, eax	       763	sequencer.c	FUNCTION_26	IF_13
0x2523	            0x7415	                            je 0x400257a	       763	sequencer.c	FUNCTION_26	IF_13
0x2525	        0x488d4590	                   lea rax, [rbp - 0x70]	       764	sequencer.c	FUNCTION_26	CALL_17
0x2529	        0x4883c008	                              add rax, 8	       764	sequencer.c	FUNCTION_26	CALL_17
0x252d	      0xbe00000000	                              mov esi, 0	       764	sequencer.c	FUNCTION_26	CALL_17
0x2532	          0x4889c7	                            mov rdi, rax	       764	sequencer.c	FUNCTION_26	CALL_17
0x2535	      0xe800000000	                          call 0x400257a	       764	sequencer.c	FUNCTION_26	CALL_17
0x253a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       766	sequencer.c	FUNCTION_26	IF_14
0x253d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       766	sequencer.c	FUNCTION_26	IF_14
0x2540	     0xf858f000000	                           jne 0x4002615	       766	sequencer.c	FUNCTION_26	IF_14
0x2546	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x2551	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x255c	    0x48c745800000	               mov qword [rbp - 0x80], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x2564	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x256b	        0x488d4590	                   lea rax, [rbp - 0x70]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x256f	        0x4883ec08	                              sub rsp, 8	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2573	            0x6a00	                                  push 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2575	          0x4989d1	                             mov r9, rdx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2578	    0x41b800000000	                              mov r8d, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x257e	      0xb900000000	                              mov ecx, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2583	      0xba00000000	                              mov edx, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2588	      0xbe00000000	                              mov esi, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x258d	          0x4889c7	                            mov rdi, rax	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2590	      0xe800000000	                          call 0x40025d5	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2595	        0x4883c410	                           add rsp, 0x10	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x2599	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       769	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x259f	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x25a6	            0x7416	                            je 0x40025fe	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x25a8	    0x488b15000000	            mov rdx, qword [0x040025ef] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x25af	        0x488b4580	             mov rax, qword [rbp - 0x80]	       775	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x25b3	          0x4889d6	                            mov rsi, rdx	       775	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x25b6	          0x4889c7	                            mov rdi, rax	       775	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x25b9	      0xe800000000	                          call 0x40025fe	       775	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x25be	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       776	sequencer.c	FUNCTION_26	IF_14	CALL_20
0x25c5	          0x4889c7	                            mov rdi, rax	       776	sequencer.c	FUNCTION_26	IF_14	CALL_20
0x25c8	      0xe800000000	                          call 0x400260d	       776	sequencer.c	FUNCTION_26	IF_14	CALL_20
0x25cd	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       777	sequencer.c	FUNCTION_26	IF_14
0x25d3	            0xeb0c	                           jmp 0x4002621	       777	sequencer.c	FUNCTION_26	IF_14
0x25d5	        0x488d4590	                   lea rax, [rbp - 0x70]	       780	sequencer.c	FUNCTION_26	CALL_21
0x25d9	          0x4889c7	                            mov rdi, rax	       780	sequencer.c	FUNCTION_26	CALL_21
0x25dc	      0xe800000000	                          call 0x4002621	       780	sequencer.c	FUNCTION_26	CALL_21
0x25e1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       781	sequencer.c	FUNCTION_26
0x25e5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       781	sequencer.c	FUNCTION_26
0x25ee	            0x7405	                            je 0x4002635	       781	sequencer.c	FUNCTION_26
0x25f0	      0xe800000000	                          call 0x4002635	       781	sequencer.c	FUNCTION_26
0x25f5	              0xc9	                                   leave	       781	sequencer.c	FUNCTION_26
0x25f6	              0xc3	                                     ret	       781	sequencer.c	FUNCTION_26
hashmap_entry_init	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,0	14
0x2dc	              0x55	                                push rbp	       246	hashmap.h	FUNCTION_156
0x2dd	          0x4889e5	                            mov rbp, rsp	       246	hashmap.h	FUNCTION_156
0x2e0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	hashmap.h	FUNCTION_156
0x2e4	          0x8975e4	             mov dword [rbp - 0x1c], esi	       246	hashmap.h	FUNCTION_156
0x2e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	hashmap.h	FUNCTION_156
0x2eb	        0x488945f8	                mov qword [rbp - 8], rax	       247	hashmap.h	FUNCTION_156
0x2ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	hashmap.h	FUNCTION_156
0x2f3	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       248	hashmap.h	FUNCTION_156
0x2f6	          0x895008	                mov dword [rax + 8], edx	       248	hashmap.h	FUNCTION_156
0x2f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	hashmap.h	FUNCTION_156
0x2fd	    0x48c700000000	                      mov qword [rax], 0	       249	hashmap.h	FUNCTION_156
0x304	              0x90	                                     nop	       250	hashmap.h	FUNCTION_156
0x305	              0x5d	                                 pop rbp	       250	hashmap.h	FUNCTION_156
0x306	              0xc3	                                     ret	       250	hashmap.h	FUNCTION_156
strbuf_complete_line	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	11
0x2bc	              0x55	                                push rbp	       600	strbuf.h	FUNCTION_117
0x2bd	          0x4889e5	                            mov rbp, rsp	       600	strbuf.h	FUNCTION_117
0x2c0	        0x4883ec10	                           sub rsp, 0x10	       600	strbuf.h	FUNCTION_117
0x2c4	        0x48897df8	                mov qword [rbp - 8], rdi	       600	strbuf.h	FUNCTION_117
0x2c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.h	FUNCTION_117	CALL_1
0x2cc	      0xbe0a000000	                            mov esi, 0xa	       601	strbuf.h	FUNCTION_117	CALL_1
0x2d1	          0x4889c7	                            mov rdi, rax	       601	strbuf.h	FUNCTION_117	CALL_1
0x2d4	      0xe891ffffff	                call sym.strbuf_complete	       601	strbuf.h	FUNCTION_117	CALL_1
0x2d9	              0x90	                                     nop	       602	strbuf.h	FUNCTION_117
0x2da	              0xc9	                                   leave	       602	strbuf.h	FUNCTION_117
0x2db	              0xc3	                                     ret	       602	strbuf.h	FUNCTION_117
walk_revs_populate_todo	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,1:CALL,8	92
0x6863	              0x55	                                push rbp	      2164	sequencer.c	FUNCTION_65
0x6864	          0x4889e5	                            mov rbp, rsp	      2164	sequencer.c	FUNCTION_65
0x6867	              0x53	                                push rbx	      2164	sequencer.c	FUNCTION_65
0x6868	        0x4883ec58	                           sub rsp, 0x58	      2164	sequencer.c	FUNCTION_65
0x686c	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2164	sequencer.c	FUNCTION_65
0x6870	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2164	sequencer.c	FUNCTION_65
0x6874	    0x64488b042528	                mov rax, qword fs:[0x28]	      2164	sequencer.c	FUNCTION_65
0x687d	        0x488945e8	             mov qword [rbp - 0x18], rax	      2164	sequencer.c	FUNCTION_65
0x6881	            0x31c0	                            xor eax, eax	      2164	sequencer.c	FUNCTION_65
0x6883	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2165	sequencer.c	FUNCTION_65
0x6887	            0x8b00	                    mov eax, dword [rax]	      2165	sequencer.c	FUNCTION_65
0x6889	          0x83f801	                              cmp eax, 1	      2166	sequencer.c	FUNCTION_65
0x688c	           0xf95c0	                                setne al	      2166	sequencer.c	FUNCTION_65
0x688f	           0xfb6c0	                           movzx eax, al	      2165	sequencer.c	FUNCTION_65
0x6892	          0x8945b8	             mov dword [rbp - 0x48], eax	      2165	sequencer.c	FUNCTION_65
0x6895	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2167	sequencer.c	FUNCTION_65
0x6898	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x689c	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x68a2	          0x488b00	                    mov rax, qword [rax]	      2167	sequencer.c	FUNCTION_65
0x68a5	        0x488945c8	             mov qword [rbp - 0x38], rax	      2167	sequencer.c	FUNCTION_65
0x68a9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x68ad	          0x4889c7	                            mov rdi, rax	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x68b0	      0xe8c6e8ffff	                   call sym.prepare_revs	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x68b5	            0x85c0	                           test eax, eax	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x68b7	     0xf84cd000000	                            je 0x40069ca	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x68bd	      0xb8ffffffff	                     mov eax, 0xffffffff	      2171	sequencer.c	FUNCTION_65	IF_1
0x68c2	      0xe9ea000000	                           jmp 0x40069f1	      2171	sequencer.c	FUNCTION_65	IF_1
0x68c7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x68cb	          0x4889c7	                            mov rdi, rax	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x68ce	      0xe8efeaffff	                call sym.append_new_todo	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x68d3	        0x488945d8	             mov qword [rbp - 0x28], rax	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x68d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x68db	      0xbe00000000	                              mov esi, 0	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x68e0	          0x4889c7	                            mov rdi, rax	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x68e3	      0xe800000000	                          call 0x4006928	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x68e8	        0x488945e0	             mov qword [rbp - 0x20], rax	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x68ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x68f0	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x68f3	            0x8910	                    mov dword [rax], edx	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x68f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x68f9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x68fd	        0x48895008	                mov qword [rax + 8], rdx	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x6901	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2181	sequencer.c	FUNCTION_65	WHILE_1
0x6905	    0x48c740180000	               mov qword [rax + 0x18], 0	      2181	sequencer.c	FUNCTION_65	WHILE_1
0x690d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2182	sequencer.c	FUNCTION_65	WHILE_1
0x6911	    0xc74020000000	               mov dword [rax + 0x20], 0	      2182	sequencer.c	FUNCTION_65	WHILE_1
0x6918	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x691c	        0x488b5008	                mov rdx, qword [rax + 8]	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x6920	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x6924	        0x48895028	             mov qword [rax + 0x28], rdx	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x6928	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x692c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x6930	          0x4889d6	                            mov rsi, rdx	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x6933	          0x4889c7	                            mov rdi, rax	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x6936	      0xe800000000	                          call 0x400697b	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x693b	          0x8945bc	             mov dword [rbp - 0x44], eax	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x693e	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6942	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6946	          0x4889c7	                            mov rdi, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6949	      0xe850a7ffff	              call sym.short_commit_name	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x694e	          0x4889c6	                            mov rsi, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6951	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6955	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6958	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x695c	          0x4989d9	                             mov r9, rbx	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x695f	          0x4189c8	                            mov r8d, ecx	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6962	          0x4889f1	                            mov rcx, rsi	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6965	      0xbe00000000	                              mov esi, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x696a	          0x4889c7	                            mov rdi, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x696d	      0xb800000000	                              mov eax, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6972	      0xe800000000	                          call 0x40069b7	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x6977	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x697b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x697f	          0x4889d6	                            mov rsi, rdx	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x6982	          0x4889c7	                            mov rdi, rax	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x6985	      0xe800000000	                          call 0x40069ca	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x698a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x698e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x6995	          0x4889c7	                            mov rdi, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x6998	      0xe800000000	                          call 0x40069dd	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x699d	        0x488945d0	             mov qword [rbp - 0x30], rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x69a1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x69a6	     0xf851bffffff	                           jne 0x4006907	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x69ac	      0xb800000000	                              mov eax, 0	      2189	sequencer.c	FUNCTION_65
0x69b1	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2190	sequencer.c	FUNCTION_65
0x69b5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2190	sequencer.c	FUNCTION_65
0x69be	            0x7405	                            je 0x4006a05	      2190	sequencer.c	FUNCTION_65
0x69c0	      0xe800000000	                          call 0x4006a05	      2190	sequencer.c	FUNCTION_65
0x69c5	        0x4883c458	                           add rsp, 0x58	      2190	sequencer.c	FUNCTION_65
0x69c9	              0x5b	                                 pop rbx	      2190	sequencer.c	FUNCTION_65
0x69ca	              0x5d	                                 pop rbp	      2190	sequencer.c	FUNCTION_65
0x69cb	              0xc3	                                     ret	      2190	sequencer.c	FUNCTION_65
transform_todos	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,3:IF,8:WHILE,0:CALL,22	180
0xce3b	              0x55	                                push rbp	      4008	sequencer.c	FUNCTION_99
0xce3c	          0x4889e5	                            mov rbp, rsp	      4008	sequencer.c	FUNCTION_99
0xce3f	    0x4881ecb00000	                           sub rsp, 0xb0	      4008	sequencer.c	FUNCTION_99
0xce46	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      4008	sequencer.c	FUNCTION_99
0xce4c	    0x64488b042528	                mov rax, qword fs:[0x28]	      4008	sequencer.c	FUNCTION_99
0xce55	        0x488945f8	                mov qword [rbp - 8], rax	      4008	sequencer.c	FUNCTION_99
0xce59	            0x31c0	                            xor eax, eax	      4008	sequencer.c	FUNCTION_99
0xce5b	      0xe8cf37ffff	               call sym.rebase_path_todo	      4009	sequencer.c	FUNCTION_99	CALL_1
0xce60	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4009	sequencer.c	FUNCTION_99	CALL_1
0xce67	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4010	sequencer.c	FUNCTION_99
0xce6b	      0xb800000000	                              mov eax, 0	      4010	sequencer.c	FUNCTION_99
0xce70	      0xb90b000000	                            mov ecx, 0xb	      4010	sequencer.c	FUNCTION_99
0xce75	          0x4889d7	                            mov rdi, rdx	      4010	sequencer.c	FUNCTION_99
0xce78	          0xf348ab	              rep stosq qword [rdi], rax	      4010	sequencer.c	FUNCTION_99
0xce7b	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      4010	sequencer.c	FUNCTION_99
0xce83	    0x48c745800000	               mov qword [rbp - 0x80], 0	      4011	sequencer.c	FUNCTION_99
0xce8b	    0x48c745880000	               mov qword [rbp - 0x78], 0	      4011	sequencer.c	FUNCTION_99
0xce93	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4011	sequencer.c	FUNCTION_99
0xce9b	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xcea2	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xcea6	      0xba00000000	                              mov edx, 0	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xceab	          0x4889ce	                            mov rsi, rcx	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xceae	          0x4889c7	                            mov rdi, rax	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xceb1	      0xe800000000	                          call 0x400cef6	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xceb6	          0x4885c0	                           test rax, rax	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xceb9	            0x792e	                           jns 0x400cf29	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0xcebb	      0xbf00000000	                              mov edi, 0	      4016	sequencer.c	FUNCTION_99	CALL_4
0xcec0	      0xe8a234ffff	                               call sym.	      4016	sequencer.c	FUNCTION_99	CALL_4
0xcec5	          0x4889c2	                            mov rdx, rax	      4016	sequencer.c	FUNCTION_99	CALL_4
0xcec8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4016	sequencer.c	FUNCTION_99	CALL_4
0xcecf	          0x4889c6	                            mov rsi, rax	      4016	sequencer.c	FUNCTION_99	CALL_4
0xced2	          0x4889d7	                            mov rdi, rdx	      4016	sequencer.c	FUNCTION_99	CALL_4
0xced5	      0xb800000000	                              mov eax, 0	      4016	sequencer.c	FUNCTION_99	CALL_4
0xceda	      0xe800000000	                          call 0x400cf1f	      4016	sequencer.c	FUNCTION_99	CALL_4
0xcedf	      0xe81c31ffff	                    call sym.const_error	      4016	sequencer.c	FUNCTION_99	CALL_4
0xcee4	      0xe94d020000	                           jmp 0x400d176	      4016	sequencer.c	FUNCTION_99	CALL_4
0xcee9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_5
0xceed	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_5
0xcef1	          0x4889d6	                            mov rsi, rdx	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_5
0xcef4	          0x4889c7	                            mov rdi, rax	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_5
0xcef7	      0xe8f889ffff	              call sym.parse_insn_buffer	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_5
0xcefc	            0x85c0	                           test eax, eax	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_5
0xcefe	            0x743a	                            je 0x400cf7a	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_5
0xcf00	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_6
0xcf04	          0x4889c7	                            mov rdi, rax	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_6
0xcf07	      0xe86684ffff	              call sym.todo_list_release	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_6
0xcf0c	      0xbf00000000	                              mov edi, 0	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf11	      0xe85134ffff	                               call sym.	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf16	          0x4889c2	                            mov rdx, rax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf19	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf20	          0x4889c6	                            mov rsi, rax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf23	          0x4889d7	                            mov rdi, rdx	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf26	      0xb800000000	                              mov eax, 0	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf2b	      0xe800000000	                          call 0x400cf70	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf30	      0xe8cb30ffff	                    call sym.const_error	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf35	      0xe9fc010000	                           jmp 0x400d176	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_8
0xcf3a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4023	sequencer.c	FUNCTION_99	FOR_1
0xcf3e	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4023	sequencer.c	FUNCTION_99	FOR_1
0xcf45	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      4023	sequencer.c	FUNCTION_99	FOR_1
0xcf4f	      0xe99f010000	                           jmp 0x400d133	      4023	sequencer.c	FUNCTION_99	FOR_1
0xcf54	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0xcf5b	            0x8b00	                    mov eax, dword [rax]	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0xcf5d	          0x83f80b	                            cmp eax, 0xb	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0xcf60	            0x7630	                           jbe 0x400cfd2	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0xcf62	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf69	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf6d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf74	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf77	        0x488d4580	                   lea rax, [rbp - 0x80]	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf7b	      0xbe00000000	                              mov esi, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf80	          0x4889c7	                            mov rdi, rax	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf83	      0xb800000000	                              mov eax, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf88	      0xe800000000	                          call 0x400cfcd	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_9
0xcf8d	      0xe952010000	                           jmp 0x400d124	      4027	sequencer.c	FUNCTION_99	FOR_1	IF_3
0xcf92	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0xcf98	          0x83e004	                              and eax, 4	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0xcf9b	            0x85c0	                           test eax, eax	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0xcf9d	            0x7423	                            je 0x400d002	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0xcf9f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfa6	            0x8b00	                    mov eax, dword [rax]	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfa8	            0x89c7	                            mov edi, eax	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfaa	      0xe8546cffff	                call sym.command_to_char	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfaf	           0xfbed0	                           movsx edx, al	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfb2	        0x488d4580	                   lea rax, [rbp - 0x80]	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfb6	            0x89d6	                            mov esi, edx	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfb8	          0x4889c7	                            mov rdi, rax	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfbb	      0xe80732ffff	                   call sym.strbuf_addch	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfc0	            0xeb22	                           jmp 0x400d024	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0xcfc2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfc9	            0x8b00	                    mov eax, dword [rax]	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfcb	            0x89c7	                            mov edi, eax	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfcd	      0xe8f86bffff	              call sym.command_to_string	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfd2	          0x4889c2	                            mov rdx, rax	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfd5	        0x488d4580	                   lea rax, [rbp - 0x80]	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfd9	          0x4889d6	                            mov rsi, rdx	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfdc	          0x4889c7	                            mov rdi, rax	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfdf	      0xe85132ffff	                  call sym.strbuf_addstr	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_13
0xcfe4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0xcfeb	        0x488b4008	                mov rax, qword [rax + 8]	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0xcfef	          0x4885c0	                           test rax, rax	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0xcff2	     0xf84a0000000	                            je 0x400d0d8	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0xcff8	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0xcffe	          0x83e002	                              and eax, 2	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0xd001	            0x85c0	                           test eax, eax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd003	            0x7415	                            je 0x400d05a	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd005	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd00c	        0x488b4008	                mov rax, qword [rax + 8]	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd010	          0x4889c7	                            mov rdi, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd013	      0xe88640ffff	              call sym.short_commit_name	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd018	            0xeb17	                           jmp 0x400d071	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd01a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4040	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_15
0xd021	        0x488b4008	                mov rax, qword [rax + 8]	      4040	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_15
0xd025	        0x4883c004	                              add rax, 4	      4040	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_15
0xd029	          0x4889c7	                            mov rdi, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd02c	      0xe800000000	                          call 0x400d071	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_14
0xd031	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0xd038	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0xd03f	            0x8b00	                    mov eax, dword [rax]	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0xd041	          0x83f809	                              cmp eax, 9	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0xd044	            0x7535	                           jne 0x400d0bb	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0xd046	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0xd04d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0xd050	          0x83e001	                              and eax, 1	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0xd053	            0x85c0	                           test eax, eax	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0xd055	            0x7413	                            je 0x400d0aa	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0xd057	        0x488d4580	                   lea rax, [rbp - 0x80]	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_16
0xd05b	      0xbe00000000	                              mov esi, 0	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_16
0xd060	          0x4889c7	                            mov rdi, rax	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_16
0xd063	      0xe8cd31ffff	                  call sym.strbuf_addstr	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_16
0xd068	            0xeb11	                           jmp 0x400d0bb	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_16
0xd06a	        0x488d4580	                   lea rax, [rbp - 0x80]	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_17
0xd06e	      0xbe00000000	                              mov esi, 0	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_17
0xd073	          0x4889c7	                            mov rdi, rax	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_17
0xd076	      0xe8ba31ffff	                  call sym.strbuf_addstr	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_17
0xd07b	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_18
0xd082	        0x488d4580	                   lea rax, [rbp - 0x80]	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_18
0xd086	      0xbe00000000	                              mov esi, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_18
0xd08b	          0x4889c7	                            mov rdi, rax	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_18
0xd08e	      0xb800000000	                              mov eax, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_18
0xd093	      0xe800000000	                          call 0x400d0d8	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_18
0xd098	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0xd09f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0xd0a2	            0x85c0	                           test eax, eax	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0xd0a4	            0x7513	                           jne 0x400d0f9	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0xd0a6	        0x488d4580	                   lea rax, [rbp - 0x80]	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_19
0xd0aa	      0xbe0a000000	                            mov esi, 0xa	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_19
0xd0af	          0x4889c7	                            mov rdi, rax	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_19
0xd0b2	      0xe81031ffff	                   call sym.strbuf_addch	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_19
0xd0b7	            0xeb2b	                           jmp 0x400d124	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_19
0xd0b9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0c0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0c4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0cb	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0ce	        0x488d4580	                   lea rax, [rbp - 0x80]	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0d2	      0xbe00000000	                              mov esi, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0d7	          0x4889c7	                            mov rdi, rax	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0da	      0xb800000000	                              mov eax, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0df	      0xe800000000	                          call 0x400d124	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_20
0xd0e4	    0x838564ffffff	               add dword [rbp - 0x9c], 1	      4023	sequencer.c	FUNCTION_99	FOR_1
0xd0eb	    0x48838568ffff	           add qword [rbp - 0x98], 0x30 	      4023	sequencer.c	FUNCTION_99	FOR_1
0xd0f3	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4023	sequencer.c	FUNCTION_99	FOR_1
0xd0f6	    0x3b8564ffffff	             cmp eax, dword [rbp - 0x9c]	      4023	sequencer.c	FUNCTION_99	FOR_1
0xd0fc	     0xf8f52feffff	                            jg 0x400cf94	      4023	sequencer.c	FUNCTION_99	FOR_1
0xd102	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      4059	sequencer.c	FUNCTION_99	CALL_21
0xd106	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4059	sequencer.c	FUNCTION_99	CALL_21
0xd10a	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      4059	sequencer.c	FUNCTION_99	CALL_21
0xd111	      0xb900000000	                              mov ecx, 0	      4059	sequencer.c	FUNCTION_99	CALL_21
0xd116	          0x4889c7	                            mov rdi, rax	      4059	sequencer.c	FUNCTION_99	CALL_21
0xd119	      0xe88741ffff	                  call sym.write_message	      4059	sequencer.c	FUNCTION_99	CALL_21
0xd11e	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      4059	sequencer.c	FUNCTION_99	CALL_21
0xd124	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4060	sequencer.c	FUNCTION_99	CALL_22
0xd128	          0x4889c7	                            mov rdi, rax	      4060	sequencer.c	FUNCTION_99	CALL_22
0xd12b	      0xe84282ffff	              call sym.todo_list_release	      4060	sequencer.c	FUNCTION_99	CALL_22
0xd130	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      4061	sequencer.c	FUNCTION_99
0xd136	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4062	sequencer.c	FUNCTION_99
0xd13a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4062	sequencer.c	FUNCTION_99
0xd143	            0x7405	                            je 0x400d18a	      4062	sequencer.c	FUNCTION_99
0xd145	      0xe800000000	                          call 0x400d18a	      4062	sequencer.c	FUNCTION_99
0xd14a	              0xc9	                                   leave	      4062	sequencer.c	FUNCTION_99
0xd14b	              0xc3	                                     ret	      4062	sequencer.c	FUNCTION_99
reset_for_rollback	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,2	24
0x6d09	              0x55	                                push rbp	      2252	sequencer.c	FUNCTION_69
0x6d0a	          0x4889e5	                            mov rbp, rsp	      2252	sequencer.c	FUNCTION_69
0x6d0d	        0x4883ec40	                           sub rsp, 0x40	      2252	sequencer.c	FUNCTION_69
0x6d11	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2252	sequencer.c	FUNCTION_69
0x6d15	    0x64488b042528	                mov rax, qword fs:[0x28]	      2252	sequencer.c	FUNCTION_69
0x6d1e	        0x488945f8	                mov qword [rbp - 8], rax	      2252	sequencer.c	FUNCTION_69
0x6d22	            0x31c0	                            xor eax, eax	      2252	sequencer.c	FUNCTION_69
0x6d24	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2255	sequencer.c	FUNCTION_69
0x6d2c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2256	sequencer.c	FUNCTION_69
0x6d34	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2257	sequencer.c	FUNCTION_69	CALL_1
0x6d38	          0x4889c7	                            mov rdi, rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x6d3b	      0xe800000000	                          call 0x4006d80	      2257	sequencer.c	FUNCTION_69	CALL_1
0x6d40	        0x488945e0	             mov qword [rbp - 0x20], rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x6d44	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2258	sequencer.c	FUNCTION_69
0x6d4c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2259	sequencer.c	FUNCTION_69	CALL_2
0x6d50	      0xbe02000000	                              mov esi, 2	      2259	sequencer.c	FUNCTION_69	CALL_2
0x6d55	          0x4889c7	                            mov rdi, rax	      2259	sequencer.c	FUNCTION_69	CALL_2
0x6d58	      0xe800000000	                          call 0x4006d9d	      2259	sequencer.c	FUNCTION_69	CALL_2
0x6d5d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2260	sequencer.c	FUNCTION_69
0x6d61	    0x644833142528	                xor rdx, qword fs:[0x28]	      2260	sequencer.c	FUNCTION_69
0x6d6a	            0x7405	                            je 0x4006db1	      2260	sequencer.c	FUNCTION_69
0x6d6c	      0xe800000000	                          call 0x4006db1	      2260	sequencer.c	FUNCTION_69
0x6d71	              0xc9	                                   leave	      2260	sequencer.c	FUNCTION_69
0x6d72	              0xc3	                                     ret	      2260	sequencer.c	FUNCTION_69
read_and_refresh_cache	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,13	74
0x524c	              0x55	                                push rbp	      1747	sequencer.c	FUNCTION_50
0x524d	          0x4889e5	                            mov rbp, rsp	      1747	sequencer.c	FUNCTION_50
0x5250	              0x53	                                push rbx	      1747	sequencer.c	FUNCTION_50
0x5251	        0x4883ec38	                           sub rsp, 0x38	      1747	sequencer.c	FUNCTION_50
0x5255	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1747	sequencer.c	FUNCTION_50
0x5259	    0x64488b042528	                mov rax, qword fs:[0x28]	      1747	sequencer.c	FUNCTION_50
0x5262	        0x488945e8	             mov qword [rbp - 0x18], rax	      1747	sequencer.c	FUNCTION_50
0x5266	            0x31c0	                            xor eax, eax	      1747	sequencer.c	FUNCTION_50
0x5268	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1748	sequencer.c	FUNCTION_50
0x5270	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1749	sequencer.c	FUNCTION_50	CALL_1
0x5274	      0xbe00000000	                              mov esi, 0	      1749	sequencer.c	FUNCTION_50	CALL_1
0x5279	          0x4889c7	                            mov rdi, rax	      1749	sequencer.c	FUNCTION_50	CALL_1
0x527c	      0xe800000000	                          call 0x40052c1	      1749	sequencer.c	FUNCTION_50	CALL_1
0x5281	          0x8945dc	             mov dword [rbp - 0x24], eax	      1749	sequencer.c	FUNCTION_50	CALL_1
0x5284	      0xbe00000000	                              mov esi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x5289	      0xbf00000000	                              mov edi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x528e	      0xe800000000	                          call 0x40052d3	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x5293	            0x85c0	                           test eax, eax	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x5295	            0x7944	                           jns 0x400531b	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x5297	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1751	sequencer.c	FUNCTION_50	IF_1	CALL_3
0x529b	          0x4889c7	                            mov rdi, rax	      1751	sequencer.c	FUNCTION_50	IF_1	CALL_3
0x529e	      0xe809b2ffff	             call sym.rollback_lock_file	      1751	sequencer.c	FUNCTION_50	IF_1	CALL_3
0x52a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52a7	          0x4889c7	                            mov rdi, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52aa	      0xe890bdffff	                    call sym.action_name	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52af	          0x4889c7	                            mov rdi, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52b2	      0xe8b0b0ffff	                               call sym.	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52b7	          0x4889c3	                            mov rbx, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52ba	      0xbf00000000	                              mov edi, 0	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52bf	      0xe8a3b0ffff	                               call sym.	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52c4	          0x4889de	                            mov rsi, rbx	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52c7	          0x4889c7	                            mov rdi, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52ca	      0xb800000000	                              mov eax, 0	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52cf	      0xe800000000	                          call 0x4005314	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52d4	      0xe827adffff	                    call sym.const_error	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52d9	            0xeb7c	                           jmp 0x4005397	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_5
0x52db	    0x41b800000000	                              mov r8d, 0	      1755	sequencer.c	FUNCTION_50	CALL_8
0x52e1	      0xb900000000	                              mov ecx, 0	      1755	sequencer.c	FUNCTION_50	CALL_8
0x52e6	      0xba00000000	                              mov edx, 0	      1755	sequencer.c	FUNCTION_50	CALL_8
0x52eb	      0xbe06000000	                              mov esi, 6	      1755	sequencer.c	FUNCTION_50	CALL_8
0x52f0	      0xbf00000000	                              mov edi, 0	      1755	sequencer.c	FUNCTION_50	CALL_8
0x52f5	      0xe800000000	                          call 0x400533a	      1755	sequencer.c	FUNCTION_50	CALL_8
0x52fa	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1756	sequencer.c	FUNCTION_50	IF_2
0x52fe	            0x7852	                            js 0x4005392	      1756	sequencer.c	FUNCTION_50	IF_2
0x5300	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x5304	      0xba03000000	                              mov edx, 3	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x5309	          0x4889c6	                            mov rsi, rax	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x530c	      0xbf00000000	                              mov edi, 0	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x5311	      0xe800000000	                          call 0x4005356	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x5316	            0x85c0	                           test eax, eax	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x5318	            0x7438	                            je 0x4005392	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x531a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x531e	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5321	      0xe819bdffff	                    call sym.action_name	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5326	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5329	      0xe839b0ffff	                               call sym.	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x532e	          0x4889c3	                            mov rbx, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5331	      0xbf00000000	                              mov edi, 0	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5336	      0xe82cb0ffff	                               call sym.	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x533b	          0x4889de	                            mov rsi, rbx	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x533e	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5341	      0xb800000000	                              mov eax, 0	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5346	      0xe800000000	                          call 0x400538b	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x534b	      0xe8b0acffff	                    call sym.const_error	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5350	            0xeb05	                           jmp 0x4005397	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_11
0x5352	      0xb800000000	                              mov eax, 0	      1763	sequencer.c	FUNCTION_50
0x5357	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1764	sequencer.c	FUNCTION_50
0x535b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1764	sequencer.c	FUNCTION_50
0x5364	            0x7405	                            je 0x40053ab	      1764	sequencer.c	FUNCTION_50
0x5366	      0xe800000000	                          call 0x40053ab	      1764	sequencer.c	FUNCTION_50
0x536b	        0x4883c438	                           add rsp, 0x38	      1764	sequencer.c	FUNCTION_50
0x536f	              0x5b	                                 pop rbx	      1764	sequencer.c	FUNCTION_50
0x5370	              0x5d	                                 pop rbp	      1764	sequencer.c	FUNCTION_50
0x5371	              0xc3	                                     ret	      1764	sequencer.c	FUNCTION_50
write_message	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,4:WHILE,0:CALL,14	97
0x12a5	              0x55	                                push rbp	       368	sequencer.c	FUNCTION_14
0x12a6	          0x4889e5	                            mov rbp, rsp	       368	sequencer.c	FUNCTION_14
0x12a9	        0x4883ec40	                           sub rsp, 0x40	       368	sequencer.c	FUNCTION_14
0x12ad	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       368	sequencer.c	FUNCTION_14
0x12b1	        0x488975d0	             mov qword [rbp - 0x30], rsi	       368	sequencer.c	FUNCTION_14
0x12b5	        0x488955c8	             mov qword [rbp - 0x38], rdx	       368	sequencer.c	FUNCTION_14
0x12b9	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       368	sequencer.c	FUNCTION_14
0x12bc	    0x64488b042528	                mov rax, qword fs:[0x28]	       368	sequencer.c	FUNCTION_14
0x12c5	        0x488945f8	                mov qword [rbp - 8], rax	       368	sequencer.c	FUNCTION_14
0x12c9	            0x31c0	                            xor eax, eax	       368	sequencer.c	FUNCTION_14
0x12cb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       369	sequencer.c	FUNCTION_14
0x12d3	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       371	sequencer.c	FUNCTION_14	CALL_1
0x12d7	        0x488d45f0	                   lea rax, [rbp - 0x10]	       371	sequencer.c	FUNCTION_14	CALL_1
0x12db	      0xba00000000	                              mov edx, 0	       371	sequencer.c	FUNCTION_14	CALL_1
0x12e0	          0x4889ce	                            mov rsi, rcx	       371	sequencer.c	FUNCTION_14	CALL_1
0x12e3	          0x4889c7	                            mov rdi, rax	       371	sequencer.c	FUNCTION_14	CALL_1
0x12e6	      0xe894f1ffff	      call sym.hold_lock_file_for_update	       371	sequencer.c	FUNCTION_14	CALL_1
0x12eb	          0x8945ec	             mov dword [rbp - 0x14], eax	       371	sequencer.c	FUNCTION_14	CALL_1
0x12ee	        0x837dec00	               cmp dword [rbp - 0x14], 0	       372	sequencer.c	FUNCTION_14	IF_1
0x12f2	            0x792b	                           jns 0x400135f	       372	sequencer.c	FUNCTION_14	IF_1
0x12f4	      0xbf00000000	                              mov edi, 0	       373	sequencer.c	FUNCTION_14	CALL_3
0x12f9	      0xe869f0ffff	                               call sym.	       373	sequencer.c	FUNCTION_14	CALL_3
0x12fe	          0x4889c2	                            mov rdx, rax	       373	sequencer.c	FUNCTION_14	CALL_3
0x1301	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       373	sequencer.c	FUNCTION_14	CALL_3
0x1305	          0x4889c6	                            mov rsi, rax	       373	sequencer.c	FUNCTION_14	CALL_3
0x1308	          0x4889d7	                            mov rdi, rdx	       373	sequencer.c	FUNCTION_14	CALL_3
0x130b	      0xb800000000	                              mov eax, 0	       373	sequencer.c	FUNCTION_14	CALL_3
0x1310	      0xe800000000	                          call 0x4001355	       373	sequencer.c	FUNCTION_14	CALL_3
0x1315	      0xe8e6ecffff	                    call sym.const_error	       373	sequencer.c	FUNCTION_14	CALL_3
0x131a	      0xe9eb000000	                           jmp 0x400144a	       373	sequencer.c	FUNCTION_14	CALL_3
0x131f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x1323	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x1327	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x132a	          0x4889ce	                            mov rsi, rcx	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x132d	            0x89c7	                            mov edi, eax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x132f	      0xe800000000	                          call 0x4001374	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x1334	          0x4885c0	                           test rax, rax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x1337	            0x793c	                           jns 0x40013b5	       374	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x1339	      0xbf00000000	                              mov edi, 0	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x133e	      0xe824f0ffff	                               call sym.	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x1343	          0x4889c2	                            mov rdx, rax	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x1346	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x134a	          0x4889c6	                            mov rsi, rax	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x134d	          0x4889d7	                            mov rdi, rdx	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x1350	      0xb800000000	                              mov eax, 0	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x1355	      0xe800000000	                          call 0x400139a	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x135a	      0xe8a1ecffff	                    call sym.const_error	       375	sequencer.c	FUNCTION_14	IF_2	CALL_6
0x135f	        0x488d45f0	                   lea rax, [rbp - 0x10]	       376	sequencer.c	FUNCTION_14	IF_2	CALL_7
0x1363	          0x4889c7	                            mov rdi, rax	       376	sequencer.c	FUNCTION_14	IF_2	CALL_7
0x1366	      0xe841f1ffff	             call sym.rollback_lock_file	       376	sequencer.c	FUNCTION_14	IF_2	CALL_7
0x136b	      0xb8ffffffff	                     mov eax, 0xffffffff	       377	sequencer.c	FUNCTION_14	IF_2
0x1370	      0xe995000000	                           jmp 0x400144a	       377	sequencer.c	FUNCTION_14	IF_2
0x1375	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x1379	            0x7452	                            je 0x400140d	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x137b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x137e	      0xba01000000	                              mov edx, 1	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x1383	      0xbe00000000	                              mov esi, 0	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x1388	            0x89c7	                            mov edi, eax	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x138a	      0xe800000000	                          call 0x40013cf	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x138f	          0x4885c0	                           test rax, rax	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x1392	            0x7939	                           jns 0x400140d	       379	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x1394	      0xbf00000000	                              mov edi, 0	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x1399	      0xe8c9efffff	                               call sym.	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x139e	          0x4889c2	                            mov rdx, rax	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x13a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x13a5	          0x4889c6	                            mov rsi, rax	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x13a8	          0x4889d7	                            mov rdi, rdx	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x13ab	      0xb800000000	                              mov eax, 0	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x13b0	      0xe800000000	                          call 0x40013f5	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x13b5	      0xe846ecffff	                    call sym.const_error	       380	sequencer.c	FUNCTION_14	IF_3	CALL_10
0x13ba	        0x488d45f0	                   lea rax, [rbp - 0x10]	       381	sequencer.c	FUNCTION_14	IF_3	CALL_11
0x13be	          0x4889c7	                            mov rdi, rax	       381	sequencer.c	FUNCTION_14	IF_3	CALL_11
0x13c1	      0xe8e6f0ffff	             call sym.rollback_lock_file	       381	sequencer.c	FUNCTION_14	IF_3	CALL_11
0x13c6	      0xb8ffffffff	                     mov eax, 0xffffffff	       382	sequencer.c	FUNCTION_14	IF_3
0x13cb	            0xeb3d	                           jmp 0x400144a	       382	sequencer.c	FUNCTION_14	IF_3
0x13cd	        0x488d45f0	                   lea rax, [rbp - 0x10]	       384	sequencer.c	FUNCTION_14	IF_4	CALL_12
0x13d1	          0x4889c7	                            mov rdi, rax	       384	sequencer.c	FUNCTION_14	IF_4	CALL_12
0x13d4	      0xe800000000	                          call 0x4001419	       384	sequencer.c	FUNCTION_14	IF_4	CALL_12
0x13d9	            0x85c0	                           test eax, eax	       384	sequencer.c	FUNCTION_14	IF_4	CALL_12
0x13db	            0x7928	                           jns 0x4001445	       384	sequencer.c	FUNCTION_14	IF_4	CALL_12
0x13dd	      0xbf00000000	                              mov edi, 0	       385	sequencer.c	FUNCTION_14	CALL_14
0x13e2	      0xe880efffff	                               call sym.	       385	sequencer.c	FUNCTION_14	CALL_14
0x13e7	          0x4889c2	                            mov rdx, rax	       385	sequencer.c	FUNCTION_14	CALL_14
0x13ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       385	sequencer.c	FUNCTION_14	CALL_14
0x13ee	          0x4889c6	                            mov rsi, rax	       385	sequencer.c	FUNCTION_14	CALL_14
0x13f1	          0x4889d7	                            mov rdi, rdx	       385	sequencer.c	FUNCTION_14	CALL_14
0x13f4	      0xb800000000	                              mov eax, 0	       385	sequencer.c	FUNCTION_14	CALL_14
0x13f9	      0xe800000000	                          call 0x400143e	       385	sequencer.c	FUNCTION_14	CALL_14
0x13fe	      0xe8fdebffff	                    call sym.const_error	       385	sequencer.c	FUNCTION_14	CALL_14
0x1403	            0xeb05	                           jmp 0x400144a	       385	sequencer.c	FUNCTION_14	CALL_14
0x1405	      0xb800000000	                              mov eax, 0	       387	sequencer.c	FUNCTION_14
0x140a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       388	sequencer.c	FUNCTION_14
0x140e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       388	sequencer.c	FUNCTION_14
0x1417	            0x7405	                            je 0x400145e	       388	sequencer.c	FUNCTION_14
0x1419	      0xe800000000	                          call 0x400145e	       388	sequencer.c	FUNCTION_14
0x141e	              0xc9	                                   leave	       388	sequencer.c	FUNCTION_14
0x141f	              0xc3	                                     ret	       388	sequencer.c	FUNCTION_14
implicit_ident_advice	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,1:WHILE,0:CALL,8	39
0x2d3a	              0x55	                                push rbp	       977	sequencer.c	FUNCTION_34
0x2d3b	          0x4889e5	                            mov rbp, rsp	       977	sequencer.c	FUNCTION_34
0x2d3e	        0x4883ec20	                           sub rsp, 0x20	       977	sequencer.c	FUNCTION_34
0x2d42	      0xbe00000000	                              mov esi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x2d47	      0xbf00000000	                              mov edi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x2d4c	      0xe800000000	                          call 0x4002d91	       978	sequencer.c	FUNCTION_34	CALL_1
0x2d51	        0x488945f0	             mov qword [rbp - 0x10], rax	       978	sequencer.c	FUNCTION_34	CALL_1
0x2d55	      0xbf00000000	                              mov edi, 0	       979	sequencer.c	FUNCTION_34	CALL_2
0x2d5a	      0xe800000000	                          call 0x4002d9f	       979	sequencer.c	FUNCTION_34	CALL_2
0x2d5f	        0x488945f8	                mov qword [rbp - 8], rax	       979	sequencer.c	FUNCTION_34	CALL_2
0x2d63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d67	          0x4889c7	                            mov rdi, rax	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d6a	      0xe800000000	                          call 0x4002daf	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d6f	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d71	            0x7510	                           jne 0x4002dc3	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d73	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d77	          0x4889c7	                            mov rdi, rax	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d7a	      0xe800000000	                          call 0x4002dbf	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d7f	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d81	            0x7407	                            je 0x4002dca	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d83	      0xb801000000	                              mov eax, 1	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d88	            0xeb05	                           jmp 0x4002dcf	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d8a	      0xb800000000	                              mov eax, 0	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d8f	          0x8945ec	             mov dword [rbp - 0x14], eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x2d92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       982	sequencer.c	FUNCTION_34	CALL_5
0x2d96	          0x4889c7	                            mov rdi, rax	       982	sequencer.c	FUNCTION_34	CALL_5
0x2d99	      0xe800000000	                          call 0x4002dde	       982	sequencer.c	FUNCTION_34	CALL_5
0x2d9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	sequencer.c	FUNCTION_34	CALL_6
0x2da2	          0x4889c7	                            mov rdi, rax	       983	sequencer.c	FUNCTION_34	CALL_6
0x2da5	      0xe800000000	                          call 0x4002dea	       983	sequencer.c	FUNCTION_34	CALL_6
0x2daa	        0x837dec00	               cmp dword [rbp - 0x14], 0	       985	sequencer.c	FUNCTION_34	IF_1
0x2dae	            0x740c	                            je 0x4002dfc	       985	sequencer.c	FUNCTION_34	IF_1
0x2db0	      0xbf00000000	                              mov edi, 0	       986	sequencer.c	FUNCTION_34	CALL_7
0x2db5	      0xe8add5ffff	                               call sym.	       986	sequencer.c	FUNCTION_34	CALL_7
0x2dba	            0xeb0a	                           jmp 0x4002e06	       986	sequencer.c	FUNCTION_34	CALL_7
0x2dbc	      0xbf00000000	                              mov edi, 0	       988	sequencer.c	FUNCTION_34	CALL_8
0x2dc1	      0xe8a1d5ffff	                               call sym.	       988	sequencer.c	FUNCTION_34	CALL_8
0x2dc6	              0xc9	                                   leave	       990	sequencer.c	FUNCTION_34
0x2dc7	              0xc3	                                     ret	       990	sequencer.c	FUNCTION_34
has_conforming_footer	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,5:WHILE,0:CALL,3	74
0xcf5	              0x55	                                push rbp	       219	sequencer.c	FUNCTION_6
0xcf6	          0x4889e5	                            mov rbp, rsp	       219	sequencer.c	FUNCTION_6
0xcf9	        0x4883ec60	                           sub rsp, 0x60	       219	sequencer.c	FUNCTION_6
0xcfd	        0x48897db8	             mov qword [rbp - 0x48], rdi	       219	sequencer.c	FUNCTION_6
0xd01	        0x488975b0	             mov qword [rbp - 0x50], rsi	       219	sequencer.c	FUNCTION_6
0xd05	          0x8955ac	             mov dword [rbp - 0x54], edx	       219	sequencer.c	FUNCTION_6
0xd08	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	sequencer.c	FUNCTION_6
0xd11	        0x488945f8	                mov qword [rbp - 8], rax	       219	sequencer.c	FUNCTION_6
0xd15	            0x31c0	                            xor eax, eax	       219	sequencer.c	FUNCTION_6
0xd17	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       222	sequencer.c	FUNCTION_6
0xd1e	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       222	sequencer.c	FUNCTION_6
0xd25	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       224	sequencer.c	FUNCTION_6	CALL_1
0xd29	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       224	sequencer.c	FUNCTION_6	CALL_1
0xd2d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       224	sequencer.c	FUNCTION_6	CALL_1
0xd31	          0x4889d6	                            mov rsi, rdx	       224	sequencer.c	FUNCTION_6	CALL_1
0xd34	          0x4889c7	                            mov rdi, rax	       224	sequencer.c	FUNCTION_6	CALL_1
0xd37	      0xe800000000	                          call 0x4000d7c	       224	sequencer.c	FUNCTION_6	CALL_1
0xd3c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       226	sequencer.c	FUNCTION_6	IF_1
0xd40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       226	sequencer.c	FUNCTION_6	IF_1
0xd44	          0x4839c2	                            cmp rdx, rax	       226	sequencer.c	FUNCTION_6	IF_1
0xd47	            0x750a	                           jne 0x4000d93	       226	sequencer.c	FUNCTION_6	IF_1
0xd49	      0xb800000000	                              mov eax, 0	       227	sequencer.c	FUNCTION_6	IF_1
0xd4e	      0xe9a1000000	                           jmp 0x4000e34	       227	sequencer.c	FUNCTION_6	IF_1
0xd53	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       229	sequencer.c	FUNCTION_6	FOR_1
0xd5a	            0xeb5e	                           jmp 0x4000dfa	       229	sequencer.c	FUNCTION_6	FOR_1
0xd5c	      0x48837db000	               cmp qword [rbp - 0x50], 0	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd61	            0x7453	                            je 0x4000df6	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd63	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd67	        0x488b5008	                mov rdx, qword [rax + 8]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd6b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd6f	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd77	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd7a	          0x4863f6	                         movsxd rsi, esi	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd7d	        0x48c1e603	                              shl rsi, 3	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd81	          0x4801f0	                            add rax, rsi	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd84	          0x488b00	                    mov rax, qword [rax]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd87	          0x4889ce	                            mov rsi, rcx	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd8a	          0x4889c7	                            mov rdi, rax	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd8d	      0xe800000000	                          call 0x4000dd2	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd92	            0x85c0	                           test eax, eax	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd94	            0x7520	                           jne 0x4000df6	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0xd96	    0xc745c8010000	               mov dword [rbp - 0x38], 1	       231	sequencer.c	FUNCTION_6	FOR_1	IF_2
0xd9d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0xda0	            0x4898	                                    cdqe	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0xda2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0xda6	        0x4883ea01	                              sub rdx, 1	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0xdaa	          0x4839d0	                            cmp rax, rdx	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0xdad	            0x7507	                           jne 0x4000df6	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0xdaf	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0xdb6	        0x8345c401	               add dword [rbp - 0x3c], 1	       229	sequencer.c	FUNCTION_6	FOR_1
0xdba	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       229	sequencer.c	FUNCTION_6	FOR_1
0xdbd	          0x4863d0	                         movsxd rdx, eax	       229	sequencer.c	FUNCTION_6	FOR_1
0xdc0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       229	sequencer.c	FUNCTION_6	FOR_1
0xdc4	          0x4839c2	                            cmp rdx, rax	       229	sequencer.c	FUNCTION_6	FOR_1
0xdc7	            0x7293	                            jb 0x4000d9c	       229	sequencer.c	FUNCTION_6	FOR_1
0xdc9	        0x488d45d0	                   lea rax, [rbp - 0x30]	       236	sequencer.c	FUNCTION_6	CALL_3
0xdcd	          0x4889c7	                            mov rdi, rax	       236	sequencer.c	FUNCTION_6	CALL_3
0xdd0	      0xe800000000	                          call 0x4000e15	       236	sequencer.c	FUNCTION_6	CALL_3
0xdd5	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       238	sequencer.c	FUNCTION_6	IF_4
0xdd9	            0x7407	                            je 0x4000e22	       238	sequencer.c	FUNCTION_6	IF_4
0xddb	      0xb803000000	                              mov eax, 3	       239	sequencer.c	FUNCTION_6	IF_4
0xde0	            0xeb12	                           jmp 0x4000e34	       239	sequencer.c	FUNCTION_6	IF_4
0xde2	        0x837dc800	               cmp dword [rbp - 0x38], 0	       240	sequencer.c	FUNCTION_6	IF_5
0xde6	            0x7407	                            je 0x4000e2f	       240	sequencer.c	FUNCTION_6	IF_5
0xde8	      0xb802000000	                              mov eax, 2	       241	sequencer.c	FUNCTION_6	IF_5
0xded	            0xeb05	                           jmp 0x4000e34	       241	sequencer.c	FUNCTION_6	IF_5
0xdef	      0xb801000000	                              mov eax, 1	       242	sequencer.c	FUNCTION_6
0xdf4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       243	sequencer.c	FUNCTION_6
0xdf8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       243	sequencer.c	FUNCTION_6
0xe01	            0x7405	                            je 0x4000e48	       243	sequencer.c	FUNCTION_6
0xe03	      0xe800000000	                          call 0x4000e48	       243	sequencer.c	FUNCTION_6
0xe08	              0xc9	                                   leave	       243	sequencer.c	FUNCTION_6
0xe09	              0xc3	                                     ret	       243	sequencer.c	FUNCTION_6
const_error	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_133
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_133
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_133
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_133
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_133
intend_to_amend	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,7	43
0x786b	              0x55	                                push rbp	      2450	sequencer.c	FUNCTION_75
0x786c	          0x4889e5	                            mov rbp, rsp	      2450	sequencer.c	FUNCTION_75
0x786f	              0x53	                                push rbx	      2450	sequencer.c	FUNCTION_75
0x7870	        0x4883ec38	                           sub rsp, 0x38	      2450	sequencer.c	FUNCTION_75
0x7874	    0x64488b042528	                mov rax, qword fs:[0x28]	      2450	sequencer.c	FUNCTION_75
0x787d	        0x488945e8	             mov qword [rbp - 0x18], rax	      2450	sequencer.c	FUNCTION_75
0x7881	            0x31c0	                            xor eax, eax	      2450	sequencer.c	FUNCTION_75
0x7883	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x7887	          0x4889c6	                            mov rsi, rax	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x788a	      0xbf00000000	                              mov edi, 0	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x788f	      0xe800000000	                          call 0x40078d4	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x7894	            0x85c0	                           test eax, eax	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x7896	            0x741e	                            je 0x40078f6	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x7898	      0xbf00000000	                              mov edi, 0	      2455	sequencer.c	FUNCTION_75	CALL_3
0x789d	      0xe8c58affff	                               call sym.	      2455	sequencer.c	FUNCTION_75	CALL_3
0x78a2	          0x4889c7	                            mov rdi, rax	      2455	sequencer.c	FUNCTION_75	CALL_3
0x78a5	      0xb800000000	                              mov eax, 0	      2455	sequencer.c	FUNCTION_75	CALL_3
0x78aa	      0xe800000000	                          call 0x40078ef	      2455	sequencer.c	FUNCTION_75	CALL_3
0x78af	      0xe84c87ffff	                    call sym.const_error	      2455	sequencer.c	FUNCTION_75	CALL_3
0x78b4	            0xeb3b	                           jmp 0x4007931	      2455	sequencer.c	FUNCTION_75	CALL_3
0x78b6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2457	sequencer.c	FUNCTION_75	CALL_4
0x78ba	          0x4889c7	                            mov rdi, rax	      2457	sequencer.c	FUNCTION_75	CALL_4
0x78bd	      0xe800000000	                          call 0x4007902	      2457	sequencer.c	FUNCTION_75	CALL_4
0x78c2	        0x488945c8	             mov qword [rbp - 0x38], rax	      2457	sequencer.c	FUNCTION_75	CALL_4
0x78c6	      0xe80b8fffff	              call sym.rebase_path_amend	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78cb	          0x4889c3	                            mov rbx, rax	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78d2	          0x4889c7	                            mov rdi, rax	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78d5	      0xe800000000	                          call 0x400791a	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78da	          0x4889c6	                            mov rsi, rax	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78e1	      0xb901000000	                              mov ecx, 1	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78e6	          0x4889da	                            mov rdx, rbx	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78e9	          0x4889c7	                            mov rdi, rax	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78ec	      0xe8b499ffff	                  call sym.write_message	      2458	sequencer.c	FUNCTION_75	CALL_7
0x78f1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2459	sequencer.c	FUNCTION_75
0x78f5	    0x644833142528	                xor rdx, qword fs:[0x28]	      2459	sequencer.c	FUNCTION_75
0x78fe	            0x7405	                            je 0x4007945	      2459	sequencer.c	FUNCTION_75
0x7900	      0xe800000000	                          call 0x4007945	      2459	sequencer.c	FUNCTION_75
0x7905	        0x4883c438	                           add rsp, 0x38	      2459	sequencer.c	FUNCTION_75
0x7909	              0x5b	                                 pop rbx	      2459	sequencer.c	FUNCTION_75
0x790a	              0x5d	                                 pop rbp	      2459	sequencer.c	FUNCTION_75
0x790b	              0xc3	                                     ret	      2459	sequencer.c	FUNCTION_75
is_index_unchanged	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,5:WHILE,0:CALL,12	72
0x1c85	              0x55	                                push rbp	       565	sequencer.c	FUNCTION_22
0x1c86	          0x4889e5	                            mov rbp, rsp	       565	sequencer.c	FUNCTION_22
0x1c89	        0x4883ec30	                           sub rsp, 0x30	       565	sequencer.c	FUNCTION_22
0x1c8d	    0x64488b042528	                mov rax, qword fs:[0x28]	       565	sequencer.c	FUNCTION_22
0x1c96	        0x488945f8	                mov qword [rbp - 8], rax	       565	sequencer.c	FUNCTION_22
0x1c9a	            0x31c0	                            xor eax, eax	       565	sequencer.c	FUNCTION_22
0x1c9c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1ca0	      0xb900000000	                              mov ecx, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1ca5	          0x4889c2	                            mov rdx, rax	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1ca8	      0xbe01000000	                              mov esi, 1	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1cad	      0xbf00000000	                              mov edi, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1cb2	      0xe800000000	                          call 0x4001cf7	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1cb7	          0x4885c0	                           test rax, rax	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1cba	            0x7521	                           jne 0x4001d1d	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x1cbc	      0xbf00000000	                              mov edi, 0	       570	sequencer.c	FUNCTION_22	CALL_3
0x1cc1	      0xe8a1e6ffff	                               call sym.	       570	sequencer.c	FUNCTION_22	CALL_3
0x1cc6	          0x4889c7	                            mov rdi, rax	       570	sequencer.c	FUNCTION_22	CALL_3
0x1cc9	      0xb800000000	                              mov eax, 0	       570	sequencer.c	FUNCTION_22	CALL_3
0x1cce	      0xe800000000	                          call 0x4001d13	       570	sequencer.c	FUNCTION_22	CALL_3
0x1cd3	      0xe828e3ffff	                    call sym.const_error	       570	sequencer.c	FUNCTION_22	CALL_3
0x1cd8	      0xe9b3000000	                           jmp 0x4001dd0	       570	sequencer.c	FUNCTION_22	CALL_3
0x1cdd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       572	sequencer.c	FUNCTION_22	CALL_4
0x1ce1	          0x4889c7	                            mov rdi, rax	       572	sequencer.c	FUNCTION_22	CALL_4
0x1ce4	      0xe800000000	                          call 0x4001d29	       572	sequencer.c	FUNCTION_22	CALL_4
0x1ce9	        0x488945d8	             mov qword [rbp - 0x28], rax	       572	sequencer.c	FUNCTION_22	CALL_4
0x1ced	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       582	sequencer.c	FUNCTION_22	IF_2	CALL_5
0x1cf1	          0x4889c7	                            mov rdi, rax	       582	sequencer.c	FUNCTION_22	IF_2	CALL_5
0x1cf4	      0xe8cee7ffff	                   call sym.parse_commit	       582	sequencer.c	FUNCTION_22	IF_2	CALL_5
0x1cf9	            0x85c0	                           test eax, eax	       582	sequencer.c	FUNCTION_22	IF_2	CALL_5
0x1cfb	            0x740a	                            je 0x4001d47	       582	sequencer.c	FUNCTION_22	IF_2	CALL_5
0x1cfd	      0xb8ffffffff	                     mov eax, 0xffffffff	       583	sequencer.c	FUNCTION_22	IF_2
0x1d02	      0xe989000000	                           jmp 0x4001dd0	       583	sequencer.c	FUNCTION_22	IF_2
0x1d07	    0x488b05000000	            mov rax, qword [0x04001d4e] 	       585	sequencer.c	FUNCTION_22	IF_3
0x1d0e	          0x4885c0	                           test rax, rax	       585	sequencer.c	FUNCTION_22	IF_3
0x1d11	            0x750c	                           jne 0x4001d5f	       585	sequencer.c	FUNCTION_22	IF_3
0x1d13	      0xe800000000	                          call 0x4001d58	       586	sequencer.c	FUNCTION_22	CALL_6
0x1d18	    0x488905000000	            mov qword [0x04001d5f], rax 	       586	sequencer.c	FUNCTION_22	CALL_6
0x1d1f	    0x488b05000000	            mov rax, qword [0x04001d66] 	       588	sequencer.c	FUNCTION_22	IF_4	CALL_7
0x1d26	          0x4889c7	                            mov rdi, rax	       588	sequencer.c	FUNCTION_22	IF_4	CALL_7
0x1d29	      0xe800000000	                          call 0x4001d6e	       588	sequencer.c	FUNCTION_22	IF_4	CALL_7
0x1d2e	            0x85c0	                           test eax, eax	       588	sequencer.c	FUNCTION_22	IF_4	CALL_7
0x1d30	            0x7531	                           jne 0x4001da3	       588	sequencer.c	FUNCTION_22	IF_4	CALL_7
0x1d32	      0xbe00000000	                              mov esi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_8
0x1d37	      0xbf00000000	                              mov edi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_8
0x1d3c	      0xe800000000	                          call 0x4001d81	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_8
0x1d41	            0x85c0	                           test eax, eax	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_8
0x1d43	            0x741e	                            je 0x4001da3	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_8
0x1d45	      0xbf00000000	                              mov edi, 0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x1d4a	      0xe818e6ffff	                               call sym.	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x1d4f	          0x4889c7	                            mov rdi, rax	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x1d52	      0xb800000000	                              mov eax, 0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x1d57	      0xe800000000	                          call 0x4001d9c	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x1d5c	      0xe89fe2ffff	                    call sym.const_error	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x1d61	            0xeb2d	                           jmp 0x4001dd0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x1d63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       593	sequencer.c	FUNCTION_22	CALL_12
0x1d67	          0x4889c7	                            mov rdi, rax	       593	sequencer.c	FUNCTION_22	CALL_12
0x1d6a	      0xe800000000	                          call 0x4001daf	       593	sequencer.c	FUNCTION_22	CALL_12
0x1d6f	          0x4889c2	                            mov rdx, rax	       593	sequencer.c	FUNCTION_22	CALL_12
0x1d72	    0x488b05000000	            mov rax, qword [0x04001db9] 	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d79	        0x4883c004	                              add rax, 4	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d7d	          0x4889d6	                            mov rsi, rdx	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d80	          0x4889c7	                            mov rdi, rax	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d83	      0xe835e6ffff	                         call sym.oidcmp	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d88	            0x85c0	                           test eax, eax	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d8a	           0xf94c0	                                 sete al	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d8d	           0xfb6c0	                           movzx eax, al	       592	sequencer.c	FUNCTION_22	CALL_11
0x1d90	        0x488b4df8	                mov rcx, qword [rbp - 8]	       594	sequencer.c	FUNCTION_22
0x1d94	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       594	sequencer.c	FUNCTION_22
0x1d9d	            0x7405	                            je 0x4001de4	       594	sequencer.c	FUNCTION_22
0x1d9f	      0xe800000000	                          call 0x4001de4	       594	sequencer.c	FUNCTION_22
0x1da4	              0xc9	                                   leave	       594	sequencer.c	FUNCTION_22
0x1da5	              0xc3	                                     ret	       594	sequencer.c	FUNCTION_22
peek_command	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,1	44
0x904b	              0x55	                                push rbp	      2903	sequencer.c	FUNCTION_84
0x904c	          0x4889e5	                            mov rbp, rsp	      2903	sequencer.c	FUNCTION_84
0x904f	        0x4883ec20	                           sub rsp, 0x20	      2903	sequencer.c	FUNCTION_84
0x9053	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2903	sequencer.c	FUNCTION_84
0x9057	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2903	sequencer.c	FUNCTION_84
0x905a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x905e	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2906	sequencer.c	FUNCTION_84	FOR_1
0x9061	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x9064	             0x1d0	                            add eax, edx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x9066	          0x8945fc	                mov dword [rbp - 4], eax	      2906	sequencer.c	FUNCTION_84	FOR_1
0x9069	            0xeb51	                           jmp 0x40090fc	      2906	sequencer.c	FUNCTION_84	FOR_1
0x906b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x906f	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9073	          0x8b45fc	                mov eax, dword [rbp - 4]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9076	          0x4863d0	                         movsxd rdx, eax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9079	          0x4889d0	                            mov rax, rdx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x907c	          0x4801c0	                            add rax, rax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x907f	          0x4801d0	                            add rax, rdx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9082	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9086	          0x4801c8	                            add rax, rcx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9089	            0x8b00	                    mov eax, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x908b	            0x89c7	                            mov edi, eax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x908d	      0xe8adabffff	                        call sym.is_noop	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9092	            0x85c0	                           test eax, eax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9094	            0x7522	                           jne 0x40090f8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x9096	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x909a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x909e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90a1	          0x4863d0	                         movsxd rdx, eax	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90a4	          0x4889d0	                            mov rax, rdx	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90a7	          0x4801c0	                            add rax, rax	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90aa	          0x4801d0	                            add rax, rdx	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90ad	        0x48c1e004	                              shl rax, 4	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90b1	          0x4801c8	                            add rax, rcx	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90b4	            0x8b00	                    mov eax, dword [rax]	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90b6	            0xeb15	                           jmp 0x400910d	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x90b8	        0x8345fc01	                  add dword [rbp - 4], 1	      2906	sequencer.c	FUNCTION_84	FOR_1
0x90bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x90c0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2906	sequencer.c	FUNCTION_84	FOR_1
0x90c3	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x90c6	            0x7fa3	                            jg 0x40090ab	      2906	sequencer.c	FUNCTION_84	FOR_1
0x90c8	      0xb8ffffffff	                     mov eax, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x90cd	              0xc9	                                   leave	      2911	sequencer.c	FUNCTION_84
0x90ce	              0xc3	                                     ret	      2911	sequencer.c	FUNCTION_84
_	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,2	15
0x367	              0x55	                                push rbp	        51	gettext.h	FUNCTION_165
0x368	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_165
0x36b	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_165
0x36f	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_165
0x373	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_165	IF_1
0x377	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_165	IF_1
0x37a	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_165	IF_1
0x37c	            0x7507	                           jne 0x40003c5	        52	gettext.h	FUNCTION_165	IF_1
0x37e	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_165	IF_1
0x383	            0xeb0c	                           jmp 0x40003d1	        53	gettext.h	FUNCTION_165	IF_1
0x385	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_165	CALL_2
0x389	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_165	CALL_2
0x38c	      0xe800000000	                          call 0x40003d1	        54	gettext.h	FUNCTION_165	CALL_2
0x391	              0xc9	                                   leave	        55	gettext.h	FUNCTION_165
0x392	              0xc3	                                     ret	        55	gettext.h	FUNCTION_165
free_message	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,4	26
0x11b9	              0x55	                                push rbp	       333	sequencer.c	FUNCTION_12
0x11ba	          0x4889e5	                            mov rbp, rsp	       333	sequencer.c	FUNCTION_12
0x11bd	        0x4883ec10	                           sub rsp, 0x10	       333	sequencer.c	FUNCTION_12
0x11c1	        0x48897df8	                mov qword [rbp - 8], rdi	       333	sequencer.c	FUNCTION_12
0x11c5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       333	sequencer.c	FUNCTION_12
0x11c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       334	sequencer.c	FUNCTION_12	CALL_1
0x11cd	          0x488b00	                    mov rax, qword [rax]	       334	sequencer.c	FUNCTION_12	CALL_1
0x11d0	          0x4889c7	                            mov rdi, rax	       334	sequencer.c	FUNCTION_12	CALL_1
0x11d3	      0xe800000000	                          call 0x4001218	       334	sequencer.c	FUNCTION_12	CALL_1
0x11d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       335	sequencer.c	FUNCTION_12	CALL_2
0x11dc	        0x488b4008	                mov rax, qword [rax + 8]	       335	sequencer.c	FUNCTION_12	CALL_2
0x11e0	          0x4889c7	                            mov rdi, rax	       335	sequencer.c	FUNCTION_12	CALL_2
0x11e3	      0xe800000000	                          call 0x4001228	       335	sequencer.c	FUNCTION_12	CALL_2
0x11e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	sequencer.c	FUNCTION_12	CALL_3
0x11ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	       336	sequencer.c	FUNCTION_12	CALL_3
0x11f0	          0x4889c7	                            mov rdi, rax	       336	sequencer.c	FUNCTION_12	CALL_3
0x11f3	      0xe800000000	                          call 0x4001238	       336	sequencer.c	FUNCTION_12	CALL_3
0x11f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       337	sequencer.c	FUNCTION_12	CALL_4
0x11fc	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       337	sequencer.c	FUNCTION_12	CALL_4
0x1200	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	sequencer.c	FUNCTION_12	CALL_4
0x1204	          0x4889d6	                            mov rsi, rdx	       337	sequencer.c	FUNCTION_12	CALL_4
0x1207	          0x4889c7	                            mov rdi, rax	       337	sequencer.c	FUNCTION_12	CALL_4
0x120a	      0xe800000000	                          call 0x400124f	       337	sequencer.c	FUNCTION_12	CALL_4
0x120f	              0x90	                                     nop	       338	sequencer.c	FUNCTION_12
0x1210	              0xc9	                                   leave	       338	sequencer.c	FUNCTION_12
0x1211	              0xc3	                                     ret	       338	sequencer.c	FUNCTION_12
hashmap_get_from_hash	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,2	26
0x307	              0x55	                                push rbp	       305	hashmap.h	FUNCTION_158
0x308	          0x4889e5	                            mov rbp, rsp	       305	hashmap.h	FUNCTION_158
0x30b	        0x4883ec40	                           sub rsp, 0x40	       305	hashmap.h	FUNCTION_158
0x30f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       305	hashmap.h	FUNCTION_158
0x313	          0x8975d4	             mov dword [rbp - 0x2c], esi	       305	hashmap.h	FUNCTION_158
0x316	        0x488955c8	             mov qword [rbp - 0x38], rdx	       305	hashmap.h	FUNCTION_158
0x31a	    0x64488b042528	                mov rax, qword fs:[0x28]	       305	hashmap.h	FUNCTION_158
0x323	        0x488945f8	                mov qword [rbp - 8], rax	       305	hashmap.h	FUNCTION_158
0x327	            0x31c0	                            xor eax, eax	       305	hashmap.h	FUNCTION_158
0x329	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       307	hashmap.h	FUNCTION_158	CALL_1
0x32c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       307	hashmap.h	FUNCTION_158	CALL_1
0x330	            0x89d6	                            mov esi, edx	       307	hashmap.h	FUNCTION_158	CALL_1
0x332	          0x4889c7	                            mov rdi, rax	       307	hashmap.h	FUNCTION_158	CALL_1
0x335	      0xe8a2ffffff	             call sym.hashmap_entry_init	       307	hashmap.h	FUNCTION_158	CALL_1
0x33a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       308	hashmap.h	FUNCTION_158	CALL_2
0x33e	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       308	hashmap.h	FUNCTION_158	CALL_2
0x342	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	hashmap.h	FUNCTION_158	CALL_2
0x346	          0x4889ce	                            mov rsi, rcx	       308	hashmap.h	FUNCTION_158	CALL_2
0x349	          0x4889c7	                            mov rdi, rax	       308	hashmap.h	FUNCTION_158	CALL_2
0x34c	      0xe800000000	                          call 0x4000391	       308	hashmap.h	FUNCTION_158	CALL_2
0x351	        0x488b4df8	                mov rcx, qword [rbp - 8]	       309	hashmap.h	FUNCTION_158
0x355	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	hashmap.h	FUNCTION_158
0x35e	            0x7405	                            je 0x40003a5	       309	hashmap.h	FUNCTION_158
0x360	      0xe800000000	                          call 0x40003a5	       309	hashmap.h	FUNCTION_158
0x365	              0xc9	                                   leave	       309	hashmap.h	FUNCTION_158
0x366	              0xc3	                                     ret	       309	hashmap.h	FUNCTION_158
get_author	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,2	28
0x220e	              0x55	                                push rbp	       674	sequencer.c	FUNCTION_25
0x220f	          0x4889e5	                            mov rbp, rsp	       674	sequencer.c	FUNCTION_25
0x2212	        0x4883ec30	                           sub rsp, 0x30	       674	sequencer.c	FUNCTION_25
0x2216	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       674	sequencer.c	FUNCTION_25
0x221a	    0x64488b042528	                mov rax, qword fs:[0x28]	       674	sequencer.c	FUNCTION_25
0x2223	        0x488945f8	                mov qword [rbp - 8], rax	       674	sequencer.c	FUNCTION_25
0x2227	            0x31c0	                            xor eax, eax	       674	sequencer.c	FUNCTION_25
0x2229	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       678	sequencer.c	FUNCTION_25	CALL_1
0x222d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       678	sequencer.c	FUNCTION_25	CALL_1
0x2231	      0xbe00000000	                              mov esi, 0	       678	sequencer.c	FUNCTION_25	CALL_1
0x2236	          0x4889c7	                            mov rdi, rax	       678	sequencer.c	FUNCTION_25	CALL_1
0x2239	      0xe800000000	                          call 0x400227e	       678	sequencer.c	FUNCTION_25	CALL_1
0x223e	        0x488945f0	             mov qword [rbp - 0x10], rax	       678	sequencer.c	FUNCTION_25	CALL_1
0x2242	      0x48837df000	               cmp qword [rbp - 0x10], 0	       679	sequencer.c	FUNCTION_25	IF_1
0x2247	            0x7415	                            je 0x400229e	       679	sequencer.c	FUNCTION_25	IF_1
0x2249	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       680	sequencer.c	FUNCTION_25	CALL_2
0x224d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       680	sequencer.c	FUNCTION_25	CALL_2
0x2251	          0x4889d6	                            mov rsi, rdx	       680	sequencer.c	FUNCTION_25	CALL_2
0x2254	          0x4889c7	                            mov rdi, rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x2257	      0xe800000000	                          call 0x400229c	       680	sequencer.c	FUNCTION_25	CALL_2
0x225c	            0xeb05	                           jmp 0x40022a3	       680	sequencer.c	FUNCTION_25	CALL_2
0x225e	      0xb800000000	                              mov eax, 0	       682	sequencer.c	FUNCTION_25
0x2263	        0x488b4df8	                mov rcx, qword [rbp - 8]	       683	sequencer.c	FUNCTION_25
0x2267	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       683	sequencer.c	FUNCTION_25
0x2270	            0x7405	                            je 0x40022b7	       683	sequencer.c	FUNCTION_25
0x2272	      0xe800000000	                          call 0x40022b7	       683	sequencer.c	FUNCTION_25
0x2277	              0xc9	                                   leave	       683	sequencer.c	FUNCTION_25
0x2278	              0xc3	                                     ret	       683	sequencer.c	FUNCTION_25
command_to_char	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,0	19
0x3c03	              0x55	                                push rbp	      1350	sequencer.c	FUNCTION_42
0x3c04	          0x4889e5	                            mov rbp, rsp	      1350	sequencer.c	FUNCTION_42
0x3c07	          0x897dfc	                mov dword [rbp - 4], edi	      1350	sequencer.c	FUNCTION_42
0x3c0a	        0x837dfc0b	                cmp dword [rbp - 4], 0xb	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c0e	            0x7726	                            ja 0x4003c76	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c10	          0x8b45fc	                mov eax, dword [rbp - 4]	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c13	        0x48c1e004	                              shl rax, 4	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c17	    0x480500000000	                              add rax, 0	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c1d	           0xfb600	                   movzx eax, byte [rax]	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c20	            0x84c0	                             test al, al	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c22	            0x7412	                            je 0x4003c76	      1351	sequencer.c	FUNCTION_42	IF_1
0x3c24	          0x8b45fc	                mov eax, dword [rbp - 4]	      1352	sequencer.c	FUNCTION_42	IF_1
0x3c27	        0x48c1e004	                              shl rax, 4	      1352	sequencer.c	FUNCTION_42	IF_1
0x3c2b	    0x480500000000	                              add rax, 0	      1352	sequencer.c	FUNCTION_42	IF_1
0x3c31	           0xfb600	                   movzx eax, byte [rax]	      1352	sequencer.c	FUNCTION_42	IF_1
0x3c34	            0xeb07	                           jmp 0x4003c7d	      1352	sequencer.c	FUNCTION_42	IF_1
0x3c36	     0xfb605000000	           movzx eax, byte [0x04003c7d] 	      1353	sequencer.c	FUNCTION_42
0x3c3d	              0x5d	                                 pop rbp	      1354	sequencer.c	FUNCTION_42
0x3c3e	              0xc3	                                     ret	      1354	sequencer.c	FUNCTION_42
action_name	FOR,0:SWITCH,1:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,5	32
0x103f	              0x55	                                push rbp	       291	sequencer.c	FUNCTION_9
0x1040	          0x4889e5	                            mov rbp, rsp	       291	sequencer.c	FUNCTION_9
0x1043	              0x53	                                push rbx	       291	sequencer.c	FUNCTION_9
0x1044	        0x4883ec18	                           sub rsp, 0x18	       291	sequencer.c	FUNCTION_9
0x1048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       291	sequencer.c	FUNCTION_9
0x104c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x1050	            0x8b00	                    mov eax, dword [rax]	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x1052	          0x83f801	                              cmp eax, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x1055	            0x7413	                            je 0x40010aa	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x1057	          0x83f801	                              cmp eax, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x105a	            0x7207	                            jb 0x40010a3	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x105c	          0x83f802	                              cmp eax, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x105f	            0x7410	                            je 0x40010b1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x1061	            0xeb15	                           jmp 0x40010b8	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x1063	      0xb800000000	                              mov eax, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1	CALL_1
0x1068	            0xeb2d	                           jmp 0x40010d7	       294	sequencer.c	FUNCTION_9	SWITCH_1	CALL_1
0x106a	      0xb800000000	                              mov eax, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1	CALL_2
0x106f	            0xeb26	                           jmp 0x40010d7	       296	sequencer.c	FUNCTION_9	SWITCH_1	CALL_2
0x1071	      0xb800000000	                              mov eax, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1	CALL_3
0x1076	            0xeb1f	                           jmp 0x40010d7	       298	sequencer.c	FUNCTION_9	SWITCH_1	CALL_3
0x1078	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	sequencer.c	FUNCTION_9	CALL_5
0x107c	            0x8b18	                    mov ebx, dword [rax]	       300	sequencer.c	FUNCTION_9	CALL_5
0x107e	      0xbf00000000	                              mov edi, 0	       300	sequencer.c	FUNCTION_9	CALL_5
0x1083	      0xe8dff2ffff	                               call sym.	       300	sequencer.c	FUNCTION_9	CALL_5
0x1088	            0x89de	                            mov esi, ebx	       300	sequencer.c	FUNCTION_9	CALL_5
0x108a	          0x4889c7	                            mov rdi, rax	       300	sequencer.c	FUNCTION_9	CALL_5
0x108d	      0xb800000000	                              mov eax, 0	       300	sequencer.c	FUNCTION_9	CALL_5
0x1092	      0xe800000000	                          call 0x40010d7	       300	sequencer.c	FUNCTION_9	CALL_5
0x1097	        0x4883c418	                           add rsp, 0x18	       301	sequencer.c	FUNCTION_9
0x109b	              0x5b	                                 pop rbx	       301	sequencer.c	FUNCTION_9
0x109c	              0x5d	                                 pop rbp	       301	sequencer.c	FUNCTION_9
0x109d	              0xc3	                                     ret	       301	sequencer.c	FUNCTION_9
make_patch	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,4:WHILE,0:CALL,26	164
0x7534	              0x55	                                push rbp	      2406	sequencer.c	FUNCTION_74
0x7535	          0x4889e5	                            mov rbp, rsp	      2406	sequencer.c	FUNCTION_74
0x7538	              0x53	                                push rbx	      2406	sequencer.c	FUNCTION_74
0x7539	    0x4881ec180900	                          sub rsp, 0x918	      2406	sequencer.c	FUNCTION_74
0x7540	    0x4889bde8f6ff	            mov qword [rbp - 0x918], rdi	      2406	sequencer.c	FUNCTION_74
0x7547	    0x4889b5e0f6ff	            mov qword [rbp - 0x920], rsi	      2406	sequencer.c	FUNCTION_74
0x754e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2406	sequencer.c	FUNCTION_74
0x7557	        0x488945e8	             mov qword [rbp - 0x18], rax	      2406	sequencer.c	FUNCTION_74
0x755b	            0x31c0	                            xor eax, eax	      2406	sequencer.c	FUNCTION_74
0x755d	    0x48c78510f7ff	              mov qword [rbp - 0x8f0], 0	      2407	sequencer.c	FUNCTION_74
0x7568	    0x48c78518f7ff	              mov qword [rbp - 0x8e8], 0	      2407	sequencer.c	FUNCTION_74
0x7573	    0x48c78520f7ff	              mov qword [rbp - 0x8e0], 0	      2407	sequencer.c	FUNCTION_74
0x757e	    0xc785f4f6ffff	              mov dword [rbp - 0x90c], 0	      2410	sequencer.c	FUNCTION_74
0x7588	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2412	sequencer.c	FUNCTION_74	CALL_1
0x758f	          0x4889c7	                            mov rdi, rax	      2412	sequencer.c	FUNCTION_74	CALL_1
0x7592	      0xe8079bffff	              call sym.short_commit_name	      2412	sequencer.c	FUNCTION_74	CALL_1
0x7597	    0x48898500f7ff	            mov qword [rbp - 0x900], rax	      2412	sequencer.c	FUNCTION_74	CALL_1
0x759e	      0xe86292ffff	        call sym.rebase_path_stopped_sha	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75a3	          0x4889c3	                            mov rbx, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75a6	    0x488b8500f7ff	            mov rax, qword [rbp - 0x900]	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75ad	          0x4889c7	                            mov rdi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75b0	      0xe800000000	                          call 0x40075f5	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75b5	          0x4889c6	                            mov rsi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75b8	    0x488b8500f7ff	            mov rax, qword [rbp - 0x900]	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75bf	      0xb901000000	                              mov ecx, 1	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75c4	          0x4889da	                            mov rdx, rbx	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75c7	          0x4889c7	                            mov rdi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75ca	      0xe8d69cffff	                  call sym.write_message	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75cf	            0x85c0	                           test eax, eax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75d1	            0x790a	                           jns 0x400761d	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x75d3	      0xb8ffffffff	                     mov eax, 0xffffffff	      2414	sequencer.c	FUNCTION_74	IF_1
0x75d8	      0xe970020000	                           jmp 0x400788d	      2414	sequencer.c	FUNCTION_74	IF_1
0x75dd	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x75e4	        0x4883c004	                              add rax, 4	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x75e8	    0x41b900000000	                              mov r9d, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x75ee	    0x41b801000000	                              mov r8d, 1	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x75f4	      0xb900000000	                              mov ecx, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x75f9	          0x4889c2	                            mov rdx, rax	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x75fc	      0xbe00000000	                              mov esi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x7601	      0xbf00000000	                              mov edi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x7606	      0xe800000000	                          call 0x400764b	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x760b	            0x85c0	                           test eax, eax	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x760d	            0x7427	                            je 0x4007676	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x760f	      0xbf00000000	                              mov edi, 0	      2417	sequencer.c	FUNCTION_74	CALL_7
0x7614	      0xe84e8dffff	                               call sym.	      2417	sequencer.c	FUNCTION_74	CALL_7
0x7619	      0xbe00000000	                              mov esi, 0	      2417	sequencer.c	FUNCTION_74	CALL_7
0x761e	          0x4889c7	                            mov rdi, rax	      2417	sequencer.c	FUNCTION_74	CALL_7
0x7621	      0xb800000000	                              mov eax, 0	      2417	sequencer.c	FUNCTION_74	CALL_7
0x7626	      0xe800000000	                          call 0x400766b	      2417	sequencer.c	FUNCTION_74	CALL_7
0x762b	      0xe8d089ffff	                    call sym.const_error	      2417	sequencer.c	FUNCTION_74	CALL_7
0x7630	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2417	sequencer.c	FUNCTION_74	CALL_7
0x7636	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	      2419	sequencer.c	FUNCTION_74	CALL_9
0x763d	          0x4889c7	                            mov rdi, rax	      2419	sequencer.c	FUNCTION_74	CALL_9
0x7640	      0xe85c96ffff	                        call sym.get_dir	      2419	sequencer.c	FUNCTION_74	CALL_9
0x7645	          0x4889c2	                            mov rdx, rax	      2419	sequencer.c	FUNCTION_74	CALL_9
0x7648	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2419	sequencer.c	FUNCTION_74	CALL_9
0x764f	      0xbe00000000	                              mov esi, 0	      2419	sequencer.c	FUNCTION_74	CALL_9
0x7654	          0x4889c7	                            mov rdi, rax	      2419	sequencer.c	FUNCTION_74	CALL_9
0x7657	      0xb800000000	                              mov eax, 0	      2419	sequencer.c	FUNCTION_74	CALL_9
0x765c	      0xe800000000	                          call 0x40076a1	      2419	sequencer.c	FUNCTION_74	CALL_9
0x7661	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      2420	sequencer.c	FUNCTION_74	CALL_10
0x7668	      0xbab0080000	                          mov edx, 0x8b0	      2420	sequencer.c	FUNCTION_74	CALL_10
0x766d	      0xbe00000000	                              mov esi, 0	      2420	sequencer.c	FUNCTION_74	CALL_10
0x7672	          0x4889c7	                            mov rdi, rax	      2420	sequencer.c	FUNCTION_74	CALL_10
0x7675	      0xe800000000	                          call 0x40076ba	      2420	sequencer.c	FUNCTION_74	CALL_10
0x767a	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      2421	sequencer.c	FUNCTION_74	CALL_11
0x7681	      0xbe00000000	                              mov esi, 0	      2421	sequencer.c	FUNCTION_74	CALL_11
0x7686	          0x4889c7	                            mov rdi, rax	      2421	sequencer.c	FUNCTION_74	CALL_11
0x7689	      0xe800000000	                          call 0x40076ce	      2421	sequencer.c	FUNCTION_74	CALL_11
0x768e	    0xc785d0f7ffff	              mov dword [rbp - 0x830], 0	      2422	sequencer.c	FUNCTION_74
0x7698	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	      2423	sequencer.c	FUNCTION_74
0x769f	          0x83c801	                               or eax, 1	      2423	sequencer.c	FUNCTION_74
0x76a2	    0x8885a9f7ffff	              mov byte [rbp - 0x857], al	      2423	sequencer.c	FUNCTION_74
0x76a8	    0xc78588fcffff	          mov dword [rbp - 0x378], 0x10 	      2424	sequencer.c	FUNCTION_74
0x76b2	     0xfb685abf7ff	           movzx eax, byte [rbp - 0x855]	      2425	sequencer.c	FUNCTION_74
0x76b9	          0x83c880	                      or eax, 0xffffff80	      2425	sequencer.c	FUNCTION_74
0x76bc	    0x8885abf7ffff	              mov byte [rbp - 0x855], al	      2425	sequencer.c	FUNCTION_74
0x76c2	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	      2426	sequencer.c	FUNCTION_74
0x76c9	          0x83c808	                               or eax, 8	      2426	sequencer.c	FUNCTION_74
0x76cc	    0x8885a9f7ffff	              mov byte [rbp - 0x857], al	      2426	sequencer.c	FUNCTION_74
0x76d2	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2427	sequencer.c	FUNCTION_74	CALL_12
0x76d9	      0xbe00000000	                              mov esi, 0	      2427	sequencer.c	FUNCTION_74	CALL_12
0x76de	          0x4889c7	                            mov rdi, rax	      2427	sequencer.c	FUNCTION_74	CALL_12
0x76e1	      0xe800000000	                          call 0x4007726	      2427	sequencer.c	FUNCTION_74	CALL_12
0x76e6	    0x48898528fdff	            mov qword [rbp - 0x2d8], rax	      2427	sequencer.c	FUNCTION_74	CALL_12
0x76ed	    0xc78568fcffff	              mov dword [rbp - 0x398], 0	      2428	sequencer.c	FUNCTION_74
0x76f7	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	      2429	sequencer.c	FUNCTION_74	IF_3
0x76fe	          0x4885c0	                           test rax, rax	      2429	sequencer.c	FUNCTION_74	IF_3
0x7701	            0x752e	                           jne 0x4007771	      2429	sequencer.c	FUNCTION_74	IF_3
0x7703	    0x488b9d20f7ff	            mov rbx, qword [rbp - 0x8e0]	      2430	sequencer.c	FUNCTION_74	CALL_14
0x770a	      0xbf00000000	                              mov edi, 0	      2430	sequencer.c	FUNCTION_74	CALL_14
0x770f	      0xe8538cffff	                               call sym.	      2430	sequencer.c	FUNCTION_74	CALL_14
0x7714	          0x4889de	                            mov rsi, rbx	      2430	sequencer.c	FUNCTION_74	CALL_14
0x7717	          0x4889c7	                            mov rdi, rax	      2430	sequencer.c	FUNCTION_74	CALL_14
0x771a	      0xb800000000	                              mov eax, 0	      2430	sequencer.c	FUNCTION_74	CALL_14
0x771f	      0xe800000000	                          call 0x4007764	      2430	sequencer.c	FUNCTION_74	CALL_14
0x7724	      0xe8d788ffff	                    call sym.const_error	      2430	sequencer.c	FUNCTION_74	CALL_14
0x7729	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2430	sequencer.c	FUNCTION_74	CALL_14
0x772f	            0xeb2e	                           jmp 0x400779f	      2430	sequencer.c	FUNCTION_74	CALL_14
0x7731	    0x488b95e8f6ff	            mov rdx, qword [rbp - 0x918]	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_15
0x7738	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_15
0x773f	          0x4889d6	                            mov rsi, rdx	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_15
0x7742	          0x4889c7	                            mov rdi, rax	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_15
0x7745	      0xe800000000	                          call 0x400778a	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_15
0x774a	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_15
0x7750	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_16
0x7757	          0x4889c7	                            mov rdi, rax	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_16
0x775a	      0xe800000000	                          call 0x400779f	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_16
0x775f	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2435	sequencer.c	FUNCTION_74	CALL_17
0x7766	      0xbe00000000	                              mov esi, 0	      2435	sequencer.c	FUNCTION_74	CALL_17
0x776b	          0x4889c7	                            mov rdi, rax	      2435	sequencer.c	FUNCTION_74	CALL_17
0x776e	      0xe8ba89ffff	                  call sym.strbuf_setlen	      2435	sequencer.c	FUNCTION_74	CALL_17
0x7773	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	      2437	sequencer.c	FUNCTION_74	CALL_19
0x777a	          0x4889c7	                            mov rdi, rax	      2437	sequencer.c	FUNCTION_74	CALL_19
0x777d	      0xe81f95ffff	                        call sym.get_dir	      2437	sequencer.c	FUNCTION_74	CALL_19
0x7782	          0x4889c2	                            mov rdx, rax	      2437	sequencer.c	FUNCTION_74	CALL_19
0x7785	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2437	sequencer.c	FUNCTION_74	CALL_19
0x778c	      0xbe00000000	                              mov esi, 0	      2437	sequencer.c	FUNCTION_74	CALL_19
0x7791	          0x4889c7	                            mov rdi, rax	      2437	sequencer.c	FUNCTION_74	CALL_19
0x7794	      0xb800000000	                              mov eax, 0	      2437	sequencer.c	FUNCTION_74	CALL_19
0x7799	      0xe800000000	                          call 0x40077de	      2437	sequencer.c	FUNCTION_74	CALL_19
0x779e	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x77a5	          0x4889c7	                            mov rdi, rax	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x77a8	      0xe800000000	                          call 0x40077ed	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x77ad	            0x85c0	                           test eax, eax	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x77af	     0xf8583000000	                           jne 0x4007878	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x77b5	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x77bc	      0xbe00000000	                              mov esi, 0	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x77c1	          0x4889c7	                            mov rdi, rax	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x77c4	      0xe800000000	                          call 0x4007809	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x77c9	    0x48898508f7ff	            mov qword [rbp - 0x8f8], rax	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x77d0	    0x488d95f8f6ff	                  lea rdx, [rbp - 0x908]	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_22
0x77d7	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_22
0x77de	          0x4889d6	                            mov rsi, rdx	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_22
0x77e1	          0x4889c7	                            mov rdi, rax	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_22
0x77e4	      0xe800000000	                          call 0x4007829	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_22
0x77e9	    0x488b9d20f7ff	            mov rbx, qword [rbp - 0x8e0]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x77f0	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x77f7	          0x4889c7	                            mov rdi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x77fa	      0xe800000000	                          call 0x400783f	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x77ff	          0x4889c6	                            mov rsi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x7802	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x7809	      0xb901000000	                              mov ecx, 1	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x780e	          0x4889da	                            mov rdx, rbx	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x7811	          0x4889c7	                            mov rdi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x7814	      0xe88c9affff	                  call sym.write_message	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x7819	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_24
0x781f	    0x488b9508f7ff	            mov rdx, qword [rbp - 0x8f8]	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_25
0x7826	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_25
0x782d	          0x4889d6	                            mov rsi, rdx	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_25
0x7830	          0x4889c7	                            mov rdi, rax	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_25
0x7833	      0xe800000000	                          call 0x4007878	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_25
0x7838	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2444	sequencer.c	FUNCTION_74	CALL_26
0x783f	          0x4889c7	                            mov rdi, rax	      2444	sequencer.c	FUNCTION_74	CALL_26
0x7842	      0xe800000000	                          call 0x4007887	      2444	sequencer.c	FUNCTION_74	CALL_26
0x7847	    0x8b85f4f6ffff	            mov eax, dword [rbp - 0x90c]	      2446	sequencer.c	FUNCTION_74
0x784d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2447	sequencer.c	FUNCTION_74
0x7851	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2447	sequencer.c	FUNCTION_74
0x785a	            0x7405	                            je 0x40078a1	      2447	sequencer.c	FUNCTION_74
0x785c	      0xe800000000	                          call 0x40078a1	      2447	sequencer.c	FUNCTION_74
0x7861	    0x4881c4180900	                          add rsp, 0x918	      2447	sequencer.c	FUNCTION_74
0x7868	              0x5b	                                 pop rbx	      2447	sequencer.c	FUNCTION_74
0x7869	              0x5d	                                 pop rbp	      2447	sequencer.c	FUNCTION_74
0x786a	              0xc3	                                     ret	      2447	sequencer.c	FUNCTION_74
get_item_line_offset	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,0	23
0x5aea	              0x55	                                push rbp	      1936	sequencer.c	FUNCTION_56
0x5aeb	          0x4889e5	                            mov rbp, rsp	      1936	sequencer.c	FUNCTION_56
0x5aee	        0x48897df8	                mov qword [rbp - 8], rdi	      1936	sequencer.c	FUNCTION_56
0x5af2	          0x8975f4	              mov dword [rbp - 0xc], esi	      1936	sequencer.c	FUNCTION_56
0x5af5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1937	sequencer.c	FUNCTION_56
0x5af9	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1937	sequencer.c	FUNCTION_56
0x5afc	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1937	sequencer.c	FUNCTION_56
0x5aff	            0x7e24	                           jle 0x4005b65	      1937	sequencer.c	FUNCTION_56
0x5b01	        0x488b45f8	                mov rax, qword [rbp - 8]	      1938	sequencer.c	FUNCTION_56
0x5b05	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1938	sequencer.c	FUNCTION_56
0x5b09	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1938	sequencer.c	FUNCTION_56
0x5b0c	          0x4863d0	                         movsxd rdx, eax	      1938	sequencer.c	FUNCTION_56
0x5b0f	          0x4889d0	                            mov rax, rdx	      1938	sequencer.c	FUNCTION_56
0x5b12	          0x4801c0	                            add rax, rax	      1938	sequencer.c	FUNCTION_56
0x5b15	          0x4801d0	                            add rax, rdx	      1938	sequencer.c	FUNCTION_56
0x5b18	        0x48c1e004	                              shl rax, 4	      1938	sequencer.c	FUNCTION_56
0x5b1c	          0x4801c8	                            add rax, rcx	      1938	sequencer.c	FUNCTION_56
0x5b1f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1938	sequencer.c	FUNCTION_56
0x5b23	            0xeb08	                           jmp 0x4005b6d	      1937	sequencer.c	FUNCTION_56
0x5b25	        0x488b45f8	                mov rax, qword [rbp - 8]	      1938	sequencer.c	FUNCTION_56
0x5b29	        0x488b4008	                mov rax, qword [rax + 8]	      1938	sequencer.c	FUNCTION_56
0x5b2d	              0x5d	                                 pop rbp	      1939	sequencer.c	FUNCTION_56
0x5b2e	              0xc3	                                     ret	      1939	sequencer.c	FUNCTION_56
error_with_patch	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,4:WHILE,0:CALL,6	54
0x790c	              0x55	                                push rbp	      2464	sequencer.c	FUNCTION_76
0x790d	          0x4889e5	                            mov rbp, rsp	      2464	sequencer.c	FUNCTION_76
0x7910	        0x4883ec30	                           sub rsp, 0x30	      2464	sequencer.c	FUNCTION_76
0x7914	        0x48897df8	                mov qword [rbp - 8], rdi	      2464	sequencer.c	FUNCTION_76
0x7918	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2464	sequencer.c	FUNCTION_76
0x791c	          0x8955ec	             mov dword [rbp - 0x14], edx	      2464	sequencer.c	FUNCTION_76
0x791f	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2464	sequencer.c	FUNCTION_76
0x7923	        0x448945e8	             mov dword [rbp - 0x18], r8d	      2464	sequencer.c	FUNCTION_76
0x7927	        0x44894ddc	             mov dword [rbp - 0x24], r9d	      2464	sequencer.c	FUNCTION_76
0x792b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x792f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x7933	          0x4889d6	                            mov rsi, rdx	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x7936	          0x4889c7	                            mov rdi, rax	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x7939	      0xe8f6fbffff	                     call sym.make_patch	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x793e	            0x85c0	                           test eax, eax	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x7940	            0x740a	                            je 0x400798c	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x7942	      0xb8ffffffff	                     mov eax, 0xffffffff	      2466	sequencer.c	FUNCTION_76	IF_1
0x7947	      0xe980000000	                           jmp 0x4007a0c	      2466	sequencer.c	FUNCTION_76	IF_1
0x794c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2468	sequencer.c	FUNCTION_76	IF_2
0x7950	            0x743a	                            je 0x40079cc	      2468	sequencer.c	FUNCTION_76	IF_2
0x7952	      0xe814ffffff	                call sym.intend_to_amend	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x7957	            0x85c0	                           test eax, eax	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x7959	            0x7407	                            je 0x40079a2	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x795b	      0xb8ffffffff	                     mov eax, 0xffffffff	      2470	sequencer.c	FUNCTION_76	IF_2	IF_3
0x7960	            0xeb6a	                           jmp 0x4007a0c	      2470	sequencer.c	FUNCTION_76	IF_2	IF_3
0x7962	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x7966	          0x4889c7	                            mov rdi, rax	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x7969	      0xe89c94ffff	            call sym.gpg_sign_opt_quoted	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x796e	          0x4889c2	                            mov rdx, rax	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x7971	    0x488b05000000	            mov rax, qword [0x040079b8] 	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x7978	      0xbe00000000	                              mov esi, 0	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x797d	          0x4889c7	                            mov rdi, rax	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x7980	      0xb800000000	                              mov eax, 0	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x7985	      0xe800000000	                          call 0x40079ca	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x798a	            0xeb3d	                           jmp 0x4007a09	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x798c	        0x837de800	               cmp dword [rbp - 0x18], 0	      2479	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x7990	            0x7437	                            je 0x4007a09	      2479	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x7992	        0x488b45f8	                mov rax, qword [rbp - 8]	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x7996	          0x4889c7	                            mov rdi, rax	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x7999	      0xe80097ffff	              call sym.short_commit_name	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x799e	          0x4889c6	                            mov rsi, rax	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79a1	    0x488b05000000	            mov rax, qword [0x040079e8] 	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79a8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79ac	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79af	          0x4989c8	                             mov r8, rcx	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79b2	            0x89d1	                            mov ecx, edx	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79b4	          0x4889f2	                            mov rdx, rsi	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79b7	      0xbe00000000	                              mov esi, 0	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79bc	          0x4889c7	                            mov rdi, rax	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79bf	      0xb800000000	                              mov eax, 0	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79c4	      0xe800000000	                          call 0x4007a09	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x79c9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2483	sequencer.c	FUNCTION_76
0x79cc	              0xc9	                                   leave	      2484	sequencer.c	FUNCTION_76
0x79cd	              0xc3	                                     ret	      2484	sequencer.c	FUNCTION_76
git_sequencer_config	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,4:IF,8:WHILE,0:CALL,13	121
0xa97	              0x55	                                push rbp	       148	sequencer.c	FUNCTION_1
0xa98	          0x4889e5	                            mov rbp, rsp	       148	sequencer.c	FUNCTION_1
0xa9b	              0x53	                                push rbx	       148	sequencer.c	FUNCTION_1
0xa9c	        0x4883ec48	                           sub rsp, 0x48	       148	sequencer.c	FUNCTION_1
0xaa0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       148	sequencer.c	FUNCTION_1
0xaa4	        0x488975c0	             mov qword [rbp - 0x40], rsi	       148	sequencer.c	FUNCTION_1
0xaa8	        0x488955b8	             mov qword [rbp - 0x48], rdx	       148	sequencer.c	FUNCTION_1
0xaac	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	sequencer.c	FUNCTION_1
0xab5	        0x488945e8	             mov qword [rbp - 0x18], rax	       148	sequencer.c	FUNCTION_1
0xab9	            0x31c0	                            xor eax, eax	       148	sequencer.c	FUNCTION_1
0xabb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       149	sequencer.c	FUNCTION_1
0xabf	        0x488945e0	             mov qword [rbp - 0x20], rax	       149	sequencer.c	FUNCTION_1
0xac3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0xac7	      0xbe00000000	                              mov esi, 0	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0xacc	          0x4889c7	                            mov rdi, rax	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0xacf	      0xe800000000	                          call 0x4000b14	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0xad4	            0x85c0	                           test eax, eax	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0xad6	     0xf85d9000000	                           jne 0x4000bf5	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0xadc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0xae0	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0xae4	        0x488d45d8	                   lea rax, [rbp - 0x28]	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0xae8	          0x4889ce	                            mov rsi, rcx	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0xaeb	          0x4889c7	                            mov rdi, rax	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0xaee	      0xe800000000	                          call 0x4000b33	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0xaf3	          0x8945d4	             mov dword [rbp - 0x2c], eax	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0xaf6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0xafa	            0x7408	                            je 0x4000b44	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0xafc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       157	sequencer.c	FUNCTION_1	IF_1	IF_2
0xaff	      0xe93e010000	                           jmp 0x4000c82	       157	sequencer.c	FUNCTION_1	IF_1	IF_2
0xb04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0xb08	      0xbe00000000	                              mov esi, 0	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0xb0d	          0x4889c7	                            mov rdi, rax	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0xb10	      0xe800000000	                          call 0x4000b55	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0xb15	            0x85c0	                           test eax, eax	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0xb17	            0x7510	                           jne 0x4000b69	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0xb19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0xb1d	    0xc74038010000	               mov dword [rax + 0x38], 1	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0xb24	      0xe984000000	                           jmp 0x4000bed	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0xb29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0xb2d	      0xbe00000000	                              mov esi, 0	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0xb32	          0x4889c7	                            mov rdi, rax	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0xb35	      0xe800000000	                          call 0x4000b7a	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0xb3a	            0x85c0	                           test eax, eax	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0xb3c	            0x750d	                           jne 0x4000b8b	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0xb3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0xb42	    0xc74038000000	               mov dword [rax + 0x38], 0	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0xb49	            0xeb62	                           jmp 0x4000bed	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0xb4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0xb4f	      0xbe00000000	                              mov esi, 0	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0xb54	          0x4889c7	                            mov rdi, rax	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0xb57	      0xe800000000	                          call 0x4000b9c	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0xb5c	            0x85c0	                           test eax, eax	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0xb5e	            0x750d	                           jne 0x4000bad	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0xb60	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0xb64	    0xc74038030000	               mov dword [rax + 0x38], 3	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0xb6b	            0xeb40	                           jmp 0x4000bed	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0xb6d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0xb71	      0xbe00000000	                              mov esi, 0	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0xb76	          0x4889c7	                            mov rdi, rax	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0xb79	      0xe800000000	                          call 0x4000bbe	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0xb7e	            0x85c0	                           test eax, eax	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0xb80	            0x750d	                           jne 0x4000bcf	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0xb82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0xb86	    0xc74038000000	               mov dword [rax + 0x38], 0	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0xb8d	            0xeb1e	                           jmp 0x4000bed	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0xb8f	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0xb93	      0xbf00000000	                              mov edi, 0	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0xb98	      0xe8caf7ffff	                               call sym.	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0xb9d	          0x4889de	                            mov rsi, rbx	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0xba0	          0x4889c7	                            mov rdi, rax	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0xba3	      0xb800000000	                              mov eax, 0	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0xba8	      0xe800000000	                          call 0x4000bed	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0xbad	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       171	sequencer.c	FUNCTION_1	IF_1
0xbb0	      0xe98d000000	                           jmp 0x4000c82	       171	sequencer.c	FUNCTION_1	IF_1
0xbb5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0xbb9	      0xbe00000000	                              mov esi, 0	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0xbbe	          0x4889c7	                            mov rdi, rax	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0xbc1	      0xe800000000	                          call 0x4000c06	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0xbc6	            0x85c0	                           test eax, eax	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0xbc8	            0x753a	                           jne 0x4000c44	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0xbca	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbd2	          0x4889d6	                            mov rsi, rdx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbd5	          0x4889c7	                            mov rdi, rax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbd8	      0xe800000000	                          call 0x4000c1d	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbdd	            0x85c0	                           test eax, eax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbdf	            0x740f	                            je 0x4000c30	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbe1	      0xbf00000000	                              mov edi, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbe6	      0xe800000000	                          call 0x4000c2b	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbeb	          0x4889c2	                            mov rdx, rax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbee	            0xeb05	                           jmp 0x4000c35	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbf0	      0xba00000000	                              mov edx, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbf5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbf9	        0x48895030	             mov qword [rax + 0x30], rdx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0xbfd	      0xb800000000	                              mov eax, 0	       176	sequencer.c	FUNCTION_1	IF_7
0xc02	            0xeb3e	                           jmp 0x4000c82	       176	sequencer.c	FUNCTION_1	IF_7
0xc04	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       179	sequencer.c	FUNCTION_1	CALL_12
0xc08	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       179	sequencer.c	FUNCTION_1	CALL_12
0xc0c	      0xba00000000	                              mov edx, 0	       179	sequencer.c	FUNCTION_1	CALL_12
0xc11	          0x4889ce	                            mov rsi, rcx	       179	sequencer.c	FUNCTION_1	CALL_12
0xc14	          0x4889c7	                            mov rdi, rax	       179	sequencer.c	FUNCTION_1	CALL_12
0xc17	      0xe800000000	                          call 0x4000c5c	       179	sequencer.c	FUNCTION_1	CALL_12
0xc1c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       179	sequencer.c	FUNCTION_1	CALL_12
0xc1f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       180	sequencer.c	FUNCTION_1	IF_8
0xc23	            0x7405	                            je 0x4000c6a	       180	sequencer.c	FUNCTION_1	IF_8
0xc25	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       181	sequencer.c	FUNCTION_1	IF_8
0xc28	            0xeb18	                           jmp 0x4000c82	       181	sequencer.c	FUNCTION_1	IF_8
0xc2a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       183	sequencer.c	FUNCTION_1	CALL_13
0xc2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       183	sequencer.c	FUNCTION_1	CALL_13
0xc32	      0xba00000000	                              mov edx, 0	       183	sequencer.c	FUNCTION_1	CALL_13
0xc37	          0x4889ce	                            mov rsi, rcx	       183	sequencer.c	FUNCTION_1	CALL_13
0xc3a	          0x4889c7	                            mov rdi, rax	       183	sequencer.c	FUNCTION_1	CALL_13
0xc3d	      0xe800000000	                          call 0x4000c82	       183	sequencer.c	FUNCTION_1	CALL_13
0xc42	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       184	sequencer.c	FUNCTION_1
0xc46	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       184	sequencer.c	FUNCTION_1
0xc4f	            0x7405	                            je 0x4000c96	       184	sequencer.c	FUNCTION_1
0xc51	      0xe800000000	                          call 0x4000c96	       184	sequencer.c	FUNCTION_1
0xc56	        0x4883c448	                           add rsp, 0x48	       184	sequencer.c	FUNCTION_1
0xc5a	              0x5b	                                 pop rbx	       184	sequencer.c	FUNCTION_1
0xc5b	              0x5d	                                 pop rbp	       184	sequencer.c	FUNCTION_1
0xc5c	              0xc3	                                     ret	       184	sequencer.c	FUNCTION_1
short_commit_name	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	12
0x109e	              0x55	                                push rbp	       311	sequencer.c	FUNCTION_10
0x109f	          0x4889e5	                            mov rbp, rsp	       311	sequencer.c	FUNCTION_10
0x10a2	        0x4883ec10	                           sub rsp, 0x10	       311	sequencer.c	FUNCTION_10
0x10a6	        0x48897df8	                mov qword [rbp - 8], rdi	       311	sequencer.c	FUNCTION_10
0x10aa	    0x8b0500000000	            mov eax, dword [0x040010f0] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x10b0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       312	sequencer.c	FUNCTION_10	CALL_1
0x10b4	        0x4883c204	                              add rdx, 4	       312	sequencer.c	FUNCTION_10	CALL_1
0x10b8	            0x89c6	                            mov esi, eax	       312	sequencer.c	FUNCTION_10	CALL_1
0x10ba	          0x4889d7	                            mov rdi, rdx	       312	sequencer.c	FUNCTION_10	CALL_1
0x10bd	      0xe800000000	                          call 0x4001102	       312	sequencer.c	FUNCTION_10	CALL_1
0x10c2	              0xc9	                                   leave	       313	sequencer.c	FUNCTION_10
0x10c3	              0xc3	                                     ret	       313	sequencer.c	FUNCTION_10
read_populate_opts	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,2:IF,11:WHILE,1:CALL,29	171
0x65cb	              0x55	                                push rbp	      2102	sequencer.c	FUNCTION_64
0x65cc	          0x4889e5	                            mov rbp, rsp	      2102	sequencer.c	FUNCTION_64
0x65cf	              0x53	                                push rbx	      2102	sequencer.c	FUNCTION_64
0x65d0	        0x4883ec48	                           sub rsp, 0x48	      2102	sequencer.c	FUNCTION_64
0x65d4	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2102	sequencer.c	FUNCTION_64
0x65d8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2102	sequencer.c	FUNCTION_64
0x65e1	        0x488945e8	             mov qword [rbp - 0x18], rax	      2102	sequencer.c	FUNCTION_64
0x65e5	            0x31c0	                            xor eax, eax	      2102	sequencer.c	FUNCTION_64
0x65e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x65eb	          0x4889c7	                            mov rdi, rax	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x65ee	      0xe895a6ffff	                    call sym.is_rebase_i	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x65f3	            0x85c0	                           test eax, eax	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x65f5	     0xf84e7010000	                            je 0x4006822	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x65fb	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x6603	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x660b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x6613	      0xe8a9a2ffff	       call sym.rebase_path_gpg_sign_opt	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x6618	          0x4889c1	                            mov rcx, rax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x661b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x661f	      0xba01000000	                              mov edx, 1	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x6624	          0x4889ce	                            mov rsi, rcx	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x6627	          0x4889c7	                            mov rdi, rax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x662a	      0xe8f1adffff	                  call sym.read_oneliner	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x662f	            0x85c0	                           test eax, eax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x6631	            0x7464	                            je 0x40066d7	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x6633	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x6637	      0xbe00000000	                              mov esi, 0	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x663c	          0x4889c7	                            mov rdi, rax	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x663f	      0xe800000000	                          call 0x4006684	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x6644	            0x85c0	                           test eax, eax	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x6646	            0x7513	                           jne 0x400669b	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x6648	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x664c	      0xbe00000000	                              mov esi, 0	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x6651	          0x4889c7	                            mov rdi, rax	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x6654	      0xe8d49affff	                  call sym.strbuf_setlen	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x6659	            0xeb2b	                           jmp 0x40066c6	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x665b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x665f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x6663	          0x4889c7	                            mov rdi, rax	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x6666	      0xe800000000	                          call 0x40066ab	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x666b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_7
0x666f	        0x4883c002	                              add rax, 2	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_7
0x6673	          0x4889c7	                            mov rdi, rax	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_7
0x6676	      0xe800000000	                          call 0x40066bb	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_7
0x667b	          0x4889c2	                            mov rdx, rax	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_7
0x667e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_7
0x6682	        0x48895030	             mov qword [rax + 0x30], rdx	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_7
0x6686	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_8
0x668a	      0xbe00000000	                              mov esi, 0	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_8
0x668f	          0x4889c7	                            mov rdi, rax	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_8
0x6692	      0xe8969affff	                  call sym.strbuf_setlen	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_8
0x6697	      0xe8cca3ffff	call sym.rebase_path_allow_rerere_autoupdate	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x669c	          0x4889c1	                            mov rcx, rax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x669f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x66a3	      0xba01000000	                              mov edx, 1	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x66a8	          0x4889ce	                            mov rsi, rcx	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x66ab	          0x4889c7	                            mov rdi, rax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x66ae	      0xe86dadffff	                  call sym.read_oneliner	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x66b3	            0x85c0	                           test eax, eax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x66b5	            0x7453	                            je 0x400674a	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_10
0x66b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_11
0x66bb	      0xbe00000000	                              mov esi, 0	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_11
0x66c0	          0x4889c7	                            mov rdi, rax	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_11
0x66c3	      0xe800000000	                          call 0x4006708	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_11
0x66c8	            0x85c0	                           test eax, eax	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_11
0x66ca	            0x750d	                           jne 0x4006719	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_11
0x66cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x66d0	    0xc74018010000	               mov dword [rax + 0x18], 1	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x66d7	            0xeb20	                           jmp 0x4006739	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x66d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_12
0x66dd	      0xbe00000000	                              mov esi, 0	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_12
0x66e2	          0x4889c7	                            mov rdi, rax	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_12
0x66e5	      0xe800000000	                          call 0x400672a	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_12
0x66ea	            0x85c0	                           test eax, eax	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_12
0x66ec	            0x750b	                           jne 0x4006739	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_12
0x66ee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x66f2	    0xc74018020000	               mov dword [rax + 0x18], 2	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x66f9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_13
0x66fd	      0xbe00000000	                              mov esi, 0	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_13
0x6702	          0x4889c7	                            mov rdi, rax	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_13
0x6705	      0xe8239affff	                  call sym.strbuf_setlen	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_13
0x670a	      0xe810a2ffff	            call sym.rebase_path_verbose	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_15
0x670f	          0x4889c7	                            mov rdi, rax	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_15
0x6712	      0xe800000000	                          call 0x4006757	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_15
0x6717	            0x85c0	                           test eax, eax	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_15
0x6719	            0x740b	                            je 0x4006766	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_15
0x671b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x671f	    0xc74028010000	               mov dword [rax + 0x28], 1	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x6726	      0xe823a2ffff	            call sym.rebase_path_signoff	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_17
0x672b	          0x4889c7	                            mov rdi, rax	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_17
0x672e	      0xe800000000	                          call 0x4006773	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_17
0x6733	            0x85c0	                           test eax, eax	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_17
0x6735	            0x7416	                            je 0x400678d	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_17
0x6737	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2128	sequencer.c	FUNCTION_64	IF_1	IF_8
0x673b	    0xc74014000000	               mov dword [rax + 0x14], 0	      2128	sequencer.c	FUNCTION_64	IF_1	IF_8
0x6742	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2129	sequencer.c	FUNCTION_64	IF_1	IF_8
0x6746	    0xc74010010000	               mov dword [rax + 0x10], 1	      2129	sequencer.c	FUNCTION_64	IF_1	IF_8
0x674d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_18
0x6751	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_18
0x6755	          0x4889d6	                            mov rsi, rdx	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_18
0x6758	          0x4889c7	                            mov rdi, rax	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_18
0x675b	      0xe819fdffff	             call sym.read_strategy_opts	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_18
0x6760	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_19
0x6764	          0x4889c7	                            mov rdi, rax	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_19
0x6767	      0xe800000000	                          call 0x40067ac	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_19
0x676c	      0xe807a0ffff	     call sym.rebase_path_current_fixups	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x6771	          0x4889c1	                            mov rcx, rax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x6774	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x6778	        0x4883c060	                           add rax, 0x60	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x677c	      0xba01000000	                              mov edx, 1	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x6781	          0x4889ce	                            mov rsi, rcx	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x6784	          0x4889c7	                            mov rdi, rax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x6787	      0xe894acffff	                  call sym.read_oneliner	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x678c	            0x85c0	                           test eax, eax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x678e	            0x744b	                            je 0x400681b	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_20
0x6790	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x6794	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x6798	        0x488945c8	             mov qword [rbp - 0x38], rax	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x679c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x67a0	    0xc74078010000	               mov dword [rax + 0x78], 1	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x67a7	            0xeb16	                           jmp 0x40067ff	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67a9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x67ad	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x67b0	          0x8d5001	                      lea edx, [rax + 1]	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x67b3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x67b7	          0x895078	             mov dword [rax + 0x78], edx	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x67ba	      0x488345c801	               add qword [rbp - 0x38], 1	      2141	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x67bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67c3	      0xbe0a000000	                            mov esi, 0xa	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67c8	          0x4889c7	                            mov rdi, rax	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67cb	      0xe800000000	                          call 0x4006810	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67d0	        0x488945c8	             mov qword [rbp - 0x38], rax	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67d4	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67d9	            0x75ce	                           jne 0x40067e9	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_22
0x67db	      0xb800000000	                              mov eax, 0	      2145	sequencer.c	FUNCTION_64	IF_1
0x67e0	            0xeb66	                           jmp 0x4006888	      2145	sequencer.c	FUNCTION_64	IF_1
0x67e2	      0xe88c9dffff	             call sym.git_path_opts_file	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_24
0x67e7	          0x4889c7	                            mov rdi, rax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_24
0x67ea	      0xe800000000	                          call 0x400682f	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_24
0x67ef	            0x85c0	                           test eax, eax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_24
0x67f1	            0x7507	                           jne 0x400683a	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_24
0x67f3	      0xb800000000	                              mov eax, 0	      2149	sequencer.c	FUNCTION_64	IF_10
0x67f8	            0xeb4e	                           jmp 0x4006888	      2149	sequencer.c	FUNCTION_64	IF_10
0x67fa	      0xe8749dffff	             call sym.git_path_opts_file	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x67ff	          0x4889c1	                            mov rcx, rax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x6802	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x6806	          0x4889c2	                            mov rdx, rax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x6809	          0x4889ce	                            mov rsi, rcx	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x680c	      0xbf00000000	                              mov edi, 0	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x6811	      0xe800000000	                          call 0x4006856	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x6816	            0x85c0	                           test eax, eax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x6818	            0x7929	                           jns 0x4006883	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_26
0x681a	      0xe8549dffff	             call sym.git_path_opts_file	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x681f	          0x4889c3	                            mov rbx, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x6822	      0xbf00000000	                              mov edi, 0	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x6827	      0xe83b9bffff	                               call sym.	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x682c	          0x4889de	                            mov rsi, rbx	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x682f	          0x4889c7	                            mov rdi, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x6832	      0xb800000000	                              mov eax, 0	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x6837	      0xe800000000	                          call 0x400687c	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x683c	      0xe8bf97ffff	                    call sym.const_error	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x6841	            0xeb05	                           jmp 0x4006888	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_28
0x6843	      0xb800000000	                              mov eax, 0	      2159	sequencer.c	FUNCTION_64
0x6848	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2160	sequencer.c	FUNCTION_64
0x684c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2160	sequencer.c	FUNCTION_64
0x6855	            0x7405	                            je 0x400689c	      2160	sequencer.c	FUNCTION_64
0x6857	      0xe800000000	                          call 0x400689c	      2160	sequencer.c	FUNCTION_64
0x685c	        0x4883c448	                           add rsp, 0x48	      2160	sequencer.c	FUNCTION_64
0x6860	              0x5b	                                 pop rbx	      2160	sequencer.c	FUNCTION_64
0x6861	              0x5d	                                 pop rbp	      2160	sequencer.c	FUNCTION_64
0x6862	              0xc3	                                     ret	      2160	sequencer.c	FUNCTION_64
append_conflicts_hint	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,1:CALL,5	64
0x1886	              0x55	                                push rbp	       490	sequencer.c	FUNCTION_20
0x1887	          0x4889e5	                            mov rbp, rsp	       490	sequencer.c	FUNCTION_20
0x188a	        0x4883ec20	                           sub rsp, 0x20	       490	sequencer.c	FUNCTION_20
0x188e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       490	sequencer.c	FUNCTION_20
0x1892	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       493	sequencer.c	FUNCTION_20	CALL_1
0x1896	      0xbe0a000000	                            mov esi, 0xa	       493	sequencer.c	FUNCTION_20	CALL_1
0x189b	          0x4889c7	                            mov rdi, rax	       493	sequencer.c	FUNCTION_20	CALL_1
0x189e	      0xe824e9ffff	                   call sym.strbuf_addch	       493	sequencer.c	FUNCTION_20	CALL_1
0x18a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	sequencer.c	FUNCTION_20	CALL_2
0x18a7	      0xbe00000000	                              mov esi, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x18ac	          0x4889c7	                            mov rdi, rax	       494	sequencer.c	FUNCTION_20	CALL_2
0x18af	      0xb800000000	                              mov eax, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x18b4	      0xe800000000	                          call 0x40018f9	       494	sequencer.c	FUNCTION_20	CALL_2
0x18b9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       495	sequencer.c	FUNCTION_20	FOR_1
0x18c0	      0xe996000000	                           jmp 0x400199b	       495	sequencer.c	FUNCTION_20	FOR_1
0x18c5	    0x488b0d000000	            mov rcx, qword [0x0400190c] 	       496	sequencer.c	FUNCTION_20	FOR_1
0x18cc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       496	sequencer.c	FUNCTION_20	FOR_1
0x18cf	          0x8d5001	                      lea edx, [rax + 1]	       496	sequencer.c	FUNCTION_20	FOR_1
0x18d2	          0x8955f4	              mov dword [rbp - 0xc], edx	       496	sequencer.c	FUNCTION_20	FOR_1
0x18d5	            0x4898	                                    cdqe	       496	sequencer.c	FUNCTION_20	FOR_1
0x18d7	        0x48c1e003	                              shl rax, 3	       496	sequencer.c	FUNCTION_20	FOR_1
0x18db	          0x4801c8	                            add rax, rcx	       496	sequencer.c	FUNCTION_20	FOR_1
0x18de	          0x488b00	                    mov rax, qword [rax]	       496	sequencer.c	FUNCTION_20	FOR_1
0x18e1	        0x488945f8	                mov qword [rbp - 8], rax	       496	sequencer.c	FUNCTION_20	FOR_1
0x18e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x18e9	          0x8b4038	            mov eax, dword [rax + 0x38] 	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x18ec	      0x2500300000	                         and eax, 0x3000	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x18f1	          0xc1e80c	                            shr eax, 0xc	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x18f4	            0x85c0	                           test eax, eax	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x18f6	            0x7463	                            je 0x400199b	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x18f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_4
0x18fc	        0x488d5058	                   lea rdx, [rax + 0x58]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_4
0x1900	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_4
0x1904	      0xbe00000000	                              mov esi, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_4
0x1909	          0x4889c7	                            mov rdi, rax	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_4
0x190c	      0xb800000000	                              mov eax, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_4
0x1911	      0xe800000000	                          call 0x4001956	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_4
0x1916	            0xeb04	                           jmp 0x400195c	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1918	        0x8345f401	                add dword [rbp - 0xc], 1	       501	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x191c	    0x8b1500000000	            mov edx, dword [0x04001962] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1922	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1925	            0x39c2	                            cmp edx, eax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1927	            0x7632	                           jbe 0x400199b	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1929	    0x488b05000000	            mov rax, qword [0x04001970] 	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x1930	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x1933	          0x4863d2	                         movsxd rdx, edx	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x1936	        0x48c1e203	                              shl rdx, 3	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x193a	          0x4801d0	                            add rax, rdx	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x193d	          0x488b00	                    mov rax, qword [rax]	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x1940	        0x488d5058	                   lea rdx, [rax + 0x58]	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x1944	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1948	        0x4883c058	                           add rax, 0x58	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x194c	          0x4889d6	                            mov rsi, rdx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x194f	          0x4889c7	                            mov rdi, rax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1952	      0xe800000000	                          call 0x4001997	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1957	            0x85c0	                           test eax, eax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x1959	            0x74bd	                            je 0x4001958	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_5
0x195b	    0x8b1500000000	            mov edx, dword [0x040019a1] 	       495	sequencer.c	FUNCTION_20	FOR_1
0x1961	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       495	sequencer.c	FUNCTION_20	FOR_1
0x1964	            0x39c2	                            cmp edx, eax	       495	sequencer.c	FUNCTION_20	FOR_1
0x1966	     0xf8759ffffff	                            ja 0x4001905	       495	sequencer.c	FUNCTION_20	FOR_1
0x196c	              0x90	                                     nop	       504	sequencer.c	FUNCTION_20
0x196d	              0xc9	                                   leave	       504	sequencer.c	FUNCTION_20
0x196e	              0xc3	                                     ret	       504	sequencer.c	FUNCTION_20
count_commands	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,0	27
0x5a94	              0x55	                                push rbp	      1925	sequencer.c	FUNCTION_55
0x5a95	          0x4889e5	                            mov rbp, rsp	      1925	sequencer.c	FUNCTION_55
0x5a98	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1925	sequencer.c	FUNCTION_55
0x5a9c	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1926	sequencer.c	FUNCTION_55
0x5aa3	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1928	sequencer.c	FUNCTION_55	FOR_1
0x5aaa	            0xeb2d	                           jmp 0x4005b19	      1928	sequencer.c	FUNCTION_55	FOR_1
0x5aac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ab0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ab4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ab7	          0x4863d0	                         movsxd rdx, eax	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5aba	          0x4889d0	                            mov rax, rdx	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5abd	          0x4801c0	                            add rax, rax	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ac0	          0x4801d0	                            add rax, rdx	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ac3	        0x48c1e004	                              shl rax, 4	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ac7	          0x4801c8	                            add rax, rcx	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5aca	            0x8b00	                    mov eax, dword [rax]	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5acc	          0x83f80c	                            cmp eax, 0xc	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5acf	            0x7404	                            je 0x4005b15	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ad1	        0x8345f801	                  add dword [rbp - 8], 1	      1930	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x5ad5	        0x8345fc01	                  add dword [rbp - 4], 1	      1928	sequencer.c	FUNCTION_55	FOR_1
0x5ad9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1928	sequencer.c	FUNCTION_55	FOR_1
0x5add	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1928	sequencer.c	FUNCTION_55	FOR_1
0x5ae0	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1928	sequencer.c	FUNCTION_55	FOR_1
0x5ae3	            0x7fc7	                            jg 0x4005aec	      1928	sequencer.c	FUNCTION_55	FOR_1
0x5ae5	          0x8b45f8	                mov eax, dword [rbp - 8]	      1932	sequencer.c	FUNCTION_55
0x5ae8	              0x5d	                                 pop rbp	      1933	sequencer.c	FUNCTION_55
0x5ae9	              0xc3	                                     ret	      1933	sequencer.c	FUNCTION_55
do_recursive_merge	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,6:WHILE,0:CALL,22	162
0x196f	              0x55	                                push rbp	       510	sequencer.c	FUNCTION_21
0x1970	          0x4889e5	                            mov rbp, rsp	       510	sequencer.c	FUNCTION_21
0x1973	              0x53	                                push rbx	       510	sequencer.c	FUNCTION_21
0x1974	    0x4881ec280500	                          sub rsp, 0x528	       510	sequencer.c	FUNCTION_21
0x197b	    0x4889bd08fbff	            mov qword [rbp - 0x4f8], rdi	       510	sequencer.c	FUNCTION_21
0x1982	    0x4889b500fbff	            mov qword [rbp - 0x500], rsi	       510	sequencer.c	FUNCTION_21
0x1989	    0x488995f8faff	            mov qword [rbp - 0x508], rdx	       510	sequencer.c	FUNCTION_21
0x1990	    0x48898df0faff	            mov qword [rbp - 0x510], rcx	       510	sequencer.c	FUNCTION_21
0x1997	    0x4c8985e8faff	             mov qword [rbp - 0x518], r8	       510	sequencer.c	FUNCTION_21
0x199e	    0x4c898de0faff	             mov qword [rbp - 0x520], r9	       510	sequencer.c	FUNCTION_21
0x19a5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       510	sequencer.c	FUNCTION_21
0x19a9	    0x488985d8faff	            mov qword [rbp - 0x528], rax	       510	sequencer.c	FUNCTION_21
0x19b0	    0x64488b042528	                mov rax, qword fs:[0x28]	       510	sequencer.c	FUNCTION_21
0x19b9	        0x488945e8	             mov qword [rbp - 0x18], rax	       510	sequencer.c	FUNCTION_21
0x19bd	            0x31c0	                            xor eax, eax	       510	sequencer.c	FUNCTION_21
0x19bf	    0x48c78520fbff	              mov qword [rbp - 0x4e0], 0	       515	sequencer.c	FUNCTION_21
0x19ca	    0x488d8520fbff	                  lea rax, [rbp - 0x4e0]	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x19d1	      0xbe04000000	                              mov esi, 4	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x19d6	          0x4889c7	                            mov rdi, rax	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x19d9	      0xe800000000	                          call 0x4001a1e	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x19de	            0x85c0	                           test eax, eax	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x19e0	            0x790a	                           jns 0x4001a2c	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x19e2	      0xb8ffffffff	                     mov eax, 0xffffffff	       518	sequencer.c	FUNCTION_21	IF_1
0x19e7	      0xe97b020000	                           jmp 0x4001ca7	       518	sequencer.c	FUNCTION_21	IF_1
0x19ec	      0xbf00000000	                              mov edi, 0	       520	sequencer.c	FUNCTION_21	CALL_2
0x19f1	      0xe800000000	                          call 0x4001a36	       520	sequencer.c	FUNCTION_21	CALL_2
0x19f6	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       522	sequencer.c	FUNCTION_21	CALL_3
0x19fd	          0x4889c7	                            mov rdi, rax	       522	sequencer.c	FUNCTION_21	CALL_3
0x1a00	      0xe800000000	                          call 0x4001a45	       522	sequencer.c	FUNCTION_21	CALL_3
0x1a05	    0x4883bd08fbff	              cmp qword [rbp - 0x4f8], 0	       523	sequencer.c	FUNCTION_21
0x1a0d	            0x7409	                            je 0x4001a58	       523	sequencer.c	FUNCTION_21
0x1a0f	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	       523	sequencer.c	FUNCTION_21
0x1a16	            0xeb05	                           jmp 0x4001a5d	       523	sequencer.c	FUNCTION_21
0x1a18	      0xb800000000	                              mov eax, 0	       523	sequencer.c	FUNCTION_21
0x1a1d	    0x48898550fbff	            mov qword [rbp - 0x4b0], rax	       523	sequencer.c	FUNCTION_21
0x1a24	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 0	       524	sequencer.c	FUNCTION_21
0x1a2f	    0x4883bd00fbff	              cmp qword [rbp - 0x500], 0	       525	sequencer.c	FUNCTION_21
0x1a37	            0x7409	                            je 0x4001a82	       525	sequencer.c	FUNCTION_21
0x1a39	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	       525	sequencer.c	FUNCTION_21
0x1a40	            0xeb05	                           jmp 0x4001a87	       525	sequencer.c	FUNCTION_21
0x1a42	      0xb800000000	                              mov eax, 0	       525	sequencer.c	FUNCTION_21
0x1a47	    0x48898560fbff	            mov qword [rbp - 0x4a0], rax	       525	sequencer.c	FUNCTION_21
0x1a4e	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       526	sequencer.c	FUNCTION_21	IF_2	CALL_4
0x1a55	          0x4889c7	                            mov rdi, rax	       526	sequencer.c	FUNCTION_21	IF_2	CALL_4
0x1a58	      0xe82bf2ffff	                    call sym.is_rebase_i	       526	sequencer.c	FUNCTION_21	IF_2	CALL_4
0x1a5d	            0x85c0	                           test eax, eax	       526	sequencer.c	FUNCTION_21	IF_2	CALL_4
0x1a5f	            0x740a	                            je 0x4001aab	       526	sequencer.c	FUNCTION_21	IF_2	CALL_4
0x1a61	    0xc78578fbffff	              mov dword [rbp - 0x488], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x1a6b	    0xc785a0fbffff	              mov dword [rbp - 0x460], 1	       528	sequencer.c	FUNCTION_21
0x1a75	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	       530	sequencer.c	FUNCTION_21	CALL_5
0x1a7c	          0x4889c7	                            mov rdi, rax	       530	sequencer.c	FUNCTION_21	CALL_5
0x1a7f	      0xe800000000	                          call 0x4001ac4	       530	sequencer.c	FUNCTION_21	CALL_5
0x1a84	    0x48898538fbff	            mov qword [rbp - 0x4c8], rax	       530	sequencer.c	FUNCTION_21	CALL_5
0x1a8b	    0x4883bd00fbff	              cmp qword [rbp - 0x500], 0	       531	sequencer.c	FUNCTION_21	CALL_7
0x1a93	            0x7411	                            je 0x4001ae6	       531	sequencer.c	FUNCTION_21	CALL_7
0x1a95	    0x488b8500fbff	            mov rax, qword [rbp - 0x500]	       531	sequencer.c	FUNCTION_21	CALL_7
0x1a9c	          0x4889c7	                            mov rdi, rax	       531	sequencer.c	FUNCTION_21	CALL_7
0x1a9f	      0xe800000000	                          call 0x4001ae4	       531	sequencer.c	FUNCTION_21	CALL_7
0x1aa4	            0xeb05	                           jmp 0x4001aeb	       531	sequencer.c	FUNCTION_21	CALL_7
0x1aa6	      0xe8bdfaffff	                     call sym.empty_tree	       531	sequencer.c	FUNCTION_21	CALL_7
0x1aab	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	       531	sequencer.c	FUNCTION_21	CALL_7
0x1ab2	    0x4883bd08fbff	              cmp qword [rbp - 0x4f8], 0	       532	sequencer.c	FUNCTION_21	CALL_9
0x1aba	            0x7411	                            je 0x4001b0d	       532	sequencer.c	FUNCTION_21	CALL_9
0x1abc	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	       532	sequencer.c	FUNCTION_21	CALL_9
0x1ac3	          0x4889c7	                            mov rdi, rax	       532	sequencer.c	FUNCTION_21	CALL_9
0x1ac6	      0xe800000000	                          call 0x4001b0b	       532	sequencer.c	FUNCTION_21	CALL_9
0x1acb	            0xeb05	                           jmp 0x4001b12	       532	sequencer.c	FUNCTION_21	CALL_9
0x1acd	      0xe896faffff	                     call sym.empty_tree	       532	sequencer.c	FUNCTION_21	CALL_9
0x1ad2	    0x48898548fbff	            mov qword [rbp - 0x4b8], rax	       532	sequencer.c	FUNCTION_21	CALL_9
0x1ad9	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       534	sequencer.c	FUNCTION_21	FOR_1
0x1ae0	        0x488b4048	            mov rax, qword [rax + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x1ae4	    0x48898530fbff	            mov qword [rbp - 0x4d0], rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x1aeb	            0xeb24	                           jmp 0x4001b51	       534	sequencer.c	FUNCTION_21	FOR_1
0x1aed	    0x488b8530fbff	            mov rax, qword [rbp - 0x4d0]	       535	sequencer.c	FUNCTION_21	CALL_10
0x1af4	          0x488b10	                    mov rdx, qword [rax]	       535	sequencer.c	FUNCTION_21	CALL_10
0x1af7	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       535	sequencer.c	FUNCTION_21	CALL_10
0x1afe	          0x4889d6	                            mov rsi, rdx	       535	sequencer.c	FUNCTION_21	CALL_10
0x1b01	          0x4889c7	                            mov rdi, rax	       535	sequencer.c	FUNCTION_21	CALL_10
0x1b04	      0xe800000000	                          call 0x4001b49	       535	sequencer.c	FUNCTION_21	CALL_10
0x1b09	    0x48838530fbff	              add qword [rbp - 0x4d0], 8	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b11	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b18	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b1c	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b23	        0x488b4050	            mov rax, qword [rax + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b27	        0x48c1e003	                              shl rax, 3	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b2b	          0x4801d0	                            add rax, rdx	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b2e	    0x483b8530fbff	            cmp rax, qword [rbp - 0x4d0]	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b35	            0x75b6	                           jne 0x4001b2d	       534	sequencer.c	FUNCTION_21	FOR_1
0x1b37	    0x488dbd28fbff	                  lea rdi, [rbp - 0x4d8]	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b3e	    0x488b8d48fbff	            mov rcx, qword [rbp - 0x4b8]	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b45	    0x488b9540fbff	            mov rdx, qword [rbp - 0x4c0]	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b4c	    0x488bb538fbff	            mov rsi, qword [rbp - 0x4c8]	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b53	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b5a	          0x4989f8	                             mov r8, rdi	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b5d	          0x4889c7	                            mov rdi, rax	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b60	      0xe800000000	                          call 0x4001ba5	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b65	    0x89851cfbffff	            mov dword [rbp - 0x4e4], eax	       537	sequencer.c	FUNCTION_21	CALL_11
0x1b6b	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       540	sequencer.c	FUNCTION_21	IF_3	CALL_12
0x1b72	          0x4889c7	                            mov rdi, rax	       540	sequencer.c	FUNCTION_21	IF_3	CALL_12
0x1b75	      0xe80ef1ffff	                    call sym.is_rebase_i	       540	sequencer.c	FUNCTION_21	IF_3	CALL_12
0x1b7a	            0x85c0	                           test eax, eax	       540	sequencer.c	FUNCTION_21	IF_3	CALL_12
0x1b7c	            0x7422	                            je 0x4001be0	       540	sequencer.c	FUNCTION_21	IF_3	CALL_12
0x1b7e	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       540	sequencer.c	FUNCTION_21	IF_3	CALL_12
0x1b85	            0x7f19	                            jg 0x4001be0	       540	sequencer.c	FUNCTION_21	IF_3	CALL_12
0x1b87	    0x488b15000000	            mov rdx, qword [0x04001bce] 	       541	sequencer.c	FUNCTION_21	CALL_13
0x1b8e	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	       541	sequencer.c	FUNCTION_21	CALL_13
0x1b95	          0x4889d6	                            mov rsi, rdx	       541	sequencer.c	FUNCTION_21	CALL_13
0x1b98	          0x4889c7	                            mov rdi, rax	       541	sequencer.c	FUNCTION_21	CALL_13
0x1b9b	      0xe800000000	                          call 0x4001be0	       541	sequencer.c	FUNCTION_21	CALL_13
0x1ba0	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       542	sequencer.c	FUNCTION_21	CALL_14
0x1ba7	        0x4883c058	                           add rax, 0x58	       542	sequencer.c	FUNCTION_21	CALL_14
0x1bab	          0x4889c7	                            mov rdi, rax	       542	sequencer.c	FUNCTION_21	CALL_14
0x1bae	      0xe800000000	                          call 0x4001bf3	       542	sequencer.c	FUNCTION_21	CALL_14
0x1bb3	    0x8b859cfbffff	            mov eax, dword [rbp - 0x464]	       543	sequencer.c	FUNCTION_21	CALL_15
0x1bb9	      0xba00000000	                              mov edx, 0	       543	sequencer.c	FUNCTION_21	CALL_15
0x1bbe	            0x89c6	                            mov esi, eax	       543	sequencer.c	FUNCTION_21	CALL_15
0x1bc0	      0xbf00000000	                              mov edi, 0	       543	sequencer.c	FUNCTION_21	CALL_15
0x1bc5	      0xe800000000	                          call 0x4001c0a	       543	sequencer.c	FUNCTION_21	CALL_15
0x1bca	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       544	sequencer.c	FUNCTION_21	IF_4
0x1bd1	            0x7917	                           jns 0x4001c2a	       544	sequencer.c	FUNCTION_21	IF_4
0x1bd3	    0x488d8520fbff	                  lea rax, [rbp - 0x4e0]	       545	sequencer.c	FUNCTION_21	IF_4	CALL_16
0x1bda	          0x4889c7	                            mov rdi, rax	       545	sequencer.c	FUNCTION_21	IF_4	CALL_16
0x1bdd	      0xe8cae8ffff	             call sym.rollback_lock_file	       545	sequencer.c	FUNCTION_21	IF_4	CALL_16
0x1be2	    0x8b851cfbffff	            mov eax, dword [rbp - 0x4e4]	       546	sequencer.c	FUNCTION_21	IF_4
0x1be8	            0xeb7d	                           jmp 0x4001ca7	       546	sequencer.c	FUNCTION_21	IF_4
0x1bea	    0x488d8520fbff	                  lea rax, [rbp - 0x4e0]	       549	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x1bf1	      0xba03000000	                              mov edx, 3	       549	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x1bf6	          0x4889c6	                            mov rsi, rax	       549	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x1bf9	      0xbf00000000	                              mov edi, 0	       549	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x1bfe	      0xe800000000	                          call 0x4001c43	       549	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x1c03	            0x85c0	                           test eax, eax	       549	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x1c05	            0x743b	                            je 0x4001c82	       549	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x1c07	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c0e	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c11	      0xe829f4ffff	                    call sym.action_name	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c16	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c19	      0xe849e7ffff	                               call sym.	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c1e	          0x4889c3	                            mov rbx, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c21	      0xbf00000000	                              mov edi, 0	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c26	      0xe83ce7ffff	                               call sym.	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c2b	          0x4889de	                            mov rsi, rbx	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c2e	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c31	      0xb800000000	                              mov eax, 0	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c36	      0xe800000000	                          call 0x4001c7b	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c3b	      0xe8c0e3ffff	                    call sym.const_error	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c40	            0xeb25	                           jmp 0x4001ca7	       555	sequencer.c	FUNCTION_21	IF_5	CALL_19
0x1c42	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       558	sequencer.c	FUNCTION_21	IF_6
0x1c49	            0x750f	                           jne 0x4001c9a	       558	sequencer.c	FUNCTION_21	IF_6
0x1c4b	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	       559	sequencer.c	FUNCTION_21	CALL_22
0x1c52	          0x4889c7	                            mov rdi, rax	       559	sequencer.c	FUNCTION_21	CALL_22
0x1c55	      0xe800000000	                          call 0x4001c9a	       559	sequencer.c	FUNCTION_21	CALL_22
0x1c5a	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       561	sequencer.c	FUNCTION_21
0x1c61	           0xf94c0	                                 sete al	       561	sequencer.c	FUNCTION_21
0x1c64	           0xfb6c0	                           movzx eax, al	       561	sequencer.c	FUNCTION_21
0x1c67	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       562	sequencer.c	FUNCTION_21
0x1c6b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       562	sequencer.c	FUNCTION_21
0x1c74	            0x7405	                            je 0x4001cbb	       562	sequencer.c	FUNCTION_21
0x1c76	      0xe800000000	                          call 0x4001cbb	       562	sequencer.c	FUNCTION_21
0x1c7b	    0x4881c4280500	                          add rsp, 0x528	       562	sequencer.c	FUNCTION_21
0x1c82	              0x5b	                                 pop rbx	       562	sequencer.c	FUNCTION_21
0x1c83	              0x5d	                                 pop rbp	       562	sequencer.c	FUNCTION_21
0x1c84	              0xc3	                                     ret	       562	sequencer.c	FUNCTION_21
strbuf_read_file_or_whine	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,7	50
0x5ba6	              0x55	                                push rbp	      1953	sequencer.c	FUNCTION_59
0x5ba7	          0x4889e5	                            mov rbp, rsp	      1953	sequencer.c	FUNCTION_59
0x5baa	        0x4883ec20	                           sub rsp, 0x20	      1953	sequencer.c	FUNCTION_59
0x5bae	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1953	sequencer.c	FUNCTION_59
0x5bb2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1953	sequencer.c	FUNCTION_59
0x5bb6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1957	sequencer.c	FUNCTION_59	CALL_1
0x5bba	      0xbe00000000	                              mov esi, 0	      1957	sequencer.c	FUNCTION_59	CALL_1
0x5bbf	          0x4889c7	                            mov rdi, rax	      1957	sequencer.c	FUNCTION_59	CALL_1
0x5bc2	      0xb800000000	                              mov eax, 0	      1957	sequencer.c	FUNCTION_59	CALL_1
0x5bc7	      0xe800000000	                          call 0x4005c0c	      1957	sequencer.c	FUNCTION_59	CALL_1
0x5bcc	          0x8945f4	              mov dword [rbp - 0xc], eax	      1957	sequencer.c	FUNCTION_59	CALL_1
0x5bcf	        0x837df400	                cmp dword [rbp - 0xc], 0	      1958	sequencer.c	FUNCTION_59	IF_1
0x5bd3	            0x792a	                           jns 0x4005c3f	      1958	sequencer.c	FUNCTION_59	IF_1
0x5bd5	      0xbf00000000	                              mov edi, 0	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bda	      0xe888a7ffff	                               call sym.	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bdf	          0x4889c2	                            mov rdx, rax	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5be2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5be6	          0x4889c6	                            mov rsi, rax	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5be9	          0x4889d7	                            mov rdi, rdx	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bec	      0xb800000000	                              mov eax, 0	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bf1	      0xe800000000	                          call 0x4005c36	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bf6	      0xe805a4ffff	                    call sym.const_error	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bfb	            0x4898	                                    cdqe	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bfd	            0xeb59	                           jmp 0x4005c98	      1959	sequencer.c	FUNCTION_59	CALL_3
0x5bff	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1960	sequencer.c	FUNCTION_59	CALL_4
0x5c02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1960	sequencer.c	FUNCTION_59	CALL_4
0x5c06	      0xba00000000	                              mov edx, 0	      1960	sequencer.c	FUNCTION_59	CALL_4
0x5c0b	            0x89ce	                            mov esi, ecx	      1960	sequencer.c	FUNCTION_59	CALL_4
0x5c0d	          0x4889c7	                            mov rdi, rax	      1960	sequencer.c	FUNCTION_59	CALL_4
0x5c10	      0xe800000000	                          call 0x4005c55	      1960	sequencer.c	FUNCTION_59	CALL_4
0x5c15	        0x488945f8	                mov qword [rbp - 8], rax	      1960	sequencer.c	FUNCTION_59	CALL_4
0x5c19	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1961	sequencer.c	FUNCTION_59	CALL_5
0x5c1c	            0x89c7	                            mov edi, eax	      1961	sequencer.c	FUNCTION_59	CALL_5
0x5c1e	      0xe800000000	                          call 0x4005c63	      1961	sequencer.c	FUNCTION_59	CALL_5
0x5c23	      0x48837df800	                  cmp qword [rbp - 8], 0	      1962	sequencer.c	FUNCTION_59	IF_2
0x5c28	            0x792a	                           jns 0x4005c94	      1962	sequencer.c	FUNCTION_59	IF_2
0x5c2a	      0xbf00000000	                              mov edi, 0	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c2f	      0xe833a7ffff	                               call sym.	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c34	          0x4889c2	                            mov rdx, rax	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c37	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c3b	          0x4889c6	                            mov rsi, rax	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c3e	          0x4889d7	                            mov rdi, rdx	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c41	      0xb800000000	                              mov eax, 0	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c46	      0xe800000000	                          call 0x4005c8b	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c4b	      0xe8b0a3ffff	                    call sym.const_error	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c50	            0x4898	                                    cdqe	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c52	            0xeb04	                           jmp 0x4005c98	      1963	sequencer.c	FUNCTION_59	CALL_7
0x5c54	        0x488b45f8	                mov rax, qword [rbp - 8]	      1964	sequencer.c	FUNCTION_59
0x5c58	              0xc9	                                   leave	      1965	sequencer.c	FUNCTION_59
0x5c59	              0xc3	                                     ret	      1965	sequencer.c	FUNCTION_59
get_dir	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,3	14
0xca1	              0x55	                                push rbp	       198	sequencer.c	FUNCTION_4
0xca2	          0x4889e5	                            mov rbp, rsp	       198	sequencer.c	FUNCTION_4
0xca5	        0x4883ec10	                           sub rsp, 0x10	       198	sequencer.c	FUNCTION_4
0xca9	        0x48897df8	                mov qword [rbp - 8], rdi	       198	sequencer.c	FUNCTION_4
0xcad	        0x488b45f8	                mov rax, qword [rbp - 8]	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0xcb1	          0x4889c7	                            mov rdi, rax	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0xcb4	      0xe8cfffffff	                    call sym.is_rebase_i	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0xcb9	            0x85c0	                           test eax, eax	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0xcbb	            0x7407	                            je 0x4000d04	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0xcbd	      0xe83ef9ffff	                    call sym.rebase_path	       200	sequencer.c	FUNCTION_4	CALL_2
0xcc2	            0xeb05	                           jmp 0x4000d09	       200	sequencer.c	FUNCTION_4	CALL_2
0xcc4	      0xe800000000	                          call 0x4000d09	       201	sequencer.c	FUNCTION_4	CALL_3
0xcc9	              0xc9	                                   leave	       202	sequencer.c	FUNCTION_4
0xcca	              0xc3	                                     ret	       202	sequencer.c	FUNCTION_4
read_populate_todo	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,3:IF,11:WHILE,0:CALL,34	222
0x5c5a	              0x55	                                push rbp	      1969	sequencer.c	FUNCTION_60
0x5c5b	          0x4889e5	                            mov rbp, rsp	      1969	sequencer.c	FUNCTION_60
0x5c5e	              0x53	                                push rbx	      1969	sequencer.c	FUNCTION_60
0x5c5f	    0x4881ec380100	                          sub rsp, 0x138	      1969	sequencer.c	FUNCTION_60
0x5c66	    0x4889bdc8feff	            mov qword [rbp - 0x138], rdi	      1969	sequencer.c	FUNCTION_60
0x5c6d	    0x4889b5c0feff	            mov qword [rbp - 0x140], rsi	      1969	sequencer.c	FUNCTION_60
0x5c74	    0x64488b042528	                mov rax, qword fs:[0x28]	      1969	sequencer.c	FUNCTION_60
0x5c7d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1969	sequencer.c	FUNCTION_60
0x5c81	            0x31c0	                            xor eax, eax	      1969	sequencer.c	FUNCTION_60
0x5c83	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1971	sequencer.c	FUNCTION_60	CALL_1
0x5c8a	          0x4889c7	                            mov rdi, rax	      1971	sequencer.c	FUNCTION_60	CALL_1
0x5c8d	      0xe839b0ffff	                  call sym.get_todo_path	      1971	sequencer.c	FUNCTION_60	CALL_1
0x5c92	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      1971	sequencer.c	FUNCTION_60	CALL_1
0x5c99	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1974	sequencer.c	FUNCTION_60	CALL_2
0x5ca0	      0xbe00000000	                              mov esi, 0	      1974	sequencer.c	FUNCTION_60	CALL_2
0x5ca5	          0x4889c7	                            mov rdi, rax	      1974	sequencer.c	FUNCTION_60	CALL_2
0x5ca8	      0xe880a4ffff	                  call sym.strbuf_setlen	      1974	sequencer.c	FUNCTION_60	CALL_2
0x5cad	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_3
0x5cb4	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_3
0x5cbb	          0x4889d6	                            mov rsi, rdx	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_3
0x5cbe	          0x4889c7	                            mov rdi, rax	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_3
0x5cc1	      0xe8e0feffff	      call sym.strbuf_read_file_or_whine	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_3
0x5cc6	          0x4885c0	                           test rax, rax	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_3
0x5cc9	            0x790a	                           jns 0x4005d15	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_3
0x5ccb	      0xb8ffffffff	                     mov eax, 0xffffffff	      1976	sequencer.c	FUNCTION_60	IF_1
0x5cd0	      0xe95e030000	                           jmp 0x4006073	      1976	sequencer.c	FUNCTION_60	IF_1
0x5cd5	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      1978	sequencer.c	FUNCTION_60	CALL_4
0x5cdc	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1978	sequencer.c	FUNCTION_60	CALL_4
0x5ce3	          0x4889d6	                            mov rsi, rdx	      1978	sequencer.c	FUNCTION_60	CALL_4
0x5ce6	          0x4889c7	                            mov rdi, rax	      1978	sequencer.c	FUNCTION_60	CALL_4
0x5ce9	      0xe800000000	                          call 0x4005d2e	      1978	sequencer.c	FUNCTION_60	CALL_4
0x5cee	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	      1978	sequencer.c	FUNCTION_60	CALL_4
0x5cf4	    0x83bdd8feffff	              cmp dword [rbp - 0x128], 0	      1979	sequencer.c	FUNCTION_60	IF_2
0x5cfb	            0x742e	                            je 0x4005d6b	      1979	sequencer.c	FUNCTION_60	IF_2
0x5cfd	      0xbf00000000	                              mov edi, 0	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d02	      0xe860a6ffff	                               call sym.	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d07	          0x4889c2	                            mov rdx, rax	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d0a	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d11	          0x4889c6	                            mov rsi, rax	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d14	          0x4889d7	                            mov rdi, rdx	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d17	      0xb800000000	                              mov eax, 0	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d1c	      0xe800000000	                          call 0x4005d61	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d21	      0xe8daa2ffff	                    call sym.const_error	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d26	      0xe908030000	                           jmp 0x4006073	      1980	sequencer.c	FUNCTION_60	CALL_6
0x5d2b	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1981	sequencer.c	FUNCTION_60	CALL_7
0x5d32	        0x488d5034	                   lea rdx, [rax + 0x34]	      1981	sequencer.c	FUNCTION_60	CALL_7
0x5d36	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1981	sequencer.c	FUNCTION_60	CALL_7
0x5d3d	          0x4889c6	                            mov rsi, rax	      1981	sequencer.c	FUNCTION_60	CALL_7
0x5d40	          0x4889d7	                            mov rdi, rdx	      1981	sequencer.c	FUNCTION_60	CALL_7
0x5d43	      0xe800000000	                          call 0x4005d88	      1981	sequencer.c	FUNCTION_60	CALL_7
0x5d48	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1983	sequencer.c	FUNCTION_60	CALL_8
0x5d4f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1983	sequencer.c	FUNCTION_60	CALL_8
0x5d53	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      1983	sequencer.c	FUNCTION_60	CALL_8
0x5d5a	          0x4889d6	                            mov rsi, rdx	      1983	sequencer.c	FUNCTION_60	CALL_8
0x5d5d	          0x4889c7	                            mov rdi, rax	      1983	sequencer.c	FUNCTION_60	CALL_8
0x5d60	      0xe88ffbffff	              call sym.parse_insn_buffer	      1983	sequencer.c	FUNCTION_60	CALL_8
0x5d65	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	      1983	sequencer.c	FUNCTION_60	CALL_8
0x5d6b	    0x83bdd8feffff	              cmp dword [rbp - 0x128], 0	      1984	sequencer.c	FUNCTION_60	IF_3
0x5d72	            0x7462	                            je 0x4005e16	      1984	sequencer.c	FUNCTION_60	IF_3
0x5d74	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_9
0x5d7b	          0x4889c7	                            mov rdi, rax	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_9
0x5d7e	      0xe805afffff	                    call sym.is_rebase_i	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_9
0x5d83	            0x85c0	                           test eax, eax	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_9
0x5d85	            0x7421	                            je 0x4005de8	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_9
0x5d87	      0xbf00000000	                              mov edi, 0	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_11
0x5d8c	      0xe8d6a5ffff	                               call sym.	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_11
0x5d91	          0x4889c7	                            mov rdi, rax	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_11
0x5d94	      0xb800000000	                              mov eax, 0	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_11
0x5d99	      0xe800000000	                          call 0x4005dde	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_11
0x5d9e	      0xe85da2ffff	                    call sym.const_error	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_11
0x5da3	      0xe98b020000	                           jmp 0x4006073	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_11
0x5da8	      0xbf00000000	                              mov edi, 0	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dad	      0xe8b5a5ffff	                               call sym.	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5db2	          0x4889c2	                            mov rdx, rax	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5db5	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dbc	          0x4889c6	                            mov rsi, rax	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dbf	          0x4889d7	                            mov rdi, rdx	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dc2	      0xb800000000	                              mov eax, 0	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dc7	      0xe800000000	                          call 0x4005e0c	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dcc	      0xe82fa2ffff	                    call sym.const_error	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dd1	      0xe95d020000	                           jmp 0x4006073	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_13
0x5dd6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1991	sequencer.c	FUNCTION_60	IF_5
0x5ddd	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1991	sequencer.c	FUNCTION_60	IF_5
0x5de0	            0x85c0	                           test eax, eax	      1991	sequencer.c	FUNCTION_60	IF_5
0x5de2	            0x7545	                           jne 0x4005e69	      1991	sequencer.c	FUNCTION_60	IF_5
0x5de4	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5deb	          0x4889c7	                            mov rdi, rax	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5dee	      0xe895aeffff	                    call sym.is_rebase_i	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5df3	            0x85c0	                           test eax, eax	      1991	sequencer.c	FUNCTION_60	IF_5
0x5df5	            0x7411	                            je 0x4005e48	      1991	sequencer.c	FUNCTION_60	IF_5
0x5df7	      0xe862a8ffff	               call sym.rebase_path_done	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5dfc	          0x4889c7	                            mov rdi, rax	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5dff	      0xe800000000	                          call 0x4005e44	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5e04	            0x85c0	                           test eax, eax	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5e06	            0x7521	                           jne 0x4005e69	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_16
0x5e08	      0xbf00000000	                              mov edi, 0	      1993	sequencer.c	FUNCTION_60	CALL_18
0x5e0d	      0xe855a5ffff	                               call sym.	      1993	sequencer.c	FUNCTION_60	CALL_18
0x5e12	          0x4889c7	                            mov rdi, rax	      1993	sequencer.c	FUNCTION_60	CALL_18
0x5e15	      0xb800000000	                              mov eax, 0	      1993	sequencer.c	FUNCTION_60	CALL_18
0x5e1a	      0xe800000000	                          call 0x4005e5f	      1993	sequencer.c	FUNCTION_60	CALL_18
0x5e1f	      0xe8dca1ffff	                    call sym.const_error	      1993	sequencer.c	FUNCTION_60	CALL_18
0x5e24	      0xe90a020000	                           jmp 0x4006073	      1993	sequencer.c	FUNCTION_60	CALL_18
0x5e29	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_19
0x5e30	          0x4889c7	                            mov rdi, rax	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_19
0x5e33	      0xe850aeffff	                    call sym.is_rebase_i	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_19
0x5e38	            0x85c0	                           test eax, eax	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_19
0x5e3a	     0xf85bf000000	                           jne 0x4005f3f	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_19
0x5e40	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1997	sequencer.c	FUNCTION_60	IF_6
0x5e47	            0x8b00	                    mov eax, dword [rax]	      1997	sequencer.c	FUNCTION_60	IF_6
0x5e49	          0x83f801	                              cmp eax, 1	      1997	sequencer.c	FUNCTION_60	IF_6
0x5e4c	           0xf95c0	                                setne al	      1997	sequencer.c	FUNCTION_60	IF_6
0x5e4f	           0xfb6c0	                           movzx eax, al	      1996	sequencer.c	FUNCTION_60	IF_6
0x5e52	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	      1996	sequencer.c	FUNCTION_60	IF_6
0x5e58	    0xc785d4feffff	              mov dword [rbp - 0x12c], 0	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5e62	      0xe982000000	                           jmp 0x4005f29	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5e67	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e6e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e72	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e78	          0x4863d0	                         movsxd rdx, eax	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e7b	          0x4889d0	                            mov rax, rdx	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e7e	          0x4801c0	                            add rax, rax	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e81	          0x4801d0	                            add rax, rdx	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e84	        0x48c1e004	                              shl rax, 4	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e88	          0x4801c8	                            add rax, rcx	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e8b	            0x8b00	                    mov eax, dword [rax]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e8d	    0x3b85dcfeffff	            cmp eax, dword [rbp - 0x124]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e93	            0x7509	                           jne 0x4005ede	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x5e95	    0x8385d4feffff	              add dword [rbp - 0x12c], 1	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5e9c	            0xeb4b	                           jmp 0x4005f29	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5e9e	    0x83bddcfeffff	              cmp dword [rbp - 0x124], 0	      2003	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5ea5	            0x7521	                           jne 0x4005f08	      2003	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5ea7	      0xbf00000000	                              mov edi, 0	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5eac	      0xe8b6a4ffff	                               call sym.	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5eb1	          0x4889c7	                            mov rdi, rax	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5eb4	      0xb800000000	                              mov eax, 0	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5eb9	      0xe800000000	                          call 0x4005efe	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5ebe	      0xe83da1ffff	                    call sym.const_error	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5ec3	      0xe96b010000	                           jmp 0x4006073	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x5ec8	      0xbf00000000	                              mov edi, 0	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_23
0x5ecd	      0xe895a4ffff	                               call sym.	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_23
0x5ed2	          0x4889c7	                            mov rdi, rax	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_23
0x5ed5	      0xb800000000	                              mov eax, 0	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_23
0x5eda	      0xe800000000	                          call 0x4005f1f	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_23
0x5edf	      0xe81ca1ffff	                    call sym.const_error	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_23
0x5ee4	      0xe94a010000	                           jmp 0x4006073	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_23
0x5ee9	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5ef0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5ef3	    0x3b85d4feffff	            cmp eax, dword [rbp - 0x12c]	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5ef9	     0xf8f68ffffff	                            jg 0x4005ea7	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x5eff	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x5f06	          0x4889c7	                            mov rdi, rax	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x5f09	      0xe87aadffff	                    call sym.is_rebase_i	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x5f0e	            0x85c0	                           test eax, eax	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x5f10	     0xf8418010000	                            je 0x400606e	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x5f16	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      2010	sequencer.c	FUNCTION_60	IF_9
0x5f1d	      0xb800000000	                              mov eax, 0	      2010	sequencer.c	FUNCTION_60	IF_9
0x5f22	      0xb90b000000	                            mov ecx, 0xb	      2010	sequencer.c	FUNCTION_60	IF_9
0x5f27	          0x4889d7	                            mov rdi, rdx	      2010	sequencer.c	FUNCTION_60	IF_9
0x5f2a	          0xf348ab	              rep stosq qword [rdi], rax	      2010	sequencer.c	FUNCTION_60	IF_9
0x5f2d	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2010	sequencer.c	FUNCTION_60	IF_9
0x5f38	      0xe87fa7ffff	           call sym.rebase_path_msgtotal	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_26
0x5f3d	      0xbe00000000	                              mov esi, 0	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_26
0x5f42	          0x4889c7	                            mov rdi, rax	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_26
0x5f45	      0xe800000000	                          call 0x4005f8a	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_26
0x5f4a	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_26
0x5f51	      0xe808a7ffff	               call sym.rebase_path_done	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f56	          0x4889c1	                            mov rcx, rax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f59	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f60	      0xba00000000	                              mov edx, 0	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f65	          0x4889ce	                            mov rsi, rcx	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f68	          0x4889c7	                            mov rdi, rax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f6b	      0xe800000000	                          call 0x4005fb0	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f70	          0x4885c0	                           test rax, rax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f73	            0x7e3a	                           jle 0x4005fef	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f75	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_29
0x5f7c	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_29
0x5f83	          0x4889d6	                            mov rsi, rdx	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_29
0x5f86	          0x4889c7	                            mov rdi, rax	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_29
0x5f89	      0xe866f9ffff	              call sym.parse_insn_buffer	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_29
0x5f8e	            0x85c0	                           test eax, eax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f90	            0x751d	                           jne 0x4005fef	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_28
0x5f92	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_30
0x5f99	          0x4889c7	                            mov rdi, rax	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_30
0x5f9c	      0xe8f3faffff	                 call sym.count_commands	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_30
0x5fa1	            0x89c2	                            mov edx, eax	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_30
0x5fa3	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_30
0x5faa	          0x89502c	             mov dword [rax + 0x2c], edx	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_30
0x5fad	            0xeb0e	                           jmp 0x4005ffd	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_30
0x5faf	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2017	sequencer.c	FUNCTION_60	IF_9	ELSE_3
0x5fb6	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      2017	sequencer.c	FUNCTION_60	IF_9	ELSE_3
0x5fbd	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2019	sequencer.c	FUNCTION_60	IF_9
0x5fc4	          0x8b582c	            mov ebx, dword [rax + 0x2c] 	      2019	sequencer.c	FUNCTION_60	IF_9
0x5fc7	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_31
0x5fce	          0x4889c7	                            mov rdi, rax	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_31
0x5fd1	      0xe8befaffff	                 call sym.count_commands	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_31
0x5fd6	          0x8d1403	                    lea edx, [rbx + rax]	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_31
0x5fd9	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2019	sequencer.c	FUNCTION_60	IF_9
0x5fe0	          0x895030	             mov dword [rax + 0x30], edx	      2019	sequencer.c	FUNCTION_60	IF_9
0x5fe3	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      2021	sequencer.c	FUNCTION_60	IF_9	CALL_32
0x5fea	          0x4889c7	                            mov rdi, rax	      2021	sequencer.c	FUNCTION_60	IF_9	CALL_32
0x5fed	      0xe880f3ffff	              call sym.todo_list_release	      2021	sequencer.c	FUNCTION_60	IF_9	CALL_32
0x5ff2	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      2023	sequencer.c	FUNCTION_60	IF_9	IF_11
0x5ffa	            0x7432	                            je 0x400606e	      2023	sequencer.c	FUNCTION_60	IF_9	IF_11
0x5ffc	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_33
0x6003	          0x8b5030	            mov edx, dword [rax + 0x30] 	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_33
0x6006	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_33
0x600d	      0xbe00000000	                              mov esi, 0	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_33
0x6012	          0x4889c7	                            mov rdi, rax	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_33
0x6015	      0xb800000000	                              mov eax, 0	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_33
0x601a	      0xe800000000	                          call 0x400605f	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_33
0x601f	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2025	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_34
0x6026	          0x4889c7	                            mov rdi, rax	      2025	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_34
0x6029	      0xe800000000	                          call 0x400606e	      2025	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_34
0x602e	      0xb800000000	                              mov eax, 0	      2029	sequencer.c	FUNCTION_60
0x6033	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2030	sequencer.c	FUNCTION_60
0x6037	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2030	sequencer.c	FUNCTION_60
0x6040	            0x7405	                            je 0x4006087	      2030	sequencer.c	FUNCTION_60
0x6042	      0xe800000000	                          call 0x4006087	      2030	sequencer.c	FUNCTION_60
0x6047	    0x4881c4380100	                          add rsp, 0x138	      2030	sequencer.c	FUNCTION_60
0x604e	              0x5b	                                 pop rbx	      2030	sequencer.c	FUNCTION_60
0x604f	              0x5d	                                 pop rbp	      2030	sequencer.c	FUNCTION_60
0x6050	              0xc3	                                     ret	      2030	sequencer.c	FUNCTION_60
do_label	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,2:IF,5:WHILE,0:CALL,18	140
0x7f11	              0x55	                                push rbp	      2582	sequencer.c	FUNCTION_80
0x7f12	          0x4889e5	                            mov rbp, rsp	      2582	sequencer.c	FUNCTION_80
0x7f15	              0x53	                                push rbx	      2582	sequencer.c	FUNCTION_80
0x7f16	    0x4881ecb80000	                           sub rsp, 0xb8	      2582	sequencer.c	FUNCTION_80
0x7f1d	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2582	sequencer.c	FUNCTION_80
0x7f24	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	      2582	sequencer.c	FUNCTION_80
0x7f2a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2582	sequencer.c	FUNCTION_80
0x7f33	        0x488945e8	             mov qword [rbp - 0x18], rax	      2582	sequencer.c	FUNCTION_80
0x7f37	            0x31c0	                            xor eax, eax	      2582	sequencer.c	FUNCTION_80
0x7f39	    0x488b05000000	            mov rax, qword [0x04007f80] 	      2583	sequencer.c	FUNCTION_80	CALL_1
0x7f40	          0x4889c7	                            mov rdi, rax	      2583	sequencer.c	FUNCTION_80	CALL_1
0x7f43	      0xe800000000	                          call 0x4007f88	      2583	sequencer.c	FUNCTION_80	CALL_1
0x7f48	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2583	sequencer.c	FUNCTION_80	CALL_1
0x7f4f	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2585	sequencer.c	FUNCTION_80
0x7f5a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      2585	sequencer.c	FUNCTION_80
0x7f65	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2585	sequencer.c	FUNCTION_80
0x7f6d	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2585	sequencer.c	FUNCTION_80
0x7f75	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2585	sequencer.c	FUNCTION_80
0x7f7d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2585	sequencer.c	FUNCTION_80
0x7f85	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2586	sequencer.c	FUNCTION_80
0x7f8d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2586	sequencer.c	FUNCTION_80
0x7f95	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2586	sequencer.c	FUNCTION_80
0x7f9d	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2587	sequencer.c	FUNCTION_80
0x7fa7	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 1	      2590	sequencer.c	FUNCTION_80	IF_1
0x7fae	            0x7536	                           jne 0x4008026	      2590	sequencer.c	FUNCTION_80	IF_1
0x7fb0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2590	sequencer.c	FUNCTION_80	IF_1
0x7fb7	           0xfb600	                   movzx eax, byte [rax]	      2590	sequencer.c	FUNCTION_80	IF_1
0x7fba	            0x3c23	                            cmp al, 0x23	      2590	sequencer.c	FUNCTION_80	IF_1
0x7fbc	            0x7528	                           jne 0x4008026	      2590	sequencer.c	FUNCTION_80	IF_1
0x7fbe	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fc5	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fcb	            0x89c6	                            mov esi, eax	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fcd	      0xbf00000000	                              mov edi, 0	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fd2	      0xb800000000	                              mov eax, 0	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fd7	      0xe800000000	                          call 0x400801c	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fdc	      0xe81f80ffff	                    call sym.const_error	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fe1	      0xe9b9010000	                           jmp 0x40081df	      2591	sequencer.c	FUNCTION_80	CALL_2
0x7fe6	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2593	sequencer.c	FUNCTION_80	CALL_3
0x7fed	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2593	sequencer.c	FUNCTION_80	CALL_3
0x7ff3	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2593	sequencer.c	FUNCTION_80	CALL_3
0x7ffa	      0xbe00000000	                              mov esi, 0	      2593	sequencer.c	FUNCTION_80	CALL_3
0x7fff	          0x4889c7	                            mov rdi, rax	      2593	sequencer.c	FUNCTION_80	CALL_3
0x8002	      0xb800000000	                              mov eax, 0	      2593	sequencer.c	FUNCTION_80	CALL_3
0x8007	      0xe800000000	                          call 0x400804c	      2593	sequencer.c	FUNCTION_80	CALL_3
0x800c	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2594	sequencer.c	FUNCTION_80	CALL_4
0x8013	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2594	sequencer.c	FUNCTION_80	CALL_4
0x8019	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2594	sequencer.c	FUNCTION_80	CALL_4
0x801d	      0xbe00000000	                              mov esi, 0	      2594	sequencer.c	FUNCTION_80	CALL_4
0x8022	          0x4889c7	                            mov rdi, rax	      2594	sequencer.c	FUNCTION_80	CALL_4
0x8025	      0xb800000000	                              mov eax, 0	      2594	sequencer.c	FUNCTION_80	CALL_4
0x802a	      0xe800000000	                          call 0x400806f	      2594	sequencer.c	FUNCTION_80	CALL_4
0x802f	        0x488d5590	                   lea rdx, [rbp - 0x70]	      2596	sequencer.c	FUNCTION_80	CALL_5
0x8033	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2596	sequencer.c	FUNCTION_80	CALL_5
0x803a	          0x4889d6	                            mov rsi, rdx	      2596	sequencer.c	FUNCTION_80	CALL_5
0x803d	          0x4889c7	                            mov rdi, rax	      2596	sequencer.c	FUNCTION_80	CALL_5
0x8040	      0xe800000000	                          call 0x4008085	      2596	sequencer.c	FUNCTION_80	CALL_5
0x8045	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2596	sequencer.c	FUNCTION_80	CALL_5
0x804c	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2597	sequencer.c	FUNCTION_80	IF_2
0x8054	            0x752a	                           jne 0x40080c0	      2597	sequencer.c	FUNCTION_80	IF_2
0x8056	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2598	sequencer.c	FUNCTION_80	IF_2	CALL_6
0x805a	          0x4889c6	                            mov rsi, rax	      2598	sequencer.c	FUNCTION_80	IF_2	CALL_6
0x805d	      0xbf00000000	                              mov edi, 0	      2598	sequencer.c	FUNCTION_80	IF_2	CALL_6
0x8062	      0xb800000000	                              mov eax, 0	      2598	sequencer.c	FUNCTION_80	IF_2	CALL_6
0x8067	      0xe800000000	                          call 0x40080ac	      2598	sequencer.c	FUNCTION_80	IF_2	CALL_6
0x806c	      0xe88f7fffff	                    call sym.const_error	      2598	sequencer.c	FUNCTION_80	IF_2	CALL_6
0x8071	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	      2599	sequencer.c	FUNCTION_80	IF_2
0x807b	      0xe9b6000000	                           jmp 0x4008176	      2599	sequencer.c	FUNCTION_80	IF_2
0x8080	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_7
0x8084	          0x4889c6	                            mov rsi, rax	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_7
0x8087	      0xbf00000000	                              mov edi, 0	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_7
0x808c	      0xe800000000	                          call 0x40080d1	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_7
0x8091	            0x85c0	                           test eax, eax	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_7
0x8093	            0x7428	                            je 0x40080fd	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_7
0x8095	      0xbf00000000	                              mov edi, 0	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_9
0x809a	      0xe8c882ffff	                               call sym.	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_9
0x809f	          0x4889c7	                            mov rdi, rax	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_9
0x80a2	      0xb800000000	                              mov eax, 0	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_9
0x80a7	      0xe800000000	                          call 0x40080ec	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_9
0x80ac	      0xe84f7fffff	                    call sym.const_error	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_9
0x80b1	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	      2602	sequencer.c	FUNCTION_80	ELSE_1	IF_3
0x80bb	            0xeb79	                           jmp 0x4008176	      2602	sequencer.c	FUNCTION_80	ELSE_1	IF_3
0x80bd	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      2604	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x80c1	        0x488b7580	             mov rsi, qword [rbp - 0x80]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80c5	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80c9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80d0	        0x4883ec08	                              sub rsp, 8	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80d4	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80d8	              0x51	                                push rcx	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80d9	          0x4989f9	                             mov r9, rdi	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80dc	    0x41b800000000	                              mov r8d, 0	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80e2	      0xb900000000	                              mov ecx, 0	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80e7	          0x4889c7	                            mov rdi, rax	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80ea	      0xe800000000	                          call 0x400812f	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80ef	        0x4883c410	                           add rsp, 0x10	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80f3	            0x85c0	                           test eax, eax	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80f5	            0x781a	                            js 0x4008151	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_10
0x80f7	        0x488d5590	                   lea rdx, [rbp - 0x70]	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_11
0x80fb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_11
0x8102	          0x4889d6	                            mov rsi, rdx	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_11
0x8105	          0x4889c7	                            mov rdi, rax	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_11
0x8108	      0xe800000000	                          call 0x400814d	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_11
0x810d	            0x85c0	                           test eax, eax	      2604	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x810f	            0x7425	                            je 0x4008176	      2604	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x8111	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_12
0x8115	          0x4889c6	                            mov rsi, rax	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_12
0x8118	      0xbf00000000	                              mov edi, 0	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_12
0x811d	      0xb800000000	                              mov eax, 0	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_12
0x8122	      0xe800000000	                          call 0x4008167	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_12
0x8127	      0xe8d47effff	                    call sym.const_error	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_12
0x812c	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	      2607	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x8136	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2609	sequencer.c	FUNCTION_80	CALL_13
0x813d	          0x4889c7	                            mov rdi, rax	      2609	sequencer.c	FUNCTION_80	CALL_13
0x8140	      0xe800000000	                          call 0x4008185	      2609	sequencer.c	FUNCTION_80	CALL_13
0x8145	        0x488d4590	                   lea rax, [rbp - 0x70]	      2610	sequencer.c	FUNCTION_80	CALL_14
0x8149	          0x4889c7	                            mov rdi, rax	      2610	sequencer.c	FUNCTION_80	CALL_14
0x814c	      0xe800000000	                          call 0x4008191	      2610	sequencer.c	FUNCTION_80	CALL_14
0x8151	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2611	sequencer.c	FUNCTION_80	CALL_15
0x8155	          0x4889c7	                            mov rdi, rax	      2611	sequencer.c	FUNCTION_80	CALL_15
0x8158	      0xe800000000	                          call 0x400819d	      2611	sequencer.c	FUNCTION_80	CALL_15
0x815d	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2613	sequencer.c	FUNCTION_80	IF_5
0x8164	            0x7524	                           jne 0x40081ca	      2613	sequencer.c	FUNCTION_80	IF_5
0x8166	        0x488b5d80	             mov rbx, qword [rbp - 0x80]	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x816a	      0xe82387ffff	     call sym.rebase_path_refs_to_delete	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x816f	          0x4889da	                            mov rdx, rbx	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x8172	      0xbe00000000	                              mov esi, 0	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x8177	          0x4889c7	                            mov rdi, rax	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x817a	      0xb800000000	                              mov eax, 0	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x817f	      0xe8f3faffff	                    call sym.safe_append	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x8184	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_17
0x818a	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2616	sequencer.c	FUNCTION_80	CALL_18
0x8191	          0x4889c7	                            mov rdi, rax	      2616	sequencer.c	FUNCTION_80	CALL_18
0x8194	      0xe800000000	                          call 0x40081d9	      2616	sequencer.c	FUNCTION_80	CALL_18
0x8199	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2618	sequencer.c	FUNCTION_80
0x819f	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2619	sequencer.c	FUNCTION_80
0x81a3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2619	sequencer.c	FUNCTION_80
0x81ac	            0x7405	                            je 0x40081f3	      2619	sequencer.c	FUNCTION_80
0x81ae	      0xe800000000	                          call 0x40081f3	      2619	sequencer.c	FUNCTION_80
0x81b3	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2619	sequencer.c	FUNCTION_80
0x81b7	              0xc9	                                   leave	      2619	sequencer.c	FUNCTION_80
0x81b8	              0xc3	                                     ret	      2619	sequencer.c	FUNCTION_80
get_missing_commit_check_level	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,6	53
0xd14c	              0x55	                                push rbp	      4069	sequencer.c	FUNCTION_100
0xd14d	          0x4889e5	                            mov rbp, rsp	      4069	sequencer.c	FUNCTION_100
0xd150	              0x53	                                push rbx	      4069	sequencer.c	FUNCTION_100
0xd151	        0x4883ec18	                           sub rsp, 0x18	      4069	sequencer.c	FUNCTION_100
0xd155	    0x64488b042528	                mov rax, qword fs:[0x28]	      4069	sequencer.c	FUNCTION_100
0xd15e	        0x488945e8	             mov qword [rbp - 0x18], rax	      4069	sequencer.c	FUNCTION_100
0xd162	            0x31c0	                            xor eax, eax	      4069	sequencer.c	FUNCTION_100
0xd164	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd168	          0x4889c6	                            mov rsi, rax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd16b	      0xbf00000000	                              mov edi, 0	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd170	      0xe800000000	                          call 0x400d1b5	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd175	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd177	            0x7515	                           jne 0x400d1ce	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd179	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0xd17d	          0x4889c6	                            mov rsi, rax	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0xd180	      0xbf00000000	                              mov edi, 0	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0xd185	      0xe800000000	                          call 0x400d1ca	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0xd18a	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd18c	            0x7507	                           jne 0x400d1d5	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0xd18e	      0xb800000000	                              mov eax, 0	      4074	sequencer.c	FUNCTION_100	IF_1
0xd193	            0xeb5b	                           jmp 0x400d230	      4074	sequencer.c	FUNCTION_100	IF_1
0xd195	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0xd199	          0x4889c6	                            mov rsi, rax	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0xd19c	      0xbf00000000	                              mov edi, 0	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0xd1a1	      0xe800000000	                          call 0x400d1e6	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0xd1a6	            0x85c0	                           test eax, eax	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0xd1a8	            0x7507	                           jne 0x400d1f1	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0xd1aa	      0xb801000000	                              mov eax, 1	      4076	sequencer.c	FUNCTION_100	IF_2
0xd1af	            0xeb3f	                           jmp 0x400d230	      4076	sequencer.c	FUNCTION_100	IF_2
0xd1b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0xd1b5	          0x4889c6	                            mov rsi, rax	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0xd1b8	      0xbf00000000	                              mov edi, 0	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0xd1bd	      0xe800000000	                          call 0x400d202	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0xd1c2	            0x85c0	                           test eax, eax	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0xd1c4	            0x7507	                           jne 0x400d20d	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0xd1c6	      0xb802000000	                              mov eax, 2	      4078	sequencer.c	FUNCTION_100	IF_3
0xd1cb	            0xeb23	                           jmp 0x400d230	      4078	sequencer.c	FUNCTION_100	IF_3
0xd1cd	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      4079	sequencer.c	FUNCTION_100	CALL_6
0xd1d1	      0xbf00000000	                              mov edi, 0	      4079	sequencer.c	FUNCTION_100	CALL_6
0xd1d6	      0xe88c31ffff	                               call sym.	      4079	sequencer.c	FUNCTION_100	CALL_6
0xd1db	          0x4889de	                            mov rsi, rbx	      4079	sequencer.c	FUNCTION_100	CALL_6
0xd1de	          0x4889c7	                            mov rdi, rax	      4079	sequencer.c	FUNCTION_100	CALL_6
0xd1e1	      0xb800000000	                              mov eax, 0	      4079	sequencer.c	FUNCTION_100	CALL_6
0xd1e6	      0xe800000000	                          call 0x400d22b	      4079	sequencer.c	FUNCTION_100	CALL_6
0xd1eb	      0xb800000000	                              mov eax, 0	      4081	sequencer.c	FUNCTION_100
0xd1f0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4082	sequencer.c	FUNCTION_100
0xd1f4	    0x644833142528	                xor rdx, qword fs:[0x28]	      4082	sequencer.c	FUNCTION_100
0xd1fd	            0x7405	                            je 0x400d244	      4082	sequencer.c	FUNCTION_100
0xd1ff	      0xe800000000	                          call 0x400d244	      4082	sequencer.c	FUNCTION_100
0xd204	        0x4883c418	                           add rsp, 0x18	      4082	sequencer.c	FUNCTION_100
0xd208	              0x5b	                                 pop rbx	      4082	sequencer.c	FUNCTION_100
0xd209	              0x5d	                                 pop rbp	      4082	sequencer.c	FUNCTION_100
0xd20a	              0xc3	                                     ret	      4082	sequencer.c	FUNCTION_100
is_original_commit_empty	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,3:WHILE,0:CALL,11	73
0x3a42	              0x55	                                push rbp	      1241	sequencer.c	FUNCTION_39
0x3a43	          0x4889e5	                            mov rbp, rsp	      1241	sequencer.c	FUNCTION_39
0x3a46	              0x53	                                push rbx	      1241	sequencer.c	FUNCTION_39
0x3a47	        0x4883ec28	                           sub rsp, 0x28	      1241	sequencer.c	FUNCTION_39
0x3a4b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1241	sequencer.c	FUNCTION_39
0x3a4f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x3a53	          0x4889c7	                            mov rdi, rax	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x3a56	      0xe86ccaffff	                   call sym.parse_commit	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x3a5b	            0x85c0	                           test eax, eax	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x3a5d	            0x7437	                            je 0x4003ad6	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x3a5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a63	        0x4883c004	                              add rax, 4	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a67	          0x4889c7	                            mov rdi, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a6a	      0xe800000000	                          call 0x4003aaf	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a6f	          0x4889c3	                            mov rbx, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a72	      0xbf00000000	                              mov edi, 0	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a77	      0xe8ebc8ffff	                               call sym.	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a7c	          0x4889de	                            mov rsi, rbx	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a7f	          0x4889c7	                            mov rdi, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a82	      0xb800000000	                              mov eax, 0	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a87	      0xe800000000	                          call 0x4003acc	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a8c	      0xe86fc5ffff	                    call sym.const_error	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a91	      0xe9ab000000	                           jmp 0x4003b81	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_3
0x3a96	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1247	sequencer.c	FUNCTION_39	IF_2
0x3a9a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1247	sequencer.c	FUNCTION_39	IF_2
0x3a9e	          0x4885c0	                           test rax, rax	      1247	sequencer.c	FUNCTION_39	IF_2
0x3aa1	            0x7465	                            je 0x4003b48	      1247	sequencer.c	FUNCTION_39	IF_2
0x3aa3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1248	sequencer.c	FUNCTION_39	IF_2
0x3aa7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1248	sequencer.c	FUNCTION_39	IF_2
0x3aab	          0x488b00	                    mov rax, qword [rax]	      1248	sequencer.c	FUNCTION_39	IF_2
0x3aae	        0x488945e8	             mov qword [rbp - 0x18], rax	      1248	sequencer.c	FUNCTION_39	IF_2
0x3ab2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x3ab6	          0x4889c7	                            mov rdi, rax	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x3ab9	      0xe809caffff	                   call sym.parse_commit	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x3abe	            0x85c0	                           test eax, eax	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x3ac0	            0x7434	                            je 0x4003b36	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x3ac2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3ac6	        0x4883c004	                              add rax, 4	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3aca	          0x4889c7	                            mov rdi, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3acd	      0xe800000000	                          call 0x4003b12	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3ad2	          0x4889c3	                            mov rbx, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3ad5	      0xbf00000000	                              mov edi, 0	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3ada	      0xe888c8ffff	                               call sym.	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3adf	          0x4889de	                            mov rsi, rbx	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3ae2	          0x4889c7	                            mov rdi, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3ae5	      0xb800000000	                              mov eax, 0	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3aea	      0xe800000000	                          call 0x4003b2f	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3aef	      0xe80cc5ffff	                    call sym.const_error	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3af4	            0xeb4b	                           jmp 0x4003b81	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_7
0x3af6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_9
0x3afa	          0x4889c7	                            mov rdi, rax	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_9
0x3afd	      0xe800000000	                          call 0x4003b42	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_9
0x3b02	        0x488945e0	             mov qword [rbp - 0x20], rax	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_9
0x3b06	            0xeb13	                           jmp 0x4003b5b	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_9
0x3b08	    0x488b05000000	            mov rax, qword [0x04003b4f] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x3b0f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x3b13	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x3b17	        0x488945e0	             mov qword [rbp - 0x20], rax	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x3b1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b1f	          0x4889c7	                            mov rdi, rax	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b22	      0xe800000000	                          call 0x4003b67	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b27	          0x4889c2	                            mov rdx, rax	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b2a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b2e	          0x4889d6	                            mov rsi, rdx	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b31	          0x4889c7	                            mov rdi, rax	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b34	      0xe884c8ffff	                         call sym.oidcmp	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b39	            0x85c0	                           test eax, eax	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b3b	           0xf94c0	                                 sete al	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b3e	           0xfb6c0	                           movzx eax, al	      1257	sequencer.c	FUNCTION_39	CALL_11
0x3b41	        0x4883c428	                           add rsp, 0x28	      1258	sequencer.c	FUNCTION_39
0x3b45	              0x5b	                                 pop rbx	      1258	sequencer.c	FUNCTION_39
0x3b46	              0x5d	                                 pop rbp	      1258	sequencer.c	FUNCTION_39
0x3b47	              0xc3	                                     ret	      1258	sequencer.c	FUNCTION_39
strbuf_complete	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,1	27
0x26a	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_116
0x26b	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_116
0x26e	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_116
0x272	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_116
0x276	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_116
0x278	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_116
0x27b	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_116	IF_1
0x27f	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_116	IF_1
0x283	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_116	IF_1
0x286	            0x7431	                            je 0x40002f9	       595	strbuf.h	FUNCTION_116	IF_1
0x288	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_116	IF_1
0x28c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_116	IF_1
0x290	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_116	IF_1
0x294	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_116	IF_1
0x298	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_116	IF_1
0x29c	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_116	IF_1
0x29f	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_116	IF_1
0x2a2	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_116	IF_1
0x2a5	            0x7412	                            je 0x40002f9	       595	strbuf.h	FUNCTION_116	IF_1
0x2a7	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_116	CALL_1
0x2ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_116	CALL_1
0x2af	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_116	CALL_1
0x2b1	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_116	CALL_1
0x2b4	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_116	CALL_1
0x2b9	              0x90	                                     nop	       597	strbuf.h	FUNCTION_116
0x2ba	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_116
0x2bb	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_116
save_opts	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,10:WHILE,0:CALL,13	155
0x72eb	              0x55	                                push rbp	      2367	sequencer.c	FUNCTION_73
0x72ec	          0x4889e5	                            mov rbp, rsp	      2367	sequencer.c	FUNCTION_73
0x72ef	        0x4883ec40	                           sub rsp, 0x40	      2367	sequencer.c	FUNCTION_73
0x72f3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2367	sequencer.c	FUNCTION_73
0x72f7	    0x64488b042528	                mov rax, qword fs:[0x28]	      2367	sequencer.c	FUNCTION_73
0x7300	        0x488945f8	                mov qword [rbp - 8], rax	      2367	sequencer.c	FUNCTION_73
0x7304	            0x31c0	                            xor eax, eax	      2367	sequencer.c	FUNCTION_73
0x7306	      0xe86892ffff	             call sym.git_path_opts_file	      2368	sequencer.c	FUNCTION_73	CALL_1
0x730b	        0x488945d8	             mov qword [rbp - 0x28], rax	      2368	sequencer.c	FUNCTION_73	CALL_1
0x730f	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2369	sequencer.c	FUNCTION_73
0x7316	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2371	sequencer.c	FUNCTION_73	IF_1
0x731a	          0x8b400c	              mov eax, dword [rax + 0xc]	      2371	sequencer.c	FUNCTION_73	IF_1
0x731d	            0x85c0	                           test eax, eax	      2371	sequencer.c	FUNCTION_73	IF_1
0x731f	            0x7419	                            je 0x400737a	      2371	sequencer.c	FUNCTION_73	IF_1
0x7321	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2372	sequencer.c	FUNCTION_73	CALL_2
0x7325	      0xba00000000	                              mov edx, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x732a	      0xbe00000000	                              mov esi, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x732f	          0x4889c7	                            mov rdi, rax	      2372	sequencer.c	FUNCTION_73	CALL_2
0x7332	      0xe800000000	                          call 0x4007377	      2372	sequencer.c	FUNCTION_73	CALL_2
0x7337	           0x945d0	              or dword [rbp - 0x30], eax	      2372	sequencer.c	FUNCTION_73	CALL_2
0x733a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2373	sequencer.c	FUNCTION_73	IF_2
0x733e	          0x8b4004	                mov eax, dword [rax + 4]	      2373	sequencer.c	FUNCTION_73	IF_2
0x7341	            0x85c0	                           test eax, eax	      2373	sequencer.c	FUNCTION_73	IF_2
0x7343	            0x7419	                            je 0x400739e	      2373	sequencer.c	FUNCTION_73	IF_2
0x7345	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2374	sequencer.c	FUNCTION_73	CALL_3
0x7349	      0xba00000000	                              mov edx, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x734e	      0xbe00000000	                              mov esi, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x7353	          0x4889c7	                            mov rdi, rax	      2374	sequencer.c	FUNCTION_73	CALL_3
0x7356	      0xe800000000	                          call 0x400739b	      2374	sequencer.c	FUNCTION_73	CALL_3
0x735b	           0x945d0	              or dword [rbp - 0x30], eax	      2374	sequencer.c	FUNCTION_73	CALL_3
0x735e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2375	sequencer.c	FUNCTION_73	IF_3
0x7362	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2375	sequencer.c	FUNCTION_73	IF_3
0x7365	            0x85c0	                           test eax, eax	      2375	sequencer.c	FUNCTION_73	IF_3
0x7367	            0x7419	                            je 0x40073c2	      2375	sequencer.c	FUNCTION_73	IF_3
0x7369	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2376	sequencer.c	FUNCTION_73	CALL_4
0x736d	      0xba00000000	                              mov edx, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x7372	      0xbe00000000	                              mov esi, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x7377	          0x4889c7	                            mov rdi, rax	      2376	sequencer.c	FUNCTION_73	CALL_4
0x737a	      0xe800000000	                          call 0x40073bf	      2376	sequencer.c	FUNCTION_73	CALL_4
0x737f	           0x945d0	              or dword [rbp - 0x30], eax	      2376	sequencer.c	FUNCTION_73	CALL_4
0x7382	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2377	sequencer.c	FUNCTION_73	IF_4
0x7386	          0x8b4008	                mov eax, dword [rax + 8]	      2377	sequencer.c	FUNCTION_73	IF_4
0x7389	            0x85c0	                           test eax, eax	      2377	sequencer.c	FUNCTION_73	IF_4
0x738b	            0x7419	                            je 0x40073e6	      2377	sequencer.c	FUNCTION_73	IF_4
0x738d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2378	sequencer.c	FUNCTION_73	CALL_5
0x7391	      0xba00000000	                              mov edx, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x7396	      0xbe00000000	                              mov esi, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x739b	          0x4889c7	                            mov rdi, rax	      2378	sequencer.c	FUNCTION_73	CALL_5
0x739e	      0xe800000000	                          call 0x40073e3	      2378	sequencer.c	FUNCTION_73	CALL_5
0x73a3	           0x945d0	              or dword [rbp - 0x30], eax	      2378	sequencer.c	FUNCTION_73	CALL_5
0x73a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2379	sequencer.c	FUNCTION_73	IF_5
0x73aa	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2379	sequencer.c	FUNCTION_73	IF_5
0x73ad	            0x85c0	                           test eax, eax	      2379	sequencer.c	FUNCTION_73	IF_5
0x73af	            0x7419	                            je 0x400740a	      2379	sequencer.c	FUNCTION_73	IF_5
0x73b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2380	sequencer.c	FUNCTION_73	CALL_6
0x73b5	      0xba00000000	                              mov edx, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x73ba	      0xbe00000000	                              mov esi, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x73bf	          0x4889c7	                            mov rdi, rax	      2380	sequencer.c	FUNCTION_73	CALL_6
0x73c2	      0xe800000000	                          call 0x4007407	      2380	sequencer.c	FUNCTION_73	CALL_6
0x73c7	           0x945d0	              or dword [rbp - 0x30], eax	      2380	sequencer.c	FUNCTION_73	CALL_6
0x73ca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2381	sequencer.c	FUNCTION_73	IF_6
0x73ce	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2381	sequencer.c	FUNCTION_73	IF_6
0x73d1	            0x85c0	                           test eax, eax	      2381	sequencer.c	FUNCTION_73	IF_6
0x73d3	            0x7459	                            je 0x400746e	      2381	sequencer.c	FUNCTION_73	IF_6
0x73d5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x73dd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x73e5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x73ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x73f1	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x73f4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x73f8	      0xbe00000000	                              mov esi, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x73fd	          0x4889c7	                            mov rdi, rax	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x7400	      0xb800000000	                              mov eax, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x7405	      0xe800000000	                          call 0x400744a	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x740a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x740e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x7412	      0xbe00000000	                              mov esi, 0	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x7417	          0x4889c7	                            mov rdi, rax	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x741a	      0xe800000000	                          call 0x400745f	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x741f	           0x945d0	              or dword [rbp - 0x30], eax	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x7422	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x7426	          0x4889c7	                            mov rdi, rax	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x7429	      0xe800000000	                          call 0x400746e	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x742e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2387	sequencer.c	FUNCTION_73	IF_7
0x7432	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2387	sequencer.c	FUNCTION_73	IF_7
0x7436	          0x4885c0	                           test rax, rax	      2387	sequencer.c	FUNCTION_73	IF_7
0x7439	            0x741c	                            je 0x4007497	      2387	sequencer.c	FUNCTION_73	IF_7
0x743b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2388	sequencer.c	FUNCTION_73	CALL_10
0x743f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2388	sequencer.c	FUNCTION_73	CALL_10
0x7443	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2388	sequencer.c	FUNCTION_73	CALL_10
0x7447	      0xbe00000000	                              mov esi, 0	      2388	sequencer.c	FUNCTION_73	CALL_10
0x744c	          0x4889c7	                            mov rdi, rax	      2388	sequencer.c	FUNCTION_73	CALL_10
0x744f	      0xe800000000	                          call 0x4007494	      2388	sequencer.c	FUNCTION_73	CALL_10
0x7454	           0x945d0	              or dword [rbp - 0x30], eax	      2388	sequencer.c	FUNCTION_73	CALL_10
0x7457	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2389	sequencer.c	FUNCTION_73	IF_8
0x745b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2389	sequencer.c	FUNCTION_73	IF_8
0x745f	          0x4885c0	                           test rax, rax	      2389	sequencer.c	FUNCTION_73	IF_8
0x7462	            0x741c	                            je 0x40074c0	      2389	sequencer.c	FUNCTION_73	IF_8
0x7464	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2390	sequencer.c	FUNCTION_73	CALL_11
0x7468	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2390	sequencer.c	FUNCTION_73	CALL_11
0x746c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2390	sequencer.c	FUNCTION_73	CALL_11
0x7470	      0xbe00000000	                              mov esi, 0	      2390	sequencer.c	FUNCTION_73	CALL_11
0x7475	          0x4889c7	                            mov rdi, rax	      2390	sequencer.c	FUNCTION_73	CALL_11
0x7478	      0xe800000000	                          call 0x40074bd	      2390	sequencer.c	FUNCTION_73	CALL_11
0x747d	           0x945d0	              or dword [rbp - 0x30], eax	      2390	sequencer.c	FUNCTION_73	CALL_11
0x7480	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2391	sequencer.c	FUNCTION_73	IF_9
0x7484	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2391	sequencer.c	FUNCTION_73	IF_9
0x7488	          0x4885c0	                           test rax, rax	      2391	sequencer.c	FUNCTION_73	IF_9
0x748b	            0x7457	                            je 0x4007524	      2391	sequencer.c	FUNCTION_73	IF_9
0x748d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x7494	            0xeb3b	                           jmp 0x4007511	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x7496	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x749a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x749e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74a1	          0x4863d2	                         movsxd rdx, edx	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74a4	        0x48c1e203	                              shl rdx, 3	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74a8	          0x4801d0	                            add rax, rdx	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74ab	          0x488b10	                    mov rdx, qword [rax]	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74b2	    0x41b800000000	                              mov r8d, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74b8	      0xb900000000	                              mov ecx, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74bd	      0xbe00000000	                              mov esi, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74c2	          0x4889c7	                            mov rdi, rax	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74c5	      0xe800000000	                          call 0x400750a	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74ca	           0x945d0	              or dword [rbp - 0x30], eax	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x74cd	        0x8345d401	               add dword [rbp - 0x2c], 1	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74d1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74d4	          0x4863d0	                         movsxd rdx, eax	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74db	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74df	          0x4839c2	                            cmp rdx, rax	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74e2	            0x72b2	                            jb 0x40074d6	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x74e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2398	sequencer.c	FUNCTION_73	IF_10
0x74e8	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2398	sequencer.c	FUNCTION_73	IF_10
0x74eb	            0x85c0	                           test eax, eax	      2398	sequencer.c	FUNCTION_73	IF_10
0x74ed	            0x742c	                            je 0x400755b	      2398	sequencer.c	FUNCTION_73	IF_10
0x74ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2400	sequencer.c	FUNCTION_73	IF_10
0x74f3	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2400	sequencer.c	FUNCTION_73	IF_10
0x74f6	          0x83f801	                              cmp eax, 1	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x74f9	            0x7507	                           jne 0x4007542	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x74fb	      0xba00000000	                              mov edx, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x7500	            0xeb05	                           jmp 0x4007547	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x7502	      0xba00000000	                              mov edx, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x7507	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x750b	      0xbe00000000	                              mov esi, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x7510	          0x4889c7	                            mov rdi, rax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x7513	      0xe800000000	                          call 0x4007558	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x7518	           0x945d0	              or dword [rbp - 0x30], eax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x751b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2402	sequencer.c	FUNCTION_73
0x751e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2403	sequencer.c	FUNCTION_73
0x7522	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2403	sequencer.c	FUNCTION_73
0x752b	            0x7405	                            je 0x4007572	      2403	sequencer.c	FUNCTION_73
0x752d	      0xe800000000	                          call 0x4007572	      2403	sequencer.c	FUNCTION_73
0x7532	              0xc9	                                   leave	      2403	sequencer.c	FUNCTION_73
0x7533	              0xc3	                                     ret	      2403	sequencer.c	FUNCTION_73
subject2item_cmp	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,2	25
0xdb98	              0x55	                                push rbp	      4275	sequencer.c	FUNCTION_104
0xdb99	          0x4889e5	                            mov rbp, rsp	      4275	sequencer.c	FUNCTION_104
0xdb9c	        0x4883ec20	                           sub rsp, 0x20	      4275	sequencer.c	FUNCTION_104
0xdba0	        0x48897df8	                mov qword [rbp - 8], rdi	      4275	sequencer.c	FUNCTION_104
0xdba4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4275	sequencer.c	FUNCTION_104
0xdba8	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4275	sequencer.c	FUNCTION_104
0xdbac	        0x48894de0	             mov qword [rbp - 0x20], rcx	      4275	sequencer.c	FUNCTION_104
0xdbb0	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbb5	            0x7419	                            je 0x400dc10	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbbb	        0x488d5014	                   lea rdx, [rax + 0x14]	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbbf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbc3	          0x4889c6	                            mov rsi, rax	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbc6	          0x4889d7	                            mov rdi, rdx	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbc9	      0xe800000000	                          call 0x400dc0e	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbce	            0xeb1b	                           jmp 0x400dc2b	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbd4	        0x488d5014	                   lea rdx, [rax + 0x14]	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbd8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbdc	        0x4883c014	                           add rax, 0x14	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbe0	          0x4889d6	                            mov rsi, rdx	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbe3	          0x4889c7	                            mov rdi, rax	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbe6	      0xe800000000	                          call 0x400dc2b	      4276	sequencer.c	FUNCTION_104	CALL_2
0xdbeb	              0xc9	                                   leave	      4277	sequencer.c	FUNCTION_104
0xdbec	              0xc3	                                     ret	      4277	sequencer.c	FUNCTION_104
apply_autostash	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,2:IF,3:WHILE,0:CALL,22	151
0x90cf	              0x55	                                push rbp	      2914	sequencer.c	FUNCTION_85
0x90d0	          0x4889e5	                            mov rbp, rsp	      2914	sequencer.c	FUNCTION_85
0x90d3	              0x53	                                push rbx	      2914	sequencer.c	FUNCTION_85
0x90d4	    0x4881ec180100	                          sub rsp, 0x118	      2914	sequencer.c	FUNCTION_85
0x90db	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      2914	sequencer.c	FUNCTION_85
0x90e2	    0x64488b042528	                mov rax, qword fs:[0x28]	      2914	sequencer.c	FUNCTION_85
0x90eb	        0x488945e8	             mov qword [rbp - 0x18], rax	      2914	sequencer.c	FUNCTION_85
0x90ef	            0x31c0	                            xor eax, eax	      2914	sequencer.c	FUNCTION_85
0x90f1	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2915	sequencer.c	FUNCTION_85
0x90fc	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      2915	sequencer.c	FUNCTION_85
0x9107	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2915	sequencer.c	FUNCTION_85
0x9112	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      2916	sequencer.c	FUNCTION_85
0x9119	      0xb800000000	                              mov eax, 0	      2916	sequencer.c	FUNCTION_85
0x911e	      0xb90c000000	                            mov ecx, 0xc	      2916	sequencer.c	FUNCTION_85
0x9123	          0x4889d7	                            mov rdi, rdx	      2916	sequencer.c	FUNCTION_85
0x9126	          0xf348ab	              rep stosq qword [rdi], rax	      2916	sequencer.c	FUNCTION_85
0x9129	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      2916	sequencer.c	FUNCTION_85
0x9134	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      2916	sequencer.c	FUNCTION_85
0x913f	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      2917	sequencer.c	FUNCTION_85
0x9149	      0xe88d78ffff	          call sym.rebase_path_autostash	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x914e	          0x4889c1	                            mov rcx, rax	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x9151	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x9158	      0xba01000000	                              mov edx, 1	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x915d	          0x4889ce	                            mov rsi, rcx	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x9160	          0x4889c7	                            mov rdi, rax	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x9163	      0xe8b882ffff	                  call sym.read_oneliner	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x9168	            0x85c0	                           test eax, eax	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x916a	            0x7519	                           jne 0x40091c5	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x916c	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2920	sequencer.c	FUNCTION_85	IF_1	CALL_3
0x9173	          0x4889c7	                            mov rdi, rax	      2920	sequencer.c	FUNCTION_85	IF_1	CALL_3
0x9176	      0xe800000000	                          call 0x40091bb	      2920	sequencer.c	FUNCTION_85	IF_1	CALL_3
0x917b	      0xb800000000	                              mov eax, 0	      2921	sequencer.c	FUNCTION_85	IF_1
0x9180	      0xe9f0010000	                           jmp 0x40093b5	      2921	sequencer.c	FUNCTION_85	IF_1
0x9185	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2923	sequencer.c	FUNCTION_85	CALL_4
0x918c	          0x4889c7	                            mov rdi, rax	      2923	sequencer.c	FUNCTION_85	CALL_4
0x918f	      0xe800000000	                          call 0x40091d4	      2923	sequencer.c	FUNCTION_85	CALL_4
0x9194	     0xfb68568ffff	            movzx eax, byte [rbp - 0x98]	      2925	sequencer.c	FUNCTION_85
0x919b	          0x83c808	                               or eax, 8	      2925	sequencer.c	FUNCTION_85
0x919e	    0x888568ffffff	               mov byte [rbp - 0x98], al	      2925	sequencer.c	FUNCTION_85
0x91a4	     0xfb68568ffff	            movzx eax, byte [rbp - 0x98]	      2926	sequencer.c	FUNCTION_85
0x91ab	          0x83c802	                               or eax, 2	      2926	sequencer.c	FUNCTION_85
0x91ae	    0x888568ffffff	               mov byte [rbp - 0x98], al	      2926	sequencer.c	FUNCTION_85
0x91b4	     0xfb68568ffff	            movzx eax, byte [rbp - 0x98]	      2927	sequencer.c	FUNCTION_85
0x91bb	          0x83c804	                               or eax, 4	      2927	sequencer.c	FUNCTION_85
0x91be	    0x888568ffffff	               mov byte [rbp - 0x98], al	      2927	sequencer.c	FUNCTION_85
0x91c4	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2928	sequencer.c	FUNCTION_85	CALL_5
0x91cb	        0x4883c008	                              add rax, 8	      2928	sequencer.c	FUNCTION_85	CALL_5
0x91cf	      0xbe00000000	                              mov esi, 0	      2928	sequencer.c	FUNCTION_85	CALL_5
0x91d4	          0x4889c7	                            mov rdi, rax	      2928	sequencer.c	FUNCTION_85	CALL_5
0x91d7	      0xe800000000	                          call 0x400921c	      2928	sequencer.c	FUNCTION_85	CALL_5
0x91dc	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2929	sequencer.c	FUNCTION_85	CALL_6
0x91e3	        0x4883c008	                              add rax, 8	      2929	sequencer.c	FUNCTION_85	CALL_6
0x91e7	      0xbe00000000	                              mov esi, 0	      2929	sequencer.c	FUNCTION_85	CALL_6
0x91ec	          0x4889c7	                            mov rdi, rax	      2929	sequencer.c	FUNCTION_85	CALL_6
0x91ef	      0xe800000000	                          call 0x4009234	      2929	sequencer.c	FUNCTION_85	CALL_6
0x91f4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2930	sequencer.c	FUNCTION_85	CALL_7
0x91fb	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      2930	sequencer.c	FUNCTION_85	CALL_7
0x9202	        0x4883c208	                              add rdx, 8	      2930	sequencer.c	FUNCTION_85	CALL_7
0x9206	          0x4889c6	                            mov rsi, rax	      2930	sequencer.c	FUNCTION_85	CALL_7
0x9209	          0x4889d7	                            mov rdi, rdx	      2930	sequencer.c	FUNCTION_85	CALL_7
0x920c	      0xe800000000	                          call 0x4009251	      2930	sequencer.c	FUNCTION_85	CALL_7
0x9211	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x9218	          0x4889c7	                            mov rdi, rax	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x921b	      0xe800000000	                          call 0x4009260	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x9220	            0x85c0	                           test eax, eax	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x9222	            0x7529	                           jne 0x400928d	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x9224	      0xbf00000000	                              mov edi, 0	      2932	sequencer.c	FUNCTION_85	CALL_10
0x9229	      0xe83971ffff	                               call sym.	      2932	sequencer.c	FUNCTION_85	CALL_10
0x922e	          0x4889c2	                            mov rdx, rax	      2932	sequencer.c	FUNCTION_85	CALL_10
0x9231	    0x488b05000000	            mov rax, qword [0x04009278] 	      2932	sequencer.c	FUNCTION_85	CALL_10
0x9238	          0x4889d6	                            mov rsi, rdx	      2932	sequencer.c	FUNCTION_85	CALL_10
0x923b	          0x4889c7	                            mov rdi, rax	      2932	sequencer.c	FUNCTION_85	CALL_10
0x923e	      0xb800000000	                              mov eax, 0	      2932	sequencer.c	FUNCTION_85	CALL_10
0x9243	      0xe800000000	                          call 0x4009288	      2932	sequencer.c	FUNCTION_85	CALL_10
0x9248	      0xe913010000	                           jmp 0x40093a0	      2932	sequencer.c	FUNCTION_85	CALL_10
0x924d	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x9251	      0xb800000000	                              mov eax, 0	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x9256	      0xb90c000000	                            mov ecx, 0xc	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x925b	          0x4889d7	                            mov rdi, rdx	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x925e	          0xf348ab	              rep stosq qword [rdi], rax	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x9261	    0x48c745880000	               mov qword [rbp - 0x78], 0	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x9269	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x9271	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2936	sequencer.c	FUNCTION_85	ELSE_1
0x9275	          0x83c808	                               or eax, 8	      2936	sequencer.c	FUNCTION_85	ELSE_1
0x9278	          0x8845c8	               mov byte [rbp - 0x38], al	      2936	sequencer.c	FUNCTION_85	ELSE_1
0x927b	        0x488d4580	                   lea rax, [rbp - 0x80]	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x927f	        0x4883c008	                              add rax, 8	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x9283	      0xbe00000000	                              mov esi, 0	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x9288	          0x4889c7	                            mov rdi, rax	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x928b	      0xe800000000	                          call 0x40092d0	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x9290	        0x488d4580	                   lea rax, [rbp - 0x80]	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x9294	        0x4883c008	                              add rax, 8	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x9298	      0xbe00000000	                              mov esi, 0	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x929d	          0x4889c7	                            mov rdi, rax	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x92a0	      0xe800000000	                          call 0x40092e5	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x92a5	        0x488d4580	                   lea rax, [rbp - 0x80]	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x92a9	        0x4883c008	                              add rax, 8	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x92ad	      0xbe00000000	                              mov esi, 0	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x92b2	          0x4889c7	                            mov rdi, rax	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x92b5	      0xe800000000	                          call 0x40092fa	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x92ba	        0x488d4580	                   lea rax, [rbp - 0x80]	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x92be	        0x4883c008	                              add rax, 8	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x92c2	      0xbe00000000	                              mov esi, 0	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x92c7	          0x4889c7	                            mov rdi, rax	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x92ca	      0xe800000000	                          call 0x400930f	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x92cf	        0x488d4580	                   lea rax, [rbp - 0x80]	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x92d3	        0x4883c008	                              add rax, 8	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x92d7	      0xbe00000000	                              mov esi, 0	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x92dc	          0x4889c7	                            mov rdi, rax	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x92df	      0xe800000000	                          call 0x4009324	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x92e4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x92eb	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x92ef	        0x4883c208	                              add rdx, 8	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x92f3	          0x4889c6	                            mov rsi, rax	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x92f6	          0x4889d7	                            mov rdi, rdx	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x92f9	      0xe800000000	                          call 0x400933e	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x92fe	        0x488d4580	                   lea rax, [rbp - 0x80]	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x9302	          0x4889c7	                            mov rdi, rax	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x9305	      0xe800000000	                          call 0x400934a	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x930a	            0x85c0	                           test eax, eax	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x930c	            0x742e	                            je 0x400937c	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x930e	    0x488b9d10ffff	             mov rbx, qword [rbp - 0xf0]	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x9315	      0xbf00000000	                              mov edi, 0	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x931a	      0xe84870ffff	                               call sym.	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x931f	          0x4889de	                            mov rsi, rbx	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x9322	          0x4889c7	                            mov rdi, rax	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x9325	      0xb800000000	                              mov eax, 0	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x932a	      0xe800000000	                          call 0x400936f	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x932f	      0xe8cc6cffff	                    call sym.const_error	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x9334	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x933a	            0xeb24	                           jmp 0x40093a0	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_19
0x933c	      0xbf00000000	                              mov edi, 0	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x9341	      0xe82170ffff	                               call sym.	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x9346	          0x4889c2	                            mov rdx, rax	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x9349	    0x488b05000000	            mov rax, qword [0x04009390] 	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x9350	          0x4889d6	                            mov rsi, rdx	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x9353	          0x4889c7	                            mov rdi, rax	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x9356	      0xb800000000	                              mov eax, 0	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x935b	      0xe800000000	                          call 0x40093a0	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_20
0x9360	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2953	sequencer.c	FUNCTION_85	CALL_22
0x9367	          0x4889c7	                            mov rdi, rax	      2953	sequencer.c	FUNCTION_85	CALL_22
0x936a	      0xe800000000	                          call 0x40093af	      2953	sequencer.c	FUNCTION_85	CALL_22
0x936f	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2954	sequencer.c	FUNCTION_85
0x9375	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2955	sequencer.c	FUNCTION_85
0x9379	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2955	sequencer.c	FUNCTION_85
0x9382	            0x7405	                            je 0x40093c9	      2955	sequencer.c	FUNCTION_85
0x9384	      0xe800000000	                          call 0x40093c9	      2955	sequencer.c	FUNCTION_85
0x9389	    0x4881c4180100	                          add rsp, 0x118	      2955	sequencer.c	FUNCTION_85
0x9390	              0x5b	                                 pop rbx	      2955	sequencer.c	FUNCTION_85
0x9391	              0x5d	                                 pop rbp	      2955	sequencer.c	FUNCTION_85
0x9392	              0xc3	                                     ret	      2955	sequencer.c	FUNCTION_85
allow_empty	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,6:WHILE,0:CALL,2	42
0x3b48	              0x55	                                push rbp	      1264	sequencer.c	FUNCTION_40
0x3b49	          0x4889e5	                            mov rbp, rsp	      1264	sequencer.c	FUNCTION_40
0x3b4c	        0x4883ec20	                           sub rsp, 0x20	      1264	sequencer.c	FUNCTION_40
0x3b50	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1264	sequencer.c	FUNCTION_40
0x3b54	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1264	sequencer.c	FUNCTION_40
0x3b58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1277	sequencer.c	FUNCTION_40	IF_1
0x3b5c	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1277	sequencer.c	FUNCTION_40	IF_1
0x3b5f	            0x85c0	                           test eax, eax	      1277	sequencer.c	FUNCTION_40	IF_1
0x3b61	            0x7507	                           jne 0x4003baa	      1277	sequencer.c	FUNCTION_40	IF_1
0x3b63	      0xb800000000	                              mov eax, 0	      1278	sequencer.c	FUNCTION_40	IF_1
0x3b68	            0xeb5e	                           jmp 0x4003c08	      1278	sequencer.c	FUNCTION_40	IF_1
0x3b6a	      0xe816e1ffff	             call sym.is_index_unchanged	      1280	sequencer.c	FUNCTION_40	CALL_1
0x3b6f	          0x8945f8	                mov dword [rbp - 8], eax	      1280	sequencer.c	FUNCTION_40	CALL_1
0x3b72	        0x837df800	                  cmp dword [rbp - 8], 0	      1281	sequencer.c	FUNCTION_40	IF_2
0x3b76	            0x7905	                           jns 0x4003bbd	      1281	sequencer.c	FUNCTION_40	IF_2
0x3b78	          0x8b45f8	                mov eax, dword [rbp - 8]	      1282	sequencer.c	FUNCTION_40	IF_2
0x3b7b	            0xeb4b	                           jmp 0x4003c08	      1282	sequencer.c	FUNCTION_40	IF_2
0x3b7d	        0x837df800	                  cmp dword [rbp - 8], 0	      1283	sequencer.c	FUNCTION_40	IF_3
0x3b81	            0x7507	                           jne 0x4003bca	      1283	sequencer.c	FUNCTION_40	IF_3
0x3b83	      0xb800000000	                              mov eax, 0	      1284	sequencer.c	FUNCTION_40	IF_3
0x3b88	            0xeb3e	                           jmp 0x4003c08	      1284	sequencer.c	FUNCTION_40	IF_3
0x3b8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1286	sequencer.c	FUNCTION_40	IF_4
0x3b8e	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1286	sequencer.c	FUNCTION_40	IF_4
0x3b91	            0x85c0	                           test eax, eax	      1286	sequencer.c	FUNCTION_40	IF_4
0x3b93	            0x7407	                            je 0x4003bdc	      1286	sequencer.c	FUNCTION_40	IF_4
0x3b95	      0xb801000000	                              mov eax, 1	      1287	sequencer.c	FUNCTION_40	IF_4
0x3b9a	            0xeb2c	                           jmp 0x4003c08	      1287	sequencer.c	FUNCTION_40	IF_4
0x3b9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1289	sequencer.c	FUNCTION_40	CALL_2
0x3ba0	          0x4889c7	                            mov rdi, rax	      1289	sequencer.c	FUNCTION_40	CALL_2
0x3ba3	      0xe89afeffff	       call sym.is_original_commit_empty	      1289	sequencer.c	FUNCTION_40	CALL_2
0x3ba8	          0x8945fc	                mov dword [rbp - 4], eax	      1289	sequencer.c	FUNCTION_40	CALL_2
0x3bab	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1290	sequencer.c	FUNCTION_40	IF_5
0x3baf	            0x7905	                           jns 0x4003bf6	      1290	sequencer.c	FUNCTION_40	IF_5
0x3bb1	          0x8b45fc	                mov eax, dword [rbp - 4]	      1291	sequencer.c	FUNCTION_40	IF_5
0x3bb4	            0xeb12	                           jmp 0x4003c08	      1291	sequencer.c	FUNCTION_40	IF_5
0x3bb6	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1292	sequencer.c	FUNCTION_40	IF_6
0x3bba	            0x7507	                           jne 0x4003c03	      1292	sequencer.c	FUNCTION_40	IF_6
0x3bbc	      0xb800000000	                              mov eax, 0	      1293	sequencer.c	FUNCTION_40	IF_6
0x3bc1	            0xeb05	                           jmp 0x4003c08	      1293	sequencer.c	FUNCTION_40	IF_6
0x3bc3	      0xb801000000	                              mov eax, 1	      1295	sequencer.c	FUNCTION_40	ELSE_1
0x3bc8	              0xc9	                                   leave	      1296	sequencer.c	FUNCTION_40	ELSE_1
0x3bc9	              0xc3	                                     ret	      1296	sequencer.c	FUNCTION_40	ELSE_1
command_to_string	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,1	18
0x3bca	              0x55	                                push rbp	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x3bcb	          0x4889e5	                            mov rbp, rsp	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x3bce	        0x4883ec10	                           sub rsp, 0x10	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x3bd2	          0x897dfc	                mov dword [rbp - 4], edi	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x3bd5	        0x837dfc0b	                cmp dword [rbp - 4], 0xb	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x3bd9	            0x7712	                            ja 0x4003c2d	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x3bdb	          0x8b45fc	                mov eax, dword [rbp - 4]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x3bde	        0x48c1e004	                              shl rax, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x3be2	    0x480500000000	                              add rax, 0	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x3be8	          0x488b00	                    mov rax, qword [rax]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x3beb	            0xeb14	                           jmp 0x4003c41	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x3bed	          0x8b45fc	                mov eax, dword [rbp - 4]	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x3bf0	            0x89c6	                            mov esi, eax	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x3bf2	      0xbf00000000	                              mov edi, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x3bf7	      0xb800000000	                              mov eax, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x3bfc	      0xe800000000	                          call 0x4003c41	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x3c01	              0xc9	                                   leave	      1347	sequencer.c	ELSE_1	FUNCTION_41
0x3c02	              0xc3	                                     ret	      1347	sequencer.c	ELSE_1	FUNCTION_41
append_new_todo	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	76
0x53c2	              0x55	                                push rbp	      1797	sequencer.c	FUNCTION_52
0x53c3	          0x4889e5	                            mov rbp, rsp	      1797	sequencer.c	FUNCTION_52
0x53c6	        0x4883ec10	                           sub rsp, 0x10	      1797	sequencer.c	FUNCTION_52
0x53ca	        0x48897df8	                mov qword [rbp - 8], rdi	      1797	sequencer.c	FUNCTION_52
0x53ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53d2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53d5	          0x8d5001	                      lea edx, [rax + 1]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53dc	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53df	            0x39c2	                            cmp edx, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53e1	     0xf8e95000000	                           jle 0x40054bc	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53e7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53eb	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53ee	          0x8d5010	                   lea edx, [rax + 0x10]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53f1	            0x89d0	                            mov eax, edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53f3	             0x1c0	                            add eax, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53f5	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53f7	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53f9	          0xc1ea1f	                           shr edx, 0x1f	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53fc	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x53fe	            0xd1f8	                              sar eax, 1	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5400	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5402	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5406	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5409	          0x83c001	                              add eax, 1	      1798	sequencer.c	FUNCTION_52	CALL_1
0x540c	            0x39c2	                            cmp edx, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x540e	            0x7d13	                           jge 0x4005463	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5410	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5414	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5417	          0x8d5001	                      lea edx, [rax + 1]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x541a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x541e	          0x895024	             mov dword [rax + 0x24], edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5421	            0xeb22	                           jmp 0x4005485	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5423	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5427	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x542a	          0x8d5010	                   lea edx, [rax + 0x10]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x542d	            0x89d0	                            mov eax, edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x542f	             0x1c0	                            add eax, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5431	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5433	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5435	          0xc1ea1f	                           shr edx, 0x1f	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5438	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x543a	            0xd1f8	                              sar eax, 1	      1798	sequencer.c	FUNCTION_52	CALL_1
0x543c	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x543e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5442	          0x895024	             mov dword [rax + 0x24], edx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5445	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5449	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x544c	            0x4898	                                    cdqe	      1798	sequencer.c	FUNCTION_52	CALL_1
0x544e	          0x4889c6	                            mov rsi, rax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5451	      0xbf30000000	                           mov edi, 0x30	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5456	      0xe84aacffff	                        call sym.st_mult	      1798	sequencer.c	FUNCTION_52	CALL_1
0x545b	          0x4889c2	                            mov rdx, rax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x545e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5462	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5466	          0x4889d6	                            mov rsi, rdx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5469	          0x4889c7	                            mov rdi, rax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x546c	      0xe800000000	                          call 0x40054b1	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5471	          0x4889c2	                            mov rdx, rax	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5474	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52	CALL_1
0x5478	        0x48895018	             mov qword [rax + 0x18], rdx	      1798	sequencer.c	FUNCTION_52	CALL_1
0x547c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	sequencer.c	FUNCTION_52
0x5480	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1799	sequencer.c	FUNCTION_52
0x5484	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	sequencer.c	FUNCTION_52
0x5488	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1799	sequencer.c	FUNCTION_52
0x548b	          0x8d4801	                      lea ecx, [rax + 1]	      1799	sequencer.c	FUNCTION_52
0x548e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1799	sequencer.c	FUNCTION_52
0x5492	          0x894a20	             mov dword [rdx + 0x20], ecx	      1799	sequencer.c	FUNCTION_52
0x5495	          0x4863d0	                         movsxd rdx, eax	      1799	sequencer.c	FUNCTION_52
0x5498	          0x4889d0	                            mov rax, rdx	      1799	sequencer.c	FUNCTION_52
0x549b	          0x4801c0	                            add rax, rax	      1799	sequencer.c	FUNCTION_52
0x549e	          0x4801d0	                            add rax, rdx	      1799	sequencer.c	FUNCTION_52
0x54a1	        0x48c1e004	                              shl rax, 4	      1799	sequencer.c	FUNCTION_52
0x54a5	          0x4801f0	                            add rax, rsi	      1799	sequencer.c	FUNCTION_52
0x54a8	              0xc9	                                   leave	      1800	sequencer.c	FUNCTION_52
0x54a9	              0xc3	                                     ret	      1800	sequencer.c	FUNCTION_52
parse_insn_buffer	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,2:IF,5:WHILE,0:CALL,12	117
0x58f4	              0x55	                                push rbp	      1891	sequencer.c	FUNCTION_54
0x58f5	          0x4889e5	                            mov rbp, rsp	      1891	sequencer.c	FUNCTION_54
0x58f8	              0x53	                                push rbx	      1891	sequencer.c	FUNCTION_54
0x58f9	        0x4883ec48	                           sub rsp, 0x48	      1891	sequencer.c	FUNCTION_54
0x58fd	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1891	sequencer.c	FUNCTION_54
0x5901	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1891	sequencer.c	FUNCTION_54
0x5905	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1893	sequencer.c	FUNCTION_54
0x5909	        0x488945d0	             mov qword [rbp - 0x30], rax	      1893	sequencer.c	FUNCTION_54
0x590d	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1894	sequencer.c	FUNCTION_54	CALL_2
0x5914	      0xe845adffff	               call sym.rebase_path_done	      1894	sequencer.c	FUNCTION_54	CALL_2
0x5919	          0x4889c7	                            mov rdi, rax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x591c	      0xe800000000	                          call 0x4005961	      1894	sequencer.c	FUNCTION_54	CALL_2
0x5921	          0x8945cc	             mov dword [rbp - 0x34], eax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x5924	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x592b	      0xe94b010000	                           jmp 0x4005abb	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5930	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1897	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x5934	      0xbe0a000000	                            mov esi, 0xa	      1897	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x5939	          0x4889c7	                            mov rdi, rax	      1897	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x593c	      0xe800000000	                          call 0x4005981	      1897	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x5941	        0x488945d8	             mov qword [rbp - 0x28], rax	      1897	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x5945	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x5949	           0xfb600	                   movzx eax, byte [rax]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x594c	            0x84c0	                             test al, al	      1899	sequencer.c	FUNCTION_54	FOR_1
0x594e	            0x740a	                            je 0x400599a	      1899	sequencer.c	FUNCTION_54	FOR_1
0x5950	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x5954	        0x4883c001	                              add rax, 1	      1899	sequencer.c	FUNCTION_54	FOR_1
0x5958	            0xeb04	                           jmp 0x400599e	      1899	sequencer.c	FUNCTION_54	FOR_1
0x595a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x595e	        0x488945e0	             mov qword [rbp - 0x20], rax	      1899	sequencer.c	FUNCTION_54	FOR_1
0x5962	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x5966	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x596a	            0x7414	                            je 0x40059c0	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x596c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x5970	        0x4883e801	                              sub rax, 1	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x5974	           0xfb600	                   movzx eax, byte [rax]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x5977	            0x3c0d	                             cmp al, 0xd	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x5979	            0x7505	                           jne 0x40059c0	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x597b	      0x48836dd801	               sub qword [rbp - 0x28], 1	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x5980	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_4
0x5984	          0x4889c7	                            mov rdi, rax	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_4
0x5987	      0xe836faffff	                call sym.append_new_todo	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_4
0x598c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_4
0x5990	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x5994	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x5998	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1905	sequencer.c	FUNCTION_54	FOR_1
0x599c	          0x4829c2	                            sub rdx, rax	      1905	sequencer.c	FUNCTION_54	FOR_1
0x599f	          0x4889d0	                            mov rax, rdx	      1905	sequencer.c	FUNCTION_54	FOR_1
0x59a2	          0x4889c2	                            mov rdx, rax	      1905	sequencer.c	FUNCTION_54	FOR_1
0x59a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x59a9	        0x48895028	             mov qword [rax + 0x28], rdx	      1905	sequencer.c	FUNCTION_54	FOR_1
0x59ad	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59b1	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59b9	          0x4889ce	                            mov rsi, rcx	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59bc	          0x4889c7	                            mov rdi, rax	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59bf	      0xe8e6faffff	                call sym.parse_insn_line	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59c4	            0x85c0	                           test eax, eax	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59c6	            0x7447	                            je 0x4005a4f	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x59c8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59cc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59d0	          0x4829c2	                            sub rdx, rax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59d3	          0x4889d0	                            mov rax, rdx	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59d6	            0x89c3	                            mov ebx, eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59d8	      0xbf00000000	                              mov edi, 0	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59dd	      0xe885a9ffff	                               call sym.	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59e2	          0x4889c7	                            mov rdi, rax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59e5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59e9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59ec	          0x4889d1	                            mov rcx, rdx	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59ef	            0x89da	                            mov edx, ebx	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59f1	            0x89c6	                            mov esi, eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59f3	      0xb800000000	                              mov eax, 0	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59f8	      0xe800000000	                          call 0x4005a3d	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x59fd	      0xe8fea5ffff	                    call sym.const_error	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x5a02	          0x8945c8	             mov dword [rbp - 0x38], eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_7
0x5a05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x5a09	    0xc7000a000000	                    mov dword [rax], 0xa	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x5a0f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x5a13	            0x755a	                           jne 0x4005aaf	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x5a15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_8
0x5a19	            0x8b00	                    mov eax, dword [rax]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_8
0x5a1b	            0x89c7	                            mov edi, eax	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_8
0x5a1d	      0xe830e2ffff	                       call sym.is_fixup	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_8
0x5a22	            0x85c0	                           test eax, eax	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_8
0x5a24	            0x7431	                            je 0x4005a97	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_8
0x5a26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a2a	            0x8b00	                    mov eax, dword [rax]	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a2c	            0x89c7	                            mov edi, eax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a2e	      0xe897e1ffff	              call sym.command_to_string	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a33	          0x4889c3	                            mov rbx, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a36	      0xbf00000000	                              mov edi, 0	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a3b	      0xe827a9ffff	                               call sym.	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a40	          0x4889de	                            mov rsi, rbx	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a43	          0x4889c7	                            mov rdi, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a46	      0xb800000000	                              mov eax, 0	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a4b	      0xe800000000	                          call 0x4005a90	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a50	      0xe8aba5ffff	                    call sym.const_error	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a55	            0xeb36	                           jmp 0x4005acd	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_10
0x5a57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_12
0x5a5b	            0x8b00	                    mov eax, dword [rax]	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_12
0x5a5d	            0x89c7	                            mov edi, eax	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_12
0x5a5f	      0xe8dbe1ffff	                        call sym.is_noop	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_12
0x5a64	            0x85c0	                           test eax, eax	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_12
0x5a66	            0x7507	                           jne 0x4005aaf	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_12
0x5a68	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      1918	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5
0x5a6f	        0x8345c401	               add dword [rbp - 0x3c], 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5a73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5a77	        0x488945d0	             mov qword [rbp - 0x30], rax	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5a7b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5a7f	           0xfb600	                   movzx eax, byte [rax]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5a82	            0x84c0	                             test al, al	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5a84	     0xf85a6feffff	                           jne 0x4005970	      1896	sequencer.c	FUNCTION_54	FOR_1
0x5a8a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1921	sequencer.c	FUNCTION_54
0x5a8d	        0x4883c448	                           add rsp, 0x48	      1922	sequencer.c	FUNCTION_54
0x5a91	              0x5b	                                 pop rbx	      1922	sequencer.c	FUNCTION_54
0x5a92	              0x5d	                                 pop rbp	      1922	sequencer.c	FUNCTION_54
0x5a93	              0xc3	                                     ret	      1922	sequencer.c	FUNCTION_54
todo_list_release	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,2	22
0x5372	              0x55	                                push rbp	      1790	sequencer.c	FUNCTION_51
0x5373	          0x4889e5	                            mov rbp, rsp	      1790	sequencer.c	FUNCTION_51
0x5376	        0x4883ec10	                           sub rsp, 0x10	      1790	sequencer.c	FUNCTION_51
0x537a	        0x48897df8	                mov qword [rbp - 8], rdi	      1790	sequencer.c	FUNCTION_51
0x537e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x5382	          0x4889c7	                            mov rdi, rax	      1791	sequencer.c	FUNCTION_51	CALL_1
0x5385	      0xe800000000	                          call 0x40053ca	      1791	sequencer.c	FUNCTION_51	CALL_1
0x538a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	sequencer.c	FUNCTION_51	CALL_2
0x538e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1792	sequencer.c	FUNCTION_51	CALL_2
0x5392	          0x4889c7	                            mov rdi, rax	      1792	sequencer.c	FUNCTION_51	CALL_2
0x5395	      0xe800000000	                          call 0x40053da	      1792	sequencer.c	FUNCTION_51	CALL_2
0x539a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	sequencer.c	FUNCTION_51	CALL_2
0x539e	    0x48c740180000	               mov qword [rax + 0x18], 0	      1792	sequencer.c	FUNCTION_51	CALL_2
0x53a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	sequencer.c	FUNCTION_51
0x53aa	    0xc74024000000	               mov dword [rax + 0x24], 0	      1793	sequencer.c	FUNCTION_51
0x53b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	sequencer.c	FUNCTION_51
0x53b5	          0x8b5024	            mov edx, dword [rax + 0x24] 	      1793	sequencer.c	FUNCTION_51
0x53b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	sequencer.c	FUNCTION_51
0x53bc	          0x895020	             mov dword [rax + 0x20], edx	      1793	sequencer.c	FUNCTION_51
0x53bf	              0x90	                                     nop	      1794	sequencer.c	FUNCTION_51
0x53c0	              0xc9	                                   leave	      1794	sequencer.c	FUNCTION_51
0x53c1	              0xc3	                                     ret	      1794	sequencer.c	FUNCTION_51
is_fixup	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,0	12
0x3c52	              0x55	                                push rbp	      1362	sequencer.c	FUNCTION_44
0x3c53	          0x4889e5	                            mov rbp, rsp	      1362	sequencer.c	FUNCTION_44
0x3c56	          0x897dfc	                mov dword [rbp - 4], edi	      1362	sequencer.c	FUNCTION_44
0x3c59	        0x837dfc04	                  cmp dword [rbp - 4], 4	      1363	sequencer.c	FUNCTION_44
0x3c5d	            0x7406	                            je 0x4003ca5	      1363	sequencer.c	FUNCTION_44
0x3c5f	        0x837dfc05	                  cmp dword [rbp - 4], 5	      1363	sequencer.c	FUNCTION_44
0x3c63	            0x7507	                           jne 0x4003cac	      1363	sequencer.c	FUNCTION_44
0x3c65	      0xb801000000	                              mov eax, 1	      1363	sequencer.c	FUNCTION_44
0x3c6a	            0xeb05	                           jmp 0x4003cb1	      1363	sequencer.c	FUNCTION_44
0x3c6c	      0xb800000000	                              mov eax, 0	      1363	sequencer.c	FUNCTION_44
0x3c71	              0x5d	                                 pop rbp	      1364	sequencer.c	FUNCTION_44
0x3c72	              0xc3	                                     ret	      1364	sequencer.c	FUNCTION_44
sequencer_make_script	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,7:WHILE,1:CALL,24	198
0xc85c	              0x55	                                push rbp	      3908	sequencer.c	FUNCTION_97
0xc85d	          0x4889e5	                            mov rbp, rsp	      3908	sequencer.c	FUNCTION_97
0xc860	    0x4881ecd00900	                          sub rsp, 0x9d0	      3908	sequencer.c	FUNCTION_97
0xc867	    0x4889bd48f6ff	            mov qword [rbp - 0x9b8], rdi	      3908	sequencer.c	FUNCTION_97
0xc86e	    0x89b544f6ffff	            mov dword [rbp - 0x9bc], esi	      3908	sequencer.c	FUNCTION_97
0xc874	    0x48899538f6ff	            mov qword [rbp - 0x9c8], rdx	      3908	sequencer.c	FUNCTION_97
0xc87b	    0x898d40f6ffff	            mov dword [rbp - 0x9c0], ecx	      3908	sequencer.c	FUNCTION_97
0xc881	    0x64488b042528	                mov rax, qword fs:[0x28]	      3908	sequencer.c	FUNCTION_97
0xc88a	        0x488945f8	                mov qword [rbp - 8], rax	      3908	sequencer.c	FUNCTION_97
0xc88e	            0x31c0	                            xor eax, eax	      3908	sequencer.c	FUNCTION_97
0xc890	    0x48c78568f6ff	              mov qword [rbp - 0x998], 0	      3909	sequencer.c	FUNCTION_97
0xc89b	    0x488d95a0f6ff	                  lea rdx, [rbp - 0x960]	      3910	sequencer.c	FUNCTION_97
0xc8a2	      0xb800000000	                              mov eax, 0	      3910	sequencer.c	FUNCTION_97
0xc8a7	      0xb914000000	                           mov ecx, 0x14	      3910	sequencer.c	FUNCTION_97
0xc8ac	          0x4889d7	                            mov rdi, rdx	      3910	sequencer.c	FUNCTION_97
0xc8af	          0xf348ab	              rep stosq qword [rdi], rax	      3910	sequencer.c	FUNCTION_97
0xc8b2	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      3911	sequencer.c	FUNCTION_97
0xc8bd	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      3911	sequencer.c	FUNCTION_97
0xc8c8	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      3911	sequencer.c	FUNCTION_97
0xc8d3	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3914	sequencer.c	FUNCTION_97
0xc8d9	          0x83e001	                              and eax, 1	      3914	sequencer.c	FUNCTION_97
0xc8dc	    0x89855cf6ffff	            mov dword [rbp - 0x9a4], eax	      3914	sequencer.c	FUNCTION_97
0xc8e2	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3915	sequencer.c	FUNCTION_97
0xc8e8	          0x83e004	                              and eax, 4	      3915	sequencer.c	FUNCTION_97
0xc8eb	            0x85c0	                           test eax, eax	      3915	sequencer.c	FUNCTION_97
0xc8ed	            0x7407	                            je 0x400c936	      3915	sequencer.c	FUNCTION_97
0xc8ef	      0xb800000000	                              mov eax, 0	      3915	sequencer.c	FUNCTION_97
0xc8f4	            0xeb05	                           jmp 0x400c93b	      3915	sequencer.c	FUNCTION_97
0xc8f6	      0xb800000000	                              mov eax, 0	      3915	sequencer.c	FUNCTION_97
0xc8fb	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      3915	sequencer.c	FUNCTION_97
0xc902	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3916	sequencer.c	FUNCTION_97
0xc908	          0x83e008	                              and eax, 8	      3916	sequencer.c	FUNCTION_97
0xc90b	    0x898560f6ffff	            mov dword [rbp - 0x9a0], eax	      3916	sequencer.c	FUNCTION_97
0xc911	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      3918	sequencer.c	FUNCTION_97	CALL_1
0xc918	      0xbe00000000	                              mov esi, 0	      3918	sequencer.c	FUNCTION_97	CALL_1
0xc91d	          0x4889c7	                            mov rdi, rax	      3918	sequencer.c	FUNCTION_97	CALL_1
0xc920	      0xe800000000	                          call 0x400c965	      3918	sequencer.c	FUNCTION_97	CALL_1
0xc925	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      3919	sequencer.c	FUNCTION_97
0xc92c	          0x83c810	                            or eax, 0x10	      3919	sequencer.c	FUNCTION_97
0xc92f	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      3919	sequencer.c	FUNCTION_97
0xc935	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      3920	sequencer.c	FUNCTION_97	IF_1
0xc93c	            0x750a	                           jne 0x400c988	      3920	sequencer.c	FUNCTION_97	IF_1
0xc93e	    0xc78524fcffff	              mov dword [rbp - 0x3dc], 1	      3921	sequencer.c	FUNCTION_97	IF_1
0xc948	     0xfb685b8f7ff	           movzx eax, byte [rbp - 0x848]	      3922	sequencer.c	FUNCTION_97
0xc94f	          0x83c802	                               or eax, 2	      3922	sequencer.c	FUNCTION_97
0xc952	    0x8885b8f7ffff	              mov byte [rbp - 0x848], al	      3922	sequencer.c	FUNCTION_97
0xc958	     0xfb685b6f7ff	           movzx eax, byte [rbp - 0x84a]	      3923	sequencer.c	FUNCTION_97
0xc95f	          0x83c804	                               or eax, 4	      3923	sequencer.c	FUNCTION_97
0xc962	    0x8885b6f7ffff	              mov byte [rbp - 0x84a], al	      3923	sequencer.c	FUNCTION_97
0xc968	     0xfb685b7f7ff	           movzx eax, byte [rbp - 0x849]	      3924	sequencer.c	FUNCTION_97
0xc96f	          0x83c840	                            or eax, 0x40	      3924	sequencer.c	FUNCTION_97
0xc972	    0x8885b7f7ffff	              mov byte [rbp - 0x849], al	      3924	sequencer.c	FUNCTION_97
0xc978	     0xfb685b7f7ff	           movzx eax, byte [rbp - 0x849]	      3925	sequencer.c	FUNCTION_97
0xc97f	          0x83c802	                               or eax, 2	      3925	sequencer.c	FUNCTION_97
0xc982	    0x8885b7f7ffff	              mov byte [rbp - 0x849], al	      3925	sequencer.c	FUNCTION_97
0xc988	    0xc785acf7ffff	              mov dword [rbp - 0x854], 0	      3926	sequencer.c	FUNCTION_97
0xc992	     0xfb685b5f7ff	           movzx eax, byte [rbp - 0x84b]	      3927	sequencer.c	FUNCTION_97
0xc999	          0x83c801	                               or eax, 1	      3927	sequencer.c	FUNCTION_97
0xc99c	    0x8885b5f7ffff	              mov byte [rbp - 0x84b], al	      3927	sequencer.c	FUNCTION_97
0xc9a2	     0xfb685baf7ff	           movzx eax, byte [rbp - 0x846]	      3929	sequencer.c	FUNCTION_97
0xc9a9	          0x83c880	                      or eax, 0xffffff80	      3929	sequencer.c	FUNCTION_97
0xc9ac	    0x8885baf7ffff	              mov byte [rbp - 0x846], al	      3929	sequencer.c	FUNCTION_97
0xc9b2	    0x488d8568f6ff	                  lea rax, [rbp - 0x998]	      3930	sequencer.c	FUNCTION_97	CALL_2
0xc9b9	          0x4889c6	                            mov rsi, rax	      3930	sequencer.c	FUNCTION_97	CALL_2
0xc9bc	      0xbf00000000	                              mov edi, 0	      3930	sequencer.c	FUNCTION_97	CALL_2
0xc9c1	      0xe800000000	                          call 0x400ca06	      3930	sequencer.c	FUNCTION_97	CALL_2
0xc9c6	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3931	sequencer.c	FUNCTION_97	IF_2
0xc9cd	          0x4885c0	                           test rax, rax	      3931	sequencer.c	FUNCTION_97	IF_2
0xc9d0	            0x740e	                            je 0x400ca20	      3931	sequencer.c	FUNCTION_97	IF_2
0xc9d2	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3931	sequencer.c	FUNCTION_97	IF_2
0xc9d9	           0xfb600	                   movzx eax, byte [rax]	      3931	sequencer.c	FUNCTION_97	IF_2
0xc9dc	            0x84c0	                             test al, al	      3931	sequencer.c	FUNCTION_97	IF_2
0xc9de	            0x7520	                           jne 0x400ca40	      3931	sequencer.c	FUNCTION_97	IF_2
0xc9e0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0xc9e7	          0x4889c7	                            mov rdi, rax	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0xc9ea	      0xe800000000	                          call 0x400ca2f	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0xc9ef	      0xbf00000000	                              mov edi, 0	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0xc9f4	      0xe800000000	                          call 0x400ca39	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0xc9f9	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0xca00	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3935	sequencer.c	FUNCTION_97	CALL_5
0xca07	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	      3935	sequencer.c	FUNCTION_97	CALL_5
0xca0e	          0x4889d6	                            mov rsi, rdx	      3935	sequencer.c	FUNCTION_97	CALL_5
0xca11	          0x4889c7	                            mov rdi, rax	      3935	sequencer.c	FUNCTION_97	CALL_5
0xca14	      0xe800000000	                          call 0x400ca59	      3935	sequencer.c	FUNCTION_97	CALL_5
0xca19	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3936	sequencer.c	FUNCTION_97	CALL_6
0xca20	          0x4889c7	                            mov rdi, rax	      3936	sequencer.c	FUNCTION_97	CALL_6
0xca23	      0xe800000000	                          call 0x400ca68	      3936	sequencer.c	FUNCTION_97	CALL_6
0xca28	    0x8b85e4f7ffff	            mov eax, dword [rbp - 0x81c]	      3937	sequencer.c	FUNCTION_97
0xca2e	    0x8985a0f6ffff	            mov dword [rbp - 0x960], eax	      3937	sequencer.c	FUNCTION_97
0xca34	      0xe800000000	                          call 0x400ca79	      3938	sequencer.c	FUNCTION_97	CALL_7
0xca39	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	      3938	sequencer.c	FUNCTION_97	CALL_7
0xca40	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca47	    0x488bb538f6ff	            mov rsi, qword [rbp - 0x9c8]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca4e	    0x8b8544f6ffff	            mov eax, dword [rbp - 0x9bc]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca54	      0xb900000000	                              mov ecx, 0	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca59	            0x89c7	                            mov edi, eax	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca5b	      0xe800000000	                          call 0x400caa0	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca60	          0x83f801	                              cmp eax, 1	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca63	            0x7e21	                           jle 0x400cac6	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0xca65	      0xbf00000000	                              mov edi, 0	      3941	sequencer.c	FUNCTION_97	CALL_10
0xca6a	      0xe8f838ffff	                               call sym.	      3941	sequencer.c	FUNCTION_97	CALL_10
0xca6f	          0x4889c7	                            mov rdi, rax	      3941	sequencer.c	FUNCTION_97	CALL_10
0xca72	      0xb800000000	                              mov eax, 0	      3941	sequencer.c	FUNCTION_97	CALL_10
0xca77	      0xe800000000	                          call 0x400cabc	      3941	sequencer.c	FUNCTION_97	CALL_10
0xca7c	      0xe87f35ffff	                    call sym.const_error	      3941	sequencer.c	FUNCTION_97	CALL_10
0xca81	      0xe9aa010000	                           jmp 0x400cc70	      3941	sequencer.c	FUNCTION_97	CALL_10
0xca86	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_11
0xca8d	          0x4889c7	                            mov rdi, rax	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_11
0xca90	      0xe800000000	                          call 0x400cad5	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_11
0xca95	            0x85c0	                           test eax, eax	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_11
0xca97	            0x7921	                           jns 0x400cafa	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_11
0xca99	      0xbf00000000	                              mov edi, 0	      3944	sequencer.c	FUNCTION_97	CALL_13
0xca9e	      0xe8c438ffff	                               call sym.	      3944	sequencer.c	FUNCTION_97	CALL_13
0xcaa3	          0x4889c7	                            mov rdi, rax	      3944	sequencer.c	FUNCTION_97	CALL_13
0xcaa6	      0xb800000000	                              mov eax, 0	      3944	sequencer.c	FUNCTION_97	CALL_13
0xcaab	      0xe800000000	                          call 0x400caf0	      3944	sequencer.c	FUNCTION_97	CALL_13
0xcab0	      0xe84b35ffff	                    call sym.const_error	      3944	sequencer.c	FUNCTION_97	CALL_13
0xcab5	      0xe976010000	                           jmp 0x400cc70	      3944	sequencer.c	FUNCTION_97	CALL_13
0xcaba	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      3946	sequencer.c	FUNCTION_97	IF_5
0xcac1	     0xf8431010000	                            je 0x400cc38	      3946	sequencer.c	FUNCTION_97	IF_5
0xcac7	    0x8b8d40f6ffff	            mov ecx, dword [rbp - 0x9c0]	      3947	sequencer.c	FUNCTION_97	CALL_14
0xcacd	    0x488b9548f6ff	            mov rdx, qword [rbp - 0x9b8]	      3947	sequencer.c	FUNCTION_97	CALL_14
0xcad4	    0x488db540f7ff	                  lea rsi, [rbp - 0x8c0]	      3947	sequencer.c	FUNCTION_97	CALL_14
0xcadb	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      3947	sequencer.c	FUNCTION_97	CALL_14
0xcae2	          0x4889c7	                            mov rdi, rax	      3947	sequencer.c	FUNCTION_97	CALL_14
0xcae5	      0xe846eeffff	        call sym.make_script_with_merges	      3947	sequencer.c	FUNCTION_97	CALL_14
0xcaea	      0xe941010000	                           jmp 0x400cc70	      3947	sequencer.c	FUNCTION_97	CALL_14
0xcaef	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0xcaf6	          0x4889c7	                            mov rdi, rax	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0xcaf9	      0xe8446fffff	       call sym.is_original_commit_empty	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0xcafe	    0x898564f6ffff	            mov dword [rbp - 0x99c], eax	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0xcb04	    0x83bd64f6ffff	              cmp dword [rbp - 0x99c], 0	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb0b	            0x751f	                           jne 0x400cb6c	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb0d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb14	            0x8b00	                    mov eax, dword [rax]	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb16	          0xc1e804	                              shr eax, 4	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb19	      0x25ffffff07	                      and eax, 0x7ffffff	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb1e	      0x2500020000	                          and eax, 0x200	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb23	            0x85c0	                           test eax, eax	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb25	            0x7405	                            je 0x400cb6c	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb27	      0xe9cc000000	                           jmp 0x400cc38	      3953	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0xcb2c	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3954	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0xcb33	      0xbe00000000	                              mov esi, 0	      3954	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0xcb38	          0x4889c7	                            mov rdi, rax	      3954	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0xcb3b	      0xe8ed35ffff	                  call sym.strbuf_setlen	      3954	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0xcb40	    0x83bd5cf6ffff	              cmp dword [rbp - 0x9a4], 0	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0xcb47	            0x752c	                           jne 0x400cbb5	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0xcb49	    0x83bd64f6ffff	              cmp dword [rbp - 0x99c], 0	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0xcb50	            0x7423	                            je 0x400cbb5	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0xcb52	     0xfb605000000	           movzx eax, byte [0x0400cb99] 	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0xcb59	           0xfbed0	                           movsx edx, al	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0xcb5c	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0xcb63	      0xbe00000000	                              mov esi, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0xcb68	          0x4889c7	                            mov rdi, rax	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0xcb6b	      0xb800000000	                              mov eax, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0xcb70	      0xe800000000	                          call 0x400cbb5	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0xcb75	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3958	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0xcb7c	        0x4883c004	                              add rax, 4	      3958	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0xcb80	          0x4889c7	                            mov rdi, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcb83	      0xe800000000	                          call 0x400cbc8	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcb88	          0x4889c1	                            mov rcx, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcb8b	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcb92	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcb99	      0xbe00000000	                              mov esi, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcb9e	          0x4889c7	                            mov rdi, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcba1	      0xb800000000	                              mov eax, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcba6	      0xe800000000	                          call 0x400cbeb	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0xcbab	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_21
0xcbb2	    0x488b8d78f6ff	            mov rcx, qword [rbp - 0x988]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_21
0xcbb9	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_21
0xcbc0	          0x4889ce	                            mov rsi, rcx	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_21
0xcbc3	          0x4889c7	                            mov rdi, rax	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_21
0xcbc6	      0xe800000000	                          call 0x400cc0b	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_21
0xcbcb	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_22
0xcbd2	      0xbe0a000000	                            mov esi, 0xa	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_22
0xcbd7	          0x4889c7	                            mov rdi, rax	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_22
0xcbda	      0xe8e835ffff	                   call sym.strbuf_addch	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_22
0xcbdf	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_23
0xcbe6	    0x488b9548f6ff	            mov rdx, qword [rbp - 0x9b8]	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_23
0xcbed	          0x4889d6	                            mov rsi, rdx	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_23
0xcbf0	          0x4889c7	                            mov rdi, rax	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_23
0xcbf3	      0xe800000000	                          call 0x400cc38	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_23
0xcbf8	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0xcbff	          0x4889c7	                            mov rdi, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0xcc02	      0xe800000000	                          call 0x400cc47	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0xcc07	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0xcc0e	    0x4883bd78f6ff	              cmp qword [rbp - 0x988], 0	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0xcc16	     0xf85d3feffff	                           jne 0x400cb2f	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0xcc1c	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3963	sequencer.c	FUNCTION_97	CALL_24
0xcc23	          0x4889c7	                            mov rdi, rax	      3963	sequencer.c	FUNCTION_97	CALL_24
0xcc26	      0xe800000000	                          call 0x400cc6b	      3963	sequencer.c	FUNCTION_97	CALL_24
0xcc2b	      0xb800000000	                              mov eax, 0	      3964	sequencer.c	FUNCTION_97
0xcc30	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3965	sequencer.c	FUNCTION_97
0xcc34	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3965	sequencer.c	FUNCTION_97
0xcc3d	            0x7405	                            je 0x400cc84	      3965	sequencer.c	FUNCTION_97
0xcc3f	      0xe800000000	                          call 0x400cc84	      3965	sequencer.c	FUNCTION_97
0xcc44	              0xc9	                                   leave	      3965	sequencer.c	FUNCTION_97
0xcc45	              0xc3	                                     ret	      3965	sequencer.c	FUNCTION_97
st_add	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,2	20
0x61	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_141
0x62	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_141
0x65	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_141
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_141
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_141
0x71	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_141	IF_1	CALL_1
0x75	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_141	IF_1	CALL_1
0x78	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_141	IF_1	CALL_1
0x7c	            0x731a	                           jae 0x40000d8	       785	git-compat-util.h	FUNCTION_141	IF_1	CALL_1
0x7e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_141	IF_1	CALL_2
0x82	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_141	IF_1	CALL_2
0x86	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_141	IF_1	CALL_2
0x89	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_141	IF_1	CALL_2
0x8e	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_141	IF_1	CALL_2
0x93	      0xe800000000	                          call 0x40000d8	       786	git-compat-util.h	FUNCTION_141	IF_1	CALL_2
0x98	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_141
0x9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_141
0xa0	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_141
0xa3	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_141
0xa4	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_141
labels_cmp	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,2	25
0xb4ab	              0x55	                                push rbp	      3572	sequencer.c	FUNCTION_94
0xb4ac	          0x4889e5	                            mov rbp, rsp	      3572	sequencer.c	FUNCTION_94
0xb4af	        0x4883ec20	                           sub rsp, 0x20	      3572	sequencer.c	FUNCTION_94
0xb4b3	        0x48897df8	                mov qword [rbp - 8], rdi	      3572	sequencer.c	FUNCTION_94
0xb4b7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3572	sequencer.c	FUNCTION_94
0xb4bb	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3572	sequencer.c	FUNCTION_94
0xb4bf	        0x48894de0	             mov qword [rbp - 0x20], rcx	      3572	sequencer.c	FUNCTION_94
0xb4c3	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4c8	            0x7419	                            je 0x400b523	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4ce	        0x488d5010	                   lea rdx, [rax + 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4d6	          0x4889c6	                            mov rsi, rax	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4d9	          0x4889d7	                            mov rdi, rdx	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4dc	      0xe800000000	                          call 0x400b521	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4e1	            0xeb1b	                           jmp 0x400b53e	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4e7	        0x488d5010	                   lea rdx, [rax + 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4ef	        0x4883c010	                           add rax, 0x10	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4f3	          0x4889d6	                            mov rsi, rdx	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4f6	          0x4889c7	                            mov rdi, rax	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4f9	      0xe800000000	                          call 0x400b53e	      3573	sequencer.c	FUNCTION_94	CALL_2
0xb4fe	              0xc9	                                   leave	      3574	sequencer.c	FUNCTION_94
0xb4ff	              0xc3	                                     ret	      3574	sequencer.c	FUNCTION_94
sequencer_rollback	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,7:WHILE,0:CALL,29	144
0x6e57	              0x55	                                push rbp	      2277	sequencer.c	FUNCTION_71
0x6e58	          0x4889e5	                            mov rbp, rsp	      2277	sequencer.c	FUNCTION_71
0x6e5b	            0x4154	                                push r12	      2277	sequencer.c	FUNCTION_71
0x6e5d	              0x53	                                push rbx	      2277	sequencer.c	FUNCTION_71
0x6e5e	        0x4883ec60	                           sub rsp, 0x60	      2277	sequencer.c	FUNCTION_71
0x6e62	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2277	sequencer.c	FUNCTION_71
0x6e66	    0x64488b042528	                mov rax, qword fs:[0x28]	      2277	sequencer.c	FUNCTION_71
0x6e6f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2277	sequencer.c	FUNCTION_71
0x6e73	            0x31c0	                            xor eax, eax	      2277	sequencer.c	FUNCTION_71
0x6e75	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2280	sequencer.c	FUNCTION_71
0x6e7d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2280	sequencer.c	FUNCTION_71
0x6e85	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2280	sequencer.c	FUNCTION_71
0x6e8d	      0xe81097ffff	             call sym.git_path_head_file	      2283	sequencer.c	FUNCTION_71	CALL_2
0x6e92	      0xbe00000000	                              mov esi, 0	      2283	sequencer.c	FUNCTION_71	CALL_2
0x6e97	          0x4889c7	                            mov rdi, rax	      2283	sequencer.c	FUNCTION_71	CALL_2
0x6e9a	      0xe800000000	                          call 0x4006edf	      2283	sequencer.c	FUNCTION_71	CALL_2
0x6e9f	        0x488945a8	             mov qword [rbp - 0x58], rax	      2283	sequencer.c	FUNCTION_71	CALL_2
0x6ea3	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2284	sequencer.c	FUNCTION_71	IF_1
0x6ea8	            0x7516	                           jne 0x4006f00	      2284	sequencer.c	FUNCTION_71	IF_1
0x6eaa	      0xe800000000	                          call 0x4006eef	      2284	sequencer.c	FUNCTION_71	IF_1
0x6eaf	            0x8b00	                    mov eax, dword [rax]	      2284	sequencer.c	FUNCTION_71	IF_1
0x6eb1	          0x83f802	                              cmp eax, 2	      2284	sequencer.c	FUNCTION_71	IF_1
0x6eb4	            0x750a	                           jne 0x4006f00	      2284	sequencer.c	FUNCTION_71	IF_1
0x6eb6	      0xe8b8feffff	           call sym.rollback_single_pick	      2290	sequencer.c	FUNCTION_71	IF_1	CALL_3
0x6ebb	      0xe99c010000	                           jmp 0x400709c	      2290	sequencer.c	FUNCTION_71	IF_1	CALL_3
0x6ec0	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2292	sequencer.c	FUNCTION_71	IF_2
0x6ec5	            0x752c	                           jne 0x4006f33	      2292	sequencer.c	FUNCTION_71	IF_2
0x6ec7	      0xe8d696ffff	             call sym.git_path_head_file	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6ecc	          0x4889c3	                            mov rbx, rax	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6ecf	      0xbf00000000	                              mov edi, 0	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6ed4	      0xe88e94ffff	                               call sym.	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6ed9	          0x4889de	                            mov rsi, rbx	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6edc	          0x4889c7	                            mov rdi, rax	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6edf	      0xb800000000	                              mov eax, 0	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6ee4	      0xe800000000	                          call 0x4006f29	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6ee9	      0xe81291ffff	                    call sym.const_error	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6eee	      0xe969010000	                           jmp 0x400709c	      2293	sequencer.c	FUNCTION_71	CALL_6
0x6ef3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x6ef7	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x6efb	          0x4889d6	                            mov rsi, rdx	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x6efe	          0x4889c7	                            mov rdi, rax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x6f01	      0xe800000000	                          call 0x4006f46	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x6f06	            0x85c0	                           test eax, eax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x6f08	            0x746b	                            je 0x4006fb5	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x6f0a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f0e	          0x4889c7	                            mov rdi, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f11	      0xe800000000	                          call 0x4006f56	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f16	            0x85c0	                           test eax, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f18	            0x7413	                            je 0x4006f6d	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f1a	      0xe800000000	                          call 0x4006f5f	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f1f	            0x8b00	                    mov eax, dword [rax]	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f21	            0x89c7	                            mov edi, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f23	      0xe800000000	                          call 0x4006f68	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f28	          0x4889c3	                            mov rbx, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f2b	            0xeb0d	                           jmp 0x4006f7a	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f2d	      0xbf00000000	                              mov edi, 0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f32	      0xe83094ffff	                               call sym.	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f37	          0x4889c3	                            mov rbx, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f3a	      0xe86396ffff	             call sym.git_path_head_file	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f3f	          0x4989c4	                            mov r12, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f42	      0xbf00000000	                              mov edi, 0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f47	      0xe81b94ffff	                               call sym.	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f4c	          0x4889da	                            mov rdx, rbx	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f4f	          0x4c89e6	                            mov rsi, r12	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f52	          0x4889c7	                            mov rdi, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f55	      0xb800000000	                              mov eax, 0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f5a	      0xe800000000	                          call 0x4006f9f	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f5f	      0xe89c90ffff	                    call sym.const_error	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_10
0x6f64	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_14
0x6f68	          0x4889c7	                            mov rdi, rax	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_14
0x6f6b	      0xe800000000	                          call 0x4006fb0	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_14
0x6f70	      0xe9d6000000	                           jmp 0x400708b	      2298	sequencer.c	FUNCTION_71	IF_3
0x6f75	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2300	sequencer.c	FUNCTION_71	CALL_15
0x6f79	          0x4889c7	                            mov rdi, rax	      2300	sequencer.c	FUNCTION_71	CALL_15
0x6f7c	      0xe800000000	                          call 0x4006fc1	      2300	sequencer.c	FUNCTION_71	CALL_15
0x6f81	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f85	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f89	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f8d	          0x4889ce	                            mov rsi, rcx	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f90	          0x4889c7	                            mov rdi, rax	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f93	      0xe800000000	                          call 0x4006fd8	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f98	            0x85c0	                           test eax, eax	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f9a	            0x750b	                           jne 0x4006fe7	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6f9c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6fa0	           0xfb600	                   movzx eax, byte [rax]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6fa3	            0x84c0	                             test al, al	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6fa5	            0x7429	                            je 0x4007010	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_16
0x6fa7	      0xe8f695ffff	             call sym.git_path_head_file	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fac	          0x4889c3	                            mov rbx, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6faf	      0xbf00000000	                              mov edi, 0	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fb4	      0xe8ae93ffff	                               call sym.	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fb9	          0x4889de	                            mov rsi, rbx	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fbc	          0x4889c7	                            mov rdi, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fbf	      0xb800000000	                              mov eax, 0	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fc4	      0xe800000000	                          call 0x4007009	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fc9	      0xe83290ffff	                    call sym.const_error	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_18
0x6fce	            0xeb7b	                           jmp 0x400708b	      2304	sequencer.c	FUNCTION_71	IF_4
0x6fd0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_20
0x6fd4	          0x4889c7	                            mov rdi, rax	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_20
0x6fd7	      0xe80694ffff	                    call sym.is_null_oid	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_20
0x6fdc	            0x85c0	                           test eax, eax	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_20
0x6fde	            0x741e	                            je 0x400703e	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_20
0x6fe0	      0xbf00000000	                              mov edi, 0	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_22
0x6fe5	      0xe87d93ffff	                               call sym.	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_22
0x6fea	          0x4889c7	                            mov rdi, rax	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_22
0x6fed	      0xb800000000	                              mov eax, 0	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_22
0x6ff2	      0xe800000000	                          call 0x4007037	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_22
0x6ff7	      0xe80490ffff	                    call sym.const_error	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_22
0x6ffc	            0xeb4d	                           jmp 0x400708b	      2308	sequencer.c	FUNCTION_71	IF_5
0x6ffe	      0xe8c3fbffff	               call sym.rollback_is_safe	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_23
0x7003	            0x85c0	                           test eax, eax	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_23
0x7005	            0x7519	                           jne 0x4007060	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_23
0x7007	      0xbf00000000	                              mov edi, 0	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_25
0x700c	      0xe85693ffff	                               call sym.	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_25
0x7011	          0x4889c7	                            mov rdi, rax	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_25
0x7014	      0xb800000000	                              mov eax, 0	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_25
0x7019	      0xe800000000	                          call 0x400705e	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_25
0x701e	            0xeb10	                           jmp 0x4007070	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_25
0x7020	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_26
0x7024	          0x4889c7	                            mov rdi, rax	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_26
0x7027	      0xe8ddfcffff	             call sym.reset_for_rollback	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_26
0x702c	            0x85c0	                           test eax, eax	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_26
0x702e	            0x751a	                           jne 0x400708a	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_26
0x7030	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2318	sequencer.c	FUNCTION_71	CALL_27
0x7034	          0x4889c7	                            mov rdi, rax	      2318	sequencer.c	FUNCTION_71	CALL_27
0x7037	      0xe800000000	                          call 0x400707c	      2318	sequencer.c	FUNCTION_71	CALL_27
0x703c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2319	sequencer.c	FUNCTION_71	CALL_28
0x7040	          0x4889c7	                            mov rdi, rax	      2319	sequencer.c	FUNCTION_71	CALL_28
0x7043	      0xe800000000	                          call 0x4007088	      2319	sequencer.c	FUNCTION_71	CALL_28
0x7048	            0xeb12	                           jmp 0x400709c	      2319	sequencer.c	FUNCTION_71	CALL_28
0x704a	              0x90	                                     nop	      2317	sequencer.c	FUNCTION_71	ELSE_1	IF_7
0x704b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2321	sequencer.c	FUNCTION_71	CALL_29
0x704f	          0x4889c7	                            mov rdi, rax	      2321	sequencer.c	FUNCTION_71	CALL_29
0x7052	      0xe800000000	                          call 0x4007097	      2321	sequencer.c	FUNCTION_71	CALL_29
0x7057	      0xb8ffffffff	                     mov eax, 0xffffffff	      2322	sequencer.c	FUNCTION_71
0x705c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2323	sequencer.c	FUNCTION_71
0x7060	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2323	sequencer.c	FUNCTION_71
0x7069	            0x7405	                            je 0x40070b0	      2323	sequencer.c	FUNCTION_71
0x706b	      0xe800000000	                          call 0x40070b0	      2323	sequencer.c	FUNCTION_71
0x7070	        0x4883c460	                           add rsp, 0x60	      2323	sequencer.c	FUNCTION_71
0x7074	              0x5b	                                 pop rbx	      2323	sequencer.c	FUNCTION_71
0x7075	            0x415c	                                 pop r12	      2323	sequencer.c	FUNCTION_71
0x7077	              0x5d	                                 pop rbp	      2323	sequencer.c	FUNCTION_71
0x7078	              0xc3	                                     ret	      2323	sequencer.c	FUNCTION_71
save_head	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,15	85
0x6a6b	              0x55	                                push rbp	      2205	sequencer.c	FUNCTION_67
0x6a6c	          0x4889e5	                            mov rbp, rsp	      2205	sequencer.c	FUNCTION_67
0x6a6f	              0x53	                                push rbx	      2205	sequencer.c	FUNCTION_67
0x6a70	        0x4883ec58	                           sub rsp, 0x58	      2205	sequencer.c	FUNCTION_67
0x6a74	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2205	sequencer.c	FUNCTION_67
0x6a78	    0x64488b042528	                mov rax, qword fs:[0x28]	      2205	sequencer.c	FUNCTION_67
0x6a81	        0x488945e8	             mov qword [rbp - 0x18], rax	      2205	sequencer.c	FUNCTION_67
0x6a85	            0x31c0	                            xor eax, eax	      2205	sequencer.c	FUNCTION_67
0x6a87	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2206	sequencer.c	FUNCTION_67
0x6a8f	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2207	sequencer.c	FUNCTION_67
0x6a97	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2207	sequencer.c	FUNCTION_67
0x6a9f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2207	sequencer.c	FUNCTION_67
0x6aa7	      0xe8f69affff	             call sym.git_path_head_file	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6aac	          0x4889c1	                            mov rcx, rax	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6aaf	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6ab3	      0xba00000000	                              mov edx, 0	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6ab8	          0x4889ce	                            mov rsi, rcx	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6abb	          0x4889c7	                            mov rdi, rax	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6abe	      0xe8bc99ffff	      call sym.hold_lock_file_for_update	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6ac3	          0x8945bc	             mov dword [rbp - 0x44], eax	      2211	sequencer.c	FUNCTION_67	CALL_2
0x6ac6	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2212	sequencer.c	FUNCTION_67	IF_1
0x6aca	            0x7921	                           jns 0x4006b2d	      2212	sequencer.c	FUNCTION_67	IF_1
0x6acc	      0xbf00000000	                              mov edi, 0	      2213	sequencer.c	FUNCTION_67	CALL_4
0x6ad1	      0xe89198ffff	                               call sym.	      2213	sequencer.c	FUNCTION_67	CALL_4
0x6ad6	          0x4889c7	                            mov rdi, rax	      2213	sequencer.c	FUNCTION_67	CALL_4
0x6ad9	      0xb800000000	                              mov eax, 0	      2213	sequencer.c	FUNCTION_67	CALL_4
0x6ade	      0xe800000000	                          call 0x4006b23	      2213	sequencer.c	FUNCTION_67	CALL_4
0x6ae3	      0xe81895ffff	                    call sym.const_error	      2213	sequencer.c	FUNCTION_67	CALL_4
0x6ae8	      0xe9be000000	                           jmp 0x4006beb	      2213	sequencer.c	FUNCTION_67	CALL_4
0x6aed	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2214	sequencer.c	FUNCTION_67	CALL_5
0x6af1	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2214	sequencer.c	FUNCTION_67	CALL_5
0x6af5	      0xbe00000000	                              mov esi, 0	      2214	sequencer.c	FUNCTION_67	CALL_5
0x6afa	          0x4889c7	                            mov rdi, rax	      2214	sequencer.c	FUNCTION_67	CALL_5
0x6afd	      0xb800000000	                              mov eax, 0	      2214	sequencer.c	FUNCTION_67	CALL_5
0x6b02	      0xe800000000	                          call 0x4006b47	      2214	sequencer.c	FUNCTION_67	CALL_5
0x6b07	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2215	sequencer.c	FUNCTION_67	CALL_6
0x6b0b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2215	sequencer.c	FUNCTION_67	CALL_6
0x6b0f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2215	sequencer.c	FUNCTION_67	CALL_6
0x6b12	          0x4889ce	                            mov rsi, rcx	      2215	sequencer.c	FUNCTION_67	CALL_6
0x6b15	            0x89c7	                            mov edi, eax	      2215	sequencer.c	FUNCTION_67	CALL_6
0x6b17	      0xe800000000	                          call 0x4006b5c	      2215	sequencer.c	FUNCTION_67	CALL_6
0x6b1c	        0x488945c8	             mov qword [rbp - 0x38], rax	      2215	sequencer.c	FUNCTION_67	CALL_6
0x6b20	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2216	sequencer.c	FUNCTION_67	CALL_7
0x6b24	          0x4889c7	                            mov rdi, rax	      2216	sequencer.c	FUNCTION_67	CALL_7
0x6b27	      0xe800000000	                          call 0x4006b6c	      2216	sequencer.c	FUNCTION_67	CALL_7
0x6b2c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2217	sequencer.c	FUNCTION_67	IF_2
0x6b31	            0x793a	                           jns 0x4006bad	      2217	sequencer.c	FUNCTION_67	IF_2
0x6b33	      0xe86a9affff	             call sym.git_path_head_file	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b38	          0x4889c3	                            mov rbx, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b3b	      0xbf00000000	                              mov edi, 0	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b40	      0xe82298ffff	                               call sym.	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b45	          0x4889de	                            mov rsi, rbx	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b48	          0x4889c7	                            mov rdi, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b4b	      0xb800000000	                              mov eax, 0	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b50	      0xe800000000	                          call 0x4006b95	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b55	      0xe8a694ffff	                    call sym.const_error	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_10
0x6b5a	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2219	sequencer.c	FUNCTION_67	IF_2	CALL_11
0x6b5e	          0x4889c7	                            mov rdi, rax	      2219	sequencer.c	FUNCTION_67	IF_2	CALL_11
0x6b61	      0xe84699ffff	             call sym.rollback_lock_file	      2219	sequencer.c	FUNCTION_67	IF_2	CALL_11
0x6b66	      0xb8ffffffff	                     mov eax, 0xffffffff	      2220	sequencer.c	FUNCTION_67	IF_2
0x6b6b	            0xeb3e	                           jmp 0x4006beb	      2220	sequencer.c	FUNCTION_67	IF_2
0x6b6d	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_12
0x6b71	          0x4889c7	                            mov rdi, rax	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_12
0x6b74	      0xe800000000	                          call 0x4006bb9	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_12
0x6b79	            0x85c0	                           test eax, eax	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_12
0x6b7b	            0x7929	                           jns 0x4006be6	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_12
0x6b7d	      0xe8209affff	             call sym.git_path_head_file	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b82	          0x4889c3	                            mov rbx, rax	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b85	      0xbf00000000	                              mov edi, 0	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b8a	      0xe8d897ffff	                               call sym.	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b8f	          0x4889de	                            mov rsi, rbx	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b92	          0x4889c7	                            mov rdi, rax	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b95	      0xb800000000	                              mov eax, 0	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b9a	      0xe800000000	                          call 0x4006bdf	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6b9f	      0xe85c94ffff	                    call sym.const_error	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6ba4	            0xeb05	                           jmp 0x4006beb	      2223	sequencer.c	FUNCTION_67	CALL_15
0x6ba6	      0xb800000000	                              mov eax, 0	      2224	sequencer.c	FUNCTION_67
0x6bab	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2225	sequencer.c	FUNCTION_67
0x6baf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2225	sequencer.c	FUNCTION_67
0x6bb8	            0x7405	                            je 0x4006bff	      2225	sequencer.c	FUNCTION_67
0x6bba	      0xe800000000	                          call 0x4006bff	      2225	sequencer.c	FUNCTION_67
0x6bbf	        0x4883c458	                           add rsp, 0x58	      2225	sequencer.c	FUNCTION_67
0x6bc3	              0x5b	                                 pop rbx	      2225	sequencer.c	FUNCTION_67
0x6bc4	              0x5d	                                 pop rbp	      2225	sequencer.c	FUNCTION_67
0x6bc5	              0xc3	                                     ret	      2225	sequencer.c	FUNCTION_67
rollback_single_pick	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,13	59
0x6d73	              0x55	                                push rbp	      2263	sequencer.c	FUNCTION_70
0x6d74	          0x4889e5	                            mov rbp, rsp	      2263	sequencer.c	FUNCTION_70
0x6d77	        0x4883ec20	                           sub rsp, 0x20	      2263	sequencer.c	FUNCTION_70
0x6d7b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2263	sequencer.c	FUNCTION_70
0x6d84	        0x488945f8	                mov qword [rbp - 8], rax	      2263	sequencer.c	FUNCTION_70
0x6d88	            0x31c0	                            xor eax, eax	      2263	sequencer.c	FUNCTION_70
0x6d8a	      0xe800000000	                          call 0x4006dcf	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x6d8f	          0x4889c7	                            mov rdi, rax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x6d92	      0xe800000000	                          call 0x4006dd7	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x6d97	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x6d99	            0x752f	                           jne 0x4006e0a	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x6d9b	      0xe800000000	                          call 0x4006de0	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x6da0	          0x4889c7	                            mov rdi, rax	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x6da3	      0xe800000000	                          call 0x4006de8	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x6da8	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x6daa	            0x751e	                           jne 0x4006e0a	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x6dac	      0xbf00000000	                              mov edi, 0	      2268	sequencer.c	FUNCTION_70	CALL_6
0x6db1	      0xe8b195ffff	                               call sym.	      2268	sequencer.c	FUNCTION_70	CALL_6
0x6db6	          0x4889c7	                            mov rdi, rax	      2268	sequencer.c	FUNCTION_70	CALL_6
0x6db9	      0xb800000000	                              mov eax, 0	      2268	sequencer.c	FUNCTION_70	CALL_6
0x6dbe	      0xe800000000	                          call 0x4006e03	      2268	sequencer.c	FUNCTION_70	CALL_6
0x6dc3	      0xe83892ffff	                    call sym.const_error	      2268	sequencer.c	FUNCTION_70	CALL_6
0x6dc8	            0xeb77	                           jmp 0x4006e81	      2268	sequencer.c	FUNCTION_70	CALL_6
0x6dca	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6dce	      0xb900000000	                              mov ecx, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6dd3	          0x4889c2	                            mov rdx, rax	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6dd6	      0xbe00000000	                              mov esi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6ddb	      0xbf00000000	                              mov edi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6de0	      0xe800000000	                          call 0x4006e25	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6de5	            0x85c0	                           test eax, eax	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6de7	            0x741e	                            je 0x4006e47	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_7
0x6de9	      0xbf00000000	                              mov edi, 0	      2270	sequencer.c	FUNCTION_70	CALL_9
0x6dee	      0xe87495ffff	                               call sym.	      2270	sequencer.c	FUNCTION_70	CALL_9
0x6df3	          0x4889c7	                            mov rdi, rax	      2270	sequencer.c	FUNCTION_70	CALL_9
0x6df6	      0xb800000000	                              mov eax, 0	      2270	sequencer.c	FUNCTION_70	CALL_9
0x6dfb	      0xe800000000	                          call 0x4006e40	      2270	sequencer.c	FUNCTION_70	CALL_9
0x6e00	      0xe8fb91ffff	                    call sym.const_error	      2270	sequencer.c	FUNCTION_70	CALL_9
0x6e05	            0xeb3a	                           jmp 0x4006e81	      2270	sequencer.c	FUNCTION_70	CALL_9
0x6e07	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_10
0x6e0b	          0x4889c7	                            mov rdi, rax	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_10
0x6e0e	      0xe8cf95ffff	                    call sym.is_null_oid	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_10
0x6e13	            0x85c0	                           test eax, eax	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_10
0x6e15	            0x741e	                            je 0x4006e75	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_10
0x6e17	      0xbf00000000	                              mov edi, 0	      2272	sequencer.c	FUNCTION_70	CALL_12
0x6e1c	      0xe84695ffff	                               call sym.	      2272	sequencer.c	FUNCTION_70	CALL_12
0x6e21	          0x4889c7	                            mov rdi, rax	      2272	sequencer.c	FUNCTION_70	CALL_12
0x6e24	      0xb800000000	                              mov eax, 0	      2272	sequencer.c	FUNCTION_70	CALL_12
0x6e29	      0xe800000000	                          call 0x4006e6e	      2272	sequencer.c	FUNCTION_70	CALL_12
0x6e2e	      0xe8cd91ffff	                    call sym.const_error	      2272	sequencer.c	FUNCTION_70	CALL_12
0x6e33	            0xeb0c	                           jmp 0x4006e81	      2272	sequencer.c	FUNCTION_70	CALL_12
0x6e35	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2273	sequencer.c	FUNCTION_70	CALL_13
0x6e39	          0x4889c7	                            mov rdi, rax	      2273	sequencer.c	FUNCTION_70	CALL_13
0x6e3c	      0xe8c8feffff	             call sym.reset_for_rollback	      2273	sequencer.c	FUNCTION_70	CALL_13
0x6e41	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2274	sequencer.c	FUNCTION_70
0x6e45	    0x644833142528	                xor rdx, qword fs:[0x28]	      2274	sequencer.c	FUNCTION_70
0x6e4e	            0x7405	                            je 0x4006e95	      2274	sequencer.c	FUNCTION_70
0x6e50	      0xe800000000	                          call 0x4006e95	      2274	sequencer.c	FUNCTION_70
0x6e55	              0xc9	                                   leave	      2274	sequencer.c	FUNCTION_70
0x6e56	              0xc3	                                     ret	      2274	sequencer.c	FUNCTION_70
get_todo_path	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,3	14
0xccb	              0x55	                                push rbp	       205	sequencer.c	FUNCTION_5
0xccc	          0x4889e5	                            mov rbp, rsp	       205	sequencer.c	FUNCTION_5
0xccf	        0x4883ec10	                           sub rsp, 0x10	       205	sequencer.c	FUNCTION_5
0xcd3	        0x48897df8	                mov qword [rbp - 8], rdi	       205	sequencer.c	FUNCTION_5
0xcd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0xcdb	          0x4889c7	                            mov rdi, rax	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0xcde	      0xe8a5ffffff	                    call sym.is_rebase_i	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0xce3	            0x85c0	                           test eax, eax	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0xce5	            0x7407	                            je 0x4000d2e	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0xce7	      0xe843f9ffff	               call sym.rebase_path_todo	       207	sequencer.c	FUNCTION_5	CALL_2
0xcec	            0xeb05	                           jmp 0x4000d33	       207	sequencer.c	FUNCTION_5	CALL_2
0xcee	      0xe851f8ffff	             call sym.git_path_todo_file	       208	sequencer.c	FUNCTION_5	CALL_3
0xcf3	              0xc9	                                   leave	       209	sequencer.c	FUNCTION_5
0xcf4	              0xc3	                                     ret	       209	sequencer.c	FUNCTION_5
do_merge	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,4:IF,19:WHILE,0:CALL,70	507
0x85f5	              0x55	                                push rbp	      2699	sequencer.c	FUNCTION_82
0x85f6	          0x4889e5	                            mov rbp, rsp	      2699	sequencer.c	FUNCTION_82
0x85f9	              0x53	                                push rbx	      2699	sequencer.c	FUNCTION_82
0x85fa	    0x4881ec680500	                          sub rsp, 0x568	      2699	sequencer.c	FUNCTION_82
0x8601	    0x4889bda8faff	            mov qword [rbp - 0x558], rdi	      2699	sequencer.c	FUNCTION_82
0x8608	    0x4889b5a0faff	            mov qword [rbp - 0x560], rsi	      2699	sequencer.c	FUNCTION_82
0x860f	    0x89959cfaffff	            mov dword [rbp - 0x564], edx	      2699	sequencer.c	FUNCTION_82
0x8615	    0x898d98faffff	            mov dword [rbp - 0x568], ecx	      2699	sequencer.c	FUNCTION_82
0x861b	    0x4c898590faff	             mov qword [rbp - 0x570], r8	      2699	sequencer.c	FUNCTION_82
0x8622	    0x64488b042528	                mov rax, qword fs:[0x28]	      2699	sequencer.c	FUNCTION_82
0x862b	        0x488945e8	             mov qword [rbp - 0x18], rax	      2699	sequencer.c	FUNCTION_82
0x862f	            0x31c0	                            xor eax, eax	      2699	sequencer.c	FUNCTION_82
0x8631	    0x8b8598faffff	            mov eax, dword [rbp - 0x568]	      2700	sequencer.c	FUNCTION_82
0x8637	          0x83e001	                              and eax, 1	      2700	sequencer.c	FUNCTION_82
0x863a	            0x85c0	                           test eax, eax	      2701	sequencer.c	FUNCTION_82
0x863c	            0x7407	                            je 0x4008685	      2701	sequencer.c	FUNCTION_82
0x863e	      0xb812000000	                           mov eax, 0x12	      2701	sequencer.c	FUNCTION_82
0x8643	            0xeb05	                           jmp 0x400868a	      2701	sequencer.c	FUNCTION_82
0x8645	      0xb800000000	                              mov eax, 0	      2701	sequencer.c	FUNCTION_82
0x864a	    0x8985c4faffff	            mov dword [rbp - 0x53c], eax	      2700	sequencer.c	FUNCTION_82
0x8650	    0x48c78510fbff	              mov qword [rbp - 0x4f0], 0	      2702	sequencer.c	FUNCTION_82
0x865b	    0x48c78518fbff	              mov qword [rbp - 0x4e8], 0	      2702	sequencer.c	FUNCTION_82
0x8666	    0x48c78520fbff	              mov qword [rbp - 0x4e0], 0	      2702	sequencer.c	FUNCTION_82
0x8671	    0x48c785d0faff	              mov qword [rbp - 0x530], 0	      2704	sequencer.c	FUNCTION_82
0x867c	      0xbe04000000	                              mov esi, 4	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x8681	      0xbf00000000	                              mov edi, 0	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x8686	      0xe800000000	                          call 0x40086cb	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x868b	            0x85c0	                           test eax, eax	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x868d	            0x790f	                           jns 0x40086de	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x868f	    0xc785bcfaffff	    mov dword [rbp - 0x544], 0xffffffff 	      2711	sequencer.c	FUNCTION_82	IF_1
0x8699	      0xe9b1080000	                           jmp 0x4008f8f	      2712	sequencer.c	FUNCTION_82	IF_1
0x869e	      0xbf00000000	                              mov edi, 0	      2715	sequencer.c	FUNCTION_82	CALL_2
0x86a3	      0xe800000000	                          call 0x40086e8	      2715	sequencer.c	FUNCTION_82	CALL_2
0x86a8	    0x488985f0faff	            mov qword [rbp - 0x510], rax	      2715	sequencer.c	FUNCTION_82	CALL_2
0x86af	    0x4883bdf0faff	              cmp qword [rbp - 0x510], 0	      2716	sequencer.c	FUNCTION_82	IF_2
0x86b7	            0x7527	                           jne 0x4008720	      2716	sequencer.c	FUNCTION_82	IF_2
0x86b9	      0xbf00000000	                              mov edi, 0	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_4
0x86be	      0xe8a47cffff	                               call sym.	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_4
0x86c3	          0x4889c7	                            mov rdi, rax	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_4
0x86c6	      0xb800000000	                              mov eax, 0	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_4
0x86cb	      0xe800000000	                          call 0x4008710	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_4
0x86d0	      0xe82b79ffff	                    call sym.const_error	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_4
0x86d5	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_4
0x86db	      0xe96f080000	                           jmp 0x4008f8f	      2718	sequencer.c	FUNCTION_82	IF_2
0x86e0	    0x8b859cfaffff	            mov eax, dword [rbp - 0x564]	      2721	sequencer.c	FUNCTION_82
0x86e6	    0x8985b4faffff	            mov dword [rbp - 0x54c], eax	      2721	sequencer.c	FUNCTION_82
0x86ec	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2722	sequencer.c	FUNCTION_82	CALL_5
0x86f3	      0xbe00000000	                              mov esi, 0	      2722	sequencer.c	FUNCTION_82	CALL_5
0x86f8	          0x4889c7	                            mov rdi, rax	      2722	sequencer.c	FUNCTION_82	CALL_5
0x86fb	      0xe800000000	                          call 0x4008740	      2722	sequencer.c	FUNCTION_82	CALL_5
0x8700	    0x8985c8faffff	            mov dword [rbp - 0x538], eax	      2722	sequencer.c	FUNCTION_82	CALL_5
0x8706	    0x8b85c8faffff	            mov eax, dword [rbp - 0x538]	      2723	sequencer.c	FUNCTION_82
0x870c	          0x4863d0	                         movsxd rdx, eax	      2723	sequencer.c	FUNCTION_82
0x870f	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2723	sequencer.c	FUNCTION_82
0x8716	          0x4801d0	                            add rax, rdx	      2723	sequencer.c	FUNCTION_82
0x8719	    0x488985e8faff	            mov qword [rbp - 0x518], rax	      2723	sequencer.c	FUNCTION_82
0x8720	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2724	sequencer.c	FUNCTION_82	CALL_6
0x8727	      0xbe00000000	                              mov esi, 0	      2724	sequencer.c	FUNCTION_82	CALL_6
0x872c	          0x4889c7	                            mov rdi, rax	      2724	sequencer.c	FUNCTION_82	CALL_6
0x872f	      0xe800000000	                          call 0x4008774	      2724	sequencer.c	FUNCTION_82	CALL_6
0x8734	    0x480185e8faff	           add qword [rbp - 0x518], rax 	      2724	sequencer.c	FUNCTION_82	CALL_6
0x873b	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8742	           0xfb600	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8745	            0x3c23	                            cmp al, 0x23	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8747	            0x7575	                           jne 0x40087fe	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8749	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8750	        0x4883c001	                              add rax, 1	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8754	           0xfb600	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8757	            0x84c0	                             test al, al	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8759	            0x7424	                            je 0x40087bf	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x875b	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8762	        0x4883c001	                              add rax, 1	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8766	           0xfb600	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8769	           0xfb6c0	                           movzx eax, al	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x876c	            0x4898	                                    cdqe	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x876e	     0xfb680000000	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8775	           0xfb6c0	                           movzx eax, al	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x8778	          0x83e001	                              and eax, 1	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x877b	            0x85c0	                           test eax, eax	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x877d	            0x743f	                            je 0x40087fe	      2725	sequencer.c	FUNCTION_82	IF_3	CALL_7
0x877f	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_8
0x8786	        0x4883c001	                              add rax, 1	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_8
0x878a	      0xbe00000000	                              mov esi, 0	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_8
0x878f	          0x4889c7	                            mov rdi, rax	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_8
0x8792	      0xe800000000	                          call 0x40087d7	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_8
0x8797	        0x4883c001	                              add rax, 1	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_8
0x879b	    0x480185e8faff	           add qword [rbp - 0x518], rax 	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_8
0x87a2	    0x488b95e8faff	            mov rdx, qword [rbp - 0x518]	      2727	sequencer.c	FUNCTION_82	IF_3
0x87a9	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2727	sequencer.c	FUNCTION_82	IF_3
0x87b0	          0x4829c2	                            sub rdx, rax	      2727	sequencer.c	FUNCTION_82	IF_3
0x87b3	          0x4889d0	                            mov rax, rdx	      2727	sequencer.c	FUNCTION_82	IF_3
0x87b6	    0x8985b4faffff	            mov dword [rbp - 0x54c], eax	      2727	sequencer.c	FUNCTION_82	IF_3
0x87bc	            0xeb41	                           jmp 0x400883f	      2727	sequencer.c	FUNCTION_82	IF_3
0x87be	    0x488b95e8faff	            mov rdx, qword [rbp - 0x518]	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87c5	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87cc	          0x4829c2	                            sub rdx, rax	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87cf	    0x8b859cfaffff	            mov eax, dword [rbp - 0x564]	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87d5	            0x4898	                                    cdqe	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87d7	          0x4839c2	                            cmp rdx, rax	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87da	            0x7d23	                           jge 0x400883f	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87dc	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87e3	          0x4889c1	                            mov rcx, rax	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87e6	      0xba00000000	                              mov edx, 0	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87eb	      0xbea90a0000	                          mov esi, 0xaa9	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87f0	      0xbf00000000	                              mov edi, 0	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87f5	      0xb800000000	                              mov eax, 0	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87fa	      0xe800000000	                          call 0x400883f	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x87ff	    0x488b8da0faff	            mov rcx, qword [rbp - 0x560]	      2731	sequencer.c	FUNCTION_82	CALL_10
0x8806	    0x8b95c8faffff	            mov edx, dword [rbp - 0x538]	      2731	sequencer.c	FUNCTION_82	CALL_10
0x880c	    0x488d8510fbff	                  lea rax, [rbp - 0x4f0]	      2731	sequencer.c	FUNCTION_82	CALL_10
0x8813	      0xbe00000000	                              mov esi, 0	      2731	sequencer.c	FUNCTION_82	CALL_10
0x8818	          0x4889c7	                            mov rdi, rax	      2731	sequencer.c	FUNCTION_82	CALL_10
0x881b	      0xb800000000	                              mov eax, 0	      2731	sequencer.c	FUNCTION_82	CALL_10
0x8820	      0xe800000000	                          call 0x4008865	      2731	sequencer.c	FUNCTION_82	CALL_10
0x8825	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	      2732	sequencer.c	FUNCTION_82	CALL_11
0x882c	          0x4889c7	                            mov rdi, rax	      2732	sequencer.c	FUNCTION_82	CALL_11
0x882f	      0xe800000000	                          call 0x4008874	      2732	sequencer.c	FUNCTION_82	CALL_11
0x8834	    0x488985d8faff	            mov qword [rbp - 0x528], rax	      2732	sequencer.c	FUNCTION_82	CALL_11
0x883b	    0x4883bdd8faff	              cmp qword [rbp - 0x528], 0	      2733	sequencer.c	FUNCTION_82	IF_5
0x8843	            0x753a	                           jne 0x40088bf	      2733	sequencer.c	FUNCTION_82	IF_5
0x8845	    0x488d8510fbff	                  lea rax, [rbp - 0x4f0]	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_13
0x884c	    0x41b800000000	                              mov r8d, 0	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_13
0x8852	      0xb900000000	                              mov ecx, 0	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_13
0x8857	      0xba0f000000	                            mov edx, 0xf	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_13
0x885c	      0xbe00000000	                              mov esi, 0	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_13
0x8861	          0x4889c7	                            mov rdi, rax	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_13
0x8864	      0xe800000000	                          call 0x40088a9	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_13
0x8869	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_14
0x8870	          0x4889c7	                            mov rdi, rax	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_14
0x8873	      0xe800000000	                          call 0x40088b8	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_14
0x8878	    0x488985d8faff	            mov qword [rbp - 0x528], rax	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_14
0x887f	    0x4883bdd8faff	              cmp qword [rbp - 0x528], 0	      2739	sequencer.c	FUNCTION_82	IF_6
0x8887	            0x7531	                           jne 0x40088fa	      2739	sequencer.c	FUNCTION_82	IF_6
0x8889	    0x488b9d20fbff	            mov rbx, qword [rbp - 0x4e0]	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x8890	      0xbf00000000	                              mov edi, 0	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x8895	      0xe8cd7affff	                               call sym.	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x889a	          0x4889de	                            mov rsi, rbx	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x889d	          0x4889c7	                            mov rdi, rax	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x88a0	      0xb800000000	                              mov eax, 0	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x88a5	      0xe800000000	                          call 0x40088ea	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x88aa	      0xe85177ffff	                    call sym.const_error	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x88af	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_16
0x88b5	      0xe995060000	                           jmp 0x4008f8f	      2741	sequencer.c	FUNCTION_82	IF_6
0x88ba	    0x4883bda8faff	              cmp qword [rbp - 0x558], 0	      2744	sequencer.c	FUNCTION_82	IF_7
0x88c2	     0xf8420010000	                            je 0x4008a28	      2744	sequencer.c	FUNCTION_82	IF_7
0x88c8	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x88cf	      0xbe00000000	                              mov esi, 0	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x88d4	          0x4889c7	                            mov rdi, rax	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x88d7	      0xe800000000	                          call 0x400891c	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x88dc	    0x488985f8faff	            mov qword [rbp - 0x508], rax	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x88e3	    0x4883bdf8faff	              cmp qword [rbp - 0x508], 0	      2749	sequencer.c	FUNCTION_82	IF_7	IF_8
0x88eb	            0x7540	                           jne 0x400896d	      2749	sequencer.c	FUNCTION_82	IF_7	IF_8
0x88ed	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x88f4	        0x4883c004	                              add rax, 4	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x88f8	          0x4889c7	                            mov rdi, rax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x88fb	      0xe800000000	                          call 0x4008940	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8900	          0x4889c3	                            mov rbx, rax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8903	      0xbf00000000	                              mov edi, 0	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8908	      0xe85a7affff	                               call sym.	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x890d	          0x4889de	                            mov rsi, rbx	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8910	          0x4889c7	                            mov rdi, rax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8913	      0xb800000000	                              mov eax, 0	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8918	      0xe800000000	                          call 0x400895d	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x891d	      0xe8de76ffff	                    call sym.const_error	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8922	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_19
0x8928	      0xe922060000	                           jmp 0x4008f8f	      2752	sequencer.c	FUNCTION_82	IF_7	IF_8
0x892d	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	      2754	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x8934	          0x4889c7	                            mov rdi, rax	      2754	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x8937	      0xe86a94ffff	            call sym.write_author_script	      2754	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x893c	    0x488d9530fbff	                  lea rdx, [rbp - 0x4d0]	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_22
0x8943	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_22
0x894a	          0x4889d6	                            mov rsi, rdx	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_22
0x894d	          0x4889c7	                            mov rdi, rax	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_22
0x8950	      0xe800000000	                          call 0x4008995	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_22
0x8955	    0x488b8530fbff	            mov rax, qword [rbp - 0x4d0]	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_23
0x895c	          0x4889c7	                            mov rdi, rax	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_23
0x895f	      0xe800000000	                          call 0x40089a4	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_23
0x8964	    0x8985ccfaffff	            mov dword [rbp - 0x534], eax	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_23
0x896a	      0xe800000000	                          call 0x40089af	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x896f	          0x4889c2	                            mov rdx, rax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x8972	    0x8b85ccfaffff	            mov eax, dword [rbp - 0x534]	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x8978	          0x4863f0	                         movsxd rsi, eax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x897b	    0x488b8530fbff	            mov rax, qword [rbp - 0x4d0]	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x8982	      0xb900000000	                              mov ecx, 0	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x8987	          0x4889c7	                            mov rdi, rax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x898a	      0xe81689ffff	                  call sym.write_message	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x898f	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_25
0x8995	    0x488b95f8faff	            mov rdx, qword [rbp - 0x508]	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_26
0x899c	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_26
0x89a3	          0x4889d6	                            mov rsi, rdx	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_26
0x89a6	          0x4889c7	                            mov rdi, rax	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_26
0x89a9	      0xe800000000	                          call 0x40089ee	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_26
0x89ae	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2759	sequencer.c	FUNCTION_82	IF_7	IF_9
0x89b5	     0xf8483010000	                            je 0x4008b7e	      2759	sequencer.c	FUNCTION_82	IF_7	IF_9
0x89bb	      0xe800000000	                          call 0x4008a00	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89c0	          0x4889c3	                            mov rbx, rax	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89c3	      0xbf00000000	                              mov edi, 0	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89c8	      0xe89a79ffff	                               call sym.	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89cd	          0x4889de	                            mov rsi, rbx	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89d0	          0x4889c7	                            mov rdi, rax	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89d3	      0xb800000000	                              mov eax, 0	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89d8	      0xe800000000	                          call 0x4008a1d	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89dd	      0xe81e76ffff	                    call sym.const_error	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_28
0x89e2	              0x90	                                     nop	      2762	sequencer.c	FUNCTION_82	IF_7	IF_9
0x89e3	      0xe967050000	                           jmp 0x4008f8f	      2762	sequencer.c	FUNCTION_82	IF_7	IF_9
0x89e8	    0x48c78530fbff	              mov qword [rbp - 0x4d0], 0	      2765	sequencer.c	FUNCTION_82	ELSE_2
0x89f3	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	      2765	sequencer.c	FUNCTION_82	ELSE_2
0x89fe	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	      2765	sequencer.c	FUNCTION_82	ELSE_2
0x8a09	      0xbf00000000	                              mov edi, 0	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a0e	      0xe800000000	                          call 0x4008a53	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a13	          0x4889c2	                            mov rdx, rax	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a16	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a1d	      0xbe00000000	                              mov esi, 0	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a22	          0x4889c7	                            mov rdi, rax	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a25	      0xb800000000	                              mov eax, 0	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a2a	      0xe800000000	                          call 0x4008a6f	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_31
0x8a2f	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	      2769	sequencer.c	FUNCTION_82	ELSE_2	CALL_32
0x8a36	          0x4889c7	                            mov rdi, rax	      2769	sequencer.c	FUNCTION_82	ELSE_2	CALL_32
0x8a39	      0xe86893ffff	            call sym.write_author_script	      2769	sequencer.c	FUNCTION_82	ELSE_2	CALL_32
0x8a3e	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2770	sequencer.c	FUNCTION_82	ELSE_2	CALL_33
0x8a45	      0xbe00000000	                              mov esi, 0	      2770	sequencer.c	FUNCTION_82	ELSE_2	CALL_33
0x8a4a	          0x4889c7	                            mov rdi, rax	      2770	sequencer.c	FUNCTION_82	ELSE_2	CALL_33
0x8a4d	      0xe8db76ffff	                  call sym.strbuf_setlen	      2770	sequencer.c	FUNCTION_82	ELSE_2	CALL_33
0x8a52	    0x8b85b4faffff	            mov eax, dword [rbp - 0x54c]	      2772	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a58	    0x3b859cfaffff	            cmp eax, dword [rbp - 0x564]	      2772	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a5e	            0x7d2e	                           jge 0x4008ace	      2772	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a60	    0x8b85b4faffff	            mov eax, dword [rbp - 0x54c]	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a66	          0x4863d0	                         movsxd rdx, eax	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a69	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a70	          0x4801d0	                            add rax, rdx	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a73	    0x488985e8faff	            mov qword [rbp - 0x518], rax	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a7a	    0x8b859cfaffff	            mov eax, dword [rbp - 0x564]	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a80	    0x2b85b4faffff	            sub eax, dword [rbp - 0x54c]	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a86	    0x8985c0faffff	            mov dword [rbp - 0x540], eax	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a8c	            0xeb41	                           jmp 0x4008b0f	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x8a8e	    0x488b8da0faff	            mov rcx, qword [rbp - 0x560]	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_34
0x8a95	    0x8b95c8faffff	            mov edx, dword [rbp - 0x538]	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_34
0x8a9b	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_34
0x8aa2	      0xbe00000000	                              mov esi, 0	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_34
0x8aa7	          0x4889c7	                            mov rdi, rax	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_34
0x8aaa	      0xb800000000	                              mov eax, 0	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_34
0x8aaf	      0xe800000000	                          call 0x4008af4	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_34
0x8ab4	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	      2778	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x8abb	    0x488985e8faff	            mov qword [rbp - 0x518], rax	      2778	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x8ac2	    0x488b8538fbff	            mov rax, qword [rbp - 0x4c8]	      2779	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x8ac9	    0x8985c0faffff	            mov dword [rbp - 0x540], eax	      2779	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x8acf	      0xe800000000	                          call 0x4008b14	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8ad4	          0x4889c2	                            mov rdx, rax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8ad7	    0x8b85c0faffff	            mov eax, dword [rbp - 0x540]	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8add	          0x4863f0	                         movsxd rsi, eax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8ae0	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8ae7	      0xb900000000	                              mov ecx, 0	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8aec	          0x4889c7	                            mov rdi, rax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8aef	      0xe8b187ffff	                  call sym.write_message	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8af4	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_36
0x8afa	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2783	sequencer.c	FUNCTION_82	ELSE_2	CALL_37
0x8b01	          0x4889c7	                            mov rdi, rax	      2783	sequencer.c	FUNCTION_82	ELSE_2	CALL_37
0x8b04	      0xe800000000	                          call 0x4008b49	      2783	sequencer.c	FUNCTION_82	ELSE_2	CALL_37
0x8b09	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2784	sequencer.c	FUNCTION_82	ELSE_2	IF_11
0x8b10	            0x742c	                            je 0x4008b7e	      2784	sequencer.c	FUNCTION_82	ELSE_2	IF_11
0x8b12	      0xe800000000	                          call 0x4008b57	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b17	          0x4889c3	                            mov rbx, rax	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b1a	      0xbf00000000	                              mov edi, 0	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b1f	      0xe84378ffff	                               call sym.	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b24	          0x4889de	                            mov rsi, rbx	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b27	          0x4889c7	                            mov rdi, rax	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b2a	      0xb800000000	                              mov eax, 0	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b2f	      0xe800000000	                          call 0x4008b74	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b34	      0xe8c774ffff	                    call sym.const_error	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b39	      0xe911040000	                           jmp 0x4008f8f	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_39
0x8b3e	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2795	sequencer.c	FUNCTION_82
0x8b45	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2795	sequencer.c	FUNCTION_82
0x8b48	            0x85c0	                           test eax, eax	      2795	sequencer.c	FUNCTION_82
0x8b4a	            0x744d	                            je 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x8b4c	    0x4883bda8faff	              cmp qword [rbp - 0x558], 0	      2795	sequencer.c	FUNCTION_82
0x8b54	            0x7443	                            je 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x8b56	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2795	sequencer.c	FUNCTION_82
0x8b5d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2795	sequencer.c	FUNCTION_82
0x8b61	          0x4885c0	                           test rax, rax	      2795	sequencer.c	FUNCTION_82
0x8b64	            0x7433	                            je 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x8b66	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	      2797	sequencer.c	FUNCTION_82
0x8b6d	        0x488d5004	                      lea rdx, [rax + 4]	      2797	sequencer.c	FUNCTION_82
0x8b71	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2796	sequencer.c	FUNCTION_82	CALL_41
0x8b78	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2796	sequencer.c	FUNCTION_82	CALL_41
0x8b7c	          0x488b00	                    mov rax, qword [rax]	      2796	sequencer.c	FUNCTION_82	CALL_41
0x8b7f	        0x4883c004	                              add rax, 4	      2796	sequencer.c	FUNCTION_82	CALL_41
0x8b83	          0x4889d6	                            mov rsi, rdx	      2796	sequencer.c	FUNCTION_82	CALL_41
0x8b86	          0x4889c7	                            mov rdi, rax	      2796	sequencer.c	FUNCTION_82	CALL_41
0x8b89	      0xe82f78ffff	                         call sym.oidcmp	      2796	sequencer.c	FUNCTION_82	CALL_41
0x8b8e	            0x85c0	                           test eax, eax	      2795	sequencer.c	FUNCTION_82
0x8b90	            0x7507	                           jne 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x8b92	      0xb801000000	                              mov eax, 1	      2795	sequencer.c	FUNCTION_82
0x8b97	            0xeb05	                           jmp 0x4008bde	      2795	sequencer.c	FUNCTION_82
0x8b99	      0xb800000000	                              mov eax, 0	      2795	sequencer.c	FUNCTION_82
0x8b9e	    0x8985b8faffff	            mov dword [rbp - 0x548], eax	      2795	sequencer.c	FUNCTION_82
0x8ba4	    0x83bdb8faffff	              cmp dword [rbp - 0x548], 0	      2803	sequencer.c	FUNCTION_82	IF_12
0x8bab	            0x7462	                            je 0x4008c4f	      2803	sequencer.c	FUNCTION_82	IF_12
0x8bad	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2804	sequencer.c	FUNCTION_82	IF_12
0x8bb4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2804	sequencer.c	FUNCTION_82	IF_12
0x8bb8	        0x488b4008	                mov rax, qword [rax + 8]	      2804	sequencer.c	FUNCTION_82	IF_12
0x8bbc	    0x48898500fbff	            mov qword [rbp - 0x500], rax	      2804	sequencer.c	FUNCTION_82	IF_12
0x8bc3	    0x4883bd00fbff	              cmp qword [rbp - 0x500], 0	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8bcb	            0x7442	                            je 0x4008c4f	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8bcd	    0x488b8500fbff	            mov rax, qword [rbp - 0x500]	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8bd4	        0x488b4008	                mov rax, qword [rax + 8]	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8bd8	          0x4885c0	                           test rax, rax	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8bdb	            0x7532	                           jne 0x4008c4f	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8bdd	    0x488b8500fbff	            mov rax, qword [rbp - 0x500]	      2808	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8be4	          0x488b00	                    mov rax, qword [rax]	      2808	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8be7	        0x488d5004	                      lea rdx, [rax + 4]	      2808	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8beb	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_42
0x8bf2	        0x4883c004	                              add rax, 4	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_42
0x8bf6	          0x4889d6	                            mov rsi, rdx	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_42
0x8bf9	          0x4889c7	                            mov rdi, rax	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_42
0x8bfc	      0xe8bc77ffff	                         call sym.oidcmp	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_42
0x8c01	            0x85c0	                           test eax, eax	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8c03	            0x740a	                            je 0x4008c4f	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8c05	    0xc785b8faffff	              mov dword [rbp - 0x548], 0	      2809	sequencer.c	FUNCTION_82	IF_12	IF_13
0x8c0f	    0x83bdb8faffff	              cmp dword [rbp - 0x548], 0	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c16	     0xf849f000000	                            je 0x4008cfb	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c1c	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c23	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c27	        0x488b4008	                mov rax, qword [rax + 8]	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c2b	          0x4885c0	                           test rax, rax	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c2e	     0xf8487000000	                            je 0x4008cfb	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c34	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2813	sequencer.c	FUNCTION_82	IF_14
0x8c3b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2813	sequencer.c	FUNCTION_82	IF_14
0x8c3f	        0x488b4008	                mov rax, qword [rax + 8]	      2813	sequencer.c	FUNCTION_82	IF_14
0x8c43	        0x488b4008	                mov rax, qword [rax + 8]	      2813	sequencer.c	FUNCTION_82	IF_14
0x8c47	          0x4885c0	                           test rax, rax	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c4a	            0x756f	                           jne 0x4008cfb	      2812	sequencer.c	FUNCTION_82	IF_14
0x8c4c	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2815	sequencer.c	FUNCTION_82	IF_14
0x8c53	        0x488d5004	                      lea rdx, [rax + 4]	      2815	sequencer.c	FUNCTION_82	IF_14
0x8c57	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c5e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c62	        0x488b4008	                mov rax, qword [rax + 8]	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c66	          0x488b00	                    mov rax, qword [rax]	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c69	        0x4883c004	                              add rax, 4	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c6d	          0x4889d6	                            mov rsi, rdx	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c70	          0x4889c7	                            mov rdi, rax	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c73	      0xe84577ffff	                         call sym.oidcmp	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_43
0x8c78	            0x85c0	                           test eax, eax	      2813	sequencer.c	FUNCTION_82	IF_14
0x8c7a	            0x753f	                           jne 0x4008cfb	      2813	sequencer.c	FUNCTION_82	IF_14
0x8c7c	      0xbf00000000	                              mov edi, 0	      2816	sequencer.c	FUNCTION_82	IF_14	CALL_44
0x8c81	      0xe82678ffff	             call sym.rollback_lock_file	      2816	sequencer.c	FUNCTION_82	IF_14	CALL_44
0x8c86	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	      2818	sequencer.c	FUNCTION_82	IF_14
0x8c8d	        0x488d7004	                      lea rsi, [rax + 4]	      2818	sequencer.c	FUNCTION_82	IF_14
0x8c91	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_45
0x8c98	        0x488d7804	                      lea rdi, [rax + 4]	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_45
0x8c9c	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_45
0x8ca3	          0x4889c1	                            mov rcx, rax	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_45
0x8ca6	      0xba00000000	                              mov edx, 0	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_45
0x8cab	      0xe8148affff	                call sym.fast_forward_to	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_45
0x8cb0	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_45
0x8cb6	      0xe994020000	                           jmp 0x4008f8f	      2819	sequencer.c	FUNCTION_82	IF_14
0x8cbb	      0xe800000000	                          call 0x4008d00	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cc0	          0x4889c3	                            mov rbx, rax	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cc3	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cca	        0x4883c004	                              add rax, 4	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cce	          0x4889c7	                            mov rdi, rax	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cd1	      0xe800000000	                          call 0x4008d16	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cd6	      0xb900000000	                              mov ecx, 0	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cdb	          0x4889da	                            mov rdx, rbx	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8cde	      0xbe28000000	                           mov esi, 0x28	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8ce3	          0x4889c7	                            mov rdi, rax	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8ce6	      0xe8ba85ffff	                  call sym.write_message	      2822	sequencer.c	FUNCTION_82	CALL_47
0x8ceb	      0xe800000000	                          call 0x4008d30	      2824	sequencer.c	FUNCTION_82	CALL_50
0x8cf0	      0xb900000000	                              mov ecx, 0	      2824	sequencer.c	FUNCTION_82	CALL_50
0x8cf5	          0x4889c2	                            mov rdx, rax	      2824	sequencer.c	FUNCTION_82	CALL_50
0x8cf8	      0xbe05000000	                              mov esi, 5	      2824	sequencer.c	FUNCTION_82	CALL_50
0x8cfd	      0xbf00000000	                              mov edi, 0	      2824	sequencer.c	FUNCTION_82	CALL_50
0x8d02	      0xe89e85ffff	                  call sym.write_message	      2824	sequencer.c	FUNCTION_82	CALL_50
0x8d07	    0x488b95d8faff	            mov rdx, qword [rbp - 0x528]	      2826	sequencer.c	FUNCTION_82	CALL_51
0x8d0e	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	      2826	sequencer.c	FUNCTION_82	CALL_51
0x8d15	          0x4889d6	                            mov rsi, rdx	      2826	sequencer.c	FUNCTION_82	CALL_51
0x8d18	          0x4889c7	                            mov rdi, rax	      2826	sequencer.c	FUNCTION_82	CALL_51
0x8d1b	      0xe800000000	                          call 0x4008d60	      2826	sequencer.c	FUNCTION_82	CALL_51
0x8d20	    0x48898508fbff	            mov qword [rbp - 0x4f8], rax	      2826	sequencer.c	FUNCTION_82	CALL_51
0x8d27	    0x4883bd08fbff	              cmp qword [rbp - 0x4f8], 0	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d2f	            0x7437	                            je 0x4008da8	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d31	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	      2828	sequencer.c	FUNCTION_82	IF_15
0x8d38	          0x488b00	                    mov rax, qword [rax]	      2828	sequencer.c	FUNCTION_82	IF_15
0x8d3b	        0x488d5004	                      lea rdx, [rax + 4]	      2828	sequencer.c	FUNCTION_82	IF_15
0x8d3f	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d46	        0x4883c004	                              add rax, 4	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d4a	          0x4889d6	                            mov rsi, rdx	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d4d	          0x4889c7	                            mov rdi, rax	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d50	      0xe86876ffff	                         call sym.oidcmp	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d55	            0x85c0	                           test eax, eax	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d57	            0x750f	                           jne 0x4008da8	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_52
0x8d59	    0xc785bcfaffff	              mov dword [rbp - 0x544], 0	      2829	sequencer.c	FUNCTION_82	IF_15
0x8d63	      0xe9e7010000	                           jmp 0x4008f8f	      2831	sequencer.c	FUNCTION_82	IF_15
0x8d68	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8d6f	    0x488985e0faff	            mov qword [rbp - 0x520], rax	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8d76	            0xeb2e	                           jmp 0x4008de6	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8d78	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	      2835	sequencer.c	FUNCTION_82	CALL_53
0x8d7f	          0x488b00	                    mov rax, qword [rax]	      2835	sequencer.c	FUNCTION_82	CALL_53
0x8d82	    0x488d95d0faff	                  lea rdx, [rbp - 0x530]	      2835	sequencer.c	FUNCTION_82	CALL_53
0x8d89	          0x4889d6	                            mov rsi, rdx	      2835	sequencer.c	FUNCTION_82	CALL_53
0x8d8c	          0x4889c7	                            mov rdi, rax	      2835	sequencer.c	FUNCTION_82	CALL_53
0x8d8f	      0xe800000000	                          call 0x4008dd4	      2835	sequencer.c	FUNCTION_82	CALL_53
0x8d94	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8d9b	        0x488b4008	                mov rax, qword [rax + 8]	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8d9f	    0x488985e0faff	            mov qword [rbp - 0x520], rax	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8da6	    0x4883bde0faff	              cmp qword [rbp - 0x520], 0	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8dae	            0x75c8	                           jne 0x4008db8	      2834	sequencer.c	FUNCTION_82	FOR_1
0x8db0	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	      2836	sequencer.c	FUNCTION_82	CALL_54
0x8db7	          0x4889c7	                            mov rdi, rax	      2836	sequencer.c	FUNCTION_82	CALL_54
0x8dba	      0xe800000000	                          call 0x4008dff	      2836	sequencer.c	FUNCTION_82	CALL_54
0x8dbf	      0xbf00000000	                              mov edi, 0	      2838	sequencer.c	FUNCTION_82	CALL_55
0x8dc4	      0xe800000000	                          call 0x4008e09	      2838	sequencer.c	FUNCTION_82	CALL_55
0x8dc9	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	      2839	sequencer.c	FUNCTION_82	CALL_56
0x8dd0	          0x4889c7	                            mov rdi, rax	      2839	sequencer.c	FUNCTION_82	CALL_56
0x8dd3	      0xe800000000	                          call 0x4008e18	      2839	sequencer.c	FUNCTION_82	CALL_56
0x8dd8	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 0	      2840	sequencer.c	FUNCTION_82
0x8de3	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	      2841	sequencer.c	FUNCTION_82
0x8dea	    0x48898560fbff	            mov qword [rbp - 0x4a0], rax	      2841	sequencer.c	FUNCTION_82
0x8df1	    0xc78578fbffff	              mov dword [rbp - 0x488], 2	      2842	sequencer.c	FUNCTION_82
0x8dfb	    0x488b8dd0faff	            mov rcx, qword [rbp - 0x530]	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e02	    0x488dbd30fbff	                  lea rdi, [rbp - 0x4d0]	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e09	    0x488b95d8faff	            mov rdx, qword [rbp - 0x528]	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e10	    0x488bb5f0faff	            mov rsi, qword [rbp - 0x510]	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e17	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e1e	          0x4989f8	                             mov r8, rdi	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e21	          0x4889c7	                            mov rdi, rax	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e24	      0xe800000000	                          call 0x4008e69	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e29	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2844	sequencer.c	FUNCTION_82	CALL_57
0x8e2f	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2845	sequencer.c	FUNCTION_82	IF_16
0x8e36	            0x7f19	                            jg 0x4008e91	      2845	sequencer.c	FUNCTION_82	IF_16
0x8e38	    0x488b15000000	            mov rdx, qword [0x04008e7f] 	      2846	sequencer.c	FUNCTION_82	CALL_58
0x8e3f	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      2846	sequencer.c	FUNCTION_82	CALL_58
0x8e46	          0x4889d6	                            mov rsi, rdx	      2846	sequencer.c	FUNCTION_82	CALL_58
0x8e49	          0x4889c7	                            mov rdi, rax	      2846	sequencer.c	FUNCTION_82	CALL_58
0x8e4c	      0xe800000000	                          call 0x4008e91	      2846	sequencer.c	FUNCTION_82	CALL_58
0x8e51	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	      2847	sequencer.c	FUNCTION_82	CALL_59
0x8e58	        0x4883c058	                           add rax, 0x58	      2847	sequencer.c	FUNCTION_82	CALL_59
0x8e5c	          0x4889c7	                            mov rdi, rax	      2847	sequencer.c	FUNCTION_82	CALL_59
0x8e5f	      0xe800000000	                          call 0x4008ea4	      2847	sequencer.c	FUNCTION_82	CALL_59
0x8e64	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2848	sequencer.c	FUNCTION_82	IF_17
0x8e6b	            0x7933	                           jns 0x4008ee0	      2848	sequencer.c	FUNCTION_82	IF_17
0x8e6d	      0xbf00000000	                              mov edi, 0	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e72	      0xe8f074ffff	                               call sym.	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e77	          0x4889c1	                            mov rcx, rax	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e7a	    0x488b95a0faff	            mov rdx, qword [rbp - 0x560]	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e81	    0x8b85c8faffff	            mov eax, dword [rbp - 0x538]	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e87	            0x89c6	                            mov esi, eax	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e89	          0x4889cf	                            mov rdi, rcx	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e8c	      0xb800000000	                              mov eax, 0	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e91	      0xe800000000	                          call 0x4008ed6	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e96	      0xe86571ffff	                    call sym.const_error	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_61
0x8e9b	      0xe9af000000	                           jmp 0x4008f8f	      2851	sequencer.c	FUNCTION_82	IF_17
0x8ea0	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2861	sequencer.c	FUNCTION_82
0x8ea7	           0xf94c0	                                 sete al	      2861	sequencer.c	FUNCTION_82
0x8eaa	           0xfb6c0	                           movzx eax, al	      2861	sequencer.c	FUNCTION_82
0x8ead	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2861	sequencer.c	FUNCTION_82
0x8eb3	    0x8b0500000000	            mov eax, dword [0x04008ef9] 	      2863	sequencer.c	FUNCTION_82	IF_18
0x8eb9	            0x85c0	                           test eax, eax	      2863	sequencer.c	FUNCTION_82	IF_18
0x8ebb	            0x743c	                            je 0x4008f39	      2863	sequencer.c	FUNCTION_82	IF_18
0x8ebd	      0xba01000000	                              mov edx, 1	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_62
0x8ec2	      0xbe00000000	                              mov esi, 0	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_62
0x8ec7	      0xbf00000000	                              mov edi, 0	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_62
0x8ecc	      0xe800000000	                          call 0x4008f11	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_62
0x8ed1	            0x85c0	                           test eax, eax	      2863	sequencer.c	FUNCTION_82	IF_18
0x8ed3	            0x7424	                            je 0x4008f39	      2863	sequencer.c	FUNCTION_82	IF_18
0x8ed5	      0xbf00000000	                              mov edi, 0	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_64
0x8eda	      0xe88874ffff	                               call sym.	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_64
0x8edf	          0x4889c7	                            mov rdi, rax	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_64
0x8ee2	      0xb800000000	                              mov eax, 0	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_64
0x8ee7	      0xe800000000	                          call 0x4008f2c	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_64
0x8eec	      0xe80f71ffff	                    call sym.const_error	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_64
0x8ef1	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_64
0x8ef7	            0xeb56	                           jmp 0x4008f8f	      2866	sequencer.c	FUNCTION_82	IF_18
0x8ef9	      0xbf00000000	                              mov edi, 0	      2869	sequencer.c	FUNCTION_82	CALL_65
0x8efe	      0xe8a975ffff	             call sym.rollback_lock_file	      2869	sequencer.c	FUNCTION_82	CALL_65
0x8f03	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2870	sequencer.c	FUNCTION_82	IF_19
0x8f0a	            0x7413	                            je 0x4008f5f	      2870	sequencer.c	FUNCTION_82	IF_19
0x8f0c	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2871	sequencer.c	FUNCTION_82	CALL_66
0x8f13	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2871	sequencer.c	FUNCTION_82	CALL_66
0x8f16	            0x89c7	                            mov edi, eax	      2871	sequencer.c	FUNCTION_82	CALL_66
0x8f18	      0xe800000000	                          call 0x4008f5d	      2871	sequencer.c	FUNCTION_82	CALL_66
0x8f1d	            0xeb30	                           jmp 0x4008f8f	      2871	sequencer.c	FUNCTION_82	CALL_66
0x8f1f	    0x8b9dc4faffff	            mov ebx, dword [rbp - 0x53c]	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f25	      0xe800000000	                          call 0x4008f6a	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f2a	          0x4889c1	                            mov rcx, rax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f2d	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f34	            0x89da	                            mov edx, ebx	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f36	          0x4889c6	                            mov rsi, rax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f39	          0x4889cf	                            mov rdi, rcx	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f3c	      0xe83893ffff	                 call sym.run_git_commit	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f41	            0x85c0	                           test eax, eax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f43	           0xf95c0	                                setne al	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f46	           0xfb6c0	                           movzx eax, al	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f49	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_68
0x8f4f	    0x488d8510fbff	                  lea rax, [rbp - 0x4f0]	      2882	sequencer.c	FUNCTION_82	CALL_69
0x8f56	          0x4889c7	                            mov rdi, rax	      2882	sequencer.c	FUNCTION_82	CALL_69
0x8f59	      0xe800000000	                          call 0x4008f9e	      2882	sequencer.c	FUNCTION_82	CALL_69
0x8f5e	      0xbf00000000	                              mov edi, 0	      2883	sequencer.c	FUNCTION_82	CALL_70
0x8f63	      0xe84475ffff	             call sym.rollback_lock_file	      2883	sequencer.c	FUNCTION_82	CALL_70
0x8f68	    0x8b85bcfaffff	            mov eax, dword [rbp - 0x544]	      2884	sequencer.c	FUNCTION_82
0x8f6e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2885	sequencer.c	FUNCTION_82
0x8f72	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2885	sequencer.c	FUNCTION_82
0x8f7b	            0x7405	                            je 0x4008fc2	      2885	sequencer.c	FUNCTION_82
0x8f7d	      0xe800000000	                          call 0x4008fc2	      2885	sequencer.c	FUNCTION_82
0x8f82	    0x4881c4680500	                          add rsp, 0x568	      2885	sequencer.c	FUNCTION_82
0x8f89	              0x5b	                                 pop rbx	      2885	sequencer.c	FUNCTION_82
0x8f8a	              0x5d	                                 pop rbp	      2885	sequencer.c	FUNCTION_82
0x8f8b	              0xc3	                                     ret	      2885	sequencer.c	FUNCTION_82
create_seq_dir	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,2:WHILE,0:CALL,11	43
0x69cc	              0x55	                                push rbp	      2193	sequencer.c	FUNCTION_66
0x69cd	          0x4889e5	                            mov rbp, rsp	      2193	sequencer.c	FUNCTION_66
0x69d0	              0x53	                                push rbx	      2193	sequencer.c	FUNCTION_66
0x69d1	        0x4883ec08	                              sub rsp, 8	      2193	sequencer.c	FUNCTION_66
0x69d5	      0xe800000000	                          call 0x4006a1a	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x69da	          0x4889c7	                            mov rdi, rax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x69dd	      0xe800000000	                          call 0x4006a22	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x69e2	            0x85c0	                           test eax, eax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x69e4	            0x743a	                            je 0x4006a60	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x69e6	      0xbf00000000	                              mov edi, 0	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_4
0x69eb	      0xe87799ffff	                               call sym.	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_4
0x69f0	          0x4889c7	                            mov rdi, rax	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_4
0x69f3	      0xb800000000	                              mov eax, 0	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_4
0x69f8	      0xe800000000	                          call 0x4006a3d	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_4
0x69fd	      0xe8fe95ffff	                    call sym.const_error	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_4
0x6a02	      0xbf00000000	                              mov edi, 0	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_6
0x6a07	      0xe85b99ffff	                               call sym.	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_6
0x6a0c	          0x4889c7	                            mov rdi, rax	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_6
0x6a0f	      0xb800000000	                              mov eax, 0	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_6
0x6a14	      0xe800000000	                          call 0x4006a59	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_6
0x6a19	      0xb8ffffffff	                     mov eax, 0xffffffff	      2197	sequencer.c	FUNCTION_66	IF_1
0x6a1e	            0xeb44	                           jmp 0x4006aa4	      2197	sequencer.c	FUNCTION_66	IF_1
0x6a20	      0xe800000000	                          call 0x4006a65	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_8
0x6a25	      0xbeff010000	                          mov esi, 0x1ff	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_8
0x6a2a	          0x4889c7	                            mov rdi, rax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_8
0x6a2d	      0xe800000000	                          call 0x4006a72	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_8
0x6a32	            0x85c0	                           test eax, eax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_8
0x6a34	            0x7929	                           jns 0x4006a9f	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_8
0x6a36	      0xe800000000	                          call 0x4006a7b	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a3b	          0x4889c3	                            mov rbx, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a3e	      0xbf00000000	                              mov edi, 0	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a43	      0xe81f99ffff	                               call sym.	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a48	          0x4889de	                            mov rsi, rbx	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a4b	          0x4889c7	                            mov rdi, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a4e	      0xb800000000	                              mov eax, 0	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a53	      0xe800000000	                          call 0x4006a98	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a58	      0xe8a395ffff	                    call sym.const_error	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a5d	            0xeb05	                           jmp 0x4006aa4	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_10
0x6a5f	      0xb800000000	                              mov eax, 0	      2201	sequencer.c	FUNCTION_66
0x6a64	        0x4883c408	                              add rsp, 8	      2202	sequencer.c	FUNCTION_66
0x6a68	              0x5b	                                 pop rbx	      2202	sequencer.c	FUNCTION_66
0x6a69	              0x5d	                                 pop rbp	      2202	sequencer.c	FUNCTION_66
0x6a6a	              0xc3	                                     ret	      2202	sequencer.c	FUNCTION_66
single_pick	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,3	24
0xae50	              0x55	                                push rbp	      3427	sequencer.c	FUNCTION_91
0xae51	          0x4889e5	                            mov rbp, rsp	      3427	sequencer.c	FUNCTION_91
0xae54	        0x4883ec10	                           sub rsp, 0x10	      3427	sequencer.c	FUNCTION_91
0xae58	        0x48897df8	                mov qword [rbp - 8], rdi	      3427	sequencer.c	FUNCTION_91
0xae5c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3427	sequencer.c	FUNCTION_91
0xae60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3428	sequencer.c	FUNCTION_91	CALL_2
0xae64	          0x4889c7	                            mov rdi, rax	      3428	sequencer.c	FUNCTION_91	CALL_2
0xae67	      0xe8d361ffff	                    call sym.action_name	      3428	sequencer.c	FUNCTION_91	CALL_2
0xae6c	      0xba00000000	                              mov edx, 0	      3428	sequencer.c	FUNCTION_91	CALL_2
0xae71	          0x4889c6	                            mov rsi, rax	      3428	sequencer.c	FUNCTION_91	CALL_2
0xae74	      0xbf00000000	                              mov edi, 0	      3428	sequencer.c	FUNCTION_91	CALL_2
0xae79	      0xe800000000	                          call 0x400aebe	      3428	sequencer.c	FUNCTION_91	CALL_2
0xae7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae82	            0x8b00	                    mov eax, dword [rax]	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae84	          0x83f801	                              cmp eax, 1	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae87	           0xf95c0	                                setne al	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae8a	           0xfb6c0	                           movzx eax, al	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae8d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae91	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae95	      0xb900000000	                              mov ecx, 0	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae9a	            0x89c7	                            mov edi, eax	      3429	sequencer.c	FUNCTION_91	CALL_3
0xae9c	      0xe8fa95ffff	                 call sym.do_pick_commit	      3429	sequencer.c	FUNCTION_91	CALL_3
0xaea1	              0xc9	                                   leave	      3431	sequencer.c	FUNCTION_91
0xaea2	              0xc3	                                     ret	      3431	sequencer.c	FUNCTION_91
read_oneliner	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,5:WHILE,0:CALL,4	93
0x1420	              0x55	                                push rbp	       401	sequencer.c	FUNCTION_15
0x1421	          0x4889e5	                            mov rbp, rsp	       401	sequencer.c	FUNCTION_15
0x1424	        0x4883ec30	                           sub rsp, 0x30	       401	sequencer.c	FUNCTION_15
0x1428	        0x48897de8	             mov qword [rbp - 0x18], rdi	       401	sequencer.c	FUNCTION_15
0x142c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       401	sequencer.c	FUNCTION_15
0x1430	          0x8955dc	             mov dword [rbp - 0x24], edx	       401	sequencer.c	FUNCTION_15
0x1433	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	sequencer.c	FUNCTION_15
0x1437	        0x488b4008	                mov rax, qword [rax + 8]	       402	sequencer.c	FUNCTION_15
0x143b	          0x8945fc	                mov dword [rbp - 4], eax	       402	sequencer.c	FUNCTION_15
0x143e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x1442	          0x4889c7	                            mov rdi, rax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x1445	      0xe800000000	                          call 0x400148a	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x144a	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x144c	            0x750a	                           jne 0x4001498	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x144e	      0xb800000000	                              mov eax, 0	       405	sequencer.c	FUNCTION_15	IF_1
0x1453	      0xe90e010000	                           jmp 0x40015a6	       405	sequencer.c	FUNCTION_15	IF_1
0x1458	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x145c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x1460	      0xba00000000	                              mov edx, 0	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x1465	          0x4889ce	                            mov rsi, rcx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x1468	          0x4889c7	                            mov rdi, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x146b	      0xe800000000	                          call 0x40014b0	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x1470	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x1473	            0x792b	                           jns 0x40014e0	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x1475	      0xbf00000000	                              mov edi, 0	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x147a	      0xe8e8eeffff	                               call sym.	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x147f	          0x4889c2	                            mov rdx, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x1482	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x1486	          0x4889c6	                            mov rsi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x1489	          0x4889d7	                            mov rdi, rdx	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x148c	      0xb800000000	                              mov eax, 0	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x1491	      0xe800000000	                          call 0x40014d6	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x1496	      0xb800000000	                              mov eax, 0	       409	sequencer.c	FUNCTION_15	IF_2
0x149b	      0xe9c6000000	                           jmp 0x40015a6	       409	sequencer.c	FUNCTION_15	IF_2
0x14a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	sequencer.c	FUNCTION_15	IF_3
0x14a4	        0x488b5008	                mov rdx, qword [rax + 8]	       412	sequencer.c	FUNCTION_15	IF_3
0x14a8	          0x8b45fc	                mov eax, dword [rbp - 4]	       412	sequencer.c	FUNCTION_15	IF_3
0x14ab	            0x4898	                                    cdqe	       412	sequencer.c	FUNCTION_15	IF_3
0x14ad	          0x4839c2	                            cmp rdx, rax	       412	sequencer.c	FUNCTION_15	IF_3
0x14b0	     0xf868c000000	                           jbe 0x4001582	       412	sequencer.c	FUNCTION_15	IF_3
0x14b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	sequencer.c	FUNCTION_15	IF_3
0x14ba	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       412	sequencer.c	FUNCTION_15	IF_3
0x14be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	sequencer.c	FUNCTION_15	IF_3
0x14c2	        0x488b4008	                mov rax, qword [rax + 8]	       412	sequencer.c	FUNCTION_15	IF_3
0x14c6	        0x4883e801	                              sub rax, 1	       412	sequencer.c	FUNCTION_15	IF_3
0x14ca	          0x4801d0	                            add rax, rdx	       412	sequencer.c	FUNCTION_15	IF_3
0x14cd	           0xfb600	                   movzx eax, byte [rax]	       412	sequencer.c	FUNCTION_15	IF_3
0x14d0	            0x3c0a	                             cmp al, 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x14d2	            0x756e	                           jne 0x4001582	       412	sequencer.c	FUNCTION_15	IF_3
0x14d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14d8	        0x488b4008	                mov rax, qword [rax + 8]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14dc	        0x488d50ff	                      lea rdx, [rax - 1]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14e4	        0x48895008	                mov qword [rax + 8], rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14ec	        0x488b5008	                mov rdx, qword [rax + 8]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14f0	          0x8b45fc	                mov eax, dword [rbp - 4]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14f3	            0x4898	                                    cdqe	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14f5	          0x4839c2	                            cmp rdx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14f8	            0x7632	                           jbe 0x400156c	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x14fe	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1502	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1506	        0x488b4008	                mov rax, qword [rax + 8]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x150a	        0x4883e801	                              sub rax, 1	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x150e	          0x4801d0	                            add rax, rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1511	           0xfb600	                   movzx eax, byte [rax]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1514	            0x3c0d	                             cmp al, 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1516	            0x7514	                           jne 0x400156c	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1518	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x151c	        0x488b4008	                mov rax, qword [rax + 8]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1520	        0x488d50ff	                      lea rdx, [rax - 1]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1524	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x1528	        0x48895008	                mov qword [rax + 8], rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x152c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	sequencer.c	FUNCTION_15	IF_3
0x1530	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       415	sequencer.c	FUNCTION_15	IF_3
0x1534	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	sequencer.c	FUNCTION_15	IF_3
0x1538	        0x488b4008	                mov rax, qword [rax + 8]	       415	sequencer.c	FUNCTION_15	IF_3
0x153c	          0x4801d0	                            add rax, rdx	       415	sequencer.c	FUNCTION_15	IF_3
0x153f	          0xc60000	                       mov byte [rax], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x1542	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       418	sequencer.c	FUNCTION_15	IF_5
0x1546	            0x7419	                            je 0x40015a1	       418	sequencer.c	FUNCTION_15	IF_5
0x1548	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       418	sequencer.c	FUNCTION_15	IF_5
0x154c	        0x488b5008	                mov rdx, qword [rax + 8]	       418	sequencer.c	FUNCTION_15	IF_5
0x1550	          0x8b45fc	                mov eax, dword [rbp - 4]	       418	sequencer.c	FUNCTION_15	IF_5
0x1553	            0x4898	                                    cdqe	       418	sequencer.c	FUNCTION_15	IF_5
0x1555	          0x4839c2	                            cmp rdx, rax	       418	sequencer.c	FUNCTION_15	IF_5
0x1558	            0x7507	                           jne 0x40015a1	       418	sequencer.c	FUNCTION_15	IF_5
0x155a	      0xb800000000	                              mov eax, 0	       419	sequencer.c	FUNCTION_15	IF_5
0x155f	            0xeb05	                           jmp 0x40015a6	       419	sequencer.c	FUNCTION_15	IF_5
0x1561	      0xb801000000	                              mov eax, 1	       421	sequencer.c	FUNCTION_15
0x1566	              0xc9	                                   leave	       422	sequencer.c	FUNCTION_15
0x1567	              0xc3	                                     ret	       422	sequencer.c	FUNCTION_15
skip_unnecessary_picks	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,15:WHILE,0:CALL,41	282
0xd6be	              0x55	                                push rbp	      4187	sequencer.c	FUNCTION_103
0xd6bf	          0x4889e5	                            mov rbp, rsp	      4187	sequencer.c	FUNCTION_103
0xd6c2	            0x4154	                                push r12	      4187	sequencer.c	FUNCTION_103
0xd6c4	              0x53	                                push rbx	      4187	sequencer.c	FUNCTION_103
0xd6c5	    0x4881ece00000	                           sub rsp, 0xe0	      4187	sequencer.c	FUNCTION_103
0xd6cc	    0x64488b042528	                mov rax, qword fs:[0x28]	      4187	sequencer.c	FUNCTION_103
0xd6d5	        0x488945e8	             mov qword [rbp - 0x18], rax	      4187	sequencer.c	FUNCTION_103
0xd6d9	            0x31c0	                            xor eax, eax	      4187	sequencer.c	FUNCTION_103
0xd6db	      0xe84f2fffff	               call sym.rebase_path_todo	      4188	sequencer.c	FUNCTION_103	CALL_1
0xd6e0	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4188	sequencer.c	FUNCTION_103	CALL_1
0xd6e7	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4189	sequencer.c	FUNCTION_103
0xd6f2	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      4189	sequencer.c	FUNCTION_103
0xd6fd	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4189	sequencer.c	FUNCTION_103
0xd708	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      4190	sequencer.c	FUNCTION_103
0xd70f	      0xb800000000	                              mov eax, 0	      4190	sequencer.c	FUNCTION_103
0xd714	      0xb90b000000	                            mov ecx, 0xb	      4190	sequencer.c	FUNCTION_103
0xd719	          0x4889d7	                            mov rdi, rdx	      4190	sequencer.c	FUNCTION_103
0xd71c	          0xf348ab	              rep stosq qword [rdi], rax	      4190	sequencer.c	FUNCTION_103
0xd71f	    0x48c745800000	               mov qword [rbp - 0x80], 0	      4190	sequencer.c	FUNCTION_103
0xd727	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4191	sequencer.c	FUNCTION_103
0xd72b	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4191	sequencer.c	FUNCTION_103
0xd732	      0xe87532ffff	               call sym.rebase_path_onto	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd737	          0x4889c1	                            mov rcx, rax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd73a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd741	      0xba00000000	                              mov edx, 0	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd746	          0x4889ce	                            mov rsi, rcx	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd749	          0x4889c7	                            mov rdi, rax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd74c	      0xe8cf3cffff	                  call sym.read_oneliner	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd751	            0x85c0	                           test eax, eax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd753	            0x7521	                           jne 0x400d7b6	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0xd755	      0xbf00000000	                              mov edi, 0	      4195	sequencer.c	FUNCTION_103	CALL_5
0xd75a	      0xe8082cffff	                               call sym.	      4195	sequencer.c	FUNCTION_103	CALL_5
0xd75f	          0x4889c7	                            mov rdi, rax	      4195	sequencer.c	FUNCTION_103	CALL_5
0xd762	      0xb800000000	                              mov eax, 0	      4195	sequencer.c	FUNCTION_103	CALL_5
0xd767	      0xe800000000	                          call 0x400d7ac	      4195	sequencer.c	FUNCTION_103	CALL_5
0xd76c	      0xe88f28ffff	                    call sym.const_error	      4195	sequencer.c	FUNCTION_103	CALL_5
0xd771	      0xe902040000	                           jmp 0x400dbb8	      4195	sequencer.c	FUNCTION_103	CALL_5
0xd776	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_6
0xd77d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_6
0xd781	          0x4889d6	                            mov rsi, rdx	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_6
0xd784	          0x4889c7	                            mov rdi, rax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_6
0xd787	      0xe800000000	                          call 0x400d7cc	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_6
0xd78c	            0x85c0	                           test eax, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_6
0xd78e	            0x7430	                            je 0x400d800	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_6
0xd790	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_7
0xd797	          0x4889c7	                            mov rdi, rax	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_7
0xd79a	      0xe800000000	                          call 0x400d7df	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_7
0xd79f	      0xbf00000000	                              mov edi, 0	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_9
0xd7a4	      0xe8be2bffff	                               call sym.	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_9
0xd7a9	          0x4889c7	                            mov rdi, rax	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_9
0xd7ac	      0xb800000000	                              mov eax, 0	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_9
0xd7b1	      0xe800000000	                          call 0x400d7f6	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_9
0xd7b6	      0xe84528ffff	                    call sym.const_error	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_9
0xd7bb	      0xe9b8030000	                           jmp 0x400dbb8	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_9
0xd7c0	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4200	sequencer.c	FUNCTION_103	CALL_10
0xd7c7	          0x4889c7	                            mov rdi, rax	      4200	sequencer.c	FUNCTION_103	CALL_10
0xd7ca	      0xe800000000	                          call 0x400d80f	      4200	sequencer.c	FUNCTION_103	CALL_10
0xd7cf	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_11
0xd7d6	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_11
0xd7dd	          0x4889d6	                            mov rsi, rdx	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_11
0xd7e0	          0x4889c7	                            mov rdi, rax	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_11
0xd7e3	      0xe8be83ffff	      call sym.strbuf_read_file_or_whine	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_11
0xd7e8	          0x4885c0	                           test rax, rax	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_11
0xd7eb	            0x790a	                           jns 0x400d837	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_11
0xd7ed	      0xb8ffffffff	                     mov eax, 0xffffffff	      4203	sequencer.c	FUNCTION_103	IF_3
0xd7f2	      0xe981030000	                           jmp 0x400dbb8	      4203	sequencer.c	FUNCTION_103	IF_3
0xd7f7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_12
0xd7fb	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_12
0xd802	          0x4889d6	                            mov rsi, rdx	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_12
0xd805	          0x4889c7	                            mov rdi, rax	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_12
0xd808	      0xe8e780ffff	              call sym.parse_insn_buffer	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_12
0xd80d	            0x85c0	                           test eax, eax	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_12
0xd80f	            0x7919	                           jns 0x400d86a	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_12
0xd811	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_13
0xd818	          0x4889c7	                            mov rdi, rax	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_13
0xd81b	      0xe8527bffff	              call sym.todo_list_release	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_13
0xd820	      0xb8ffffffff	                     mov eax, 0xffffffff	      4206	sequencer.c	FUNCTION_103	IF_4
0xd825	      0xe94e030000	                           jmp 0x400dbb8	      4206	sequencer.c	FUNCTION_103	IF_4
0xd82a	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      4209	sequencer.c	FUNCTION_103	FOR_1
0xd834	      0xe935010000	                           jmp 0x400d9ae	      4209	sequencer.c	FUNCTION_103	FOR_1
0xd839	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd83d	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd843	          0x4863d0	                         movsxd rdx, eax	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd846	          0x4889d0	                            mov rax, rdx	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd849	          0x4801c0	                            add rax, rax	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd84c	          0x4801d0	                            add rax, rdx	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd84f	        0x48c1e004	                              shl rax, 4	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd853	          0x4801c8	                            add rax, rcx	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd856	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4210	sequencer.c	FUNCTION_103	FOR_1
0xd85d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0xd864	            0x8b00	                    mov eax, dword [rax]	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0xd866	          0x83f809	                              cmp eax, 9	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0xd869	     0xf87f7000000	                            ja 0x400d9a6	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0xd86f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0xd876	            0x8b00	                    mov eax, dword [rax]	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0xd878	            0x85c0	                           test eax, eax	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0xd87a	     0xf85ff000000	                           jne 0x400d9bf	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0xd880	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0xd887	        0x488b4008	                mov rax, qword [rax + 8]	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0xd88b	          0x4889c7	                            mov rdi, rax	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0xd88e	      0xe8342cffff	                   call sym.parse_commit	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0xd893	            0x85c0	                           test eax, eax	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0xd895	            0x744d	                            je 0x400d924	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0xd897	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_15
0xd89e	          0x4889c7	                            mov rdi, rax	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_15
0xd8a1	      0xe8cc7affff	              call sym.todo_list_release	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_15
0xd8a6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8ad	        0x488b4008	                mov rax, qword [rax + 8]	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8b1	        0x4883c004	                              add rax, 4	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8b5	          0x4889c7	                            mov rdi, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8b8	      0xe800000000	                          call 0x400d8fd	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8bd	          0x4889c3	                            mov rbx, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8c0	      0xbf00000000	                              mov edi, 0	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8c5	      0xe89d2affff	                               call sym.	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8ca	          0x4889de	                            mov rsi, rbx	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8cd	          0x4889c7	                            mov rdi, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8d0	      0xb800000000	                              mov eax, 0	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8d5	      0xe800000000	                          call 0x400d91a	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8da	      0xe82127ffff	                    call sym.const_error	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8df	      0xe994020000	                           jmp 0x400dbb8	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_17
0xd8e4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0xd8eb	        0x488b4008	                mov rax, qword [rax + 8]	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0xd8ef	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0xd8f3	          0x4885c0	                           test rax, rax	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0xd8f6	     0xf8486000000	                            je 0x400d9c2	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0xd8fc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd903	        0x488b4008	                mov rax, qword [rax + 8]	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd907	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd90b	        0x488b4008	                mov rax, qword [rax + 8]	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd90f	          0x4885c0	                           test rax, rax	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd912	            0x7571	                           jne 0x400d9c5	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd914	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4225	sequencer.c	FUNCTION_103	FOR_1
0xd91b	        0x488b4008	                mov rax, qword [rax + 8]	      4225	sequencer.c	FUNCTION_103	FOR_1
0xd91f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4225	sequencer.c	FUNCTION_103	FOR_1
0xd923	          0x488b00	                    mov rax, qword [rax]	      4225	sequencer.c	FUNCTION_103	FOR_1
0xd926	        0x4883c004	                              add rax, 4	      4225	sequencer.c	FUNCTION_103	FOR_1
0xd92a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4225	sequencer.c	FUNCTION_103	FOR_1
0xd931	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_19
0xd938	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_19
0xd93f	          0x4889d6	                            mov rsi, rdx	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_19
0xd942	          0x4889c7	                            mov rdi, rax	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_19
0xd945	      0xe8492affff	                        call sym.hashcmp	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_19
0xd94a	            0x85c0	                           test eax, eax	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_19
0xd94c	            0x753a	                           jne 0x400d9c8	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_19
0xd94e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4228	sequencer.c	FUNCTION_103	FOR_1
0xd955	        0x488b4008	                mov rax, qword [rax + 8]	      4228	sequencer.c	FUNCTION_103	FOR_1
0xd959	        0x4883c004	                              add rax, 4	      4228	sequencer.c	FUNCTION_103	FOR_1
0xd95d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4228	sequencer.c	FUNCTION_103	FOR_1
0xd964	            0xeb01	                           jmp 0x400d9a7	      4228	sequencer.c	FUNCTION_103	FOR_1
0xd966	              0x90	                                     nop	      4213	sequencer.c	FUNCTION_103	FOR_1	IF_5
0xd967	    0x83851cffffff	               add dword [rbp - 0xe4], 1	      4209	sequencer.c	FUNCTION_103	FOR_1
0xd96e	          0x8b4590	             mov eax, dword [rbp - 0x70]	      4209	sequencer.c	FUNCTION_103	FOR_1
0xd971	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	      4209	sequencer.c	FUNCTION_103	FOR_1
0xd977	     0xf8fbcfeffff	                            jg 0x400d879	      4209	sequencer.c	FUNCTION_103	FOR_1
0xd97d	            0xeb0a	                           jmp 0x400d9c9	      4209	sequencer.c	FUNCTION_103	FOR_1
0xd97f	              0x90	                                     nop	      4215	sequencer.c	FUNCTION_103	FOR_1	IF_6
0xd980	            0xeb07	                           jmp 0x400d9c9	      4215	sequencer.c	FUNCTION_103	FOR_1	IF_6
0xd982	              0x90	                                     nop	      4222	sequencer.c	FUNCTION_103	FOR_1	IF_8
0xd983	            0xeb04	                           jmp 0x400d9c9	      4222	sequencer.c	FUNCTION_103	FOR_1	IF_8
0xd985	              0x90	                                     nop	      4224	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd986	            0xeb01	                           jmp 0x400d9c9	      4224	sequencer.c	FUNCTION_103	FOR_1	IF_9
0xd988	              0x90	                                     nop	      4227	sequencer.c	FUNCTION_103	FOR_1	IF_10
0xd989	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      4230	sequencer.c	FUNCTION_103	IF_11
0xd990	     0xf8eb7010000	                           jle 0x400db8d	      4230	sequencer.c	FUNCTION_103	IF_11
0xd996	    0x8b951cffffff	             mov edx, dword [rbp - 0xe4]	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_20
0xd99c	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_20
0xd9a3	            0x89d6	                            mov esi, edx	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_20
0xd9a5	          0x4889c7	                            mov rdi, rax	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_20
0xd9a8	      0xe83d81ffff	           call sym.get_item_line_offset	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_20
0xd9ad	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_20
0xd9b3	      0xe8a62cffff	               call sym.rebase_path_done	      4232	sequencer.c	FUNCTION_103	IF_11	CALL_21
0xd9b8	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4232	sequencer.c	FUNCTION_103	IF_11	CALL_21
0xd9bf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_22
0xd9c6	      0xbab6010000	                          mov edx, 0x1b6	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_22
0xd9cb	      0xbe41040000	                          mov esi, 0x441	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_22
0xd9d0	          0x4889c7	                            mov rdi, rax	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_22
0xd9d3	      0xb800000000	                              mov eax, 0	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_22
0xd9d8	      0xe800000000	                          call 0x400da1d	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_22
0xd9dd	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_22
0xd9e3	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0xd9ea	            0x7942	                           jns 0x400da6e	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0xd9ec	      0xbf00000000	                              mov edi, 0	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xd9f1	      0xe87129ffff	                               call sym.	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xd9f6	          0x4889c2	                            mov rdx, rax	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xd9f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xda00	          0x4889c6	                            mov rsi, rax	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xda03	          0x4889d7	                            mov rdi, rdx	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xda06	      0xb800000000	                              mov eax, 0	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xda0b	      0xe800000000	                          call 0x400da50	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xda10	      0xe8eb25ffff	                    call sym.const_error	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_24
0xda15	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_25
0xda1c	          0x4889c7	                            mov rdi, rax	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_25
0xda1f	      0xe84e79ffff	              call sym.todo_list_release	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_25
0xda24	      0xb8ffffffff	                     mov eax, 0xffffffff	      4239	sequencer.c	FUNCTION_103	IF_11	IF_12
0xda29	      0xe94a010000	                           jmp 0x400dbb8	      4239	sequencer.c	FUNCTION_103	IF_11	IF_12
0xda2e	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda34	          0x4863d0	                         movsxd rdx, eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda37	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda3b	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda41	          0x4889ce	                            mov rsi, rcx	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda44	            0x89c7	                            mov edi, eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda46	      0xe800000000	                          call 0x400da8b	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda4b	          0x4885c0	                           test rax, rax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda4e	            0x794f	                           jns 0x400dadf	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_26
0xda50	      0xbf00000000	                              mov edi, 0	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda55	      0xe80d29ffff	                               call sym.	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda5a	          0x4889c2	                            mov rdx, rax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda5d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda64	          0x4889c6	                            mov rsi, rax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda67	          0x4889d7	                            mov rdi, rdx	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda6a	      0xb800000000	                              mov eax, 0	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda6f	      0xe800000000	                          call 0x400dab4	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda74	      0xe88725ffff	                    call sym.const_error	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_28
0xda79	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_29
0xda80	          0x4889c7	                            mov rdi, rax	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_29
0xda83	      0xe8ea78ffff	              call sym.todo_list_release	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_29
0xda88	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_30
0xda8e	            0x89c7	                            mov edi, eax	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_30
0xda90	      0xe800000000	                          call 0x400dad5	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_30
0xda95	      0xb8ffffffff	                     mov eax, 0xffffffff	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0xda9a	      0xe9d9000000	                           jmp 0x400dbb8	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0xda9f	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_31
0xdaa5	            0x89c7	                            mov edi, eax	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_31
0xdaa7	      0xe800000000	                          call 0x400daec	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_31
0xdaac	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4250	sequencer.c	FUNCTION_103	IF_11	IF_14
0xdab3	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdab9	            0x4898	                                    cdqe	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdabb	          0x4829c2	                            sub rdx, rax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdabe	          0x4989d4	                            mov r12, rdx	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdac1	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdac5	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdacb	            0x4898	                                    cdqe	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdacd	        0x488d1c02	                    lea rbx, [rdx + rax]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdad1	      0xe8592bffff	               call sym.rebase_path_todo	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdad6	          0x4c89e2	                            mov rdx, r12	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdad9	          0x4889de	                            mov rsi, rbx	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdadc	          0x4889c7	                            mov rdi, rax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdadf	      0xe8f0faffff	                   call sym.rewrite_file	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdae4	            0x85c0	                           test eax, eax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdae6	            0x7916	                           jns 0x400db3e	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_33
0xdae8	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_34
0xdaef	          0x4889c7	                            mov rdi, rax	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_34
0xdaf2	      0xe87b78ffff	              call sym.todo_list_release	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_34
0xdaf7	      0xb8ffffffff	                     mov eax, 0xffffffff	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0xdafc	            0xeb7a	                           jmp 0x400dbb8	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0xdafe	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      4255	sequencer.c	FUNCTION_103	IF_11
0xdb04	          0x894598	             mov dword [rbp - 0x68], eax	      4255	sequencer.c	FUNCTION_103	IF_11
0xdb07	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb0e	      0xbe00000000	                              mov esi, 0	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb13	          0x4889c7	                            mov rdi, rax	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb16	      0xe830b5ffff	                   call sym.peek_command	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb1b	            0x89c7	                            mov edi, eax	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb1d	      0xe83061ffff	                       call sym.is_fixup	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb22	            0x85c0	                           test eax, eax	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb24	            0x7427	                            je 0x400db8d	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_36
0xdb26	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb2d	      0xbe00000000	                              mov esi, 0	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb32	          0x4889c7	                            mov rdi, rax	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb35	      0xe811b5ffff	                   call sym.peek_command	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb3a	            0x89c2	                            mov edx, eax	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb3c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb43	            0x89d6	                            mov esi, edx	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb45	          0x4889c7	                            mov rdi, rax	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb48	      0xe8d968ffff	            call sym.record_in_rewritten	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_38
0xdb4d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4260	sequencer.c	FUNCTION_103	CALL_39
0xdb54	          0x4889c7	                            mov rdi, rax	      4260	sequencer.c	FUNCTION_103	CALL_39
0xdb57	      0xe81678ffff	              call sym.todo_list_release	      4260	sequencer.c	FUNCTION_103	CALL_39
0xdb5c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4261	sequencer.c	FUNCTION_103	CALL_41
0xdb63	          0x4889c7	                            mov rdi, rax	      4261	sequencer.c	FUNCTION_103	CALL_41
0xdb66	      0xe800000000	                          call 0x400dbab	      4261	sequencer.c	FUNCTION_103	CALL_41
0xdb6b	          0x4889c7	                            mov rdi, rax	      4261	sequencer.c	FUNCTION_103	CALL_41
0xdb6e	      0xe800000000	                          call 0x400dbb3	      4261	sequencer.c	FUNCTION_103	CALL_41
0xdb73	      0xb800000000	                              mov eax, 0	      4263	sequencer.c	FUNCTION_103
0xdb78	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4264	sequencer.c	FUNCTION_103
0xdb7c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4264	sequencer.c	FUNCTION_103
0xdb85	            0x7405	                            je 0x400dbcc	      4264	sequencer.c	FUNCTION_103
0xdb87	      0xe800000000	                          call 0x400dbcc	      4264	sequencer.c	FUNCTION_103
0xdb8c	    0x4881c4e00000	                           add rsp, 0xe0	      4264	sequencer.c	FUNCTION_103
0xdb93	              0x5b	                                 pop rbx	      4264	sequencer.c	FUNCTION_103
0xdb94	            0x415c	                                 pop r12	      4264	sequencer.c	FUNCTION_103
0xdb96	              0x5d	                                 pop rbp	      4264	sequencer.c	FUNCTION_103
0xdb97	              0xc3	                                     ret	      4264	sequencer.c	FUNCTION_103
prepare_revs	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,5	57
0x517b	              0x55	                                push rbp	      1730	sequencer.c	FUNCTION_49
0x517c	          0x4889e5	                            mov rbp, rsp	      1730	sequencer.c	FUNCTION_49
0x517f	        0x4883ec10	                           sub rsp, 0x10	      1730	sequencer.c	FUNCTION_49
0x5183	        0x48897df8	                mov qword [rbp - 8], rdi	      1730	sequencer.c	FUNCTION_49
0x5187	        0x488b45f8	                mov rax, qword [rbp - 8]	      1735	sequencer.c	FUNCTION_49	IF_1
0x518b	            0x8b00	                    mov eax, dword [rax]	      1735	sequencer.c	FUNCTION_49	IF_1
0x518d	          0x83f801	                              cmp eax, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x5190	            0x754d	                           jne 0x400521f	      1735	sequencer.c	FUNCTION_49	IF_1
0x5192	        0x488b45f8	                mov rax, qword [rbp - 8]	      1735	sequencer.c	FUNCTION_49	IF_1
0x5196	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1735	sequencer.c	FUNCTION_49	IF_1
0x519d	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1735	sequencer.c	FUNCTION_49	IF_1
0x51a1	          0x83e030	                           and eax, 0x30	      1735	sequencer.c	FUNCTION_49	IF_1
0x51a4	            0x84c0	                             test al, al	      1735	sequencer.c	FUNCTION_49	IF_1
0x51a6	            0x7537	                           jne 0x400521f	      1735	sequencer.c	FUNCTION_49	IF_1
0x51a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1736	sequencer.c	FUNCTION_49	IF_1
0x51ac	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x51b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1736	sequencer.c	FUNCTION_49	IF_1
0x51b7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x51be	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x51c2	          0xc0e806	                               shr al, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x51c5	          0x83e001	                              and eax, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x51c8	          0x83f001	                              xor eax, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x51cb	          0x83e001	                              and eax, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x51ce	          0xc1e006	                              shl eax, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x51d1	            0x89c1	                            mov ecx, eax	      1736	sequencer.c	FUNCTION_49	IF_1
0x51d3	         0xfb64277	           movzx eax, byte [rdx + 0x77] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x51d7	          0x83e0bf	                     and eax, 0xffffffbf	      1736	sequencer.c	FUNCTION_49	IF_1
0x51da	             0x9c8	                             or eax, ecx	      1736	sequencer.c	FUNCTION_49	IF_1
0x51dc	          0x884277	               mov byte [rdx + 0x77], al	      1736	sequencer.c	FUNCTION_49	IF_1
0x51df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x51e3	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x51ea	          0x4889c7	                            mov rdi, rax	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x51ed	      0xe800000000	                          call 0x4005232	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x51f2	            0x85c0	                           test eax, eax	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x51f4	            0x741e	                            je 0x4005254	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x51f6	      0xbf00000000	                              mov edi, 0	      1739	sequencer.c	FUNCTION_49	CALL_3
0x51fb	      0xe867b1ffff	                               call sym.	      1739	sequencer.c	FUNCTION_49	CALL_3
0x5200	          0x4889c7	                            mov rdi, rax	      1739	sequencer.c	FUNCTION_49	CALL_3
0x5203	      0xb800000000	                              mov eax, 0	      1739	sequencer.c	FUNCTION_49	CALL_3
0x5208	      0xe800000000	                          call 0x400524d	      1739	sequencer.c	FUNCTION_49	CALL_3
0x520d	      0xe8eeadffff	                    call sym.const_error	      1739	sequencer.c	FUNCTION_49	CALL_3
0x5212	            0xeb36	                           jmp 0x400528a	      1739	sequencer.c	FUNCTION_49	CALL_3
0x5214	        0x488b45f8	                mov rax, qword [rbp - 8]	      1741	sequencer.c	FUNCTION_49	IF_3
0x5218	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1741	sequencer.c	FUNCTION_49	IF_3
0x521f	          0x488b00	                    mov rax, qword [rax]	      1741	sequencer.c	FUNCTION_49	IF_3
0x5222	          0x4885c0	                           test rax, rax	      1741	sequencer.c	FUNCTION_49	IF_3
0x5225	            0x751e	                           jne 0x4005285	      1741	sequencer.c	FUNCTION_49	IF_3
0x5227	      0xbf00000000	                              mov edi, 0	      1742	sequencer.c	FUNCTION_49	CALL_5
0x522c	      0xe836b1ffff	                               call sym.	      1742	sequencer.c	FUNCTION_49	CALL_5
0x5231	          0x4889c7	                            mov rdi, rax	      1742	sequencer.c	FUNCTION_49	CALL_5
0x5234	      0xb800000000	                              mov eax, 0	      1742	sequencer.c	FUNCTION_49	CALL_5
0x5239	      0xe800000000	                          call 0x400527e	      1742	sequencer.c	FUNCTION_49	CALL_5
0x523e	      0xe8bdadffff	                    call sym.const_error	      1742	sequencer.c	FUNCTION_49	CALL_5
0x5243	            0xeb05	                           jmp 0x400528a	      1742	sequencer.c	FUNCTION_49	CALL_5
0x5245	      0xb800000000	                              mov eax, 0	      1743	sequencer.c	FUNCTION_49
0x524a	              0xc9	                                   leave	      1744	sequencer.c	FUNCTION_49
0x524b	              0xc3	                                     ret	      1744	sequencer.c	FUNCTION_49
hold_lock_file_for_update	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	14
0x47f	              0x55	                                push rbp	       174	lockfile.h	FUNCTION_118
0x480	          0x4889e5	                            mov rbp, rsp	       174	lockfile.h	FUNCTION_118
0x483	        0x4883ec20	                           sub rsp, 0x20	       174	lockfile.h	FUNCTION_118
0x487	        0x48897df8	                mov qword [rbp - 8], rdi	       174	lockfile.h	FUNCTION_118
0x48b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       174	lockfile.h	FUNCTION_118
0x48f	          0x8955ec	             mov dword [rbp - 0x14], edx	       174	lockfile.h	FUNCTION_118
0x492	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       175	lockfile.h	FUNCTION_118	CALL_1
0x495	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       175	lockfile.h	FUNCTION_118	CALL_1
0x499	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	lockfile.h	FUNCTION_118	CALL_1
0x49d	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_118	CALL_1
0x4a2	          0x4889c7	                            mov rdi, rax	       175	lockfile.h	FUNCTION_118	CALL_1
0x4a5	      0xe800000000	                          call 0x40004ea	       175	lockfile.h	FUNCTION_118	CALL_1
0x4aa	              0xc9	                                   leave	       176	lockfile.h	FUNCTION_118
0x4ab	              0xc3	                                     ret	       176	lockfile.h	FUNCTION_118
read_strategy_opts	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,9	92
0x6479	              0x55	                                push rbp	      2082	sequencer.c	FUNCTION_63
0x647a	          0x4889e5	                            mov rbp, rsp	      2082	sequencer.c	FUNCTION_63
0x647d	              0x53	                                push rbx	      2082	sequencer.c	FUNCTION_63
0x647e	        0x4883ec38	                           sub rsp, 0x38	      2082	sequencer.c	FUNCTION_63
0x6482	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2082	sequencer.c	FUNCTION_63
0x6486	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2082	sequencer.c	FUNCTION_63
0x648a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2082	sequencer.c	FUNCTION_63
0x6493	        0x488945e8	             mov qword [rbp - 0x18], rax	      2082	sequencer.c	FUNCTION_63
0x6497	            0x31c0	                            xor eax, eax	      2082	sequencer.c	FUNCTION_63
0x6499	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2085	sequencer.c	FUNCTION_63	CALL_1
0x649d	      0xbe00000000	                              mov esi, 0	      2085	sequencer.c	FUNCTION_63	CALL_1
0x64a2	          0x4889c7	                            mov rdi, rax	      2085	sequencer.c	FUNCTION_63	CALL_1
0x64a5	      0xe8839cffff	                  call sym.strbuf_setlen	      2085	sequencer.c	FUNCTION_63	CALL_1
0x64aa	      0xe85ba5ffff	           call sym.rebase_path_strategy	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64af	          0x4889c1	                            mov rcx, rax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64b2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64b6	      0xba00000000	                              mov edx, 0	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64bb	          0x4889ce	                            mov rsi, rcx	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64be	          0x4889c7	                            mov rdi, rax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64c1	      0xe85aafffff	                  call sym.read_oneliner	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64c6	            0x85c0	                           test eax, eax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64c8	     0xf84de000000	                            je 0x40065ec	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_3
0x64ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2088	sequencer.c	FUNCTION_63	CALL_4
0x64d2	      0xbe00000000	                              mov esi, 0	      2088	sequencer.c	FUNCTION_63	CALL_4
0x64d7	          0x4889c7	                            mov rdi, rax	      2088	sequencer.c	FUNCTION_63	CALL_4
0x64da	      0xe800000000	                          call 0x400651f	      2088	sequencer.c	FUNCTION_63	CALL_4
0x64df	          0x4889c2	                            mov rdx, rax	      2088	sequencer.c	FUNCTION_63	CALL_4
0x64e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2088	sequencer.c	FUNCTION_63	CALL_4
0x64e6	        0x48895040	             mov qword [rax + 0x40], rdx	      2088	sequencer.c	FUNCTION_63	CALL_4
0x64ea	      0xe84aa5ffff	      call sym.rebase_path_strategy_opts	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x64ef	          0x4889c1	                            mov rcx, rax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x64f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x64f6	      0xba00000000	                              mov edx, 0	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x64fb	          0x4889ce	                            mov rsi, rcx	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x64fe	          0x4889c7	                            mov rdi, rax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x6501	      0xe81aafffff	                  call sym.read_oneliner	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x6506	            0x85c0	                           test eax, eax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x6508	     0xf84a1000000	                            je 0x40065ef	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_6
0x650e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2092	sequencer.c	FUNCTION_63	CALL_7
0x6512	        0x488d5048	                   lea rdx, [rax + 0x48]	      2092	sequencer.c	FUNCTION_63	CALL_7
0x6516	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2092	sequencer.c	FUNCTION_63	CALL_7
0x651a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2092	sequencer.c	FUNCTION_63	CALL_7
0x651e	          0x4889d6	                            mov rsi, rdx	      2092	sequencer.c	FUNCTION_63	CALL_7
0x6521	          0x4889c7	                            mov rdi, rax	      2092	sequencer.c	FUNCTION_63	CALL_7
0x6524	      0xe800000000	                          call 0x4006569	      2092	sequencer.c	FUNCTION_63	CALL_7
0x6529	          0x4863d0	                         movsxd rdx, eax	      2092	sequencer.c	FUNCTION_63	CALL_7
0x652c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2092	sequencer.c	FUNCTION_63	CALL_7
0x6530	        0x48895050	             mov qword [rax + 0x50], rdx	      2092	sequencer.c	FUNCTION_63	CALL_7
0x6534	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2093	sequencer.c	FUNCTION_63	FOR_1
0x653b	            0xeb5a	                           jmp 0x40065d7	      2093	sequencer.c	FUNCTION_63	FOR_1
0x653d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x6541	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2094	sequencer.c	FUNCTION_63	FOR_1
0x6545	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x6548	          0x4863d2	                         movsxd rdx, edx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x654b	        0x48c1e203	                              shl rdx, 3	      2094	sequencer.c	FUNCTION_63	FOR_1
0x654f	          0x4801d0	                            add rax, rdx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x6552	          0x488b00	                    mov rax, qword [rax]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x6555	        0x488945e0	             mov qword [rbp - 0x20], rax	      2094	sequencer.c	FUNCTION_63	FOR_1
0x6559	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x655d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x6561	      0xbe00000000	                              mov esi, 0	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x6566	          0x4889c7	                            mov rdi, rax	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x6569	      0xe89d9affff	                    call sym.skip_prefix	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x656e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6572	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6576	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6579	          0x4863d2	                         movsxd rdx, edx	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x657c	        0x48c1e203	                              shl rdx, 3	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6580	        0x488d1c10	                    lea rbx, [rax + rdx]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6584	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6588	          0x4889c7	                            mov rdi, rax	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x658b	      0xe800000000	                          call 0x40065d0	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6590	          0x488903	                    mov qword [rbx], rax	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_9
0x6593	        0x8345dc01	               add dword [rbp - 0x24], 1	      2093	sequencer.c	FUNCTION_63	FOR_1
0x6597	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2093	sequencer.c	FUNCTION_63	FOR_1
0x659a	          0x4863d0	                         movsxd rdx, eax	      2093	sequencer.c	FUNCTION_63	FOR_1
0x659d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2093	sequencer.c	FUNCTION_63	FOR_1
0x65a1	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2093	sequencer.c	FUNCTION_63	FOR_1
0x65a5	          0x4839c2	                            cmp rdx, rax	      2093	sequencer.c	FUNCTION_63	FOR_1
0x65a8	            0x7293	                            jb 0x400657d	      2093	sequencer.c	FUNCTION_63	FOR_1
0x65aa	            0xeb04	                           jmp 0x40065f0	      2093	sequencer.c	FUNCTION_63	FOR_1
0x65ac	              0x90	                                     nop	      2087	sequencer.c	FUNCTION_63	IF_1
0x65ad	            0xeb01	                           jmp 0x40065f0	      2087	sequencer.c	FUNCTION_63	IF_1
0x65af	              0x90	                                     nop	      2090	sequencer.c	FUNCTION_63	IF_2
0x65b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2099	sequencer.c	FUNCTION_63
0x65b4	    0x644833042528	                xor rax, qword fs:[0x28]	      2099	sequencer.c	FUNCTION_63
0x65bd	            0x7405	                            je 0x4006604	      2099	sequencer.c	FUNCTION_63
0x65bf	      0xe800000000	                          call 0x4006604	      2099	sequencer.c	FUNCTION_63
0x65c4	        0x4883c438	                           add rsp, 0x38	      2099	sequencer.c	FUNCTION_63
0x65c8	              0x5b	                                 pop rbx	      2099	sequencer.c	FUNCTION_63
0x65c9	              0x5d	                                 pop rbp	      2099	sequencer.c	FUNCTION_63
0x65ca	              0xc3	                                     ret	      2099	sequencer.c	FUNCTION_63
run_prepare_commit_msg_hook	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,3:WHILE,0:CALL,10	78
0x2bf4	              0x55	                                push rbp	       927	sequencer.c	FUNCTION_33
0x2bf5	          0x4889e5	                            mov rbp, rsp	       927	sequencer.c	FUNCTION_33
0x2bf8	        0x4883ec40	                           sub rsp, 0x40	       927	sequencer.c	FUNCTION_33
0x2bfc	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       927	sequencer.c	FUNCTION_33
0x2c00	        0x488975c0	             mov qword [rbp - 0x40], rsi	       927	sequencer.c	FUNCTION_33
0x2c04	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	sequencer.c	FUNCTION_33
0x2c0d	        0x488945f8	                mov qword [rbp - 8], rax	       927	sequencer.c	FUNCTION_33
0x2c11	            0x31c0	                            xor eax, eax	       927	sequencer.c	FUNCTION_33
0x2c13	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       928	sequencer.c	FUNCTION_33
0x2c1b	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       928	sequencer.c	FUNCTION_33
0x2c22	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       928	sequencer.c	FUNCTION_33
0x2c29	      0xe800000000	                          call 0x4002c6e	       932	sequencer.c	FUNCTION_33	CALL_1
0x2c2e	        0x488945d8	             mov qword [rbp - 0x28], rax	       932	sequencer.c	FUNCTION_33	CALL_1
0x2c32	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c36	        0x488b7008	                mov rsi, qword [rax + 8]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c3e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c42	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c46	      0xb900000000	                              mov ecx, 0	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c4b	          0x4889c7	                            mov rdi, rax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c4e	      0xe852e6ffff	                  call sym.write_message	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c53	            0x85c0	                           test eax, eax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c55	            0x740a	                            je 0x4002ca1	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x2c57	      0xb8ffffffff	                     mov eax, 0xffffffff	       934	sequencer.c	FUNCTION_33	IF_1
0x2c5c	      0xe9c3000000	                           jmp 0x4002d64	       934	sequencer.c	FUNCTION_33	IF_1
0x2c61	      0xe800000000	                          call 0x4002ca6	       936	sequencer.c	FUNCTION_33	CALL_4
0x2c66	          0x4889c2	                            mov rdx, rax	       936	sequencer.c	FUNCTION_33	CALL_4
0x2c69	        0x488d45e0	                   lea rax, [rbp - 0x20]	       936	sequencer.c	FUNCTION_33	CALL_4
0x2c6d	      0xbe00000000	                              mov esi, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x2c72	          0x4889c7	                            mov rdi, rax	       936	sequencer.c	FUNCTION_33	CALL_4
0x2c75	      0xb800000000	                              mov eax, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x2c7a	      0xe800000000	                          call 0x4002cbf	       936	sequencer.c	FUNCTION_33	CALL_4
0x2c7f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       937	sequencer.c	FUNCTION_33	CALL_5
0x2c83	      0xbe00000000	                              mov esi, 0	       937	sequencer.c	FUNCTION_33	CALL_5
0x2c88	          0x4889c7	                            mov rdi, rax	       937	sequencer.c	FUNCTION_33	CALL_5
0x2c8b	      0xe800000000	                          call 0x4002cd0	       937	sequencer.c	FUNCTION_33	CALL_5
0x2c90	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       938	sequencer.c	FUNCTION_33	IF_2
0x2c95	            0x7431	                            je 0x4002d08	       938	sequencer.c	FUNCTION_33	IF_2
0x2c97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2c9b	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2c9f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2ca3	    0x41b900000000	                              mov r9d, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2ca9	          0x4989c8	                             mov r8, rcx	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cac	      0xb900000000	                              mov ecx, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cb1	      0xbe00000000	                              mov esi, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cb6	          0x4889c7	                            mov rdi, rax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cb9	      0xb800000000	                              mov eax, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cbe	      0xe800000000	                          call 0x4002d03	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cc3	          0x8945d4	             mov dword [rbp - 0x2c], eax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cc6	            0xeb28	                           jmp 0x4002d30	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x2cc8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2ccc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2cd0	    0x41b800000000	                              mov r8d, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2cd6	      0xb900000000	                              mov ecx, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2cdb	      0xbe00000000	                              mov esi, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2ce0	          0x4889c7	                            mov rdi, rax	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2ce3	      0xb800000000	                              mov eax, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2ce8	      0xe800000000	                          call 0x4002d2d	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2ced	          0x8945d4	             mov dword [rbp - 0x2c], eax	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x2cf0	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       944	sequencer.c	FUNCTION_33	IF_3
0x2cf4	            0x741f	                            je 0x4002d55	       944	sequencer.c	FUNCTION_33	IF_3
0x2cf6	      0xbf00000000	                              mov edi, 0	       945	sequencer.c	FUNCTION_33	CALL_9
0x2cfb	      0xe867d6ffff	                               call sym.	       945	sequencer.c	FUNCTION_33	CALL_9
0x2d00	          0x4889c7	                            mov rdi, rax	       945	sequencer.c	FUNCTION_33	CALL_9
0x2d03	      0xb800000000	                              mov eax, 0	       945	sequencer.c	FUNCTION_33	CALL_9
0x2d08	      0xe800000000	                          call 0x4002d4d	       945	sequencer.c	FUNCTION_33	CALL_9
0x2d0d	      0xe8eed2ffff	                    call sym.const_error	       945	sequencer.c	FUNCTION_33	CALL_9
0x2d12	          0x8945d4	             mov dword [rbp - 0x2c], eax	       945	sequencer.c	FUNCTION_33	CALL_9
0x2d15	        0x488d45e0	                   lea rax, [rbp - 0x20]	       946	sequencer.c	FUNCTION_33	CALL_10
0x2d19	          0x4889c7	                            mov rdi, rax	       946	sequencer.c	FUNCTION_33	CALL_10
0x2d1c	      0xe800000000	                          call 0x4002d61	       946	sequencer.c	FUNCTION_33	CALL_10
0x2d21	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       948	sequencer.c	FUNCTION_33
0x2d24	        0x488b4df8	                mov rcx, qword [rbp - 8]	       949	sequencer.c	FUNCTION_33
0x2d28	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       949	sequencer.c	FUNCTION_33
0x2d31	            0x7405	                            je 0x4002d78	       949	sequencer.c	FUNCTION_33
0x2d33	      0xe800000000	                          call 0x4002d78	       949	sequencer.c	FUNCTION_33
0x2d38	              0xc9	                                   leave	       949	sequencer.c	FUNCTION_33
0x2d39	              0xc3	                                     ret	       949	sequencer.c	FUNCTION_33
is_final_fixup	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,3:WHILE,1:CALL,3	63
0x8f8c	              0x55	                                push rbp	      2888	sequencer.c	FUNCTION_83
0x8f8d	          0x4889e5	                            mov rbp, rsp	      2888	sequencer.c	FUNCTION_83
0x8f90	        0x4883ec18	                           sub rsp, 0x18	      2888	sequencer.c	FUNCTION_83
0x8f94	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2888	sequencer.c	FUNCTION_83
0x8f98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2889	sequencer.c	FUNCTION_83
0x8f9c	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2889	sequencer.c	FUNCTION_83
0x8f9f	          0x8945fc	                mov dword [rbp - 4], eax	      2889	sequencer.c	FUNCTION_83
0x8fa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fa6	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8faa	          0x8b45fc	                mov eax, dword [rbp - 4]	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fad	          0x4863d0	                         movsxd rdx, eax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fb0	          0x4889d0	                            mov rax, rdx	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fb3	          0x4801c0	                            add rax, rax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fb6	          0x4801d0	                            add rax, rdx	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fb9	        0x48c1e004	                              shl rax, 4	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fbd	          0x4801c8	                            add rax, rcx	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fc0	            0x8b00	                    mov eax, dword [rax]	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fc2	            0x89c7	                            mov edi, eax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fc4	      0xe889acffff	                       call sym.is_fixup	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fc9	            0x85c0	                           test eax, eax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fcb	            0x7564	                           jne 0x4009071	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x8fcd	      0xb800000000	                              mov eax, 0	      2892	sequencer.c	FUNCTION_83	IF_1
0x8fd2	            0xeb75	                           jmp 0x4009089	      2892	sequencer.c	FUNCTION_83	IF_1
0x8fd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fd8	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fdc	          0x8b45fc	                mov eax, dword [rbp - 4]	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fdf	          0x4863d0	                         movsxd rdx, eax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fe2	          0x4889d0	                            mov rax, rdx	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fe5	          0x4801c0	                            add rax, rax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fe8	          0x4801d0	                            add rax, rdx	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8feb	        0x48c1e004	                              shl rax, 4	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fef	          0x4801c8	                            add rax, rcx	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8ff2	            0x8b00	                    mov eax, dword [rax]	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8ff4	            0x89c7	                            mov edi, eax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8ff6	      0xe857acffff	                       call sym.is_fixup	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8ffb	            0x85c0	                           test eax, eax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8ffd	            0x7407	                            je 0x4009046	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x8fff	      0xb800000000	                              mov eax, 0	      2896	sequencer.c	FUNCTION_83	WHILE_1	IF_2
0x9004	            0xeb43	                           jmp 0x4009089	      2896	sequencer.c	FUNCTION_83	WHILE_1	IF_2
0x9006	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x900a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x900e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9011	          0x4863d0	                         movsxd rdx, eax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9014	          0x4889d0	                            mov rax, rdx	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9017	          0x4801c0	                            add rax, rax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x901a	          0x4801d0	                            add rax, rdx	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x901d	        0x48c1e004	                              shl rax, 4	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9021	          0x4801c8	                            add rax, rcx	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9024	            0x8b00	                    mov eax, dword [rax]	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9026	            0x89c7	                            mov edi, eax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9028	      0xe812acffff	                        call sym.is_noop	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x902d	            0x85c0	                           test eax, eax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x902f	            0x7412	                            je 0x4009083	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x9031	        0x8345fc01	                  add dword [rbp - 4], 1	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x9035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x9039	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x903c	          0x3945fc	                cmp dword [rbp - 4], eax	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x903f	            0x7c93	                            jl 0x4009014	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x9041	            0xeb01	                           jmp 0x4009084	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x9043	              0x90	                                     nop	      2898	sequencer.c	FUNCTION_83	ELSE_1	IF_3
0x9044	      0xb801000000	                              mov eax, 1	      2899	sequencer.c	FUNCTION_83
0x9049	              0xc9	                                   leave	      2900	sequencer.c	FUNCTION_83
0x904a	              0xc3	                                     ret	      2900	sequencer.c	FUNCTION_83
strbuf_addch	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,2	33
0x1c7	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_110
0x1c8	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_110
0x1cb	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_110
0x1cf	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_110
0x1d3	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_110
0x1d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x1da	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x1dd	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x1e2	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x1e5	            0x7511	                           jne 0x4000238	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x1e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x1eb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x1f0	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_110	CALL_2
0x1f3	      0xe800000000	                          call 0x4000238	       228	strbuf.h	FUNCTION_110	CALL_2
0x1f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_110
0x1fc	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_110
0x200	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_110
0x204	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_110
0x208	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_110
0x20c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_110
0x210	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_110
0x214	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_110
0x217	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_110
0x21a	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_110
0x21c	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_110
0x220	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_110
0x224	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_110
0x228	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_110
0x22c	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_110
0x22f	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_110
0x232	              0x90	                                     nop	       231	strbuf.h	FUNCTION_110
0x233	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_110
0x234	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_110
sequencer_add_exec_commands	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,13	113
0xcc46	              0x55	                                push rbp	      3972	sequencer.c	FUNCTION_98
0xcc47	          0x4889e5	                            mov rbp, rsp	      3972	sequencer.c	FUNCTION_98
0xcc4a	    0x4881eca00000	                           sub rsp, 0xa0	      3972	sequencer.c	FUNCTION_98
0xcc51	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      3972	sequencer.c	FUNCTION_98
0xcc58	    0x64488b042528	                mov rax, qword fs:[0x28]	      3972	sequencer.c	FUNCTION_98
0xcc61	        0x488945f8	                mov qword [rbp - 8], rax	      3972	sequencer.c	FUNCTION_98
0xcc65	            0x31c0	                            xor eax, eax	      3972	sequencer.c	FUNCTION_98
0xcc67	      0xe8c339ffff	               call sym.rebase_path_todo	      3973	sequencer.c	FUNCTION_98	CALL_1
0xcc6c	        0x48894588	             mov qword [rbp - 0x78], rax	      3973	sequencer.c	FUNCTION_98	CALL_1
0xcc70	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3974	sequencer.c	FUNCTION_98
0xcc74	      0xb800000000	                              mov eax, 0	      3974	sequencer.c	FUNCTION_98
0xcc79	      0xb90b000000	                            mov ecx, 0xb	      3974	sequencer.c	FUNCTION_98
0xcc7e	          0x4889d7	                            mov rdi, rdx	      3974	sequencer.c	FUNCTION_98
0xcc81	          0xf348ab	              rep stosq qword [rdi], rax	      3974	sequencer.c	FUNCTION_98
0xcc84	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      3974	sequencer.c	FUNCTION_98
0xcc8c	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3976	sequencer.c	FUNCTION_98
0xcc90	        0x48894590	             mov qword [rbp - 0x70], rax	      3976	sequencer.c	FUNCTION_98
0xcc94	    0x48c745800000	               mov qword [rbp - 0x80], 0	      3977	sequencer.c	FUNCTION_98	CALL_2
0xcc9c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3977	sequencer.c	FUNCTION_98	CALL_2
0xcca3	          0x4889c7	                            mov rdi, rax	      3977	sequencer.c	FUNCTION_98	CALL_2
0xcca6	      0xe800000000	                          call 0x400cceb	      3977	sequencer.c	FUNCTION_98	CALL_2
0xccab	        0x48894598	             mov qword [rbp - 0x68], rax	      3977	sequencer.c	FUNCTION_98	CALL_2
0xccaf	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xccb3	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xccb7	      0xba00000000	                              mov edx, 0	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xccbc	          0x4889ce	                            mov rsi, rcx	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xccbf	          0x4889c7	                            mov rdi, rax	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xccc2	      0xe800000000	                          call 0x400cd07	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xccc7	          0x4885c0	                           test rax, rax	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xccca	            0x792b	                           jns 0x400cd37	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0xcccc	      0xbf00000000	                              mov edi, 0	      3981	sequencer.c	FUNCTION_98	CALL_5
0xccd1	      0xe89136ffff	                               call sym.	      3981	sequencer.c	FUNCTION_98	CALL_5
0xccd6	          0x4889c2	                            mov rdx, rax	      3981	sequencer.c	FUNCTION_98	CALL_5
0xccd9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3981	sequencer.c	FUNCTION_98	CALL_5
0xccdd	          0x4889c6	                            mov rsi, rax	      3981	sequencer.c	FUNCTION_98	CALL_5
0xcce0	          0x4889d7	                            mov rdi, rdx	      3981	sequencer.c	FUNCTION_98	CALL_5
0xcce3	      0xb800000000	                              mov eax, 0	      3981	sequencer.c	FUNCTION_98	CALL_5
0xcce8	      0xe800000000	                          call 0x400cd2d	      3981	sequencer.c	FUNCTION_98	CALL_5
0xcced	      0xe80e33ffff	                    call sym.const_error	      3981	sequencer.c	FUNCTION_98	CALL_5
0xccf2	      0xe92e010000	                           jmp 0x400ce65	      3981	sequencer.c	FUNCTION_98	CALL_5
0xccf7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_6
0xccfb	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_6
0xccff	          0x4889d6	                            mov rsi, rdx	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_6
0xcd02	          0x4889c7	                            mov rdi, rax	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_6
0xcd05	      0xe8ea8bffff	              call sym.parse_insn_buffer	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_6
0xcd0a	            0x85c0	                           test eax, eax	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_6
0xcd0c	            0x7437	                            je 0x400cd85	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_6
0xcd0e	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_7
0xcd12	          0x4889c7	                            mov rdi, rax	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_7
0xcd15	      0xe85886ffff	              call sym.todo_list_release	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_7
0xcd1a	      0xbf00000000	                              mov edi, 0	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd1f	      0xe84336ffff	                               call sym.	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd24	          0x4889c2	                            mov rdx, rax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd27	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd2b	          0x4889c6	                            mov rsi, rax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd2e	          0x4889d7	                            mov rdi, rdx	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd31	      0xb800000000	                              mov eax, 0	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd36	      0xe800000000	                          call 0x400cd7b	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd3b	      0xe8c032ffff	                    call sym.const_error	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd40	      0xe9e0000000	                           jmp 0x400ce65	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_9
0xcd45	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      3988	sequencer.c	FUNCTION_98
0xcd4f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcd53	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcd5a	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcd64	            0xeb61	                           jmp 0x400ce07	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcd66	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcd6d	            0x8b00	                    mov eax, dword [rax]	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcd6f	            0x85c0	                           test eax, eax	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcd71	            0x753b	                           jne 0x400cdee	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcd73	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcd7a	            0x7532	                           jne 0x400cdee	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcd7c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcd83	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcd87	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcd8b	        0x488d3402	                    lea rsi, [rdx + rax]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcd8f	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcd93	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcd9a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcd9e	          0x4889c7	                            mov rdi, rax	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcda1	      0xe800000000	                          call 0x400cde6	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_10
0xcda6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3994	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcdaa	        0x48014580	            add qword [rbp - 0x80], rax 	      3994	sequencer.c	FUNCTION_98	FOR_1	IF_3
0xcdae	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      3996	sequencer.c	FUNCTION_98	FOR_1
0xcdb8	    0x838570ffffff	               add dword [rbp - 0x90], 1	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcdbf	    0x48838578ffff	           add qword [rbp - 0x88], 0x30 	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcdc7	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcdca	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcdd0	            0x7f94	                            jg 0x400cda6	      3990	sequencer.c	FUNCTION_98	FOR_1
0xcdd2	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4000	sequencer.c	FUNCTION_98	CALL_11
0xcdd6	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      4000	sequencer.c	FUNCTION_98	CALL_11
0xcddd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4000	sequencer.c	FUNCTION_98	CALL_11
0xcde1	          0x4889ce	                            mov rsi, rcx	      4000	sequencer.c	FUNCTION_98	CALL_11
0xcde4	          0x4889c7	                            mov rdi, rax	      4000	sequencer.c	FUNCTION_98	CALL_11
0xcde7	      0xe800000000	                          call 0x400ce2c	      4000	sequencer.c	FUNCTION_98	CALL_11
0xcdec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4002	sequencer.c	FUNCTION_98	CALL_12
0xcdf0	        0x488b7008	                mov rsi, qword [rax + 8]	      4002	sequencer.c	FUNCTION_98	CALL_12
0xcdf4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4002	sequencer.c	FUNCTION_98	CALL_12
0xcdf8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4002	sequencer.c	FUNCTION_98	CALL_12
0xcdfc	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4002	sequencer.c	FUNCTION_98	CALL_12
0xce00	      0xb900000000	                              mov ecx, 0	      4002	sequencer.c	FUNCTION_98	CALL_12
0xce05	          0x4889c7	                            mov rdi, rax	      4002	sequencer.c	FUNCTION_98	CALL_12
0xce08	      0xe89844ffff	                  call sym.write_message	      4002	sequencer.c	FUNCTION_98	CALL_12
0xce0d	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      4002	sequencer.c	FUNCTION_98	CALL_12
0xce13	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4003	sequencer.c	FUNCTION_98	CALL_13
0xce17	          0x4889c7	                            mov rdi, rax	      4003	sequencer.c	FUNCTION_98	CALL_13
0xce1a	      0xe85385ffff	              call sym.todo_list_release	      4003	sequencer.c	FUNCTION_98	CALL_13
0xce1f	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      4004	sequencer.c	FUNCTION_98
0xce25	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4005	sequencer.c	FUNCTION_98
0xce29	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4005	sequencer.c	FUNCTION_98
0xce32	            0x7405	                            je 0x400ce79	      4005	sequencer.c	FUNCTION_98
0xce34	      0xe800000000	                          call 0x400ce79	      4005	sequencer.c	FUNCTION_98
0xce39	              0xc9	                                   leave	      4005	sequencer.c	FUNCTION_98
0xce3a	              0xc3	                                     ret	      4005	sequencer.c	FUNCTION_98
sequencer_pick_revisions	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,1:IF,11:WHILE,0:CALL,29	222
0xaea3	              0x55	                                push rbp	      3434	sequencer.c	FUNCTION_92
0xaea4	          0x4889e5	                            mov rbp, rsp	      3434	sequencer.c	FUNCTION_92
0xaea7	              0x53	                                push rbx	      3434	sequencer.c	FUNCTION_92
0xaea8	    0x4881ecb80000	                           sub rsp, 0xb8	      3434	sequencer.c	FUNCTION_92
0xaeaf	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      3434	sequencer.c	FUNCTION_92
0xaeb6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	sequencer.c	FUNCTION_92
0xaebf	        0x488945e8	             mov qword [rbp - 0x18], rax	      3434	sequencer.c	FUNCTION_92
0xaec3	            0x31c0	                            xor eax, eax	      3434	sequencer.c	FUNCTION_92
0xaec5	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3435	sequencer.c	FUNCTION_92
0xaecc	      0xb800000000	                              mov eax, 0	      3435	sequencer.c	FUNCTION_92
0xaed1	      0xb90b000000	                            mov ecx, 0xb	      3435	sequencer.c	FUNCTION_92
0xaed6	          0x4889d7	                            mov rdi, rdx	      3435	sequencer.c	FUNCTION_92
0xaed9	          0xf348ab	              rep stosq qword [rdi], rax	      3435	sequencer.c	FUNCTION_92
0xaedc	    0x48c745800000	               mov qword [rbp - 0x80], 0	      3435	sequencer.c	FUNCTION_92
0xaee4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaeeb	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaef2	          0x4885c0	                           test rax, rax	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaef5	            0x7519	                           jne 0x400af50	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaef7	      0xb900000000	                              mov ecx, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaefc	      0xba6f0d0000	                          mov edx, 0xd6f	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaf01	      0xbe00000000	                              mov esi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaf06	      0xbf00000000	                              mov edi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaf0b	      0xe800000000	                          call 0x400af50	      3439	sequencer.c	FUNCTION_92	CALL_1
0xaf10	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0xaf17	          0x4889c7	                            mov rdi, rax	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0xaf1a	      0xe82da3ffff	         call sym.read_and_refresh_cache	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0xaf1f	            0x85c0	                           test eax, eax	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0xaf21	            0x740a	                            je 0x400af6d	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0xaf23	      0xb8ffffffff	                     mov eax, 0xffffffff	      3441	sequencer.c	FUNCTION_92	IF_1
0xaf28	      0xe941030000	                           jmp 0x400b2ae	      3441	sequencer.c	FUNCTION_92	IF_1
0xaf2d	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      3443	sequencer.c	FUNCTION_92	FOR_1
0xaf37	      0xe90b010000	                           jmp 0x400b087	      3443	sequencer.c	FUNCTION_92	FOR_1
0xaf3c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf43	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf4a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf4e	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf54	          0x4863d2	                         movsxd rdx, edx	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf57	        0x48c1e205	                              shl rdx, 5	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf5b	          0x4801d0	                            add rax, rdx	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf5e	        0x488b4008	                mov rax, qword [rax + 8]	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf62	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      3445	sequencer.c	FUNCTION_92	FOR_1
0xaf69	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0xaf70	           0xfb600	                   movzx eax, byte [rax]	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0xaf73	            0x84c0	                             test al, al	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0xaf75	     0xf84c4000000	                            je 0x400b07f	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0xaf7b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0xaf7f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0xaf86	          0x4889d6	                            mov rsi, rdx	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0xaf89	          0x4889c7	                            mov rdi, rax	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0xaf8c	      0xe800000000	                          call 0x400afd1	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0xaf91	            0x85c0	                           test eax, eax	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0xaf93	            0x757c	                           jne 0x400b051	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0xaf95	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0xaf99	      0xbe01000000	                              mov esi, 1	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0xaf9e	          0x4889c7	                            mov rdi, rax	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0xafa1	      0xe800000000	                          call 0x400afe6	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0xafa6	          0x4885c0	                           test rax, rax	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0xafa9	     0xf8591000000	                           jne 0x400b080	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0xafaf	    0x488b05000000	            mov rax, qword [0x0400aff6] 	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0xafb6	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0xafba	      0xba00000000	                              mov edx, 0	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0xafbf	          0x4889ce	                            mov rsi, rcx	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0xafc2	          0x4889c7	                            mov rdi, rax	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0xafc5	      0xe800000000	                          call 0x400b00a	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0xafca	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0xafd0	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xafd6	            0x89c7	                            mov edi, eax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xafd8	      0xe800000000	                          call 0x400b01d	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xafdd	          0x4889c3	                            mov rbx, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xafe0	      0xbf00000000	                              mov edi, 0	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xafe5	      0xe87d53ffff	                               call sym.	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xafea	          0x4889c1	                            mov rcx, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xafed	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xaff4	          0x4889da	                            mov rdx, rbx	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xaff7	          0x4889c6	                            mov rsi, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xaffa	          0x4889cf	                            mov rdi, rcx	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xaffd	      0xb800000000	                              mov eax, 0	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xb002	      0xe800000000	                          call 0x400b047	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xb007	      0xe8f44fffff	                    call sym.const_error	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xb00c	      0xe95d020000	                           jmp 0x400b2ae	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_8
0xb011	      0xbf00000000	                              mov edi, 0	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb016	      0xe84c53ffff	                               call sym.	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb01b	          0x4889c2	                            mov rdx, rax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb01e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb025	          0x4889c6	                            mov rsi, rax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb028	          0x4889d7	                            mov rdi, rdx	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb02b	      0xb800000000	                              mov eax, 0	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb030	      0xe800000000	                          call 0x400b075	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb035	      0xe8c64fffff	                    call sym.const_error	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb03a	      0xe92f020000	                           jmp 0x400b2ae	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_11
0xb03f	              0x90	                                     nop	      3449	sequencer.c	FUNCTION_92	FOR_1	IF_2
0xb040	    0x838554ffffff	               add dword [rbp - 0xac], 1	      3443	sequencer.c	FUNCTION_92	FOR_1
0xb047	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3443	sequencer.c	FUNCTION_92	FOR_1
0xb04e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3443	sequencer.c	FUNCTION_92	FOR_1
0xb055	          0x8b5008	                mov edx, dword [rax + 8]	      3443	sequencer.c	FUNCTION_92	FOR_1
0xb058	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      3443	sequencer.c	FUNCTION_92	FOR_1
0xb05e	            0x39c2	                            cmp edx, eax	      3443	sequencer.c	FUNCTION_92	FOR_1
0xb060	     0xf87d6feffff	                            ja 0x400af7c	      3443	sequencer.c	FUNCTION_92	FOR_1
0xb066	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3470	sequencer.c	FUNCTION_92	IF_5
0xb06d	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3470	sequencer.c	FUNCTION_92	IF_5
0xb074	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3470	sequencer.c	FUNCTION_92	IF_5
0xb077	          0x83f801	                              cmp eax, 1	      3470	sequencer.c	FUNCTION_92	IF_5
0xb07a	     0xf850c010000	                           jne 0x400b1cc	      3470	sequencer.c	FUNCTION_92	IF_5
0xb080	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3471	sequencer.c	FUNCTION_92	IF_5
0xb087	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3471	sequencer.c	FUNCTION_92	IF_5
0xb08e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3471	sequencer.c	FUNCTION_92	IF_5
0xb092	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3471	sequencer.c	FUNCTION_92	IF_5
0xb095	          0x83f805	                              cmp eax, 5	      3470	sequencer.c	FUNCTION_92	IF_5
0xb098	     0xf85ee000000	                           jne 0x400b1cc	      3470	sequencer.c	FUNCTION_92	IF_5
0xb09e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3472	sequencer.c	FUNCTION_92	IF_5
0xb0a5	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3472	sequencer.c	FUNCTION_92	IF_5
0xb0ac	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      3471	sequencer.c	FUNCTION_92	IF_5
0xb0b0	          0x83e030	                           and eax, 0x30	      3471	sequencer.c	FUNCTION_92	IF_5
0xb0b3	            0x84c0	                             test al, al	      3471	sequencer.c	FUNCTION_92	IF_5
0xb0b5	     0xf84d1000000	                            je 0x400b1cc	      3471	sequencer.c	FUNCTION_92	IF_5
0xb0bb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3473	sequencer.c	FUNCTION_92	IF_5
0xb0c2	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3473	sequencer.c	FUNCTION_92	IF_5
0xb0c9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3473	sequencer.c	FUNCTION_92	IF_5
0xb0cd	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3473	sequencer.c	FUNCTION_92	IF_5
0xb0d0	            0x85c0	                           test eax, eax	      3472	sequencer.c	FUNCTION_92	IF_5
0xb0d2	     0xf85b4000000	                           jne 0x400b1cc	      3472	sequencer.c	FUNCTION_92	IF_5
0xb0d8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_12
0xb0df	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_12
0xb0e6	          0x4889c7	                            mov rdi, rax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_12
0xb0e9	      0xe800000000	                          call 0x400b12e	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_12
0xb0ee	            0x85c0	                           test eax, eax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_12
0xb0f0	            0x7421	                            je 0x400b153	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_12
0xb0f2	      0xbf00000000	                              mov edi, 0	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_14
0xb0f7	      0xe86b52ffff	                               call sym.	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_14
0xb0fc	          0x4889c7	                            mov rdi, rax	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_14
0xb0ff	      0xb800000000	                              mov eax, 0	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_14
0xb104	      0xe800000000	                          call 0x400b149	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_14
0xb109	      0xe8f24effff	                    call sym.const_error	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_14
0xb10e	      0xe95b010000	                           jmp 0x400b2ae	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_14
0xb113	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_15
0xb11a	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_15
0xb121	          0x4889c7	                            mov rdi, rax	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_15
0xb124	      0xe800000000	                          call 0x400b169	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_15
0xb129	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_15
0xb130	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb138	            0x741b	                            je 0x400b195	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb13a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb141	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb148	          0x4889c7	                            mov rdi, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb14b	      0xe800000000	                          call 0x400b190	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb150	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb153	            0x7419	                            je 0x400b1ae	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_16
0xb155	      0xbf00000000	                              mov edi, 0	      3479	sequencer.c	FUNCTION_92	IF_5	CALL_17
0xb15a	      0xb800000000	                              mov eax, 0	      3479	sequencer.c	FUNCTION_92	IF_5	CALL_17
0xb15f	      0xe800000000	                          call 0x400b1a4	      3479	sequencer.c	FUNCTION_92	IF_5	CALL_17
0xb164	      0xe8974effff	                    call sym.const_error	      3479	sequencer.c	FUNCTION_92	IF_5	CALL_17
0xb169	      0xe900010000	                           jmp 0x400b2ae	      3479	sequencer.c	FUNCTION_92	IF_5	CALL_17
0xb16e	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_18
0xb175	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_18
0xb17c	          0x4889d6	                            mov rsi, rdx	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_18
0xb17f	          0x4889c7	                            mov rdi, rax	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_18
0xb182	      0xe8c9fcffff	                    call sym.single_pick	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_18
0xb187	      0xe9e2000000	                           jmp 0x400b2ae	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_18
0xb18c	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb193	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb19a	          0x4889d6	                            mov rsi, rdx	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb19d	          0x4889c7	                            mov rdi, rax	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb1a0	      0xe8beb6ffff	        call sym.walk_revs_populate_todo	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb1a5	            0x85c0	                           test eax, eax	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb1a7	            0x7509	                           jne 0x400b1f2	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb1a9	      0xe81eb8ffff	                 call sym.create_seq_dir	      3490	sequencer.c	FUNCTION_92	IF_8	CALL_20
0xb1ae	            0x85c0	                           test eax, eax	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb1b0	            0x790a	                           jns 0x400b1fc	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_19
0xb1b2	      0xb8ffffffff	                     mov eax, 0xffffffff	      3491	sequencer.c	FUNCTION_92	IF_8
0xb1b7	      0xe9b2000000	                           jmp 0x400b2ae	      3491	sequencer.c	FUNCTION_92	IF_8
0xb1bc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1c0	          0x4889c6	                            mov rsi, rax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1c3	      0xbf00000000	                              mov edi, 0	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1c8	      0xe800000000	                          call 0x400b20d	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1cd	            0x85c0	                           test eax, eax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1cf	            0x742b	                            je 0x400b23c	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1d1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1d8	            0x8b00	                    mov eax, dword [rax]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1da	            0x85c0	                           test eax, eax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1dc	            0x751e	                           jne 0x400b23c	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_21
0xb1de	      0xbf00000000	                              mov edi, 0	      3493	sequencer.c	FUNCTION_92	CALL_23
0xb1e3	      0xe87f51ffff	                               call sym.	      3493	sequencer.c	FUNCTION_92	CALL_23
0xb1e8	          0x4889c7	                            mov rdi, rax	      3493	sequencer.c	FUNCTION_92	CALL_23
0xb1eb	      0xb800000000	                              mov eax, 0	      3493	sequencer.c	FUNCTION_92	CALL_23
0xb1f0	      0xe800000000	                          call 0x400b235	      3493	sequencer.c	FUNCTION_92	CALL_23
0xb1f5	      0xe8064effff	                    call sym.const_error	      3493	sequencer.c	FUNCTION_92	CALL_23
0xb1fa	            0xeb72	                           jmp 0x400b2ae	      3493	sequencer.c	FUNCTION_92	CALL_23
0xb1fc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_25
0xb200	          0x4889c7	                            mov rdi, rax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_25
0xb203	      0xe800000000	                          call 0x400b248	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_25
0xb208	          0x4889c7	                            mov rdi, rax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_25
0xb20b	      0xe85bb8ffff	                      call sym.save_head	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_25
0xb210	            0x85c0	                           test eax, eax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_25
0xb212	            0x7407	                            je 0x400b25b	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_25
0xb214	      0xb8ffffffff	                     mov eax, 0xffffffff	      3495	sequencer.c	FUNCTION_92	IF_10
0xb219	            0xeb53	                           jmp 0x400b2ae	      3495	sequencer.c	FUNCTION_92	IF_10
0xb21b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_26
0xb222	          0x4889c7	                            mov rdi, rax	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_26
0xb225	      0xe8c1c0ffff	                      call sym.save_opts	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_26
0xb22a	            0x85c0	                           test eax, eax	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_26
0xb22c	            0x7407	                            je 0x400b275	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_26
0xb22e	      0xb8ffffffff	                     mov eax, 0xffffffff	      3497	sequencer.c	FUNCTION_92	IF_11
0xb233	            0xeb39	                           jmp 0x400b2ae	      3497	sequencer.c	FUNCTION_92	IF_11
0xb235	      0xe8e763ffff	       call sym.update_abort_safety_file	      3498	sequencer.c	FUNCTION_92	CALL_27
0xb23a	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3499	sequencer.c	FUNCTION_92	CALL_28
0xb241	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3499	sequencer.c	FUNCTION_92	CALL_28
0xb248	          0x4889d6	                            mov rsi, rdx	      3499	sequencer.c	FUNCTION_92	CALL_28
0xb24b	          0x4889c7	                            mov rdi, rax	      3499	sequencer.c	FUNCTION_92	CALL_28
0xb24e	      0xe87fe2ffff	                   call sym.pick_commits	      3499	sequencer.c	FUNCTION_92	CALL_28
0xb253	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3499	sequencer.c	FUNCTION_92	CALL_28
0xb259	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3500	sequencer.c	FUNCTION_92	CALL_29
0xb260	          0x4889c7	                            mov rdi, rax	      3500	sequencer.c	FUNCTION_92	CALL_29
0xb263	      0xe80aa1ffff	              call sym.todo_list_release	      3500	sequencer.c	FUNCTION_92	CALL_29
0xb268	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      3501	sequencer.c	FUNCTION_92
0xb26e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3502	sequencer.c	FUNCTION_92
0xb272	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3502	sequencer.c	FUNCTION_92
0xb27b	            0x7405	                            je 0x400b2c2	      3502	sequencer.c	FUNCTION_92
0xb27d	      0xe800000000	                          call 0x400b2c2	      3502	sequencer.c	FUNCTION_92
0xb282	    0x4881c4b80000	                           add rsp, 0xb8	      3502	sequencer.c	FUNCTION_92
0xb289	              0x5b	                                 pop rbx	      3502	sequencer.c	FUNCTION_92
0xb28a	              0x5d	                                 pop rbp	      3502	sequencer.c	FUNCTION_92
0xb28b	              0xc3	                                     ret	      3502	sequencer.c	FUNCTION_92
empty_tree	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	9
0x1568	              0x55	                                push rbp	       425	sequencer.c	FUNCTION_16
0x1569	          0x4889e5	                            mov rbp, rsp	       425	sequencer.c	FUNCTION_16
0x156c	    0x488b05000000	            mov rax, qword [0x040015b3] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x1573	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x1577	        0x488b4038	            mov rax, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x157b	          0x4889c7	                            mov rdi, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x157e	      0xe800000000	                          call 0x40015c3	       426	sequencer.c	FUNCTION_16	CALL_1
0x1583	              0x5d	                                 pop rbp	       427	sequencer.c	FUNCTION_16
0x1584	              0xc3	                                     ret	       427	sequencer.c	FUNCTION_16
append_signoff	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,3:IF,8:WHILE,0:CALL,13	145
0xb28c	              0x55	                                push rbp	      3505	sequencer.c	FUNCTION_93
0xb28d	          0x4889e5	                            mov rbp, rsp	      3505	sequencer.c	FUNCTION_93
0xb290	              0x53	                                push rbx	      3505	sequencer.c	FUNCTION_93
0xb291	        0x4883ec58	                           sub rsp, 0x58	      3505	sequencer.c	FUNCTION_93
0xb295	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3505	sequencer.c	FUNCTION_93
0xb299	          0x8975a4	             mov dword [rbp - 0x5c], esi	      3505	sequencer.c	FUNCTION_93
0xb29c	          0x8955a0	             mov dword [rbp - 0x60], edx	      3505	sequencer.c	FUNCTION_93
0xb29f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3505	sequencer.c	FUNCTION_93
0xb2a8	        0x488945e8	             mov qword [rbp - 0x18], rax	      3505	sequencer.c	FUNCTION_93
0xb2ac	            0x31c0	                            xor eax, eax	      3505	sequencer.c	FUNCTION_93
0xb2ae	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      3506	sequencer.c	FUNCTION_93
0xb2b1	          0x83e001	                              and eax, 1	      3506	sequencer.c	FUNCTION_93
0xb2b4	          0x8945bc	             mov dword [rbp - 0x44], eax	      3506	sequencer.c	FUNCTION_93
0xb2b7	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      3507	sequencer.c	FUNCTION_93
0xb2bf	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3507	sequencer.c	FUNCTION_93
0xb2c7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3507	sequencer.c	FUNCTION_93
0xb2cf	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3510	sequencer.c	FUNCTION_93	CALL_1
0xb2d3	      0xbe00000000	                              mov esi, 0	      3510	sequencer.c	FUNCTION_93	CALL_1
0xb2d8	          0x4889c7	                            mov rdi, rax	      3510	sequencer.c	FUNCTION_93	CALL_1
0xb2db	      0xe8554fffff	                  call sym.strbuf_addstr	      3510	sequencer.c	FUNCTION_93	CALL_1
0xb2e0	      0xbf00000000	                              mov edi, 0	      3512	sequencer.c	FUNCTION_93	CALL_5
0xb2e5	      0xe800000000	                          call 0x400b32a	      3512	sequencer.c	FUNCTION_93	CALL_5
0xb2ea	          0x4889c3	                            mov rbx, rax	      3512	sequencer.c	FUNCTION_93	CALL_5
0xb2ed	      0xbf00000000	                              mov edi, 0	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb2f2	      0xe800000000	                          call 0x400b337	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb2f7	          0x4889de	                            mov rsi, rbx	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb2fa	          0x4889c7	                            mov rdi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb2fd	      0xe800000000	                          call 0x400b342	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb302	          0x4889c2	                            mov rdx, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb305	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb309	          0x4889d6	                            mov rsi, rdx	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb30c	          0x4889c7	                            mov rdi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb30f	      0xe8214fffff	                  call sym.strbuf_addstr	      3511	sequencer.c	FUNCTION_93	CALL_4
0xb314	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3513	sequencer.c	FUNCTION_93	CALL_6
0xb318	      0xbe0a000000	                            mov esi, 0xa	      3513	sequencer.c	FUNCTION_93	CALL_6
0xb31d	          0x4889c7	                            mov rdi, rax	      3513	sequencer.c	FUNCTION_93	CALL_6
0xb320	      0xe8a24effff	                   call sym.strbuf_addch	      3513	sequencer.c	FUNCTION_93	CALL_6
0xb325	        0x837da400	               cmp dword [rbp - 0x5c], 0	      3515	sequencer.c	FUNCTION_93	IF_1
0xb329	            0x750c	                           jne 0x400b377	      3515	sequencer.c	FUNCTION_93	IF_1
0xb32b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3516	sequencer.c	FUNCTION_93	CALL_7
0xb32f	          0x4889c7	                            mov rdi, rax	      3516	sequencer.c	FUNCTION_93	CALL_7
0xb332	      0xe8854fffff	           call sym.strbuf_complete_line	      3516	sequencer.c	FUNCTION_93	CALL_7
0xb337	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3522	sequencer.c	FUNCTION_93	IF_2
0xb33b	        0x488b5008	                mov rdx, qword [rax + 8]	      3522	sequencer.c	FUNCTION_93	IF_2
0xb33f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3522	sequencer.c	FUNCTION_93	IF_2
0xb342	            0x4898	                                    cdqe	      3522	sequencer.c	FUNCTION_93	IF_2
0xb344	          0x4829c2	                            sub rdx, rax	      3522	sequencer.c	FUNCTION_93	IF_2
0xb347	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3522	sequencer.c	FUNCTION_93	IF_2
0xb34b	          0x4839c2	                            cmp rdx, rax	      3522	sequencer.c	FUNCTION_93	IF_2
0xb34e	            0x7528	                           jne 0x400b3b8	      3522	sequencer.c	FUNCTION_93	IF_2
0xb350	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0xb354	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0xb358	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0xb35c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0xb360	          0x4889ce	                            mov rsi, rcx	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0xb363	          0x4889c7	                            mov rdi, rax	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0xb366	      0xe800000000	                          call 0x400b3ab	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0xb36b	            0x85c0	                           test eax, eax	      3522	sequencer.c	FUNCTION_93	IF_2
0xb36d	            0x7509	                           jne 0x400b3b8	      3522	sequencer.c	FUNCTION_93	IF_2
0xb36f	    0xc745b8030000	               mov dword [rbp - 0x48], 3	      3524	sequencer.c	FUNCTION_93	IF_2
0xb376	            0xeb19	                           jmp 0x400b3d1	      3524	sequencer.c	FUNCTION_93	IF_2
0xb378	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      3526	sequencer.c	FUNCTION_93	CALL_9
0xb37b	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      3526	sequencer.c	FUNCTION_93	CALL_9
0xb37f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3526	sequencer.c	FUNCTION_93	CALL_9
0xb383	          0x4889ce	                            mov rsi, rcx	      3526	sequencer.c	FUNCTION_93	CALL_9
0xb386	          0x4889c7	                            mov rdi, rax	      3526	sequencer.c	FUNCTION_93	CALL_9
0xb389	      0xe86759ffff	          call sym.has_conforming_footer	      3526	sequencer.c	FUNCTION_93	CALL_9
0xb38e	          0x8945b8	             mov dword [rbp - 0x48], eax	      3526	sequencer.c	FUNCTION_93	CALL_9
0xb391	        0x837db800	               cmp dword [rbp - 0x48], 0	      3528	sequencer.c	FUNCTION_93	IF_3
0xb395	     0xf85a7000000	                           jne 0x400b482	      3528	sequencer.c	FUNCTION_93	IF_3
0xb39b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3529	sequencer.c	FUNCTION_93	IF_3
0xb3a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3530	sequencer.c	FUNCTION_93	IF_3
0xb3a7	        0x488b5008	                mov rdx, qword [rax + 8]	      3530	sequencer.c	FUNCTION_93	IF_3
0xb3ab	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3530	sequencer.c	FUNCTION_93	IF_3
0xb3ae	            0x4898	                                    cdqe	      3530	sequencer.c	FUNCTION_93	IF_3
0xb3b0	          0x4829c2	                            sub rdx, rax	      3530	sequencer.c	FUNCTION_93	IF_3
0xb3b3	          0x4889d0	                            mov rax, rdx	      3530	sequencer.c	FUNCTION_93	IF_3
0xb3b6	        0x488945c8	             mov qword [rbp - 0x38], rax	      3530	sequencer.c	FUNCTION_93	IF_3
0xb3ba	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0xb3bf	            0x750a	                           jne 0x400b40b	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0xb3c1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0xb3c9	            0xeb33	                           jmp 0x400b43e	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0xb3cb	      0x48837dc801	               cmp qword [rbp - 0x38], 1	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0xb3d0	            0x750a	                           jne 0x400b41c	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0xb3d2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0xb3da	            0xeb22	                           jmp 0x400b43e	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0xb3dc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3e0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3e4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3e8	        0x4883ea02	                              sub rdx, 2	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3ec	          0x4801d0	                            add rax, rdx	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3ef	           0xfb600	                   movzx eax, byte [rax]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3f2	            0x3c0a	                             cmp al, 0xa	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3f4	            0x7408	                            je 0x400b43e	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3f6	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3550	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0xb3fe	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3553	sequencer.c	FUNCTION_93	IF_3	IF_7
0xb403	            0x743d	                            je 0x400b482	      3553	sequencer.c	FUNCTION_93	IF_3	IF_7
0xb405	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb409	          0x4889c7	                            mov rdi, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb40c	      0xe800000000	                          call 0x400b451	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb411	          0x4889c1	                            mov rcx, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb414	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb418	        0x488b5008	                mov rdx, qword [rax + 8]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb41c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb41f	            0x4898	                                    cdqe	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb421	          0x4889d6	                            mov rsi, rdx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb424	          0x4829c6	                            sub rsi, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb427	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb42b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb42f	          0x4989c8	                             mov r8, rcx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb432	          0x4889d1	                            mov rcx, rdx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb435	      0xba00000000	                              mov edx, 0	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb43a	          0x4889c7	                            mov rdi, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb43d	      0xe800000000	                          call 0x400b482	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0xb442	        0x837db803	               cmp dword [rbp - 0x48], 3	      3558	sequencer.c	FUNCTION_93	IF_8
0xb446	            0x743b	                            je 0x400b4c3	      3558	sequencer.c	FUNCTION_93	IF_8
0xb448	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3558	sequencer.c	FUNCTION_93	IF_8
0xb44c	            0x7406	                            je 0x400b494	      3558	sequencer.c	FUNCTION_93	IF_8
0xb44e	        0x837db802	               cmp dword [rbp - 0x48], 2	      3558	sequencer.c	FUNCTION_93	IF_8
0xb452	            0x742f	                            je 0x400b4c3	      3558	sequencer.c	FUNCTION_93	IF_8
0xb454	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb458	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3560	sequencer.c	FUNCTION_93	IF_8
0xb45c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb460	        0x488b7008	                mov rsi, qword [rax + 8]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb464	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb467	            0x4898	                                    cdqe	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb469	          0x4829c6	                            sub rsi, rax	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb46c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb470	          0x4989c8	                             mov r8, rcx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb473	          0x4889d1	                            mov rcx, rdx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb476	      0xba00000000	                              mov edx, 0	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb47b	          0x4889c7	                            mov rdi, rax	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb47e	      0xe800000000	                          call 0x400b4c3	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0xb483	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3562	sequencer.c	FUNCTION_93	CALL_13
0xb487	          0x4889c7	                            mov rdi, rax	      3562	sequencer.c	FUNCTION_93	CALL_13
0xb48a	      0xe800000000	                          call 0x400b4cf	      3562	sequencer.c	FUNCTION_93	CALL_13
0xb48f	              0x90	                                     nop	      3563	sequencer.c	FUNCTION_93
0xb490	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3563	sequencer.c	FUNCTION_93
0xb494	    0x644833042528	                xor rax, qword fs:[0x28]	      3563	sequencer.c	FUNCTION_93
0xb49d	            0x7405	                            je 0x400b4e4	      3563	sequencer.c	FUNCTION_93
0xb49f	      0xe800000000	                          call 0x400b4e4	      3563	sequencer.c	FUNCTION_93
0xb4a4	        0x4883c458	                           add rsp, 0x58	      3563	sequencer.c	FUNCTION_93
0xb4a8	              0x5b	                                 pop rbx	      3563	sequencer.c	FUNCTION_93
0xb4a9	              0x5d	                                 pop rbp	      3563	sequencer.c	FUNCTION_93
0xb4aa	              0xc3	                                     ret	      3563	sequencer.c	FUNCTION_93
do_exec	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,4:WHILE,0:CALL,16	102
0x7ace	              0x55	                                push rbp	      2500	sequencer.c	FUNCTION_78
0x7acf	          0x4889e5	                            mov rbp, rsp	      2500	sequencer.c	FUNCTION_78
0x7ad2	              0x53	                                push rbx	      2500	sequencer.c	FUNCTION_78
0x7ad3	        0x4883ec58	                           sub rsp, 0x58	      2500	sequencer.c	FUNCTION_78
0x7ad7	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2500	sequencer.c	FUNCTION_78
0x7adb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2500	sequencer.c	FUNCTION_78
0x7ae4	        0x488945e8	             mov qword [rbp - 0x18], rax	      2500	sequencer.c	FUNCTION_78
0x7ae8	            0x31c0	                            xor eax, eax	      2500	sequencer.c	FUNCTION_78
0x7aea	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2501	sequencer.c	FUNCTION_78
0x7af2	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2501	sequencer.c	FUNCTION_78
0x7af9	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2501	sequencer.c	FUNCTION_78
0x7b00	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2502	sequencer.c	FUNCTION_78
0x7b08	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2502	sequencer.c	FUNCTION_78
0x7b10	    0x488b05000000	            mov rax, qword [0x04007b57] 	      2505	sequencer.c	FUNCTION_78	CALL_1
0x7b17	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2505	sequencer.c	FUNCTION_78	CALL_1
0x7b1b	      0xbe00000000	                              mov esi, 0	      2505	sequencer.c	FUNCTION_78	CALL_1
0x7b20	          0x4889c7	                            mov rdi, rax	      2505	sequencer.c	FUNCTION_78	CALL_1
0x7b23	      0xb800000000	                              mov eax, 0	      2505	sequencer.c	FUNCTION_78	CALL_1
0x7b28	      0xe800000000	                          call 0x4007b6d	      2505	sequencer.c	FUNCTION_78	CALL_1
0x7b2d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2506	sequencer.c	FUNCTION_78
0x7b31	        0x488945d0	             mov qword [rbp - 0x30], rax	      2506	sequencer.c	FUNCTION_78
0x7b35	      0xe800000000	                          call 0x4007b7a	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b3a	          0x4889c7	                            mov rdi, rax	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b3d	      0xe800000000	                          call 0x4007b82	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b42	          0x4889c2	                            mov rdx, rax	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b45	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b49	      0xbe00000000	                              mov esi, 0	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b4e	          0x4889c7	                            mov rdi, rax	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b51	      0xb800000000	                              mov eax, 0	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b56	      0xe800000000	                          call 0x4007b9b	      2507	sequencer.c	FUNCTION_78	CALL_4
0x7b5b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2509	sequencer.c	FUNCTION_78
0x7b5f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2508	sequencer.c	FUNCTION_78	CALL_5
0x7b63	          0x4889d1	                            mov rcx, rdx	      2508	sequencer.c	FUNCTION_78	CALL_5
0x7b66	      0xba00000000	                              mov edx, 0	      2508	sequencer.c	FUNCTION_78	CALL_5
0x7b6b	      0xbe10000000	                           mov esi, 0x10	      2508	sequencer.c	FUNCTION_78	CALL_5
0x7b70	          0x4889c7	                            mov rdi, rax	      2508	sequencer.c	FUNCTION_78	CALL_5
0x7b73	      0xe800000000	                          call 0x4007bb8	      2508	sequencer.c	FUNCTION_78	CALL_5
0x7b78	          0x8945b8	             mov dword [rbp - 0x48], eax	      2508	sequencer.c	FUNCTION_78	CALL_5
0x7b7b	      0xbf00000000	                              mov edi, 0	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b80	      0xe800000000	                          call 0x4007bc5	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b85	            0x85c0	                           test eax, eax	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b87	            0x780e	                            js 0x4007bd7	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b89	      0xbf00000000	                              mov edi, 0	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b8e	      0xe800000000	                          call 0x4007bd3	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b93	            0x85c0	                           test eax, eax	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b95	            0x7921	                           jns 0x4007bf8	      2512	sequencer.c	FUNCTION_78	IF_1	CALL_7
0x7b97	      0xbf00000000	                              mov edi, 0	      2513	sequencer.c	FUNCTION_78	CALL_9
0x7b9c	      0xe8c687ffff	                               call sym.	      2513	sequencer.c	FUNCTION_78	CALL_9
0x7ba1	          0x4889c7	                            mov rdi, rax	      2513	sequencer.c	FUNCTION_78	CALL_9
0x7ba4	      0xb800000000	                              mov eax, 0	      2513	sequencer.c	FUNCTION_78	CALL_9
0x7ba9	      0xe800000000	                          call 0x4007bee	      2513	sequencer.c	FUNCTION_78	CALL_9
0x7bae	      0xe84d84ffff	                    call sym.const_error	      2513	sequencer.c	FUNCTION_78	CALL_9
0x7bb3	      0xe9a4000000	                           jmp 0x4007c9c	      2513	sequencer.c	FUNCTION_78	CALL_9
0x7bb8	      0xb901000000	                              mov ecx, 1	      2515	sequencer.c	FUNCTION_78	CALL_10
0x7bbd	      0xba01000000	                              mov edx, 1	      2515	sequencer.c	FUNCTION_78	CALL_10
0x7bc2	      0xbe00000000	                              mov esi, 0	      2515	sequencer.c	FUNCTION_78	CALL_10
0x7bc7	      0xbf00000000	                              mov edi, 0	      2515	sequencer.c	FUNCTION_78	CALL_10
0x7bcc	      0xe800000000	                          call 0x4007c11	      2515	sequencer.c	FUNCTION_78	CALL_10
0x7bd1	          0x8945bc	             mov dword [rbp - 0x44], eax	      2515	sequencer.c	FUNCTION_78	CALL_10
0x7bd4	        0x837db800	               cmp dword [rbp - 0x48], 0	      2517	sequencer.c	FUNCTION_78	IF_2
0x7bd8	            0x7445	                            je 0x4007c5f	      2517	sequencer.c	FUNCTION_78	IF_2
0x7bda	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7bde	            0x7407	                            je 0x4007c27	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7be0	      0xbb00000000	                              mov ebx, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7be5	            0xeb05	                           jmp 0x4007c2c	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7be7	      0xbb00000000	                              mov ebx, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7bec	      0xbf00000000	                              mov edi, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7bf1	      0xe87187ffff	                               call sym.	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7bf6	          0x4889c1	                            mov rcx, rax	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7bf9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7bfd	          0x4889da	                            mov rdx, rbx	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7c00	          0x4889c6	                            mov rsi, rax	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7c03	          0x4889cf	                            mov rdi, rcx	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7c06	      0xb800000000	                              mov eax, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7c0b	      0xe800000000	                          call 0x4007c50	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_12
0x7c10	        0x837db87f	           cmp dword [rbp - 0x48], 0x7f 	      2526	sequencer.c	FUNCTION_78	IF_2	IF_3
0x7c14	            0x7537	                           jne 0x4007c8d	      2526	sequencer.c	FUNCTION_78	IF_2	IF_3
0x7c16	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2528	sequencer.c	FUNCTION_78	IF_2	IF_3
0x7c1d	            0xeb2e	                           jmp 0x4007c8d	      2528	sequencer.c	FUNCTION_78	IF_2	IF_3
0x7c1f	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2529	sequencer.c	FUNCTION_78	ELSE_1	IF_4
0x7c23	            0x7428	                            je 0x4007c8d	      2529	sequencer.c	FUNCTION_78	ELSE_1	IF_4
0x7c25	      0xbf00000000	                              mov edi, 0	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c2a	      0xe83887ffff	                               call sym.	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c2f	          0x4889c2	                            mov rdx, rax	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c32	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c36	          0x4889c6	                            mov rsi, rax	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c39	          0x4889d7	                            mov rdi, rdx	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c3c	      0xb800000000	                              mov eax, 0	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c41	      0xe800000000	                          call 0x4007c86	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_15
0x7c46	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2536	sequencer.c	FUNCTION_78	ELSE_1	IF_4
0x7c4d	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2539	sequencer.c	FUNCTION_78	CALL_16
0x7c51	          0x4889c7	                            mov rdi, rax	      2539	sequencer.c	FUNCTION_78	CALL_16
0x7c54	      0xe800000000	                          call 0x4007c99	      2539	sequencer.c	FUNCTION_78	CALL_16
0x7c59	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2541	sequencer.c	FUNCTION_78
0x7c5c	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2542	sequencer.c	FUNCTION_78
0x7c60	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2542	sequencer.c	FUNCTION_78
0x7c69	            0x7405	                            je 0x4007cb0	      2542	sequencer.c	FUNCTION_78
0x7c6b	      0xe800000000	                          call 0x4007cb0	      2542	sequencer.c	FUNCTION_78
0x7c70	        0x4883c458	                           add rsp, 0x58	      2542	sequencer.c	FUNCTION_78
0x7c74	              0x5b	                                 pop rbx	      2542	sequencer.c	FUNCTION_78
0x7c75	              0x5d	                                 pop rbp	      2542	sequencer.c	FUNCTION_78
0x7c76	              0xc3	                                     ret	      2542	sequencer.c	FUNCTION_78
get_item_line	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,1	19
0x5b2f	              0x55	                                push rbp	      1942	sequencer.c	FUNCTION_57
0x5b30	          0x4889e5	                            mov rbp, rsp	      1942	sequencer.c	FUNCTION_57
0x5b33	              0x53	                                push rbx	      1942	sequencer.c	FUNCTION_57
0x5b34	        0x4883ec10	                           sub rsp, 0x10	      1942	sequencer.c	FUNCTION_57
0x5b38	        0x48897df0	             mov qword [rbp - 0x10], rdi	      1942	sequencer.c	FUNCTION_57
0x5b3c	          0x8975ec	             mov dword [rbp - 0x14], esi	      1942	sequencer.c	FUNCTION_57
0x5b3f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b43	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b47	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b4e	            0x89d6	                            mov esi, edx	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b50	          0x4889c7	                            mov rdi, rax	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b53	      0xe892ffffff	           call sym.get_item_line_offset	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b58	            0x4898	                                    cdqe	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b5a	          0x4801d8	                            add rax, rbx	      1943	sequencer.c	FUNCTION_57	CALL_1
0x5b5d	        0x4883c410	                           add rsp, 0x10	      1944	sequencer.c	FUNCTION_57
0x5b61	              0x5b	                                 pop rbx	      1944	sequencer.c	FUNCTION_57
0x5b62	              0x5d	                                 pop rbp	      1944	sequencer.c	FUNCTION_57
0x5b63	              0xc3	                                     ret	      1944	sequencer.c	FUNCTION_57
parse_head	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,4:WHILE,0:CALL,11	71
0x328d	              0x55	                                push rbp	      1071	sequencer.c	FUNCTION_36
0x328e	          0x4889e5	                            mov rbp, rsp	      1071	sequencer.c	FUNCTION_36
0x3291	              0x53	                                push rbx	      1071	sequencer.c	FUNCTION_36
0x3292	        0x4883ec48	                           sub rsp, 0x48	      1071	sequencer.c	FUNCTION_36
0x3296	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1071	sequencer.c	FUNCTION_36
0x329a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1071	sequencer.c	FUNCTION_36
0x32a3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1071	sequencer.c	FUNCTION_36
0x32a7	            0x31c0	                            xor eax, eax	      1071	sequencer.c	FUNCTION_36
0x32a9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x32ad	          0x4889c6	                            mov rsi, rax	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x32b0	      0xbf00000000	                              mov edi, 0	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x32b5	      0xe800000000	                          call 0x40032fa	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x32ba	            0x85c0	                           test eax, eax	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x32bc	            0x740d	                            je 0x400330b	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x32be	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1076	sequencer.c	FUNCTION_36	IF_1
0x32c6	      0xe9aa000000	                           jmp 0x40033b5	      1076	sequencer.c	FUNCTION_36	IF_1
0x32cb	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x32cf	          0x4889c7	                            mov rdi, rax	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x32d2	      0xe800000000	                          call 0x4003317	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x32d7	        0x488945c8	             mov qword [rbp - 0x38], rax	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x32db	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x32e0	            0x7521	                           jne 0x4003343	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x32e2	      0xbf00000000	                              mov edi, 0	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_4
0x32e7	      0xe87bd0ffff	                               call sym.	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_4
0x32ec	          0x4889c7	                            mov rdi, rax	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_4
0x32ef	      0xb800000000	                              mov eax, 0	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_4
0x32f4	      0xe800000000	                          call 0x4003339	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_4
0x32f9	      0xe802cdffff	                    call sym.const_error	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_4
0x32fe	      0xe982000000	                           jmp 0x40033c5	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_4
0x3303	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x3307	        0x488d5004	                      lea rdx, [rax + 4]	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x330b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x330f	          0x4889d6	                            mov rsi, rdx	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x3312	          0x4889c7	                            mov rdi, rax	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x3315	      0xe8a3d0ffff	                         call sym.oidcmp	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x331a	            0x85c0	                           test eax, eax	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x331c	            0x7429	                            je 0x4003387	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_5
0x331e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x3322	          0x4889c7	                            mov rdi, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x3325	      0xe800000000	                          call 0x400336a	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x332a	          0x4889c3	                            mov rbx, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x332d	      0xbf00000000	                              mov edi, 0	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x3332	      0xe830d0ffff	                               call sym.	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x3337	          0x4889de	                            mov rsi, rbx	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x333a	          0x4889c7	                            mov rdi, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x333d	      0xb800000000	                              mov eax, 0	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x3342	      0xe800000000	                          call 0x4003387	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_7
0x3347	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_9
0x334b	          0x4889c7	                            mov rdi, rax	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_9
0x334e	      0xe874d1ffff	                   call sym.parse_commit	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_9
0x3353	            0x85c0	                           test eax, eax	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_9
0x3355	            0x741e	                            je 0x40033b5	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_9
0x3357	      0xbf00000000	                              mov edi, 0	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_11
0x335c	      0xe806d0ffff	                               call sym.	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_11
0x3361	          0x4889c7	                            mov rdi, rax	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_11
0x3364	      0xb800000000	                              mov eax, 0	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_11
0x3369	      0xe800000000	                          call 0x40033ae	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_11
0x336e	      0xe88dccffff	                    call sym.const_error	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_11
0x3373	            0xeb10	                           jmp 0x40033c5	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_11
0x3375	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1088	sequencer.c	FUNCTION_36
0x3379	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1088	sequencer.c	FUNCTION_36
0x337d	          0x488910	                    mov qword [rax], rdx	      1088	sequencer.c	FUNCTION_36
0x3380	      0xb800000000	                              mov eax, 0	      1090	sequencer.c	FUNCTION_36
0x3385	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1091	sequencer.c	FUNCTION_36
0x3389	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1091	sequencer.c	FUNCTION_36
0x3392	            0x7405	                            je 0x40033d9	      1091	sequencer.c	FUNCTION_36
0x3394	      0xe800000000	                          call 0x40033d9	      1091	sequencer.c	FUNCTION_36
0x3399	        0x4883c448	                           add rsp, 0x48	      1091	sequencer.c	FUNCTION_36
0x339d	              0x5b	                                 pop rbx	      1091	sequencer.c	FUNCTION_36
0x339e	              0x5d	                                 pop rbp	      1091	sequencer.c	FUNCTION_36
0x339f	              0xc3	                                     ret	      1091	sequencer.c	FUNCTION_36
print_commit_summary	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,9:WHILE,0:CALL,39	238
0x2dc8	              0x55	                                push rbp	       994	sequencer.c	FUNCTION_35
0x2dc9	          0x4889e5	                            mov rbp, rsp	       994	sequencer.c	FUNCTION_35
0x2dcc	    0x4881ec100a00	                          sub rsp, 0xa10	       994	sequencer.c	FUNCTION_35
0x2dd3	    0x4889bd08f6ff	            mov qword [rbp - 0x9f8], rdi	       994	sequencer.c	FUNCTION_35
0x2dda	    0x4889b500f6ff	            mov qword [rbp - 0xa00], rsi	       994	sequencer.c	FUNCTION_35
0x2de1	    0x8995fcf5ffff	            mov dword [rbp - 0xa04], edx	       994	sequencer.c	FUNCTION_35
0x2de7	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	sequencer.c	FUNCTION_35
0x2df0	        0x488945f8	                mov qword [rbp - 8], rax	       994	sequencer.c	FUNCTION_35
0x2df4	            0x31c0	                            xor eax, eax	       994	sequencer.c	FUNCTION_35
0x2df6	    0x48c78520f6ff	              mov qword [rbp - 0x9e0], 0	       997	sequencer.c	FUNCTION_35
0x2e01	    0x48c78528f6ff	              mov qword [rbp - 0x9d8], 0	       997	sequencer.c	FUNCTION_35
0x2e0c	    0x48c78530f6ff	              mov qword [rbp - 0x9d0], 0	       997	sequencer.c	FUNCTION_35
0x2e17	    0x488d95a0f6ff	                  lea rdx, [rbp - 0x960]	       999	sequencer.c	FUNCTION_35
0x2e1e	      0xb800000000	                              mov eax, 0	       999	sequencer.c	FUNCTION_35
0x2e23	      0xb914000000	                           mov ecx, 0x14	       999	sequencer.c	FUNCTION_35
0x2e28	          0x4889d7	                            mov rdi, rdx	       999	sequencer.c	FUNCTION_35
0x2e2b	          0xf348ab	              rep stosq qword [rdi], rax	       999	sequencer.c	FUNCTION_35
0x2e2e	    0x48c78540f6ff	              mov qword [rbp - 0x9c0], 0	      1000	sequencer.c	FUNCTION_35
0x2e39	    0x48c78548f6ff	              mov qword [rbp - 0x9b8], 0	      1000	sequencer.c	FUNCTION_35
0x2e44	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	      1000	sequencer.c	FUNCTION_35
0x2e4f	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	      1001	sequencer.c	FUNCTION_35
0x2e5a	    0x48c78568f6ff	              mov qword [rbp - 0x998], 0	      1001	sequencer.c	FUNCTION_35
0x2e65	    0x48c78570f6ff	              mov qword [rbp - 0x990], 0	      1001	sequencer.c	FUNCTION_35
0x2e70	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1003	sequencer.c	FUNCTION_35	CALL_1
0x2e77	          0x4889c7	                            mov rdi, rax	      1003	sequencer.c	FUNCTION_35	CALL_1
0x2e7a	      0xe800000000	                          call 0x4002ebf	      1003	sequencer.c	FUNCTION_35	CALL_1
0x2e7f	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	      1003	sequencer.c	FUNCTION_35	CALL_1
0x2e86	    0x4883bd18f6ff	              cmp qword [rbp - 0x9e8], 0	      1004	sequencer.c	FUNCTION_35	IF_1
0x2e8e	            0x7517	                           jne 0x4002ee7	      1004	sequencer.c	FUNCTION_35	IF_1
0x2e90	      0xbf00000000	                              mov edi, 0	      1005	sequencer.c	FUNCTION_35	CALL_3
0x2e95	      0xe8cdd4ffff	                               call sym.	      1005	sequencer.c	FUNCTION_35	CALL_3
0x2e9a	          0x4889c7	                            mov rdi, rax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x2e9d	      0xb800000000	                              mov eax, 0	      1005	sequencer.c	FUNCTION_35	CALL_3
0x2ea2	      0xe800000000	                          call 0x4002ee7	      1005	sequencer.c	FUNCTION_35	CALL_3
0x2ea7	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x2eae	          0x4889c7	                            mov rdi, rax	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x2eb1	      0xe811d6ffff	                   call sym.parse_commit	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x2eb6	            0x85c0	                           test eax, eax	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x2eb8	            0x7417	                            je 0x4002f11	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x2eba	      0xbf00000000	                              mov edi, 0	      1007	sequencer.c	FUNCTION_35	CALL_6
0x2ebf	      0xe8a3d4ffff	                               call sym.	      1007	sequencer.c	FUNCTION_35	CALL_6
0x2ec4	          0x4889c7	                            mov rdi, rax	      1007	sequencer.c	FUNCTION_35	CALL_6
0x2ec7	      0xb800000000	                              mov eax, 0	      1007	sequencer.c	FUNCTION_35	CALL_6
0x2ecc	      0xe800000000	                          call 0x4002f11	      1007	sequencer.c	FUNCTION_35	CALL_6
0x2ed1	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1009	sequencer.c	FUNCTION_35	CALL_7
0x2ed8	      0xbe00000000	                              mov esi, 0	      1009	sequencer.c	FUNCTION_35	CALL_7
0x2edd	          0x4889c7	                            mov rdi, rax	      1009	sequencer.c	FUNCTION_35	CALL_7
0x2ee0	      0xe850d3ffff	                  call sym.strbuf_addstr	      1009	sequencer.c	FUNCTION_35	CALL_7
0x2ee5	    0x488d8da0f6ff	                  lea rcx, [rbp - 0x960]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x2eec	    0x488d9540f6ff	                  lea rdx, [rbp - 0x9c0]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x2ef3	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x2efa	      0xbe00000000	                              mov esi, 0	      1011	sequencer.c	FUNCTION_35	CALL_8
0x2eff	          0x4889c7	                            mov rdi, rax	      1011	sequencer.c	FUNCTION_35	CALL_8
0x2f02	      0xe800000000	                          call 0x4002f47	      1011	sequencer.c	FUNCTION_35	CALL_8
0x2f07	    0x488d8da0f6ff	                  lea rcx, [rbp - 0x960]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x2f0e	    0x488d9560f6ff	                  lea rdx, [rbp - 0x9a0]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x2f15	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x2f1c	      0xbe00000000	                              mov esi, 0	      1012	sequencer.c	FUNCTION_35	CALL_9
0x2f21	          0x4889c7	                            mov rdi, rax	      1012	sequencer.c	FUNCTION_35	CALL_9
0x2f24	      0xe800000000	                          call 0x4002f69	      1012	sequencer.c	FUNCTION_35	CALL_9
0x2f29	    0x488d9560f6ff	                  lea rdx, [rbp - 0x9a0]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x2f30	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x2f37	          0x4889d6	                            mov rsi, rdx	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x2f3a	          0x4889c7	                            mov rdi, rax	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x2f3d	      0xe800000000	                          call 0x4002f82	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x2f42	            0x85c0	                           test eax, eax	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x2f44	            0x742d	                            je 0x4002fb3	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x2f46	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x2f4d	      0xbe00000000	                              mov esi, 0	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x2f52	          0x4889c7	                            mov rdi, rax	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x2f55	      0xe8dbd2ffff	                  call sym.strbuf_addstr	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x2f5a	    0x488d9540f6ff	                  lea rdx, [rbp - 0x9c0]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x2f61	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x2f68	          0x4889d6	                            mov rsi, rdx	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x2f6b	          0x4889c7	                            mov rdi, rax	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x2f6e	      0xe800000000	                          call 0x4002fb3	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x2f73	    0x8b85fcf5ffff	            mov eax, dword [rbp - 0xa04]	      1017	sequencer.c	FUNCTION_35	IF_4
0x2f79	          0x83e002	                              and eax, 2	      1017	sequencer.c	FUNCTION_35	IF_4
0x2f7c	            0x85c0	                           test eax, eax	      1017	sequencer.c	FUNCTION_35	IF_4
0x2f7e	            0x747f	                            je 0x400303f	      1017	sequencer.c	FUNCTION_35	IF_4
0x2f80	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x2f8b	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x2f96	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x2fa1	    0x488d8da0f6ff	                  lea rcx, [rbp - 0x960]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x2fa8	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x2faf	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x2fb6	      0xbe00000000	                              mov esi, 0	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x2fbb	          0x4889c7	                            mov rdi, rax	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x2fbe	      0xe800000000	                          call 0x4003003	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x2fc3	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x2fca	      0xbe00000000	                              mov esi, 0	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x2fcf	          0x4889c7	                            mov rdi, rax	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x2fd2	      0xe85ed2ffff	                  call sym.strbuf_addstr	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x2fd7	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x2fde	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x2fe5	          0x4889d6	                            mov rsi, rdx	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x2fe8	          0x4889c7	                            mov rdi, rax	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x2feb	      0xe800000000	                          call 0x4003030	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x2ff0	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x2ff7	          0x4889c7	                            mov rdi, rax	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x2ffa	      0xe800000000	                          call 0x400303f	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x2fff	      0xe800000000	                          call 0x4003044	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x3004	            0x85c0	                           test eax, eax	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x3006	            0x7565	                           jne 0x40030ad	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x3008	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x300f	      0xbe00000000	                              mov esi, 0	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x3014	          0x4889c7	                            mov rdi, rax	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x3017	      0xe819d2ffff	                  call sym.strbuf_addstr	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x301c	    0x488d9560f6ff	                  lea rdx, [rbp - 0x9a0]	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x3023	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x302a	          0x4889d6	                            mov rsi, rdx	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x302d	          0x4889c7	                            mov rdi, rax	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x3030	      0xe800000000	                          call 0x4003075	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x3035	    0x8b0500000000	            mov eax, dword [0x0400307b] 	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x303b	            0x85c0	                           test eax, eax	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x303d	            0x742e	                            je 0x40030ad	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x303f	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x3046	      0xbe0a000000	                            mov esi, 0xa	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x304b	          0x4889c7	                            mov rdi, rax	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x304e	      0xe874d1ffff	                   call sym.strbuf_addch	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x3053	      0xe8e2fcffff	          call sym.implicit_ident_advice	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x3058	          0x4889c2	                            mov rdx, rax	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x305b	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x3062	          0x4889d6	                            mov rsi, rdx	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x3065	          0x4889c7	                            mov rdi, rax	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x3068	      0xe8c8d1ffff	                  call sym.strbuf_addstr	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x306d	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1033	sequencer.c	FUNCTION_35	CALL_23
0x3074	          0x4889c7	                            mov rdi, rax	      1033	sequencer.c	FUNCTION_35	CALL_23
0x3077	      0xe800000000	                          call 0x40030bc	      1033	sequencer.c	FUNCTION_35	CALL_23
0x307c	    0x488d8560f6ff	                  lea rax, [rbp - 0x9a0]	      1034	sequencer.c	FUNCTION_35	CALL_24
0x3083	          0x4889c7	                            mov rdi, rax	      1034	sequencer.c	FUNCTION_35	CALL_24
0x3086	      0xe800000000	                          call 0x40030cb	      1034	sequencer.c	FUNCTION_35	CALL_24
0x308b	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	      1036	sequencer.c	FUNCTION_35	CALL_25
0x3092	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1036	sequencer.c	FUNCTION_35	CALL_25
0x3099	          0x4889d6	                            mov rsi, rdx	      1036	sequencer.c	FUNCTION_35	CALL_25
0x309c	          0x4889c7	                            mov rdi, rax	      1036	sequencer.c	FUNCTION_35	CALL_25
0x309f	      0xe800000000	                          call 0x40030e4	      1036	sequencer.c	FUNCTION_35	CALL_25
0x30a4	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1037	sequencer.c	FUNCTION_35	CALL_26
0x30ab	      0xb900000000	                              mov ecx, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x30b0	          0x4889c2	                            mov rdx, rax	      1037	sequencer.c	FUNCTION_35	CALL_26
0x30b3	      0xbe00000000	                              mov esi, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x30b8	      0xbf00000000	                              mov edi, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x30bd	      0xe800000000	                          call 0x4003102	      1037	sequencer.c	FUNCTION_35	CALL_26
0x30c2	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1039	sequencer.c	FUNCTION_35
0x30c9	          0x83c801	                               or eax, 1	      1039	sequencer.c	FUNCTION_35
0x30cc	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1039	sequencer.c	FUNCTION_35
0x30d2	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x28 	      1040	sequencer.c	FUNCTION_35
0x30dc	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1043	sequencer.c	FUNCTION_35
0x30e3	          0x83c810	                            or eax, 0x10	      1043	sequencer.c	FUNCTION_35
0x30e6	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1043	sequencer.c	FUNCTION_35
0x30ec	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1044	sequencer.c	FUNCTION_35
0x30f3	          0x83c804	                               or eax, 4	      1044	sequencer.c	FUNCTION_35
0x30f6	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1044	sequencer.c	FUNCTION_35
0x30fc	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1045	sequencer.c	FUNCTION_35	CALL_27
0x3103	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	      1045	sequencer.c	FUNCTION_35	CALL_27
0x310a	          0x4889d6	                            mov rsi, rdx	      1045	sequencer.c	FUNCTION_35	CALL_27
0x310d	          0x4889c7	                            mov rdi, rax	      1045	sequencer.c	FUNCTION_35	CALL_27
0x3110	      0xe800000000	                          call 0x4003155	      1045	sequencer.c	FUNCTION_35	CALL_27
0x3115	     0xfb685baf7ff	           movzx eax, byte [rbp - 0x846]	      1046	sequencer.c	FUNCTION_35
0x311c	          0x83e0fe	                     and eax, 0xfffffffe	      1046	sequencer.c	FUNCTION_35
0x311f	    0x8885baf7ffff	              mov byte [rbp - 0x846], al	      1046	sequencer.c	FUNCTION_35
0x3125	    0xc78588fcffff	              mov dword [rbp - 0x378], 1	      1047	sequencer.c	FUNCTION_35
0x312f	    0xc78584fcffff	              mov dword [rbp - 0x37c], 0	      1048	sequencer.c	FUNCTION_35
0x3139	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1049	sequencer.c	FUNCTION_35	CALL_28
0x3140	    0x4805f8040000	                          add rax, 0x4f8	      1049	sequencer.c	FUNCTION_35	CALL_28
0x3146	          0x4889c7	                            mov rdi, rax	      1049	sequencer.c	FUNCTION_35	CALL_28
0x3149	      0xe800000000	                          call 0x400318e	      1049	sequencer.c	FUNCTION_35	CALL_28
0x314e	      0xb900000000	                              mov ecx, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x3153	      0xba00000000	                              mov edx, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x3158	      0xbe00000000	                              mov esi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x315d	      0xbf00000000	                              mov edi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x3162	      0xe800000000	                          call 0x40031a7	      1051	sequencer.c	FUNCTION_35	CALL_29
0x3167	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      1051	sequencer.c	FUNCTION_35	CALL_29
0x316e	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1052	sequencer.c	FUNCTION_35	IF_7
0x3175	          0x4885c0	                           test rax, rax	      1052	sequencer.c	FUNCTION_35	IF_7
0x3178	            0x7517	                           jne 0x40031d1	      1052	sequencer.c	FUNCTION_35	IF_7
0x317a	      0xbf00000000	                              mov edi, 0	      1053	sequencer.c	FUNCTION_35	CALL_31
0x317f	      0xe8e3d1ffff	                               call sym.	      1053	sequencer.c	FUNCTION_35	CALL_31
0x3184	          0x4889c7	                            mov rdi, rax	      1053	sequencer.c	FUNCTION_35	CALL_31
0x3187	      0xb800000000	                              mov eax, 0	      1053	sequencer.c	FUNCTION_35	CALL_31
0x318c	      0xe800000000	                          call 0x40031d1	      1053	sequencer.c	FUNCTION_35	CALL_31
0x3191	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x3198	      0xbe00000000	                              mov esi, 0	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x319d	          0x4889c7	                            mov rdi, rax	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x31a0	      0xe800000000	                          call 0x40031e5	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x31a5	            0x85c0	                           test eax, eax	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x31a7	            0x7513	                           jne 0x40031fc	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x31a9	      0xbf00000000	                              mov edi, 0	      1055	sequencer.c	FUNCTION_35	CALL_33
0x31ae	      0xe8b4d1ffff	                               call sym.	      1055	sequencer.c	FUNCTION_35	CALL_33
0x31b3	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      1055	sequencer.c	FUNCTION_35	CALL_33
0x31ba	            0xeb1b	                           jmp 0x4003217	      1055	sequencer.c	FUNCTION_35	CALL_33
0x31bc	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1057	sequencer.c	FUNCTION_35	CALL_34
0x31c3	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      1057	sequencer.c	FUNCTION_35	CALL_34
0x31ca	      0xbe00000000	                              mov esi, 0	      1057	sequencer.c	FUNCTION_35	CALL_34
0x31cf	          0x4889c7	                            mov rdi, rax	      1057	sequencer.c	FUNCTION_35	CALL_34
0x31d2	      0xe834ceffff	                    call sym.skip_prefix	      1057	sequencer.c	FUNCTION_35	CALL_34
0x31d7	    0x8b85fcf5ffff	            mov eax, dword [rbp - 0xa04]	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31dd	          0x83e001	                              and eax, 1	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31e0	            0x85c0	                           test eax, eax	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31e2	            0x740f	                            je 0x4003233	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31e4	      0xbf00000000	                              mov edi, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31e9	      0xe879d1ffff	                               call sym.	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31ee	          0x4889c2	                            mov rdx, rax	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31f1	            0xeb05	                           jmp 0x4003238	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31f3	      0xba00000000	                              mov edx, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31f8	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1058	sequencer.c	FUNCTION_35	CALL_35
0x31ff	          0x4889c6	                            mov rsi, rax	      1058	sequencer.c	FUNCTION_35	CALL_35
0x3202	      0xbf00000000	                              mov edi, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x3207	      0xb800000000	                              mov eax, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x320c	      0xe800000000	                          call 0x4003251	      1058	sequencer.c	FUNCTION_35	CALL_35
0x3211	    0x488b9518f6ff	            mov rdx, qword [rbp - 0x9e8]	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x3218	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x321f	          0x4889d6	                            mov rsi, rdx	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x3222	          0x4889c7	                            mov rdi, rax	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x3225	      0xe800000000	                          call 0x400326a	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x322a	            0x85c0	                           test eax, eax	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x322c	            0x7539	                           jne 0x40032a7	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x322e	     0xfb685baf7ff	           movzx eax, byte [rbp - 0x846]	      1062	sequencer.c	FUNCTION_35	IF_9
0x3235	          0x83c801	                               or eax, 1	      1062	sequencer.c	FUNCTION_35	IF_9
0x3238	    0x8885baf7ffff	              mov byte [rbp - 0x846], al	      1062	sequencer.c	FUNCTION_35	IF_9
0x323e	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	      1063	sequencer.c	FUNCTION_35	IF_9
0x3245	          0x83c808	                               or eax, 8	      1063	sequencer.c	FUNCTION_35	IF_9
0x3248	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	      1063	sequencer.c	FUNCTION_35	IF_9
0x324e	    0x488b9518f6ff	            mov rdx, qword [rbp - 0x9e8]	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x3255	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x325c	          0x4889d6	                            mov rsi, rdx	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x325f	          0x4889c7	                            mov rdi, rax	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x3262	      0xe800000000	                          call 0x40032a7	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x3267	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1067	sequencer.c	FUNCTION_35	CALL_39
0x326e	          0x4889c7	                            mov rdi, rax	      1067	sequencer.c	FUNCTION_35	CALL_39
0x3271	      0xe800000000	                          call 0x40032b6	      1067	sequencer.c	FUNCTION_35	CALL_39
0x3276	              0x90	                                     nop	      1068	sequencer.c	FUNCTION_35
0x3277	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	sequencer.c	FUNCTION_35
0x327b	    0x644833042528	                xor rax, qword fs:[0x28]	      1068	sequencer.c	FUNCTION_35
0x3284	            0x7405	                            je 0x40032cb	      1068	sequencer.c	FUNCTION_35
0x3286	      0xe800000000	                          call 0x40032cb	      1068	sequencer.c	FUNCTION_35
0x328b	              0xc9	                                   leave	      1068	sequencer.c	FUNCTION_35
0x328c	              0xc3	                                     ret	      1068	sequencer.c	FUNCTION_35
rollback_is_safe	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,2:IF,4:WHILE,0:CALL,16	85
0x6bc6	              0x55	                                push rbp	      2228	sequencer.c	FUNCTION_68
0x6bc7	          0x4889e5	                            mov rbp, rsp	      2228	sequencer.c	FUNCTION_68
0x6bca	              0x53	                                push rbx	      2228	sequencer.c	FUNCTION_68
0x6bcb	        0x4883ec68	                           sub rsp, 0x68	      2228	sequencer.c	FUNCTION_68
0x6bcf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2228	sequencer.c	FUNCTION_68
0x6bd8	        0x488945e8	             mov qword [rbp - 0x18], rax	      2228	sequencer.c	FUNCTION_68
0x6bdc	            0x31c0	                            xor eax, eax	      2228	sequencer.c	FUNCTION_68
0x6bde	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2229	sequencer.c	FUNCTION_68
0x6be6	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2229	sequencer.c	FUNCTION_68
0x6bee	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2229	sequencer.c	FUNCTION_68
0x6bf6	      0xe8d699ffff	     call sym.git_path_abort_safety_file	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6bfb	          0x4889c1	                            mov rcx, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6bfe	        0x488d4590	                   lea rax, [rbp - 0x70]	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6c02	      0xba00000000	                              mov edx, 0	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6c07	          0x4889ce	                            mov rsi, rcx	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6c0a	          0x4889c7	                            mov rdi, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6c0d	      0xe800000000	                          call 0x4006c52	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6c12	          0x4885c0	                           test rax, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6c15	            0x785f	                            js 0x4006cb6	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x6c17	        0x488d4590	                   lea rax, [rbp - 0x70]	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x6c1b	          0x4889c7	                            mov rdi, rax	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x6c1e	      0xe800000000	                          call 0x4006c63	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x6c23	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x6c27	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x6c2b	          0x4889d6	                            mov rsi, rdx	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x6c2e	          0x4889c7	                            mov rdi, rax	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x6c31	      0xe800000000	                          call 0x4006c76	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x6c36	            0x85c0	                           test eax, eax	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x6c38	            0x742e	                            je 0x4006ca8	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x6c3a	        0x488d4590	                   lea rax, [rbp - 0x70]	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x6c3e	          0x4889c7	                            mov rdi, rax	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x6c41	      0xe800000000	                          call 0x4006c86	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x6c46	      0xe88699ffff	     call sym.git_path_abort_safety_file	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c4b	          0x4889c3	                            mov rbx, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c4e	      0xbf00000000	                              mov edi, 0	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c53	      0xe80f97ffff	                               call sym.	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c58	          0x4889de	                            mov rsi, rbx	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c5b	          0x4889c7	                            mov rdi, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c5e	      0xb800000000	                              mov eax, 0	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c63	      0xe800000000	                          call 0x4006ca8	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x6c68	        0x488d4590	                   lea rax, [rbp - 0x70]	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x6c6c	          0x4889c7	                            mov rdi, rax	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x6c6f	      0xe800000000	                          call 0x4006cb4	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x6c74	            0xeb3c	                           jmp 0x4006cf2	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x6c76	      0xe800000000	                          call 0x4006cbb	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c7b	            0x8b00	                    mov eax, dword [rax]	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c7d	          0x83f802	                              cmp eax, 2	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c80	            0x750e	                           jne 0x4006cd0	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c82	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c86	          0x4889c7	                            mov rdi, rax	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c89	      0xe8cc97ffff	                         call sym.oidclr	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c8e	            0xeb22	                           jmp 0x4006cf2	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x6c90	      0xe83c99ffff	     call sym.git_path_abort_safety_file	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6c95	          0x4889c3	                            mov rbx, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6c98	      0xbf00000000	                              mov edi, 0	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6c9d	      0xe8c596ffff	                               call sym.	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6ca2	          0x4889de	                            mov rsi, rbx	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6ca5	          0x4889c7	                            mov rdi, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6ca8	      0xb800000000	                              mov eax, 0	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6cad	      0xe800000000	                          call 0x4006cf2	      2243	sequencer.c	FUNCTION_68	CALL_13
0x6cb2	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x6cb6	          0x4889c6	                            mov rsi, rax	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x6cb9	      0xbf00000000	                              mov edi, 0	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x6cbe	      0xe800000000	                          call 0x4006d03	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x6cc3	            0x85c0	                           test eax, eax	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x6cc5	            0x740c	                            je 0x4006d13	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x6cc7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2246	sequencer.c	FUNCTION_68	CALL_15
0x6ccb	          0x4889c7	                            mov rdi, rax	      2246	sequencer.c	FUNCTION_68	CALL_15
0x6cce	      0xe88797ffff	                         call sym.oidclr	      2246	sequencer.c	FUNCTION_68	CALL_15
0x6cd3	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6cd7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6cdb	          0x4889d6	                            mov rsi, rdx	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6cde	          0x4889c7	                            mov rdi, rax	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6ce1	      0xe8d796ffff	                         call sym.oidcmp	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6ce6	            0x85c0	                           test eax, eax	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6ce8	           0xf94c0	                                 sete al	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6ceb	           0xfb6c0	                           movzx eax, al	      2248	sequencer.c	FUNCTION_68	CALL_16
0x6cee	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2249	sequencer.c	FUNCTION_68
0x6cf2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2249	sequencer.c	FUNCTION_68
0x6cfb	            0x7405	                            je 0x4006d42	      2249	sequencer.c	FUNCTION_68
0x6cfd	      0xe800000000	                          call 0x4006d42	      2249	sequencer.c	FUNCTION_68
0x6d02	        0x4883c468	                           add rsp, 0x68	      2249	sequencer.c	FUNCTION_68
0x6d06	              0x5b	                                 pop rbx	      2249	sequencer.c	FUNCTION_68
0x6d07	              0x5d	                                 pop rbp	      2249	sequencer.c	FUNCTION_68
0x6d08	              0xc3	                                     ret	      2249	sequencer.c	FUNCTION_68
try_to_commit	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,15:WHILE,0:CALL,38	281
0x33a0	              0x55	                                push rbp	      1105	sequencer.c	FUNCTION_37
0x33a1	          0x4889e5	                            mov rbp, rsp	      1105	sequencer.c	FUNCTION_37
0x33a4	              0x53	                                push rbx	      1105	sequencer.c	FUNCTION_37
0x33a5	    0x4881ece80000	                           sub rsp, 0xe8	      1105	sequencer.c	FUNCTION_37
0x33ac	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1105	sequencer.c	FUNCTION_37
0x33b3	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      1105	sequencer.c	FUNCTION_37
0x33ba	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      1105	sequencer.c	FUNCTION_37
0x33c1	    0x898d24ffffff	             mov dword [rbp - 0xdc], ecx	      1105	sequencer.c	FUNCTION_37
0x33c7	    0x4c898518ffff	              mov qword [rbp - 0xe8], r8	      1105	sequencer.c	FUNCTION_37
0x33ce	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	sequencer.c	FUNCTION_37
0x33d7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1105	sequencer.c	FUNCTION_37
0x33db	            0x31c0	                            xor eax, eax	      1105	sequencer.c	FUNCTION_37
0x33dd	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1108	sequencer.c	FUNCTION_37
0x33e8	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      1109	sequencer.c	FUNCTION_37
0x33f3	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1110	sequencer.c	FUNCTION_37
0x33fb	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1110	sequencer.c	FUNCTION_37
0x3403	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1110	sequencer.c	FUNCTION_37
0x340b	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1111	sequencer.c	FUNCTION_37
0x3413	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1111	sequencer.c	FUNCTION_37
0x341b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1111	sequencer.c	FUNCTION_37
0x3423	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      1112	sequencer.c	FUNCTION_37
0x342e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1113	sequencer.c	FUNCTION_37
0x3439	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      1115	sequencer.c	FUNCTION_37
0x3443	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x344a	          0x4889c7	                            mov rdi, rax	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x344d	      0xe83bfeffff	                     call sym.parse_head	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x3452	            0x85c0	                           test eax, eax	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x3454	            0x740a	                            je 0x40034a0	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x3456	      0xb8ffffffff	                     mov eax, 0xffffffff	      1118	sequencer.c	FUNCTION_37	IF_1
0x345b	      0xe95b040000	                           jmp 0x40038fb	      1118	sequencer.c	FUNCTION_37	IF_1
0x3460	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1120	sequencer.c	FUNCTION_37	IF_2
0x3466	          0x83e004	                              and eax, 4	      1120	sequencer.c	FUNCTION_37	IF_2
0x3469	            0x85c0	                           test eax, eax	      1120	sequencer.c	FUNCTION_37	IF_2
0x346b	     0xf8430010000	                            je 0x40035e1	      1120	sequencer.c	FUNCTION_37	IF_2
0x3471	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x3479	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x3481	      0xe800000000	                          call 0x40034c6	      1122	sequencer.c	FUNCTION_37	IF_2	CALL_2
0x3486	        0x48894580	             mov qword [rbp - 0x80], rax	      1122	sequencer.c	FUNCTION_37	IF_2	CALL_2
0x348a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x3491	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x3495	      0xbe00000000	                              mov esi, 0	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x349a	          0x4889c7	                            mov rdi, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x349d	      0xe800000000	                          call 0x40034e2	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x34a2	        0x48894588	             mov qword [rbp - 0x78], rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x34a6	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x34ae	            0x7550	                           jne 0x4003540	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x34b0	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      1127	sequencer.c	FUNCTION_37	IF_2	IF_3
0x34bb	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x34c2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x34c6	          0x4889d6	                            mov rsi, rdx	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x34c9	          0x4889c7	                            mov rdi, rax	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x34cc	      0xe800000000	                          call 0x4003511	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x34d1	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1130	sequencer.c	FUNCTION_37	IF_2	IF_3
0x34d5	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1130	sequencer.c	FUNCTION_37	IF_2	IF_3
0x34dc	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x34e3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x34ea	          0x4889d6	                            mov rsi, rdx	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x34ed	          0x4889c7	                            mov rdi, rax	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x34f0	      0xe840cdffff	                  call sym.strbuf_addstr	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x34f5	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1132	sequencer.c	FUNCTION_37	IF_2	IF_3
0x3500	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x3504	          0x4889c7	                            mov rdi, rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x3507	      0xe802edffff	                     call sym.get_author	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x350c	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x3513	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x351a	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x3521	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x3528	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x352c	          0x4889d6	                            mov rsi, rdx	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x352f	          0x4889c7	                            mov rdi, rax	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x3532	      0xe800000000	                          call 0x4003577	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x3537	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x353f	            0x7527	                           jne 0x40035a8	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x3541	      0xbf00000000	                              mov edi, 0	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x3546	      0xe81cceffff	                               call sym.	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x354b	          0x4889c7	                            mov rdi, rax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x354e	      0xb800000000	                              mov eax, 0	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x3553	      0xe800000000	                          call 0x4003598	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x3558	      0xe8a3caffff	                    call sym.const_error	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x355d	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x3563	      0xe917030000	                           jmp 0x40038bf	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_9
0x3568	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x356f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x3573	          0x4889c7	                            mov rdi, rax	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x3576	      0xe800000000	                          call 0x40035bb	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x357b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x3582	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_11
0x3589	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_11
0x358d	          0x4889d6	                            mov rsi, rdx	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_11
0x3590	          0x4889c7	                            mov rdi, rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_11
0x3593	      0xe800000000	                          call 0x40035d8	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_11
0x3598	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_11
0x359f	            0xeb25	                           jmp 0x4003606	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_11
0x35a1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x35a8	          0x4885c0	                           test rax, rax	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x35ab	            0x7419	                            je 0x4003606	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x35ad	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_12
0x35b4	    0x488d9558ffff	                   lea rdx, [rbp - 0xa8]	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_12
0x35bb	          0x4889d6	                            mov rsi, rdx	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_12
0x35be	          0x4889c7	                            mov rdi, rax	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_12
0x35c1	      0xe800000000	                          call 0x4003606	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_12
0x35c6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x35ca	      0xba00000000	                              mov edx, 0	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x35cf	      0xbe00000000	                              mov esi, 0	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x35d4	          0x4889c7	                            mov rdi, rax	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x35d7	      0xe800000000	                          call 0x400361c	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x35dc	            0x85c0	                           test eax, eax	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x35de	            0x7427	                            je 0x4003647	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x35e0	      0xbf00000000	                              mov edi, 0	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_15
0x35e5	      0xe87dcdffff	                               call sym.	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_15
0x35ea	          0x4889c7	                            mov rdi, rax	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_15
0x35ed	      0xb800000000	                              mov eax, 0	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_15
0x35f2	      0xe800000000	                          call 0x4003637	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_15
0x35f7	      0xe804caffff	                    call sym.const_error	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_15
0x35fc	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_15
0x3602	      0xe978020000	                           jmp 0x40038bf	      1148	sequencer.c	FUNCTION_37	IF_6
0x3607	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x360d	          0x83e001	                              and eax, 1	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3610	            0x85c0	                           test eax, eax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3612	            0x7547	                           jne 0x400369b	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3614	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x361b	          0x4885c0	                           test rax, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x361e	            0x7414	                            je 0x4003674	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3620	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1152	sequencer.c	FUNCTION_37	IF_7	CALL_17
0x3627	          0x4889c7	                            mov rdi, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x362a	      0xe800000000	                          call 0x400366f	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x362f	          0x4889c2	                            mov rdx, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3632	            0xeb05	                           jmp 0x4003679	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3634	      0xba00000000	                              mov edx, 0	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3639	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x363d	          0x4889c6	                            mov rsi, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3640	          0x4889d7	                            mov rdi, rdx	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3643	      0xe875cdffff	                         call sym.oidcmp	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x3648	            0x85c0	                           test eax, eax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x364a	            0x750f	                           jne 0x400369b	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_16
0x364c	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      1154	sequencer.c	FUNCTION_37	IF_7
0x3656	      0xe924020000	                           jmp 0x40038bf	      1155	sequencer.c	FUNCTION_37	IF_7
0x365b	      0xbf00000000	                              mov edi, 0	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_18
0x3660	      0xe800000000	                          call 0x40036a5	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_18
0x3665	          0x4885c0	                           test rax, rax	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_18
0x3668	     0xf848a000000	                            je 0x4003738	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_18
0x366e	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_19
0x3675	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_19
0x367c	          0x4889d6	                            mov rsi, rdx	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_19
0x367f	          0x4889c7	                            mov rdi, rax	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_19
0x3682	      0xe86df5ffff	    call sym.run_prepare_commit_msg_hook	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_19
0x3687	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_19
0x368d	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      1160	sequencer.c	FUNCTION_37	IF_8	IF_9
0x3694	     0xf85e4010000	                           jne 0x40038be	      1160	sequencer.c	FUNCTION_37	IF_8	IF_9
0x369a	      0xe800000000	                          call 0x40036df	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x369f	          0x4889c1	                            mov rcx, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36a2	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36a6	      0xba00080000	                          mov edx, 0x800	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36ab	          0x4889ce	                            mov rsi, rcx	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36ae	          0x4889c7	                            mov rdi, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36b1	      0xe800000000	                          call 0x40036f6	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36b6	          0x4885c0	                           test rax, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36b9	            0x7932	                           jns 0x400372d	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_21
0x36bb	      0xe800000000	                          call 0x4003700	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36c0	          0x4889c3	                            mov rbx, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36c3	      0xbf00000000	                              mov edi, 0	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36c8	      0xe89accffff	                               call sym.	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36cd	          0x4889de	                            mov rsi, rbx	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36d0	          0x4889c7	                            mov rdi, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36d3	      0xb800000000	                              mov eax, 0	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36d8	      0xe800000000	                          call 0x400371d	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36dd	      0xe81ec9ffff	                    call sym.const_error	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36e2	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_23
0x36e8	      0xe992010000	                           jmp 0x40038bf	      1167	sequencer.c	FUNCTION_37	IF_8	IF_10
0x36ed	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1169	sequencer.c	FUNCTION_37	IF_8
0x36f1	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1169	sequencer.c	FUNCTION_37	IF_8
0x36f8	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1172	sequencer.c	FUNCTION_37
0x36fe	          0x83e008	                              and eax, 8	      1172	sequencer.c	FUNCTION_37
0x3701	            0x85c0	                           test eax, eax	      1172	sequencer.c	FUNCTION_37
0x3703	            0x750c	                           jne 0x4003751	      1172	sequencer.c	FUNCTION_37
0x3705	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1172	sequencer.c	FUNCTION_37
0x370c	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1172	sequencer.c	FUNCTION_37
0x370f	            0xeb05	                           jmp 0x4003756	      1172	sequencer.c	FUNCTION_37
0x3711	      0xb803000000	                              mov eax, 3	      1172	sequencer.c	FUNCTION_37
0x3716	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      1172	sequencer.c	FUNCTION_37
0x371c	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 1	      1175	sequencer.c	FUNCTION_37	IF_11
0x3723	            0x741e	                            je 0x4003783	      1175	sequencer.c	FUNCTION_37	IF_11
0x3725	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 3	      1176	sequencer.c	FUNCTION_37	CALL_25
0x372c	           0xf94c0	                                 sete al	      1176	sequencer.c	FUNCTION_37	CALL_25
0x372f	           0xfb6d0	                           movzx edx, al	      1176	sequencer.c	FUNCTION_37	CALL_25
0x3732	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1176	sequencer.c	FUNCTION_37	CALL_25
0x3739	            0x89d6	                            mov esi, edx	      1176	sequencer.c	FUNCTION_37	CALL_25
0x373b	          0x4889c7	                            mov rdi, rax	      1176	sequencer.c	FUNCTION_37	CALL_25
0x373e	      0xe800000000	                          call 0x4003783	      1176	sequencer.c	FUNCTION_37	CALL_25
0x3743	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x374a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x374d	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x374f	            0x752a	                           jne 0x40037bb	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x3751	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x3757	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x375e	            0x89d6	                            mov esi, edx	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x3760	          0x4889c7	                            mov rdi, rax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x3763	      0xe800000000	                          call 0x40037a8	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x3768	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x376a	            0x740f	                            je 0x40037bb	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_26
0x376c	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      1178	sequencer.c	FUNCTION_37	IF_12
0x3776	      0xe904010000	                           jmp 0x40038bf	      1179	sequencer.c	FUNCTION_37	IF_12
0x377b	      0xe800000000	                          call 0x40037c0	      1182	sequencer.c	FUNCTION_37	CALL_27
0x3780	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1185	sequencer.c	FUNCTION_37	IF_13
0x3787	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1185	sequencer.c	FUNCTION_37	IF_13
0x378b	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x3792	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x3799	        0x488b7008	                mov rsi, qword [rax + 8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x379d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37a4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37a8	    0x4c8b8d30ffff	              mov r9, qword [rbp - 0xd0]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37af	    0x4c8b8518ffff	              mov r8, qword [rbp - 0xe8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37b6	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37ba	    0xffb568ffffff	                 push qword [rbp - 0x98]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37c0	              0x57	                                push rdi	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37c1	          0x4889c7	                            mov rdi, rax	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37c4	      0xe800000000	                          call 0x4003809	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37c9	        0x4883c410	                           add rsp, 0x10	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37cd	            0x85c0	                           test eax, eax	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37cf	            0x7427	                            je 0x4003838	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_28
0x37d1	      0xbf00000000	                              mov edi, 0	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_30
0x37d6	      0xe88ccbffff	                               call sym.	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_30
0x37db	          0x4889c7	                            mov rdi, rax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_30
0x37de	      0xb800000000	                              mov eax, 0	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_30
0x37e3	      0xe800000000	                          call 0x4003828	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_30
0x37e8	      0xe813c8ffff	                    call sym.const_error	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_30
0x37ed	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_30
0x37f3	      0xe987000000	                           jmp 0x40038bf	      1187	sequencer.c	FUNCTION_37	IF_13
0x37f8	      0xbf00000000	                              mov edi, 0	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_32
0x37fd	      0xe800000000	                          call 0x4003842	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_32
0x3802	          0x4889c7	                            mov rdi, rax	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_32
0x3805	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x380c	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x3810	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x3817	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x381e	          0x4989c8	                             mov r8, rcx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x3821	          0x4889d1	                            mov rcx, rdx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x3824	          0x4889fa	                            mov rdx, rdi	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x3827	          0x4889c7	                            mov rdi, rax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x382a	      0xe800000000	                          call 0x400386f	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x382f	            0x85c0	                           test eax, eax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x3831	            0x7423	                            je 0x4003896	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_31
0x3833	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1192	sequencer.c	FUNCTION_37	IF_14	CALL_33
0x3837	          0x4889c6	                            mov rsi, rax	      1192	sequencer.c	FUNCTION_37	IF_14	CALL_33
0x383a	      0xbf00000000	                              mov edi, 0	      1192	sequencer.c	FUNCTION_37	IF_14	CALL_33
0x383f	      0xb800000000	                              mov eax, 0	      1192	sequencer.c	FUNCTION_37	IF_14	CALL_33
0x3844	      0xe800000000	                          call 0x4003889	      1192	sequencer.c	FUNCTION_37	IF_14	CALL_33
0x3849	      0xe8b2c7ffff	                    call sym.const_error	      1192	sequencer.c	FUNCTION_37	IF_14	CALL_33
0x384e	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1192	sequencer.c	FUNCTION_37	IF_14	CALL_33
0x3854	            0xeb29	                           jmp 0x40038bf	      1193	sequencer.c	FUNCTION_37	IF_14
0x3856	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1196	sequencer.c	FUNCTION_37	IF_15
0x385c	          0x83e004	                              and eax, 4	      1196	sequencer.c	FUNCTION_37	IF_15
0x385f	            0x85c0	                           test eax, eax	      1196	sequencer.c	FUNCTION_37	IF_15
0x3861	            0x741c	                            je 0x40038bf	      1196	sequencer.c	FUNCTION_37	IF_15
0x3863	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1197	sequencer.c	FUNCTION_37	CALL_34
0x386a	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      1197	sequencer.c	FUNCTION_37	CALL_34
0x3871	          0x4889d6	                            mov rsi, rdx	      1197	sequencer.c	FUNCTION_37	CALL_34
0x3874	          0x4889c7	                            mov rdi, rax	      1197	sequencer.c	FUNCTION_37	CALL_34
0x3877	      0xe800000000	                          call 0x40038bc	      1197	sequencer.c	FUNCTION_37	CALL_34
0x387c	            0xeb01	                           jmp 0x40038bf	      1197	sequencer.c	FUNCTION_37	CALL_34
0x387e	              0x90	                                     nop	      1161	sequencer.c	FUNCTION_37	IF_8	IF_9
0x387f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1200	sequencer.c	FUNCTION_37	CALL_35
0x3886	          0x4889c7	                            mov rdi, rax	      1200	sequencer.c	FUNCTION_37	CALL_35
0x3889	      0xe800000000	                          call 0x40038ce	      1200	sequencer.c	FUNCTION_37	CALL_35
0x388e	        0x488d4590	                   lea rax, [rbp - 0x70]	      1201	sequencer.c	FUNCTION_37	CALL_36
0x3892	          0x4889c7	                            mov rdi, rax	      1201	sequencer.c	FUNCTION_37	CALL_36
0x3895	      0xe800000000	                          call 0x40038da	      1201	sequencer.c	FUNCTION_37	CALL_36
0x389a	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1202	sequencer.c	FUNCTION_37	CALL_37
0x389e	          0x4889c7	                            mov rdi, rax	      1202	sequencer.c	FUNCTION_37	CALL_37
0x38a1	      0xe800000000	                          call 0x40038e6	      1202	sequencer.c	FUNCTION_37	CALL_37
0x38a6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1203	sequencer.c	FUNCTION_37	CALL_38
0x38ad	          0x4889c7	                            mov rdi, rax	      1203	sequencer.c	FUNCTION_37	CALL_38
0x38b0	      0xe800000000	                          call 0x40038f5	      1203	sequencer.c	FUNCTION_37	CALL_38
0x38b5	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1205	sequencer.c	FUNCTION_37
0x38bb	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1206	sequencer.c	FUNCTION_37
0x38bf	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1206	sequencer.c	FUNCTION_37
0x38c8	            0x7405	                            je 0x400390f	      1206	sequencer.c	FUNCTION_37
0x38ca	      0xe800000000	                          call 0x400390f	      1206	sequencer.c	FUNCTION_37
0x38cf	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1206	sequencer.c	FUNCTION_37
0x38d3	              0xc9	                                   leave	      1206	sequencer.c	FUNCTION_37
0x38d4	              0xc3	                                     ret	      1206	sequencer.c	FUNCTION_37
pick_commits	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,9:IF,46:WHILE,1:CALL,124	893
0x94d2	              0x55	                                push rbp	      2989	sequencer.c	FUNCTION_87
0x94d3	          0x4889e5	                            mov rbp, rsp	      2989	sequencer.c	FUNCTION_87
0x94d6	            0x4155	                                push r13	      2989	sequencer.c	FUNCTION_87
0x94d8	            0x4154	                                push r12	      2989	sequencer.c	FUNCTION_87
0x94da	              0x53	                                push rbx	      2989	sequencer.c	FUNCTION_87
0x94db	    0x4881ec580a00	                          sub rsp, 0xa58	      2989	sequencer.c	FUNCTION_87
0x94e2	    0x4889bd98f5ff	            mov qword [rbp - 0xa68], rdi	      2989	sequencer.c	FUNCTION_87
0x94e9	    0x4889b590f5ff	            mov qword [rbp - 0xa70], rsi	      2989	sequencer.c	FUNCTION_87
0x94f0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2989	sequencer.c	FUNCTION_87
0x94f9	        0x488945d8	             mov qword [rbp - 0x28], rax	      2989	sequencer.c	FUNCTION_87
0x94fd	            0x31c0	                            xor eax, eax	      2989	sequencer.c	FUNCTION_87
0x94ff	    0xc785a0f5ffff	              mov dword [rbp - 0xa60], 0	      2990	sequencer.c	FUNCTION_87
0x9509	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 0	      2990	sequencer.c	FUNCTION_87
0x9513	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2992	sequencer.c	FUNCTION_87	CALL_2
0x951a	          0x4889c7	                            mov rdi, rax	      2992	sequencer.c	FUNCTION_87	CALL_2
0x951d	      0xe81d7bffff	                    call sym.action_name	      2992	sequencer.c	FUNCTION_87	CALL_2
0x9522	      0xba00000000	                              mov edx, 0	      2992	sequencer.c	FUNCTION_87	CALL_2
0x9527	          0x4889c6	                            mov rsi, rax	      2992	sequencer.c	FUNCTION_87	CALL_2
0x952a	      0xbf00000000	                              mov edi, 0	      2992	sequencer.c	FUNCTION_87	CALL_2
0x952f	      0xe800000000	                          call 0x4009574	      2992	sequencer.c	FUNCTION_87	CALL_2
0x9534	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2993	sequencer.c	FUNCTION_87	IF_1
0x953b	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2993	sequencer.c	FUNCTION_87	IF_1
0x953e	            0x85c0	                           test eax, eax	      2993	sequencer.c	FUNCTION_87	IF_1
0x9540	            0x7451	                            je 0x40095d3	      2993	sequencer.c	FUNCTION_87	IF_1
0x9542	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9549	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x954c	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x954e	            0x752a	                           jne 0x40095ba	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9550	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9557	          0x8b400c	              mov eax, dword [rax + 0xc]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x955a	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x955c	            0x751c	                           jne 0x40095ba	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x955e	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9565	          0x8b4008	                mov eax, dword [rax + 8]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9568	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x956a	            0x750e	                           jne 0x40095ba	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x956c	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9573	          0x8b4004	                mov eax, dword [rax + 4]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9576	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9578	            0x7419	                            je 0x40095d3	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x957a	      0xb900000000	                              mov ecx, 0	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x957f	      0xbab30b0000	                          mov edx, 0xbb3	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9584	      0xbe00000000	                              mov esi, 0	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9589	      0xbf00000000	                              mov edi, 0	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x958e	      0xe800000000	                          call 0x40095d3	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_3
0x9593	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_4
0x959a	          0x4889c7	                            mov rdi, rax	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_4
0x959d	      0xe8aabcffff	         call sym.read_and_refresh_cache	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_4
0x95a2	            0x85c0	                           test eax, eax	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_4
0x95a4	     0xf8440090000	                            je 0x4009f2a	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_4
0x95aa	      0xb8ffffffff	                     mov eax, 0xffffffff	      2997	sequencer.c	FUNCTION_87	IF_2
0x95af	      0xe9660f0000	                           jmp 0x400a55a	      2997	sequencer.c	FUNCTION_87	IF_2
0x95b4	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95bb	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95bf	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95c6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95c9	          0x4863d0	                         movsxd rdx, eax	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95cc	          0x4889d0	                            mov rax, rdx	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95cf	          0x4801c0	                            add rax, rax	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95d2	          0x4801d0	                            add rax, rdx	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95d5	        0x48c1e004	                              shl rax, 4	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95d9	          0x4801c8	                            add rax, rcx	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95dc	    0x488985b0f5ff	            mov qword [rbp - 0xa50], rax	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x95e3	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_5
0x95ea	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_5
0x95f1	          0x4889d6	                            mov rsi, rdx	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_5
0x95f4	          0x4889c7	                            mov rdi, rax	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_5
0x95f7	      0xe87ddaffff	                      call sym.save_todo	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_5
0x95fc	            0x85c0	                           test eax, eax	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_5
0x95fe	            0x740a	                            je 0x400964a	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_5
0x9600	      0xb8ffffffff	                     mov eax, 0xffffffff	      3002	sequencer.c	FUNCTION_87	WHILE_1	IF_3
0x9605	      0xe9100f0000	                           jmp 0x400a55a	      3002	sequencer.c	FUNCTION_87	WHILE_1	IF_3
0x960a	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_6
0x9611	          0x4889c7	                            mov rdi, rax	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_6
0x9614	      0xe86f76ffff	                    call sym.is_rebase_i	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_6
0x9619	            0x85c0	                           test eax, eax	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_6
0x961b	     0xf8415010000	                            je 0x4009776	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_6
0x9621	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x9628	            0x8b00	                    mov eax, dword [rax]	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x962a	          0x83f80c	                            cmp eax, 0xc	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x962d	     0xf84b6000000	                            je 0x4009729	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x9633	      0xe85570ffff	             call sym.rebase_path_msgnum	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_8
0x9638	      0xbe00000000	                              mov esi, 0	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_8
0x963d	          0x4889c7	                            mov rdi, rax	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_8
0x9640	      0xe800000000	                          call 0x4009685	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_8
0x9645	    0x488985b8f5ff	            mov qword [rbp - 0xa48], rax	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_8
0x964c	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x9653	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x9656	          0x8d5001	                      lea edx, [rax + 1]	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x9659	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x9660	          0x89502c	             mov dword [rax + 0x2c], edx	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x9663	    0x4883bdb8f5ff	              cmp qword [rbp - 0xa48], 0	      3009	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6
0x966b	            0x7432	                            je 0x40096df	      3009	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6
0x966d	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_9
0x9674	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_9
0x9677	    0x488b85b8f5ff	            mov rax, qword [rbp - 0xa48]	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_9
0x967e	      0xbe00000000	                              mov esi, 0	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_9
0x9683	          0x4889c7	                            mov rdi, rax	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_9
0x9686	      0xb800000000	                              mov eax, 0	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_9
0x968b	      0xe800000000	                          call 0x40096d0	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_9
0x9690	    0x488b85b8f5ff	            mov rax, qword [rbp - 0xa48]	      3011	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_10
0x9697	          0x4889c7	                            mov rdi, rax	      3011	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_10
0x969a	      0xe800000000	                          call 0x40096df	      3011	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_10
0x969f	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3016	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x96a6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3016	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x96a9	            0x85c0	                           test eax, eax	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96ab	            0x7407	                            je 0x40096f4	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96ad	      0xbe00000000	                              mov esi, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96b2	            0xeb05	                           jmp 0x40096f9	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96b4	      0xbe00000000	                              mov esi, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96b9	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96c0	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96c3	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96ca	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96cd	    0x488b05000000	            mov rax, qword [0x04009714] 	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96d4	          0x4989f0	                             mov r8, rsi	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96d7	      0xbe00000000	                              mov esi, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96dc	          0x4889c7	                            mov rdi, rax	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96df	      0xb800000000	                              mov eax, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96e4	      0xe800000000	                          call 0x4009729	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_11
0x96e9	      0xe8fd6fffff	            call sym.rebase_path_message	      3018	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_13
0x96ee	          0x4889c7	                            mov rdi, rax	      3018	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_13
0x96f1	      0xe800000000	                          call 0x4009736	      3018	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_13
0x96f6	      0xe8ac70ffff	      call sym.rebase_path_author_script	      3019	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_15
0x96fb	          0x4889c7	                            mov rdi, rax	      3019	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_15
0x96fe	      0xe800000000	                          call 0x4009743	      3019	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_15
0x9703	      0xe8fd70ffff	        call sym.rebase_path_stopped_sha	      3020	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_17
0x9708	          0x4889c7	                            mov rdi, rax	      3020	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_17
0x970b	      0xe800000000	                          call 0x4009750	      3020	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_17
0x9710	      0xe8c170ffff	              call sym.rebase_path_amend	      3021	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_19
0x9715	          0x4889c7	                            mov rdi, rax	      3021	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_19
0x9718	      0xe800000000	                          call 0x400975d	      3021	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_19
0x971d	      0xb901000000	                              mov ecx, 1	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_20
0x9722	      0xba00000000	                              mov edx, 0	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_20
0x9727	      0xbe00000000	                              mov esi, 0	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_20
0x972c	      0xbf00000000	                              mov edi, 0	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_20
0x9731	      0xe800000000	                          call 0x4009776	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_20
0x9736	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x973d	            0x8b00	                    mov eax, dword [rax]	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x973f	          0x83f805	                              cmp eax, 5	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x9742	     0xf8748030000	                            ja 0x4009ad0	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x9748	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_21
0x974f	          0x4889c7	                            mov rdi, rax	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_21
0x9752	      0xe83175ffff	                    call sym.is_rebase_i	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_21
0x9757	            0x85c0	                           test eax, eax	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_21
0x9759	            0x7441	                            je 0x40097dc	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_21
0x975b	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9762	            0x8b00	                    mov eax, dword [rax]	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9764	            0x89c7	                            mov edi, eax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9766	      0xe85fa4ffff	              call sym.command_to_string	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x976b	          0x4889c1	                            mov rcx, rax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x976e	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9775	      0xba00000000	                              mov edx, 0	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x977a	          0x4889ce	                            mov rsi, rcx	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x977d	          0x4889c7	                            mov rdi, rax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9780	      0xb800000000	                              mov eax, 0	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9785	      0xe809fcffff	                 call sym.reflog_message	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x978a	      0xba01000000	                              mov edx, 1	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x978f	          0x4889c6	                            mov rsi, rax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9792	      0xbf00000000	                              mov edi, 0	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x9797	      0xe800000000	                          call 0x40097dc	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_23
0x979c	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97a3	          0x4889c7	                            mov rdi, rax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97a6	      0xe8e1f7ffff	                 call sym.is_final_fixup	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97ab	            0x89c1	                            mov ecx, eax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97ad	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97b4	        0x488b7008	                mov rsi, qword [rax + 8]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97b8	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97bf	            0x8b00	                    mov eax, dword [rax]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97c1	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97c8	            0x89c7	                            mov edi, eax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97ca	      0xe8ccacffff	                 call sym.do_pick_commit	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97cf	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_25
0x97d5	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_27
0x97dc	          0x4889c7	                            mov rdi, rax	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_27
0x97df	      0xe8a474ffff	                    call sym.is_rebase_i	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_27
0x97e4	            0x85c0	                           test eax, eax	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_27
0x97e6	     0xf84a2000000	                            je 0x40098ce	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_27
0x97ec	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_27
0x97f3	     0xf8995000000	                           jns 0x40098ce	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_27
0x97f9	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9800	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9803	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x980a	            0x89d6	                            mov esi, edx	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x980c	          0x4889c7	                            mov rdi, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x980f	      0xe81bc3ffff	                  call sym.get_item_line	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9814	          0x4989c4	                            mov r12, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9817	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x981e	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9821	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9828	            0x89d6	                            mov esi, edx	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x982a	          0x4889c7	                            mov rdi, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x982d	      0xe832c3ffff	           call sym.get_item_line_length	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9832	            0x89c3	                            mov ebx, eax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9834	      0xbf00000000	                              mov edi, 0	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9839	      0xe8296bffff	                               call sym.	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x983e	          0x4c89e2	                            mov rdx, r12	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9841	            0x89de	                            mov esi, ebx	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9843	          0x4889c7	                            mov rdi, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9846	      0xb800000000	                              mov eax, 0	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x984b	      0xe800000000	                          call 0x4009890	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_29
0x9850	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x9857	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x985a	          0x8d50ff	                      lea edx, [rax - 1]	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x985d	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x9864	          0x895028	             mov dword [rax + 0x28], edx	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x9867	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_32
0x986e	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_32
0x9875	          0x4889d6	                            mov rsi, rdx	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_32
0x9878	          0x4889c7	                            mov rdi, rax	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_32
0x987b	      0xe8f9d7ffff	                      call sym.save_todo	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_32
0x9880	            0x85c0	                           test eax, eax	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_32
0x9882	            0x740a	                            je 0x40098ce	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_32
0x9884	      0xb8ffffffff	                     mov eax, 0xffffffff	      3040	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10
0x9889	      0xe98c0c0000	                           jmp 0x400a55a	      3040	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10
0x988e	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x9895	            0x8b00	                    mov eax, dword [rax]	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x9897	          0x83f802	                              cmp eax, 2	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x989a	     0xf85b5000000	                           jne 0x4009995	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x98a0	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3043	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x98a7	        0x488b4008	                mov rax, qword [rax + 8]	      3043	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x98ab	    0x488985c0f5ff	            mov qword [rbp - 0xa40], rax	      3043	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x98b2	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3044	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12
0x98b9	            0x7550	                           jne 0x400994b	      3044	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12
0x98bb	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98c2	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98c6	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98cd	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98d0	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98d7	          0x4889c7	                            mov rdi, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98da	      0xe8bf77ffff	              call sym.short_commit_name	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98df	          0x4989c5	                            mov r13, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98e2	      0xbf00000000	                              mov edi, 0	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98e7	      0xe87b6affff	                               call sym.	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98ec	          0x4889c6	                            mov rsi, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98ef	    0x488b05000000	            mov rax, qword [0x04009936] 	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98f6	          0x4d89e0	                             mov r8, r12	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98f9	            0x89d9	                            mov ecx, ebx	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98fb	          0x4c89ea	                            mov rdx, r13	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x98fe	          0x4889c7	                            mov rdi, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x9901	      0xb800000000	                              mov eax, 0	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x9906	      0xe800000000	                          call 0x400994b	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_33
0x990b	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9912	           0xf94c0	                                 sete al	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9915	        0x440fb6c0	                           movzx r8d, al	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9919	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9920	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9923	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x992a	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x992e	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9934	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x993b	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9942	          0x4589c1	                            mov r9d, r8d	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9945	          0x4189f8	                            mov r8d, edi	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9948	          0x4889c7	                            mov rdi, rax	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x994b	      0xe8bcdfffff	               call sym.error_with_patch	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9950	      0xe9c50b0000	                           jmp 0x400a55a	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_36
0x9955	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_37
0x995c	          0x4889c7	                            mov rdi, rax	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_37
0x995f	      0xe82473ffff	                    call sym.is_rebase_i	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_37
0x9964	            0x85c0	                           test eax, eax	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_37
0x9966	            0x7438	                            je 0x40099e0	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_37
0x9968	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_37
0x996f	            0x752f	                           jne 0x40099e0	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_37
0x9971	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x9978	      0xbe01000000	                              mov esi, 1	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x997d	          0x4889c7	                            mov rdi, rax	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x9980	      0xe8c6f6ffff	                   call sym.peek_command	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x9985	            0x89c2	                            mov edx, eax	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x9987	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x998e	        0x488b4008	                mov rax, qword [rax + 8]	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x9992	        0x4883c004	                              add rax, 4	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x9996	            0x89d6	                            mov esi, edx	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x9998	          0x4889c7	                            mov rdi, rax	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x999b	      0xe886aaffff	            call sym.record_in_rewritten	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_38
0x99a0	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99a7	            0x7456	                            je 0x4009a3f	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99a9	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99b0	            0x8b00	                    mov eax, dword [rax]	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99b2	            0x89c7	                            mov edi, eax	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99b4	      0xe899a2ffff	                       call sym.is_fixup	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99b9	            0x85c0	                           test eax, eax	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99bb	            0x7442	                            je 0x4009a3f	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_40
0x99bd	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 1	      3057	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	IF_15
0x99c4	            0x7505	                           jne 0x4009a0b	      3057	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	IF_15
0x99c6	      0xe8a0deffff	                call sym.intend_to_amend	      3058	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_41
0x99cb	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99d2	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99d6	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99dd	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99e0	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99e7	        0x488b4008	                mov rax, qword [rax + 8]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99eb	    0x488bb590f5ff	            mov rsi, qword [rbp - 0xa70]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99f2	          0x4889c7	                            mov rdi, rax	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99f5	      0xe8d4dfffff	            call sym.error_failed_squash	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99fa	      0xe91b0b0000	                           jmp 0x400a55a	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_42
0x99ff	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a06	     0xf84be030000	                            je 0x4009e0a	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a0c	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a13	          0x4889c7	                            mov rdi, rax	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a16	      0xe86d72ffff	                    call sym.is_rebase_i	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a1b	            0x85c0	                           test eax, eax	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a1d	     0xf84a7030000	                            je 0x4009e0a	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a23	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a2a	        0x488b4008	                mov rax, qword [rax + 8]	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a2e	          0x4885c0	                           test rax, rax	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a31	     0xf8493030000	                            je 0x4009e0a	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_43
0x9a37	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3064	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16
0x9a3e	            0x8b00	                    mov eax, dword [rax]	      3064	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16
0x9a40	          0x83f803	                              cmp eax, 3	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a43	           0xf94c0	                                 sete al	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a46	        0x440fb6c0	                           movzx r8d, al	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a4a	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a51	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a54	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a5b	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a5f	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a66	        0x488b4008	                mov rax, qword [rax + 8]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a6a	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a70	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a77	          0x4589c1	                            mov r9d, r8d	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a7a	          0x4189f8	                            mov r8d, edi	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a7d	          0x4889c7	                            mov rdi, rax	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a80	      0xe887deffff	               call sym.error_with_patch	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a85	     0xb85a0f5ffff	             or eax, dword [rbp - 0xa60]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a8b	      0xe98a0a0000	                           jmp 0x400a55a	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_44
0x9a90	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9a97	            0x8b00	                    mov eax, dword [rax]	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9a99	          0x83f806	                              cmp eax, 6	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9a9c	     0xf8547010000	                           jne 0x4009c29	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9aa2	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9aa9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9aad	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9ab4	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9ab7	            0x4898	                                    cdqe	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9ab9	          0x4801d0	                            add rax, rdx	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9abc	    0x488985c8f5ff	            mov qword [rbp - 0xa38], rax	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9ac3	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9aca	           0xfb600	                   movzx eax, byte [rax]	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9acd	           0xfbec0	                           movsx eax, al	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9ad0	    0x8985acf5ffff	            mov dword [rbp - 0xa54], eax	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9ad6	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	      3070	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9add	          0xc60000	                       mov byte [rax], 0	      3070	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9ae0	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_45
0x9ae7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_45
0x9aeb	          0x4889c7	                            mov rdi, rax	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_45
0x9aee	      0xe8dbdfffff	                        call sym.do_exec	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_45
0x9af3	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_45
0x9af9	    0x8b85acf5ffff	            mov eax, dword [rbp - 0xa54]	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9aff	            0x89c2	                            mov edx, eax	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9b01	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9b08	            0x8810	                      mov byte [rax], dl	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x9b0a	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3075	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	IF_18
0x9b11	     0xf85b3020000	                           jne 0x4009e0a	      3075	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	IF_18
0x9b17	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b1e	          0x4889c7	                            mov rdi, rax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b21	      0xe8a571ffff	                  call sym.get_todo_path	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b26	          0x4889c2	                            mov rdx, rax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b29	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b30	          0x4889c6	                            mov rsi, rax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b33	          0x4889d7	                            mov rdi, rdx	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b36	      0xe800000000	                          call 0x4009b7b	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b3b	            0x85c0	                           test eax, eax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b3d	            0x743c	                            je 0x4009bbb	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_47
0x9b3f	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b46	          0x4889c7	                            mov rdi, rax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b49	      0xe87d71ffff	                  call sym.get_todo_path	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b4e	          0x4889c3	                            mov rbx, rax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b51	      0xbf00000000	                              mov edi, 0	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b56	      0xe80c68ffff	                               call sym.	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b5b	          0x4889de	                            mov rsi, rbx	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b5e	          0x4889c7	                            mov rdi, rax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b61	      0xb800000000	                              mov eax, 0	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b66	      0xe800000000	                          call 0x4009bab	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b6b	      0xe89064ffff	                    call sym.const_error	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b70	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b76	      0xe94f020000	                           jmp 0x4009e0a	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_49
0x9b7b	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9b82	        0x488d5034	                   lea rdx, [rax + 0x34]	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9b86	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9b8d	          0x4889c6	                            mov rsi, rax	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9b90	          0x4889d7	                            mov rdi, rdx	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9b93	      0xe800000000	                          call 0x4009bd8	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9b98	            0x85c0	                           test eax, eax	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9b9a	     0xf842a020000	                            je 0x4009e0a	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_51
0x9ba0	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3081	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_52
0x9ba7	          0x4889c7	                            mov rdi, rax	      3081	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_52
0x9baa	      0xe8c3b7ffff	              call sym.todo_list_release	      3081	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_52
0x9baf	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_53
0x9bb6	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_53
0x9bbd	          0x4889d6	                            mov rsi, rdx	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_53
0x9bc0	          0x4889c7	                            mov rdi, rax	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_53
0x9bc3	      0xe892c0ffff	             call sym.read_populate_todo	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_53
0x9bc8	            0x85c0	                           test eax, eax	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_53
0x9bca	            0x740a	                            je 0x4009c16	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_53
0x9bcc	    0xc785a0f5ffff	    mov dword [rbp - 0xa60], 0xffffffff 	      3083	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21
0x9bd6	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3085	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20
0x9bdd	    0xc74028ffffff	     mov dword [rax + 0x28], 0xffffffff 	      3085	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20
0x9be4	      0xe9e1010000	                           jmp 0x4009e0a	      3085	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20
0x9be9	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x9bf0	            0x8b00	                    mov eax, dword [rax]	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x9bf2	          0x83f807	                              cmp eax, 7	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x9bf5	            0x7541	                           jne 0x4009c78	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x9bf7	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9bfe	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c01	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c08	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c0c	            0x89d6	                            mov esi, edx	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c0e	          0x4889c7	                            mov rdi, rax	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c11	      0xe8fbe2ffff	                       call sym.do_label	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c16	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c1c	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c23	     0xf84a1010000	                            je 0x4009e0a	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_54
0x9c29	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 1	      3089	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23
0x9c33	      0xe992010000	                           jmp 0x4009e0a	      3089	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23
0x9c38	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x9c3f	            0x8b00	                    mov eax, dword [rax]	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x9c41	          0x83f808	                              cmp eax, 8	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x9c44	            0x7548	                           jne 0x4009cce	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x9c46	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c4d	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c50	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c57	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c5b	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c62	            0x89ce	                            mov esi, ecx	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c64	          0x4889c7	                            mov rdi, rax	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c67	      0xe84de5ffff	                       call sym.do_reset	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c6c	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c72	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c79	     0xf844b010000	                            je 0x4009e0a	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_55
0x9c7f	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 1	      3092	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25
0x9c89	      0xe93c010000	                           jmp 0x4009e0a	      3092	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25
0x9c8e	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x9c95	            0x8b00	                    mov eax, dword [rax]	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x9c97	          0x83f809	                              cmp eax, 9	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x9c9a	     0xf85ea000000	                           jne 0x4009dca	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x9ca0	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3096	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x9ca7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3096	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x9caa	            0x89c7	                            mov edi, eax	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cac	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cb3	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cb6	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cbd	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cc1	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cc8	        0x488b4008	                mov rax, qword [rax + 8]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9ccc	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cd3	          0x4989c8	                             mov r8, rcx	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cd6	            0x89f9	                            mov ecx, edi	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cd8	          0x4889c7	                            mov rdi, rax	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cdb	      0xe815e9ffff	                       call sym.do_merge	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9ce0	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9ce6	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9ced	            0x790c	                           jns 0x4009d3b	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_56
0x9cef	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 1	      3097	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x9cf9	            0xeb3f	                           jmp 0x4009d7a	      3097	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x9cfb	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x9d02	        0x488b4008	                mov rax, qword [rax + 8]	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x9d06	          0x4885c0	                           test rax, rax	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x9d09	            0x742f	                            je 0x4009d7a	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x9d0b	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d12	      0xbe01000000	                              mov esi, 1	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d17	          0x4889c7	                            mov rdi, rax	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d1a	      0xe82cf3ffff	                   call sym.peek_command	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d1f	            0x89c2	                            mov edx, eax	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d21	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d28	        0x488b4008	                mov rax, qword [rax + 8]	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d2c	        0x4883c004	                              add rax, 4	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d30	            0x89d6	                            mov esi, edx	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d32	          0x4889c7	                            mov rdi, rax	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d35	      0xe8eca6ffff	            call sym.record_in_rewritten	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_57
0x9d3a	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3101	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29
0x9d41	     0xf8e83000000	                           jle 0x4009e0a	      3101	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29
0x9d47	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d4e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d51	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d58	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d5c	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d63	        0x488b4008	                mov rax, qword [rax + 8]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d67	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d6d	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d74	    0x41b900000000	                              mov r9d, 0	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d7a	          0x4189f8	                            mov r8d, edi	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d7d	          0x4889c7	                            mov rdi, rax	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d80	      0xe887dbffff	               call sym.error_with_patch	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d85	      0xe990070000	                           jmp 0x400a55a	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_59
0x9d8a	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_60
0x9d91	            0x8b00	                    mov eax, dword [rax]	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_60
0x9d93	            0x89c7	                            mov edi, eax	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_60
0x9d95	      0xe8a59effff	                        call sym.is_noop	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_60
0x9d9a	            0x85c0	                           test eax, eax	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_60
0x9d9c	            0x752c	                           jne 0x4009e0a	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_60
0x9d9e	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9da5	            0x8b18	                    mov ebx, dword [rax]	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9da7	      0xbf00000000	                              mov edi, 0	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9dac	      0xe8b665ffff	                               call sym.	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9db1	            0x89de	                            mov esi, ebx	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9db3	          0x4889c7	                            mov rdi, rax	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9db6	      0xb800000000	                              mov eax, 0	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9dbb	      0xe800000000	                          call 0x4009e00	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9dc0	      0xe83b62ffff	                    call sym.const_error	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9dc5	      0xe950070000	                           jmp 0x400a55a	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x9dca	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 0	      3110	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x9dd1	     0xf84e8000000	                            je 0x4009eff	      3110	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x9dd7	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9dde	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9de1	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9de8	            0x89d6	                            mov esi, edx	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9dea	          0x4889c7	                            mov rdi, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9ded	      0xe83dbdffff	                  call sym.get_item_line	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9df2	          0x4989c4	                            mov r12, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9df5	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9dfc	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9dff	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e06	            0x89d6	                            mov esi, edx	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e08	          0x4889c7	                            mov rdi, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e0b	      0xe854bdffff	           call sym.get_item_line_length	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e10	            0x89c3	                            mov ebx, eax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e12	      0xbf00000000	                              mov edi, 0	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e17	      0xe84b65ffff	                               call sym.	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e1c	          0x4c89e2	                            mov rdx, r12	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e1f	            0x89de	                            mov esi, ebx	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e21	          0x4889c7	                            mov rdi, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e24	      0xb800000000	                              mov eax, 0	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e29	      0xe800000000	                          call 0x4009e6e	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_64
0x9e2e	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x9e35	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x9e38	          0x8d50ff	                      lea edx, [rax - 1]	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x9e3b	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x9e42	          0x895028	             mov dword [rax + 0x28], edx	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x9e45	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_67
0x9e4c	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_67
0x9e53	          0x4889d6	                            mov rsi, rdx	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_67
0x9e56	          0x4889c7	                            mov rdi, rax	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_67
0x9e59	      0xe81bd2ffff	                      call sym.save_todo	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_67
0x9e5e	            0x85c0	                           test eax, eax	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_67
0x9e60	            0x740a	                            je 0x4009eac	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_67
0x9e62	      0xb8ffffffff	                     mov eax, 0xffffffff	      3117	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32
0x9e67	      0xe9ae060000	                           jmp 0x400a55a	      3117	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32
0x9e6c	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x9e73	        0x488b4008	                mov rax, qword [rax + 8]	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x9e77	          0x4885c0	                           test rax, rax	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x9e7a	            0x7443	                            je 0x4009eff	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x9e7c	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9e83	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9e86	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9e8d	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9e91	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9e98	        0x488b4008	                mov rax, qword [rax + 8]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9e9c	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9ea2	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9ea9	    0x41b900000000	                              mov r9d, 0	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9eaf	          0x4189f8	                            mov r8d, edi	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9eb2	          0x4889c7	                            mov rdi, rax	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9eb5	      0xe852daffff	               call sym.error_with_patch	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9eba	      0xe95b060000	                           jmp 0x400a55a	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_68
0x9ebf	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x9ec6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x9ec9	          0x8d5001	                      lea edx, [rax + 1]	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x9ecc	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x9ed3	          0x895028	             mov dword [rax + 0x28], edx	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x9ed6	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3126	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x9edd	            0x740b	                            je 0x4009f2a	      3126	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x9edf	    0x8b85a0f5ffff	            mov eax, dword [rbp - 0xa60]	      3127	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x9ee5	      0xe930060000	                           jmp 0x400a55a	      3127	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x9eea	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x9ef1	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x9ef4	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x9efb	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x9efe	            0x39c2	                            cmp edx, eax	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x9f00	     0xf8caef6ffff	                            jl 0x40095f4	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x9f06	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_69
0x9f0d	          0x4889c7	                            mov rdi, rax	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_69
0x9f10	      0xe8736dffff	                    call sym.is_rebase_i	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_69
0x9f15	            0x85c0	                           test eax, eax	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_69
0x9f17	     0xf84ee050000	                            je 0x400a54b	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_69
0x9f1d	    0x48c785e0f5ff	              mov qword [rbp - 0xa20], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x9f28	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x9f33	    0x48c785f0f5ff	              mov qword [rbp - 0xa10], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x9f3e	    0x48c78500f6ff	              mov qword [rbp - 0xa00], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x9f49	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x9f54	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x9f5f	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f66	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f69	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f70	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f73	            0x39c2	                            cmp edx, eax	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f75	            0x7d0a	                           jge 0x4009fc1	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f77	      0xb800000000	                              mov eax, 0	      3136	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f7c	      0xe999050000	                           jmp 0x400a55a	      3136	sequencer.c	FUNCTION_87	IF_35	IF_36
0x9f81	      0xe8f769ffff	          call sym.rebase_path_head_name	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9f86	          0x4889c1	                            mov rcx, rax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9f89	    0x488d85e0f5ff	                  lea rax, [rbp - 0xa20]	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9f90	      0xba00000000	                              mov edx, 0	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9f95	          0x4889ce	                            mov rsi, rcx	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9f98	          0x4889c7	                            mov rdi, rax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9f9b	      0xe88074ffff	                  call sym.read_oneliner	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9fa0	            0x85c0	                           test eax, eax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9fa2	     0xf8475020000	                            je 0x400a25d	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9fa8	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_72
0x9faf	      0xbe00000000	                              mov esi, 0	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_72
0x9fb4	          0x4889c7	                            mov rdi, rax	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_72
0x9fb7	      0xe800000000	                          call 0x4009ffc	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_72
0x9fbc	            0x85c0	                           test eax, eax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9fbe	     0xf8459020000	                            je 0x400a25d	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_71
0x9fc4	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_73
0x9fcb	          0x4889c6	                            mov rsi, rax	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_73
0x9fce	      0xbf00000000	                              mov edi, 0	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_73
0x9fd3	      0xe800000000	                          call 0x400a018	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_73
0x9fd8	            0x85c0	                           test eax, eax	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_73
0x9fda	            0x744b	                            je 0x400a067	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_73
0x9fdc	      0xbf00000000	                              mov edi, 0	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_75
0x9fe1	      0xe88163ffff	                               call sym.	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_75
0x9fe6	          0x4889c7	                            mov rdi, rax	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_75
0x9fe9	      0xb800000000	                              mov eax, 0	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_75
0x9fee	      0xe800000000	                          call 0x400a033	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_75
0x9ff3	      0xe80860ffff	                    call sym.const_error	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_75
0x9ff8	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_75
0x9ffe	    0x488d85e0f5ff	                  lea rax, [rbp - 0xa20]	      3147	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_76
0xa005	          0x4889c7	                            mov rdi, rax	      3147	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_76
0xa008	      0xe800000000	                          call 0x400a04d	      3147	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_76
0xa00d	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3148	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_77
0xa014	          0x4889c7	                            mov rdi, rax	      3148	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_77
0xa017	      0xe800000000	                          call 0x400a05c	      3148	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_77
0xa01c	    0x8b85a8f5ffff	            mov eax, dword [rbp - 0xa58]	      3149	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38
0xa022	      0xe9f3040000	                           jmp 0x400a55a	      3136	sequencer.c	FUNCTION_87	IF_35	IF_36
0xa027	      0xe8c468ffff	          call sym.rebase_path_orig_head	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa02c	          0x4889c1	                            mov rcx, rax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa02f	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa036	      0xba00000000	                              mov edx, 0	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa03b	          0x4889ce	                            mov rsi, rcx	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa03e	          0x4889c7	                            mov rdi, rax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa041	      0xe8da73ffff	                  call sym.read_oneliner	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa046	            0x85c0	                           test eax, eax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa048	            0x741d	                            je 0x400a0a7	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa04a	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_80
0xa051	    0x488d9520f7ff	                  lea rdx, [rbp - 0x8e0]	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_80
0xa058	          0x4889d6	                            mov rsi, rdx	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_80
0xa05b	          0x4889c7	                            mov rdi, rax	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_80
0xa05e	      0xe800000000	                          call 0x400a0a3	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_80
0xa063	            0x85c0	                           test eax, eax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa065	            0x7427	                            je 0x400a0ce	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_79
0xa067	      0xbf00000000	                              mov edi, 0	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_82
0xa06c	      0xe8f662ffff	                               call sym.	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_82
0xa071	          0x4889c7	                            mov rdi, rax	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_82
0xa074	      0xb800000000	                              mov eax, 0	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_82
0xa079	      0xe800000000	                          call 0x400a0be	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_82
0xa07e	      0xe87d5fffff	                    call sym.const_error	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_82
0xa083	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_82
0xa089	      0xe970ffffff	                           jmp 0x400a03e	      3154	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39
0xa08e	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_83
0xa095	      0xbe00000000	                              mov esi, 0	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_83
0xa09a	          0x4889c7	                            mov rdi, rax	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_83
0xa09d	      0xe88b60ffff	                  call sym.strbuf_setlen	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_83
0xa0a2	      0xe80569ffff	               call sym.rebase_path_onto	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0a7	          0x4889c1	                            mov rcx, rax	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0aa	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0b1	      0xba00000000	                              mov edx, 0	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0b6	          0x4889ce	                            mov rsi, rcx	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0b9	          0x4889c7	                            mov rdi, rax	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0bc	      0xe85f73ffff	                  call sym.read_oneliner	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0c1	            0x85c0	                           test eax, eax	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0c3	            0x7527	                           jne 0x400a12c	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_85
0xa0c5	      0xbf00000000	                              mov edi, 0	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_87
0xa0ca	      0xe89862ffff	                               call sym.	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_87
0xa0cf	          0x4889c7	                            mov rdi, rax	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_87
0xa0d2	      0xb800000000	                              mov eax, 0	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_87
0xa0d7	      0xe800000000	                          call 0x400a11c	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_87
0xa0dc	      0xe81f5fffff	                    call sym.const_error	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_87
0xa0e1	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_87
0xa0e7	      0xe912ffffff	                           jmp 0x400a03e	      3159	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40
0xa0ec	    0x488b8d10f6ff	            mov rcx, qword [rbp - 0x9f0]	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa0f3	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa0fa	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa101	          0x4989c8	                             mov r8, rcx	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa104	          0x4889d1	                            mov rcx, rdx	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa107	      0xba00000000	                              mov edx, 0	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa10c	      0xbe00000000	                              mov esi, 0	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa111	          0x4889c7	                            mov rdi, rax	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa114	      0xb800000000	                              mov eax, 0	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa119	      0xe875f2ffff	                 call sym.reflog_message	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa11e	    0x488985d0f5ff	            mov qword [rbp - 0xa30], rax	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_88
0xa125	    0x488bb5f0f5ff	            mov rsi, qword [rbp - 0xa10]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa12c	    0x488d8d20f7ff	                  lea rcx, [rbp - 0x8e0]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa133	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa13a	    0x488b85d0f5ff	            mov rax, qword [rbp - 0xa30]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa141	    0x41b900000000	                              mov r9d, 0	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa147	    0x41b801000000	                              mov r8d, 1	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa14d	          0x4889c7	                            mov rdi, rax	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa150	      0xe800000000	                          call 0x400a195	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa155	            0x85c0	                           test eax, eax	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa157	            0x7431	                            je 0x400a1ca	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_89
0xa159	    0x488b9df0f5ff	            mov rbx, qword [rbp - 0xa10]	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa160	      0xbf00000000	                              mov edi, 0	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa165	      0xe8fd61ffff	                               call sym.	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa16a	          0x4889de	                            mov rsi, rbx	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa16d	          0x4889c7	                            mov rdi, rax	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa170	      0xb800000000	                              mov eax, 0	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa175	      0xe800000000	                          call 0x400a1ba	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa17a	      0xe8815effff	                    call sym.const_error	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa17f	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_91
0xa185	      0xe974feffff	                           jmp 0x400a03e	      3167	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41
0xa18a	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa191	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa198	          0x4889d1	                            mov rcx, rdx	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa19b	      0xba00000000	                              mov edx, 0	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa1a0	      0xbe00000000	                              mov esi, 0	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa1a5	          0x4889c7	                            mov rdi, rax	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa1a8	      0xb800000000	                              mov eax, 0	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa1ad	      0xe8e1f1ffff	                 call sym.reflog_message	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa1b2	    0x488985d0f5ff	            mov qword [rbp - 0xa30], rax	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_92
0xa1b9	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_93
0xa1c0	    0x488b95d0f5ff	            mov rdx, qword [rbp - 0xa30]	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_93
0xa1c7	          0x4889c6	                            mov rsi, rax	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_93
0xa1ca	      0xbf00000000	                              mov edi, 0	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_93
0xa1cf	      0xe800000000	                          call 0x400a214	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_93
0xa1d4	            0x85c0	                           test eax, eax	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_93
0xa1d6	            0x7431	                            je 0x400a249	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_93
0xa1d8	    0x488b9df0f5ff	            mov rbx, qword [rbp - 0xa10]	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1df	      0xbf00000000	                              mov edi, 0	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1e4	      0xe87e61ffff	                               call sym.	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1e9	          0x4889de	                            mov rsi, rbx	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1ec	          0x4889c7	                            mov rdi, rax	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1ef	      0xb800000000	                              mov eax, 0	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1f4	      0xe800000000	                          call 0x400a239	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1f9	      0xe8025effff	                    call sym.const_error	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa1fe	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_95
0xa204	      0xe9f5fdffff	                           jmp 0x400a03e	      3174	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42
0xa209	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_96
0xa210	      0xbe00000000	                              mov esi, 0	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_96
0xa215	          0x4889c7	                            mov rdi, rax	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_96
0xa218	      0xe8105fffff	                  call sym.strbuf_setlen	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_96
0xa21d	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa224	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa227	            0x85c0	                           test eax, eax	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa229	     0xf84ea000000	                            je 0x400a359	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa22f	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_97
0xa236	      0xbab0080000	                          mov edx, 0x8b0	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_97
0xa23b	      0xbe00000000	                              mov esi, 0	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_97
0xa240	          0x4889c7	                            mov rdi, rax	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_97
0xa243	      0xe800000000	                          call 0x400a288	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_97
0xa248	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_98
0xa24f	      0xbe00000000	                              mov esi, 0	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_98
0xa254	          0x4889c7	                            mov rdi, rax	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_98
0xa257	      0xe800000000	                          call 0x400a29c	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_98
0xa25c	     0xfb68599f7ff	           movzx eax, byte [rbp - 0x867]	      3185	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa263	          0x83c801	                               or eax, 1	      3185	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa266	    0x888599f7ffff	              mov byte [rbp - 0x867], al	      3185	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa26c	    0xc78578fcffff	              mov dword [rbp - 0x388], 2	      3186	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa276	     0xfb6859bf7ff	           movzx eax, byte [rbp - 0x865]	      3188	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa27d	          0x83c880	                      or eax, 0xffffff80	      3188	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa280	    0x88859bf7ffff	              mov byte [rbp - 0x865], al	      3188	sequencer.c	FUNCTION_87	IF_35	IF_43
0xa286	      0xe86566ffff	          call sym.rebase_path_orig_head	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa28b	          0x4889c1	                            mov rcx, rax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa28e	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa295	      0xba00000000	                              mov edx, 0	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa29a	          0x4889ce	                            mov rsi, rcx	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa29d	          0x4889c7	                            mov rdi, rax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa2a0	      0xe87b71ffff	                  call sym.read_oneliner	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa2a5	            0x85c0	                           test eax, eax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa2a7	            0x7470	                            je 0x400a359	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa2a9	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_101
0xa2b0	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_101
0xa2b7	          0x4889d6	                            mov rsi, rdx	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_101
0xa2ba	          0x4889c7	                            mov rdi, rax	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_101
0xa2bd	      0xe800000000	                          call 0x400a302	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_101
0xa2c2	            0x85c0	                           test eax, eax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa2c4	            0x7553	                           jne 0x400a359	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_100
0xa2c6	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_102
0xa2cd	          0x4889c6	                            mov rsi, rax	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_102
0xa2d0	      0xbf00000000	                              mov edi, 0	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_102
0xa2d5	      0xe800000000	                          call 0x400a31a	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_102
0xa2da	            0x85c0	                           test eax, eax	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_101
0xa2dc	            0x753b	                           jne 0x400a359	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_101
0xa2de	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa2e5	    0x488d90f80400	                  lea rdx, [rax + 0x4f8]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa2ec	    0x488db500f7ff	                  lea rsi, [rbp - 0x900]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa2f3	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa2fa	          0x4889d1	                            mov rcx, rdx	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa2fd	      0xba00000000	                              mov edx, 0	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa302	          0x4889c7	                            mov rdi, rax	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa305	      0xe800000000	                          call 0x400a34a	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_103
0xa30a	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3195	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_104
0xa311	          0x4889c7	                            mov rdi, rax	      3195	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_104
0xa314	      0xe800000000	                          call 0x400a359	      3195	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_104
0xa319	      0xe8b99fffff	        call sym.flush_rewritten_pending	      3198	sequencer.c	FUNCTION_87	IF_35	CALL_105
0xa31e	      0xe81165ffff	     call sym.rebase_path_rewritten_list	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa323	          0x4889c2	                            mov rdx, rax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa326	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa32d	          0x4889c6	                            mov rsi, rax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa330	          0x4889d7	                            mov rdi, rdx	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa333	      0xe800000000	                          call 0x400a378	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa338	            0x85c0	                           test eax, eax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa33a	     0xf857e010000	                           jne 0x400a4fe	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa340	    0x488b8550f7ff	            mov rax, qword [rbp - 0x8b0]	      3200	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa347	          0x4885c0	                           test rax, rax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa34a	     0xf8e6e010000	                           jle 0x400a4fe	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_107
0xa350	    0x488d9520f6ff	                  lea rdx, [rbp - 0x9e0]	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa357	      0xb800000000	                              mov eax, 0	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa35c	      0xb90c000000	                            mov ecx, 0xc	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa361	          0x4889d7	                            mov rdi, rdx	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa364	          0xf348ab	              rep stosq qword [rdi], rax	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa367	    0x48c78528f6ff	              mov qword [rbp - 0x9d8], 0	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa372	    0x48c78538f6ff	              mov qword [rbp - 0x9c8], 0	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa37d	      0xbf00000000	                              mov edi, 0	      3202	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa382	      0xe800000000	                          call 0x400a3c7	      3202	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa387	    0x488985d8f5ff	            mov qword [rbp - 0xa28], rax	      3202	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa38e	      0xe8a164ffff	     call sym.rebase_path_rewritten_list	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_110
0xa393	      0xbe00000000	                              mov esi, 0	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_110
0xa398	          0x4889c7	                            mov rdi, rax	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_110
0xa39b	      0xb800000000	                              mov eax, 0	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_110
0xa3a0	      0xe800000000	                          call 0x400a3e5	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_110
0xa3a5	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_110
0xa3ab	     0xfb68568f6ff	           movzx eax, byte [rbp - 0x998]	      3206	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa3b2	          0x83c808	                               or eax, 8	      3206	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa3b5	    0x888568f6ffff	              mov byte [rbp - 0x998], al	      3206	sequencer.c	FUNCTION_87	IF_35	IF_45
0xa3bb	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_111
0xa3c2	        0x4883c008	                              add rax, 8	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_111
0xa3c6	      0xbe00000000	                              mov esi, 0	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_111
0xa3cb	          0x4889c7	                            mov rdi, rax	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_111
0xa3ce	      0xe800000000	                          call 0x400a413	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_111
0xa3d3	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_112
0xa3da	        0x4883c008	                              add rax, 8	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_112
0xa3de	      0xbe00000000	                              mov esi, 0	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_112
0xa3e3	          0x4889c7	                            mov rdi, rax	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_112
0xa3e6	      0xe800000000	                          call 0x400a42b	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_112
0xa3eb	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_113
0xa3f2	        0x4883c008	                              add rax, 8	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_113
0xa3f6	      0xbe00000000	                              mov esi, 0	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_113
0xa3fb	          0x4889c7	                            mov rdi, rax	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_113
0xa3fe	      0xe800000000	                          call 0x400a443	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_113
0xa403	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3211	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_114
0xa40a	          0x4889c7	                            mov rdi, rax	      3211	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_114
0xa40d	      0xe800000000	                          call 0x400a452	      3211	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_114
0xa412	    0x4883bdd8f5ff	              cmp qword [rbp - 0xa28], 0	      3213	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa41a	     0xf849e000000	                            je 0x400a4fe	      3213	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa420	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa427	      0xb800000000	                              mov eax, 0	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa42c	      0xb90c000000	                            mov ecx, 0xc	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa431	          0x4889d7	                            mov rdi, rdx	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa434	          0xf348ab	              rep stosq qword [rdi], rax	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa437	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa442	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa44d	      0xe8e263ffff	     call sym.rebase_path_rewritten_list	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_116
0xa452	      0xbe00000000	                              mov esi, 0	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_116
0xa457	          0x4889c7	                            mov rdi, rax	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_116
0xa45a	      0xb800000000	                              mov eax, 0	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_116
0xa45f	      0xe800000000	                          call 0x400a4a4	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_116
0xa464	    0x8985acf6ffff	            mov dword [rbp - 0x954], eax	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_116
0xa46a	     0xfb685c8f6ff	           movzx eax, byte [rbp - 0x938]	      3218	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa471	          0x83c820	                            or eax, 0x20	      3218	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa474	    0x8885c8f6ffff	              mov byte [rbp - 0x938], al	      3218	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0xa47a	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_117
0xa481	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_117
0xa488	        0x4883c208	                              add rdx, 8	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_117
0xa48c	          0x4889c6	                            mov rsi, rax	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_117
0xa48f	          0x4889d7	                            mov rdi, rdx	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_117
0xa492	      0xe800000000	                          call 0x400a4d7	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_117
0xa497	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_118
0xa49e	        0x4883c008	                              add rax, 8	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_118
0xa4a2	      0xbe00000000	                              mov esi, 0	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_118
0xa4a7	          0x4889c7	                            mov rdi, rax	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_118
0xa4aa	      0xe800000000	                          call 0x400a4ef	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_118
0xa4af	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3222	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_119
0xa4b6	          0x4889c7	                            mov rdi, rax	      3222	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_119
0xa4b9	      0xe800000000	                          call 0x400a4fe	      3222	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_119
0xa4be	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3225	sequencer.c	FUNCTION_87	IF_35	CALL_120
0xa4c5	          0x4889c7	                            mov rdi, rax	      3225	sequencer.c	FUNCTION_87	IF_35	CALL_120
0xa4c8	      0xe802ecffff	                call sym.apply_autostash	      3225	sequencer.c	FUNCTION_87	IF_35	CALL_120
0xa4cd	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_121
0xa4d4	    0x488b05000000	            mov rax, qword [0x0400a51b] 	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_121
0xa4db	      0xbe00000000	                              mov esi, 0	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_121
0xa4e0	          0x4889c7	                            mov rdi, rax	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_121
0xa4e3	      0xb800000000	                              mov eax, 0	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_121
0xa4e8	      0xe800000000	                          call 0x400a52d	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_121
0xa4ed	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3230	sequencer.c	FUNCTION_87	IF_35	CALL_122
0xa4f4	          0x4889c7	                            mov rdi, rax	      3230	sequencer.c	FUNCTION_87	IF_35	CALL_122
0xa4f7	      0xe800000000	                          call 0x400a53c	      3230	sequencer.c	FUNCTION_87	IF_35	CALL_122
0xa4fc	    0x488d85e0f5ff	                  lea rax, [rbp - 0xa20]	      3231	sequencer.c	FUNCTION_87	IF_35	CALL_123
0xa503	          0x4889c7	                            mov rdi, rax	      3231	sequencer.c	FUNCTION_87	IF_35	CALL_123
0xa506	      0xe800000000	                          call 0x400a54b	      3231	sequencer.c	FUNCTION_87	IF_35	CALL_123
0xa50b	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3238	sequencer.c	FUNCTION_87	CALL_124
0xa512	          0x4889c7	                            mov rdi, rax	      3238	sequencer.c	FUNCTION_87	CALL_124
0xa515	      0xe800000000	                          call 0x400a55a	      3238	sequencer.c	FUNCTION_87	CALL_124
0xa51a	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      3239	sequencer.c	FUNCTION_87
0xa51e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3239	sequencer.c	FUNCTION_87
0xa527	            0x7405	                            je 0x400a56e	      3239	sequencer.c	FUNCTION_87
0xa529	      0xe800000000	                          call 0x400a56e	      3239	sequencer.c	FUNCTION_87
0xa52e	    0x4881c4580a00	                          add rsp, 0xa58	      3239	sequencer.c	FUNCTION_87
0xa535	              0x5b	                                 pop rbx	      3239	sequencer.c	FUNCTION_87
0xa536	            0x415c	                                 pop r12	      3239	sequencer.c	FUNCTION_87
0xa538	            0x415d	                                 pop r13	      3239	sequencer.c	FUNCTION_87
0xa53a	              0x5d	                                 pop rbp	      3239	sequencer.c	FUNCTION_87
0xa53b	              0xc3	                                     ret	      3239	sequencer.c	FUNCTION_87
sequencer_remove_state	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,0:IF,4:WHILE,1:CALL,17	123
0xe5a	              0x55	                                push rbp	       256	sequencer.c	FUNCTION_8
0xe5b	          0x4889e5	                            mov rbp, rsp	       256	sequencer.c	FUNCTION_8
0xe5e	        0x4883ec50	                           sub rsp, 0x50	       256	sequencer.c	FUNCTION_8
0xe62	        0x48897db8	             mov qword [rbp - 0x48], rdi	       256	sequencer.c	FUNCTION_8
0xe66	    0x64488b042528	                mov rax, qword fs:[0x28]	       256	sequencer.c	FUNCTION_8
0xe6f	        0x488945f8	                mov qword [rbp - 8], rax	       256	sequencer.c	FUNCTION_8
0xe73	            0x31c0	                            xor eax, eax	       256	sequencer.c	FUNCTION_8
0xe75	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       257	sequencer.c	FUNCTION_8
0xe7d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       257	sequencer.c	FUNCTION_8
0xe85	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       257	sequencer.c	FUNCTION_8
0xe8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0xe91	          0x4889c7	                            mov rdi, rax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0xe94	      0xe8effdffff	                    call sym.is_rebase_i	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0xe99	            0x85c0	                           test eax, eax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0xe9b	     0xf84b7000000	                            je 0x4000f98	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0xea1	      0xe8ecf9ffff	     call sym.rebase_path_refs_to_delete	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0xea6	          0x4889c1	                            mov rcx, rax	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0xea9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0xead	      0xba00000000	                              mov edx, 0	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0xeb2	          0x4889ce	                            mov rsi, rcx	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0xeb5	          0x4889c7	                            mov rdi, rax	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0xeb8	      0xe800000000	                          call 0x4000efd	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0xebd	          0x4885c0	                           test rax, rax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0xec0	     0xf8e92000000	                           jle 0x4000f98	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0xec6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       262	sequencer.c	FUNCTION_8	IF_1
0xeca	        0x488945d0	             mov qword [rbp - 0x30], rax	       262	sequencer.c	FUNCTION_8	IF_1
0xece	            0xeb76	                           jmp 0x4000f86	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xed0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0xed4	      0xbe0a000000	                            mov esi, 0xa	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0xed9	          0x4889c7	                            mov rdi, rax	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0xedc	      0xe800000000	                          call 0x4000f21	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0xee1	        0x488945d8	             mov qword [rbp - 0x28], rax	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0xee5	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0xeea	            0x7407	                            je 0x4000f33	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0xeec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0xef0	          0xc60000	                       mov byte [rax], 0	       266	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0xef3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xef7	      0xb900000000	                              mov ecx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xefc	      0xba00000000	                              mov edx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xf01	          0x4889c6	                            mov rsi, rax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xf04	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xf09	      0xe800000000	                          call 0x4000f4e	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xf0e	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xf10	            0x7921	                           jns 0x4000f73	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0xf12	      0xbf00000000	                              mov edi, 0	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf17	      0xe84bf4ffff	                               call sym.	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf1c	          0x4889c2	                            mov rdx, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf1f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf23	          0x4889c6	                            mov rsi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf26	          0x4889d7	                            mov rdi, rdx	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf29	      0xb800000000	                              mov eax, 0	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf2e	      0xe800000000	                          call 0x4000f73	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0xf33	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       269	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_4
0xf38	            0x741d	                            je 0x4000f97	       269	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_4
0xf3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf3e	        0x4883c001	                              add rax, 1	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf42	        0x488945d0	             mov qword [rbp - 0x30], rax	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf46	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf4a	           0xfb600	                   movzx eax, byte [rax]	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf4d	            0x84c0	                             test al, al	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf4f	     0xf857bffffff	                           jne 0x4000f10	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf55	            0xeb01	                           jmp 0x4000f98	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0xf57	              0x90	                                     nop	       270	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_4
0xf58	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       275	sequencer.c	FUNCTION_8	CALL_8
0xf5c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       275	sequencer.c	FUNCTION_8	CALL_8
0xf60	          0x4889c7	                            mov rdi, rax	       275	sequencer.c	FUNCTION_8	CALL_8
0xf63	      0xe800000000	                          call 0x4000fa8	       275	sequencer.c	FUNCTION_8	CALL_8
0xf68	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       276	sequencer.c	FUNCTION_8	CALL_9
0xf6c	        0x488b4040	            mov rax, qword [rax + 0x40] 	       276	sequencer.c	FUNCTION_8	CALL_9
0xf70	          0x4889c7	                            mov rdi, rax	       276	sequencer.c	FUNCTION_8	CALL_9
0xf73	      0xe800000000	                          call 0x4000fb8	       276	sequencer.c	FUNCTION_8	CALL_9
0xf78	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       277	sequencer.c	FUNCTION_8	FOR_1
0xf7f	            0xeb24	                           jmp 0x4000fe5	       277	sequencer.c	FUNCTION_8	FOR_1
0xf81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       278	sequencer.c	FUNCTION_8	CALL_10
0xf85	        0x488b4048	            mov rax, qword [rax + 0x48] 	       278	sequencer.c	FUNCTION_8	CALL_10
0xf89	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       278	sequencer.c	FUNCTION_8	CALL_10
0xf8c	          0x4863d2	                         movsxd rdx, edx	       278	sequencer.c	FUNCTION_8	CALL_10
0xf8f	        0x48c1e203	                              shl rdx, 3	       278	sequencer.c	FUNCTION_8	CALL_10
0xf93	          0x4801d0	                            add rax, rdx	       278	sequencer.c	FUNCTION_8	CALL_10
0xf96	          0x488b00	                    mov rax, qword [rax]	       278	sequencer.c	FUNCTION_8	CALL_10
0xf99	          0x4889c7	                            mov rdi, rax	       278	sequencer.c	FUNCTION_8	CALL_10
0xf9c	      0xe800000000	                          call 0x4000fe1	       278	sequencer.c	FUNCTION_8	CALL_10
0xfa1	        0x8345cc01	               add dword [rbp - 0x34], 1	       277	sequencer.c	FUNCTION_8	FOR_1
0xfa5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       277	sequencer.c	FUNCTION_8	FOR_1
0xfa8	          0x4863d0	                         movsxd rdx, eax	       277	sequencer.c	FUNCTION_8	FOR_1
0xfab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       277	sequencer.c	FUNCTION_8	FOR_1
0xfaf	        0x488b4050	            mov rax, qword [rax + 0x50] 	       277	sequencer.c	FUNCTION_8	FOR_1
0xfb3	          0x4839c2	                            cmp rdx, rax	       277	sequencer.c	FUNCTION_8	FOR_1
0xfb6	            0x72c9	                            jb 0x4000fc1	       277	sequencer.c	FUNCTION_8	FOR_1
0xfb8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       279	sequencer.c	FUNCTION_8	CALL_11
0xfbc	        0x488b4048	            mov rax, qword [rax + 0x48] 	       279	sequencer.c	FUNCTION_8	CALL_11
0xfc0	          0x4889c7	                            mov rdi, rax	       279	sequencer.c	FUNCTION_8	CALL_11
0xfc3	      0xe800000000	                          call 0x4001008	       279	sequencer.c	FUNCTION_8	CALL_11
0xfc8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       280	sequencer.c	FUNCTION_8	CALL_12
0xfcc	        0x4883c060	                           add rax, 0x60	       280	sequencer.c	FUNCTION_8	CALL_12
0xfd0	          0x4889c7	                            mov rdi, rax	       280	sequencer.c	FUNCTION_8	CALL_12
0xfd3	      0xe800000000	                          call 0x4001018	       280	sequencer.c	FUNCTION_8	CALL_12
0xfd8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       282	sequencer.c	FUNCTION_8	CALL_13
0xfdc	      0xbe00000000	                              mov esi, 0	       282	sequencer.c	FUNCTION_8	CALL_13
0xfe1	          0x4889c7	                            mov rdi, rax	       282	sequencer.c	FUNCTION_8	CALL_13
0xfe4	      0xe844f1ffff	                  call sym.strbuf_setlen	       282	sequencer.c	FUNCTION_8	CALL_13
0xfe9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       283	sequencer.c	FUNCTION_8	CALL_15
0xfed	          0x4889c7	                            mov rdi, rax	       283	sequencer.c	FUNCTION_8	CALL_15
0xff0	      0xe8acfcffff	                        call sym.get_dir	       283	sequencer.c	FUNCTION_8	CALL_15
0xff5	          0x4889c2	                            mov rdx, rax	       283	sequencer.c	FUNCTION_8	CALL_15
0xff8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       283	sequencer.c	FUNCTION_8	CALL_15
0xffc	          0x4889d6	                            mov rsi, rdx	       283	sequencer.c	FUNCTION_8	CALL_15
0xfff	          0x4889c7	                            mov rdi, rax	       283	sequencer.c	FUNCTION_8	CALL_15
0x1002	      0xe82ef2ffff	                  call sym.strbuf_addstr	       283	sequencer.c	FUNCTION_8	CALL_15
0x1007	        0x488d45e0	                   lea rax, [rbp - 0x20]	       284	sequencer.c	FUNCTION_8	CALL_16
0x100b	      0xbe00000000	                              mov esi, 0	       284	sequencer.c	FUNCTION_8	CALL_16
0x1010	          0x4889c7	                            mov rdi, rax	       284	sequencer.c	FUNCTION_8	CALL_16
0x1013	      0xe800000000	                          call 0x4001058	       284	sequencer.c	FUNCTION_8	CALL_16
0x1018	        0x488d45e0	                   lea rax, [rbp - 0x20]	       285	sequencer.c	FUNCTION_8	CALL_17
0x101c	          0x4889c7	                            mov rdi, rax	       285	sequencer.c	FUNCTION_8	CALL_17
0x101f	      0xe800000000	                          call 0x4001064	       285	sequencer.c	FUNCTION_8	CALL_17
0x1024	      0xb800000000	                              mov eax, 0	       287	sequencer.c	FUNCTION_8
0x1029	        0x488b4df8	                mov rcx, qword [rbp - 8]	       288	sequencer.c	FUNCTION_8
0x102d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       288	sequencer.c	FUNCTION_8
0x1036	            0x7405	                            je 0x400107d	       288	sequencer.c	FUNCTION_8
0x1038	      0xe800000000	                          call 0x400107d	       288	sequencer.c	FUNCTION_8
0x103d	              0xc9	                                   leave	       288	sequencer.c	FUNCTION_8
0x103e	              0xc3	                                     ret	       288	sequencer.c	FUNCTION_8
parse_insn_line	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,3:IF,12:WHILE,0:CALL,17	301
0x54aa	              0x55	                                push rbp	      1803	sequencer.c	FUNCTION_53
0x54ab	          0x4889e5	                            mov rbp, rsp	      1803	sequencer.c	FUNCTION_53
0x54ae	            0x4154	                                push r12	      1803	sequencer.c	FUNCTION_53
0x54b0	              0x53	                                push rbx	      1803	sequencer.c	FUNCTION_53
0x54b1	        0x4883ec60	                           sub rsp, 0x60	      1803	sequencer.c	FUNCTION_53
0x54b5	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1803	sequencer.c	FUNCTION_53
0x54b9	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1803	sequencer.c	FUNCTION_53
0x54bd	        0x48895598	             mov qword [rbp - 0x68], rdx	      1803	sequencer.c	FUNCTION_53
0x54c1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1803	sequencer.c	FUNCTION_53
0x54ca	        0x488945e8	             mov qword [rbp - 0x18], rax	      1803	sequencer.c	FUNCTION_53
0x54ce	            0x31c0	                            xor eax, eax	      1803	sequencer.c	FUNCTION_53
0x54d0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1808	sequencer.c	FUNCTION_53
0x54d4	    0xc74010000000	               mov dword [rax + 0x10], 0	      1808	sequencer.c	FUNCTION_53
0x54db	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1811	sequencer.c	FUNCTION_53	CALL_1
0x54df	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1811	sequencer.c	FUNCTION_53	CALL_1
0x54e3	      0xbe00000000	                              mov esi, 0	      1811	sequencer.c	FUNCTION_53	CALL_1
0x54e8	          0x4889c7	                            mov rdi, rax	      1811	sequencer.c	FUNCTION_53	CALL_1
0x54eb	      0xe800000000	                          call 0x4005530	      1811	sequencer.c	FUNCTION_53	CALL_1
0x54f0	          0x4801d8	                            add rax, rbx	      1811	sequencer.c	FUNCTION_53	CALL_1
0x54f3	        0x488945a0	             mov qword [rbp - 0x60], rax	      1811	sequencer.c	FUNCTION_53	CALL_1
0x54f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1813	sequencer.c	FUNCTION_53	IF_1
0x54fb	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1813	sequencer.c	FUNCTION_53	IF_1
0x54ff	            0x741d	                            je 0x400555e	      1813	sequencer.c	FUNCTION_53	IF_1
0x5501	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1813	sequencer.c	FUNCTION_53	IF_1
0x5505	           0xfb600	                   movzx eax, byte [rax]	      1813	sequencer.c	FUNCTION_53	IF_1
0x5508	            0x3c0d	                             cmp al, 0xd	      1813	sequencer.c	FUNCTION_53	IF_1
0x550a	            0x7412	                            je 0x400555e	      1813	sequencer.c	FUNCTION_53	IF_1
0x550c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1813	sequencer.c	FUNCTION_53	IF_1
0x5510	           0xfb610	                   movzx edx, byte [rax]	      1813	sequencer.c	FUNCTION_53	IF_1
0x5513	     0xfb605000000	           movzx eax, byte [0x0400555a] 	      1813	sequencer.c	FUNCTION_53	IF_1
0x551a	            0x38c2	                              cmp dl, al	      1813	sequencer.c	FUNCTION_53	IF_1
0x551c	            0x7540	                           jne 0x400559e	      1813	sequencer.c	FUNCTION_53	IF_1
0x551e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1814	sequencer.c	FUNCTION_53	IF_1
0x5522	    0xc7000c000000	                    mov dword [rax], 0xc	      1814	sequencer.c	FUNCTION_53	IF_1
0x5528	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1815	sequencer.c	FUNCTION_53	IF_1
0x552c	    0x48c740080000	                  mov qword [rax + 8], 0	      1815	sequencer.c	FUNCTION_53	IF_1
0x5534	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1816	sequencer.c	FUNCTION_53	IF_1
0x5538	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1816	sequencer.c	FUNCTION_53	IF_1
0x553c	        0x48895018	             mov qword [rax + 0x18], rdx	      1816	sequencer.c	FUNCTION_53	IF_1
0x5540	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1817	sequencer.c	FUNCTION_53	IF_1
0x5544	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1817	sequencer.c	FUNCTION_53	IF_1
0x5548	          0x4829d0	                            sub rax, rdx	      1817	sequencer.c	FUNCTION_53	IF_1
0x554b	            0x89c2	                            mov edx, eax	      1817	sequencer.c	FUNCTION_53	IF_1
0x554d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1817	sequencer.c	FUNCTION_53	IF_1
0x5551	          0x895020	             mov dword [rax + 0x20], edx	      1817	sequencer.c	FUNCTION_53	IF_1
0x5554	      0xb800000000	                              mov eax, 0	      1818	sequencer.c	FUNCTION_53	IF_1
0x5559	      0xe979030000	                           jmp 0x4005917	      1818	sequencer.c	FUNCTION_53	IF_1
0x555e	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1821	sequencer.c	FUNCTION_53	FOR_1
0x5565	            0xeb7b	                           jmp 0x4005622	      1821	sequencer.c	FUNCTION_53	FOR_1
0x5567	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x556a	            0x4898	                                    cdqe	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x556c	        0x48c1e004	                              shl rax, 4	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x5570	    0x480500000000	                              add rax, 0	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x5576	          0x488b08	                    mov rcx, qword [rax]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x5579	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x557d	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x5581	          0x4889ce	                            mov rsi, rcx	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x5584	          0x4889c7	                            mov rdi, rax	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x5587	      0xe87faaffff	                    call sym.skip_prefix	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x558c	            0x85c0	                           test eax, eax	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x558e	            0x740b	                            je 0x40055db	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x5590	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x5593	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x5597	            0x8910	                    mov dword [rax], edx	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x5599	            0xeb51	                           jmp 0x400562c	      1824	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x559b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x559f	        0x4883c001	                              add rax, 1	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55a3	           0xfb600	                   movzx eax, byte [rax]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55a6	            0x3c20	                            cmp al, 0x20	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55a8	            0x7534	                           jne 0x400561e	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55aa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55ae	           0xfb610	                   movzx edx, byte [rax]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55b1	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55b4	            0x4898	                                    cdqe	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55b6	        0x48c1e004	                              shl rax, 4	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55ba	    0x480500000000	                              add rax, 0	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55c0	           0xfb600	                   movzx eax, byte [rax]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55c3	            0x38c2	                              cmp dl, al	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55c5	            0x7517	                           jne 0x400561e	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55c7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55cb	        0x4883c001	                              add rax, 1	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55cf	        0x488945a0	             mov qword [rbp - 0x60], rax	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55d3	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55d6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55da	            0x8910	                    mov dword [rax], edx	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55dc	            0xeb0e	                           jmp 0x400562c	      1828	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x55de	        0x8345b801	               add dword [rbp - 0x48], 1	      1821	sequencer.c	FUNCTION_53	FOR_1
0x55e2	        0x837db80b	            cmp dword [rbp - 0x48], 0xb 	      1821	sequencer.c	FUNCTION_53	FOR_1
0x55e6	     0xf8e7bffffff	                           jle 0x40055a7	      1821	sequencer.c	FUNCTION_53	FOR_1
0x55ec	        0x837db80b	            cmp dword [rbp - 0x48], 0xb 	      1830	sequencer.c	FUNCTION_53	IF_4
0x55f0	            0x7e0a	                           jle 0x400563c	      1830	sequencer.c	FUNCTION_53	IF_4
0x55f2	      0xb8ffffffff	                     mov eax, 0xffffffff	      1831	sequencer.c	FUNCTION_53	IF_4
0x55f7	      0xe9db020000	                           jmp 0x4005917	      1831	sequencer.c	FUNCTION_53	IF_4
0x55fc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1834	sequencer.c	FUNCTION_53	CALL_3
0x5600	      0xbe00000000	                              mov esi, 0	      1834	sequencer.c	FUNCTION_53	CALL_3
0x5605	          0x4889c7	                            mov rdi, rax	      1834	sequencer.c	FUNCTION_53	CALL_3
0x5608	      0xe800000000	                          call 0x400564d	      1834	sequencer.c	FUNCTION_53	CALL_3
0x560d	          0x8945bc	             mov dword [rbp - 0x44], eax	      1834	sequencer.c	FUNCTION_53	CALL_3
0x5610	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1835	sequencer.c	FUNCTION_53
0x5614	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1835	sequencer.c	FUNCTION_53
0x5617	            0x4898	                                    cdqe	      1835	sequencer.c	FUNCTION_53
0x5619	          0x4801d0	                            add rax, rdx	      1835	sequencer.c	FUNCTION_53
0x561c	        0x488945a0	             mov qword [rbp - 0x60], rax	      1835	sequencer.c	FUNCTION_53
0x5620	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1837	sequencer.c	FUNCTION_53	IF_5
0x5624	            0x8b00	                    mov eax, dword [rax]	      1837	sequencer.c	FUNCTION_53	IF_5
0x5626	          0x83f80a	                            cmp eax, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x5629	            0x757b	                           jne 0x40056e6	      1837	sequencer.c	FUNCTION_53	IF_5
0x562b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x562f	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x5633	            0x743b	                            je 0x40056b0	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x5635	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5639	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x563d	            0x8b00	                    mov eax, dword [rax]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x563f	            0x89c7	                            mov edi, eax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5641	      0xe884e5ffff	              call sym.command_to_string	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5646	          0x4989c4	                            mov r12, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5649	      0xbf00000000	                              mov edi, 0	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x564e	      0xe814adffff	                               call sym.	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5653	          0x4889da	                            mov rdx, rbx	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5656	          0x4c89e6	                            mov rsi, r12	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5659	          0x4889c7	                            mov rdi, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x565c	      0xb800000000	                              mov eax, 0	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5661	      0xe800000000	                          call 0x40056a6	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5666	      0xe895a9ffff	                    call sym.const_error	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x566b	      0xe967020000	                           jmp 0x4005917	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_5
0x5670	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1841	sequencer.c	FUNCTION_53	IF_5
0x5674	    0x48c740080000	                  mov qword [rax + 8], 0	      1841	sequencer.c	FUNCTION_53	IF_5
0x567c	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1842	sequencer.c	FUNCTION_53	IF_5
0x5680	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1842	sequencer.c	FUNCTION_53	IF_5
0x5684	        0x48895018	             mov qword [rax + 0x18], rdx	      1842	sequencer.c	FUNCTION_53	IF_5
0x5688	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1843	sequencer.c	FUNCTION_53	IF_5
0x568c	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1843	sequencer.c	FUNCTION_53	IF_5
0x5690	          0x4829d0	                            sub rax, rdx	      1843	sequencer.c	FUNCTION_53	IF_5
0x5693	            0x89c2	                            mov edx, eax	      1843	sequencer.c	FUNCTION_53	IF_5
0x5695	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1843	sequencer.c	FUNCTION_53	IF_5
0x5699	          0x895020	             mov dword [rax + 0x20], edx	      1843	sequencer.c	FUNCTION_53	IF_5
0x569c	      0xb800000000	                              mov eax, 0	      1844	sequencer.c	FUNCTION_53	IF_5
0x56a1	      0xe931020000	                           jmp 0x4005917	      1844	sequencer.c	FUNCTION_53	IF_5
0x56a6	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1847	sequencer.c	FUNCTION_53	IF_7
0x56aa	            0x7534	                           jne 0x4005720	      1847	sequencer.c	FUNCTION_53	IF_7
0x56ac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56b0	            0x8b00	                    mov eax, dword [rax]	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56b2	            0x89c7	                            mov edi, eax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56b4	      0xe811e5ffff	              call sym.command_to_string	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56b9	          0x4889c3	                            mov rbx, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56bc	      0xbf00000000	                              mov edi, 0	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56c1	      0xe8a1acffff	                               call sym.	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56c6	          0x4889de	                            mov rsi, rbx	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56c9	          0x4889c7	                            mov rdi, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56cc	      0xb800000000	                              mov eax, 0	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56d1	      0xe800000000	                          call 0x4005716	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56d6	      0xe825a9ffff	                    call sym.const_error	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56db	      0xe9f7010000	                           jmp 0x4005917	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_8
0x56e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1851	sequencer.c	FUNCTION_53	IF_8
0x56e4	            0x8b00	                    mov eax, dword [rax]	      1851	sequencer.c	FUNCTION_53	IF_8
0x56e6	          0x83f806	                              cmp eax, 6	      1851	sequencer.c	FUNCTION_53	IF_8
0x56e9	            0x7416	                            je 0x4005741	      1851	sequencer.c	FUNCTION_53	IF_8
0x56eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1851	sequencer.c	FUNCTION_53	IF_8
0x56ef	            0x8b00	                    mov eax, dword [rax]	      1851	sequencer.c	FUNCTION_53	IF_8
0x56f1	          0x83f807	                              cmp eax, 7	      1851	sequencer.c	FUNCTION_53	IF_8
0x56f4	            0x740b	                            je 0x4005741	      1851	sequencer.c	FUNCTION_53	IF_8
0x56f6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1852	sequencer.c	FUNCTION_53	IF_8
0x56fa	            0x8b00	                    mov eax, dword [rax]	      1852	sequencer.c	FUNCTION_53	IF_8
0x56fc	          0x83f808	                              cmp eax, 8	      1851	sequencer.c	FUNCTION_53	IF_8
0x56ff	            0x7536	                           jne 0x4005777	      1851	sequencer.c	FUNCTION_53	IF_8
0x5701	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1853	sequencer.c	FUNCTION_53	IF_8
0x5705	    0x48c740080000	                  mov qword [rax + 8], 0	      1853	sequencer.c	FUNCTION_53	IF_8
0x570d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1854	sequencer.c	FUNCTION_53	IF_8
0x5711	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1854	sequencer.c	FUNCTION_53	IF_8
0x5715	        0x48895018	             mov qword [rax + 0x18], rdx	      1854	sequencer.c	FUNCTION_53	IF_8
0x5719	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1855	sequencer.c	FUNCTION_53	IF_8
0x571d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1855	sequencer.c	FUNCTION_53	IF_8
0x5721	          0x4829d0	                            sub rax, rdx	      1855	sequencer.c	FUNCTION_53	IF_8
0x5724	            0x89c2	                            mov edx, eax	      1855	sequencer.c	FUNCTION_53	IF_8
0x5726	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1855	sequencer.c	FUNCTION_53	IF_8
0x572a	          0x895020	             mov dword [rax + 0x20], edx	      1855	sequencer.c	FUNCTION_53	IF_8
0x572d	      0xb800000000	                              mov eax, 0	      1856	sequencer.c	FUNCTION_53	IF_8
0x5732	      0xe9a0010000	                           jmp 0x4005917	      1856	sequencer.c	FUNCTION_53	IF_8
0x5737	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1859	sequencer.c	FUNCTION_53	IF_9
0x573b	            0x8b00	                    mov eax, dword [rax]	      1859	sequencer.c	FUNCTION_53	IF_9
0x573d	          0x83f809	                              cmp eax, 9	      1859	sequencer.c	FUNCTION_53	IF_9
0x5740	     0xf85cd000000	                           jne 0x4005853	      1859	sequencer.c	FUNCTION_53	IF_9
0x5746	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_10
0x574a	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_10
0x574e	      0xbe00000000	                              mov esi, 0	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_10
0x5753	          0x4889c7	                            mov rdi, rax	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_10
0x5756	      0xe8b0a8ffff	                    call sym.skip_prefix	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_10
0x575b	            0x85c0	                           test eax, eax	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_10
0x575d	            0x7421	                            je 0x40057c0	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_10
0x575f	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x5763	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x5767	      0xbe00000000	                              mov esi, 0	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x576c	          0x4889c7	                            mov rdi, rax	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x576f	      0xe800000000	                          call 0x40057b4	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x5774	          0x4801d8	                            add rax, rbx	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x5777	        0x488945a0	             mov qword [rbp - 0x60], rax	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x577b	      0xe993000000	                           jmp 0x4005853	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_11
0x5780	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_12
0x5784	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_12
0x5788	      0xbe00000000	                              mov esi, 0	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_12
0x578d	          0x4889c7	                            mov rdi, rax	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_12
0x5790	      0xe876a8ffff	                    call sym.skip_prefix	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_12
0x5795	            0x85c0	                           test eax, eax	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_12
0x5797	            0x7431	                            je 0x400580a	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_12
0x5799	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_13
0x579d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_13
0x57a1	      0xbe00000000	                              mov esi, 0	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_13
0x57a6	          0x4889c7	                            mov rdi, rax	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_13
0x57a9	      0xe800000000	                          call 0x40057ee	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_13
0x57ae	          0x4801d8	                            add rax, rbx	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_13
0x57b1	        0x488945a0	             mov qword [rbp - 0x60], rax	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_13
0x57b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x57b9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x57bc	          0x83c801	                               or eax, 1	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x57bf	            0x89c2	                            mov edx, eax	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x57c1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x57c5	          0x895010	             mov dword [rax + 0x10], edx	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x57c8	            0xeb49	                           jmp 0x4005853	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x57ca	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57ce	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57d1	          0x83c801	                               or eax, 1	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57d4	            0x89c2	                            mov edx, eax	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57d6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57da	          0x895010	             mov dword [rax + 0x10], edx	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57dd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1867	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57e1	    0x48c740080000	                  mov qword [rax + 8], 0	      1867	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57e9	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57ed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57f1	        0x48895018	             mov qword [rax + 0x18], rdx	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57f5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57f9	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x57fd	          0x4829d0	                            sub rax, rdx	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x5800	            0x89c2	                            mov edx, eax	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x5802	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x5806	          0x895020	             mov dword [rax + 0x20], edx	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x5809	      0xb800000000	                              mov eax, 0	      1870	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x580e	      0xe9c4000000	                           jmp 0x4005917	      1870	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x5813	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1874	sequencer.c	FUNCTION_53	CALL_14
0x5817	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1874	sequencer.c	FUNCTION_53	CALL_14
0x581b	      0xbe00000000	                              mov esi, 0	      1874	sequencer.c	FUNCTION_53	CALL_14
0x5820	          0x4889c7	                            mov rdi, rax	      1874	sequencer.c	FUNCTION_53	CALL_14
0x5823	      0xe800000000	                          call 0x4005868	      1874	sequencer.c	FUNCTION_53	CALL_14
0x5828	          0x4801d8	                            add rax, rbx	      1874	sequencer.c	FUNCTION_53	CALL_14
0x582b	        0x488945c8	             mov qword [rbp - 0x38], rax	      1874	sequencer.c	FUNCTION_53	CALL_14
0x582f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1875	sequencer.c	FUNCTION_53
0x5833	           0xfb600	                   movzx eax, byte [rax]	      1875	sequencer.c	FUNCTION_53
0x5836	           0xfbec0	                           movsx eax, al	      1875	sequencer.c	FUNCTION_53
0x5839	          0x8945c0	             mov dword [rbp - 0x40], eax	      1875	sequencer.c	FUNCTION_53
0x583c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1876	sequencer.c	FUNCTION_53
0x5840	          0xc60000	                       mov byte [rax], 0	      1876	sequencer.c	FUNCTION_53
0x5843	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1877	sequencer.c	FUNCTION_53	CALL_15
0x5847	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1877	sequencer.c	FUNCTION_53	CALL_15
0x584b	          0x4889d6	                            mov rsi, rdx	      1877	sequencer.c	FUNCTION_53	CALL_15
0x584e	          0x4889c7	                            mov rdi, rax	      1877	sequencer.c	FUNCTION_53	CALL_15
0x5851	      0xe800000000	                          call 0x4005896	      1877	sequencer.c	FUNCTION_53	CALL_15
0x5856	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1877	sequencer.c	FUNCTION_53	CALL_15
0x5859	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1878	sequencer.c	FUNCTION_53
0x585c	            0x89c2	                            mov edx, eax	      1878	sequencer.c	FUNCTION_53
0x585e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1878	sequencer.c	FUNCTION_53
0x5862	            0x8810	                      mov byte [rax], dl	      1878	sequencer.c	FUNCTION_53
0x5864	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1880	sequencer.c	FUNCTION_53	CALL_16
0x5868	      0xbe00000000	                              mov esi, 0	      1880	sequencer.c	FUNCTION_53	CALL_16
0x586d	          0x4889c7	                            mov rdi, rax	      1880	sequencer.c	FUNCTION_53	CALL_16
0x5870	      0xe800000000	                          call 0x40058b5	      1880	sequencer.c	FUNCTION_53	CALL_16
0x5875	          0x4889c2	                            mov rdx, rax	      1880	sequencer.c	FUNCTION_53	CALL_16
0x5878	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1880	sequencer.c	FUNCTION_53	CALL_16
0x587c	          0x4801c2	                            add rdx, rax	      1880	sequencer.c	FUNCTION_53	CALL_16
0x587f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1880	sequencer.c	FUNCTION_53	CALL_16
0x5883	        0x48895018	             mov qword [rax + 0x18], rdx	      1880	sequencer.c	FUNCTION_53	CALL_16
0x5887	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1881	sequencer.c	FUNCTION_53
0x588b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1881	sequencer.c	FUNCTION_53
0x588f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1881	sequencer.c	FUNCTION_53
0x5893	          0x4829c2	                            sub rdx, rax	      1881	sequencer.c	FUNCTION_53
0x5896	          0x4889d0	                            mov rax, rdx	      1881	sequencer.c	FUNCTION_53
0x5899	            0x89c2	                            mov edx, eax	      1881	sequencer.c	FUNCTION_53
0x589b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1881	sequencer.c	FUNCTION_53
0x589f	          0x895020	             mov dword [rax + 0x20], edx	      1881	sequencer.c	FUNCTION_53
0x58a2	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1883	sequencer.c	FUNCTION_53	IF_12
0x58a6	            0x7907	                           jns 0x40058ef	      1883	sequencer.c	FUNCTION_53	IF_12
0x58a8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1884	sequencer.c	FUNCTION_53	IF_12
0x58ad	            0xeb28	                           jmp 0x4005917	      1884	sequencer.c	FUNCTION_53	IF_12
0x58af	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1886	sequencer.c	FUNCTION_53	CALL_17
0x58b3	          0x4889c7	                            mov rdi, rax	      1886	sequencer.c	FUNCTION_53	CALL_17
0x58b6	      0xe800000000	                          call 0x40058fb	      1886	sequencer.c	FUNCTION_53	CALL_17
0x58bb	          0x4889c2	                            mov rdx, rax	      1886	sequencer.c	FUNCTION_53	CALL_17
0x58be	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1886	sequencer.c	FUNCTION_53	CALL_17
0x58c2	        0x48895008	                mov qword [rax + 8], rdx	      1886	sequencer.c	FUNCTION_53	CALL_17
0x58c6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1887	sequencer.c	FUNCTION_53
0x58ca	        0x488b4008	                mov rax, qword [rax + 8]	      1887	sequencer.c	FUNCTION_53
0x58ce	          0x4885c0	                           test rax, rax	      1887	sequencer.c	FUNCTION_53
0x58d1	           0xf94c0	                                 sete al	      1887	sequencer.c	FUNCTION_53
0x58d4	           0xfb6c0	                           movzx eax, al	      1887	sequencer.c	FUNCTION_53
0x58d7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1888	sequencer.c	FUNCTION_53
0x58db	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1888	sequencer.c	FUNCTION_53
0x58e4	            0x7405	                            je 0x400592b	      1888	sequencer.c	FUNCTION_53
0x58e6	      0xe800000000	                          call 0x400592b	      1888	sequencer.c	FUNCTION_53
0x58eb	        0x4883c460	                           add rsp, 0x60	      1888	sequencer.c	FUNCTION_53
0x58ef	              0x5b	                                 pop rbx	      1888	sequencer.c	FUNCTION_53
0x58f0	            0x415c	                                 pop r12	      1888	sequencer.c	FUNCTION_53
0x58f2	              0x5d	                                 pop rbp	      1888	sequencer.c	FUNCTION_53
0x58f3	              0xc3	                                     ret	      1888	sequencer.c	FUNCTION_53
print_advice	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,1:IF,3:WHILE,0:CALL,8	39
0x1212	              0x55	                                push rbp	       341	sequencer.c	FUNCTION_13
0x1213	          0x4889e5	                            mov rbp, rsp	       341	sequencer.c	FUNCTION_13
0x1216	        0x4883ec20	                           sub rsp, 0x20	       341	sequencer.c	FUNCTION_13
0x121a	          0x897dec	             mov dword [rbp - 0x14], edi	       341	sequencer.c	FUNCTION_13
0x121d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       341	sequencer.c	FUNCTION_13
0x1221	      0xbf00000000	                              mov edi, 0	       342	sequencer.c	FUNCTION_13	CALL_1
0x1226	      0xe800000000	                          call 0x400126b	       342	sequencer.c	FUNCTION_13	CALL_1
0x122b	        0x488945f8	                mov qword [rbp - 8], rax	       342	sequencer.c	FUNCTION_13	CALL_1
0x122f	      0x48837df800	                  cmp qword [rbp - 8], 0	       344	sequencer.c	FUNCTION_13	IF_1
0x1234	            0x742c	                            je 0x40012a2	       344	sequencer.c	FUNCTION_13	IF_1
0x1236	    0x488b05000000	            mov rax, qword [0x0400127d] 	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x123d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x1241	      0xbe00000000	                              mov esi, 0	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x1246	          0x4889c7	                            mov rdi, rax	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x1249	      0xb800000000	                              mov eax, 0	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x124e	      0xe800000000	                          call 0x4001293	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x1253	      0xe800000000	                          call 0x4001298	       351	sequencer.c	FUNCTION_13	IF_1	CALL_4
0x1258	          0x4889c7	                            mov rdi, rax	       351	sequencer.c	FUNCTION_13	IF_1	CALL_4
0x125b	      0xe800000000	                          call 0x40012a0	       351	sequencer.c	FUNCTION_13	IF_1	CALL_4
0x1260	            0xeb41	                           jmp 0x40012e3	       352	sequencer.c	FUNCTION_13	IF_1
0x1262	        0x837dec00	               cmp dword [rbp - 0x14], 0	       355	sequencer.c	FUNCTION_13	IF_2
0x1266	            0x743b	                            je 0x40012e3	       355	sequencer.c	FUNCTION_13	IF_2
0x1268	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x126c	          0x8b400c	              mov eax, dword [rax + 0xc]	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x126f	            0x85c0	                           test eax, eax	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x1271	            0x7419	                            je 0x40012cc	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x1273	      0xbf00000000	                              mov edi, 0	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x1278	      0xe8eaf0ffff	                               call sym.	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x127d	          0x4889c7	                            mov rdi, rax	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x1280	      0xb800000000	                              mov eax, 0	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x1285	      0xe800000000	                          call 0x40012ca	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x128a	            0xeb17	                           jmp 0x40012e3	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x128c	      0xbf00000000	                              mov edi, 0	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x1291	      0xe8d1f0ffff	                               call sym.	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x1296	          0x4889c7	                            mov rdi, rax	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x1299	      0xb800000000	                              mov eax, 0	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x129e	      0xe800000000	                          call 0x40012e3	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x12a3	              0xc9	                                   leave	       364	sequencer.c	FUNCTION_13
0x12a4	              0xc3	                                     ret	       364	sequencer.c	FUNCTION_13
rearrange_squash	FOR,5:SWITCH,0:functions,0:DO,0:ELSE,4:IF,16:WHILE,2:CALL,50	543
0xdbed	              0x55	                                push rbp	      4289	sequencer.c	FUNCTION_105
0xdbee	          0x4889e5	                            mov rbp, rsp	      4289	sequencer.c	FUNCTION_105
0xdbf1	              0x53	                                push rbx	      4289	sequencer.c	FUNCTION_105
0xdbf2	    0x4881ec480100	                          sub rsp, 0x148	      4289	sequencer.c	FUNCTION_105
0xdbf9	    0x64488b042528	                mov rax, qword fs:[0x28]	      4289	sequencer.c	FUNCTION_105
0xdc02	        0x488945e8	             mov qword [rbp - 0x18], rax	      4289	sequencer.c	FUNCTION_105
0xdc06	            0x31c0	                            xor eax, eax	      4289	sequencer.c	FUNCTION_105
0xdc08	      0xe8222affff	               call sym.rebase_path_todo	      4290	sequencer.c	FUNCTION_105	CALL_1
0xdc0d	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      4290	sequencer.c	FUNCTION_105	CALL_1
0xdc14	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4291	sequencer.c	FUNCTION_105
0xdc18	      0xb800000000	                              mov eax, 0	      4291	sequencer.c	FUNCTION_105
0xdc1d	      0xb90b000000	                            mov ecx, 0xb	      4291	sequencer.c	FUNCTION_105
0xdc22	          0x4889d7	                            mov rdi, rdx	      4291	sequencer.c	FUNCTION_105
0xdc25	          0xf348ab	              rep stosq qword [rdi], rax	      4291	sequencer.c	FUNCTION_105
0xdc28	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      4291	sequencer.c	FUNCTION_105
0xdc30	    0xc785b8feffff	              mov dword [rbp - 0x148], 0	      4293	sequencer.c	FUNCTION_105
0xdc3a	    0xc785bcfeffff	              mov dword [rbp - 0x144], 0	      4293	sequencer.c	FUNCTION_105
0xdc44	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0xdc4b	        0x488d4590	                   lea rax, [rbp - 0x70]	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0xdc4f	          0x4889d6	                            mov rsi, rdx	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0xdc52	          0x4889c7	                            mov rdi, rax	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0xdc55	      0xe84c7fffff	      call sym.strbuf_read_file_or_whine	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0xdc5a	          0x4885c0	                           test rax, rax	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0xdc5d	            0x790a	                           jns 0x400dca9	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0xdc5f	      0xb8ffffffff	                     mov eax, 0xffffffff	      4297	sequencer.c	FUNCTION_105	IF_1
0xdc64	      0xe944090000	                           jmp 0x400e5ed	      4297	sequencer.c	FUNCTION_105	IF_1
0xdc69	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0xdc6d	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0xdc71	          0x4889d6	                            mov rsi, rdx	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0xdc74	          0x4889c7	                            mov rdi, rax	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0xdc77	      0xe8787cffff	              call sym.parse_insn_buffer	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0xdc7c	            0x85c0	                           test eax, eax	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0xdc7e	            0x7916	                           jns 0x400dcd6	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0xdc80	        0x488d4590	                   lea rax, [rbp - 0x70]	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0xdc84	          0x4889c7	                            mov rdi, rax	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0xdc87	      0xe8e676ffff	              call sym.todo_list_release	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0xdc8c	      0xb8ffffffff	                     mov eax, 0xffffffff	      4300	sequencer.c	FUNCTION_105	IF_2
0xdc91	      0xe917090000	                           jmp 0x400e5ed	      4300	sequencer.c	FUNCTION_105	IF_2
0xdc96	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4313	sequencer.c	FUNCTION_105
0xdc99	          0x4863d0	                         movsxd rdx, eax	      4312	sequencer.c	FUNCTION_105	CALL_5
0xdc9c	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4312	sequencer.c	FUNCTION_105	CALL_5
0xdca3	          0x4889d1	                            mov rcx, rdx	      4312	sequencer.c	FUNCTION_105	CALL_5
0xdca6	      0xba00000000	                              mov edx, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0xdcab	      0xbe00000000	                              mov esi, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0xdcb0	          0x4889c7	                            mov rdi, rax	      4312	sequencer.c	FUNCTION_105	CALL_5
0xdcb3	      0xe800000000	                          call 0x400dcf8	      4312	sequencer.c	FUNCTION_105	CALL_5
0xdcb8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdcbb	            0x4898	                                    cdqe	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdcbd	          0x4889c6	                            mov rsi, rax	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdcc0	      0xbf04000000	                              mov edi, 4	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdcc5	      0xe8db23ffff	                        call sym.st_mult	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdcca	          0x4889c7	                            mov rdi, rax	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdccd	      0xe800000000	                          call 0x400dd12	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdcd2	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      4314	sequencer.c	FUNCTION_105	CALL_6
0xdcd9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdcdc	            0x4898	                                    cdqe	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdcde	          0x4889c6	                            mov rsi, rax	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdce1	      0xbf04000000	                              mov edi, 4	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdce6	      0xe8ba23ffff	                        call sym.st_mult	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdceb	          0x4889c7	                            mov rdi, rax	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdcee	      0xe800000000	                          call 0x400dd33	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdcf3	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      4315	sequencer.c	FUNCTION_105	CALL_7
0xdcfa	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdcfd	            0x4898	                                    cdqe	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdcff	          0x4889c6	                            mov rsi, rax	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdd02	      0xbf08000000	                              mov edi, 8	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdd07	      0xe89923ffff	                        call sym.st_mult	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdd0c	          0x4889c7	                            mov rdi, rax	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdd0f	      0xe800000000	                          call 0x400dd54	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdd14	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      4316	sequencer.c	FUNCTION_105	CALL_8
0xdd1b	    0xc785c0feffff	              mov dword [rbp - 0x140], 0	      4317	sequencer.c	FUNCTION_105	FOR_1
0xdd25	      0xe9fa050000	                           jmp 0x400e364	      4317	sequencer.c	FUNCTION_105	FOR_1
0xdd2a	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0xdd35	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0xdd40	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0xdd4b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd4f	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd55	          0x4863d0	                         movsxd rdx, eax	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd58	          0x4889d0	                            mov rax, rdx	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd5b	          0x4801c0	                            add rax, rax	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd5e	          0x4801d0	                            add rax, rdx	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd61	        0x48c1e004	                              shl rax, 4	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd65	          0x4801c8	                            add rax, rcx	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd68	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4319	sequencer.c	FUNCTION_105	FOR_1
0xdd6f	    0xc785c4feffff	    mov dword [rbp - 0x13c], 0xffffffff 	      4322	sequencer.c	FUNCTION_105	FOR_1
0xdd79	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdd7f	            0x4898	                                    cdqe	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdd81	    0x488d14850000	                        lea rdx, [rax*4]	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdd89	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdd90	          0x4801c2	                            add rdx, rax	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdd93	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdd99	            0x4898	                                    cdqe	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdd9b	    0x488d0c850000	                        lea rcx, [rax*4]	      4325	sequencer.c	FUNCTION_105	FOR_1
0xdda3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4325	sequencer.c	FUNCTION_105	FOR_1
0xddaa	          0x4801c8	                            add rax, rcx	      4325	sequencer.c	FUNCTION_105	FOR_1
0xddad	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0xddb3	            0x8b00	                    mov eax, dword [rax]	      4325	sequencer.c	FUNCTION_105	FOR_1
0xddb5	            0x8902	                    mov dword [rdx], eax	      4325	sequencer.c	FUNCTION_105	FOR_1
0xddb7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddbe	        0x488b4008	                mov rax, qword [rax + 8]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddc2	          0x4885c0	                           test rax, rax	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddc5	            0x740e	                            je 0x400de15	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddc7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddce	            0x8b00	                    mov eax, dword [rax]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddd0	          0x83f80b	                            cmp eax, 0xb	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddd3	            0x7526	                           jne 0x400de3b	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddd5	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xdddb	            0x4898	                                    cdqe	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xdddd	    0x488d14c50000	                        lea rdx, [rax*8]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xdde5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddec	          0x4801d0	                            add rax, rdx	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddef	    0x48c700000000	                      mov qword [rax], 0	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddf6	      0xe922050000	                           jmp 0x400e35d	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0xddfb	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_9
0xde02	            0x8b00	                    mov eax, dword [rax]	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_9
0xde04	            0x89c7	                            mov edi, eax	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_9
0xde06	      0xe8475effff	                       call sym.is_fixup	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_9
0xde0b	            0x85c0	                           test eax, eax	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_9
0xde0d	            0x742d	                            je 0x400de7c	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_9
0xde0f	        0x488d4590	                   lea rax, [rbp - 0x70]	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_10
0xde13	          0x4889c7	                            mov rdi, rax	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_10
0xde16	      0xe85775ffff	              call sym.todo_list_release	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_10
0xde1b	      0xbf00000000	                              mov edi, 0	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_12
0xde20	      0xe84225ffff	                               call sym.	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_12
0xde25	          0x4889c7	                            mov rdi, rax	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_12
0xde28	      0xb800000000	                              mov eax, 0	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_12
0xde2d	      0xe800000000	                          call 0x400de72	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_12
0xde32	      0xe8c921ffff	                    call sym.const_error	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_12
0xde37	      0xe971070000	                           jmp 0x400e5ed	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_12
0xde3c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4336	sequencer.c	FUNCTION_105	FOR_1
0xde43	        0x488b4008	                mov rax, qword [rax + 8]	      4336	sequencer.c	FUNCTION_105	FOR_1
0xde47	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      4336	sequencer.c	FUNCTION_105	FOR_1
0xde4e	        0x48895018	             mov qword [rax + 0x18], rdx	      4336	sequencer.c	FUNCTION_105	FOR_1
0xde52	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0xde59	        0x488b4008	                mov rax, qword [rax + 8]	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0xde5d	          0x4889c7	                            mov rdi, rax	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0xde60	      0xe86226ffff	                   call sym.parse_commit	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0xde65	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0xde6c	        0x488b4008	                mov rax, qword [rax + 8]	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0xde70	      0xbe00000000	                              mov esi, 0	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0xde75	          0x4889c7	                            mov rdi, rax	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0xde78	      0xe800000000	                          call 0x400debd	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0xde7d	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0xde84	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_15
0xde8b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_15
0xde92	          0x4889d6	                            mov rsi, rdx	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_15
0xde95	          0x4889c7	                            mov rdi, rax	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_15
0xde98	      0xe800000000	                          call 0x400dedd	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_15
0xde9d	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_16
0xdea4	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_16
0xdeab	      0xba00000000	                              mov edx, 0	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_16
0xdeb0	          0x4889ce	                            mov rsi, rcx	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_16
0xdeb3	          0x4889c7	                            mov rdi, rax	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_16
0xdeb6	      0xe800000000	                          call 0x400defb	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_16
0xdebb	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdec1	            0x4898	                                    cdqe	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdec3	    0x488d14c50000	                        lea rdx, [rax*8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdecb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xded2	        0x488d1c02	                    lea rbx, [rdx + rax]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xded6	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdedd	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdee4	          0x4889d6	                            mov rsi, rdx	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdee7	          0x4889c7	                            mov rdi, rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdeea	      0xe800000000	                          call 0x400df2f	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdeef	          0x488903	                    mov qword [rbx], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdef2	          0x488b03	                    mov rax, qword [rbx]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdef5	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_17
0xdefc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_18
0xdf03	        0x488b4008	                mov rax, qword [rax + 8]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_18
0xdf07	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_18
0xdf0e	          0x4889d6	                            mov rsi, rdx	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_18
0xdf11	          0x4889c7	                            mov rdi, rax	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_18
0xdf14	      0xe800000000	                          call 0x400df59	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_18
0xdf19	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf20	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf27	      0xbe00000000	                              mov esi, 0	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf2c	          0x4889c7	                            mov rdi, rax	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf2f	      0xe8d720ffff	                    call sym.skip_prefix	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf34	            0x85c0	                           test eax, eax	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf36	            0x7537	                           jne 0x400dfaf	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf38	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_20
0xdf3f	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_20
0xdf46	      0xbe00000000	                              mov esi, 0	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_20
0xdf4b	          0x4889c7	                            mov rdi, rax	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_20
0xdf4e	      0xe8b820ffff	                    call sym.skip_prefix	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_20
0xdf53	            0x85c0	                           test eax, eax	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf55	     0xf84d9010000	                            je 0x400e174	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_19
0xdf5b	            0xeb12	                           jmp 0x400dfaf	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf5d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0xdf64	        0x4883c001	                              add rax, 1	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0xdf68	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0xdf6f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf76	           0xfb600	                   movzx eax, byte [rax]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf79	           0xfb6c0	                           movzx eax, al	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf7c	            0x4898	                                    cdqe	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf7e	     0xfb680000000	                   movzx eax, byte [rax]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf85	           0xfb6c0	                           movzx eax, al	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf88	          0x83e001	                              and eax, 1	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf8b	            0x85c0	                           test eax, eax	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf8d	            0x75ce	                           jne 0x400df9d	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1	CALL_21
0xdf8f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdf96	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdf9d	      0xbe00000000	                              mov esi, 0	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdfa2	          0x4889c7	                            mov rdi, rax	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdfa5	      0xe86120ffff	                    call sym.skip_prefix	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdfaa	            0x85c0	                           test eax, eax	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdfac	            0x75ad	                           jne 0x400df9b	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdfae	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_23
0xdfb5	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_23
0xdfbc	      0xbe00000000	                              mov esi, 0	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_23
0xdfc1	          0x4889c7	                            mov rdi, rax	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_23
0xdfc4	      0xe84220ffff	                    call sym.skip_prefix	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_23
0xdfc9	            0x85c0	                           test eax, eax	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdfcb	            0x7402	                            je 0x400e00f	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_22
0xdfcd	            0xeb8c	                           jmp 0x400df9b	      4354	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2
0xdfcf	              0x90	                                     nop	      4353	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6
0xdfd0	    0x488b9dd8feff	            mov rbx, qword [rbp - 0x128]	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdfd7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdfde	          0x4889c7	                            mov rdi, rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdfe1	      0xe800000000	                          call 0x400e026	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdfe6	            0x89c1	                            mov ecx, eax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdfe8	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdfef	          0x4889da	                            mov rdx, rbx	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdff2	            0x89ce	                            mov esi, ecx	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdff4	          0x4889c7	                            mov rdi, rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdff7	      0xe80b23ffff	          call sym.hashmap_get_from_hash	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xdffc	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xe003	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xe00b	            0x7415	                            je 0x400e062	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_24
0xe00d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0xe014	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0xe017	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0xe01d	      0xe912010000	                           jmp 0x400e174	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0xe022	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe029	      0xbe20000000	                           mov esi, 0x20	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe02e	          0x4889c7	                            mov rdi, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe031	      0xe800000000	                          call 0x400e076	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe036	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe039	            0x7568	                           jne 0x400e0e3	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe03b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_27
0xe042	          0x4889c7	                            mov rdi, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe045	      0xe800000000	                          call 0x400e08a	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe04a	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe051	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe059	            0x7448	                            je 0x400e0e3	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_26
0xe05b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4363	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe062	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4363	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe066	          0x4885c0	                           test rax, rax	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_27
0xe069	            0x7438	                            je 0x400e0e3	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_27
0xe06b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe072	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe076	          0x4889c2	                            mov rdx, rax	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe079	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe07d	          0x4829c2	                            sub rdx, rax	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe080	          0x4889d0	                            mov rax, rdx	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe083	        0x48c1f804	                              sar rax, 4	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe087	          0x4889c2	                            mov rdx, rax	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe08a	    0x48b8abaaaaaa	          movabs rax, 0xaaaaaaaaaaaaaaab	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe094	        0x480fafc2	                           imul rax, rdx	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe098	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe09e	      0xe991000000	                           jmp 0x400e174	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0xe0a3	    0xc785c4feffff	              mov dword [rbp - 0x13c], 0	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0xe0ad	            0xeb5c	                           jmp 0x400e14b	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0xe0af	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0b5	            0x4898	                                    cdqe	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0b7	    0x488d14c50000	                        lea rdx, [rax*8]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0bf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0c6	          0x4801d0	                            add rax, rdx	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0c9	          0x488b00	                    mov rax, qword [rax]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0cc	          0x4885c0	                           test rax, rax	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0cf	            0x7433	                            je 0x400e144	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe0d1	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0d8	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0de	            0x4898	                                    cdqe	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0e0	    0x488d0cc50000	                        lea rcx, [rax*8]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0e8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0ef	          0x4801c8	                            add rax, rcx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0f2	          0x488b00	                    mov rax, qword [rax]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0f5	          0x4889d6	                            mov rsi, rdx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0f8	          0x4889c7	                            mov rdi, rax	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe0fb	      0xe800000000	                          call 0x400e140	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_28
0xe100	            0x85c0	                           test eax, eax	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe102	            0x7517	                           jne 0x400e15b	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe104	    0x8385c4feffff	              add dword [rbp - 0x13c], 1	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0xe10b	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0xe111	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0xe117	            0x7c96	                            jl 0x400e0ef	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0xe119	            0xeb01	                           jmp 0x400e15c	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0xe11b	              0x90	                                     nop	      4372	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0xe11c	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0xe122	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0xe128	            0x750a	                           jne 0x400e174	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0xe12a	    0xc785c4feffff	    mov dword [rbp - 0x13c], 0xffffffff 	      4374	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0xe134	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe13b	     0xf88f1000000	                            js 0x400e272	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe141	    0xc785bcfeffff	              mov dword [rbp - 0x144], 1	      4378	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe14b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe14f	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe155	          0x4863d0	                         movsxd rdx, eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe158	          0x4889d0	                            mov rax, rdx	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe15b	          0x4801c0	                            add rax, rax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe15e	          0x4801d0	                            add rax, rdx	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe161	        0x48c1e004	                              shl rax, 4	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe165	        0x488d1c01	                    lea rbx, [rcx + rax]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe169	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_29
0xe170	      0xbe00000000	                              mov esi, 0	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_29
0xe175	          0x4889c7	                            mov rdi, rax	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_29
0xe178	      0xe800000000	                          call 0x400e1bd	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_29
0xe17d	            0x85c0	                           test eax, eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe17f	            0x7407	                            je 0x400e1c8	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe181	      0xb804000000	                              mov eax, 4	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe186	            0xeb05	                           jmp 0x400e1cd	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe188	      0xb805000000	                              mov eax, 5	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe18d	            0x8903	                    mov dword [rbx], eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0xe18f	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe195	            0x4898	                                    cdqe	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe197	    0x488d14850000	                        lea rdx, [rax*4]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe19f	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1a6	          0x4801d0	                            add rax, rdx	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1a9	            0x8b00	                    mov eax, dword [rax]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1ab	            0x85c0	                           test eax, eax	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1ad	            0x7924	                           jns 0x400e213	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1af	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1b5	            0x4898	                                    cdqe	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1b7	    0x488d14850000	                        lea rdx, [rax*4]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1bf	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1c6	          0x4801c2	                            add rdx, rax	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1c9	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1cf	            0x8902	                    mov dword [rdx], eax	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1d1	            0xeb38	                           jmp 0x400e24b	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0xe1d3	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1d9	            0x4898	                                    cdqe	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1db	    0x488d14850000	                        lea rdx, [rax*4]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1e3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1ea	          0x4801d0	                            add rax, rdx	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1ed	            0x8b00	                    mov eax, dword [rax]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1ef	            0x4898	                                    cdqe	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1f1	    0x488d14850000	                        lea rdx, [rax*4]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe1f9	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe200	          0x4801c2	                            add rdx, rax	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe203	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe209	            0x8902	                    mov dword [rdx], eax	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe20b	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe211	            0x4898	                                    cdqe	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe213	    0x488d14850000	                        lea rdx, [rax*4]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe21b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe222	          0x4801c2	                            add rdx, rax	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe225	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe22b	            0x8902	                    mov dword [rdx], eax	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe22d	      0xe9eb000000	                           jmp 0x400e35d	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0xe232	    0x488b9dd0feff	            mov rbx, qword [rbp - 0x130]	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe239	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe240	          0x4889c7	                            mov rdi, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe243	      0xe800000000	                          call 0x400e288	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe248	            0x89c1	                            mov ecx, eax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe24a	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe251	          0x4889da	                            mov rdx, rbx	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe254	            0x89ce	                            mov esi, ecx	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe256	          0x4889c7	                            mov rdi, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe259	      0xe8a920ffff	          call sym.hashmap_get_from_hash	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe25e	          0x4885c0	                           test rax, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe261	     0xf85b6000000	                           jne 0x400e35d	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_30
0xe267	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe26e	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe275	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe27c	          0x4889c6	                            mov rsi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe27f	      0xbf18000000	                           mov edi, 0x18	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe284	      0xe8d81dffff	                         call sym.st_add	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe289	      0xbe01000000	                              mov esi, 1	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe28e	          0x4889c7	                            mov rdi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe291	      0xe8cb1dffff	                         call sym.st_add	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe296	          0x4889c6	                            mov rsi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe299	      0xbf01000000	                              mov edi, 1	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe29e	      0xe800000000	                          call 0x400e2e3	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2a3	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2aa	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2b1	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2b8	        0x488d4a14	                   lea rcx, [rdx + 0x14]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2bc	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2c3	          0x4889c6	                            mov rsi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2c6	          0x4889cf	                            mov rdi, rcx	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2c9	      0xe800000000	                          call 0x400e30e	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_32
0xe2ce	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0xe2d5	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0xe2db	          0x895010	             mov dword [rax + 0x10], edx	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0xe2de	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2e5	        0x4883c014	                           add rax, 0x14	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2e9	          0x4889c7	                            mov rdi, rax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2ec	      0xe800000000	                          call 0x400e331	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2f1	            0x89c2	                            mov edx, eax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2f3	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2fa	            0x89d6	                            mov esi, edx	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2fc	          0x4889c7	                            mov rdi, rax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe2ff	      0xe8d81fffff	             call sym.hashmap_entry_init	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_34
0xe304	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_35
0xe30b	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_35
0xe312	          0x4889d6	                            mov rsi, rdx	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_35
0xe315	          0x4889c7	                            mov rdi, rax	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_35
0xe318	      0xe800000000	                          call 0x400e35d	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_35
0xe31d	    0x8385c0feffff	              add dword [rbp - 0x140], 1	      4317	sequencer.c	FUNCTION_105	FOR_1
0xe324	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4317	sequencer.c	FUNCTION_105	FOR_1
0xe327	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4317	sequencer.c	FUNCTION_105	FOR_1
0xe32d	     0xf8ff7f9ffff	                            jg 0x400dd6a	      4317	sequencer.c	FUNCTION_105	FOR_1
0xe333	    0x83bdbcfeffff	              cmp dword [rbp - 0x144], 0	      4396	sequencer.c	FUNCTION_105	IF_14
0xe33a	     0xf84d7010000	                            je 0x400e557	      4396	sequencer.c	FUNCTION_105	IF_14
0xe340	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0xe34b	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0xe356	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0xe361	    0xc785c0feffff	              mov dword [rbp - 0x140], 0	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe36b	      0xe963010000	                           jmp 0x400e513	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe370	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe374	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe37a	          0x4863d0	                         movsxd rdx, eax	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe37d	          0x4889d0	                            mov rax, rdx	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe380	          0x4801c0	                            add rax, rax	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe383	          0x4801d0	                            add rax, rdx	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe386	        0x48c1e004	                              shl rax, 4	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe38a	          0x4801c8	                            add rax, rcx	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe38d	            0x8b00	                    mov eax, dword [rax]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe38f	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe395	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4401	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe39b	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4401	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe3a1	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_36
0xe3a7	            0x89c7	                            mov edi, eax	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_36
0xe3a9	      0xe8a458ffff	                       call sym.is_fixup	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_36
0xe3ae	            0x85c0	                           test eax, eax	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_36
0xe3b0	     0xf8515010000	                           jne 0x400e50b	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_36
0xe3b6	      0xe901010000	                           jmp 0x400e4fc	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3bb	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3c1	        0x488d4590	                   lea rax, [rbp - 0x70]	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3c5	            0x89d6	                            mov esi, edx	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3c7	          0x4889c7	                            mov rdi, rax	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3ca	      0xe86077ffff	                  call sym.get_item_line	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3cf	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3d6	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_38
0xe3dc	          0x8d5001	                      lea edx, [rax + 1]	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_38
0xe3df	        0x488d4590	                   lea rax, [rbp - 0x70]	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3e3	            0x89d6	                            mov esi, edx	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3e5	          0x4889c7	                            mov rdi, rax	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3e8	      0xe84277ffff	                  call sym.get_item_line	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3ed	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3f4	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3f8	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe3fe	          0x4863d0	                         movsxd rdx, eax	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe401	          0x4889d0	                            mov rax, rdx	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe404	          0x4801c0	                            add rax, rax	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe407	          0x4801d0	                            add rax, rdx	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe40a	        0x48c1e004	                              shl rax, 4	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe40e	          0x4801c8	                            add rax, rcx	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe411	            0x8b00	                    mov eax, dword [rax]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe413	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe419	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_39
0xe41f	            0x89c7	                            mov edi, eax	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_39
0xe421	      0xe82c58ffff	                       call sym.is_fixup	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_39
0xe426	            0x85c0	                           test eax, eax	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_39
0xe428	            0x7440	                            je 0x400e4aa	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_39
0xe42a	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe430	        0x48c1e004	                              shl rax, 4	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe434	    0x480500000000	                              add rax, 0	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe43a	          0x488b10	                    mov rdx, qword [rax]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe43d	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe444	          0x4889d6	                            mov rsi, rdx	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe447	          0x4889c7	                            mov rdi, rax	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe44a	      0xe8e61dffff	                  call sym.strbuf_addstr	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_40
0xe44f	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_41
0xe456	      0xbe00000000	                              mov esi, 0	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_41
0xe45b	          0x4889c7	                            mov rdi, rax	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_41
0xe45e	      0xe800000000	                          call 0x400e4a3	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_41
0xe463	    0x480185e8feff	           add qword [rbp - 0x118], rax 	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_41
0xe46a	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe471	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe478	          0x4829c2	                            sub rdx, rax	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe47b	          0x4889d0	                            mov rax, rdx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe47e	          0x4889c2	                            mov rdx, rax	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe481	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe488	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe48f	          0x4889ce	                            mov rsi, rcx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe492	          0x4889c7	                            mov rdi, rax	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe495	      0xe800000000	                          call 0x400e4da	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_42
0xe49a	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4a0	            0x4898	                                    cdqe	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4a2	    0x488d14850000	                        lea rdx, [rax*4]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4aa	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4b1	          0x4801d0	                            add rax, rdx	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4b4	            0x8b00	                    mov eax, dword [rax]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4b6	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4bc	    0x83bdc8feffff	              cmp dword [rbp - 0x138], 0	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4c3	     0xf89f2feffff	                           jns 0x400e3fb	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4c9	            0xeb01	                           jmp 0x400e50c	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0xe4cb	              0x90	                                     nop	      4408	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15
0xe4cc	    0x8385c0feffff	              add dword [rbp - 0x140], 1	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe4d3	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe4d6	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe4dc	     0xf8f8efeffff	                            jg 0x400e3b0	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0xe4e2	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_43
0xe4e9	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_43
0xe4f0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_43
0xe4f7	          0x4889ce	                            mov rsi, rcx	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_43
0xe4fa	          0x4889c7	                            mov rdi, rax	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_43
0xe4fd	      0xe8d2f0ffff	                   call sym.rewrite_file	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_43
0xe502	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_43
0xe508	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_44
0xe50f	          0x4889c7	                            mov rdi, rax	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_44
0xe512	      0xe800000000	                          call 0x400e557	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_44
0xe517	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4434	sequencer.c	FUNCTION_105	CALL_45
0xe51e	          0x4889c7	                            mov rdi, rax	      4434	sequencer.c	FUNCTION_105	CALL_45
0xe521	      0xe800000000	                          call 0x400e566	      4434	sequencer.c	FUNCTION_105	CALL_45
0xe526	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4435	sequencer.c	FUNCTION_105	CALL_46
0xe52d	          0x4889c7	                            mov rdi, rax	      4435	sequencer.c	FUNCTION_105	CALL_46
0xe530	      0xe800000000	                          call 0x400e575	      4435	sequencer.c	FUNCTION_105	CALL_46
0xe535	    0xc785c0feffff	              mov dword [rbp - 0x140], 0	      4436	sequencer.c	FUNCTION_105	FOR_5
0xe53f	            0xeb2c	                           jmp 0x400e5ad	      4436	sequencer.c	FUNCTION_105	FOR_5
0xe541	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe547	            0x4898	                                    cdqe	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe549	    0x488d14c50000	                        lea rdx, [rax*8]	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe551	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe558	          0x4801d0	                            add rax, rdx	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe55b	          0x488b00	                    mov rax, qword [rax]	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe55e	          0x4889c7	                            mov rdi, rax	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe561	      0xe800000000	                          call 0x400e5a6	      4437	sequencer.c	FUNCTION_105	CALL_47
0xe566	    0x8385c0feffff	              add dword [rbp - 0x140], 1	      4436	sequencer.c	FUNCTION_105	FOR_5
0xe56d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4436	sequencer.c	FUNCTION_105	FOR_5
0xe570	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4436	sequencer.c	FUNCTION_105	FOR_5
0xe576	            0x7fc9	                            jg 0x400e581	      4436	sequencer.c	FUNCTION_105	FOR_5
0xe578	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4438	sequencer.c	FUNCTION_105	CALL_48
0xe57f	          0x4889c7	                            mov rdi, rax	      4438	sequencer.c	FUNCTION_105	CALL_48
0xe582	      0xe800000000	                          call 0x400e5c7	      4438	sequencer.c	FUNCTION_105	CALL_48
0xe587	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4439	sequencer.c	FUNCTION_105	CALL_49
0xe58e	      0xbe01000000	                              mov esi, 1	      4439	sequencer.c	FUNCTION_105	CALL_49
0xe593	          0x4889c7	                            mov rdi, rax	      4439	sequencer.c	FUNCTION_105	CALL_49
0xe596	      0xe800000000	                          call 0x400e5db	      4439	sequencer.c	FUNCTION_105	CALL_49
0xe59b	        0x488d4590	                   lea rax, [rbp - 0x70]	      4440	sequencer.c	FUNCTION_105	CALL_50
0xe59f	          0x4889c7	                            mov rdi, rax	      4440	sequencer.c	FUNCTION_105	CALL_50
0xe5a2	      0xe8cb6dffff	              call sym.todo_list_release	      4440	sequencer.c	FUNCTION_105	CALL_50
0xe5a7	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4442	sequencer.c	FUNCTION_105
0xe5ad	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4443	sequencer.c	FUNCTION_105
0xe5b1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4443	sequencer.c	FUNCTION_105
0xe5ba	            0x7405	                            je 0x400e601	      4443	sequencer.c	FUNCTION_105
0xe5bc	      0xe800000000	                          call 0x400e601	      4443	sequencer.c	FUNCTION_105
0xe5c1	    0x4881c4480100	                          add rsp, 0x148	      4443	sequencer.c	FUNCTION_105
0xe5c8	              0x5b	                                 pop rbx	      4443	sequencer.c	FUNCTION_105
0xe5c9	              0x5d	                                 pop rbp	      4443	sequencer.c	FUNCTION_105
0xe5ca	              0xc3	                                     ret	      4443	sequencer.c	FUNCTION_105
strbuf_avail	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,0	18
0xf7	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_108
0xf8	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_108
0xfb	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_108
0xff	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_108
0x103	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_108
0x106	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x109	            0x741b	                            je 0x4000166	       141	strbuf.h	FUNCTION_108
0x10b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_108
0x10f	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_108
0x112	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_108
0x116	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_108
0x11a	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_108
0x11d	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_108
0x120	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_108
0x124	            0xeb05	                           jmp 0x400016b	       141	strbuf.h	FUNCTION_108
0x126	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_108
0x12b	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_108
0x12c	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_108
template_untouched	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,5	71
0x273e	              0x55	                                push rbp	       827	sequencer.c	FUNCTION_29
0x273f	          0x4889e5	                            mov rbp, rsp	       827	sequencer.c	FUNCTION_29
0x2742	        0x4883ec50	                           sub rsp, 0x50	       827	sequencer.c	FUNCTION_29
0x2746	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       827	sequencer.c	FUNCTION_29
0x274a	        0x488975c0	             mov qword [rbp - 0x40], rsi	       827	sequencer.c	FUNCTION_29
0x274e	          0x8955bc	             mov dword [rbp - 0x44], edx	       827	sequencer.c	FUNCTION_29
0x2751	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	sequencer.c	FUNCTION_29
0x275a	        0x488945f8	                mov qword [rbp - 8], rax	       827	sequencer.c	FUNCTION_29
0x275e	            0x31c0	                            xor eax, eax	       827	sequencer.c	FUNCTION_29
0x2760	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       828	sequencer.c	FUNCTION_29
0x2768	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       828	sequencer.c	FUNCTION_29
0x2770	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       828	sequencer.c	FUNCTION_29
0x2778	        0x837dbc01	               cmp dword [rbp - 0x44], 1	       831	sequencer.c	FUNCTION_29	IF_1
0x277c	            0x7517	                           jne 0x40027d5	       831	sequencer.c	FUNCTION_29	IF_1
0x277e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       831	sequencer.c	FUNCTION_29	IF_1
0x2782	        0x488b4008	                mov rax, qword [rax + 8]	       831	sequencer.c	FUNCTION_29	IF_1
0x2786	          0x4885c0	                           test rax, rax	       831	sequencer.c	FUNCTION_29	IF_1
0x2789	            0x740a	                            je 0x40027d5	       831	sequencer.c	FUNCTION_29	IF_1
0x278b	      0xb800000000	                              mov eax, 0	       832	sequencer.c	FUNCTION_29	IF_1
0x2790	      0xe99f000000	                           jmp 0x4002874	       832	sequencer.c	FUNCTION_29	IF_1
0x2795	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x279a	            0x741d	                            je 0x40027f9	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x279c	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27a0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27a4	      0xba00000000	                              mov edx, 0	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27a9	          0x4889ce	                            mov rsi, rcx	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27ac	          0x4889c7	                            mov rdi, rax	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27af	      0xe800000000	                          call 0x40027f4	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27b4	          0x4885c0	                           test rax, rax	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27b7	            0x7f07	                            jg 0x4002800	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x27b9	      0xb800000000	                              mov eax, 0	       835	sequencer.c	FUNCTION_29	IF_2
0x27be	            0xeb74	                           jmp 0x4002874	       835	sequencer.c	FUNCTION_29	IF_2
0x27c0	        0x837dbc03	               cmp dword [rbp - 0x44], 3	       837	sequencer.c	FUNCTION_29	CALL_2
0x27c4	           0xf94c0	                                 sete al	       837	sequencer.c	FUNCTION_29	CALL_2
0x27c7	           0xfb6d0	                           movzx edx, al	       837	sequencer.c	FUNCTION_29	CALL_2
0x27ca	        0x488d45e0	                   lea rax, [rbp - 0x20]	       837	sequencer.c	FUNCTION_29	CALL_2
0x27ce	            0x89d6	                            mov esi, edx	       837	sequencer.c	FUNCTION_29	CALL_2
0x27d0	          0x4889c7	                            mov rdi, rax	       837	sequencer.c	FUNCTION_29	CALL_2
0x27d3	      0xe800000000	                          call 0x4002818	       837	sequencer.c	FUNCTION_29	CALL_2
0x27d8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27e0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27e4	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27e8	          0x4889ce	                            mov rsi, rcx	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27eb	          0x4889c7	                            mov rdi, rax	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27ee	      0xe818d8ffff	                    call sym.skip_prefix	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27f3	            0x85c0	                           test eax, eax	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27f5	            0x750c	                           jne 0x4002843	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x27f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       839	sequencer.c	FUNCTION_29	IF_3
0x27fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       839	sequencer.c	FUNCTION_29	IF_3
0x27ff	        0x488945d8	             mov qword [rbp - 0x28], rax	       839	sequencer.c	FUNCTION_29	IF_3
0x2803	        0x488d45e0	                   lea rax, [rbp - 0x20]	       840	sequencer.c	FUNCTION_29	CALL_4
0x2807	          0x4889c7	                            mov rdi, rax	       840	sequencer.c	FUNCTION_29	CALL_4
0x280a	      0xe800000000	                          call 0x400284f	       840	sequencer.c	FUNCTION_29	CALL_4
0x280f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       841	sequencer.c	FUNCTION_29	CALL_5
0x2813	          0x4889c2	                            mov rdx, rax	       841	sequencer.c	FUNCTION_29	CALL_5
0x2816	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       841	sequencer.c	FUNCTION_29	CALL_5
0x281a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       841	sequencer.c	FUNCTION_29	CALL_5
0x281e	          0x4829c2	                            sub rdx, rax	       841	sequencer.c	FUNCTION_29	CALL_5
0x2821	          0x4889d0	                            mov rax, rdx	       841	sequencer.c	FUNCTION_29	CALL_5
0x2824	            0x89c2	                            mov edx, eax	       841	sequencer.c	FUNCTION_29	CALL_5
0x2826	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       841	sequencer.c	FUNCTION_29	CALL_5
0x282a	            0x89d6	                            mov esi, edx	       841	sequencer.c	FUNCTION_29	CALL_5
0x282c	          0x4889c7	                            mov rdi, rax	       841	sequencer.c	FUNCTION_29	CALL_5
0x282f	      0xe8c3fdffff	                  call sym.rest_is_empty	       841	sequencer.c	FUNCTION_29	CALL_5
0x2834	        0x488b4df8	                mov rcx, qword [rbp - 8]	       842	sequencer.c	FUNCTION_29
0x2838	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       842	sequencer.c	FUNCTION_29
0x2841	            0x7405	                            je 0x4002888	       842	sequencer.c	FUNCTION_29
0x2843	      0xe800000000	                          call 0x4002888	       842	sequencer.c	FUNCTION_29
0x2848	              0xc9	                                   leave	       842	sequencer.c	FUNCTION_29
0x2849	              0xc3	                                     ret	       842	sequencer.c	FUNCTION_29
run_rewrite_hook	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,11	85
0x29e5	              0x55	                                push rbp	       883	sequencer.c	FUNCTION_31
0x29e6	          0x4889e5	                            mov rbp, rsp	       883	sequencer.c	FUNCTION_31
0x29e9	              0x53	                                push rbx	       883	sequencer.c	FUNCTION_31
0x29ea	    0x4881ecc80000	                           sub rsp, 0xc8	       883	sequencer.c	FUNCTION_31
0x29f1	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       883	sequencer.c	FUNCTION_31
0x29f8	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       883	sequencer.c	FUNCTION_31
0x29ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       883	sequencer.c	FUNCTION_31
0x2a08	        0x488945e8	             mov qword [rbp - 0x18], rax	       883	sequencer.c	FUNCTION_31
0x2a0c	            0x31c0	                            xor eax, eax	       883	sequencer.c	FUNCTION_31
0x2a0e	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       884	sequencer.c	FUNCTION_31
0x2a15	      0xb800000000	                              mov eax, 0	       884	sequencer.c	FUNCTION_31
0x2a1a	      0xb90c000000	                            mov ecx, 0xc	       884	sequencer.c	FUNCTION_31
0x2a1f	          0x4889d7	                            mov rdi, rdx	       884	sequencer.c	FUNCTION_31
0x2a22	          0xf348ab	              rep stosq qword [rdi], rax	       884	sequencer.c	FUNCTION_31
0x2a25	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       884	sequencer.c	FUNCTION_31
0x2a30	    0x48c745880000	               mov qword [rbp - 0x78], 0	       884	sequencer.c	FUNCTION_31
0x2a38	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       887	sequencer.c	FUNCTION_31
0x2a43	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       887	sequencer.c	FUNCTION_31
0x2a4e	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       887	sequencer.c	FUNCTION_31
0x2a59	      0xbf00000000	                              mov edi, 0	       889	sequencer.c	FUNCTION_31	CALL_1
0x2a5e	      0xe800000000	                          call 0x4002aa3	       889	sequencer.c	FUNCTION_31	CALL_1
0x2a63	        0x488945d0	             mov qword [rbp - 0x30], rax	       889	sequencer.c	FUNCTION_31	CALL_1
0x2a67	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       890	sequencer.c	FUNCTION_31	IF_1
0x2a6b	          0x4885c0	                           test rax, rax	       890	sequencer.c	FUNCTION_31	IF_1
0x2a6e	            0x750a	                           jne 0x4002aba	       890	sequencer.c	FUNCTION_31	IF_1
0x2a70	      0xb800000000	                              mov eax, 0	       891	sequencer.c	FUNCTION_31	IF_1
0x2a75	      0xe9f1000000	                           jmp 0x4002bab	       891	sequencer.c	FUNCTION_31	IF_1
0x2a7a	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       893	sequencer.c	FUNCTION_31
0x2a82	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       894	sequencer.c	FUNCTION_31
0x2a8a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       896	sequencer.c	FUNCTION_31
0x2a8e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       896	sequencer.c	FUNCTION_31
0x2a95	    0xc7459cffffff	     mov dword [rbp - 0x64], 0xffffffff 	       897	sequencer.c	FUNCTION_31
0x2a9c	         0xfb645b8	            movzx eax, byte [rbp - 0x48]	       898	sequencer.c	FUNCTION_31
0x2aa0	          0x83c820	                            or eax, 0x20	       898	sequencer.c	FUNCTION_31
0x2aa3	          0x8845b8	               mov byte [rbp - 0x48], al	       898	sequencer.c	FUNCTION_31
0x2aa6	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       900	sequencer.c	FUNCTION_31	CALL_2
0x2aad	          0x4889c7	                            mov rdi, rax	       900	sequencer.c	FUNCTION_31	CALL_2
0x2ab0	      0xe800000000	                          call 0x4002af5	       900	sequencer.c	FUNCTION_31	CALL_2
0x2ab5	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       900	sequencer.c	FUNCTION_31	CALL_2
0x2abb	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       901	sequencer.c	FUNCTION_31	IF_2
0x2ac2	            0x740b	                            je 0x4002b0f	       901	sequencer.c	FUNCTION_31	IF_2
0x2ac4	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       902	sequencer.c	FUNCTION_31	IF_2
0x2aca	      0xe99c000000	                           jmp 0x4002bab	       902	sequencer.c	FUNCTION_31	IF_2
0x2acf	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       903	sequencer.c	FUNCTION_31	CALL_5
0x2ad6	          0x4889c7	                            mov rdi, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x2ad9	      0xe800000000	                          call 0x4002b1e	       903	sequencer.c	FUNCTION_31	CALL_5
0x2ade	          0x4889c3	                            mov rbx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x2ae1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       903	sequencer.c	FUNCTION_31	CALL_5
0x2ae8	          0x4889c7	                            mov rdi, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x2aeb	      0xe800000000	                          call 0x4002b30	       903	sequencer.c	FUNCTION_31	CALL_5
0x2af0	          0x4889c2	                            mov rdx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x2af3	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       903	sequencer.c	FUNCTION_31	CALL_5
0x2afa	          0x4889d9	                            mov rcx, rbx	       903	sequencer.c	FUNCTION_31	CALL_5
0x2afd	      0xbe00000000	                              mov esi, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x2b02	          0x4889c7	                            mov rdi, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x2b05	      0xb800000000	                              mov eax, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x2b0a	      0xe800000000	                          call 0x4002b4f	       903	sequencer.c	FUNCTION_31	CALL_5
0x2b0f	      0xbe01000000	                              mov esi, 1	       904	sequencer.c	FUNCTION_31	CALL_6
0x2b14	      0xbf0d000000	                            mov edi, 0xd	       904	sequencer.c	FUNCTION_31	CALL_6
0x2b19	      0xe800000000	                          call 0x4002b5e	       904	sequencer.c	FUNCTION_31	CALL_6
0x2b1e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       905	sequencer.c	FUNCTION_31	CALL_7
0x2b25	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       905	sequencer.c	FUNCTION_31	CALL_7
0x2b2c	          0x8b459c	             mov eax, dword [rbp - 0x64]	       905	sequencer.c	FUNCTION_31	CALL_7
0x2b2f	          0x4889ce	                            mov rsi, rcx	       905	sequencer.c	FUNCTION_31	CALL_7
0x2b32	            0x89c7	                            mov edi, eax	       905	sequencer.c	FUNCTION_31	CALL_7
0x2b34	      0xe800000000	                          call 0x4002b79	       905	sequencer.c	FUNCTION_31	CALL_7
0x2b39	          0x8b459c	             mov eax, dword [rbp - 0x64]	       906	sequencer.c	FUNCTION_31	CALL_8
0x2b3c	            0x89c7	                            mov edi, eax	       906	sequencer.c	FUNCTION_31	CALL_8
0x2b3e	      0xe800000000	                          call 0x4002b83	       906	sequencer.c	FUNCTION_31	CALL_8
0x2b43	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       907	sequencer.c	FUNCTION_31	CALL_9
0x2b4a	          0x4889c7	                            mov rdi, rax	       907	sequencer.c	FUNCTION_31	CALL_9
0x2b4d	      0xe800000000	                          call 0x4002b92	       907	sequencer.c	FUNCTION_31	CALL_9
0x2b52	      0xbf0d000000	                            mov edi, 0xd	       908	sequencer.c	FUNCTION_31	CALL_10
0x2b57	      0xe800000000	                          call 0x4002b9c	       908	sequencer.c	FUNCTION_31	CALL_10
0x2b5c	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       909	sequencer.c	FUNCTION_31	CALL_11
0x2b63	          0x4889c7	                            mov rdi, rax	       909	sequencer.c	FUNCTION_31	CALL_11
0x2b66	      0xe800000000	                          call 0x4002bab	       909	sequencer.c	FUNCTION_31	CALL_11
0x2b6b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       910	sequencer.c	FUNCTION_31
0x2b6f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       910	sequencer.c	FUNCTION_31
0x2b78	            0x7405	                            je 0x4002bbf	       910	sequencer.c	FUNCTION_31
0x2b7a	      0xe800000000	                          call 0x4002bbf	       910	sequencer.c	FUNCTION_31
0x2b7f	    0x4881c4c80000	                           add rsp, 0xc8	       910	sequencer.c	FUNCTION_31
0x2b86	              0x5b	                                 pop rbx	       910	sequencer.c	FUNCTION_31
0x2b87	              0x5d	                                 pop rbp	       910	sequencer.c	FUNCTION_31
0x2b88	              0xc3	                                     ret	       910	sequencer.c	FUNCTION_31
update_squash_messages	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,3:IF,10:WHILE,0:CALL,66	376
0x3c73	              0x55	                                push rbp	      1368	sequencer.c	FUNCTION_45
0x3c74	          0x4889e5	                            mov rbp, rsp	      1368	sequencer.c	FUNCTION_45
0x3c77	              0x53	                                push rbx	      1368	sequencer.c	FUNCTION_45
0x3c78	    0x4881ecb80000	                           sub rsp, 0xb8	      1368	sequencer.c	FUNCTION_45
0x3c7f	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      1368	sequencer.c	FUNCTION_45
0x3c85	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      1368	sequencer.c	FUNCTION_45
0x3c8c	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1368	sequencer.c	FUNCTION_45
0x3c93	    0x64488b042528	                mov rax, qword fs:[0x28]	      1368	sequencer.c	FUNCTION_45
0x3c9c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1368	sequencer.c	FUNCTION_45
0x3ca0	            0x31c0	                            xor eax, eax	      1368	sequencer.c	FUNCTION_45
0x3ca2	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1369	sequencer.c	FUNCTION_45
0x3caa	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1369	sequencer.c	FUNCTION_45
0x3cb2	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1369	sequencer.c	FUNCTION_45
0x3cba	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1373	sequencer.c	FUNCTION_45	IF_1
0x3cc1	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1373	sequencer.c	FUNCTION_45	IF_1
0x3cc4	            0x85c0	                           test eax, eax	      1373	sequencer.c	FUNCTION_45	IF_1
0x3cc6	     0xf8e29010000	                           jle 0x4003e35	      1373	sequencer.c	FUNCTION_45	IF_1
0x3ccc	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x3cd4	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x3cdc	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x3ce4	      0xe831caffff	         call sym.rebase_path_squash_msg	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3ce9	          0x4889c1	                            mov rcx, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3cec	        0x488d4590	                   lea rax, [rbp - 0x70]	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3cf0	      0xba09000000	                              mov edx, 9	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3cf5	          0x4889ce	                            mov rsi, rcx	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3cf8	          0x4889c7	                            mov rdi, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3cfb	      0xe800000000	                          call 0x4003d40	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3d00	          0x4885c0	                           test rax, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3d03	            0x7f2c	                            jg 0x4003d71	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x3d05	      0xe810caffff	         call sym.rebase_path_squash_msg	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d0a	          0x4889c3	                            mov rbx, rax	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d0d	      0xbf00000000	                              mov edi, 0	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d12	      0xe850c6ffff	                               call sym.	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d17	          0x4889de	                            mov rsi, rbx	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d1a	          0x4889c7	                            mov rdi, rax	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d1d	      0xb800000000	                              mov eax, 0	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d22	      0xe800000000	                          call 0x4003d67	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d27	      0xe8d4c2ffff	                    call sym.const_error	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d2c	      0xe988050000	                           jmp 0x40042f9	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x3d31	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1381	sequencer.c	FUNCTION_45	IF_1
0x3d35	           0xfb610	                   movzx edx, byte [rax]	      1381	sequencer.c	FUNCTION_45	IF_1
0x3d38	     0xfb605000000	           movzx eax, byte [0x04003d7f] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x3d3f	            0x38c2	                              cmp dl, al	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d41	            0x7406	                            je 0x4003d89	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d43	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d47	            0xeb11	                           jmp 0x4003d9a	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d49	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d4d	      0xbe0a000000	                            mov esi, 0xa	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d52	          0x4889c7	                            mov rdi, rax	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d55	      0xe800000000	                          call 0x4003d9a	      1382	sequencer.c	FUNCTION_45	IF_1	CALL_6
0x3d5a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1381	sequencer.c	FUNCTION_45	IF_1
0x3d61	     0xfb605000000	           movzx eax, byte [0x04003da8] 	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x3d68	           0xfbed0	                           movsx edx, al	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x3d6b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x3d6f	      0xbe00000000	                              mov esi, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x3d74	          0x4889c7	                            mov rdi, rax	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x3d77	      0xb800000000	                              mov eax, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x3d7c	      0xe800000000	                          call 0x4003dc1	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x3d81	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1386	sequencer.c	FUNCTION_45	IF_1
0x3d88	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1386	sequencer.c	FUNCTION_45	IF_1
0x3d8b	          0x8d5802	                      lea ebx, [rax + 2]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3d8e	      0xbf00000000	                              mov edi, 0	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3d93	      0xe8cfc5ffff	                               call sym.	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3d98	          0x4889c1	                            mov rcx, rax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3d9b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3d9f	            0x89da	                            mov edx, ebx	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3da1	          0x4889ce	                            mov rsi, rcx	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3da4	          0x4889c7	                            mov rdi, rax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3da7	      0xb800000000	                              mov eax, 0	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3dac	      0xe800000000	                          call 0x4003df1	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x3db1	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3db5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3db9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dc0	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dc4	          0x4829f0	                            sub rax, rsi	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dc7	          0x4889c6	                            mov rsi, rax	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dca	        0x488d4590	                   lea rax, [rbp - 0x70]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dce	          0x4989c8	                             mov r8, rcx	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dd1	          0x4889d1	                            mov rcx, rdx	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dd4	          0x4889f2	                            mov rdx, rsi	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3dd7	      0xbe00000000	                              mov esi, 0	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3ddc	          0x4889c7	                            mov rdi, rax	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3ddf	      0xe800000000	                          call 0x4003e24	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_10
0x3de4	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_11
0x3de8	          0x4889c7	                            mov rdi, rax	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_11
0x3deb	      0xe800000000	                          call 0x4003e30	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_11
0x3df0	      0xe9f4010000	                           jmp 0x4004029	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_11
0x3df5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_12
0x3df9	          0x4889c6	                            mov rsi, rax	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_12
0x3dfc	      0xbf00000000	                              mov edi, 0	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_12
0x3e01	      0xe800000000	                          call 0x4003e46	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_12
0x3e06	            0x85c0	                           test eax, eax	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_12
0x3e08	            0x7421	                            je 0x4003e6b	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_12
0x3e0a	      0xbf00000000	                              mov edi, 0	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_14
0x3e0f	      0xe853c5ffff	                               call sym.	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_14
0x3e14	          0x4889c7	                            mov rdi, rax	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_14
0x3e17	      0xb800000000	                              mov eax, 0	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_14
0x3e1c	      0xe800000000	                          call 0x4003e61	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_14
0x3e21	      0xe8dac1ffff	                    call sym.const_error	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_14
0x3e26	      0xe98e040000	                           jmp 0x40042f9	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_14
0x3e2b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_15
0x3e2f	          0x4889c7	                            mov rdi, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_15
0x3e32	      0xe800000000	                          call 0x4003e77	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_15
0x3e37	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_15
0x3e3e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_15
0x3e46	            0x7521	                           jne 0x4003ea9	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_15
0x3e48	      0xbf00000000	                              mov edi, 0	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_17
0x3e4d	      0xe815c5ffff	                               call sym.	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_17
0x3e52	          0x4889c7	                            mov rdi, rax	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_17
0x3e55	      0xb800000000	                              mov eax, 0	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_17
0x3e5a	      0xe800000000	                          call 0x4003e9f	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_17
0x3e5f	      0xe89cc1ffff	                    call sym.const_error	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_17
0x3e64	      0xe950040000	                           jmp 0x40042f9	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_17
0x3e69	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_18
0x3e70	      0xbe00000000	                              mov esi, 0	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_18
0x3e75	          0x4889c7	                            mov rdi, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_18
0x3e78	      0xe800000000	                          call 0x4003ebd	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_18
0x3e7d	        0x48894580	             mov qword [rbp - 0x80], rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_18
0x3e81	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_18
0x3e86	            0x7521	                           jne 0x4003ee9	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_18
0x3e88	      0xbf00000000	                              mov edi, 0	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_20
0x3e8d	      0xe8d5c4ffff	                               call sym.	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_20
0x3e92	          0x4889c7	                            mov rdi, rax	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_20
0x3e95	      0xb800000000	                              mov eax, 0	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_20
0x3e9a	      0xe800000000	                          call 0x4003edf	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_20
0x3e9f	      0xe85cc1ffff	                    call sym.const_error	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_20
0x3ea4	      0xe910040000	                           jmp 0x40042f9	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_20
0x3ea9	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_21
0x3ead	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_21
0x3eb1	          0x4889d6	                            mov rsi, rdx	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_21
0x3eb4	          0x4889c7	                            mov rdi, rax	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_21
0x3eb7	      0xe800000000	                          call 0x4003efc	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_21
0x3ebc	      0xe888c8ffff	          call sym.rebase_path_fixup_msg	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ec1	          0x4889c3	                            mov rbx, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ec4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ec8	          0x4889c7	                            mov rdi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ecb	      0xe800000000	                          call 0x4003f10	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ed0	          0x4889c6	                            mov rsi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ed3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ed7	      0xb900000000	                              mov ecx, 0	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3edc	          0x4889da	                            mov rdx, rbx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3edf	          0x4889c7	                            mov rdi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ee2	      0xe8bed3ffff	                  call sym.write_message	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ee7	            0x85c0	                           test eax, eax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3ee9	            0x7442	                            je 0x4003f6d	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_23
0x3eeb	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_25
0x3eef	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_25
0x3ef6	          0x4889d6	                            mov rsi, rdx	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_25
0x3ef9	          0x4889c7	                            mov rdi, rax	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_25
0x3efc	      0xe800000000	                          call 0x4003f41	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_25
0x3f01	      0xe843c8ffff	          call sym.rebase_path_fixup_msg	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f06	          0x4889c3	                            mov rbx, rax	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f09	      0xbf00000000	                              mov edi, 0	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f0e	      0xe854c4ffff	                               call sym.	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f13	          0x4889de	                            mov rsi, rbx	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f16	          0x4889c7	                            mov rdi, rax	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f19	      0xb800000000	                              mov eax, 0	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f1e	      0xe800000000	                          call 0x4003f63	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f23	      0xe8d8c0ffff	                    call sym.const_error	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f28	      0xe98c030000	                           jmp 0x40042f9	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_27
0x3f2d	     0xfb605000000	           movzx eax, byte [0x04003f74] 	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x3f34	           0xfbed0	                           movsx edx, al	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x3f37	        0x488d4590	                   lea rax, [rbp - 0x70]	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x3f3b	      0xbe00000000	                              mov esi, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x3f40	          0x4889c7	                            mov rdi, rax	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x3f43	      0xb800000000	                              mov eax, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x3f48	      0xe800000000	                          call 0x4003f8d	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x3f4d	      0xbf00000000	                              mov edi, 0	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f52	      0xe810c4ffff	                               call sym.	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f57	          0x4889c1	                            mov rcx, rax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f5a	        0x488d4590	                   lea rax, [rbp - 0x70]	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f5e	      0xba02000000	                              mov edx, 2	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f63	          0x4889ce	                            mov rsi, rcx	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f66	          0x4889c7	                            mov rdi, rax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f69	      0xb800000000	                              mov eax, 0	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f6e	      0xe800000000	                          call 0x4003fb3	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x3f73	     0xfb605000000	           movzx eax, byte [0x04003fba] 	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_32
0x3f7a	           0xfbed0	                           movsx edx, al	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_32
0x3f7d	        0x488d4590	                   lea rax, [rbp - 0x70]	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_32
0x3f81	      0xbe00000000	                              mov esi, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_32
0x3f86	          0x4889c7	                            mov rdi, rax	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_32
0x3f89	      0xb800000000	                              mov eax, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_32
0x3f8e	      0xe800000000	                          call 0x4003fd3	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_32
0x3f93	      0xbf00000000	                              mov edi, 0	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_34
0x3f98	      0xe8cac3ffff	                               call sym.	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_34
0x3f9d	          0x4889c2	                            mov rdx, rax	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_34
0x3fa0	        0x488d4590	                   lea rax, [rbp - 0x70]	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_34
0x3fa4	          0x4889d6	                            mov rsi, rdx	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_34
0x3fa7	          0x4889c7	                            mov rdi, rax	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_34
0x3faa	      0xe886c2ffff	                  call sym.strbuf_addstr	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_34
0x3faf	        0x488d4590	                   lea rax, [rbp - 0x70]	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_35
0x3fb3	      0xbe00000000	                              mov esi, 0	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_35
0x3fb8	          0x4889c7	                            mov rdi, rax	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_35
0x3fbb	      0xe875c2ffff	                  call sym.strbuf_addstr	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_35
0x3fc0	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_36
0x3fc4	        0x488d4590	                   lea rax, [rbp - 0x70]	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_36
0x3fc8	          0x4889d6	                            mov rsi, rdx	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_36
0x3fcb	          0x4889c7	                            mov rdi, rax	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_36
0x3fce	      0xe862c2ffff	                  call sym.strbuf_addstr	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_36
0x3fd3	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_37
0x3fd7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_37
0x3fde	          0x4889d6	                            mov rsi, rdx	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_37
0x3fe1	          0x4889c7	                            mov rdi, rax	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_37
0x3fe4	      0xe800000000	                          call 0x4004029	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_37
0x3fe9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_38
0x3ff0	      0xbe00000000	                              mov esi, 0	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_38
0x3ff5	          0x4889c7	                            mov rdi, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_38
0x3ff8	      0xe800000000	                          call 0x400403d	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_38
0x3ffd	        0x48894588	             mov qword [rbp - 0x78], rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_38
0x4001	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_38
0x4006	            0x753a	                           jne 0x4004082	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_38
0x4008	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x400f	        0x4883c004	                              add rax, 4	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x4013	          0x4889c7	                            mov rdi, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x4016	      0xe800000000	                          call 0x400405b	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x401b	          0x4889c3	                            mov rbx, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x401e	      0xbf00000000	                              mov edi, 0	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x4023	      0xe83fc3ffff	                               call sym.	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x4028	          0x4889de	                            mov rsi, rbx	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x402b	          0x4889c7	                            mov rdi, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x402e	      0xb800000000	                              mov eax, 0	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x4033	      0xe800000000	                          call 0x4004078	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x4038	      0xe8c3bfffff	                    call sym.const_error	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x403d	      0xe977020000	                           jmp 0x40042f9	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_40
0x4042	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1422	sequencer.c	FUNCTION_45	CALL_42
0x4046	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1422	sequencer.c	FUNCTION_45	CALL_42
0x404a	          0x4889d6	                            mov rsi, rdx	      1422	sequencer.c	FUNCTION_45	CALL_42
0x404d	          0x4889c7	                            mov rdi, rax	      1422	sequencer.c	FUNCTION_45	CALL_42
0x4050	      0xe800000000	                          call 0x4004095	      1422	sequencer.c	FUNCTION_45	CALL_42
0x4055	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 5	      1424	sequencer.c	FUNCTION_45	IF_8
0x405c	     0xf859a000000	                           jne 0x400413c	      1424	sequencer.c	FUNCTION_45	IF_8
0x4062	      0xe8e2c6ffff	          call sym.rebase_path_fixup_msg	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_44
0x4067	          0x4889c7	                            mov rdi, rax	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_44
0x406a	      0xe800000000	                          call 0x40040af	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_44
0x406f	     0xfb605000000	           movzx eax, byte [0x040040b6] 	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_45
0x4076	           0xfbed0	                           movsx edx, al	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_45
0x4079	        0x488d4590	                   lea rax, [rbp - 0x70]	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_45
0x407d	      0xbe00000000	                              mov esi, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_45
0x4082	          0x4889c7	                            mov rdi, rax	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_45
0x4085	      0xb800000000	                              mov eax, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_45
0x408a	      0xe800000000	                          call 0x40040cf	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_45
0x408f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1428	sequencer.c	FUNCTION_45	IF_8
0x4096	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1428	sequencer.c	FUNCTION_45	IF_8
0x4099	          0x8d5001	                      lea edx, [rax + 1]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x409c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40a3	          0x895078	             mov dword [rax + 0x78], edx	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40a6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1428	sequencer.c	FUNCTION_45	IF_8
0x40ad	          0x8b5878	            mov ebx, dword [rax + 0x78] 	      1428	sequencer.c	FUNCTION_45	IF_8
0x40b0	      0xbf00000000	                              mov edi, 0	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40b5	      0xe8adc2ffff	                               call sym.	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40ba	          0x4889c1	                            mov rcx, rax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40bd	        0x488d4590	                   lea rax, [rbp - 0x70]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40c1	            0x89da	                            mov edx, ebx	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40c3	          0x4889ce	                            mov rsi, rcx	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40c6	          0x4889c7	                            mov rdi, rax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40c9	      0xb800000000	                              mov eax, 0	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40ce	      0xe800000000	                          call 0x4004113	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_47
0x40d3	        0x488d4590	                   lea rax, [rbp - 0x70]	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_48
0x40d7	      0xbe00000000	                              mov esi, 0	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_48
0x40dc	          0x4889c7	                            mov rdi, rax	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_48
0x40df	      0xe851c1ffff	                  call sym.strbuf_addstr	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_48
0x40e4	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_49
0x40e8	        0x488d4590	                   lea rax, [rbp - 0x70]	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_49
0x40ec	          0x4889d6	                            mov rsi, rdx	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_49
0x40ef	          0x4889c7	                            mov rdi, rax	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_49
0x40f2	      0xe83ec1ffff	                  call sym.strbuf_addstr	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_49
0x40f7	      0xe9d2000000	                           jmp 0x400420e	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_49
0x40fc	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 4	      1431	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4103	     0xf8599000000	                           jne 0x40041e2	      1431	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4109	     0xfb605000000	           movzx eax, byte [0x04004150] 	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_50
0x4110	           0xfbed0	                           movsx edx, al	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_50
0x4113	        0x488d4590	                   lea rax, [rbp - 0x70]	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_50
0x4117	      0xbe00000000	                              mov esi, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_50
0x411c	          0x4889c7	                            mov rdi, rax	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_50
0x411f	      0xb800000000	                              mov eax, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_50
0x4124	      0xe800000000	                          call 0x4004169	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_50
0x4129	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4130	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4133	          0x8d5001	                      lea edx, [rax + 1]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x4136	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x413d	          0x895078	             mov dword [rax + 0x78], edx	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x4140	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4147	          0x8b5878	            mov ebx, dword [rax + 0x78] 	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x414a	      0xbf00000000	                              mov edi, 0	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x414f	      0xe813c2ffff	                               call sym.	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x4154	          0x4889c1	                            mov rcx, rax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x4157	        0x488d4590	                   lea rax, [rbp - 0x70]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x415b	            0x89da	                            mov edx, ebx	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x415d	          0x4889ce	                            mov rsi, rcx	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x4160	          0x4889c7	                            mov rdi, rax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x4163	      0xb800000000	                              mov eax, 0	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x4168	      0xe800000000	                          call 0x40041ad	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_52
0x416d	        0x488d4590	                   lea rax, [rbp - 0x70]	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_53
0x4171	      0xbe00000000	                              mov esi, 0	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_53
0x4176	          0x4889c7	                            mov rdi, rax	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_53
0x4179	      0xe8b7c0ffff	                  call sym.strbuf_addstr	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_53
0x417e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x4182	          0x4889c7	                            mov rdi, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x4185	      0xe800000000	                          call 0x40041ca	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x418a	          0x4889c2	                            mov rdx, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x418d	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x4191	        0x488d4590	                   lea rax, [rbp - 0x70]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x4195	          0x4889ce	                            mov rsi, rcx	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x4198	          0x4889c7	                            mov rdi, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x419b	      0xe800000000	                          call 0x40041e0	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x41a0	            0xeb2c	                           jmp 0x400420e	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_55
0x41a2	      0xbf00000000	                              mov edi, 0	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41a7	      0xe8bbc1ffff	                               call sym.	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41ac	          0x4889c2	                            mov rdx, rax	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41af	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41b5	            0x89c6	                            mov esi, eax	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41b7	          0x4889d7	                            mov rdi, rdx	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41ba	      0xb800000000	                              mov eax, 0	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41bf	      0xe800000000	                          call 0x4004204	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41c4	      0xe837beffff	                    call sym.const_error	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41c9	      0xe9eb000000	                           jmp 0x40042f9	      1438	sequencer.c	FUNCTION_45	CALL_57
0x41ce	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1439	sequencer.c	FUNCTION_45	CALL_58
0x41d2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1439	sequencer.c	FUNCTION_45	CALL_58
0x41d9	          0x4889d6	                            mov rsi, rdx	      1439	sequencer.c	FUNCTION_45	CALL_58
0x41dc	          0x4889c7	                            mov rdi, rax	      1439	sequencer.c	FUNCTION_45	CALL_58
0x41df	      0xe800000000	                          call 0x4004224	      1439	sequencer.c	FUNCTION_45	CALL_58
0x41e4	      0xe831c5ffff	         call sym.rebase_path_squash_msg	      1441	sequencer.c	FUNCTION_45	CALL_60
0x41e9	          0x4889c2	                            mov rdx, rax	      1441	sequencer.c	FUNCTION_45	CALL_60
0x41ec	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1441	sequencer.c	FUNCTION_45	CALL_60
0x41f0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1441	sequencer.c	FUNCTION_45	CALL_60
0x41f4	      0xb900000000	                              mov ecx, 0	      1441	sequencer.c	FUNCTION_45	CALL_60
0x41f9	          0x4889c7	                            mov rdi, rax	      1441	sequencer.c	FUNCTION_45	CALL_60
0x41fc	      0xe8a4d0ffff	                  call sym.write_message	      1441	sequencer.c	FUNCTION_45	CALL_60
0x4201	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1441	sequencer.c	FUNCTION_45	CALL_60
0x4207	        0x488d4590	                   lea rax, [rbp - 0x70]	      1442	sequencer.c	FUNCTION_45	CALL_61
0x420b	          0x4889c7	                            mov rdi, rax	      1442	sequencer.c	FUNCTION_45	CALL_61
0x420e	      0xe800000000	                          call 0x4004253	      1442	sequencer.c	FUNCTION_45	CALL_61
0x4213	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1444	sequencer.c	FUNCTION_45	IF_10
0x421a	     0xf8593000000	                           jne 0x40042f3	      1444	sequencer.c	FUNCTION_45	IF_10
0x4220	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1448	sequencer.c	FUNCTION_45	IF_10	CALL_64
0x4227	        0x4883c004	                              add rax, 4	      1448	sequencer.c	FUNCTION_45	IF_10	CALL_64
0x422b	          0x4889c7	                            mov rdi, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x422e	      0xe800000000	                          call 0x4004273	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4233	          0x4889c3	                            mov rbx, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4236	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x423c	            0x89c7	                            mov edi, eax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x423e	      0xe887f9ffff	              call sym.command_to_string	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4243	          0x4889c1	                            mov rcx, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4246	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1446	sequencer.c	FUNCTION_45	IF_10
0x424d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1446	sequencer.c	FUNCTION_45	IF_10
0x4251	          0x4885c0	                           test rax, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4254	            0x7407	                            je 0x400429d	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4256	      0xba00000000	                              mov edx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x425b	            0xeb05	                           jmp 0x40042a2	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x425d	      0xba00000000	                              mov edx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4262	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4269	        0x4883c060	                           add rax, 0x60	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x426d	          0x4989d8	                             mov r8, rbx	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4270	      0xbe00000000	                              mov esi, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4275	          0x4889c7	                            mov rdi, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4278	      0xb800000000	                              mov eax, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x427d	      0xe800000000	                          call 0x40042c2	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_62
0x4282	      0xe8f1c4ffff	     call sym.rebase_path_current_fixups	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x4287	          0x4889c2	                            mov rdx, rax	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x428a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x4291	        0x488b7068	            mov rsi, qword [rax + 0x68] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x4295	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x429c	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x42a0	      0xb900000000	                              mov ecx, 0	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x42a5	          0x4889c7	                            mov rdi, rax	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x42a8	      0xe8f8cfffff	                  call sym.write_message	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x42ad	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_65
0x42b3	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1454	sequencer.c	FUNCTION_45
0x42b9	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1455	sequencer.c	FUNCTION_45
0x42bd	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1455	sequencer.c	FUNCTION_45
0x42c6	            0x7405	                            je 0x400430d	      1455	sequencer.c	FUNCTION_45
0x42c8	      0xe800000000	                          call 0x400430d	      1455	sequencer.c	FUNCTION_45
0x42cd	    0x4881c4b80000	                           add rsp, 0xb8	      1455	sequencer.c	FUNCTION_45
0x42d4	              0x5b	                                 pop rbx	      1455	sequencer.c	FUNCTION_45
0x42d5	              0x5d	                                 pop rbp	      1455	sequencer.c	FUNCTION_45
0x42d6	              0xc3	                                     ret	      1455	sequencer.c	FUNCTION_45
do_pick_commit	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,12:IF,38:WHILE,0:CALL,106	725
0x449b	              0x55	                                push rbp	      1497	sequencer.c	FUNCTION_48
0x449c	          0x4889e5	                            mov rbp, rsp	      1497	sequencer.c	FUNCTION_48
0x449f	            0x4154	                                push r12	      1497	sequencer.c	FUNCTION_48
0x44a1	              0x53	                                push rbx	      1497	sequencer.c	FUNCTION_48
0x44a2	    0x4881ecf00000	                           sub rsp, 0xf0	      1497	sequencer.c	FUNCTION_48
0x44a9	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	      1497	sequencer.c	FUNCTION_48
0x44af	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      1497	sequencer.c	FUNCTION_48
0x44b6	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	      1497	sequencer.c	FUNCTION_48
0x44bd	    0x898d18ffffff	             mov dword [rbp - 0xe8], ecx	      1497	sequencer.c	FUNCTION_48
0x44c3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	sequencer.c	FUNCTION_48
0x44cc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1497	sequencer.c	FUNCTION_48
0x44d0	            0x31c0	                            xor eax, eax	      1497	sequencer.c	FUNCTION_48
0x44d2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1498	sequencer.c	FUNCTION_48
0x44d9	          0x8b4004	                mov eax, dword [rax + 4]	      1498	sequencer.c	FUNCTION_48
0x44dc	            0x85c0	                           test eax, eax	      1498	sequencer.c	FUNCTION_48
0x44de	            0x7407	                            je 0x4004527	      1498	sequencer.c	FUNCTION_48
0x44e0	      0xb802000000	                              mov eax, 2	      1498	sequencer.c	FUNCTION_48
0x44e5	            0xeb05	                           jmp 0x400452c	      1498	sequencer.c	FUNCTION_48
0x44e7	      0xb800000000	                              mov eax, 0	      1498	sequencer.c	FUNCTION_48
0x44ec	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      1498	sequencer.c	FUNCTION_48
0x44f2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1499	sequencer.c	FUNCTION_48	CALL_1
0x44f9	          0x8b4004	                mov eax, dword [rax + 4]	      1499	sequencer.c	FUNCTION_48	CALL_1
0x44fc	            0x85c0	                           test eax, eax	      1499	sequencer.c	FUNCTION_48	CALL_1
0x44fe	            0x7507	                           jne 0x4004547	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4500	      0xe800000000	                          call 0x4004545	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4505	            0xeb05	                           jmp 0x400454c	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4507	      0xb800000000	                              mov eax, 0	      1499	sequencer.c	FUNCTION_48	CALL_1
0x450c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4513	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1503	sequencer.c	FUNCTION_48
0x451e	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1504	sequencer.c	FUNCTION_48
0x4526	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1504	sequencer.c	FUNCTION_48
0x452e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1504	sequencer.c	FUNCTION_48
0x4536	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1504	sequencer.c	FUNCTION_48
0x453e	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1505	sequencer.c	FUNCTION_48
0x4546	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1505	sequencer.c	FUNCTION_48
0x454e	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1505	sequencer.c	FUNCTION_48
0x4556	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      1506	sequencer.c	FUNCTION_48
0x4560	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1508	sequencer.c	FUNCTION_48	IF_1
0x4567	          0x8b400c	              mov eax, dword [rax + 0xc]	      1508	sequencer.c	FUNCTION_48	IF_1
0x456a	            0x85c0	                           test eax, eax	      1508	sequencer.c	FUNCTION_48	IF_1
0x456c	            0x743f	                            je 0x40045ed	      1508	sequencer.c	FUNCTION_48	IF_1
0x456e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4572	      0xba00000000	                              mov edx, 0	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4577	      0xbe00000000	                              mov esi, 0	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x457c	          0x4889c7	                            mov rdi, rax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x457f	      0xe800000000	                          call 0x40045c4	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4584	            0x85c0	                           test eax, eax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4586	     0xf849e000000	                            je 0x400466a	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x458c	      0xbf00000000	                              mov edi, 0	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_4
0x4591	      0xe8d1bdffff	                               call sym.	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_4
0x4596	          0x4889c7	                            mov rdi, rax	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_4
0x4599	      0xb800000000	                              mov eax, 0	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_4
0x459e	      0xe800000000	                          call 0x40045e3	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_4
0x45a3	      0xe858baffff	                    call sym.const_error	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_4
0x45a8	      0xe9b10b0000	                           jmp 0x400519e	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_4
0x45ad	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x45b1	          0x4889c6	                            mov rsi, rax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x45b4	      0xbf00000000	                              mov edi, 0	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x45b9	      0xe800000000	                          call 0x40045fe	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x45be	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x45c4	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x45cb	            0x741e	                            je 0x400462b	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x45cd	    0x488b05000000	            mov rax, qword [0x04004614] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_6
0x45d4	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_6
0x45d8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_6
0x45dc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_6
0x45e0	          0x4889d6	                            mov rsi, rdx	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_6
0x45e3	          0x4889c7	                            mov rdi, rax	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_6
0x45e6	      0xe849beffff	                         call sym.oidcpy	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_6
0x45eb	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x45f2	            0x7407	                            je 0x400463b	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x45f4	      0xb800000000	                              mov eax, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x45f9	            0xeb05	                           jmp 0x4004640	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x45fb	      0xb800000000	                              mov eax, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x4600	      0xba00000000	                              mov edx, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x4605	      0xbe00000000	                              mov esi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x460a	          0x4889c7	                            mov rdi, rax	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x460d	      0xe800000000	                          call 0x4004652	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x4612	            0x85c0	                           test eax, eax	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x4614	            0x7414	                            je 0x400466a	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_7
0x4616	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_8
0x461d	          0x4889c7	                            mov rdi, rax	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_8
0x4620	      0xe860cfffff	              call sym.error_dirty_index	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_8
0x4625	      0xe9340b0000	                           jmp 0x400519e	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_8
0x462a	      0xbf00000000	                              mov edi, 0	      1525	sequencer.c	FUNCTION_48	CALL_9
0x462f	      0xe800000000	                          call 0x4004674	      1525	sequencer.c	FUNCTION_48	CALL_9
0x4634	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1527	sequencer.c	FUNCTION_48	IF_5
0x463b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1527	sequencer.c	FUNCTION_48	IF_5
0x463f	          0x4885c0	                           test rax, rax	      1527	sequencer.c	FUNCTION_48	IF_5
0x4642	            0x7510	                           jne 0x4004694	      1527	sequencer.c	FUNCTION_48	IF_5
0x4644	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      1528	sequencer.c	FUNCTION_48	IF_5
0x464f	      0xe973010000	                           jmp 0x4004807	      1528	sequencer.c	FUNCTION_48	IF_5
0x4654	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x465b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x465f	        0x488b4008	                mov rax, qword [rax + 8]	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4663	          0x4885c0	                           test rax, rax	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4666	     0xf84fe000000	                            je 0x40047aa	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x466c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x4673	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x4676	            0x85c0	                           test eax, eax	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x4678	            0x753a	                           jne 0x40046f4	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x467a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x4681	        0x4883c004	                              add rax, 4	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x4685	          0x4889c7	                            mov rdi, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x4688	      0xe800000000	                          call 0x40046cd	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x468d	          0x4889c3	                            mov rbx, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x4690	      0xbf00000000	                              mov edi, 0	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x4695	      0xe8cdbcffff	                               call sym.	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x469a	          0x4889de	                            mov rsi, rbx	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x469d	          0x4889c7	                            mov rdi, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x46a0	      0xb800000000	                              mov eax, 0	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x46a5	      0xe800000000	                          call 0x40046ea	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x46aa	      0xe851b9ffff	                    call sym.const_error	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x46af	      0xe9aa0a0000	                           jmp 0x400519e	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_11
0x46b4	    0xc78530ffffff	               mov dword [rbp - 0xd0], 1	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46be	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46c5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46c9	        0x48894580	             mov qword [rbp - 0x80], rax	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46cd	            0xeb13	                           jmp 0x4004722	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46cf	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1541	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46d3	        0x488b4008	                mov rax, qword [rax + 8]	      1541	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46d7	        0x48894580	             mov qword [rbp - 0x80], rax	      1541	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46db	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      1540	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46e2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46e9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46ec	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46f2	            0x7407	                            je 0x400473b	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46f4	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46f9	            0x75d4	                           jne 0x400470f	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x46fb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4702	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4705	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x470b	            0x7507	                           jne 0x4004754	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x470d	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4712	            0x7546	                           jne 0x400479a	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4714	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x471b	          0x8b582c	            mov ebx, dword [rax + 0x2c] 	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x471e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4725	        0x4883c004	                              add rax, 4	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4729	          0x4889c7	                            mov rdi, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x472c	      0xe800000000	                          call 0x4004771	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4731	          0x4989c4	                            mov r12, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4734	      0xbf00000000	                              mov edi, 0	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4739	      0xe829bcffff	                               call sym.	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x473e	            0x89da	                            mov edx, ebx	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4740	          0x4c89e6	                            mov rsi, r12	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4743	          0x4889c7	                            mov rdi, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4746	      0xb800000000	                              mov eax, 0	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x474b	      0xe800000000	                          call 0x4004790	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4750	      0xe8abb8ffff	                    call sym.const_error	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x4755	      0xe9040a0000	                           jmp 0x400519e	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_14
0x475a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x475e	          0x488b00	                    mov rax, qword [rax]	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4761	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4768	            0xeb5d	                           jmp 0x4004807	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x476a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4771	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4774	            0x85c0	                           test eax, eax	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4776	            0x7e3a	                           jle 0x40047f2	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4778	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x477f	        0x4883c004	                              add rax, 4	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x4783	          0x4889c7	                            mov rdi, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x4786	      0xe800000000	                          call 0x40047cb	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x478b	          0x4889c3	                            mov rbx, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x478e	      0xbf00000000	                              mov edi, 0	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x4793	      0xe8cfbbffff	                               call sym.	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x4798	          0x4889de	                            mov rsi, rbx	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x479b	          0x4889c7	                            mov rdi, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x479e	      0xb800000000	                              mov eax, 0	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x47a3	      0xe800000000	                          call 0x40047e8	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x47a8	      0xe853b8ffff	                    call sym.const_error	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x47ad	      0xe9ac090000	                           jmp 0x400519e	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_17
0x47b2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x47b9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x47bd	          0x488b00	                    mov rax, qword [rax]	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x47c0	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x47c7	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_19
0x47cb	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_19
0x47d2	          0x4889d6	                            mov rsi, rdx	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_19
0x47d5	          0x4889c7	                            mov rdi, rax	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_19
0x47d8	      0xe8e7c8ffff	                    call sym.get_message	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_19
0x47dd	            0x85c0	                           test eax, eax	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_19
0x47df	            0x743a	                            je 0x400485b	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_19
0x47e1	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x47e8	        0x4883c004	                              add rax, 4	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x47ec	          0x4889c7	                            mov rdi, rax	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x47ef	      0xe800000000	                          call 0x4004834	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x47f4	          0x4889c3	                            mov rbx, rax	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x47f7	      0xbf00000000	                              mov edi, 0	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x47fc	      0xe866bbffff	                               call sym.	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x4801	          0x4889de	                            mov rsi, rbx	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x4804	          0x4889c7	                            mov rdi, rax	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x4807	      0xb800000000	                              mov eax, 0	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x480c	      0xe800000000	                          call 0x4004851	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x4811	      0xe8eab7ffff	                    call sym.const_error	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x4816	      0xe943090000	                           jmp 0x400519e	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_21
0x481b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x4822	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x4825	            0x85c0	                           test eax, eax	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x4827	     0xf84ce000000	                            je 0x400493b	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x482d	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x4833	            0x89c7	                            mov edi, eax	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x4835	      0xe818f4ffff	                       call sym.is_fixup	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x483a	            0x85c0	                           test eax, eax	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x483c	     0xf85b9000000	                           jne 0x400493b	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x4842	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x484a	            0x741e	                            je 0x40048aa	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_23
0x484c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x4853	        0x488d5004	                      lea rdx, [rax + 4]	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x4857	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x485b	          0x4889c6	                            mov rsi, rax	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x485e	          0x4889d7	                            mov rdi, rdx	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x4861	      0xe857bbffff	                         call sym.oidcmp	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x4866	            0x85c0	                           test eax, eax	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x4868	            0x7417	                            je 0x40048c1	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x486a	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x4872	     0xf8583000000	                           jne 0x400493b	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_24
0x4878	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1558	sequencer.c	FUNCTION_48	IF_11
0x487f	            0x747a	                            je 0x400493b	      1558	sequencer.c	FUNCTION_48	IF_11
0x4881	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_25
0x4888	          0x4889c7	                            mov rdi, rax	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_25
0x488b	      0xe8f8c3ffff	                    call sym.is_rebase_i	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_25
0x4890	            0x85c0	                           test eax, eax	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_25
0x4892	            0x740c	                            je 0x40048e0	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_25
0x4894	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_26
0x4898	          0x4889c7	                            mov rdi, rax	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_26
0x489b	      0xe806d5ffff	            call sym.write_author_script	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_26
0x48a0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48a7	        0x488d7804	                      lea rdi, [rax + 4]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48ab	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48b2	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48b8	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48bc	          0x4889c6	                            mov rsi, rax	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48bf	      0xe800ceffff	                call sym.fast_forward_to	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48c4	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_27
0x48ca	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x48d1	     0xf8557080000	                           jne 0x400516e	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x48d7	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 3	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x48de	     0xf854a080000	                           jne 0x400516e	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x48e4	    0x838d24ffffff	             or dword [rbp - 0xdc], 0x16	      1565	sequencer.c	FUNCTION_48	IF_11
0x48eb	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1566	sequencer.c	FUNCTION_48	IF_11
0x48f6	      0xe967070000	                           jmp 0x40050a2	      1567	sequencer.c	FUNCTION_48	IF_11
0x48fb	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_28
0x4903	            0x7460	                            je 0x40049a5	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_28
0x4905	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_28
0x490c	          0x4889c7	                            mov rdi, rax	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_28
0x490f	      0xe8b3bbffff	                   call sym.parse_commit	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_28
0x4914	            0x85c0	                           test eax, eax	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_28
0x4916	            0x794d	                           jns 0x40049a5	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_28
0x4918	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x491f	        0x4883c004	                              add rax, 4	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4923	          0x4889c7	                            mov rdi, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4926	      0xe800000000	                          call 0x400496b	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x492b	          0x4989c4	                            mov r12, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x492e	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4934	            0x89c7	                            mov edi, eax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4936	      0xe88ff2ffff	              call sym.command_to_string	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x493b	          0x4889c3	                            mov rbx, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x493e	      0xbf00000000	                              mov edi, 0	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4943	      0xe81fbaffff	                               call sym.	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4948	          0x4c89e2	                            mov rdx, r12	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x494b	          0x4889de	                            mov rsi, rbx	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x494e	          0x4889c7	                            mov rdi, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4951	      0xb800000000	                              mov eax, 0	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4956	      0xe800000000	                          call 0x400499b	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x495b	      0xe8a0b6ffff	                    call sym.const_error	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4960	      0xe9f9070000	                           jmp 0x400519e	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_30
0x4965	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1583	sequencer.c	FUNCTION_48	IF_15
0x496c	     0xf85fc000000	                           jne 0x4004aae	      1583	sequencer.c	FUNCTION_48	IF_15
0x4972	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1584	sequencer.c	FUNCTION_48	IF_15
0x4979	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1584	sequencer.c	FUNCTION_48	IF_15
0x4980	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1585	sequencer.c	FUNCTION_48	IF_15
0x4984	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1585	sequencer.c	FUNCTION_48	IF_15
0x498b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1586	sequencer.c	FUNCTION_48	IF_15
0x4992	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1586	sequencer.c	FUNCTION_48	IF_15
0x4999	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1587	sequencer.c	FUNCTION_48	IF_15
0x499d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1587	sequencer.c	FUNCTION_48	IF_15
0x49a4	        0x488d4590	                   lea rax, [rbp - 0x70]	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_33
0x49a8	      0xbe00000000	                              mov esi, 0	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_33
0x49ad	          0x4889c7	                            mov rdi, rax	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_33
0x49b0	      0xe880b8ffff	                  call sym.strbuf_addstr	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_33
0x49b5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x49b9	        0x488d4590	                   lea rax, [rbp - 0x70]	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x49bd	          0x4889d6	                            mov rsi, rdx	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x49c0	          0x4889c7	                            mov rdi, rax	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x49c3	      0xe86db8ffff	                  call sym.strbuf_addstr	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x49c8	        0x488d4590	                   lea rax, [rbp - 0x70]	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_35
0x49cc	      0xbe00000000	                              mov esi, 0	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_35
0x49d1	          0x4889c7	                            mov rdi, rax	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_35
0x49d4	      0xe85cb8ffff	                  call sym.strbuf_addstr	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_35
0x49d9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49e0	        0x4883c004	                              add rax, 4	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49e4	          0x4889c7	                            mov rdi, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49e7	      0xe800000000	                          call 0x4004a2c	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49ec	          0x4889c2	                            mov rdx, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49ef	        0x488d4590	                   lea rax, [rbp - 0x70]	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49f3	          0x4889d6	                            mov rsi, rdx	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49f6	          0x4889c7	                            mov rdi, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49f9	      0xe837b8ffff	                  call sym.strbuf_addstr	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_37
0x49fe	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a05	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a09	          0x4885c0	                           test rax, rax	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a0c	            0x744a	                            je 0x4004a98	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a0e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a15	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a19	        0x488b4008	                mov rax, qword [rax + 8]	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a1d	          0x4885c0	                           test rax, rax	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a20	            0x7436	                            je 0x4004a98	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4a22	        0x488d4590	                   lea rax, [rbp - 0x70]	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_38
0x4a26	      0xbe00000000	                              mov esi, 0	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_38
0x4a2b	          0x4889c7	                            mov rdi, rax	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_38
0x4a2e	      0xe802b8ffff	                  call sym.strbuf_addstr	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_38
0x4a33	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a3a	        0x4883c004	                              add rax, 4	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a3e	          0x4889c7	                            mov rdi, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a41	      0xe800000000	                          call 0x4004a86	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a46	          0x4889c2	                            mov rdx, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a49	        0x488d4590	                   lea rax, [rbp - 0x70]	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a4d	          0x4889d6	                            mov rsi, rdx	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a50	          0x4889c7	                            mov rdi, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a53	      0xe8ddb7ffff	                  call sym.strbuf_addstr	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_40
0x4a58	        0x488d4590	                   lea rax, [rbp - 0x70]	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_41
0x4a5c	      0xbe00000000	                              mov esi, 0	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_41
0x4a61	          0x4889c7	                            mov rdi, rax	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_41
0x4a64	      0xe8ccb7ffff	                  call sym.strbuf_addstr	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_41
0x4a69	      0xe912010000	                           jmp 0x4004bc0	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_41
0x4a6e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1601	sequencer.c	FUNCTION_48	ELSE_5
0x4a75	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1601	sequencer.c	FUNCTION_48	ELSE_5
0x4a7c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1602	sequencer.c	FUNCTION_48	ELSE_5
0x4a80	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1602	sequencer.c	FUNCTION_48	ELSE_5
0x4a87	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x4a8e	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x4a95	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1604	sequencer.c	FUNCTION_48	ELSE_5
0x4a99	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1604	sequencer.c	FUNCTION_48	ELSE_5
0x4aa0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_42
0x4aa4	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_42
0x4aab	          0x4889d6	                            mov rsi, rdx	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_42
0x4aae	          0x4889c7	                            mov rdi, rax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_42
0x4ab1	      0xe800000000	                          call 0x4004af6	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_42
0x4ab6	            0x85c0	                           test eax, eax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_42
0x4ab8	            0x7416	                            je 0x4004b10	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_42
0x4aba	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_43
0x4ac1	        0x488d4590	                   lea rax, [rbp - 0x70]	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_43
0x4ac5	          0x4889d6	                            mov rsi, rdx	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_43
0x4ac8	          0x4889c7	                            mov rdi, rax	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_43
0x4acb	      0xe865b7ffff	                  call sym.strbuf_addstr	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_43
0x4ad0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4ad7	          0x8b4008	                mov eax, dword [rax + 8]	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4ada	            0x85c0	                           test eax, eax	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4adc	            0x747e	                            je 0x4004b9c	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4ade	        0x488d4590	                   lea rax, [rbp - 0x70]	      1611	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_44
0x4ae2	          0x4889c7	                            mov rdi, rax	      1611	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_44
0x4ae5	      0xe8d2b7ffff	           call sym.strbuf_complete_line	      1611	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_44
0x4aea	        0x488d4590	                   lea rax, [rbp - 0x70]	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_45
0x4aee	      0xba00000000	                              mov edx, 0	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_45
0x4af3	      0xbe00000000	                              mov esi, 0	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_45
0x4af8	          0x4889c7	                            mov rdi, rax	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_45
0x4afb	      0xe8f5c1ffff	          call sym.has_conforming_footer	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_45
0x4b00	            0x85c0	                           test eax, eax	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_45
0x4b02	            0x7511	                           jne 0x4004b55	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_45
0x4b04	        0x488d4590	                   lea rax, [rbp - 0x70]	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_46
0x4b08	      0xbe0a000000	                            mov esi, 0xa	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_46
0x4b0d	          0x4889c7	                            mov rdi, rax	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_46
0x4b10	      0xe8b2b6ffff	                   call sym.strbuf_addch	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_46
0x4b15	        0x488d4590	                   lea rax, [rbp - 0x70]	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_47
0x4b19	      0xbe00000000	                              mov esi, 0	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_47
0x4b1e	          0x4889c7	                            mov rdi, rax	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_47
0x4b21	      0xe80fb7ffff	                  call sym.strbuf_addstr	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_47
0x4b26	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b2d	        0x4883c004	                              add rax, 4	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b31	          0x4889c7	                            mov rdi, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b34	      0xe800000000	                          call 0x4004b79	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b39	          0x4889c2	                            mov rdx, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b3c	        0x488d4590	                   lea rax, [rbp - 0x70]	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b40	          0x4889d6	                            mov rsi, rdx	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b43	          0x4889c7	                            mov rdi, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b46	      0xe8eab6ffff	                  call sym.strbuf_addstr	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_49
0x4b4b	        0x488d4590	                   lea rax, [rbp - 0x70]	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_50
0x4b4f	      0xbe00000000	                              mov esi, 0	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_50
0x4b54	          0x4889c7	                            mov rdi, rax	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_50
0x4b57	      0xe8d9b6ffff	                  call sym.strbuf_addstr	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_50
0x4b5c	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_51
0x4b62	            0x89c7	                            mov edi, eax	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_51
0x4b64	      0xe8e9f0ffff	                       call sym.is_fixup	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_51
0x4b69	            0x85c0	                           test eax, eax	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_51
0x4b6b	            0x7513	                           jne 0x4004bc0	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_51
0x4b6d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_52
0x4b71	          0x4889c7	                            mov rdi, rax	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_52
0x4b74	      0xe895d6ffff	                     call sym.get_author	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_52
0x4b79	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_52
0x4b80	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 3	      1622	sequencer.c	FUNCTION_48	IF_21
0x4b87	            0x750c	                           jne 0x4004bd5	      1622	sequencer.c	FUNCTION_48	IF_21
0x4b89	    0x838d24ffffff	             or dword [rbp - 0xdc], 0x12	      1623	sequencer.c	FUNCTION_48	IF_21
0x4b90	      0xe915010000	                           jmp 0x4004cea	      1623	sequencer.c	FUNCTION_48	IF_21
0x4b95	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_53
0x4b9b	            0x89c7	                            mov edi, eax	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_53
0x4b9d	      0xe8b0f0ffff	                       call sym.is_fixup	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_53
0x4ba2	            0x85c0	                           test eax, eax	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_53
0x4ba4	     0xf8400010000	                            je 0x4004cea	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_53
0x4baa	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bb1	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bb8	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bbe	          0x4889ce	                            mov rsi, rcx	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bc1	            0x89c7	                            mov edi, eax	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bc3	      0xe8abf0ffff	         call sym.update_squash_messages	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bc8	            0x85c0	                           test eax, eax	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bca	            0x740a	                            je 0x4004c16	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_54
0x4bcc	      0xb8ffffffff	                     mov eax, 0xffffffff	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x4bd1	      0xe988050000	                           jmp 0x400519e	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x4bd6	    0x838d24ffffff	                or dword [rbp - 0xdc], 4	      1627	sequencer.c	FUNCTION_48	ELSE_6	IF_22
0x4bdd	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4be4	            0x7511	                           jne 0x4004c37	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4be6	      0xe82fbbffff	         call sym.rebase_path_squash_msg	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_55
0x4beb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_55
0x4bf2	      0xe9b3000000	                           jmp 0x4004cea	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_55
0x4bf7	      0xe84dbbffff	          call sym.rebase_path_fixup_msg	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_57
0x4bfc	          0x4889c7	                            mov rdi, rax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_57
0x4bff	      0xe800000000	                          call 0x4004c44	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_57
0x4c04	            0x85c0	                           test eax, eax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_57
0x4c06	            0x7418	                            je 0x4004c60	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_57
0x4c08	    0x838d24ffffff	                or dword [rbp - 0xdc], 8	      1631	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25
0x4c0f	      0xe835bbffff	          call sym.rebase_path_fixup_msg	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_58
0x4c14	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_58
0x4c1b	      0xe98a000000	                           jmp 0x4004cea	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_58
0x4c20	      0xe800000000	                          call 0x4004c65	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4c25	        0x48894588	             mov qword [rbp - 0x78], rax	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4c29	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_60
0x4c2d	          0x4889c7	                            mov rdi, rax	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_60
0x4c30	      0xe800000000	                          call 0x4004c75	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_60
0x4c35	      0xe8e0baffff	         call sym.rebase_path_squash_msg	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c3a	          0x4889c1	                            mov rcx, rax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c3d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c41	      0xbab6010000	                          mov edx, 0x1b6	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c46	          0x4889ce	                            mov rsi, rcx	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c49	          0x4889c7	                            mov rdi, rax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c4c	      0xe800000000	                          call 0x4004c91	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c51	            0x85c0	                           test eax, eax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c53	            0x7436	                            je 0x4004ccb	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_62
0x4c55	      0xe8c0baffff	         call sym.rebase_path_squash_msg	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c5a	          0x4889c3	                            mov rbx, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c5d	      0xbf00000000	                              mov edi, 0	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c62	      0xe800b7ffff	                               call sym.	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c67	          0x4889c1	                            mov rcx, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c6a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c6e	          0x4889c2	                            mov rdx, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c71	          0x4889de	                            mov rsi, rbx	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c74	          0x4889cf	                            mov rdi, rcx	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c77	      0xb800000000	                              mov eax, 0	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c7c	      0xe800000000	                          call 0x4004cc1	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c81	      0xe87ab3ffff	                    call sym.const_error	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c86	      0xe9d3040000	                           jmp 0x400519e	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_64
0x4c8b	      0xe800000000	                          call 0x4004cd0	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_67
0x4c90	          0x4889c7	                            mov rdi, rax	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_67
0x4c93	      0xe800000000	                          call 0x4004cd8	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_67
0x4c98	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1640	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4c9c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1640	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4ca3	    0x838d24ffffff	                or dword [rbp - 0xdc], 2	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4caa	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cb1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cb4	            0x85c0	                           test eax, eax	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cb6	            0x7427	                            je 0x4004d1f	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cb8	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cbe	            0x89c7	                            mov edi, eax	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cc0	      0xe88defffff	                       call sym.is_fixup	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cc5	            0x85c0	                           test eax, eax	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cc7	            0x7516	                           jne 0x4004d1f	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_68
0x4cc9	        0x488d4590	                   lea rax, [rbp - 0x70]	      1646	sequencer.c	FUNCTION_48	CALL_69
0x4ccd	      0xba00000000	                              mov edx, 0	      1646	sequencer.c	FUNCTION_48	CALL_69
0x4cd2	      0xbe00000000	                              mov esi, 0	      1646	sequencer.c	FUNCTION_48	CALL_69
0x4cd7	          0x4889c7	                            mov rdi, rax	      1646	sequencer.c	FUNCTION_48	CALL_69
0x4cda	      0xe800000000	                          call 0x4004d1f	      1646	sequencer.c	FUNCTION_48	CALL_69
0x4cdf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4ce6	          0x4889c7	                            mov rdi, rax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4ce9	      0xe89abfffff	                    call sym.is_rebase_i	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4cee	            0x85c0	                           test eax, eax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4cf0	            0x741f	                            je 0x4004d51	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4cf2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4cf6	          0x4889c7	                            mov rdi, rax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4cf9	      0xe8a8d0ffff	            call sym.write_author_script	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4cfe	            0x85c0	                           test eax, eax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4d00	            0x790f	                           jns 0x4004d51	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_71
0x4d02	    0xc78528ffffff	     mov dword [rbp - 0xd8], 0xffffffff 	      1649	sequencer.c	FUNCTION_48	IF_28
0x4d0c	      0xe996010000	                           jmp 0x4004ee7	      1649	sequencer.c	FUNCTION_48	IF_28
0x4d11	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d18	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d1c	          0x4885c0	                           test rax, rax	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d1f	            0x7429	                            je 0x4004d8a	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d21	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d28	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d2c	      0xbe00000000	                              mov esi, 0	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d31	          0x4889c7	                            mov rdi, rax	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d34	      0xe800000000	                          call 0x4004d79	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d39	            0x85c0	                           test eax, eax	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d3b	            0x740d	                            je 0x4004d8a	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d3d	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d44	     0xf8582000000	                           jne 0x4004e0c	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_72
0x4d4a	        0x4c8d4590	                    lea r8, [rbp - 0x70]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d4e	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d52	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d59	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d60	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d67	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d6e	        0x4883ec08	                              sub rsp, 8	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d72	    0xffb508ffffff	                 push qword [rbp - 0xf8]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d78	          0x4d89c1	                              mov r9, r8	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d7b	          0x4989f8	                             mov r8, rdi	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d7e	          0x4889c7	                            mov rdi, rax	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d81	      0xe8e9cbffff	             call sym.do_recursive_merge	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d86	        0x4883c410	                           add rsp, 0x10	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d8a	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_73
0x4d90	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4d97	            0x790b	                           jns 0x4004de4	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4d99	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      1654	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4d9f	      0xe9ba030000	                           jmp 0x400519e	      1654	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4da4	      0xe800000000	                          call 0x4004de9	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4da9	          0x4889c2	                            mov rdx, rax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4dac	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4db0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4db4	      0xb900000000	                              mov ecx, 0	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4db9	          0x4889c7	                            mov rdi, rax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4dbc	      0xe8e4c4ffff	                  call sym.write_message	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4dc1	     0x98528ffffff	              or dword [rbp - 0xd8], eax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_74
0x4dc7	      0xe9db000000	                           jmp 0x4004ee7	      1656	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_75
0x4dcc	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1658	sequencer.c	FUNCTION_48	ELSE_10
0x4dd7	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1659	sequencer.c	FUNCTION_48	ELSE_10
0x4de2	      0xe800000000	                          call 0x4004e27	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4de7	          0x4889c2	                            mov rdx, rax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4dea	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4dee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4df2	      0xb900000000	                              mov ecx, 0	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4df7	          0x4889c7	                            mov rdi, rax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4dfa	      0xe8a6c4ffff	                  call sym.write_message	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4dff	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_76
0x4e05	    0x488d9538ffff	                   lea rdx, [rbp - 0xc8]	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_78
0x4e0c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_78
0x4e13	          0x4889d6	                            mov rsi, rdx	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_78
0x4e16	          0x4889c7	                            mov rdi, rax	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_78
0x4e19	      0xe800000000	                          call 0x4004e5e	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_78
0x4e1e	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_79
0x4e25	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_79
0x4e2c	          0x4889d6	                            mov rsi, rdx	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_79
0x4e2f	          0x4889c7	                            mov rdi, rax	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_79
0x4e32	      0xe800000000	                          call 0x4004e77	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_79
0x4e37	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e3e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_81
0x4e42	          0x4889c7	                            mov rdi, rax	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_81
0x4e45	      0xe800000000	                          call 0x4004e8a	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_81
0x4e4a	          0x4889c7	                            mov rdi, rax	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_81
0x4e4d	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e54	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1667	sequencer.c	FUNCTION_48	ELSE_10
0x4e5b	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1667	sequencer.c	FUNCTION_48	ELSE_10
0x4e5f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e66	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e6a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e71	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e75	          0x4989d9	                             mov r9, rbx	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e78	          0x4989f8	                             mov r8, rdi	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e7b	          0x4889c7	                            mov rdi, rax	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e7e	      0xe800000000	                          call 0x4004ec3	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e83	     0x98528ffffff	              or dword [rbp - 0xd8], eax	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_80
0x4e89	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_82
0x4e90	          0x4889c7	                            mov rdi, rax	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_82
0x4e93	      0xe800000000	                          call 0x4004ed8	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_82
0x4e98	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_83
0x4e9f	          0x4889c7	                            mov rdi, rax	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_83
0x4ea2	      0xe800000000	                          call 0x4004ee7	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_83
0x4ea7	        0x488d4590	                   lea rax, [rbp - 0x70]	      1672	sequencer.c	FUNCTION_48	CALL_84
0x4eab	          0x4889c7	                            mov rdi, rax	      1672	sequencer.c	FUNCTION_48	CALL_84
0x4eae	      0xe800000000	                          call 0x4004ef3	      1672	sequencer.c	FUNCTION_48	CALL_84
0x4eb3	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      1680	sequencer.c	FUNCTION_48	IF_31
0x4eba	            0x755c	                           jne 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4ebc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1680	sequencer.c	FUNCTION_48	IF_31
0x4ec3	          0x8b400c	              mov eax, dword [rax + 0xc]	      1680	sequencer.c	FUNCTION_48	IF_31
0x4ec6	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x4ec8	            0x754e	                           jne 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4eca	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1680	sequencer.c	FUNCTION_48	IF_31
0x4ed1	            0x7409	                            je 0x4004f1c	      1680	sequencer.c	FUNCTION_48	IF_31
0x4ed3	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	      1680	sequencer.c	FUNCTION_48	IF_31
0x4eda	            0x753c	                           jne 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4edc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4ee3	        0x4883c004	                              add rax, 4	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4ee7	    0x41b900000000	                              mov r9d, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4eed	    0x41b801000000	                              mov r8d, 1	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4ef3	      0xb900000000	                              mov ecx, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4ef8	          0x4889c2	                            mov rdx, rax	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4efb	      0xbe00000000	                              mov esi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4f00	      0xbf00000000	                              mov edi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4f05	      0xe800000000	                          call 0x4004f4a	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_85
0x4f0a	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x4f0c	            0x740a	                            je 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4f0e	    0xc78528ffffff	     mov dword [rbp - 0xd8], 0xffffffff 	      1683	sequencer.c	FUNCTION_48	IF_31
0x4f18	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f1f	            0x755c	                           jne 0x4004fbd	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f21	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f28	          0x8b400c	              mov eax, dword [rax + 0xc]	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f2b	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f2d	            0x7409	                            je 0x4004f78	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f2f	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f36	            0x7409	                            je 0x4004f81	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f38	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f3f	            0x753c	                           jne 0x4004fbd	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f41	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f48	        0x4883c004	                              add rax, 4	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f4c	    0x41b900000000	                              mov r9d, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f52	    0x41b801000000	                              mov r8d, 1	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f58	      0xb900000000	                              mov ecx, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f5d	          0x4889c2	                            mov rdx, rax	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f60	      0xbe00000000	                              mov esi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f65	      0xbf00000000	                              mov edi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f6a	      0xe800000000	                          call 0x4004faf	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_86
0x4f6f	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f71	            0x740a	                            je 0x4004fbd	      1684	sequencer.c	FUNCTION_48	IF_32
0x4f73	    0xc78528ffffff	     mov dword [rbp - 0xd8], 0xffffffff 	      1687	sequencer.c	FUNCTION_48	IF_32
0x4f7d	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1689	sequencer.c	FUNCTION_48	IF_33
0x4f84	     0xf8481000000	                            je 0x400504b	      1689	sequencer.c	FUNCTION_48	IF_33
0x4f8a	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4f8e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4f95	          0x4889c7	                            mov rdi, rax	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4f98	      0xe801c1ffff	              call sym.short_commit_name	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4f9d	          0x4989c4	                            mov r12, rax	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fa0	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fa7	            0x750c	                           jne 0x4004ff5	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fa9	      0xbf00000000	                              mov edi, 0	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fae	      0xe8b4b3ffff	                               call sym.	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fb3	            0xeb0a	                           jmp 0x4004fff	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fb5	      0xbf00000000	                              mov edi, 0	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fba	      0xe8a8b3ffff	                               call sym.	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fbf	          0x4889da	                            mov rdx, rbx	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fc2	          0x4c89e6	                            mov rsi, r12	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fc5	          0x4889c7	                            mov rdi, rax	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fc8	      0xb800000000	                              mov eax, 0	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fcd	      0xe800000000	                          call 0x4005012	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fd2	      0xe829b0ffff	                    call sym.const_error	      1690	sequencer.c	FUNCTION_48	IF_33	CALL_87
0x4fd7	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_91
0x4fde	           0xf94c0	                                 sete al	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_91
0x4fe1	           0xfb6c0	                           movzx eax, al	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_91
0x4fe4	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_91
0x4feb	          0x4889d6	                            mov rsi, rdx	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_91
0x4fee	            0x89c7	                            mov edi, eax	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_91
0x4ff0	      0xe81dc2ffff	                   call sym.print_advice	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_91
0x4ff5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_92
0x4ffc	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_92
0x4fff	            0x89c7	                            mov edi, eax	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_92
0x5001	      0xe800000000	                          call 0x4005046	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_92
0x5006	      0xe923010000	                           jmp 0x400516e	      1696	sequencer.c	FUNCTION_48	IF_33
0x500b	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      1699	sequencer.c	FUNCTION_48	CALL_93
0x5012	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1699	sequencer.c	FUNCTION_48	CALL_93
0x5019	          0x4889d6	                            mov rsi, rdx	      1699	sequencer.c	FUNCTION_48	CALL_93
0x501c	          0x4889c7	                            mov rdi, rax	      1699	sequencer.c	FUNCTION_48	CALL_93
0x501f	      0xe824ebffff	                    call sym.allow_empty	      1699	sequencer.c	FUNCTION_48	CALL_93
0x5024	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1699	sequencer.c	FUNCTION_48	CALL_93
0x502a	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1700	sequencer.c	FUNCTION_48	IF_34
0x5031	            0x7911	                           jns 0x4005084	      1700	sequencer.c	FUNCTION_48	IF_34
0x5033	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1701	sequencer.c	FUNCTION_48	IF_34
0x5039	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1701	sequencer.c	FUNCTION_48	IF_34
0x503f	      0xe9ea000000	                           jmp 0x400516e	      1702	sequencer.c	FUNCTION_48	IF_34
0x5044	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x504b	            0x7407	                            je 0x4005094	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x504d	    0x838d24ffffff	                or dword [rbp - 0xdc], 1	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x5054	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1705	sequencer.c	FUNCTION_48	IF_36
0x505b	          0x8b400c	              mov eax, dword [rax + 0xc]	      1705	sequencer.c	FUNCTION_48	IF_36
0x505e	            0x85c0	                           test eax, eax	      1705	sequencer.c	FUNCTION_48	IF_36
0x5060	            0x756d	                           jne 0x400510f	      1705	sequencer.c	FUNCTION_48	IF_36
0x5062	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x506a	            0x7516	                           jne 0x40050c2	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x506c	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x5073	            0x740d	                            je 0x40050c2	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x5075	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x507b	          0x83e004	                              and eax, 4	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x507e	            0x85c0	                           test eax, eax	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x5080	            0x742b	                            je 0x40050ed	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x5082	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x5088	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x508f	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x5096	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x509d	          0x4889c7	                            mov rdi, rax	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x50a0	      0xe830e8ffff	                      call sym.do_commit	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x50a5	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x50ab	            0xeb22	                           jmp 0x400510f	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_94
0x50ad	      0xbf00000000	                              mov edi, 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_96
0x50b2	      0xe8b0b2ffff	                               call sym.	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_96
0x50b7	          0x4889c7	                            mov rdi, rax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_96
0x50ba	      0xb800000000	                              mov eax, 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_96
0x50bf	      0xe800000000	                          call 0x4005104	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_96
0x50c4	      0xe837afffff	                    call sym.const_error	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_96
0x50c9	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_96
0x50cf	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1713	sequencer.c	FUNCTION_48	IF_38
0x50d6	            0x7556	                           jne 0x400516e	      1713	sequencer.c	FUNCTION_48	IF_38
0x50d8	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      1713	sequencer.c	FUNCTION_48	IF_38
0x50df	            0x744d	                            je 0x400516e	      1713	sequencer.c	FUNCTION_48	IF_38
0x50e1	      0xe863b6ffff	          call sym.rebase_path_fixup_msg	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_98
0x50e6	          0x4889c7	                            mov rdi, rax	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_98
0x50e9	      0xe800000000	                          call 0x400512e	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_98
0x50ee	      0xe827b6ffff	         call sym.rebase_path_squash_msg	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_100
0x50f3	          0x4889c7	                            mov rdi, rax	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_100
0x50f6	      0xe800000000	                          call 0x400513b	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_100
0x50fb	      0xe878b6ffff	     call sym.rebase_path_current_fixups	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_102
0x5100	          0x4889c7	                            mov rdi, rax	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_102
0x5103	      0xe800000000	                          call 0x4005148	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_102
0x5108	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1717	sequencer.c	FUNCTION_48	IF_38	CALL_103
0x510f	        0x4883c060	                           add rax, 0x60	      1717	sequencer.c	FUNCTION_48	IF_38	CALL_103
0x5113	      0xbe00000000	                              mov esi, 0	      1717	sequencer.c	FUNCTION_48	IF_38	CALL_103
0x5118	          0x4889c7	                            mov rdi, rax	      1717	sequencer.c	FUNCTION_48	IF_38	CALL_103
0x511b	      0xe80db0ffff	                  call sym.strbuf_setlen	      1717	sequencer.c	FUNCTION_48	IF_38	CALL_103
0x5120	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1718	sequencer.c	FUNCTION_48	IF_38
0x5127	    0xc74078000000	               mov dword [rax + 0x78], 0	      1718	sequencer.c	FUNCTION_48	IF_38
0x512e	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1722	sequencer.c	FUNCTION_48	CALL_104
0x5132	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1722	sequencer.c	FUNCTION_48	CALL_104
0x5139	          0x4889d6	                            mov rsi, rdx	      1722	sequencer.c	FUNCTION_48	CALL_104
0x513c	          0x4889c7	                            mov rdi, rax	      1722	sequencer.c	FUNCTION_48	CALL_104
0x513f	      0xe875c0ffff	                   call sym.free_message	      1722	sequencer.c	FUNCTION_48	CALL_104
0x5144	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1723	sequencer.c	FUNCTION_48	CALL_105
0x514b	          0x4889c7	                            mov rdi, rax	      1723	sequencer.c	FUNCTION_48	CALL_105
0x514e	      0xe800000000	                          call 0x4005193	      1723	sequencer.c	FUNCTION_48	CALL_105
0x5153	      0xe8c9c4ffff	       call sym.update_abort_safety_file	      1724	sequencer.c	FUNCTION_48	CALL_106
0x5158	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      1726	sequencer.c	FUNCTION_48
0x515e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1727	sequencer.c	FUNCTION_48
0x5162	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1727	sequencer.c	FUNCTION_48
0x516b	            0x7405	                            je 0x40051b2	      1727	sequencer.c	FUNCTION_48
0x516d	      0xe800000000	                          call 0x40051b2	      1727	sequencer.c	FUNCTION_48
0x5172	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      1727	sequencer.c	FUNCTION_48
0x5176	              0x5b	                                 pop rbx	      1727	sequencer.c	FUNCTION_48
0x5177	            0x415c	                                 pop r12	      1727	sequencer.c	FUNCTION_48
0x5179	              0x5d	                                 pop rbp	      1727	sequencer.c	FUNCTION_48
0x517a	              0xc3	                                     ret	      1727	sequencer.c	FUNCTION_48
get_message	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,7	63
0x10c4	              0x55	                                push rbp	       316	sequencer.c	FUNCTION_11
0x10c5	          0x4889e5	                            mov rbp, rsp	       316	sequencer.c	FUNCTION_11
0x10c8	        0x4883ec30	                           sub rsp, 0x30	       316	sequencer.c	FUNCTION_11
0x10cc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       316	sequencer.c	FUNCTION_11
0x10d0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       316	sequencer.c	FUNCTION_11
0x10d4	    0x64488b042528	                mov rax, qword fs:[0x28]	       316	sequencer.c	FUNCTION_11
0x10dd	        0x488945f8	                mov qword [rbp - 8], rax	       316	sequencer.c	FUNCTION_11
0x10e1	            0x31c0	                            xor eax, eax	       316	sequencer.c	FUNCTION_11
0x10e3	      0xe800000000	                          call 0x4001128	       320	sequencer.c	FUNCTION_11	CALL_2
0x10e8	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x10eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       320	sequencer.c	FUNCTION_11	CALL_2
0x10ef	      0xbe00000000	                              mov esi, 0	       320	sequencer.c	FUNCTION_11	CALL_2
0x10f4	          0x4889c7	                            mov rdi, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x10f7	      0xe800000000	                          call 0x400113c	       320	sequencer.c	FUNCTION_11	CALL_2
0x10fc	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x10ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       320	sequencer.c	FUNCTION_11	CALL_2
0x1103	        0x48895018	             mov qword [rax + 0x18], rdx	       320	sequencer.c	FUNCTION_11	CALL_2
0x1107	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       321	sequencer.c	FUNCTION_11	CALL_3
0x110b	          0x4889c7	                            mov rdi, rax	       321	sequencer.c	FUNCTION_11	CALL_3
0x110e	      0xe88bffffff	              call sym.short_commit_name	       321	sequencer.c	FUNCTION_11	CALL_3
0x1113	        0x488945f0	             mov qword [rbp - 0x10], rax	       321	sequencer.c	FUNCTION_11	CALL_3
0x1117	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       323	sequencer.c	FUNCTION_11	CALL_4
0x111b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       323	sequencer.c	FUNCTION_11	CALL_4
0x111f	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       323	sequencer.c	FUNCTION_11	CALL_4
0x1123	          0x4889d6	                            mov rsi, rdx	       323	sequencer.c	FUNCTION_11	CALL_4
0x1126	          0x4889c7	                            mov rdi, rax	       323	sequencer.c	FUNCTION_11	CALL_4
0x1129	      0xe800000000	                          call 0x400116e	       323	sequencer.c	FUNCTION_11	CALL_4
0x112e	          0x8945e4	             mov dword [rbp - 0x1c], eax	       323	sequencer.c	FUNCTION_11	CALL_4
0x1131	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       325	sequencer.c	FUNCTION_11	CALL_5
0x1134	          0x4863d0	                         movsxd rdx, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x1137	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       325	sequencer.c	FUNCTION_11	CALL_5
0x113b	          0x4889d6	                            mov rsi, rdx	       325	sequencer.c	FUNCTION_11	CALL_5
0x113e	          0x4889c7	                            mov rdi, rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x1141	      0xe800000000	                          call 0x4001186	       325	sequencer.c	FUNCTION_11	CALL_5
0x1146	          0x4889c2	                            mov rdx, rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x1149	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       325	sequencer.c	FUNCTION_11	CALL_5
0x114d	        0x48895010	             mov qword [rax + 0x10], rdx	       325	sequencer.c	FUNCTION_11	CALL_5
0x1151	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       326	sequencer.c	FUNCTION_11	CALL_6
0x1155	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       326	sequencer.c	FUNCTION_11	CALL_6
0x1159	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       326	sequencer.c	FUNCTION_11	CALL_6
0x115d	          0x4889c6	                            mov rsi, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x1160	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x1165	      0xb800000000	                              mov eax, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x116a	      0xe800000000	                          call 0x40011af	       326	sequencer.c	FUNCTION_11	CALL_6
0x116f	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x1172	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       326	sequencer.c	FUNCTION_11	CALL_6
0x1176	        0x48895008	                mov qword [rax + 8], rdx	       326	sequencer.c	FUNCTION_11	CALL_6
0x117a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       327	sequencer.c	FUNCTION_11	CALL_7
0x117e	        0x488b4008	                mov rax, qword [rax + 8]	       327	sequencer.c	FUNCTION_11	CALL_7
0x1182	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x1185	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x118a	      0xb800000000	                              mov eax, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x118f	      0xe800000000	                          call 0x40011d4	       327	sequencer.c	FUNCTION_11	CALL_7
0x1194	          0x4889c2	                            mov rdx, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x1197	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       327	sequencer.c	FUNCTION_11	CALL_7
0x119b	          0x488910	                    mov qword [rax], rdx	       327	sequencer.c	FUNCTION_11	CALL_7
0x119e	      0xb800000000	                              mov eax, 0	       329	sequencer.c	FUNCTION_11
0x11a3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       330	sequencer.c	FUNCTION_11
0x11a7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       330	sequencer.c	FUNCTION_11
0x11b0	            0x7405	                            je 0x40011f7	       330	sequencer.c	FUNCTION_11
0x11b2	      0xe800000000	                          call 0x40011f7	       330	sequencer.c	FUNCTION_11
0x11b7	              0xc9	                                   leave	       330	sequencer.c	FUNCTION_11
0x11b8	              0xc3	                                     ret	       330	sequencer.c	FUNCTION_11
sequencer_continue	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,3:IF,13:WHILE,0:CALL,27	158
0xabae	              0x55	                                push rbp	      3378	sequencer.c	FUNCTION_90
0xabaf	          0x4889e5	                            mov rbp, rsp	      3378	sequencer.c	FUNCTION_90
0xabb2	    0x4881ecc00000	                           sub rsp, 0xc0	      3378	sequencer.c	FUNCTION_90
0xabb9	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      3378	sequencer.c	FUNCTION_90
0xabc0	    0x64488b042528	                mov rax, qword fs:[0x28]	      3378	sequencer.c	FUNCTION_90
0xabc9	        0x488945f8	                mov qword [rbp - 8], rax	      3378	sequencer.c	FUNCTION_90
0xabcd	            0x31c0	                            xor eax, eax	      3378	sequencer.c	FUNCTION_90
0xabcf	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3379	sequencer.c	FUNCTION_90
0xabd3	      0xb800000000	                              mov eax, 0	      3379	sequencer.c	FUNCTION_90
0xabd8	      0xb90b000000	                            mov ecx, 0xb	      3379	sequencer.c	FUNCTION_90
0xabdd	          0x4889d7	                            mov rdi, rdx	      3379	sequencer.c	FUNCTION_90
0xabe0	          0xf348ab	              rep stosq qword [rdi], rax	      3379	sequencer.c	FUNCTION_90
0xabe3	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3379	sequencer.c	FUNCTION_90
0xabeb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0xabf2	          0x4889c7	                            mov rdi, rax	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0xabf5	      0xe852a6ffff	         call sym.read_and_refresh_cache	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0xabfa	            0x85c0	                           test eax, eax	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0xabfc	            0x740a	                            je 0x400ac48	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0xabfe	      0xb8ffffffff	                     mov eax, 0xffffffff	      3383	sequencer.c	FUNCTION_90	IF_1
0xac03	      0xe932020000	                           jmp 0x400ae7a	      3383	sequencer.c	FUNCTION_90	IF_1
0xac08	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0xac0f	          0x4889c7	                            mov rdi, rax	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0xac12	      0xe8b4b9ffff	             call sym.read_populate_opts	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0xac17	            0x85c0	                           test eax, eax	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0xac19	            0x740a	                            je 0x400ac65	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0xac1b	      0xb8ffffffff	                     mov eax, 0xffffffff	      3386	sequencer.c	FUNCTION_90	IF_2
0xac20	      0xe915020000	                           jmp 0x400ae7a	      3386	sequencer.c	FUNCTION_90	IF_2
0xac25	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0xac2c	          0x4889c7	                            mov rdi, rax	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0xac2f	      0xe85460ffff	                    call sym.is_rebase_i	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0xac34	            0x85c0	                           test eax, eax	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0xac36	            0x744d	                            je 0x400acc5	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0xac38	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac3f	        0x488d4580	                   lea rax, [rbp - 0x80]	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac43	          0x4889d6	                            mov rsi, rdx	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac46	          0x4889c7	                            mov rdi, rax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac49	      0xe80cb0ffff	             call sym.read_populate_todo	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac4e	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac54	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac5b	     0xf85c0010000	                           jne 0x400ae61	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0xac61	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0xac65	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0xac6c	          0x4889d6	                            mov rsi, rdx	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0xac6f	          0x4889c7	                            mov rdi, rax	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0xac72	      0xe853f9ffff	          call sym.commit_staged_changes	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0xac77	            0x85c0	                           test eax, eax	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0xac79	            0x7458	                            je 0x400ad13	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0xac7b	      0xb8ffffffff	                     mov eax, 0xffffffff	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0xac80	      0xe9b5010000	                           jmp 0x400ae7a	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0xac85	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0xac8c	          0x4889c7	                            mov rdi, rax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0xac8f	      0xe83760ffff	                  call sym.get_todo_path	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0xac94	          0x4889c7	                            mov rdi, rax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0xac97	      0xe800000000	                          call 0x400acdc	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0xac9c	            0x85c0	                           test eax, eax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0xac9e	            0x750a	                           jne 0x400acea	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0xaca0	      0xe897f8ffff	           call sym.continue_single_pick	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0xaca5	      0xe990010000	                           jmp 0x400ae7a	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0xacaa	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xacb1	        0x488d4580	                   lea rax, [rbp - 0x80]	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xacb5	          0x4889d6	                            mov rsi, rdx	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xacb8	          0x4889c7	                            mov rdi, rax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xacbb	      0xe89aafffff	             call sym.read_populate_todo	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xacc0	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xacc6	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xaccd	     0xf8551010000	                           jne 0x400ae64	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0xacd3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0xacda	          0x4889c7	                            mov rdi, rax	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0xacdd	      0xe8a65fffff	                    call sym.is_rebase_i	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0xace2	            0x85c0	                           test eax, eax	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0xace4	            0x757a	                           jne 0x400ada0	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0xace6	      0xe800000000	                          call 0x400ad2b	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0xaceb	          0x4889c7	                            mov rdi, rax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0xacee	      0xe800000000	                          call 0x400ad33	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0xacf3	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0xacf5	            0x7511	                           jne 0x400ad48	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0xacf7	      0xe800000000	                          call 0x400ad3c	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0xacfc	          0x4889c7	                            mov rdi, rax	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0xacff	      0xe800000000	                          call 0x400ad44	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0xad04	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0xad06	            0x7418	                            je 0x400ad60	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0xad08	      0xe82ff8ffff	           call sym.continue_single_pick	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0xad0d	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0xad13	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0xad1a	     0xf8507010000	                           jne 0x400ae67	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0xad20	      0xba00000000	                              mov edx, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0xad25	      0xbe00000000	                              mov esi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0xad2a	      0xbf00000000	                              mov edi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0xad2f	      0xe800000000	                          call 0x400ad74	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0xad34	            0x85c0	                           test eax, eax	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0xad36	            0x741a	                            je 0x400ad92	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0xad38	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0xad3f	          0x4889c7	                            mov rdi, rax	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0xad42	      0xe83e68ffff	              call sym.error_dirty_index	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0xad47	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0xad4d	      0xe9d6000000	                           jmp 0x400ae68	      3407	sequencer.c	FUNCTION_90	IF_8	IF_11
0xad52	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3409	sequencer.c	FUNCTION_90	IF_8
0xad55	          0x83c001	                              add eax, 1	      3409	sequencer.c	FUNCTION_90	IF_8
0xad58	          0x8945a8	             mov dword [rbp - 0x58], eax	      3409	sequencer.c	FUNCTION_90	IF_8
0xad5b	      0xe9a3000000	                           jmp 0x400ae43	      3409	sequencer.c	FUNCTION_90	IF_8
0xad60	      0xe8a05affff	        call sym.rebase_path_stopped_sha	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0xad65	          0x4889c7	                            mov rdi, rax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0xad68	      0xe800000000	                          call 0x400adad	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0xad6d	            0x85c0	                           test eax, eax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0xad6f	     0xf848e000000	                            je 0x400ae43	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0xad75	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0xad80	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0xad8b	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0xad96	      0xe86a5affff	        call sym.rebase_path_stopped_sha	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xad9b	          0x4889c1	                            mov rcx, rax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xad9e	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xada5	      0xba01000000	                              mov edx, 1	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadaa	          0x4889ce	                            mov rsi, rcx	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadad	          0x4889c7	                            mov rdi, rax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadb0	      0xe86b66ffff	                  call sym.read_oneliner	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadb5	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadb7	            0x743b	                            je 0x400ae34	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadb9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0xadc0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0xadc4	          0x4889d6	                            mov rsi, rdx	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0xadc7	          0x4889c7	                            mov rdi, rax	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0xadca	      0xe800000000	                          call 0x400ae0f	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0xadcf	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadd1	            0x7521	                           jne 0x400ae34	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0xadd3	        0x488d4580	                   lea rax, [rbp - 0x80]	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xadd7	      0xbe00000000	                              mov esi, 0	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xaddc	          0x4889c7	                            mov rdi, rax	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xaddf	      0xe867e2ffff	                   call sym.peek_command	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xade4	            0x89c2	                            mov edx, eax	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xade6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xadea	            0x89d6	                            mov esi, edx	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xadec	          0x4889c7	                            mov rdi, rax	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xadef	      0xe83296ffff	            call sym.record_in_rewritten	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0xadf4	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0xadfb	          0x4889c7	                            mov rdi, rax	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0xadfe	      0xe800000000	                          call 0x400ae43	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0xae03	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3420	sequencer.c	FUNCTION_90	CALL_26
0xae0a	        0x488d4580	                   lea rax, [rbp - 0x80]	      3420	sequencer.c	FUNCTION_90	CALL_26
0xae0e	          0x4889d6	                            mov rsi, rdx	      3420	sequencer.c	FUNCTION_90	CALL_26
0xae11	          0x4889c7	                            mov rdi, rax	      3420	sequencer.c	FUNCTION_90	CALL_26
0xae14	      0xe8b9e6ffff	                   call sym.pick_commits	      3420	sequencer.c	FUNCTION_90	CALL_26
0xae19	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3420	sequencer.c	FUNCTION_90	CALL_26
0xae1f	            0xeb07	                           jmp 0x400ae68	      3420	sequencer.c	FUNCTION_90	CALL_26
0xae21	              0x90	                                     nop	      3389	sequencer.c	FUNCTION_90	IF_3	IF_4
0xae22	            0xeb04	                           jmp 0x400ae68	      3389	sequencer.c	FUNCTION_90	IF_3	IF_4
0xae24	              0x90	                                     nop	      3395	sequencer.c	FUNCTION_90	ELSE_2	IF_7
0xae25	            0xeb01	                           jmp 0x400ae68	      3395	sequencer.c	FUNCTION_90	ELSE_2	IF_7
0xae27	              0x90	                                     nop	      3403	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0xae28	        0x488d4580	                   lea rax, [rbp - 0x80]	      3422	sequencer.c	FUNCTION_90	CALL_27
0xae2c	          0x4889c7	                            mov rdi, rax	      3422	sequencer.c	FUNCTION_90	CALL_27
0xae2f	      0xe83ea5ffff	              call sym.todo_list_release	      3422	sequencer.c	FUNCTION_90	CALL_27
0xae34	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      3423	sequencer.c	FUNCTION_90
0xae3a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3424	sequencer.c	FUNCTION_90
0xae3e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3424	sequencer.c	FUNCTION_90
0xae47	            0x7405	                            je 0x400ae8e	      3424	sequencer.c	FUNCTION_90
0xae49	      0xe800000000	                          call 0x400ae8e	      3424	sequencer.c	FUNCTION_90
0xae4e	              0xc9	                                   leave	      3424	sequencer.c	FUNCTION_90
0xae4f	              0xc3	                                     ret	      3424	sequencer.c	FUNCTION_90
commit_post_rewrite	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:CALL,4	30
0x2b89	              0x55	                                push rbp	       914	sequencer.c	FUNCTION_32
0x2b8a	          0x4889e5	                            mov rbp, rsp	       914	sequencer.c	FUNCTION_32
0x2b8d	        0x4883ec20	                           sub rsp, 0x20	       914	sequencer.c	FUNCTION_32
0x2b91	        0x48897de8	             mov qword [rbp - 0x18], rdi	       914	sequencer.c	FUNCTION_32
0x2b95	        0x488975e0	             mov qword [rbp - 0x20], rsi	       914	sequencer.c	FUNCTION_32
0x2b99	      0xbf00000000	                              mov edi, 0	       917	sequencer.c	FUNCTION_32	CALL_1
0x2b9e	      0xe800000000	                          call 0x4002be3	       917	sequencer.c	FUNCTION_32	CALL_1
0x2ba3	        0x488945f8	                mov qword [rbp - 8], rax	       917	sequencer.c	FUNCTION_32	CALL_1
0x2ba7	      0x48837df800	                  cmp qword [rbp - 8], 0	       918	sequencer.c	FUNCTION_32	IF_1
0x2bac	            0x742c	                            je 0x4002c1a	       918	sequencer.c	FUNCTION_32	IF_1
0x2bae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x2bb2	        0x488d4804	                      lea rcx, [rax + 4]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x2bb6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x2bba	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x2bbe	          0x4889ce	                            mov rsi, rcx	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x2bc1	          0x4889c7	                            mov rdi, rax	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x2bc4	      0xe800000000	                          call 0x4002c09	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x2bc9	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x2bcd	      0xbe00000000	                              mov esi, 0	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x2bd2	          0x4889c7	                            mov rdi, rax	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x2bd5	      0xe800000000	                          call 0x4002c1a	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x2bda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       923	sequencer.c	FUNCTION_32	CALL_4
0x2bde	        0x488d5004	                      lea rdx, [rax + 4]	       923	sequencer.c	FUNCTION_32	CALL_4
0x2be2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       923	sequencer.c	FUNCTION_32	CALL_4
0x2be6	          0x4889c6	                            mov rsi, rax	       923	sequencer.c	FUNCTION_32	CALL_4
0x2be9	          0x4889d7	                            mov rdi, rdx	       923	sequencer.c	FUNCTION_32	CALL_4
0x2bec	      0xe8f4fdffff	               call sym.run_rewrite_hook	       923	sequencer.c	FUNCTION_32	CALL_4
0x2bf1	              0x90	                                     nop	       924	sequencer.c	FUNCTION_32
0x2bf2	              0xc9	                                   leave	       924	sequencer.c	FUNCTION_32
0x2bf3	              0xc3	                                     ret	       924	sequencer.c	FUNCTION_32
check_todo_list	FOR,2:SWITCH,0:functions,0:DO,0:ELSE,0:IF,8:WHILE,0:CALL,22	201
0xd20b	              0x55	                                push rbp	      4091	sequencer.c	FUNCTION_101
0xd20c	          0x4889e5	                            mov rbp, rsp	      4091	sequencer.c	FUNCTION_101
0xd20f	            0x4154	                                push r12	      4091	sequencer.c	FUNCTION_101
0xd211	              0x53	                                push rbx	      4091	sequencer.c	FUNCTION_101
0xd212	    0x4881ecd00000	                           sub rsp, 0xd0	      4091	sequencer.c	FUNCTION_101
0xd219	    0x64488b042528	                mov rax, qword fs:[0x28]	      4091	sequencer.c	FUNCTION_101
0xd222	        0x488945e8	             mov qword [rbp - 0x18], rax	      4091	sequencer.c	FUNCTION_101
0xd226	            0x31c0	                            xor eax, eax	      4091	sequencer.c	FUNCTION_101
0xd228	      0xe81fffffff	 call sym.get_missing_commit_check_level	      4092	sequencer.c	FUNCTION_101	CALL_1
0xd22d	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      4092	sequencer.c	FUNCTION_101	CALL_1
0xd233	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4093	sequencer.c	FUNCTION_101
0xd23e	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      4093	sequencer.c	FUNCTION_101
0xd249	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4093	sequencer.c	FUNCTION_101
0xd254	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4094	sequencer.c	FUNCTION_101
0xd258	      0xb800000000	                              mov eax, 0	      4094	sequencer.c	FUNCTION_101
0xd25d	      0xb90b000000	                            mov ecx, 0xb	      4094	sequencer.c	FUNCTION_101
0xd262	          0x4889d7	                            mov rdi, rdx	      4094	sequencer.c	FUNCTION_101
0xd265	          0xf348ab	              rep stosq qword [rdi], rax	      4094	sequencer.c	FUNCTION_101
0xd268	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      4094	sequencer.c	FUNCTION_101
0xd270	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      4095	sequencer.c	FUNCTION_101
0xd27b	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      4095	sequencer.c	FUNCTION_101
0xd286	    0x48c745800000	               mov qword [rbp - 0x80], 0	      4095	sequencer.c	FUNCTION_101
0xd28e	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      4096	sequencer.c	FUNCTION_101
0xd298	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      4096	sequencer.c	FUNCTION_101
0xd2a2	      0xe88833ffff	               call sym.rebase_path_todo	      4098	sequencer.c	FUNCTION_101	CALL_3
0xd2a7	          0x4889c2	                            mov rdx, rax	      4098	sequencer.c	FUNCTION_101	CALL_3
0xd2aa	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4098	sequencer.c	FUNCTION_101	CALL_3
0xd2b1	          0x4889d6	                            mov rsi, rdx	      4098	sequencer.c	FUNCTION_101	CALL_3
0xd2b4	          0x4889c7	                            mov rdi, rax	      4098	sequencer.c	FUNCTION_101	CALL_3
0xd2b7	      0xe8792fffff	                  call sym.strbuf_addstr	      4098	sequencer.c	FUNCTION_101	CALL_3
0xd2bc	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0xd2c3	        0x488d4590	                   lea rax, [rbp - 0x70]	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0xd2c7	          0x4889d6	                            mov rsi, rdx	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0xd2ca	          0x4889c7	                            mov rdi, rax	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0xd2cd	      0xe8d488ffff	      call sym.strbuf_read_file_or_whine	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0xd2d2	          0x4885c0	                           test rax, rax	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0xd2d5	            0x790f	                           jns 0x400d326	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0xd2d7	    0xc7852cffffff	     mov dword [rbp - 0xd4], 0xffffffff 	      4100	sequencer.c	FUNCTION_101	IF_1
0xd2e1	      0xe980020000	                           jmp 0x400d5a6	      4101	sequencer.c	FUNCTION_101	IF_1
0xd2e6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4104	sequencer.c	FUNCTION_101	CALL_5
0xd2ea	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4103	sequencer.c	FUNCTION_101
0xd2ee	          0x4889d6	                            mov rsi, rdx	      4103	sequencer.c	FUNCTION_101
0xd2f1	          0x4889c7	                            mov rdi, rax	      4103	sequencer.c	FUNCTION_101
0xd2f4	      0xe8fb85ffff	              call sym.parse_insn_buffer	      4103	sequencer.c	FUNCTION_101
0xd2f9	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      4103	sequencer.c	FUNCTION_101
0xd2ff	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4103	sequencer.c	FUNCTION_101
0xd305	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      4103	sequencer.c	FUNCTION_101
0xd30b	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      4106	sequencer.c	FUNCTION_101	IF_2
0xd312	     0xf854e020000	                           jne 0x400d5a6	      4106	sequencer.c	FUNCTION_101	IF_2
0xd318	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      4106	sequencer.c	FUNCTION_101	IF_2
0xd31f	     0xf8441020000	                            je 0x400d5a6	      4106	sequencer.c	FUNCTION_101	IF_2
0xd325	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      4110	sequencer.c	FUNCTION_101	FOR_1
0xd32f	            0xeb48	                           jmp 0x400d3b9	      4110	sequencer.c	FUNCTION_101	FOR_1
0xd331	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd335	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd33b	          0x4863d0	                         movsxd rdx, eax	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd33e	          0x4889d0	                            mov rax, rdx	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd341	          0x4801c0	                            add rax, rax	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd344	          0x4801d0	                            add rax, rdx	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd347	        0x48c1e004	                              shl rax, 4	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd34b	          0x4801c8	                            add rax, rcx	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd34e	        0x488b4008	                mov rax, qword [rax + 8]	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd352	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4111	sequencer.c	FUNCTION_101	FOR_1
0xd359	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0xd361	            0x740f	                            je 0x400d3b2	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0xd363	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0xd36a	    0x48c740180100	               mov qword [rax + 0x18], 1	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0xd372	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      4110	sequencer.c	FUNCTION_101	FOR_1
0xd379	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4110	sequencer.c	FUNCTION_101	FOR_1
0xd37c	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      4110	sequencer.c	FUNCTION_101	FOR_1
0xd382	            0x7fad	                            jg 0x400d371	      4110	sequencer.c	FUNCTION_101	FOR_1
0xd384	        0x488d4590	                   lea rax, [rbp - 0x70]	      4116	sequencer.c	FUNCTION_101	CALL_6
0xd388	          0x4889c7	                            mov rdi, rax	      4116	sequencer.c	FUNCTION_101	CALL_6
0xd38b	      0xe8e27fffff	              call sym.todo_list_release	      4116	sequencer.c	FUNCTION_101	CALL_6
0xd390	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4117	sequencer.c	FUNCTION_101	CALL_7
0xd397	      0xbe00000000	                              mov esi, 0	      4117	sequencer.c	FUNCTION_101	CALL_7
0xd39c	          0x4889c7	                            mov rdi, rax	      4117	sequencer.c	FUNCTION_101	CALL_7
0xd39f	      0xe8912effff	                  call sym.strbuf_addstr	      4117	sequencer.c	FUNCTION_101	CALL_7
0xd3a4	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0xd3ab	        0x488d4590	                   lea rax, [rbp - 0x70]	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0xd3af	          0x4889d6	                            mov rsi, rdx	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0xd3b2	          0x4889c7	                            mov rdi, rax	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0xd3b5	      0xe8ec87ffff	      call sym.strbuf_read_file_or_whine	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0xd3ba	          0x4885c0	                           test rax, rax	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0xd3bd	            0x790f	                           jns 0x400d40e	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0xd3bf	    0xc7852cffffff	     mov dword [rbp - 0xd4], 0xffffffff 	      4119	sequencer.c	FUNCTION_101	IF_4
0xd3c9	      0xe998010000	                           jmp 0x400d5a6	      4120	sequencer.c	FUNCTION_101	IF_4
0xd3ce	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4122	sequencer.c	FUNCTION_101	CALL_9
0xd3d5	          0x4889c7	                            mov rdi, rax	      4122	sequencer.c	FUNCTION_101	CALL_9
0xd3d8	      0xe800000000	                          call 0x400d41d	      4122	sequencer.c	FUNCTION_101	CALL_9
0xd3dd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3e1	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3e5	          0x4889d6	                            mov rsi, rdx	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3e8	          0x4889c7	                            mov rdi, rax	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3eb	      0xe80485ffff	              call sym.parse_insn_buffer	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3f0	            0x85c0	                           test eax, eax	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3f2	           0xf95c0	                                setne al	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3f5	           0xfb6c0	                           movzx eax, al	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3f8	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      4123	sequencer.c	FUNCTION_101	CALL_10
0xd3fe	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4126	sequencer.c	FUNCTION_101	FOR_2
0xd401	          0x83e801	                              sub eax, 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0xd404	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      4126	sequencer.c	FUNCTION_101	FOR_2
0xd40a	      0xe9ab000000	                           jmp 0x400d4fa	      4126	sequencer.c	FUNCTION_101	FOR_2
0xd40f	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd413	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd419	          0x4863d0	                         movsxd rdx, eax	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd41c	          0x4889d0	                            mov rax, rdx	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd41f	          0x4801c0	                            add rax, rax	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd422	          0x4801d0	                            add rax, rdx	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd425	        0x48c1e004	                              shl rax, 4	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd429	          0x4801c8	                            add rax, rcx	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd42c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4127	sequencer.c	FUNCTION_101	FOR_2
0xd433	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4128	sequencer.c	FUNCTION_101	FOR_2
0xd43a	        0x488b4008	                mov rax, qword [rax + 8]	      4128	sequencer.c	FUNCTION_101	FOR_2
0xd43e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4128	sequencer.c	FUNCTION_101	FOR_2
0xd445	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd44d	            0x7464	                            je 0x400d4f3	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd44f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd456	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd45a	          0x4885c0	                           test rax, rax	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd45d	            0x7554	                           jne 0x400d4f3	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd45f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd466	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd46a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd471	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd474	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd47b	          0x4889c7	                            mov rdi, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd47e	      0xe81b3cffff	              call sym.short_commit_name	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd483	          0x4889c2	                            mov rdx, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd486	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd48d	          0x4d89e0	                             mov r8, r12	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd490	            0x89d9	                            mov ecx, ebx	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd492	      0xbe00000000	                              mov esi, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd497	          0x4889c7	                            mov rdi, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd49a	      0xb800000000	                              mov eax, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd49f	      0xe800000000	                          call 0x400d4e4	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0xd4a4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd4ab	    0x48c740180100	               mov qword [rax + 0x18], 1	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0xd4b3	    0x83ad30ffffff	               sub dword [rbp - 0xd0], 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0xd4ba	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      4126	sequencer.c	FUNCTION_101	FOR_2
0xd4c1	     0xf8948ffffff	                           jns 0x400d44f	      4126	sequencer.c	FUNCTION_101	FOR_2
0xd4c7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4138	sequencer.c	FUNCTION_101	IF_6
0xd4ce	          0x4885c0	                           test rax, rax	      4138	sequencer.c	FUNCTION_101	IF_6
0xd4d1	     0xf848e000000	                            je 0x400d5a5	      4138	sequencer.c	FUNCTION_101	IF_6
0xd4d7	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 2	      4141	sequencer.c	FUNCTION_101	IF_7
0xd4de	            0x7516	                           jne 0x400d536	      4141	sequencer.c	FUNCTION_101	IF_7
0xd4e0	    0xc7852cffffff	               mov dword [rbp - 0xd4], 1	      4142	sequencer.c	FUNCTION_101	IF_7
0xd4ea	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4142	sequencer.c	FUNCTION_101	IF_7
0xd4f0	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      4142	sequencer.c	FUNCTION_101	IF_7
0xd4f6	      0xbf00000000	                              mov edi, 0	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd4fb	      0xe8672effff	                               call sym.	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd500	          0x4889c2	                            mov rdx, rax	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd503	    0x488b05000000	            mov rax, qword [0x0400d54a] 	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd50a	          0x4889d6	                            mov rsi, rdx	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd50d	          0x4889c7	                            mov rdi, rax	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd510	      0xb800000000	                              mov eax, 0	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd515	      0xe800000000	                          call 0x400d55a	      4144	sequencer.c	FUNCTION_101	CALL_13
0xd51a	    0x488b15000000	            mov rdx, qword [0x0400d561] 	      4149	sequencer.c	FUNCTION_101	CALL_15
0xd521	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4149	sequencer.c	FUNCTION_101	CALL_15
0xd525	          0x4889d6	                            mov rsi, rdx	      4149	sequencer.c	FUNCTION_101	CALL_15
0xd528	          0x4889c7	                            mov rdi, rax	      4149	sequencer.c	FUNCTION_101	CALL_15
0xd52b	      0xe800000000	                          call 0x400d570	      4149	sequencer.c	FUNCTION_101	CALL_15
0xd530	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4150	sequencer.c	FUNCTION_101	CALL_16
0xd537	          0x4889c7	                            mov rdi, rax	      4150	sequencer.c	FUNCTION_101	CALL_16
0xd53a	      0xe800000000	                          call 0x400d57f	      4150	sequencer.c	FUNCTION_101	CALL_16
0xd53f	      0xbf00000000	                              mov edi, 0	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd544	      0xe81e2effff	                               call sym.	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd549	          0x4889c2	                            mov rdx, rax	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd54c	    0x488b05000000	            mov rax, qword [0x0400d593] 	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd553	          0x4889d6	                            mov rsi, rdx	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd556	          0x4889c7	                            mov rdi, rax	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd559	      0xb800000000	                              mov eax, 0	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd55e	      0xe800000000	                          call 0x400d5a3	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd563	            0xeb01	                           jmp 0x400d5a6	      4152	sequencer.c	FUNCTION_101	CALL_18
0xd565	              0x90	                                     nop	      4139	sequencer.c	FUNCTION_101	IF_6
0xd566	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4159	sequencer.c	FUNCTION_101	CALL_19
0xd56d	          0x4889c7	                            mov rdi, rax	      4159	sequencer.c	FUNCTION_101	CALL_19
0xd570	      0xe800000000	                          call 0x400d5b5	      4159	sequencer.c	FUNCTION_101	CALL_19
0xd575	        0x488d4590	                   lea rax, [rbp - 0x70]	      4160	sequencer.c	FUNCTION_101	CALL_20
0xd579	          0x4889c7	                            mov rdi, rax	      4160	sequencer.c	FUNCTION_101	CALL_20
0xd57c	      0xe8f17dffff	              call sym.todo_list_release	      4160	sequencer.c	FUNCTION_101	CALL_20
0xd581	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      4162	sequencer.c	FUNCTION_101	IF_8
0xd588	            0x7424	                            je 0x400d5ee	      4162	sequencer.c	FUNCTION_101	IF_8
0xd58a	      0xbf00000000	                              mov edi, 0	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd58f	      0xe8d32dffff	                               call sym.	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd594	          0x4889c2	                            mov rdx, rax	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd597	    0x488b05000000	            mov rax, qword [0x0400d5de] 	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd59e	          0x4889d6	                            mov rsi, rdx	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd5a1	          0x4889c7	                            mov rdi, rax	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd5a4	      0xb800000000	                              mov eax, 0	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd5a9	      0xe800000000	                          call 0x400d5ee	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0xd5ae	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4169	sequencer.c	FUNCTION_101
0xd5b4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4170	sequencer.c	FUNCTION_101
0xd5b8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4170	sequencer.c	FUNCTION_101
0xd5c1	            0x7405	                            je 0x400d608	      4170	sequencer.c	FUNCTION_101
0xd5c3	      0xe800000000	                          call 0x400d608	      4170	sequencer.c	FUNCTION_101
0xd5c8	    0x4881c4d00000	                           add rsp, 0xd0	      4170	sequencer.c	FUNCTION_101
0xd5cf	              0x5b	                                 pop rbx	      4170	sequencer.c	FUNCTION_101
0xd5d0	            0x415c	                                 pop r12	      4170	sequencer.c	FUNCTION_101
0xd5d2	              0x5d	                                 pop rbp	      4170	sequencer.c	FUNCTION_101
0xd5d3	              0xc3	                                     ret	      4170	sequencer.c	FUNCTION_101
rewrite_file	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,3:WHILE,0:CALL,9	63
0xd5d4	              0x55	                                push rbp	      4173	sequencer.c	FUNCTION_102
0xd5d5	          0x4889e5	                            mov rbp, rsp	      4173	sequencer.c	FUNCTION_102
0xd5d8	        0x4883ec30	                           sub rsp, 0x30	      4173	sequencer.c	FUNCTION_102
0xd5dc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4173	sequencer.c	FUNCTION_102
0xd5e0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4173	sequencer.c	FUNCTION_102
0xd5e4	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4173	sequencer.c	FUNCTION_102
0xd5e8	    0xc745f8000000	                  mov dword [rbp - 8], 0	      4174	sequencer.c	FUNCTION_102
0xd5ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4175	sequencer.c	FUNCTION_102	CALL_1
0xd5f3	      0xbe01020000	                          mov esi, 0x201	      4175	sequencer.c	FUNCTION_102	CALL_1
0xd5f8	          0x4889c7	                            mov rdi, rax	      4175	sequencer.c	FUNCTION_102	CALL_1
0xd5fb	      0xb800000000	                              mov eax, 0	      4175	sequencer.c	FUNCTION_102	CALL_1
0xd600	      0xe800000000	                          call 0x400d645	      4175	sequencer.c	FUNCTION_102	CALL_1
0xd605	          0x8945fc	                mov dword [rbp - 4], eax	      4175	sequencer.c	FUNCTION_102	CALL_1
0xd608	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4176	sequencer.c	FUNCTION_102	IF_1
0xd60c	            0x792b	                           jns 0x400d679	      4176	sequencer.c	FUNCTION_102	IF_1
0xd60e	      0xbf00000000	                              mov edi, 0	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd613	      0xe84f2dffff	                               call sym.	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd618	          0x4889c2	                            mov rdx, rax	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd61b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd61f	          0x4889c6	                            mov rsi, rax	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd622	          0x4889d7	                            mov rdi, rdx	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd625	      0xb800000000	                              mov eax, 0	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd62a	      0xe800000000	                          call 0x400d66f	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd62f	      0xe8cc29ffff	                    call sym.const_error	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd634	      0xe983000000	                           jmp 0x400d6fc	      4177	sequencer.c	FUNCTION_102	CALL_3
0xd639	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd63d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd641	          0x8b45fc	                mov eax, dword [rbp - 4]	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd644	          0x4889ce	                            mov rsi, rcx	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd647	            0x89c7	                            mov edi, eax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd649	      0xe800000000	                          call 0x400d68e	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd64e	          0x4885c0	                           test rax, rax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd651	            0x7929	                           jns 0x400d6bc	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_4
0xd653	      0xbf00000000	                              mov edi, 0	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd658	      0xe80a2dffff	                               call sym.	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd65d	          0x4889c2	                            mov rdx, rax	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd660	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd664	          0x4889c6	                            mov rsi, rax	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd667	          0x4889d7	                            mov rdi, rdx	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd66a	      0xb800000000	                              mov eax, 0	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd66f	      0xe800000000	                          call 0x400d6b4	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd674	      0xe88729ffff	                    call sym.const_error	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd679	          0x8945f8	                mov dword [rbp - 8], eax	      4179	sequencer.c	FUNCTION_102	CALL_6
0xd67c	          0x8b45fc	                mov eax, dword [rbp - 4]	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_7
0xd67f	            0x89c7	                            mov edi, eax	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_7
0xd681	      0xe800000000	                          call 0x400d6c6	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_7
0xd686	            0x85c0	                           test eax, eax	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_7
0xd688	            0x742f	                            je 0x400d6f9	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_7
0xd68a	        0x837df800	                  cmp dword [rbp - 8], 0	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_7
0xd68e	            0x7529	                           jne 0x400d6f9	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_7
0xd690	      0xbf00000000	                              mov edi, 0	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd695	      0xe8cd2cffff	                               call sym.	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd69a	          0x4889c2	                            mov rdx, rax	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd69d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd6a1	          0x4889c6	                            mov rsi, rax	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd6a4	          0x4889d7	                            mov rdi, rdx	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd6a7	      0xb800000000	                              mov eax, 0	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd6ac	      0xe800000000	                          call 0x400d6f1	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd6b1	      0xe84a29ffff	                    call sym.const_error	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd6b6	          0x8945f8	                mov dword [rbp - 8], eax	      4181	sequencer.c	FUNCTION_102	CALL_9
0xd6b9	          0x8b45f8	                mov eax, dword [rbp - 8]	      4182	sequencer.c	FUNCTION_102
0xd6bc	              0xc9	                                   leave	      4183	sequencer.c	FUNCTION_102
0xd6bd	              0xc3	                                     ret	      4183	sequencer.c	FUNCTION_102
populate_opts_cb	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,11:IF,12:WHILE,0:CALL,25	263
0x60ab	              0x55	                                push rbp	      2043	sequencer.c	FUNCTION_62
0x60ac	          0x4889e5	                            mov rbp, rsp	      2043	sequencer.c	FUNCTION_62
0x60af	              0x53	                                push rbx	      2043	sequencer.c	FUNCTION_62
0x60b0	        0x4883ec48	                           sub rsp, 0x48	      2043	sequencer.c	FUNCTION_62
0x60b4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2043	sequencer.c	FUNCTION_62
0x60b8	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2043	sequencer.c	FUNCTION_62
0x60bc	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2043	sequencer.c	FUNCTION_62
0x60c0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2043	sequencer.c	FUNCTION_62
0x60c9	        0x488945e8	             mov qword [rbp - 0x18], rax	      2043	sequencer.c	FUNCTION_62
0x60cd	            0x31c0	                            xor eax, eax	      2043	sequencer.c	FUNCTION_62
0x60cf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2044	sequencer.c	FUNCTION_62
0x60d3	        0x488945e0	             mov qword [rbp - 0x20], rax	      2044	sequencer.c	FUNCTION_62
0x60d7	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      2045	sequencer.c	FUNCTION_62
0x60de	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2047	sequencer.c	FUNCTION_62	IF_1
0x60e3	            0x750c	                           jne 0x4006131	      2047	sequencer.c	FUNCTION_62	IF_1
0x60e5	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2048	sequencer.c	FUNCTION_62	IF_1
0x60ec	      0xe935030000	                           jmp 0x4006466	      2048	sequencer.c	FUNCTION_62	IF_1
0x60f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x60f5	      0xbe00000000	                              mov esi, 0	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x60fa	          0x4889c7	                            mov rdi, rax	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x60fd	      0xe800000000	                          call 0x4006142	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x6102	            0x85c0	                           test eax, eax	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x6104	            0x7525	                           jne 0x400616b	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x6106	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x610a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x610e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x6112	          0x4889ce	                            mov rsi, rcx	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x6115	          0x4889c7	                            mov rdi, rax	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x6118	      0xe800000000	                          call 0x400615d	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x611d	            0x89c2	                            mov edx, eax	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x611f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x6123	          0x89500c	              mov dword [rax + 0xc], edx	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x6126	      0xe9fb020000	                           jmp 0x4006466	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x612b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x612f	      0xbe00000000	                              mov esi, 0	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x6134	          0x4889c7	                            mov rdi, rax	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x6137	      0xe800000000	                          call 0x400617c	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x613c	            0x85c0	                           test eax, eax	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x613e	            0x7525	                           jne 0x40061a5	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x6140	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x6144	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x6148	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x614c	          0x4889ce	                            mov rsi, rcx	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x614f	          0x4889c7	                            mov rdi, rax	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x6152	      0xe800000000	                          call 0x4006197	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x6157	            0x89c2	                            mov edx, eax	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x6159	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x615d	          0x895004	                mov dword [rax + 4], edx	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x6160	      0xe9c1020000	                           jmp 0x4006466	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x6165	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x6169	      0xbe00000000	                              mov esi, 0	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x616e	          0x4889c7	                            mov rdi, rax	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x6171	      0xe800000000	                          call 0x40061b6	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x6176	            0x85c0	                           test eax, eax	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x6178	            0x7525	                           jne 0x40061df	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x617a	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x617e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x6182	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x6186	          0x4889ce	                            mov rsi, rcx	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x6189	          0x4889c7	                            mov rdi, rax	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x618c	      0xe800000000	                          call 0x40061d1	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x6191	            0x89c2	                            mov edx, eax	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x6193	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x6197	          0x895010	             mov dword [rax + 0x10], edx	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x619a	      0xe987020000	                           jmp 0x4006466	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x619f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x61a3	      0xbe00000000	                              mov esi, 0	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x61a8	          0x4889c7	                            mov rdi, rax	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x61ab	      0xe800000000	                          call 0x40061f0	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x61b0	            0x85c0	                           test eax, eax	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x61b2	            0x7525	                           jne 0x4006219	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x61b4	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61b8	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61bc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61c0	          0x4889ce	                            mov rsi, rcx	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61c3	          0x4889c7	                            mov rdi, rax	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61c6	      0xe800000000	                          call 0x400620b	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61cb	            0x89c2	                            mov edx, eax	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61d1	          0x895008	                mov dword [rax + 8], edx	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61d4	      0xe94d020000	                           jmp 0x4006466	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x61d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x61dd	      0xbe00000000	                              mov esi, 0	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x61e2	          0x4889c7	                            mov rdi, rax	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x61e5	      0xe800000000	                          call 0x400622a	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x61ea	            0x85c0	                           test eax, eax	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x61ec	            0x7525	                           jne 0x4006253	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x61ee	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x61f2	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x61f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x61fa	          0x4889ce	                            mov rsi, rcx	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x61fd	          0x4889c7	                            mov rdi, rax	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x6200	      0xe800000000	                          call 0x4006245	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x6205	            0x89c2	                            mov edx, eax	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x6207	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x620b	          0x895014	             mov dword [rax + 0x14], edx	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x620e	      0xe913020000	                           jmp 0x4006466	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x6213	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x6217	      0xbe00000000	                              mov esi, 0	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x621c	          0x4889c7	                            mov rdi, rax	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x621f	      0xe800000000	                          call 0x4006264	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x6224	            0x85c0	                           test eax, eax	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x6226	            0x7521	                           jne 0x4006289	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x6228	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x622c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x6230	          0x4889d6	                            mov rsi, rdx	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x6233	          0x4889c7	                            mov rdi, rax	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x6236	      0xe800000000	                          call 0x400627b	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x623b	            0x89c2	                            mov edx, eax	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x623d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x6241	          0x89502c	             mov dword [rax + 0x2c], edx	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x6244	      0xe9dd010000	                           jmp 0x4006466	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x6249	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x624d	      0xbe00000000	                              mov esi, 0	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x6252	          0x4889c7	                            mov rdi, rax	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x6255	      0xe800000000	                          call 0x400629a	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x625a	            0x85c0	                           test eax, eax	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x625c	            0x7520	                           jne 0x40062be	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x625e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x6262	        0x488d4840	                   lea rcx, [rax + 0x40]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x6266	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x626a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x626e	          0x4889c6	                            mov rsi, rax	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x6271	          0x4889cf	                            mov rdi, rcx	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x6274	      0xe8d8fdffff	          call sym.git_config_string_dup	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x6279	      0xe9a8010000	                           jmp 0x4006466	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x627e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x6282	      0xbe00000000	                              mov esi, 0	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x6287	          0x4889c7	                            mov rdi, rax	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x628a	      0xe800000000	                          call 0x40062cf	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x628f	            0x85c0	                           test eax, eax	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x6291	            0x7520	                           jne 0x40062f3	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x6293	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x6297	        0x488d4830	                   lea rcx, [rax + 0x30]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x629b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x629f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x62a3	          0x4889c6	                            mov rsi, rax	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x62a6	          0x4889cf	                            mov rdi, rcx	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x62a9	      0xe8a3fdffff	          call sym.git_config_string_dup	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x62ae	      0xe973010000	                           jmp 0x4006466	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x62b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x62b7	      0xbe00000000	                              mov esi, 0	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x62bc	          0x4889c7	                            mov rdi, rax	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x62bf	      0xe800000000	                          call 0x4006304	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x62c4	            0x85c0	                           test eax, eax	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x62c6	     0xf85ed000000	                           jne 0x40063f9	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x62cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62d0	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62d4	        0x488d5001	                      lea rdx, [rax + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62dc	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62e0	          0x4839c2	                            cmp rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62e3	     0xf869b000000	                           jbe 0x40063c4	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62e9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62ed	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62f1	          0x4889d0	                            mov rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62f4	          0x4801c0	                            add rax, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62f7	          0x4801d0	                            add rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62fa	        0x4883c030	                           add rax, 0x30	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x62fe	          0x48d1e8	                              shr rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6301	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6304	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6308	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x630c	        0x4883c001	                              add rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6310	          0x4839c2	                            cmp rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6313	            0x7316	                           jae 0x400636b	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6315	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6319	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x631d	        0x488d5001	                      lea rdx, [rax + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6321	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6325	        0x48895058	             mov qword [rax + 0x58], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6329	            0xeb23	                           jmp 0x400638e	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x632b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x632f	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6333	          0x4889d0	                            mov rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6336	          0x4801c0	                            add rax, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6339	          0x4801d0	                            add rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x633c	        0x4883c030	                           add rax, 0x30	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6340	          0x48d1e8	                              shr rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6343	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6346	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x634a	        0x48895058	             mov qword [rax + 0x58], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x634e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6352	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6356	          0x4889c6	                            mov rsi, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6359	      0xbf08000000	                              mov edi, 8	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x635e	      0xe8429dffff	                        call sym.st_mult	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6363	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6366	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x636a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x636e	          0x4889d6	                            mov rsi, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6371	          0x4889c7	                            mov rdi, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6374	      0xe800000000	                          call 0x40063b9	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6379	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x637c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6380	        0x48895048	             mov qword [rax + 0x48], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x6384	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x6388	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x638c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x6390	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x6394	        0x488d4801	                      lea rcx, [rax + 1]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x6398	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x639c	        0x48894a50	             mov qword [rdx + 0x50], rcx	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63a0	        0x48c1e003	                              shl rax, 3	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63a4	        0x488d1c06	                    lea rbx, [rsi + rax]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63a8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63ac	          0x4889c7	                            mov rdi, rax	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63af	      0xe800000000	                          call 0x40063f4	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63b4	          0x488903	                    mov qword [rbx], rax	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63b7	            0xeb6d	                           jmp 0x4006466	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_19
0x63b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x63bd	      0xbe00000000	                              mov esi, 0	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x63c2	          0x4889c7	                            mov rdi, rax	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x63c5	      0xe800000000	                          call 0x400640a	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x63ca	            0x85c0	                           test eax, eax	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x63cc	            0x7530	                           jne 0x400643e	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x63ce	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_21
0x63d2	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_21
0x63d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_21
0x63da	          0x4889ce	                            mov rsi, rcx	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_21
0x63dd	          0x4889c7	                            mov rdi, rax	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_21
0x63e0	      0xe800000000	                          call 0x4006425	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_21
0x63e5	            0x85c0	                           test eax, eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63e7	            0x7407	                            je 0x4006430	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63e9	      0xba01000000	                              mov edx, 1	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63ee	            0xeb05	                           jmp 0x4006435	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63f0	      0xba02000000	                              mov edx, 2	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63f9	          0x895018	             mov dword [rax + 0x18], edx	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63fc	            0xeb28	                           jmp 0x4006466	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x63fe	      0xbf00000000	                              mov edi, 0	      2073	sequencer.c	FUNCTION_62	CALL_23
0x6403	      0xe85f9fffff	                               call sym.	      2073	sequencer.c	FUNCTION_62	CALL_23
0x6408	          0x4889c2	                            mov rdx, rax	      2073	sequencer.c	FUNCTION_62	CALL_23
0x640b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2073	sequencer.c	FUNCTION_62	CALL_23
0x640f	          0x4889c6	                            mov rsi, rax	      2073	sequencer.c	FUNCTION_62	CALL_23
0x6412	          0x4889d7	                            mov rdi, rdx	      2073	sequencer.c	FUNCTION_62	CALL_23
0x6415	      0xb800000000	                              mov eax, 0	      2073	sequencer.c	FUNCTION_62	CALL_23
0x641a	      0xe800000000	                          call 0x400645f	      2073	sequencer.c	FUNCTION_62	CALL_23
0x641f	      0xe8dc9bffff	                    call sym.const_error	      2073	sequencer.c	FUNCTION_62	CALL_23
0x6424	            0xeb38	                           jmp 0x400649e	      2073	sequencer.c	FUNCTION_62	CALL_23
0x6426	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2075	sequencer.c	FUNCTION_62	IF_12
0x6429	            0x85c0	                           test eax, eax	      2075	sequencer.c	FUNCTION_62	IF_12
0x642b	            0x752c	                           jne 0x4006499	      2075	sequencer.c	FUNCTION_62	IF_12
0x642d	      0xbf00000000	                              mov edi, 0	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6432	      0xe8309fffff	                               call sym.	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6437	          0x4889c1	                            mov rcx, rax	      2076	sequencer.c	FUNCTION_62	CALL_25
0x643a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2076	sequencer.c	FUNCTION_62	CALL_25
0x643e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6442	          0x4889c6	                            mov rsi, rax	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6445	          0x4889cf	                            mov rdi, rcx	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6448	      0xb800000000	                              mov eax, 0	      2076	sequencer.c	FUNCTION_62	CALL_25
0x644d	      0xe800000000	                          call 0x4006492	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6452	      0xe8a99bffff	                    call sym.const_error	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6457	            0xeb05	                           jmp 0x400649e	      2076	sequencer.c	FUNCTION_62	CALL_25
0x6459	      0xb800000000	                              mov eax, 0	      2078	sequencer.c	FUNCTION_62
0x645e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2079	sequencer.c	FUNCTION_62
0x6462	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2079	sequencer.c	FUNCTION_62
0x646b	            0x7405	                            je 0x40064b2	      2079	sequencer.c	FUNCTION_62
0x646d	      0xe800000000	                          call 0x40064b2	      2079	sequencer.c	FUNCTION_62
0x6472	        0x4883c448	                           add rsp, 0x48	      2079	sequencer.c	FUNCTION_62
0x6476	              0x5b	                                 pop rbx	      2079	sequencer.c	FUNCTION_62
0x6477	              0x5d	                                 pop rbp	      2079	sequencer.c	FUNCTION_62
0x6478	              0xc3	                                     ret	      2079	sequencer.c	FUNCTION_62
write_author_script	FOR,1:SWITCH,0:functions,0:DO,0:ELSE,8:IF,8:WHILE,3:CALL,19	205
0x1da6	              0x55	                                push rbp	       597	sequencer.c	FUNCTION_23
0x1da7	          0x4889e5	                            mov rbp, rsp	       597	sequencer.c	FUNCTION_23
0x1daa	        0x4883ec40	                           sub rsp, 0x40	       597	sequencer.c	FUNCTION_23
0x1dae	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       597	sequencer.c	FUNCTION_23
0x1db2	    0x64488b042528	                mov rax, qword fs:[0x28]	       597	sequencer.c	FUNCTION_23
0x1dbb	        0x488945f8	                mov qword [rbp - 8], rax	       597	sequencer.c	FUNCTION_23
0x1dbf	            0x31c0	                            xor eax, eax	       597	sequencer.c	FUNCTION_23
0x1dc1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       598	sequencer.c	FUNCTION_23
0x1dc9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       598	sequencer.c	FUNCTION_23
0x1dd1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       598	sequencer.c	FUNCTION_23
0x1dd9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1ddd	           0xfb600	                   movzx eax, byte [rax]	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1de0	            0x84c0	                             test al, al	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1de2	            0x7418	                            je 0x4001e3c	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1de4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1de8	      0xbe00000000	                              mov esi, 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1ded	          0x4889c7	                            mov rdi, rax	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1df0	      0xe800000000	                          call 0x4001e35	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1df5	            0x85c0	                           test eax, eax	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1df7	            0x741a	                            je 0x4001e53	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1df9	            0xeb01	                           jmp 0x4001e3c	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x1dfb	              0x90	                                     nop	       613	sequencer.c	FUNCTION_23	ELSE_3
0x1dfc	      0xe8a6e9ffff	      call sym.rebase_path_author_script	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x1e01	          0x4889c7	                            mov rdi, rax	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x1e04	      0xe800000000	                          call 0x4001e49	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x1e09	      0xb800000000	                              mov eax, 0	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x1e0e	      0xe94e020000	                           jmp 0x40020a1	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x1e13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x1e17	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x1e1b	      0xbe00000000	                              mov esi, 0	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x1e20	          0x4889c7	                            mov rdi, rax	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x1e23	      0xe8e3e1ffff	                    call sym.skip_prefix	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x1e28	            0x85c0	                           test eax, eax	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x1e2a	            0x752a	                           jne 0x4001e96	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x1e2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x1e30	      0xbe0a000000	                            mov esi, 0xa	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x1e35	          0x4889c7	                            mov rdi, rax	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x1e38	      0xe800000000	                          call 0x4001e7d	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x1e3d	        0x488945d8	             mov qword [rbp - 0x28], rax	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x1e41	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x1e46	            0x74b3	                            je 0x4001e3b	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x1e48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x1e4c	        0x4883c001	                              add rax, 1	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x1e50	        0x488945c8	             mov qword [rbp - 0x38], rax	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x1e54	            0xeb83	                           jmp 0x4001e19	       613	sequencer.c	FUNCTION_23	ELSE_3
0x1e56	              0x90	                                     nop	       609	sequencer.c	FUNCTION_23	ELSE_1	IF_2
0x1e57	        0x488d45e0	                   lea rax, [rbp - 0x20]	       615	sequencer.c	FUNCTION_23	CALL_6
0x1e5b	      0xbe00000000	                              mov esi, 0	       615	sequencer.c	FUNCTION_23	CALL_6
0x1e60	          0x4889c7	                            mov rdi, rax	       615	sequencer.c	FUNCTION_23	CALL_6
0x1e63	      0xe8cde3ffff	                  call sym.strbuf_addstr	       615	sequencer.c	FUNCTION_23	CALL_6
0x1e68	            0xeb6e	                           jmp 0x4001f18	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1e6a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x1e6e	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x1e72	      0xbe00000000	                              mov esi, 0	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x1e77	          0x4889c7	                            mov rdi, rax	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x1e7a	      0xe88ce1ffff	                    call sym.skip_prefix	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x1e7f	            0x85c0	                           test eax, eax	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x1e81	            0x757c	                           jne 0x4001f3f	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x1e83	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e87	           0xfb600	                   movzx eax, byte [rax]	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e8a	            0x3c27	                            cmp al, 0x27	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e8c	            0x7422	                            je 0x4001ef0	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e92	        0x488d5001	                      lea rdx, [rax + 1]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e96	        0x488955c8	             mov qword [rbp - 0x38], rdx	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e9a	           0xfb600	                   movzx eax, byte [rax]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1e9d	           0xfbed0	                           movsx edx, al	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1ea0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1ea4	            0x89d6	                            mov esi, edx	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1ea6	          0x4889c7	                            mov rdi, rax	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1ea9	      0xe819e3ffff	                   call sym.strbuf_addch	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1eae	            0xeb28	                           jmp 0x4001f18	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x1eb0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       622	sequencer.c	FUNCTION_23	CALL_9
0x1eb4	        0x488d5001	                      lea rdx, [rax + 1]	       622	sequencer.c	FUNCTION_23	CALL_9
0x1eb8	        0x488955c8	             mov qword [rbp - 0x38], rdx	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ebc	           0xfb600	                   movzx eax, byte [rax]	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ebf	           0xfbed0	                           movsx edx, al	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ec2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ec6	      0xbe00000000	                              mov esi, 0	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ecb	          0x4889c7	                            mov rdi, rax	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ece	      0xb800000000	                              mov eax, 0	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ed3	      0xe800000000	                          call 0x4001f18	       622	sequencer.c	FUNCTION_23	CALL_9
0x1ed8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1edc	           0xfb600	                   movzx eax, byte [rax]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1edf	            0x84c0	                             test al, al	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1ee1	            0x741d	                            je 0x4001f40	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1ee3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1ee7	           0xfb600	                   movzx eax, byte [rax]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1eea	            0x3c0a	                             cmp al, 0xa	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1eec	            0x7412	                            je 0x4001f40	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1eee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1ef2	           0xfb600	                   movzx eax, byte [rax]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1ef5	            0x3c0d	                             cmp al, 0xd	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1ef7	     0xf856dffffff	                           jne 0x4001eaa	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1efd	            0xeb01	                           jmp 0x4001f40	       616	sequencer.c	FUNCTION_23	WHILE_1
0x1eff	              0x90	                                     nop	       618	sequencer.c	FUNCTION_23	WHILE_1	IF_4
0x1f00	        0x488d45e0	                   lea rax, [rbp - 0x20]	       623	sequencer.c	FUNCTION_23	CALL_10
0x1f04	      0xbe00000000	                              mov esi, 0	       623	sequencer.c	FUNCTION_23	CALL_10
0x1f09	          0x4889c7	                            mov rdi, rax	       623	sequencer.c	FUNCTION_23	CALL_10
0x1f0c	      0xe824e3ffff	                  call sym.strbuf_addstr	       623	sequencer.c	FUNCTION_23	CALL_10
0x1f11	            0xeb6e	                           jmp 0x4001fc1	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x1f17	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x1f1b	      0xbe00000000	                              mov esi, 0	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x1f20	          0x4889c7	                            mov rdi, rax	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x1f23	      0xe8e3e0ffff	                    call sym.skip_prefix	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x1f28	            0x85c0	                           test eax, eax	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x1f2a	            0x757c	                           jne 0x4001fe8	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x1f2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f30	           0xfb600	                   movzx eax, byte [rax]	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f33	            0x3c27	                            cmp al, 0x27	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f35	            0x7422	                            je 0x4001f99	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f37	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f3b	        0x488d5001	                      lea rdx, [rax + 1]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f3f	        0x488955c8	             mov qword [rbp - 0x38], rdx	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f43	           0xfb600	                   movzx eax, byte [rax]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f46	           0xfbed0	                           movsx edx, al	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f49	        0x488d45e0	                   lea rax, [rbp - 0x20]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f4d	            0x89d6	                            mov esi, edx	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f4f	          0x4889c7	                            mov rdi, rax	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f52	      0xe870e2ffff	                   call sym.strbuf_addch	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f57	            0xeb28	                           jmp 0x4001fc1	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x1f59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f5d	        0x488d5001	                      lea rdx, [rax + 1]	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f61	        0x488955c8	             mov qword [rbp - 0x38], rdx	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f65	           0xfb600	                   movzx eax, byte [rax]	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f68	           0xfbed0	                           movsx edx, al	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f6b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f6f	      0xbe00000000	                              mov esi, 0	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f74	          0x4889c7	                            mov rdi, rax	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f77	      0xb800000000	                              mov eax, 0	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f7c	      0xe800000000	                          call 0x4001fc1	       630	sequencer.c	FUNCTION_23	CALL_13
0x1f81	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f85	           0xfb600	                   movzx eax, byte [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f88	            0x84c0	                             test al, al	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f8a	            0x741d	                            je 0x4001fe9	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f8c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f90	           0xfb600	                   movzx eax, byte [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f93	            0x3c0a	                             cmp al, 0xa	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f95	            0x7412	                            je 0x4001fe9	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f97	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f9b	           0xfb600	                   movzx eax, byte [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1f9e	            0x3c0d	                             cmp al, 0xd	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1fa0	     0xf856dffffff	                           jne 0x4001f53	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1fa6	            0xeb01	                           jmp 0x4001fe9	       624	sequencer.c	FUNCTION_23	WHILE_2
0x1fa8	              0x90	                                     nop	       626	sequencer.c	FUNCTION_23	WHILE_2	IF_6
0x1fa9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       631	sequencer.c	FUNCTION_23	CALL_14
0x1fad	      0xbe00000000	                              mov esi, 0	       631	sequencer.c	FUNCTION_23	CALL_14
0x1fb2	          0x4889c7	                            mov rdi, rax	       631	sequencer.c	FUNCTION_23	CALL_14
0x1fb5	      0xe87be2ffff	                  call sym.strbuf_addstr	       631	sequencer.c	FUNCTION_23	CALL_14
0x1fba	            0xeb55	                           jmp 0x4002051	       632	sequencer.c	FUNCTION_23	WHILE_3
0x1fbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fc0	           0xfb600	                   movzx eax, byte [rax]	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fc3	            0x3c27	                            cmp al, 0x27	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fc5	            0x7422	                            je 0x4002029	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fc7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fcb	        0x488d5001	                      lea rdx, [rax + 1]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fcf	        0x488955c8	             mov qword [rbp - 0x38], rdx	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fd3	           0xfb600	                   movzx eax, byte [rax]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fd6	           0xfbed0	                           movsx edx, al	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fd9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fdd	            0x89d6	                            mov esi, edx	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fdf	          0x4889c7	                            mov rdi, rax	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fe2	      0xe8e0e1ffff	                   call sym.strbuf_addch	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fe7	            0xeb28	                           jmp 0x4002051	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x1fe9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       636	sequencer.c	FUNCTION_23	CALL_16
0x1fed	        0x488d5001	                      lea rdx, [rax + 1]	       636	sequencer.c	FUNCTION_23	CALL_16
0x1ff1	        0x488955c8	             mov qword [rbp - 0x38], rdx	       636	sequencer.c	FUNCTION_23	CALL_16
0x1ff5	           0xfb600	                   movzx eax, byte [rax]	       636	sequencer.c	FUNCTION_23	CALL_16
0x1ff8	           0xfbed0	                           movsx edx, al	       636	sequencer.c	FUNCTION_23	CALL_16
0x1ffb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       636	sequencer.c	FUNCTION_23	CALL_16
0x1fff	      0xbe00000000	                              mov esi, 0	       636	sequencer.c	FUNCTION_23	CALL_16
0x2004	          0x4889c7	                            mov rdi, rax	       636	sequencer.c	FUNCTION_23	CALL_16
0x2007	      0xb800000000	                              mov eax, 0	       636	sequencer.c	FUNCTION_23	CALL_16
0x200c	      0xe800000000	                          call 0x4002051	       636	sequencer.c	FUNCTION_23	CALL_16
0x2011	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2015	           0xfb600	                   movzx eax, byte [rax]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2018	            0x84c0	                             test al, al	       632	sequencer.c	FUNCTION_23	WHILE_3
0x201a	            0x7416	                            je 0x4002072	       632	sequencer.c	FUNCTION_23	WHILE_3
0x201c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2020	           0xfb600	                   movzx eax, byte [rax]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2023	            0x3c0a	                             cmp al, 0xa	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2025	            0x740b	                            je 0x4002072	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2027	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x202b	           0xfb600	                   movzx eax, byte [rax]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x202e	            0x3c0d	                             cmp al, 0xd	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2030	            0x758a	                           jne 0x4001ffc	       632	sequencer.c	FUNCTION_23	WHILE_3
0x2032	      0xe870e7ffff	      call sym.rebase_path_author_script	       637	sequencer.c	FUNCTION_23	CALL_18
0x2037	          0x4889c2	                            mov rdx, rax	       637	sequencer.c	FUNCTION_23	CALL_18
0x203a	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       637	sequencer.c	FUNCTION_23	CALL_18
0x203e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       637	sequencer.c	FUNCTION_23	CALL_18
0x2042	      0xb901000000	                              mov ecx, 1	       637	sequencer.c	FUNCTION_23	CALL_18
0x2047	          0x4889c7	                            mov rdi, rax	       637	sequencer.c	FUNCTION_23	CALL_18
0x204a	      0xe856f2ffff	                  call sym.write_message	       637	sequencer.c	FUNCTION_23	CALL_18
0x204f	          0x8945d4	             mov dword [rbp - 0x2c], eax	       637	sequencer.c	FUNCTION_23	CALL_18
0x2052	        0x488d45e0	                   lea rax, [rbp - 0x20]	       638	sequencer.c	FUNCTION_23	CALL_19
0x2056	          0x4889c7	                            mov rdi, rax	       638	sequencer.c	FUNCTION_23	CALL_19
0x2059	      0xe800000000	                          call 0x400209e	       638	sequencer.c	FUNCTION_23	CALL_19
0x205e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       639	sequencer.c	FUNCTION_23
0x2061	        0x488b4df8	                mov rcx, qword [rbp - 8]	       640	sequencer.c	FUNCTION_23
0x2065	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       640	sequencer.c	FUNCTION_23
0x206e	            0x7405	                            je 0x40020b5	       640	sequencer.c	FUNCTION_23
0x2070	      0xe800000000	                          call 0x40020b5	       640	sequencer.c	FUNCTION_23
0x2075	              0xc9	                                   leave	       640	sequencer.c	FUNCTION_23
0x2076	              0xc3	                                     ret	       640	sequencer.c	FUNCTION_23
get_item_line_length	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:CALL,2	24
0x5b64	              0x55	                                push rbp	      1947	sequencer.c	FUNCTION_58
0x5b65	          0x4889e5	                            mov rbp, rsp	      1947	sequencer.c	FUNCTION_58
0x5b68	              0x53	                                push rbx	      1947	sequencer.c	FUNCTION_58
0x5b69	        0x4883ec10	                           sub rsp, 0x10	      1947	sequencer.c	FUNCTION_58
0x5b6d	        0x48897df0	             mov qword [rbp - 0x10], rdi	      1947	sequencer.c	FUNCTION_58
0x5b71	          0x8975ec	             mov dword [rbp - 0x14], esi	      1947	sequencer.c	FUNCTION_58
0x5b74	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b77	          0x8d5001	                      lea edx, [rax + 1]	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b7a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b7e	            0x89d6	                            mov esi, edx	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b80	          0x4889c7	                            mov rdi, rax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b83	      0xe862ffffff	           call sym.get_item_line_offset	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b88	            0x89c3	                            mov ebx, eax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b8a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1949	sequencer.c	FUNCTION_58	CALL_2
0x5b8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1949	sequencer.c	FUNCTION_58	CALL_2
0x5b91	            0x89d6	                            mov esi, edx	      1949	sequencer.c	FUNCTION_58	CALL_2
0x5b93	          0x4889c7	                            mov rdi, rax	      1949	sequencer.c	FUNCTION_58	CALL_2
0x5b96	      0xe84fffffff	           call sym.get_item_line_offset	      1949	sequencer.c	FUNCTION_58	CALL_2
0x5b9b	            0x29c3	                            sub ebx, eax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b9d	            0x89d8	                            mov eax, ebx	      1948	sequencer.c	FUNCTION_58	CALL_1
0x5b9f	        0x4883c410	                           add rsp, 0x10	      1950	sequencer.c	FUNCTION_58
0x5ba3	              0x5b	                                 pop rbx	      1950	sequencer.c	FUNCTION_58
0x5ba4	              0x5d	                                 pop rbp	      1950	sequencer.c	FUNCTION_58
0x5ba5	              0xc3	                                     ret	      1950	sequencer.c	FUNCTION_58
error_failed_squash	FOR,0:SWITCH,0:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:CALL,17	69
0x79ce	              0x55	                                push rbp	      2488	sequencer.c	FUNCTION_77
0x79cf	          0x4889e5	                            mov rbp, rsp	      2488	sequencer.c	FUNCTION_77
0x79d2	            0x4154	                                push r12	      2488	sequencer.c	FUNCTION_77
0x79d4	              0x53	                                push rbx	      2488	sequencer.c	FUNCTION_77
0x79d5	        0x4883ec20	                           sub rsp, 0x20	      2488	sequencer.c	FUNCTION_77
0x79d9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2488	sequencer.c	FUNCTION_77
0x79dd	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2488	sequencer.c	FUNCTION_77
0x79e1	          0x8955dc	             mov dword [rbp - 0x24], edx	      2488	sequencer.c	FUNCTION_77
0x79e4	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2488	sequencer.c	FUNCTION_77
0x79e8	      0xe82d8dffff	         call sym.rebase_path_squash_msg	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x79ed	          0x4889c3	                            mov rbx, rax	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x79f0	      0xe8f68cffff	            call sym.rebase_path_message	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x79f5	      0xbab6010000	                          mov edx, 0x1b6	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x79fa	          0x4889de	                            mov rsi, rbx	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x79fd	          0x4889c7	                            mov rdi, rax	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x7a00	      0xe800000000	                          call 0x4007a45	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x7a05	            0x85c0	                           test eax, eax	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x7a07	            0x7437	                            je 0x4007a80	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x7a09	      0xe8dd8cffff	            call sym.rebase_path_message	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a0e	          0x4989c4	                            mov r12, rax	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a11	      0xe8048dffff	         call sym.rebase_path_squash_msg	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a16	          0x4889c3	                            mov rbx, rax	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a19	      0xbf00000000	                              mov edi, 0	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a1e	      0xe84489ffff	                               call sym.	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a23	          0x4c89e2	                            mov rdx, r12	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a26	          0x4889de	                            mov rsi, rbx	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a29	          0x4889c7	                            mov rdi, rax	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a2c	      0xb800000000	                              mov eax, 0	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a31	      0xe800000000	                          call 0x4007a76	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a36	      0xe8c585ffff	                    call sym.const_error	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a3b	      0xe985000000	                           jmp 0x4007b05	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_5
0x7a40	      0xe800000000	                          call 0x4007a85	      2492	sequencer.c	FUNCTION_77	CALL_9
0x7a45	          0x4889c7	                            mov rdi, rax	      2492	sequencer.c	FUNCTION_77	CALL_9
0x7a48	      0xe800000000	                          call 0x4007a8d	      2492	sequencer.c	FUNCTION_77	CALL_9
0x7a4d	      0xe8998cffff	            call sym.rebase_path_message	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a52	          0x4889c3	                            mov rbx, rax	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a55	      0xe800000000	                          call 0x4007a9a	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a5a	      0xbab6010000	                          mov edx, 0x1b6	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a5f	          0x4889de	                            mov rsi, rbx	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a62	          0x4889c7	                            mov rdi, rax	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a65	      0xe800000000	                          call 0x4007aaa	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a6a	            0x85c0	                           test eax, eax	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a6c	            0x7434	                            je 0x4007ae2	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x7a6e	      0xe800000000	                          call 0x4007ab3	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a73	          0x4989c4	                            mov r12, rax	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a76	      0xe8708cffff	            call sym.rebase_path_message	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a7b	          0x4889c3	                            mov rbx, rax	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a7e	      0xbf00000000	                              mov edi, 0	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a83	      0xe8df88ffff	                               call sym.	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a88	          0x4c89e2	                            mov rdx, r12	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a8b	          0x4889de	                            mov rsi, rbx	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a8e	          0x4889c7	                            mov rdi, rax	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a91	      0xb800000000	                              mov eax, 0	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a96	      0xe800000000	                          call 0x4007adb	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7a9b	      0xe86085ffff	                    call sym.const_error	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7aa0	            0xeb23	                           jmp 0x4007b05	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_14
0x7aa2	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7aa6	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7aa9	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7aad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7ab1	    0x41b900000000	                              mov r9d, 0	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7ab7	    0x41b801000000	                              mov r8d, 1	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7abd	          0x4889c7	                            mov rdi, rax	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7ac0	      0xe847feffff	               call sym.error_with_patch	      2496	sequencer.c	FUNCTION_77	CALL_17
0x7ac5	        0x4883c420	                           add rsp, 0x20	      2497	sequencer.c	FUNCTION_77
0x7ac9	              0x5b	                                 pop rbx	      2497	sequencer.c	FUNCTION_77
0x7aca	            0x415c	                                 pop r12	      2497	sequencer.c	FUNCTION_77
0x7acc	              0x5d	                                 pop rbp	      2497	sequencer.c	FUNCTION_77
0x7acd	              0xc3	                                     ret	      2497	sequencer.c	FUNCTION_77
