serial8250_suspend	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,1:IF,1:FOR,1	23
0x4000640	              0x55	                                push rbp	       862	8250_core.c	FUNCTION_29
0x4000641	        0x488d6f10	                   lea rbp, [rdi + 0x10]	       868	8250_core.c	FUNCTION_29	FOR_1	IF_1
0x4000645	              0x53	                                push rbx	       862	8250_core.c	FUNCTION_29
0x4000646	    0x48c7c3000000	                              mov rbx, 0	       862	8250_core.c	FUNCTION_29
0x400064d	            0xeb10	                           jmp 0x400065f	       862	8250_core.c	FUNCTION_29
0x400064f	    0x4881c3080200	                          add rbx, 0x208	       862	8250_core.c	FUNCTION_29
0x4000656	    0x4881fb000000	                              cmp rbx, 0	       865	8250_core.c	FUNCTION_29	FOR_1
0x400065d	            0x7432	                            je 0x4000691	       865	8250_core.c	FUNCTION_29	FOR_1
0x400065f	    0x8b830c010000	           mov eax, dword [rbx + 0x10c] 	       868	8250_core.c	FUNCTION_29	FOR_1	IF_1
0x4000665	            0x85c0	                           test eax, eax	       868	8250_core.c	FUNCTION_29	FOR_1	IF_1
0x4000667	            0x74e6	                            je 0x400064f	       868	8250_core.c	FUNCTION_29	FOR_1	IF_1
0x4000669	    0x4839ab380100	           cmp qword [rbx + 0x138], rbp 	       868	8250_core.c	FUNCTION_29	FOR_1	IF_1
0x4000670	            0x75dd	                           jne 0x400064f	       868	8250_core.c	FUNCTION_29	FOR_1	IF_1
0x4000672	          0x4889de	                            mov rsi, rbx	       869	8250_core.c	FUNCTION_29	FOR_1	CALL_1
0x4000675	    0x48c7c7000000	                              mov rdi, 0	       869	8250_core.c	FUNCTION_29	FOR_1	CALL_1
0x400067c	    0x4881c3080200	                          add rbx, 0x208	       869	8250_core.c	FUNCTION_29	FOR_1	CALL_1
0x4000683	      0xe800000000	                          call 0x4000688	       869	8250_core.c	FUNCTION_29	FOR_1	CALL_1
0x4000688	    0x4881fb000000	                              cmp rbx, 0	       865	8250_core.c	FUNCTION_29	FOR_1
0x400068f	            0x75ce	                           jne 0x400065f	       865	8250_core.c	FUNCTION_29	FOR_1
0x4000691	            0x31c0	                            xor eax, eax	       873	8250_core.c	FUNCTION_29
0x4000693	              0x5b	                                 pop rbx	       873	8250_core.c	FUNCTION_29
0x4000694	              0x5d	                                 pop rbp	       873	8250_core.c	FUNCTION_29
0x4000695	              0xc3	                                     ret	       873	8250_core.c	FUNCTION_29
serial8250_resume	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,1:IF,1:FOR,1	27
0x4000750	            0x4154	                                push r12	       876	8250_core.c	FUNCTION_30
0x4000752	        0x4c8d6710	                   lea r12, [rdi + 0x10]	       882	8250_core.c	FUNCTION_30	FOR_1	IF_1
0x4000756	              0x55	                                push rbp	       876	8250_core.c	FUNCTION_30
0x4000757	            0x31ed	                            xor ebp, ebp	       879	8250_core.c	FUNCTION_30	FOR_1
0x4000759	              0x53	                                push rbx	       876	8250_core.c	FUNCTION_30
0x400075a	    0x48c7c3000000	                              mov rbx, 0	       876	8250_core.c	FUNCTION_30
0x4000761	            0xeb0f	                           jmp 0x4000772	       876	8250_core.c	FUNCTION_30
0x4000763	          0x83c501	                              add ebp, 1	       879	8250_core.c	FUNCTION_30	FOR_1
0x4000766	    0x4881c3080200	                          add rbx, 0x208	       879	8250_core.c	FUNCTION_30	FOR_1
0x400076d	          0x83fd20	                           cmp ebp, 0x20	       879	8250_core.c	FUNCTION_30	FOR_1
0x4000770	            0x7422	                            je 0x4000794	       879	8250_core.c	FUNCTION_30	FOR_1
0x4000772	            0x8b03	                    mov eax, dword [rbx]	       882	8250_core.c	FUNCTION_30	FOR_1	IF_1
0x4000774	            0x85c0	                           test eax, eax	       882	8250_core.c	FUNCTION_30	FOR_1	IF_1
0x4000776	            0x74eb	                            je 0x4000763	       882	8250_core.c	FUNCTION_30	FOR_1	IF_1
0x4000778	        0x4c39632c	            cmp qword [rbx + 0x2c], r12 	       882	8250_core.c	FUNCTION_30	FOR_1	IF_1
0x400077c	            0x75e5	                           jne 0x4000763	       882	8250_core.c	FUNCTION_30	FOR_1	IF_1
0x400077e	            0x89ef	                            mov edi, ebp	       883	8250_core.c	FUNCTION_30	FOR_1	CALL_1
0x4000780	          0x83c501	                              add ebp, 1	       879	8250_core.c	FUNCTION_30	FOR_1
0x4000783	    0x4881c3080200	                          add rbx, 0x208	       879	8250_core.c	FUNCTION_30	FOR_1
0x400078a	      0xe800000000	                          call 0x400078f	       883	8250_core.c	FUNCTION_30	FOR_1	CALL_1
0x400078f	          0x83fd20	                           cmp ebp, 0x20	       879	8250_core.c	FUNCTION_30	FOR_1
0x4000792	            0x75de	                           jne 0x4000772	       879	8250_core.c	FUNCTION_30	FOR_1
0x4000794	              0x5b	                                 pop rbx	       887	8250_core.c	FUNCTION_30
0x4000795	            0x31c0	                            xor eax, eax	       887	8250_core.c	FUNCTION_30
0x4000797	              0x5d	                                 pop rbp	       887	8250_core.c	FUNCTION_30
0x4000798	            0x415c	                                 pop r12	       887	8250_core.c	FUNCTION_30
0x400079a	              0xc3	                                     ret	       887	8250_core.c	FUNCTION_30
serial8250_remove	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,1:IF,1:FOR,1	27
0x4000ce0	    0x8b0500000000	            mov eax, dword [0x04000ce6] 	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000ce6	            0x85c0	                           test eax, eax	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000ce8	            0x7440	                            je 0x4000d2a	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000cea	              0x55	                                push rbp	       849	8250_core.c	FUNCTION_28
0x4000ceb	        0x488d6f10	                   lea rbp, [rdi + 0x10]	       849	8250_core.c	FUNCTION_28
0x4000cef	              0x53	                                push rbx	       849	8250_core.c	FUNCTION_28
0x4000cf0	            0x31db	                            xor ebx, ebx	       849	8250_core.c	FUNCTION_28
0x4000cf2	            0xeb0b	                           jmp 0x4000cff	       849	8250_core.c	FUNCTION_28
0x4000cf4	          0x83c301	                              add ebx, 1	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000cf7	    0x3b1d00000000	            cmp ebx, dword [0x04000cfd] 	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000cfd	            0x7326	                           jae 0x4000d25	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000cff	          0x4863c3	                         movsxd rax, ebx	       855	8250_core.c	FUNCTION_28	FOR_1	IF_1
0x4000d02	          0x4889c2	                            mov rdx, rax	       855	8250_core.c	FUNCTION_28	FOR_1	IF_1
0x4000d05	        0x48c1e209	                              shl rdx, 9	       855	8250_core.c	FUNCTION_28	FOR_1	IF_1
0x4000d09	    0x4839acc20000	           cmp qword [rdx + rax*8], rbp 	       855	8250_core.c	FUNCTION_28	FOR_1	IF_1
0x4000d11	            0x75e1	                           jne 0x4000cf4	       855	8250_core.c	FUNCTION_28	FOR_1	IF_1
0x4000d13	            0x89df	                            mov edi, ebx	       856	8250_core.c	FUNCTION_28	FOR_1	CALL_1
0x4000d15	          0x83c301	                              add ebx, 1	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000d18	      0xe800000000	                          call 0x4000d1d	       856	8250_core.c	FUNCTION_28	FOR_1	CALL_1
0x4000d1d	    0x3b1d00000000	            cmp ebx, dword [0x04000d23] 	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000d23	            0x72da	                            jb 0x4000cff	       852	8250_core.c	FUNCTION_28	FOR_1
0x4000d25	            0x31c0	                            xor eax, eax	       859	8250_core.c	FUNCTION_28
0x4000d27	              0x5b	                                 pop rbx	       859	8250_core.c	FUNCTION_28
0x4000d28	              0x5d	                                 pop rbp	       859	8250_core.c	FUNCTION_28
0x4000d29	              0xc3	                                     ret	       859	8250_core.c	FUNCTION_28
0x4000d2a	            0x31c0	                            xor eax, eax	       859	8250_core.c	FUNCTION_28
0x4000d2c	              0xc3	                                     ret	       859	8250_core.c	FUNCTION_28
serial8250_suspend_port	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,4:IF,2:FOR,0	32
0x40005b0	          0x4863ff	                         movsxd rdi, edi	       755	8250_core.c	FUNCTION_25
0x40005b3	              0x53	                                push rbx	       753	8250_core.c	FUNCTION_25
0x40005b4	          0x4889f8	                            mov rax, rdi	       755	8250_core.c	FUNCTION_25
0x40005b7	        0x48c1e009	                              shl rax, 9	       755	8250_core.c	FUNCTION_25
0x40005bb	    0x803d00000000	                cmp byte [0x040005c2], 0	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005c2	    0x488d9cf80000	                  lea rbx, [rax + rdi*8]	       755	8250_core.c	FUNCTION_25
0x40005ca	            0x7518	                           jne 0x40005e4	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005cc	    0x488b83e80000	            mov rax, qword [rbx + 0xe8] 	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005d3	          0x4885c0	                           test rax, rax	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005d6	            0x740c	                            je 0x40005e4	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005d8	         0xfbf4042	           movsx eax, word [rax + 0x42] 	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005dc	    0x3b831c010000	           cmp eax, dword [rbx + 0x11c] 	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005e2	            0x7410	                            je 0x40005f4	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005e4	          0x4889de	                            mov rsi, rbx	       765	8250_core.c	FUNCTION_25	CALL_4
0x40005e7	    0x48c7c7000000	                              mov rdi, 0	       765	8250_core.c	FUNCTION_25	CALL_4
0x40005ee	              0x5b	                                 pop rbx	       766	8250_core.c	FUNCTION_25
0x40005ef	      0xe900000000	                           jmp 0x40005f4	       765	8250_core.c	FUNCTION_25	CALL_4
0x40005f4	    0x83bb0c010000	              cmp dword [rbx + 0x10c], 1	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005fb	            0x74e7	                            je 0x40005e4	       757	8250_core.c	FUNCTION_25	IF_1	CALL_1
0x40005fd	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       116	8250.h	FUNCTION_38	CALL_1
0x4000601	      0xbaa5000000	                           mov edx, 0xa5	       116	8250.h	FUNCTION_38	CALL_1
0x4000606	      0xbe07000000	                              mov esi, 7	       116	8250.h	FUNCTION_38	CALL_1
0x400060b	          0x4889df	                            mov rdi, rbx	       116	8250.h	FUNCTION_38	CALL_1
0x400060e	      0xe800000000	                          call 0x4000613	       116	8250.h	FUNCTION_38	CALL_1
0x4000613	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       111	8250.h	FUNCTION_37	CALL_1
0x4000617	      0xbe07000000	                              mov esi, 7	       111	8250.h	FUNCTION_37	CALL_1
0x400061c	          0x4889df	                            mov rdi, rbx	       111	8250.h	FUNCTION_37	CALL_1
0x400061f	      0xe800000000	                          call 0x4000624	       111	8250.h	FUNCTION_37	CALL_1
0x4000624	      0x3da5000000	                           cmp eax, 0xa5	       761	8250_core.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4000629	            0x75b9	                           jne 0x40005e4	       761	8250_core.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x400062b	    0xc683d8010000	           mov byte [rbx + 0x1d8], 0xa5 	       762	8250_core.c	FUNCTION_25	IF_1	IF_2
0x4000632	            0xebb0	                           jmp 0x40005e4	       762	8250_core.c	FUNCTION_25	IF_1	IF_2
serial8250_set_isa_configurator	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,0:IF,0:FOR,0	2
0x4000060	    0x48893d000000	            mov qword [0x04000067], rdi 	       427	8250_core.c	FUNCTION_12
0x4000067	              0xc3	                                     ret	       427	8250_core.c	FUNCTION_12
univ8250_config_port	SWITCH,0:ELSE,1:DO,0:functions,0:WHILE,0:CALL,5:IF,6:FOR,1	46
0x4000500	              0x53	                                push rbx	       434	8250_core.c	FUNCTION_13
0x4000501	          0x4889fb	                            mov rbx, rdi	       434	8250_core.c	FUNCTION_13
0x4000504	        0x4883ec08	                              sub rsp, 8	       434	8250_core.c	FUNCTION_13
0x4000508	    0x80a7d9010000	            and byte [rdi + 0x1d9], 0xfe	       437	8250_core.c	FUNCTION_13
0x400050f	    0x83bf0c010000	           cmp dword [rdi + 0x10c], 0xd 	       438	8250_core.c	FUNCTION_13	IF_1
0x4000516	            0x747a	                            je 0x4000592	       438	8250_core.c	FUNCTION_13	IF_1
0x4000518	        0x40f6c601	                             test sil, 1	       441	8250_core.c	FUNCTION_13	ELSE_1	IF_3
0x400051c	            0x7439	                            je 0x4000557	       441	8250_core.c	FUNCTION_13	ELSE_1	IF_3
0x400051e	    0x8b0d00000000	            mov ecx, dword [0x04000524] 	       444	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1
0x4000524	            0x85c9	                           test ecx, ecx	       444	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1
0x4000526	            0x742f	                            je 0x4000557	       444	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1
0x4000528	        0x488b5708	                mov rdx, qword [rdi + 8]	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x400052c	    0x483915000000	            cmp qword [0x04000533], rdx 	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x4000533	            0x745d	                            je 0x4000592	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x4000535	          0x83e901	                              sub ecx, 1	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x4000538	    0x48c7c0000000	                              mov rax, 0	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x400053f	    0x488d0ccd0000	                        lea rcx, [rcx*8]	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x4000547	            0xeb09	                           jmp 0x4000552	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x4000549	        0x4883c008	                              add rax, 8	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x400054d	          0x483910	                    cmp qword [rax], rdx	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x4000550	            0x7440	                            je 0x4000592	       445	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4
0x4000552	          0x4839c8	                            cmp rax, rcx	       444	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1
0x4000555	            0x75f2	                           jne 0x4000549	       444	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1
0x4000557	    0x488b05000000	            mov rax, qword [0x0400055e] 	       453	8250_core.c	FUNCTION_13	CALL_4
0x400055e	          0x4889df	                            mov rdi, rbx	       453	8250_core.c	FUNCTION_13	CALL_4
0x4000561	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       453	8250_core.c	FUNCTION_13	CALL_4
0x4000568	      0xe800000000	                          call 0x400056d	       453	8250_core.c	FUNCTION_13	CALL_4
0x400056d	    0x83bb0c010000	           cmp dword [rbx + 0x10c], 0xd 	       455	8250_core.c	FUNCTION_13	IF_6
0x4000574	            0x7409	                            je 0x400057f	       455	8250_core.c	FUNCTION_13	IF_6
0x4000576	    0xf683d9010000	              test byte [rbx + 0x1d9], 1	       455	8250_core.c	FUNCTION_13	IF_6
0x400057d	            0x7506	                           jne 0x4000585	       455	8250_core.c	FUNCTION_13	IF_6
0x400057f	        0x4883c408	                              add rsp, 8	       457	8250_core.c	FUNCTION_13
0x4000583	              0x5b	                                 pop rbx	       457	8250_core.c	FUNCTION_13
0x4000584	              0xc3	                                     ret	       457	8250_core.c	FUNCTION_13
0x4000585	        0x4883c408	                              add rsp, 8	       457	8250_core.c	FUNCTION_13
0x4000589	          0x4889df	                            mov rdi, rbx	       456	8250_core.c	FUNCTION_13	CALL_5
0x400058c	              0x5b	                                 pop rbx	       457	8250_core.c	FUNCTION_13
0x400058d	      0xe9aefeffff	 jmp sym.serial8250_release_rsa_resource	       456	8250_core.c	FUNCTION_13	CALL_5
0x4000592	          0x4889df	                            mov rdi, rbx	       446	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5	CALL_3
0x4000595	        0x89742404	                mov dword [rsp + 4], esi	       446	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5	CALL_3
0x4000599	      0xe812ffffff	call sym.serial8250_request_rsa_resource	       446	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5	CALL_3
0x400059e	            0x85c0	                           test eax, eax	       446	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5	CALL_3
0x40005a0	        0x8b742404	                mov esi, dword [rsp + 4]	       446	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5	CALL_3
0x40005a4	            0x75b1	                           jne 0x4000557	       446	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5	CALL_3
0x40005a6	    0x808bd9010000	                or byte [rbx + 0x1d9], 1	       447	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5
0x40005ad	            0xeba8	                           jmp 0x4000557	       447	8250_core.c	FUNCTION_13	ELSE_1	IF_3	FOR_1	IF_4	IF_5
serial8250_release_rsa_resource	SWITCH,1:ELSE,0:DO,0:functions,0:WHILE,0:CALL,1:IF,0:FOR,0	12
0x4000440	    0x80bfa2000000	                cmp byte [rdi + 0xa2], 1	       384	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1
0x4000447	            0x7602	                           jbe 0x400044b	       384	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1
0x4000449	            0xf3c3	                                     ret	       384	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1
0x400044b	     0xfb68fa10000	           movzx ecx, byte [rdi + 0xa1] 	       380	8250_core.c	ELSE_1	FUNCTION_10
0x4000452	      0xbef8ffffff	                     mov esi, 0xfffffff8	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
0x4000457	      0xba08000000	                              mov edx, 8	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
0x400045c	            0xd3e6	                             shl esi, cl	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
0x400045e	            0xd3e2	                             shl edx, cl	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
0x4000460	          0x4863f6	                         movsxd rsi, esi	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
0x4000463	        0x48037708	                add rsi, qword [rdi + 8]	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
0x4000467	    0x48c7c7000000	                              mov rdi, 0	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
0x400046e	      0xe900000000	                           jmp 0x4000473	       387	8250_core.c	ELSE_1	FUNCTION_10	SWITCH_1	CALL_1
serial8250_request_rsa_resource	SWITCH,1:ELSE,1:DO,0:functions,0:WHILE,0:CALL,1:IF,1:FOR,0	18
0x40004b0	     0xfb68fa10000	           movzx ecx, byte [rdi + 0xa1] 	       359	8250_core.c	FUNCTION_9
0x40004b7	      0xbef8ffffff	                     mov esi, 0xfffffff8	       359	8250_core.c	FUNCTION_9
0x40004bc	      0xba08000000	                              mov edx, 8	       360	8250_core.c	FUNCTION_9
0x40004c1	      0xb8eaffffff	                     mov eax, 0xffffffea	       362	8250_core.c	FUNCTION_9
0x40004c6	            0xd3e6	                             shl esi, cl	       359	8250_core.c	FUNCTION_9
0x40004c8	            0xd3e2	                             shl edx, cl	       360	8250_core.c	FUNCTION_9
0x40004ca	    0x80bfa2000000	                cmp byte [rdi + 0xa2], 1	       364	8250_core.c	FUNCTION_9	SWITCH_1
0x40004d1	          0x4863f6	                         movsxd rsi, esi	       359	8250_core.c	FUNCTION_9
0x40004d4	            0x7723	                            ja 0x40004f9	       364	8250_core.c	FUNCTION_9	SWITCH_1
0x40004d6	        0x48037708	                add rsi, qword [rdi + 8]	       368	8250_core.c	FUNCTION_9	SWITCH_1	IF_1	CALL_1
0x40004da	          0x4531c0	                            xor r8d, r8d	       368	8250_core.c	FUNCTION_9	SWITCH_1	IF_1	CALL_1
0x40004dd	    0x48c7c1000000	                              mov rcx, 0	       368	8250_core.c	FUNCTION_9	SWITCH_1	IF_1	CALL_1
0x40004e4	    0x48c7c7000000	                              mov rdi, 0	       368	8250_core.c	FUNCTION_9	SWITCH_1	IF_1	CALL_1
0x40004eb	      0xe800000000	                          call 0x40004f0	       368	8250_core.c	FUNCTION_9	SWITCH_1	IF_1	CALL_1
0x40004f0	        0x4883f801	                              cmp rax, 1	       371	8250_core.c	FUNCTION_9	SWITCH_1	ELSE_1
0x40004f4	            0x19c0	                            sbb eax, eax	       371	8250_core.c	FUNCTION_9	SWITCH_1	ELSE_1
0x40004f6	          0x83e0f0	                     and eax, 0xfffffff0	       371	8250_core.c	FUNCTION_9	SWITCH_1	ELSE_1
0x40004f9	            0xf3c3	                                     ret	       376	8250_core.c	FUNCTION_9	ELSE_1
univ8250_console_write	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,1:IF,0:FOR,0	5
0x40001e0	      0x480fbf4742	           movsx rax, word [rdi + 0x42] 	       588	8250_core.c	FUNCTION_20
0x40001e5	          0x4889c1	                            mov rcx, rax	       588	8250_core.c	FUNCTION_20
0x40001e8	        0x48c1e109	                              shl rcx, 9	       588	8250_core.c	FUNCTION_20
0x40001ec	    0x488dbcc10000	                  lea rdi, [rcx + rax*8]	       588	8250_core.c	FUNCTION_20
0x40001f4	      0xe900000000	                           jmp 0x40001f9	       590	8250_core.c	FUNCTION_20	CALL_1
univ8250_release_port	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,3:IF,1:FOR,0	11
0x4000480	              0x53	                                push rbx	       475	8250_core.c	FUNCTION_15
0x4000481	    0x83bf0c010000	           cmp dword [rdi + 0x10c], 0xd 	       478	8250_core.c	FUNCTION_15	IF_1
0x4000488	          0x4889fb	                            mov rbx, rdi	       475	8250_core.c	FUNCTION_15
0x400048b	            0x7417	                            je 0x40004a4	       478	8250_core.c	FUNCTION_15	IF_1
0x400048d	    0x488b05000000	            mov rax, qword [0x04000494] 	       480	8250_core.c	FUNCTION_15	CALL_3
0x4000494	          0x4889df	                            mov rdi, rbx	       480	8250_core.c	FUNCTION_15	CALL_3
0x4000497	              0x5b	                                 pop rbx	       481	8250_core.c	FUNCTION_15
0x4000498	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       480	8250_core.c	FUNCTION_15	CALL_3
0x400049f	      0xe900000000	                           jmp 0x40004a4	       480	8250_core.c	FUNCTION_15	CALL_3
0x40004a4	      0xe897ffffff	call sym.serial8250_release_rsa_resource	       479	8250_core.c	FUNCTION_15	CALL_2
0x40004a9	            0xebe2	                           jmp 0x400048d	       479	8250_core.c	FUNCTION_15	CALL_2
serial8250_probe	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,4:IF,2:FOR,1	105
0x4000d30	            0x4156	                                push r14	       801	8250_core.c	FUNCTION_27
0x4000d32	            0x4155	                                push r13	       801	8250_core.c	FUNCTION_27
0x4000d34	      0xb941000000	                           mov ecx, 0x41	       806	8250_core.c	FUNCTION_27	CALL_2
0x4000d39	            0x4154	                                push r12	       801	8250_core.c	FUNCTION_27
0x4000d3b	              0x55	                                push rbp	       801	8250_core.c	FUNCTION_27
0x4000d3c	          0x4989fd	                            mov r13, rdi	       801	8250_core.c	FUNCTION_27
0x4000d3f	              0x53	                                push rbx	       801	8250_core.c	FUNCTION_27
0x4000d40	    0x4881ec100200	                          sub rsp, 0x210	       801	8250_core.c	FUNCTION_27
0x4000d47	    0x488b9fa00000	            mov rbx, qword [rdi + 0xa0] 	       801	8250_core.c	FUNCTION_27
0x4000d4e	    0x65488b042528	                mov rax, qword gs:[0x28]	       801	8250_core.c	FUNCTION_27
0x4000d57	    0x488984240802	            mov qword [rsp + 0x208], rax	       801	8250_core.c	FUNCTION_27
0x4000d5f	            0x31c0	                            xor eax, eax	       801	8250_core.c	FUNCTION_27
0x4000d61	    0x833d00000000	               cmp dword [0x04000d68], 1	       804	8250_core.c	FUNCTION_27
0x4000d68	          0x4889e7	                            mov rdi, rsp	       806	8250_core.c	FUNCTION_27	CALL_2
0x4000d6b	          0xf348ab	              rep stosq qword [rdi], rax	       806	8250_core.c	FUNCTION_27	CALL_2
0x4000d6e	          0x4519e4	                          sbb r12d, r12d	       804	8250_core.c	FUNCTION_27
0x4000d71	          0x41f7d4	                                not r12d	       804	8250_core.c	FUNCTION_27
0x4000d74	    0x4181e4800000	                          and r12d, 0x80	       804	8250_core.c	FUNCTION_27
0x4000d7b	          0x4885db	                           test rbx, rbx	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d7e	     0xf844e010000	                            je 0x4000ed2	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d84	          0x8b4b3c	            mov ecx, dword [rbx + 0x3c] 	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d87	            0x85c9	                           test ecx, ecx	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d89	     0xf8443010000	                            je 0x4000ed2	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d8f	          0x4989e6	                            mov r14, rsp	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d92	        0x4983c510	                           add r13, 0x10	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d96	          0x4d63e4	                        movsxd r12, r12d	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d99	            0x31ed	                            xor ebp, ebp	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d9b	            0xeb1b	                           jmp 0x4000db8	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000d9d	          0x83c501	                              add ebp, 1	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000da0	    0x4881c3880000	                           add rbx, 0x88	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000da7	     0xf8425010000	                            je 0x4000ed2	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000dad	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000db0	            0x85c0	                           test eax, eax	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000db2	     0xf841a010000	                            je 0x4000ed2	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000db8	          0x488b03	                    mov rax, qword [rbx]	       812	8250_core.c	FUNCTION_27	FOR_1
0x4000dbb	          0x4c89f7	                            mov rdi, r14	       834	8250_core.c	FUNCTION_27	FOR_1	CALL_3
0x4000dbe	      0x4889442408	                mov qword [rsp + 8], rax	       812	8250_core.c	FUNCTION_27	FOR_1
0x4000dc3	        0x488b4308	                mov rax, qword [rbx + 8]	       813	8250_core.c	FUNCTION_27	FOR_1
0x4000dc7	      0x4889442410	             mov qword [rsp + 0x10], rax	       813	8250_core.c	FUNCTION_27	FOR_1
0x4000dcc	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       814	8250_core.c	FUNCTION_27	FOR_1
0x4000dcf	    0x898424880000	             mov dword [rsp + 0x88], eax	       814	8250_core.c	FUNCTION_27	FOR_1
0x4000dd6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       815	8250_core.c	FUNCTION_27	FOR_1
0x4000dda	    0x488984249000	             mov qword [rsp + 0x90], rax	       815	8250_core.c	FUNCTION_27	FOR_1
0x4000de2	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       816	8250_core.c	FUNCTION_27	FOR_1
0x4000de5	          0x4c09e0	                             or rax, r12	       833	8250_core.c	FUNCTION_27	FOR_1
0x4000de8	    0x899424980000	             mov dword [rsp + 0x98], edx	       816	8250_core.c	FUNCTION_27	FOR_1
0x4000def	         0xfb65338	           movzx edx, byte [rbx + 0x38] 	       817	8250_core.c	FUNCTION_27	FOR_1
0x4000df3	    0x889424a10000	               mov byte [rsp + 0xa1], dl	       817	8250_core.c	FUNCTION_27	FOR_1
0x4000dfa	         0xfb65339	           movzx edx, byte [rbx + 0x39] 	       818	8250_core.c	FUNCTION_27	FOR_1
0x4000dfe	    0x889424a20000	               mov byte [rsp + 0xa2], dl	       818	8250_core.c	FUNCTION_27	FOR_1
0x4000e05	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	       819	8250_core.c	FUNCTION_27	FOR_1
0x4000e08	    0x899424f80000	             mov dword [rsp + 0xf8], edx	       819	8250_core.c	FUNCTION_27	FOR_1
0x4000e0f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       820	8250_core.c	FUNCTION_27	FOR_1
0x4000e13	    0x488994242801	            mov qword [rsp + 0x128], rdx	       820	8250_core.c	FUNCTION_27	FOR_1
0x4000e1b	         0xfb6533a	           movzx edx, byte [rbx + 0x3a] 	       821	8250_core.c	FUNCTION_27	FOR_1
0x4000e1f	    0x889424400100	              mov byte [rsp + 0x140], dl	       821	8250_core.c	FUNCTION_27	FOR_1
0x4000e26	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       822	8250_core.c	FUNCTION_27	FOR_1
0x4000e2a	    0x488994248001	            mov qword [rsp + 0x180], rdx	       822	8250_core.c	FUNCTION_27	FOR_1
0x4000e32	          0x8b5340	            mov edx, dword [rbx + 0x40] 	       823	8250_core.c	FUNCTION_27	FOR_1
0x4000e35	    0x8994240c0100	            mov dword [rsp + 0x10c], edx	       823	8250_core.c	FUNCTION_27	FOR_1
0x4000e3c	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	       824	8250_core.c	FUNCTION_27	FOR_1
0x4000e40	      0x4889542418	             mov qword [rsp + 0x18], rdx	       824	8250_core.c	FUNCTION_27	FOR_1
0x4000e45	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	       825	8250_core.c	FUNCTION_27	FOR_1
0x4000e49	      0x4889542420	             mov qword [rsp + 0x20], rdx	       825	8250_core.c	FUNCTION_27	FOR_1
0x4000e4e	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	       826	8250_core.c	FUNCTION_27	FOR_1
0x4000e52	      0x4889542468	             mov qword [rsp + 0x68], rdx	       826	8250_core.c	FUNCTION_27	FOR_1
0x4000e57	    0x488b93800000	            mov rdx, qword [rbx + 0x80] 	       827	8250_core.c	FUNCTION_27	FOR_1
0x4000e5e	      0x4889542478	             mov qword [rsp + 0x78], rdx	       827	8250_core.c	FUNCTION_27	FOR_1
0x4000e63	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	       828	8250_core.c	FUNCTION_27	FOR_1
0x4000e67	      0x4889542428	             mov qword [rsp + 0x28], rdx	       828	8250_core.c	FUNCTION_27	FOR_1
0x4000e6c	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	       829	8250_core.c	FUNCTION_27	FOR_1
0x4000e70	      0x4889542430	             mov qword [rsp + 0x30], rdx	       829	8250_core.c	FUNCTION_27	FOR_1
0x4000e75	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	       830	8250_core.c	FUNCTION_27	FOR_1
0x4000e79	      0x4889542438	             mov qword [rsp + 0x38], rdx	       830	8250_core.c	FUNCTION_27	FOR_1
0x4000e7e	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	       831	8250_core.c	FUNCTION_27	FOR_1
0x4000e82	    0x4c89ac243801	            mov qword [rsp + 0x138], r13	       832	8250_core.c	FUNCTION_27	FOR_1
0x4000e8a	    0x488984249000	             mov qword [rsp + 0x90], rax	       833	8250_core.c	FUNCTION_27	FOR_1
0x4000e92	      0x4889542470	             mov qword [rsp + 0x70], rdx	       831	8250_core.c	FUNCTION_27	FOR_1
0x4000e97	      0xe800000000	                          call 0x4000e9c	       834	8250_core.c	FUNCTION_27	FOR_1	CALL_3
0x4000e9c	            0x85c0	                           test eax, eax	       835	8250_core.c	FUNCTION_27	FOR_1	IF_2
0x4000e9e	     0xf89f9feffff	                           jns 0x4000d9d	       835	8250_core.c	FUNCTION_27	FOR_1	IF_2
0x4000ea4	              0x50	                                push rax	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000ea5	        0x448b4b18	            mov r9d, dword [rbx + 0x18] 	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000ea9	            0x89ea	                            mov edx, ebp	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000eab	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000eaf	          0x488b0b	                    mov rcx, qword [rbx]	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000eb2	    0x48c7c6000000	                              mov rsi, 0	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000eb9	          0x4c89ef	                            mov rdi, r13	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000ebc	          0x83c501	                              add ebp, 1	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000ebf	      0xe800000000	                          call 0x4000ec4	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000ec4	    0x4881c3880000	                           add rbx, 0x88	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000ecb	              0x5a	                                 pop rdx	       836	8250_core.c	FUNCTION_27	FOR_1	IF_2	CALL_4
0x4000ecc	     0xf85dbfeffff	                           jne 0x4000dad	       811	8250_core.c	FUNCTION_27	FOR_1
0x4000ed2	            0x31c0	                            xor eax, eax	       843	8250_core.c	FUNCTION_27
0x4000ed4	    0x488bb4240802	           mov rsi, qword [rsp + 0x208] 	       843	8250_core.c	FUNCTION_27
0x4000edc	    0x654833342528	                xor rsi, qword gs:[0x28]	       843	8250_core.c	FUNCTION_27
0x4000ee5	            0x7510	                           jne 0x4000ef7	       843	8250_core.c	FUNCTION_27
0x4000ee7	    0x4881c4100200	                          add rsp, 0x210	       843	8250_core.c	FUNCTION_27
0x4000eee	              0x5b	                                 pop rbx	       843	8250_core.c	FUNCTION_27
0x4000eef	              0x5d	                                 pop rbp	       843	8250_core.c	FUNCTION_27
0x4000ef0	            0x415c	                                 pop r12	       843	8250_core.c	FUNCTION_27
0x4000ef2	            0x415d	                                 pop r13	       843	8250_core.c	FUNCTION_27
0x4000ef4	            0x415e	                                 pop r14	       843	8250_core.c	FUNCTION_27
0x4000ef6	              0xc3	                                     ret	       843	8250_core.c	FUNCTION_27
0x4000ef7	      0xe800000000	                          call 0x4000efc	       843	8250_core.c	FUNCTION_27
serial8250_exit	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,5:IF,0:FOR,0	15
0x4000040	          0x4863ff	                         movsxd rdi, edi	       417	8250_core.c	FUNCTION_11
0x4000043	          0x4889f8	                            mov rax, rdi	       417	8250_core.c	FUNCTION_11
0x4000046	        0x48c1e009	                              shl rax, 9	       417	8250_core.c	FUNCTION_11
0x400004a	    0x488d84f80000	                  lea rax, [rax + rdi*8]	       417	8250_core.c	FUNCTION_11
0x4000052	              0xc3	                                     ret	       418	8250_core.c	FUNCTION_11
0x4000053	           0xf1f00	                         nop dword [rax]	       418	8250_core.c	FUNCTION_11
0x4000056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       418	8250_core.c	FUNCTION_11
0x4000060	    0x48893d000000	            mov qword [0x04000067], rdi 	       427	8250_core.c	FUNCTION_12
0x4000067	              0xc3	                                     ret	       427	8250_core.c	FUNCTION_12
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       427	8250_core.c	FUNCTION_12
0x4000070	              0x53	                                push rbx	       635	8250_core.c	FUNCTION_22
0x4000071	          0x4889fb	                            mov rbx, rdi	       635	8250_core.c	FUNCTION_22
0x4000074	          0x4889f7	                            mov rdi, rsi	       635	8250_core.c	FUNCTION_22
0x4000077	              0xba	                                 invalid	       641	8250_core.c	FUNCTION_22	IF_1	CALL_1
0x4000078	               0x4	                                 invalid	       641	8250_core.c	FUNCTION_22	IF_1	CALL_1
univ8250_console_match	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,3:IF,5:FOR,1	70
0x4000070	              0x53	                                push rbx	       635	8250_core.c	FUNCTION_22
0x4000071	          0x4889fb	                            mov rbx, rdi	       635	8250_core.c	FUNCTION_22
0x4000074	          0x4889f7	                            mov rdi, rsi	       635	8250_core.c	FUNCTION_22
0x4000077	      0xba04000000	                              mov edx, 4	       641	8250_core.c	FUNCTION_22	IF_1	CALL_1
0x400007c	        0x4883ec28	                           sub rsp, 0x28	       635	8250_core.c	FUNCTION_22
0x4000080	      0x488d74241b	                   lea rsi, [rsp + 0x1b]	       641	8250_core.c	FUNCTION_22	IF_1	CALL_1
0x4000085	        0x48890c24	                    mov qword [rsp], rcx	       635	8250_core.c	FUNCTION_22
0x4000089	    0xc744241b7561	     mov dword [rsp + 0x1b], 0x74726175 	       636	8250_core.c	FUNCTION_22
0x4000091	    0x65488b042528	                mov rax, qword gs:[0x28]	       635	8250_core.c	FUNCTION_22
0x400009a	      0x4889442420	             mov qword [rsp + 0x20], rax	       635	8250_core.c	FUNCTION_22
0x400009f	            0x31c0	                            xor eax, eax	       635	8250_core.c	FUNCTION_22
0x40000a1	      0xc644241f00	                mov byte [rsp + 0x1f], 0	       636	8250_core.c	FUNCTION_22
0x40000a6	      0xe800000000	                          call 0x40000ab	       641	8250_core.c	FUNCTION_22	IF_1	CALL_1
0x40000ab	            0x85c0	                           test eax, eax	       641	8250_core.c	FUNCTION_22	IF_1	CALL_1
0x40000ad	     0xf85b7000000	                           jne 0x400016a	       641	8250_core.c	FUNCTION_22	IF_1	CALL_1
0x40000b3	        0x488b3c24	                    mov rdi, qword [rsp]	       644	8250_core.c	FUNCTION_22	IF_2	CALL_2
0x40000b7	      0x488d542410	                   lea rdx, [rsp + 0x10]	       644	8250_core.c	FUNCTION_22	IF_2	CALL_2
0x40000bc	      0x488d74240f	                    lea rsi, [rsp + 0xf]	       644	8250_core.c	FUNCTION_22	IF_2	CALL_2
0x40000c1	          0x4889e1	                            mov rcx, rsp	       644	8250_core.c	FUNCTION_22	IF_2	CALL_2
0x40000c4	      0xe800000000	                          call 0x40000c9	       644	8250_core.c	FUNCTION_22	IF_2	CALL_2
0x40000c9	            0x85c0	                           test eax, eax	       644	8250_core.c	FUNCTION_22	IF_2	CALL_2
0x40000cb	     0xf8599000000	                           jne 0x400016a	       644	8250_core.c	FUNCTION_22	IF_2	CALL_2
0x40000d1	    0x8b3d00000000	            mov edi, dword [0x040000d7] 	       648	8250_core.c	FUNCTION_22	FOR_1
0x40000d7	            0x85ff	                           test edi, edi	       648	8250_core.c	FUNCTION_22	FOR_1
0x40000d9	     0xf848b000000	                            je 0x400016a	       648	8250_core.c	FUNCTION_22	FOR_1
0x40000df	       0xfb674240f	            movzx esi, byte [rsp + 0xf] 	       648	8250_core.c	FUNCTION_22	FOR_1
0x40000e4	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       655	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x40000e9	          0x4189f0	                            mov r8d, esi	       654	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x40000ec	        0x4183e0fb	                     and r8d, 0xfffffffb	       654	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x40000f0	        0x4183e802	                              sub r8d, 2	       654	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x40000f4	            0xeb07	                           jmp 0x40000fd	       654	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x40000f6	          0x83c001	                              add eax, 1	       648	8250_core.c	FUNCTION_22	FOR_1
0x40000f9	            0x39f8	                            cmp eax, edi	       648	8250_core.c	FUNCTION_22	FOR_1
0x40000fb	            0x746d	                            je 0x400016a	       648	8250_core.c	FUNCTION_22	FOR_1
0x40000fd	          0x4863d0	                         movsxd rdx, eax	       651	8250_core.c	FUNCTION_22	FOR_1	IF_3
0x4000100	          0x4889d1	                            mov rcx, rdx	       651	8250_core.c	FUNCTION_22	FOR_1	IF_3
0x4000103	        0x48c1e109	                              shl rcx, 9	       651	8250_core.c	FUNCTION_22	FOR_1	IF_3
0x4000107	        0x488d0cd1	                  lea rcx, [rcx + rdx*8]	       651	8250_core.c	FUNCTION_22	FOR_1	IF_3
0x400010b	    0x4038b1000000	                     cmp byte [rcx], sil	       651	8250_core.c	FUNCTION_22	FOR_1	IF_3
0x4000112	            0x75e2	                           jne 0x40000f6	       651	8250_core.c	FUNCTION_22	FOR_1	IF_3
0x4000114	        0x4180f801	                              cmp r8b, 1	       654	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x4000118	            0x7640	                           jbe 0x400015a	       654	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x400011a	          0x4084f6	                           test sil, sil	       657	8250_core.c	FUNCTION_22	FOR_1	IF_5
0x400011d	            0x7511	                           jne 0x4000130	       657	8250_core.c	FUNCTION_22	FOR_1	IF_5
0x400011f	          0x4889d1	                            mov rcx, rdx	       657	8250_core.c	FUNCTION_22	FOR_1	IF_5
0x4000122	        0x48c1e109	                              shl rcx, 9	       657	8250_core.c	FUNCTION_22	FOR_1	IF_5
0x4000126	    0x4c3b8cd10000	             cmp r9, qword [rcx + rdx*8]	       657	8250_core.c	FUNCTION_22	FOR_1	IF_5
0x400012e	            0x75c6	                           jne 0x40000f6	       657	8250_core.c	FUNCTION_22	FOR_1	IF_5
0x4000130	        0x66894342	               mov word [rbx + 0x42], ax	       660	8250_core.c	FUNCTION_22	FOR_1
0x4000134	          0x4889d0	                            mov rax, rdx	       661	8250_core.c	FUNCTION_22	FOR_1
0x4000137	        0x488b3424	                    mov rsi, qword [rsp]	       662	8250_core.c	FUNCTION_22	FOR_1	CALL_3
0x400013b	        0x48c1e009	                              shl rax, 9	       661	8250_core.c	FUNCTION_22	FOR_1
0x400013f	    0x488dbcd00000	                  lea rdi, [rax + rdx*8]	       661	8250_core.c	FUNCTION_22	FOR_1
0x4000147	      0xba01000000	                              mov edx, 1	       662	8250_core.c	FUNCTION_22	FOR_1	CALL_3
0x400014c	    0x48899fe80000	             mov qword [rdi + 0xe8], rbx	       661	8250_core.c	FUNCTION_22	FOR_1
0x4000153	      0xe800000000	                          call 0x4000158	       662	8250_core.c	FUNCTION_22	FOR_1	CALL_3
0x4000158	            0xeb15	                           jmp 0x400016f	       662	8250_core.c	FUNCTION_22	FOR_1	CALL_3
0x400015a	    0x4c3989000000	                     cmp qword [rcx], r9	       655	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x4000161	            0x74b7	                            je 0x400011a	       655	8250_core.c	FUNCTION_22	FOR_1	IF_4
0x4000163	          0x83c001	                              add eax, 1	       648	8250_core.c	FUNCTION_22	FOR_1
0x4000166	            0x39f8	                            cmp eax, edi	       648	8250_core.c	FUNCTION_22	FOR_1
0x4000168	            0x7593	                           jne 0x40000fd	       648	8250_core.c	FUNCTION_22	FOR_1
0x400016a	      0xb8edffffff	                     mov eax, 0xffffffed	       642	8250_core.c	FUNCTION_22	IF_1
0x400016f	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       666	8250_core.c	FUNCTION_22
0x4000174	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       666	8250_core.c	FUNCTION_22
0x400017d	            0x7506	                           jne 0x4000185	       666	8250_core.c	FUNCTION_22
0x400017f	        0x4883c428	                           add rsp, 0x28	       666	8250_core.c	FUNCTION_22
0x4000183	              0x5b	                                 pop rbx	       666	8250_core.c	FUNCTION_22
0x4000184	              0xc3	                                     ret	       666	8250_core.c	FUNCTION_22
0x4000185	      0xe800000000	                          call 0x400018a	       666	8250_core.c	FUNCTION_22
serial8250_get_port	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,0:IF,0:FOR,0	5
0x4000040	          0x4863ff	                         movsxd rdi, edi	       417	8250_core.c	FUNCTION_11
0x4000043	          0x4889f8	                            mov rax, rdi	       417	8250_core.c	FUNCTION_11
0x4000046	        0x48c1e009	                              shl rax, 9	       417	8250_core.c	FUNCTION_11
0x400004a	    0x488d84f80000	                  lea rax, [rax + rdi*8]	       417	8250_core.c	FUNCTION_11
0x4000052	              0xc3	                                     ret	       418	8250_core.c	FUNCTION_11
s8250_options	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,4:IF,0:FOR,0	1
0x40012f0	            0xf3c3	                                     ret	      1215	8250_core.c	FUNCTION_36
univ8250_console_setup	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:CALL,1:IF,2:FOR,0	19
0x4000190	              0x53	                                push rbx	       594	8250_core.c	FUNCTION_21
0x4000191	      0x480fbf4742	           movsx rax, word [rdi + 0x42] 	       603	8250_core.c	FUNCTION_21	IF_1
0x4000196	    0x3b0500000000	            cmp eax, dword [0x0400019c] 	       603	8250_core.c	FUNCTION_21	IF_1
0x400019c	            0x7208	                            jb 0x40001a6	       603	8250_core.c	FUNCTION_21	IF_1
0x400019e	            0x31c0	                            xor eax, eax	       604	8250_core.c	FUNCTION_21	IF_1
0x40001a0	        0x66894742	               mov word [rdi + 0x42], ax	       604	8250_core.c	FUNCTION_21	IF_1
0x40001a4	            0x31c0	                            xor eax, eax	       604	8250_core.c	FUNCTION_21	IF_1
0x40001a6	          0x4889c2	                            mov rdx, rax	       607	8250_core.c	FUNCTION_21
0x40001a9	        0x48c1e209	                              shl rdx, 9	       607	8250_core.c	FUNCTION_21
0x40001ad	    0x488d9cc20000	                  lea rbx, [rdx + rax*8]	       607	8250_core.c	FUNCTION_21
0x40001b5	            0x31d2	                            xor edx, edx	       609	8250_core.c	FUNCTION_21	CALL_1
0x40001b7	    0x4889bbe80000	             mov qword [rbx + 0xe8], rdi	       607	8250_core.c	FUNCTION_21
0x40001be	          0x4889df	                            mov rdi, rbx	       609	8250_core.c	FUNCTION_21	CALL_1
0x40001c1	      0xe800000000	                          call 0x40001c6	       609	8250_core.c	FUNCTION_21	CALL_1
0x40001c6	            0x85c0	                           test eax, eax	       610	8250_core.c	FUNCTION_21	IF_2
0x40001c8	            0x740b	                            je 0x40001d5	       610	8250_core.c	FUNCTION_21	IF_2
0x40001ca	    0x48c783e80000	               mov qword [rbx + 0xe8], 0	       611	8250_core.c	FUNCTION_21	IF_2
0x40001d5	              0x5b	                                 pop rbx	       613	8250_core.c	FUNCTION_21
0x40001d6	              0xc3	                                     ret	       613	8250_core.c	FUNCTION_21
serial8250_register_8250_port	SWITCH,0:ELSE,1:DO,0:functions,0:WHILE,0:CALL,9:IF,22:FOR,0	237
0x40007a0	    0x448b9f980000	           mov r11d, dword [rdi + 0x98] 	       967	8250_core.c	FUNCTION_32	IF_1
0x40007a7	          0x4585db	                         test r11d, r11d	       967	8250_core.c	FUNCTION_32	IF_1
0x40007aa	     0xf842f040000	                            je 0x4000bdf	       967	8250_core.c	FUNCTION_32	IF_1
0x40007b0	            0x4154	                                push r12	       963	8250_core.c	FUNCTION_32
0x40007b2	              0x55	                                push rbp	       963	8250_core.c	FUNCTION_32
0x40007b3	          0x4989fc	                            mov r12, rdi	       963	8250_core.c	FUNCTION_32
0x40007b6	              0x53	                                push rbx	       963	8250_core.c	FUNCTION_32
0x40007b7	    0x48c7c7000000	                              mov rdi, 0	       970	8250_core.c	FUNCTION_32	CALL_1
0x40007be	      0xe800000000	                          call 0x40007c3	       970	8250_core.c	FUNCTION_32	CALL_1
0x40007c3	    0x448b15000000	           mov r10d, dword [0x040007ca] 	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007ca	          0x4585d2	                         test r10d, r10d	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007cd	     0xf8490030000	                            je 0x4000b63	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007d3	            0x31ed	                            xor ebp, ebp	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007d5	            0xeb11	                           jmp 0x40007e8	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007d7	    0x8b0500000000	            mov eax, dword [0x040007dd] 	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007dd	          0x83c501	                              add ebp, 1	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007e0	            0x39c5	                            cmp ebp, eax	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007e2	     0xf83f6020000	                           jae 0x4000ade	       919	8250_core.c	FUNCTION_31	FOR_1
0x40007e8	          0x4863c5	                         movsxd rax, ebp	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x40007eb	          0x4c89e6	                            mov rsi, r12	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x40007ee	          0x4889c2	                            mov rdx, rax	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x40007f1	        0x48c1e209	                              shl rdx, 9	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x40007f5	    0x488d9cc20000	                  lea rbx, [rdx + rax*8]	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x40007fd	          0x4889df	                            mov rdi, rbx	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x4000800	      0xe800000000	                          call 0x4000805	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x4000805	            0x85c0	                           test eax, eax	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x4000807	            0x74ce	                            je 0x40007d7	       920	8250_core.c	FUNCTION_31	FOR_1	IF_1	CALL_1
0x4000809	    0x83bb0c010000	          cmp dword [rbx + 0x10c], 0x17 	       973	8250_core.c	FUNCTION_32	IF_2
0x4000810	     0xf844d030000	                            je 0x4000b63	       973	8250_core.c	FUNCTION_32	IF_2
0x4000816	    0x4883bb380100	              cmp qword [rbx + 0x138], 0	       974	8250_core.c	FUNCTION_32	IF_2	IF_3
0x400081e	            0x740f	                            je 0x400082f	       974	8250_core.c	FUNCTION_32	IF_2	IF_3
0x4000820	          0x4889de	                            mov rsi, rbx	       975	8250_core.c	FUNCTION_32	IF_2	CALL_3
0x4000823	    0x48c7c7000000	                              mov rdi, 0	       975	8250_core.c	FUNCTION_32	IF_2	CALL_3
0x400082a	      0xe800000000	                          call 0x400082f	       975	8250_core.c	FUNCTION_32	IF_2	CALL_3
0x400082f	      0x498b442408	                mov rax, qword [r12 + 8]	       977	8250_core.c	FUNCTION_32	IF_2
0x4000834	        0x48894308	                mov qword [rbx + 8], rax	       977	8250_core.c	FUNCTION_32	IF_2
0x4000838	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       978	8250_core.c	FUNCTION_32	IF_2
0x400083d	        0x48894310	             mov qword [rbx + 0x10], rax	       978	8250_core.c	FUNCTION_32	IF_2
0x4000841	    0x418b84248800	            mov eax, dword [r12 + 0x88] 	       979	8250_core.c	FUNCTION_32	IF_2
0x4000849	    0x898388000000	             mov dword [rbx + 0x88], eax	       979	8250_core.c	FUNCTION_32	IF_2
0x400084f	    0x498b84249000	            mov rax, qword [r12 + 0x90] 	       980	8250_core.c	FUNCTION_32	IF_2
0x4000857	    0x488983900000	             mov qword [rbx + 0x90], rax	       980	8250_core.c	FUNCTION_32	IF_2
0x400085e	    0x418b84249800	            mov eax, dword [r12 + 0x98] 	       981	8250_core.c	FUNCTION_32	IF_2
0x4000866	    0x898398000000	             mov dword [rbx + 0x98], eax	       981	8250_core.c	FUNCTION_32	IF_2
0x400086c	    0x418b94249c00	            mov edx, dword [r12 + 0x9c] 	       982	8250_core.c	FUNCTION_32	IF_2
0x4000874	    0x89939c000000	             mov dword [rbx + 0x9c], edx	       982	8250_core.c	FUNCTION_32	IF_2
0x400087a	    0x410fb68424a1	           movzx eax, byte [r12 + 0xa1] 	       983	8250_core.c	FUNCTION_32	IF_2
0x4000883	    0x8883a1000000	               mov byte [rbx + 0xa1], al	       983	8250_core.c	FUNCTION_32	IF_2
0x4000889	    0x410fb68424a2	           movzx eax, byte [r12 + 0xa2] 	       984	8250_core.c	FUNCTION_32	IF_2
0x4000892	    0x8883a2000000	               mov byte [rbx + 0xa2], al	       984	8250_core.c	FUNCTION_32	IF_2
0x4000898	    0x418b8424f800	            mov eax, dword [r12 + 0xf8] 	       985	8250_core.c	FUNCTION_32	IF_2
0x40008a0	       0xd00000010	                      or eax, 0x10000000	       985	8250_core.c	FUNCTION_32	IF_2
0x40008a5	    0x8983f8000000	             mov dword [rbx + 0xf8], eax	       985	8250_core.c	FUNCTION_32	IF_2
0x40008ab	    0x410fb78424c4	          movzx eax, word [r12 + 0x1c4] 	       986	8250_core.c	FUNCTION_32	IF_2
0x40008b4	    0x668983c40100	              mov word [rbx + 0x1c4], ax	       986	8250_core.c	FUNCTION_32	IF_2
0x40008bb	    0x498b84242801	           mov rax, qword [r12 + 0x128] 	       987	8250_core.c	FUNCTION_32	IF_2
0x40008c3	    0x488983280100	            mov qword [rbx + 0x128], rax	       987	8250_core.c	FUNCTION_32	IF_2
0x40008ca	    0x498b84243001	           mov rax, qword [r12 + 0x130] 	       988	8250_core.c	FUNCTION_32	IF_2
0x40008d2	    0x488983300100	            mov qword [rbx + 0x130], rax	       988	8250_core.c	FUNCTION_32	IF_2
0x40008d9	    0x498b84248001	           mov rax, qword [r12 + 0x180] 	       989	8250_core.c	FUNCTION_32	IF_2
0x40008e1	    0x488983800100	            mov qword [rbx + 0x180], rax	       989	8250_core.c	FUNCTION_32	IF_2
0x40008e8	    0x418b8424c801	           mov eax, dword [r12 + 0x1c8] 	       990	8250_core.c	FUNCTION_32	IF_2
0x40008f0	    0x8983c8010000	            mov dword [rbx + 0x1c8], eax	       990	8250_core.c	FUNCTION_32	IF_2
0x40008f6	    0x418b8c24c001	           mov ecx, dword [r12 + 0x1c0] 	       991	8250_core.c	FUNCTION_32	IF_2
0x40008fe	            0x85c0	                           test eax, eax	       999	8250_core.c	FUNCTION_32	IF_2	IF_4
0x4000900	    0x898bc0010000	            mov dword [rbx + 0x1c0], ecx	       991	8250_core.c	FUNCTION_32	IF_2
0x4000906	      0x498b4c2458	            mov rcx, qword [r12 + 0x58] 	       992	8250_core.c	FUNCTION_32	IF_2
0x400090b	        0x48894b58	             mov qword [rbx + 0x58], rcx	       992	8250_core.c	FUNCTION_32	IF_2
0x400090f	      0x498b4c2460	            mov rcx, qword [r12 + 0x60] 	       993	8250_core.c	FUNCTION_32	IF_2
0x4000914	        0x48894b60	             mov qword [rbx + 0x60], rcx	       993	8250_core.c	FUNCTION_32	IF_2
0x4000918	    0x498b8c248000	            mov rcx, qword [r12 + 0x80] 	       994	8250_core.c	FUNCTION_32	IF_2
0x4000920	    0x48898b800000	             mov qword [rbx + 0x80], rcx	       994	8250_core.c	FUNCTION_32	IF_2
0x4000927	    0x498b8c246001	           mov rcx, qword [r12 + 0x160] 	       995	8250_core.c	FUNCTION_32	IF_2
0x400092f	    0x48898b600100	            mov qword [rbx + 0x160], rcx	       995	8250_core.c	FUNCTION_32	IF_2
0x4000936	    0x498b8c246801	           mov rcx, qword [r12 + 0x168] 	       995	8250_core.c	FUNCTION_32	IF_2
0x400093e	    0x48898b680100	            mov qword [rbx + 0x168], rcx	       995	8250_core.c	FUNCTION_32	IF_2
0x4000945	    0x498b8c247001	           mov rcx, qword [r12 + 0x170] 	       995	8250_core.c	FUNCTION_32	IF_2
0x400094d	    0x48898b700100	            mov qword [rbx + 0x170], rcx	       995	8250_core.c	FUNCTION_32	IF_2
0x4000954	    0x498b8c247801	           mov rcx, qword [r12 + 0x178] 	       995	8250_core.c	FUNCTION_32	IF_2
0x400095c	    0x48898b780100	            mov qword [rbx + 0x178], rcx	       995	8250_core.c	FUNCTION_32	IF_2
0x4000963	    0x498b8c24e001	           mov rcx, qword [r12 + 0x1e0] 	       996	8250_core.c	FUNCTION_32	IF_2
0x400096b	    0x48898be00100	            mov qword [rbx + 0x1e0], rcx	       996	8250_core.c	FUNCTION_32	IF_2
0x4000972	            0x750a	                           jne 0x400097e	       999	8250_core.c	FUNCTION_32	IF_2	IF_4
0x4000974	            0x85d2	                           test edx, edx	       999	8250_core.c	FUNCTION_32	IF_2	IF_4
0x4000976	            0x7406	                            je 0x400097e	       999	8250_core.c	FUNCTION_32	IF_2	IF_4
0x4000978	    0x8993c8010000	            mov dword [rbx + 0x1c8], edx	      1000	8250_core.c	FUNCTION_32	IF_2	IF_4
0x400097e	    0x498b84243801	           mov rax, qword [r12 + 0x138] 	      1002	8250_core.c	FUNCTION_32	IF_2	IF_5
0x4000986	          0x4885c0	                           test rax, rax	      1002	8250_core.c	FUNCTION_32	IF_2	IF_5
0x4000989	            0x7407	                            je 0x4000992	      1002	8250_core.c	FUNCTION_32	IF_2	IF_5
0x400098b	    0x488983380100	            mov qword [rbx + 0x138], rax	      1003	8250_core.c	FUNCTION_32	IF_2	IF_5
0x4000992	    0x41f68424fb00	               test byte [r12 + 0xfb], 8	      1005	8250_core.c	FUNCTION_32	IF_2	IF_6
0x400099b	            0x740e	                            je 0x40009ab	      1005	8250_core.c	FUNCTION_32	IF_2	IF_6
0x400099d	    0x418b84240c01	           mov eax, dword [r12 + 0x10c] 	      1006	8250_core.c	FUNCTION_32	IF_2	IF_6
0x40009a5	    0x89830c010000	            mov dword [rbx + 0x10c], eax	      1006	8250_core.c	FUNCTION_32	IF_2	IF_6
0x40009ab	          0x4889df	                            mov rdi, rbx	      1008	8250_core.c	FUNCTION_32	IF_2	CALL_4
0x40009ae	      0xe800000000	                          call 0x40009b3	      1008	8250_core.c	FUNCTION_32	IF_2	CALL_4
0x40009b3	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      1011	8250_core.c	FUNCTION_32	IF_2	IF_7
0x40009b8	          0x4885c0	                           test rax, rax	      1011	8250_core.c	FUNCTION_32	IF_2	IF_7
0x40009bb	            0x7404	                            je 0x40009c1	      1011	8250_core.c	FUNCTION_32	IF_2	IF_7
0x40009bd	        0x48894318	             mov qword [rbx + 0x18], rax	      1012	8250_core.c	FUNCTION_32	IF_2	IF_7
0x40009c1	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      1013	8250_core.c	FUNCTION_32	IF_2	IF_8
0x40009c6	          0x4885c0	                           test rax, rax	      1013	8250_core.c	FUNCTION_32	IF_2	IF_8
0x40009c9	            0x7404	                            je 0x40009cf	      1013	8250_core.c	FUNCTION_32	IF_2	IF_8
0x40009cb	        0x48894320	             mov qword [rbx + 0x20], rax	      1014	8250_core.c	FUNCTION_32	IF_2	IF_8
0x40009cf	      0x498b442468	            mov rax, qword [r12 + 0x68] 	      1015	8250_core.c	FUNCTION_32	IF_2	IF_9
0x40009d4	          0x4885c0	                           test rax, rax	      1015	8250_core.c	FUNCTION_32	IF_2	IF_9
0x40009d7	            0x7404	                            je 0x40009dd	      1015	8250_core.c	FUNCTION_32	IF_2	IF_9
0x40009d9	        0x48894368	             mov qword [rbx + 0x68], rax	      1016	8250_core.c	FUNCTION_32	IF_2	IF_9
0x40009dd	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      1018	8250_core.c	FUNCTION_32	IF_2	IF_10
0x40009e2	          0x4885c0	                           test rax, rax	      1018	8250_core.c	FUNCTION_32	IF_2	IF_10
0x40009e5	            0x7404	                            je 0x40009eb	      1018	8250_core.c	FUNCTION_32	IF_2	IF_10
0x40009e7	        0x48894328	             mov qword [rbx + 0x28], rax	      1019	8250_core.c	FUNCTION_32	IF_2	IF_10
0x40009eb	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      1020	8250_core.c	FUNCTION_32	IF_2	IF_11
0x40009f0	          0x4885c0	                           test rax, rax	      1020	8250_core.c	FUNCTION_32	IF_2	IF_11
0x40009f3	            0x7404	                            je 0x40009f9	      1020	8250_core.c	FUNCTION_32	IF_2	IF_11
0x40009f5	        0x48894330	             mov qword [rbx + 0x30], rax	      1021	8250_core.c	FUNCTION_32	IF_2	IF_11
0x40009f9	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      1022	8250_core.c	FUNCTION_32	IF_2	IF_12
0x40009fe	          0x4885c0	                           test rax, rax	      1022	8250_core.c	FUNCTION_32	IF_2	IF_12
0x4000a01	            0x7404	                            je 0x4000a07	      1022	8250_core.c	FUNCTION_32	IF_2	IF_12
0x4000a03	        0x48894338	             mov qword [rbx + 0x38], rax	      1023	8250_core.c	FUNCTION_32	IF_2	IF_12
0x4000a07	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      1024	8250_core.c	FUNCTION_32	IF_2	IF_13
0x4000a0c	          0x4885c0	                           test rax, rax	      1024	8250_core.c	FUNCTION_32	IF_2	IF_13
0x4000a0f	            0x7404	                            je 0x4000a15	      1024	8250_core.c	FUNCTION_32	IF_2	IF_13
0x4000a11	        0x48894340	             mov qword [rbx + 0x40], rax	      1025	8250_core.c	FUNCTION_32	IF_2	IF_13
0x4000a15	      0x498b442448	            mov rax, qword [r12 + 0x48] 	      1026	8250_core.c	FUNCTION_32	IF_2	IF_14
0x4000a1a	          0x4885c0	                           test rax, rax	      1026	8250_core.c	FUNCTION_32	IF_2	IF_14
0x4000a1d	            0x7404	                            je 0x4000a23	      1026	8250_core.c	FUNCTION_32	IF_2	IF_14
0x4000a1f	        0x48894348	             mov qword [rbx + 0x48], rax	      1027	8250_core.c	FUNCTION_32	IF_2	IF_14
0x4000a23	      0x498b442450	            mov rax, qword [r12 + 0x50] 	      1028	8250_core.c	FUNCTION_32	IF_2	IF_15
0x4000a28	          0x4885c0	                           test rax, rax	      1028	8250_core.c	FUNCTION_32	IF_2	IF_15
0x4000a2b	            0x7404	                            je 0x4000a31	      1028	8250_core.c	FUNCTION_32	IF_2	IF_15
0x4000a2d	        0x48894350	             mov qword [rbx + 0x50], rax	      1029	8250_core.c	FUNCTION_32	IF_2	IF_15
0x4000a31	      0x498b442470	            mov rax, qword [r12 + 0x70] 	      1030	8250_core.c	FUNCTION_32	IF_2	IF_16
0x4000a36	          0x4885c0	                           test rax, rax	      1030	8250_core.c	FUNCTION_32	IF_2	IF_16
0x4000a39	            0x7404	                            je 0x4000a3f	      1030	8250_core.c	FUNCTION_32	IF_2	IF_16
0x4000a3b	        0x48894370	             mov qword [rbx + 0x70], rax	      1031	8250_core.c	FUNCTION_32	IF_2	IF_16
0x4000a3f	      0x498b442478	            mov rax, qword [r12 + 0x78] 	      1032	8250_core.c	FUNCTION_32	IF_2	IF_17
0x4000a44	          0x4885c0	                           test rax, rax	      1032	8250_core.c	FUNCTION_32	IF_2	IF_17
0x4000a47	            0x7404	                            je 0x4000a4d	      1032	8250_core.c	FUNCTION_32	IF_2	IF_17
0x4000a49	        0x48894378	             mov qword [rbx + 0x78], rax	      1033	8250_core.c	FUNCTION_32	IF_2	IF_17
0x4000a4d	    0x498b8424f001	           mov rax, qword [r12 + 0x1f0] 	      1034	8250_core.c	FUNCTION_32	IF_2	IF_18
0x4000a55	          0x4885c0	                           test rax, rax	      1034	8250_core.c	FUNCTION_32	IF_2	IF_18
0x4000a58	            0x7407	                            je 0x4000a61	      1034	8250_core.c	FUNCTION_32	IF_2	IF_18
0x4000a5a	    0x488983f00100	            mov qword [rbx + 0x1f0], rax	      1035	8250_core.c	FUNCTION_32	IF_2	IF_18
0x4000a61	    0x498b8424f801	           mov rax, qword [r12 + 0x1f8] 	      1036	8250_core.c	FUNCTION_32	IF_2	IF_19
0x4000a69	          0x4885c0	                           test rax, rax	      1036	8250_core.c	FUNCTION_32	IF_2	IF_19
0x4000a6c	            0x7407	                            je 0x4000a75	      1036	8250_core.c	FUNCTION_32	IF_2	IF_19
0x4000a6e	    0x488983f80100	            mov qword [rbx + 0x1f8], rax	      1037	8250_core.c	FUNCTION_32	IF_2	IF_19
0x4000a75	    0x83bb0c010000	          cmp dword [rbx + 0x10c], 0x17 	      1039	8250_core.c	FUNCTION_32	IF_2	IF_20
0x4000a7c	     0xf84f7000000	                            je 0x4000b79	      1039	8250_core.c	FUNCTION_32	IF_2	IF_20
0x4000a82	    0x488b05000000	            mov rax, qword [0x04000a89] 	      1040	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_21
0x4000a89	          0x4885c0	                           test rax, rax	      1040	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_21
0x4000a8c	            0x7411	                            je 0x4000a9f	      1040	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_21
0x4000a8e	    0x488d93c00100	                  lea rdx, [rbx + 0x1c0]	      1041	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_21	CALL_5
0x4000a95	          0x4889de	                            mov rsi, rbx	      1041	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_21	CALL_5
0x4000a98	            0x31ff	                            xor edi, edi	      1041	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_21	CALL_5
0x4000a9a	      0xe800000000	                          call 0x4000a9f	      1041	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_21	CALL_5
0x4000a9f	    0x8b0500000000	            mov eax, dword [0x04000aa5] 	       496	8250_core.c	FUNCTION_17
0x4000aa5	          0x4889de	                            mov rsi, rbx	      1045	8250_core.c	FUNCTION_32	IF_2	IF_20	CALL_7
0x4000aa8	    0x48c7c7000000	                              mov rdi, 0	      1045	8250_core.c	FUNCTION_32	IF_2	IF_20	CALL_7
0x4000aaf	            0x85c0	                           test eax, eax	       496	8250_core.c	FUNCTION_17
0x4000ab1	           0xf95c0	                                setne al	       496	8250_core.c	FUNCTION_17
0x4000ab4	     0x883a3000000	                or byte [rbx + 0xa3], al	       496	8250_core.c	FUNCTION_17
0x4000aba	      0xe800000000	                          call 0x4000abf	      1045	8250_core.c	FUNCTION_32	IF_2	IF_20	CALL_7
0x4000abf	            0x85c0	                           test eax, eax	      1047	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_22
0x4000ac1	            0x89c5	                            mov ebp, eax	      1045	8250_core.c	FUNCTION_32	IF_2	IF_20	CALL_7
0x4000ac3	            0x7506	                           jne 0x4000acb	      1047	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_22
0x4000ac5	    0x8bab1c010000	           mov ebp, dword [rbx + 0x11c] 	      1048	8250_core.c	FUNCTION_32	IF_2	IF_20	IF_22
0x4000acb	    0x48c7c7000000	                              mov rdi, 0	      1059	8250_core.c	FUNCTION_32	CALL_9
0x4000ad2	      0xe800000000	                          call 0x4000ad7	      1059	8250_core.c	FUNCTION_32	CALL_9
0x4000ad7	            0x89e8	                            mov eax, ebp	      1061	8250_core.c	FUNCTION_32
0x4000ad9	              0x5b	                                 pop rbx	      1062	8250_core.c	FUNCTION_32
0x4000ada	              0x5d	                                 pop rbp	      1062	8250_core.c	FUNCTION_32
0x4000adb	            0x415c	                                 pop r12	      1062	8250_core.c	FUNCTION_32
0x4000add	              0xc3	                                     ret	      1062	8250_core.c	FUNCTION_32
0x4000ade	    0x496394241c01	        movsxd rdx, dword [r12 + 0x11c] 	       924	8250_core.c	FUNCTION_31
0x4000ae6	            0x39d0	                            cmp eax, edx	       925	8250_core.c	FUNCTION_31	IF_2
0x4000ae8	     0xf86b7000000	                           jbe 0x4000ba5	       925	8250_core.c	FUNCTION_31	IF_2
0x4000aee	          0x4889d1	                            mov rcx, rdx	       925	8250_core.c	FUNCTION_31	IF_2
0x4000af1	        0x48c1e109	                              shl rcx, 9	       925	8250_core.c	FUNCTION_31	IF_2
0x4000af5	    0x488d9cd10000	                  lea rbx, [rcx + rdx*8]	       925	8250_core.c	FUNCTION_31	IF_2
0x4000afd	    0x448b8b0c0100	           mov r9d, dword [rbx + 0x10c] 	       925	8250_core.c	FUNCTION_31	IF_2
0x4000b04	          0x4585c9	                           test r9d, r9d	       925	8250_core.c	FUNCTION_31	IF_2
0x4000b07	            0x7464	                            je 0x4000b6d	       925	8250_core.c	FUNCTION_31	IF_2
0x4000b09	    0x48c7c2000000	                              mov rdx, 0	       925	8250_core.c	FUNCTION_31	IF_2
0x4000b10	            0x31c9	                            xor ecx, ecx	       919	8250_core.c	FUNCTION_31	FOR_1
0x4000b12	          0x448b02	                    mov r8d, dword [rdx]	       934	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000b15	          0x4585c0	                           test r8d, r8d	       934	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000b18	            0x750e	                           jne 0x4000b28	       934	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000b1a	    0x4883bafcfeff	              cmp qword [rdx - 0x104], 0	       934	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000b22	     0xf84a0000000	                            je 0x4000bc8	       934	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000b28	          0x83c101	                              add ecx, 1	       933	8250_core.c	FUNCTION_31	FOR_2
0x4000b2b	    0x4881c2080200	                          add rdx, 0x208	       933	8250_core.c	FUNCTION_31	FOR_2
0x4000b32	            0x39c8	                            cmp eax, ecx	       933	8250_core.c	FUNCTION_31	FOR_2
0x4000b34	            0x75dc	                           jne 0x4000b12	       933	8250_core.c	FUNCTION_31	FOR_2
0x4000b36	    0x8b3d00000000	            mov edi, dword [0x04000b3c] 	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b3c	            0x31d2	                            xor edx, edx	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b3e	    0x48c7c1000000	                              mov rcx, 0	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b45	            0x85ff	                           test edi, edi	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b47	            0x7513	                           jne 0x4000b5c	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b49	            0xeb64	                           jmp 0x4000baf	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b4b	    0x4881c1080200	                          add rcx, 0x208	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b52	    0x8bb1f8fdffff	            mov esi, dword [rcx - 0x208]	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b58	            0x85f6	                           test esi, esi	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b5a	            0x7455	                            je 0x4000bb1	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000b5c	          0x83c201	                              add edx, 1	       942	8250_core.c	FUNCTION_31	FOR_3
0x4000b5f	            0x39d0	                            cmp eax, edx	       942	8250_core.c	FUNCTION_31	FOR_3
0x4000b61	            0x75e8	                           jne 0x4000b4b	       942	8250_core.c	FUNCTION_31	FOR_3
0x4000b63	      0xbde4ffffff	                     mov ebp, 0xffffffe4	       965	8250_core.c	FUNCTION_32
0x4000b68	      0xe95effffff	                           jmp 0x4000acb	       965	8250_core.c	FUNCTION_32
0x4000b6d	      0x48837b0800	                  cmp qword [rbx + 8], 0	       925	8250_core.c	FUNCTION_31	IF_2
0x4000b72	            0x7595	                           jne 0x4000b09	       925	8250_core.c	FUNCTION_31	IF_2
0x4000b74	      0xe990fcffff	                           jmp 0x4000809	       925	8250_core.c	FUNCTION_31	IF_2
0x4000b79	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      1050	8250_core.c	FUNCTION_32	IF_2	ELSE_1	CALL_8
0x4000b80	        0x488b5308	                mov rdx, qword [rbx + 8]	      1050	8250_core.c	FUNCTION_32	IF_2	ELSE_1	CALL_8
0x4000b84	    0x48c7c6000000	                              mov rsi, 0	      1050	8250_core.c	FUNCTION_32	IF_2	ELSE_1	CALL_8
0x4000b8b	    0x488bbb380100	           mov rdi, qword [rbx + 0x138] 	      1050	8250_core.c	FUNCTION_32	IF_2	ELSE_1	CALL_8
0x4000b92	    0x448b83880000	            mov r8d, dword [rbx + 0x88] 	      1050	8250_core.c	FUNCTION_32	IF_2	ELSE_1	CALL_8
0x4000b99	            0x31ed	                            xor ebp, ebp	      1056	8250_core.c	FUNCTION_32	IF_2	ELSE_1
0x4000b9b	      0xe800000000	                          call 0x4000ba0	      1050	8250_core.c	FUNCTION_32	IF_2	ELSE_1	CALL_8
0x4000ba0	      0xe926ffffff	                           jmp 0x4000acb	      1050	8250_core.c	FUNCTION_32	IF_2	ELSE_1	CALL_8
0x4000ba5	            0x85c0	                           test eax, eax	       933	8250_core.c	FUNCTION_31	FOR_2
0x4000ba7	     0xf855cffffff	                           jne 0x4000b09	       933	8250_core.c	FUNCTION_31	FOR_2
0x4000bad	            0xebb4	                           jmp 0x4000b63	       933	8250_core.c	FUNCTION_31	FOR_2
0x4000baf	            0x31d2	                            xor edx, edx	       943	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000bb1	          0x4863d2	                         movsxd rdx, edx	       944	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000bb4	          0x4889d0	                            mov rax, rdx	       944	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000bb7	        0x48c1e009	                              shl rax, 9	       944	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000bbb	    0x488d9cd00000	                  lea rbx, [rax + rdx*8]	       944	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000bc3	      0xe941fcffff	                           jmp 0x4000809	       944	8250_core.c	FUNCTION_31	FOR_3	IF_4
0x4000bc8	          0x4863c9	                         movsxd rcx, ecx	       936	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000bcb	          0x4889c8	                            mov rax, rcx	       936	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000bce	        0x48c1e009	                              shl rax, 9	       936	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000bd2	    0x488d9cc80000	                  lea rbx, [rax + rcx*8]	       936	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000bda	      0xe92afcffff	                           jmp 0x4000809	       936	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000bdf	      0xb8eaffffff	                     mov eax, 0xffffffea	       936	8250_core.c	FUNCTION_31	FOR_2	IF_3
0x4000be4	              0xc3	                                     ret	       936	8250_core.c	FUNCTION_31	FOR_2	IF_3
