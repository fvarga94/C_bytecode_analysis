acpi_ex_resolve_to_value	DO,0:SWITCH,0:functions,0:CALL,16:IF,6:FOR,0:ELSE,0:WHILE,0	136
0x4000040	              0x55	                                push rbp	        43	exresolv.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        43	exresolv.c	FUNCTION_1
0x4000042	        0x4883ec18	                           sub rsp, 0x18	        43	exresolv.c	FUNCTION_1
0x4000046	    0x65488b042528	                mov rax, qword gs:[0x28]	        43	exresolv.c	FUNCTION_1
0x400004f	      0x4889442410	             mov qword [rsp + 0x10], rax	        43	exresolv.c	FUNCTION_1
0x4000054	            0x31c0	                            xor eax, eax	        43	exresolv.c	FUNCTION_1
0x4000056	          0x4885ff	                           test rdi, rdi	        48	exresolv.c	FUNCTION_1	IF_1
0x4000059	            0x740b	                            je 0x4000066	        48	exresolv.c	FUNCTION_1	IF_1
0x400005b	          0x4c8b07	                     mov r8, qword [rdi]	        48	exresolv.c	FUNCTION_1	IF_1
0x400005e	          0x4889fb	                            mov rbx, rdi	        48	exresolv.c	FUNCTION_1	IF_1
0x4000061	          0x4d85c0	                             test r8, r8	        48	exresolv.c	FUNCTION_1	IF_1
0x4000064	            0x7511	                           jne 0x4000077	        48	exresolv.c	FUNCTION_1	IF_1
0x4000066	    0x48c7c2000000	                              mov rdx, 0	        49	exresolv.c	FUNCTION_1	IF_1	CALL_2
0x400006d	      0xbe31000000	                           mov esi, 0x31	        49	exresolv.c	FUNCTION_1	IF_1	CALL_2
0x4000072	      0xe9a8010000	                           jmp 0x400021f	        49	exresolv.c	FUNCTION_1	IF_1	CALL_2
0x4000077	      0x418078080e	                  cmp byte [r8 + 8], 0xe	        58	exresolv.c	FUNCTION_1	IF_2	CALL_4
0x400007c	          0x4889f5	                            mov rbp, rsi	        58	exresolv.c	FUNCTION_1	IF_2	CALL_4
0x400007f	     0xf85ad010000	                           jne 0x4000232	        58	exresolv.c	FUNCTION_1	IF_2	CALL_4
0x4000085	        0x418a4009	                   mov al, byte [r8 + 9]	       117	exresolv.c	FUNCTION_2	SWITCH_1
0x4000089	    0x48c744240800	                  mov qword [rsp + 8], 0	       108	exresolv.c	FUNCTION_2
0x4000092	          0x83e803	                              sub eax, 3	       117	exresolv.c	FUNCTION_2	SWITCH_1
0x4000095	            0x3c11	                            cmp al, 0x11	       117	exresolv.c	FUNCTION_2	SWITCH_1
0x4000097	     0xf8770010000	                            ja 0x400020d	       117	exresolv.c	FUNCTION_2	SWITCH_1
0x400009d	           0xfb6c0	                           movzx eax, al	       117	exresolv.c	FUNCTION_2	SWITCH_1
0x40000a0	    0x488b04c50000	                  mov rax, qword [rax*8]	       117	exresolv.c	FUNCTION_2	SWITCH_1
0x40000a8	      0xe900000000	                           jmp 0x40000ad	       117	exresolv.c	FUNCTION_2	SWITCH_1
0x40000ad	      0x410fb6480d	              movzx ecx, byte [r8 + 0xd]	       120	exresolv.c	FUNCTION_2	SWITCH_1
0x40000b2	          0x80f906	                               cmp cl, 6	       122	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x40000b5	     0xf87f5000000	                            ja 0x40001b0	       122	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x40000bb	           0xfb6c1	                           movzx eax, cl	       122	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x40000be	    0x488b04c50000	                  mov rax, qword [rax*8]	       122	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x40000c6	      0xe900000000	                           jmp 0x40000cb	       122	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x40000cb	        0x418b7038	              mov esi, dword [r8 + 0x38]	       129	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_2
0x40000cf	           0xfb6f9	                           movzx edi, cl	       129	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_2
0x40000d2	      0x488d4c2408	                      lea rcx, [rsp + 8]	       129	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_2
0x40000d7	          0x4889ea	                            mov rdx, rbp	       129	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_2
0x40000da	        0x4c890424	                     mov qword [rsp], r8	       129	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_2
0x40000de	      0xe800000000	                          call 0x40000e3	       129	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_2
0x40000e3	            0x85c0	                           test eax, eax	       134	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_1	CALL_3
0x40000e5	        0x4c8b0424	                     mov r8, qword [rsp]	       134	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_1	CALL_3
0x40000e9	     0xf8559010000	                           jne 0x4000248	       134	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_1	CALL_3
0x40000ef	          0x4c89c7	                             mov rdi, r8	       147	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_6
0x40000f2	      0xe800000000	                          call 0x40000f7	       147	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_6
0x40000f7	            0xeb52	                           jmp 0x400014b	       147	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_6
0x40000f9	      0x410fb6480e	              movzx ecx, byte [r8 + 0xe]	       153	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x40000fe	          0x80f904	                               cmp cl, 4	       153	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x4000101	            0x741a	                            je 0x400011d	       153	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x4000103	          0x80f90e	                             cmp cl, 0xe	       153	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x4000106	     0xf8401010000	                            je 0x400020d	       153	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x400010c	    0x48c7c2000000	                              mov rdx, 0	       198	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	CALL_9
0x4000113	      0xbec9000000	                           mov esi, 0xc9	       198	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	CALL_9
0x4000118	      0xe99f000000	                           jmp 0x40001bc	       198	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	CALL_9
0x400011d	        0x668b460a	                mov ax, word [rsi + 0xa]	       163	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_2
0x4000121	        0x6683f835	                            cmp ax, 0x35	       163	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_2
0x4000125	     0xf84e2000000	                            je 0x400020d	       163	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_2
0x400012b	        0x663d9d00	                            cmp ax, 0x9d	       163	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_2
0x400012f	     0xf84d8000000	                            je 0x400020d	       163	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_2
0x4000135	        0x498b4020	              mov rax, qword [r8 + 0x20]	       172	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x4000139	          0x488b38	                    mov rdi, qword [rax]	       172	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x400013c	          0x4885ff	                           test rdi, rdi	       173	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_3
0x400013f	      0x48897c2408	                mov qword [rsp + 8], rdi	       172	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3
0x4000144	            0x7412	                            je 0x4000158	       173	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_3
0x4000146	      0xe800000000	                          call 0x400014b	       179	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_3	CALL_7
0x400014b	      0x488b442408	                mov rax, qword [rsp + 8]	       180	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_3
0x4000150	          0x488903	                    mov qword [rbx], rax	       180	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_3
0x4000153	      0xe9b5000000	                           jmp 0x400020d	       180	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	IF_3
0x4000158	          0x4c89c1	                             mov rcx, r8	       186	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	ELSE_1	CALL_8
0x400015b	    0x48c7c2000000	                              mov rdx, 0	       186	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	ELSE_1	CALL_8
0x4000162	      0xbebd000000	                           mov esi, 0xbd	       186	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	ELSE_1	CALL_8
0x4000167	    0x48c7c7000000	                              mov rdi, 0	       186	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	ELSE_1	CALL_8
0x400016e	      0xe800000000	                          call 0x4000173	       186	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	ELSE_1	CALL_8
0x4000173	      0xb807300000	                         mov eax, 0x3007	       190	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	ELSE_1
0x4000178	      0xe9cb000000	                           jmp 0x4000248	       190	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	SWITCH_3	ELSE_1
0x400017d	        0x498b4018	              mov rax, qword [r8 + 0x18]	       219	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x4000181	          0x8a5009	                  mov dl, byte [rax + 9]	       219	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x4000184	          0x80fa06	                               cmp dl, 6	       219	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x4000187	            0x7405	                            je 0x400018e	       219	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x4000189	          0x80fa0d	                             cmp dl, 0xd	       219	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x400018c	            0x7505	                           jne 0x4000193	       219	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x400018e	          0x488903	                    mov qword [rbx], rax	       226	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x4000191	            0xeb13	                           jmp 0x40001a6	       226	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_4
0x4000193	          0x488b38	                    mov rdi, qword [rax]	       231	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	ELSE_2
0x4000196	        0x4c890424	                     mov qword [rsp], r8	       231	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	ELSE_2
0x400019a	          0x48893b	                    mov qword [rbx], rdi	       230	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	ELSE_2
0x400019d	      0xe800000000	                          call 0x40001a2	       232	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	ELSE_2	CALL_10
0x40001a2	        0x4c8b0424	                     mov r8, qword [rsp]	       232	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	ELSE_2	CALL_10
0x40001a6	          0x4c89c7	                             mov rdi, r8	       235	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_11
0x40001a9	      0xe800000000	                          call 0x40001ae	       235	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_11
0x40001ae	            0xeb5d	                           jmp 0x400020d	       235	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_11
0x40001b0	    0x48c7c2000000	                              mov rdx, 0	       240	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_12
0x40001b7	      0xbef2000000	                           mov esi, 0xf2	       240	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_12
0x40001bc	    0x48c7c7000000	                              mov rdi, 0	       240	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_12
0x40001c3	      0xe800000000	                          call 0x40001c8	       240	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_12
0x40001c8	      0xb80f300000	                         mov eax, 0x300f	       243	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x40001cd	            0xeb79	                           jmp 0x4000248	       243	exresolv.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x40001cf	          0x4c89c7	                             mov rdi, r8	       250	exresolv.c	FUNCTION_2	SWITCH_1	CALL_13
0x40001d2	      0xe800000000	                          call 0x40001d7	       250	exresolv.c	FUNCTION_2	SWITCH_1	CALL_13
0x40001d7	            0xeb30	                           jmp 0x4000209	       250	exresolv.c	FUNCTION_2	SWITCH_1	CALL_13
0x40001d9	          0x4c89c7	                             mov rdi, r8	       255	exresolv.c	FUNCTION_2	SWITCH_1	CALL_14
0x40001dc	      0xe800000000	                          call 0x40001e1	       255	exresolv.c	FUNCTION_2	SWITCH_1	CALL_14
0x40001e1	            0xeb26	                           jmp 0x4000209	       255	exresolv.c	FUNCTION_2	SWITCH_1	CALL_14
0x40001e3	      0x488d542408	                      lea rdx, [rsp + 8]	       267	exresolv.c	FUNCTION_2	SWITCH_1
0x40001e8	          0x4c89c6	                             mov rsi, r8	       267	exresolv.c	FUNCTION_2	SWITCH_1
0x40001eb	          0x4889ef	                            mov rdi, rbp	       267	exresolv.c	FUNCTION_2	SWITCH_1
0x40001ee	      0xe800000000	                          call 0x40001f3	       267	exresolv.c	FUNCTION_2	SWITCH_1
0x40001f3	          0x488b3b	                    mov rdi, qword [rbx]	       273	exresolv.c	FUNCTION_2	SWITCH_1	CALL_17
0x40001f6	          0x890424	                    mov dword [rsp], eax	       267	exresolv.c	FUNCTION_2	SWITCH_1
0x40001f9	      0xe800000000	                          call 0x40001fe	       273	exresolv.c	FUNCTION_2	SWITCH_1	CALL_17
0x40001fe	      0x488b542408	                mov rdx, qword [rsp + 8]	       274	exresolv.c	FUNCTION_2	SWITCH_1
0x4000203	          0x8b0424	                    mov eax, dword [rsp]	       274	exresolv.c	FUNCTION_2	SWITCH_1
0x4000206	          0x488913	                    mov qword [rbx], rdx	       274	exresolv.c	FUNCTION_2	SWITCH_1
0x4000209	            0x85c0	                           test eax, eax	        60	exresolv.c	FUNCTION_1	IF_2	IF_3	CALL_6
0x400020b	            0x753b	                           jne 0x4000248	        60	exresolv.c	FUNCTION_1	IF_2	IF_3	CALL_6
0x400020d	        0x48833b00	                      cmp qword [rbx], 0	        64	exresolv.c	FUNCTION_1	IF_2	IF_4
0x4000211	            0x751f	                           jne 0x4000232	        64	exresolv.c	FUNCTION_1	IF_2	IF_4
0x4000213	    0x48c7c2000000	                              mov rdx, 0	        65	exresolv.c	FUNCTION_1	IF_2	IF_4	CALL_8
0x400021a	      0xbe41000000	                           mov esi, 0x41	        65	exresolv.c	FUNCTION_1	IF_2	IF_4	CALL_8
0x400021f	    0x48c7c7000000	                              mov rdi, 0	        65	exresolv.c	FUNCTION_1	IF_2	IF_4	CALL_8
0x4000226	      0xe800000000	                          call 0x400022b	        65	exresolv.c	FUNCTION_1	IF_2	IF_4	CALL_8
0x400022b	      0xb802300000	                         mov eax, 0x3002	        66	exresolv.c	FUNCTION_1	IF_2	IF_4	CALL_9
0x4000230	            0xeb16	                           jmp 0x4000248	        66	exresolv.c	FUNCTION_1	IF_2	IF_4	CALL_9
0x4000232	          0x488b13	                    mov rdx, qword [rbx]	        74	exresolv.c	FUNCTION_1	IF_5	CALL_10
0x4000235	            0x31c0	                            xor eax, eax	        85	exresolv.c	FUNCTION_1	CALL_16
0x4000237	        0x807a080f	                 cmp byte [rdx + 8], 0xf	        74	exresolv.c	FUNCTION_1	IF_5	CALL_10
0x400023b	            0x750b	                           jne 0x4000248	        74	exresolv.c	FUNCTION_1	IF_5	CALL_10
0x400023d	          0x4889ee	                            mov rsi, rbp	        75	exresolv.c	FUNCTION_1	IF_5
0x4000240	          0x4889df	                            mov rdi, rbx	        75	exresolv.c	FUNCTION_1	IF_5
0x4000243	      0xe800000000	                          call 0x4000248	        75	exresolv.c	FUNCTION_1	IF_5
0x4000248	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        86	exresolv.c	FUNCTION_1
0x400024d	    0x654833342528	                xor rsi, qword gs:[0x28]	        86	exresolv.c	FUNCTION_1
0x4000256	            0x7405	                            je 0x400025d	        86	exresolv.c	FUNCTION_1
0x4000258	      0xe800000000	                          call 0x400025d	        86	exresolv.c	FUNCTION_1
0x400025d	        0x4883c418	                           add rsp, 0x18	        86	exresolv.c	FUNCTION_1
0x4000261	              0x5b	                                 pop rbx	        86	exresolv.c	FUNCTION_1
0x4000262	              0x5d	                                 pop rbp	        86	exresolv.c	FUNCTION_1
0x4000263	              0xc3	                                     ret	        86	exresolv.c	FUNCTION_1
acpi_ex_resolve_multiple	DO,0:SWITCH,4:functions,0:CALL,28:IF,14:FOR,0:ELSE,2:WHILE,1	158
0x4000264	            0x4156	                                push r14	       306	exresolv.c	FUNCTION_3
0x4000266	            0x4155	                                push r13	       306	exresolv.c	FUNCTION_3
0x4000268	          0x4989d6	                            mov r14, rdx	       306	exresolv.c	FUNCTION_3
0x400026b	            0x4154	                                push r12	       306	exresolv.c	FUNCTION_3
0x400026d	              0x55	                                push rbp	       306	exresolv.c	FUNCTION_3
0x400026e	          0x4989fd	                            mov r13, rdi	       306	exresolv.c	FUNCTION_3
0x4000271	              0x53	                                push rbx	       306	exresolv.c	FUNCTION_3
0x4000272	          0x4889f5	                            mov rbp, rsi	       306	exresolv.c	FUNCTION_3
0x4000275	          0x4989cc	                            mov r12, rcx	       306	exresolv.c	FUNCTION_3
0x4000278	        0x4883ec18	                           sub rsp, 0x18	       306	exresolv.c	FUNCTION_3
0x400027c	    0x65488b042528	                mov rax, qword gs:[0x28]	       306	exresolv.c	FUNCTION_3
0x4000285	      0x4889442410	             mov qword [rsp + 0x10], rax	       306	exresolv.c	FUNCTION_3
0x400028a	            0x31c0	                            xor eax, eax	       306	exresolv.c	FUNCTION_3
0x400028c	          0x8a4608	                  mov al, byte [rsi + 8]	       317	exresolv.c	FUNCTION_3	SWITCH_1	CALL_4
0x400028f	        0x48893424	                    mov qword [rsp], rsi	       307	exresolv.c	FUNCTION_3	CALL_1
0x4000293	      0x4889742408	                mov qword [rsp + 8], rsi	       308	exresolv.c	FUNCTION_3
0x4000298	            0x3c0e	                             cmp al, 0xe	       317	exresolv.c	FUNCTION_3	SWITCH_1	CALL_4
0x400029a	            0x7409	                            je 0x40002a5	       317	exresolv.c	FUNCTION_3	SWITCH_1	CALL_4
0x400029c	            0x3c0f	                             cmp al, 0xf	       317	exresolv.c	FUNCTION_3	SWITCH_1	CALL_4
0x400029e	            0x740b	                            je 0x40002ab	       317	exresolv.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002a0	      0xe9f5010000	                           jmp 0x400049a	       317	exresolv.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002a5	         0xfb65e09	               movzx ebx, byte [rsi + 9]	       320	exresolv.c	FUNCTION_3	SWITCH_1
0x40002a9	            0xeb6d	                           jmp 0x4000318	       321	exresolv.c	FUNCTION_3	SWITCH_1
0x40002ab	         0xfb65e09	               movzx ebx, byte [rsi + 9]	       325	exresolv.c	FUNCTION_3	SWITCH_1
0x40002af	          0x4889f7	                            mov rdi, rsi	       326	exresolv.c	FUNCTION_3	SWITCH_1	CALL_5
0x40002b2	      0xe800000000	                          call 0x40002b7	       326	exresolv.c	FUNCTION_3	SWITCH_1	CALL_5
0x40002b7	        0x48890424	                    mov qword [rsp], rax	       326	exresolv.c	FUNCTION_3	SWITCH_1	CALL_5
0x40002bb	          0x83fb15	                           cmp ebx, 0x15	       330	exresolv.c	FUNCTION_3	SWITCH_1	IF_1
0x40002be	            0x7510	                           jne 0x40002d0	       330	exresolv.c	FUNCTION_3	SWITCH_1	IF_1
0x40002c0	          0x4889c7	                            mov rdi, rax	       332	exresolv.c	FUNCTION_3	SWITCH_1	IF_1	CALL_6
0x40002c3	         0xfb65809	               movzx ebx, byte [rax + 9]	       331	exresolv.c	FUNCTION_3	SWITCH_1	IF_1
0x40002c7	      0xe800000000	                          call 0x40002cc	       332	exresolv.c	FUNCTION_3	SWITCH_1	IF_1	CALL_6
0x40002cc	        0x48890424	                    mov qword [rsp], rax	       332	exresolv.c	FUNCTION_3	SWITCH_1	IF_1	CALL_6
0x40002d0	          0x83fb06	                              cmp ebx, 6	       337	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x40002d3	     0xf84ab010000	                            je 0x4000484	       337	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x40002d9	          0x83fb0d	                            cmp ebx, 0xd	       337	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x40002dc	     0xf84a2010000	                            je 0x4000484	       337	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x40002e2	      0x48833c2400	                      cmp qword [rsp], 0	       348	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2
0x40002e7	            0x752f	                           jne 0x4000318	       348	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2
0x40002e9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       349	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_7
0x40002ee	      0xe800000000	                          call 0x40002f3	       349	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_7
0x40002f3	    0x48c7c2000000	                              mov rdx, 0	       349	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_7
0x40002fa	          0x4889c1	                            mov rcx, rax	       349	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_7
0x40002fd	      0xbe5f010000	                          mov esi, 0x15f	       349	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_7
0x4000302	    0x48c7c7000000	                              mov rdi, 0	       349	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_7
0x4000309	      0xe800000000	                          call 0x400030e	       349	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_7
0x400030e	      0xb822300000	                         mov eax, 0x3022	       352	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_9
0x4000313	      0xe987010000	                           jmp 0x400049f	       352	exresolv.c	FUNCTION_3	SWITCH_1	SWITCH_2	IF_2	CALL_9
0x4000318	          0x83fb14	                           cmp ebx, 0x14	       364	exresolv.c	FUNCTION_3	IF_3
0x400031b	     0xf8547010000	                           jne 0x4000468	       364	exresolv.c	FUNCTION_3	IF_3
0x4000321	        0x488b0424	                    mov rax, qword [rsp]	       374	exresolv.c	FUNCTION_3	WHILE_1
0x4000325	         0xfb65809	               movzx ebx, byte [rax + 9]	       374	exresolv.c	FUNCTION_3	WHILE_1
0x4000329	          0x80fb14	                            cmp bl, 0x14	       374	exresolv.c	FUNCTION_3	WHILE_1
0x400032c	     0xf8536010000	                           jne 0x4000468	       374	exresolv.c	FUNCTION_3	WHILE_1
0x4000332	         0xfb6780d	            movzx edi, byte [rax + 0xd] 	       375	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x4000336	        0x4080ff06	                              cmp dil, 6	       375	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x400033a	     0xf8705010000	                            ja 0x4000445	       375	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x4000340	        0x400fb6d7	                          movzx edx, dil	       375	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x4000344	    0x488b14d50000	                  mov rdx, qword [rdx*8]	       375	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x400034c	      0xe900000000	                           jmp 0x4000351	       375	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x4000351	      0xbb10000000	                           mov ebx, 0x10	       491	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x4000356	      0xe929010000	                           jmp 0x4000484	       491	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x400035b	        0x4080ff02	                              cmp dil, 2	       381	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_4
0x400035f	            0x7506	                           jne 0x4000367	       381	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_4
0x4000361	        0x488b4010	            mov rax, qword [rax + 0x10] 	       382	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_4
0x4000365	            0xeb04	                           jmp 0x400036b	       382	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_4
0x4000367	        0x488b4018	            mov rax, qword [rax + 0x18] 	       385	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_1
0x400036b	      0x4889442408	                mov qword [rsp + 8], rax	       385	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_1
0x4000370	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       390	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_11
0x4000375	        0x807f080f	                 cmp byte [rdi + 8], 0xf	       390	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_11
0x4000379	            0x742a	                            je 0x40003a5	       390	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_11
0x400037b	      0xe800000000	                          call 0x4000380	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x4000380	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x4000385	          0x4989c0	                             mov r8, rax	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x4000388	    0x48c7c2000000	                              mov rdx, 0	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x400038f	      0xbe8b010000	                          mov esi, 0x18b	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x4000394	    0x48c7c7000000	                              mov rdi, 0	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x400039b	      0xe800000000	                          call 0x40003a0	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x40003a0	      0xe9bc000000	                           jmp 0x4000461	       392	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_5	CALL_12
0x40003a5	      0xe800000000	                          call 0x40003aa	       401	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_15
0x40003aa	          0x4885c0	                           test rax, rax	       402	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_6
0x40003ad	        0x48890424	                    mov qword [rsp], rax	       401	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_15
0x40003b1	            0x7511	                           jne 0x40003c4	       402	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_6
0x40003b3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       406	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_6	CALL_16
0x40003b8	      0xe800000000	                          call 0x40003bd	       406	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_6	CALL_16
0x40003bd	            0x89c3	                            mov ebx, eax	       406	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_6	CALL_16
0x40003bf	      0xe9a4000000	                           jmp 0x4000468	       407	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_6
0x40003c4	          0x4839c5	                            cmp rbp, rax	       412	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_7
0x40003c7	     0xf8554ffffff	                           jne 0x4000321	       412	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_7
0x40003cd	      0xb81e300000	                         mov eax, 0x301e	       413	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_7	CALL_17
0x40003d2	      0xe9c8000000	                           jmp 0x400049f	       413	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_7	CALL_17
0x40003d7	         0xfb6580e	            movzx ebx, byte [rax + 0xe] 	       421	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x40003db	          0x83fb04	                              cmp ebx, 4	       422	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_8
0x40003de	     0xf8584000000	                           jne 0x4000468	       422	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_8
0x40003e4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       433	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x40003e8	          0x488b00	                    mov rax, qword [rax]	       433	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x40003eb	          0x4885c0	                           test rax, rax	       434	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_9
0x40003ee	        0x48890424	                    mov qword [rsp], rax	       433	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x40003f2	     0xf8529ffffff	                           jne 0x4000321	       434	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_9
0x40003f8	            0x31db	                            xor ebx, ebx	       438	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_9
0x40003fa	      0xe985000000	                           jmp 0x4000484	       438	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_9
0x40003ff	          0x4d85e4	                           test r12, r12	       451	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10
0x4000402	          0x8b7038	            mov esi, dword [rax + 0x38] 	       451	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10
0x4000405	            0x7421	                            je 0x4000428	       451	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10
0x4000407	          0x4889e1	                            mov rcx, rsp	       452	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10
0x400040a	          0x4c89ea	                            mov rdx, r13	       452	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10
0x400040d	      0xe800000000	                          call 0x4000412	       452	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10
0x4000412	            0x85c0	                           test eax, eax	       461	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10	IF_11	CALL_19
0x4000414	     0xf8585000000	                           jne 0x400049f	       461	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10	IF_11	CALL_19
0x400041a	        0x488b3c24	                    mov rdi, qword [rsp]	       464	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10	CALL_21
0x400041e	      0xe800000000	                          call 0x4000423	       464	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10	CALL_21
0x4000423	      0xe9f9feffff	                           jmp 0x4000321	       464	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	IF_10	CALL_21
0x4000428	      0x488d4c2408	                      lea rcx, [rsp + 8]	       466	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2
0x400042d	          0x4c89ea	                            mov rdx, r13	       466	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2
0x4000430	      0xe800000000	                          call 0x4000435	       466	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2
0x4000435	            0x85c0	                           test eax, eax	       475	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2	IF_12	CALL_23
0x4000437	            0x7566	                           jne 0x400049f	       475	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2	IF_12	CALL_23
0x4000439	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       479	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2	CALL_25
0x400043e	      0xe800000000	                          call 0x4000443	       479	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2	CALL_25
0x4000443	            0xeba6	                           jmp 0x40003eb	       479	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	ELSE_2	CALL_25
0x4000445	        0x400fb6cf	                          movzx ecx, dil	       496	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_26
0x4000449	    0x48c7c2000000	                              mov rdx, 0	       496	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_26
0x4000450	      0xbef2010000	                          mov esi, 0x1f2	       496	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_26
0x4000455	    0x48c7c7000000	                              mov rdi, 0	       496	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_26
0x400045c	      0xe800000000	                          call 0x4000461	       496	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_26
0x4000461	      0xb80f300000	                         mov eax, 0x300f	       499	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_27
0x4000466	            0xeb37	                           jmp 0x400049f	       499	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3	CALL_27
0x4000468	          0x83fb11	                           cmp ebx, 0x11	       512	exresolv.c	FUNCTION_3	SWITCH_4
0x400046b	            0x7217	                            jb 0x4000484	       512	exresolv.c	FUNCTION_3	SWITCH_4
0x400046d	          0x83fb13	                           cmp ebx, 0x13	       512	exresolv.c	FUNCTION_3	SWITCH_4
0x4000470	            0x760d	                           jbe 0x400047f	       512	exresolv.c	FUNCTION_3	SWITCH_4
0x4000472	          0x83fb1b	                           cmp ebx, 0x1b	       524	exresolv.c	FUNCTION_3	SWITCH_4
0x4000475	      0xb800000000	                              mov eax, 0	       524	exresolv.c	FUNCTION_3	SWITCH_4
0x400047a	           0xf44d8	                          cmove ebx, eax	       524	exresolv.c	FUNCTION_3	SWITCH_4
0x400047d	            0xeb05	                           jmp 0x4000484	       524	exresolv.c	FUNCTION_3	SWITCH_4
0x400047f	      0xbb05000000	                              mov ebx, 5	       517	exresolv.c	FUNCTION_3	SWITCH_4
0x4000484	            0x31c0	                            xor eax, eax	       538	exresolv.c	FUNCTION_3	CALL_28
0x4000486	          0x4d85e4	                           test r12, r12	       535	exresolv.c	FUNCTION_3	IF_14
0x4000489	          0x41891e	                    mov dword [r14], ebx	       534	exresolv.c	FUNCTION_3
0x400048c	            0x7411	                            je 0x400049f	       535	exresolv.c	FUNCTION_3	IF_14
0x400048e	        0x488b0424	                    mov rax, qword [rsp]	       536	exresolv.c	FUNCTION_3	IF_14
0x4000492	        0x49890424	                    mov qword [r12], rax	       536	exresolv.c	FUNCTION_3	IF_14
0x4000496	            0x31c0	                            xor eax, eax	       538	exresolv.c	FUNCTION_3	CALL_28
0x4000498	            0xeb05	                           jmp 0x400049f	       538	exresolv.c	FUNCTION_3	CALL_28
0x400049a	      0xb803300000	                         mov eax, 0x3003	       359	exresolv.c	FUNCTION_3	SWITCH_1	CALL_10
0x400049f	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       539	exresolv.c	FUNCTION_3
0x40004a4	    0x654833342528	                xor rsi, qword gs:[0x28]	       539	exresolv.c	FUNCTION_3
0x40004ad	            0x740c	                            je 0x40004bb	       539	exresolv.c	FUNCTION_3
0x40004af	      0xe800000000	                          call 0x40004b4	       539	exresolv.c	FUNCTION_3
0x40004b4	      0xbb0f000000	                            mov ebx, 0xf	       445	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x40004b9	            0xebc9	                           jmp 0x4000484	       445	exresolv.c	FUNCTION_3	WHILE_1	SWITCH_3
0x40004bb	        0x4883c418	                           add rsp, 0x18	       539	exresolv.c	FUNCTION_3
0x40004bf	              0x5b	                                 pop rbx	       539	exresolv.c	FUNCTION_3
0x40004c0	              0x5d	                                 pop rbp	       539	exresolv.c	FUNCTION_3
0x40004c1	            0x415c	                                 pop r12	       539	exresolv.c	FUNCTION_3
0x40004c3	            0x415d	                                 pop r13	       539	exresolv.c	FUNCTION_3
0x40004c5	            0x415e	                                 pop r14	       539	exresolv.c	FUNCTION_3
0x40004c7	              0xc3	                                     ret	       539	exresolv.c	FUNCTION_3
