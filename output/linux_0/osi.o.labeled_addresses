acpi_osi_setup_darwin	ELSE,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
acpi_osi_setup_linux	ELSE,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
early_acpi_osi_init	ELSE,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
dmi_disable_osi_vista	ELSE,0:CALL,4:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
osi_setup	ELSE,4:CALL,9:DO,0:FOR,0:SWITCH,0:IF,4:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
dmi_disable_osi_win8	ELSE,0:CALL,2:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
dmi_disable_osi_win7	ELSE,0:CALL,2:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
dmi_enable_osi_linux	ELSE,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
acpi_osi_is_win8	ELSE,0:CALL,0:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	3
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
acpi_osi_init	ELSE,0:CALL,2:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:functions,0	58
0x4000040	    0x803d00000000	              cmp byte [0x04000047], 0xb	       266	osi.c	FUNCTION_9
0x4000047	           0xf97c0	                                 seta al	       266	osi.c	FUNCTION_9
0x400004a	              0xc3	                                     ret	       267	osi.c	FUNCTION_9
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       267	osi.c	FUNCTION_9
0x4000050	              0x55	                                push rbp	        72	osi.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        72	osi.c	FUNCTION_1
0x4000052	            0x89f5	                            mov ebp, esi	        72	osi.c	FUNCTION_1
0x4000054	      0xb906000000	                              mov ecx, 6	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000059	    0x48c7c6000000	                              mov rsi, 0	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x4889fb	                            mov rbx, rdi	        72	osi.c	FUNCTION_1
0x4000063	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x7509	                           jne 0x4000070	        73	osi.c	FUNCTION_1	IF_1	CALL_1
0x4000067	    0x803d00000000	                cmp byte [0x0400006e], 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400006e	            0x7421	                            je 0x4000091	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xb907000000	                              mov ecx, 7	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000075	    0x48c7c6000000	                              mov rsi, 0	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007c	          0x4889df	                            mov rdi, rbx	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x400007f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000081	            0x7509	                           jne 0x400008c	        80	osi.c	FUNCTION_1	IF_2	CALL_3
0x4000083	    0x803d00000000	                cmp byte [0x0400008a], 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7457	                            je 0x40000e3	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400008c	            0x89e8	                            mov eax, ebp	        89	osi.c	FUNCTION_1
0x400008e	              0x5b	                                 pop rbx	        89	osi.c	FUNCTION_1
0x400008f	              0x5d	                                 pop rbp	        89	osi.c	FUNCTION_1
0x4000090	              0xc3	                                     ret	        89	osi.c	FUNCTION_1
0x4000091	     0xfb60d000000	           movzx ecx, byte [0x04000098] 	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x4000098	    0xc60500000000	                mov byte [0x0400009f], 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x400009f	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0xf6c104	                              test cl, 4	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7515	                           jne 0x40000c0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0xf6c102	                              test cl, 2	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	    0x48c7c2000000	                              mov rdx, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000b5	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	        0x480f45d0	                         cmovne rdx, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c0	          0x80e101	                               and cl, 1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000c3	    0x48c7c6000000	                              mov rsi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000ca	    0x48c7c0000000	                              mov rax, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	        0x480f45f0	                         cmovne rsi, rax	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	    0x48c7c7000000	                              mov rdi, 0	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e1	            0xeb8d	                           jmp 0x4000070	        74	osi.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	     0xfb60d000000	           movzx ecx, byte [0x040000ea] 	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000ea	    0xc60500000000	                mov byte [0x040000f1], 1	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f1	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000f8	          0xf6c120	                           test cl, 0x20	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fb	            0x7515	                           jne 0x4000112	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x40000fd	          0xf6c110	                           test cl, 0x10	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000100	    0x48c7c2000000	                              mov rdx, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000107	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400010e	        0x480f45d0	                         cmovne rdx, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000112	          0x80e108	                               and cl, 8	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000115	    0x48c7c6000000	                              mov rsi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400011c	    0x48c7c0000000	                              mov rax, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000123	        0x480f45f0	                         cmovne rsi, rax	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000127	    0x48c7c7000000	                              mov rdi, 0	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x400012e	      0xe800000000	                          call 0x4000133	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000133	      0xe954ffffff	                           jmp 0x400008c	        81	osi.c	FUNCTION_1	IF_2	CALL_4
0x4000138	              0xff	                                 invalid	       139	osi.c	FUNCTION_2
