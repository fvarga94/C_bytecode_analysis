aer_root_reset	IF,0:CALL,8:WHILE,0:ELSE,0:FOR,0:functions,0:DO,0:SWITCH,0	54
0x4000170	            0x4154	                                push r12	       310	aerdrv.c	FUNCTION_11
0x4000172	              0x55	                                push rbp	       310	aerdrv.c	FUNCTION_11
0x4000173	              0x53	                                push rbx	       310	aerdrv.c	FUNCTION_11
0x4000174	          0x4889fb	                            mov rbx, rdi	       310	aerdrv.c	FUNCTION_11
0x4000177	        0x4883ec10	                           sub rsp, 0x10	       310	aerdrv.c	FUNCTION_11
0x400017b	         0xfb76f4a	           movzx ebp, word [rdi + 0x4a] 	       314	aerdrv.c	FUNCTION_11
0x400017f	      0x488d542404	                      lea rdx, [rsp + 4]	       317	aerdrv.c	FUNCTION_11	CALL_1
0x4000184	    0x65488b042528	                mov rax, qword gs:[0x28]	       310	aerdrv.c	FUNCTION_11
0x400018d	      0x4889442408	                mov qword [rsp + 8], rax	       310	aerdrv.c	FUNCTION_11
0x4000192	            0x31c0	                            xor eax, eax	       310	aerdrv.c	FUNCTION_11
0x4000194	        0x448d652c	                  lea r12d, [rbp + 0x2c]	       317	aerdrv.c	FUNCTION_11	CALL_1
0x4000198	          0x83c530	                           add ebp, 0x30	       325	aerdrv.c	FUNCTION_11	CALL_5
0x400019b	          0x4489e6	                           mov esi, r12d	       317	aerdrv.c	FUNCTION_11	CALL_1
0x400019e	      0xe800000000	                          call 0x40001a3	       317	aerdrv.c	FUNCTION_11	CALL_1
0x40001a3	        0x8b542404	                mov edx, dword [rsp + 4]	       318	aerdrv.c	FUNCTION_11
0x40001a7	          0x4489e6	                           mov esi, r12d	       319	aerdrv.c	FUNCTION_11	CALL_2
0x40001aa	          0x4889df	                            mov rdi, rbx	       319	aerdrv.c	FUNCTION_11	CALL_2
0x40001ad	          0x83e2f8	                     and edx, 0xfffffff8	       318	aerdrv.c	FUNCTION_11
0x40001b0	        0x89542404	                mov dword [rsp + 4], edx	       318	aerdrv.c	FUNCTION_11
0x40001b4	      0xe800000000	                          call 0x40001b9	       319	aerdrv.c	FUNCTION_11	CALL_2
0x40001b9	          0x4889df	                            mov rdi, rbx	       321	aerdrv.c	FUNCTION_11	CALL_3
0x40001bc	      0xe800000000	                          call 0x40001c1	       321	aerdrv.c	FUNCTION_11	CALL_3
0x40001c1	    0x488db3a00000	                   lea rsi, [rbx + 0xa0]	       322	aerdrv.c	FUNCTION_11	CALL_4
0x40001c8	    0x48c7c2000000	                              mov rdx, 0	       322	aerdrv.c	FUNCTION_11	CALL_4
0x40001cf	    0x48c7c7000000	                              mov rdi, 0	       322	aerdrv.c	FUNCTION_11	CALL_4
0x40001d6	      0xe800000000	                          call 0x40001db	       322	aerdrv.c	FUNCTION_11	CALL_4
0x40001db	      0x488d542404	                      lea rdx, [rsp + 4]	       325	aerdrv.c	FUNCTION_11	CALL_5
0x40001e0	            0x89ee	                            mov esi, ebp	       325	aerdrv.c	FUNCTION_11	CALL_5
0x40001e2	          0x4889df	                            mov rdi, rbx	       325	aerdrv.c	FUNCTION_11	CALL_5
0x40001e5	      0xe800000000	                          call 0x40001ea	       325	aerdrv.c	FUNCTION_11	CALL_5
0x40001ea	        0x8b542404	                mov edx, dword [rsp + 4]	       326	aerdrv.c	FUNCTION_11	CALL_6
0x40001ee	            0x89ee	                            mov esi, ebp	       326	aerdrv.c	FUNCTION_11	CALL_6
0x40001f0	          0x4889df	                            mov rdi, rbx	       326	aerdrv.c	FUNCTION_11	CALL_6
0x40001f3	      0xe800000000	                          call 0x40001f8	       326	aerdrv.c	FUNCTION_11	CALL_6
0x40001f8	      0x488d542404	                      lea rdx, [rsp + 4]	       329	aerdrv.c	FUNCTION_11	CALL_7
0x40001fd	          0x4489e6	                           mov esi, r12d	       329	aerdrv.c	FUNCTION_11	CALL_7
0x4000200	          0x4889df	                            mov rdi, rbx	       329	aerdrv.c	FUNCTION_11	CALL_7
0x4000203	      0xe800000000	                          call 0x4000208	       329	aerdrv.c	FUNCTION_11	CALL_7
0x4000208	        0x8b542404	                mov edx, dword [rsp + 4]	       330	aerdrv.c	FUNCTION_11
0x400020c	          0x4489e6	                           mov esi, r12d	       331	aerdrv.c	FUNCTION_11	CALL_8
0x400020f	          0x4889df	                            mov rdi, rbx	       331	aerdrv.c	FUNCTION_11	CALL_8
0x4000212	          0x83ca07	                               or edx, 7	       330	aerdrv.c	FUNCTION_11
0x4000215	        0x89542404	                mov dword [rsp + 4], edx	       330	aerdrv.c	FUNCTION_11
0x4000219	      0xe800000000	                          call 0x400021e	       331	aerdrv.c	FUNCTION_11	CALL_8
0x400021e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       334	aerdrv.c	FUNCTION_11
0x4000223	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       334	aerdrv.c	FUNCTION_11
0x400022c	            0x750e	                           jne 0x400023c	       334	aerdrv.c	FUNCTION_11
0x400022e	        0x4883c410	                           add rsp, 0x10	       334	aerdrv.c	FUNCTION_11
0x4000232	      0xb805000000	                              mov eax, 5	       334	aerdrv.c	FUNCTION_11
0x4000237	              0x5b	                                 pop rbx	       334	aerdrv.c	FUNCTION_11
0x4000238	              0x5d	                                 pop rbp	       334	aerdrv.c	FUNCTION_11
0x4000239	            0x415c	                                 pop r12	       334	aerdrv.c	FUNCTION_11
0x400023b	              0xc3	                                     ret	       334	aerdrv.c	FUNCTION_11
0x400023c	      0xe800000000	                          call 0x4000241	       334	aerdrv.c	FUNCTION_11
set_device_error_reporting	IF,3:CALL,4:WHILE,0:ELSE,1:FOR,0:functions,0:DO,0:SWITCH,0	14
0x4000310	         0xfb74752	           movzx eax, word [rdi + 0x52] 	        59	aerdrv.c	FUNCTION_3	IF_1
0x4000314	      0x25f0000000	                           and eax, 0xf0	        59	aerdrv.c	FUNCTION_3	IF_1
0x4000319	          0xc1f804	                              sar eax, 4	        59	aerdrv.c	FUNCTION_3	IF_1
0x400031c	          0x83e804	                              sub eax, 4	        59	aerdrv.c	FUNCTION_3	IF_1
0x400031f	          0x83f802	                              cmp eax, 2	        59	aerdrv.c	FUNCTION_3	IF_1
0x4000322	            0x770a	                            ja 0x400032e	        59	aerdrv.c	FUNCTION_3	IF_1
0x4000324	          0x803e00	                       cmp byte [rsi], 0	        62	aerdrv.c	FUNCTION_3	IF_1	IF_2
0x4000327	            0x7508	                           jne 0x4000331	        62	aerdrv.c	FUNCTION_3	IF_1	IF_2
0x4000329	      0xe800000000	                          call 0x400032e	        65	aerdrv.c	FUNCTION_3	IF_1	CALL_3
0x400032e	            0x31c0	                            xor eax, eax	        72	aerdrv.c	FUNCTION_3
0x4000330	              0xc3	                                     ret	        72	aerdrv.c	FUNCTION_3
0x4000331	      0xe800000000	                          call 0x4000336	        63	aerdrv.c	FUNCTION_3	IF_1	CALL_2
0x4000336	            0x31c0	                            xor eax, eax	        72	aerdrv.c	FUNCTION_3
0x4000338	              0xc3	                                     ret	        72	aerdrv.c	FUNCTION_3
aer_error_resume	IF,1:CALL,5:WHILE,0:ELSE,1:FOR,0:functions,0:DO,0:SWITCH,0	47
0x4000250	            0x4154	                                push r12	       343	aerdrv.c	FUNCTION_12
0x4000252	              0x55	                                push rbp	       343	aerdrv.c	FUNCTION_12
0x4000253	      0xbe0a000000	                            mov esi, 0xa	       349	aerdrv.c	FUNCTION_12	CALL_1
0x4000258	              0x53	                                push rbx	       343	aerdrv.c	FUNCTION_12
0x4000259	          0x4889fb	                            mov rbx, rdi	       343	aerdrv.c	FUNCTION_12
0x400025c	        0x4883ec18	                           sub rsp, 0x18	       343	aerdrv.c	FUNCTION_12
0x4000260	      0x488d542406	                      lea rdx, [rsp + 6]	       349	aerdrv.c	FUNCTION_12	CALL_1
0x4000265	    0x65488b042528	                mov rax, qword gs:[0x28]	       343	aerdrv.c	FUNCTION_12
0x400026e	      0x4889442410	             mov qword [rsp + 0x10], rax	       343	aerdrv.c	FUNCTION_12
0x4000273	            0x31c0	                            xor eax, eax	       343	aerdrv.c	FUNCTION_12
0x4000275	      0xe800000000	                          call 0x400027a	       349	aerdrv.c	FUNCTION_12	CALL_1
0x400027a	       0xfb7542406	               movzx edx, word [rsp + 6]	       350	aerdrv.c	FUNCTION_12	CALL_2
0x400027f	      0xbe0a000000	                            mov esi, 0xa	       350	aerdrv.c	FUNCTION_12	CALL_2
0x4000284	          0x4889df	                            mov rdi, rbx	       350	aerdrv.c	FUNCTION_12	CALL_2
0x4000287	      0xe800000000	                          call 0x400028c	       350	aerdrv.c	FUNCTION_12	CALL_2
0x400028c	         0xfb76b4a	           movzx ebp, word [rbx + 0x4a] 	       353	aerdrv.c	FUNCTION_12
0x4000290	      0x488d542408	                      lea rdx, [rsp + 8]	       354	aerdrv.c	FUNCTION_12	CALL_3
0x4000295	          0x4889df	                            mov rdi, rbx	       354	aerdrv.c	FUNCTION_12	CALL_3
0x4000298	        0x448d6504	                     lea r12d, [rbp + 4]	       354	aerdrv.c	FUNCTION_12	CALL_3
0x400029c	          0x4489e6	                           mov esi, r12d	       354	aerdrv.c	FUNCTION_12	CALL_3
0x400029f	      0xe800000000	                          call 0x40002a4	       354	aerdrv.c	FUNCTION_12	CALL_3
0x40002a4	          0x8d750c	                    lea esi, [rbp + 0xc]	       355	aerdrv.c	FUNCTION_12	CALL_4
0x40002a7	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       355	aerdrv.c	FUNCTION_12	CALL_4
0x40002ac	          0x4889df	                            mov rdi, rbx	       355	aerdrv.c	FUNCTION_12	CALL_4
0x40002af	      0xe800000000	                          call 0x40002b4	       355	aerdrv.c	FUNCTION_12	CALL_4
0x40002b4	    0x83bb9c000000	               cmp dword [rbx + 0x9c], 1	       356	aerdrv.c	FUNCTION_12	IF_1
0x40002bb	            0x7430	                            je 0x40002ed	       356	aerdrv.c	FUNCTION_12	IF_1
0x40002bd	        0x8b542408	                mov edx, dword [rsp + 8]	       359	aerdrv.c	FUNCTION_12	ELSE_1
0x40002c1	        0x2354240c	              and edx, dword [rsp + 0xc]	       359	aerdrv.c	FUNCTION_12	ELSE_1
0x40002c5	        0x89542408	                mov dword [rsp + 8], edx	       359	aerdrv.c	FUNCTION_12	ELSE_1
0x40002c9	          0x4489e6	                           mov esi, r12d	       360	aerdrv.c	FUNCTION_12	CALL_5
0x40002cc	          0x4889df	                            mov rdi, rbx	       360	aerdrv.c	FUNCTION_12	CALL_5
0x40002cf	      0xe800000000	                          call 0x40002d4	       360	aerdrv.c	FUNCTION_12	CALL_5
0x40002d4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       361	aerdrv.c	FUNCTION_12
0x40002d9	    0x654833042528	                xor rax, qword gs:[0x28]	       361	aerdrv.c	FUNCTION_12
0x40002e2	            0x7519	                           jne 0x40002fd	       361	aerdrv.c	FUNCTION_12
0x40002e4	        0x4883c418	                           add rsp, 0x18	       361	aerdrv.c	FUNCTION_12
0x40002e8	              0x5b	                                 pop rbx	       361	aerdrv.c	FUNCTION_12
0x40002e9	              0x5d	                                 pop rbp	       361	aerdrv.c	FUNCTION_12
0x40002ea	            0x415c	                                 pop r12	       361	aerdrv.c	FUNCTION_12
0x40002ec	              0xc3	                                     ret	       361	aerdrv.c	FUNCTION_12
0x40002ed	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       357	aerdrv.c	FUNCTION_12	IF_1
0x40002f1	            0xf7d2	                                 not edx	       357	aerdrv.c	FUNCTION_12	IF_1
0x40002f3	        0x23542408	                and edx, dword [rsp + 8]	       357	aerdrv.c	FUNCTION_12	IF_1
0x40002f7	        0x89542408	                mov dword [rsp + 8], edx	       357	aerdrv.c	FUNCTION_12	IF_1
0x40002fb	            0xebcc	                           jmp 0x40002c9	       357	aerdrv.c	FUNCTION_12	IF_1
0x40002fd	      0xe800000000	                          call 0x4000302	       361	aerdrv.c	FUNCTION_12
aer_remove	IF,2:CALL,6:WHILE,0:ELSE,0:FOR,0:functions,0:DO,0:SWITCH,0	62
0x4000380	            0x4156	                                push r14	       252	aerdrv.c	FUNCTION_9
0x4000382	            0x4155	                                push r13	       252	aerdrv.c	FUNCTION_9
0x4000384	            0x4154	                                push r12	       252	aerdrv.c	FUNCTION_9
0x4000386	              0x55	                                push rbp	       252	aerdrv.c	FUNCTION_9
0x4000387	              0x53	                                push rbx	       252	aerdrv.c	FUNCTION_9
0x4000388	        0x4883ec10	                           sub rsp, 0x10	       252	aerdrv.c	FUNCTION_9
0x400038c	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       252	aerdrv.c	FUNCTION_9
0x4000390	    0x65488b042528	                mov rax, qword gs:[0x28]	       252	aerdrv.c	FUNCTION_9
0x4000399	      0x4889442408	                mov qword [rsp + 8], rax	       252	aerdrv.c	FUNCTION_9
0x400039e	            0x31c0	                            xor eax, eax	       252	aerdrv.c	FUNCTION_9
0x40003a0	          0x4885ed	                           test rbp, rbp	       255	aerdrv.c	FUNCTION_9	IF_1
0x40003a3	     0xf848f000000	                            je 0x4000438	       255	aerdrv.c	FUNCTION_9	IF_1
0x40003a9	    0x8b8594030000	           mov eax, dword [rbp + 0x394] 	       257	aerdrv.c	FUNCTION_9	IF_1	IF_2
0x40003af	          0x4989fd	                            mov r13, rdi	       257	aerdrv.c	FUNCTION_9	IF_1	IF_2
0x40003b2	            0x85c0	                           test eax, eax	       257	aerdrv.c	FUNCTION_9	IF_1	IF_2
0x40003b4	     0xf859b000000	                           jne 0x4000455	       257	aerdrv.c	FUNCTION_9	IF_1	IF_2
0x40003ba	        0x488d7d08	                      lea rdi, [rbp + 8]	       260	aerdrv.c	FUNCTION_9	IF_1	CALL_3
0x40003be	      0xe800000000	                          call 0x40003c3	       260	aerdrv.c	FUNCTION_9	IF_1	CALL_3
0x40003c3	        0x488b4500	                    mov rax, qword [rbp]	       139	aerdrv.c	FUNCTION_6
0x40003c7	            0x31f6	                            xor esi, esi	       147	aerdrv.c	FUNCTION_6	CALL_1
0x40003c9	        0x488b5808	                mov rbx, qword [rax + 8]	       139	aerdrv.c	FUNCTION_6
0x40003cd	          0x4889df	                            mov rdi, rbx	       147	aerdrv.c	FUNCTION_6	CALL_1
0x40003d0	      0xe86bffffff	call sym.set_downstream_devices_error_reporting	       147	aerdrv.c	FUNCTION_6	CALL_1
0x40003d5	      0x440fb7634a	          movzx r12d, word [rbx + 0x4a] 	       149	aerdrv.c	FUNCTION_6
0x40003da	      0x488d542404	                      lea rdx, [rsp + 4]	       151	aerdrv.c	FUNCTION_6	CALL_2
0x40003df	          0x4889df	                            mov rdi, rbx	       151	aerdrv.c	FUNCTION_6	CALL_2
0x40003e2	      0x458d74242c	                  lea r14d, [r12 + 0x2c]	       151	aerdrv.c	FUNCTION_6	CALL_2
0x40003e7	        0x4183c430	                          add r12d, 0x30	       156	aerdrv.c	FUNCTION_6	CALL_4
0x40003eb	          0x4489f6	                           mov esi, r14d	       151	aerdrv.c	FUNCTION_6	CALL_2
0x40003ee	      0xe800000000	                          call 0x40003f3	       151	aerdrv.c	FUNCTION_6	CALL_2
0x40003f3	        0x8b542404	                mov edx, dword [rsp + 4]	       152	aerdrv.c	FUNCTION_6
0x40003f7	          0x4489f6	                           mov esi, r14d	       153	aerdrv.c	FUNCTION_6	CALL_3
0x40003fa	          0x4889df	                            mov rdi, rbx	       153	aerdrv.c	FUNCTION_6	CALL_3
0x40003fd	          0x83e2f8	                     and edx, 0xfffffff8	       152	aerdrv.c	FUNCTION_6
0x4000400	        0x89542404	                mov dword [rsp + 4], edx	       152	aerdrv.c	FUNCTION_6
0x4000404	      0xe800000000	                          call 0x4000409	       153	aerdrv.c	FUNCTION_6	CALL_3
0x4000409	      0x488d542404	                      lea rdx, [rsp + 4]	       156	aerdrv.c	FUNCTION_6	CALL_4
0x400040e	          0x4489e6	                           mov esi, r12d	       156	aerdrv.c	FUNCTION_6	CALL_4
0x4000411	          0x4889df	                            mov rdi, rbx	       156	aerdrv.c	FUNCTION_6	CALL_4
0x4000414	      0xe800000000	                          call 0x4000419	       156	aerdrv.c	FUNCTION_6	CALL_4
0x4000419	        0x8b542404	                mov edx, dword [rsp + 4]	       157	aerdrv.c	FUNCTION_6	CALL_5
0x400041d	          0x4489e6	                           mov esi, r12d	       157	aerdrv.c	FUNCTION_6	CALL_5
0x4000420	          0x4889df	                            mov rdi, rbx	       157	aerdrv.c	FUNCTION_6	CALL_5
0x4000423	      0xe800000000	                          call 0x4000428	       157	aerdrv.c	FUNCTION_6	CALL_5
0x4000428	          0x4889ef	                            mov rdi, rbp	       262	aerdrv.c	FUNCTION_9	IF_1	CALL_5
0x400042b	      0xe800000000	                          call 0x4000430	       262	aerdrv.c	FUNCTION_9	IF_1	CALL_5
0x4000430	    0x49c745180000	               mov qword [r13 + 0x18], 0	        42	portdrv.h	FUNCTION_14
0x4000438	      0x488b442408	                mov rax, qword [rsp + 8]	       265	aerdrv.c	FUNCTION_9
0x400043d	    0x654833042528	                xor rax, qword gs:[0x28]	       265	aerdrv.c	FUNCTION_9
0x4000446	            0x751c	                           jne 0x4000464	       265	aerdrv.c	FUNCTION_9
0x4000448	        0x4883c410	                           add rsp, 0x10	       265	aerdrv.c	FUNCTION_9
0x400044c	              0x5b	                                 pop rbx	       265	aerdrv.c	FUNCTION_9
0x400044d	              0x5d	                                 pop rbp	       265	aerdrv.c	FUNCTION_9
0x400044e	            0x415c	                                 pop r12	       265	aerdrv.c	FUNCTION_9
0x4000450	            0x415d	                                 pop r13	       265	aerdrv.c	FUNCTION_9
0x4000452	            0x415e	                                 pop r14	       265	aerdrv.c	FUNCTION_9
0x4000454	              0xc3	                                     ret	       265	aerdrv.c	FUNCTION_9
0x4000455	          0x4889fe	                            mov rsi, rdi	       258	aerdrv.c	FUNCTION_9	IF_1	CALL_2
0x4000458	            0x8b3f	                    mov edi, dword [rdi]	       258	aerdrv.c	FUNCTION_9	IF_1	CALL_2
0x400045a	      0xe800000000	                          call 0x400045f	       258	aerdrv.c	FUNCTION_9	IF_1	CALL_2
0x400045f	      0xe956ffffff	                           jmp 0x40003ba	       258	aerdrv.c	FUNCTION_9	IF_1	CALL_2
0x4000464	      0xe800000000	                          call 0x4000469	       265	aerdrv.c	FUNCTION_9
pci_no_aer	IF,0:CALL,0:WHILE,0:ELSE,0:FOR,0:functions,0:DO,0:SWITCH,0	2
0x40006b0	    0xc70500000000	               mov dword [0x040006ba], 1	        46	aerdrv.c	FUNCTION_1
0x40006ba	              0xc3	                                     ret	        46	aerdrv.c	FUNCTION_1
aer_service_init	IF,1:CALL,3:WHILE,0:ELSE,0:FOR,0:functions,0:DO,0:SWITCH,0	12
0x4000040	            0x4157	                                push r15	       168	aerdrv.c	FUNCTION_7
0x4000042	            0x4156	                                push r14	       168	aerdrv.c	FUNCTION_7
0x4000044	            0x4155	                                push r13	       168	aerdrv.c	FUNCTION_7
0x4000046	            0x4154	                                push r12	       168	aerdrv.c	FUNCTION_7
0x4000048	              0x55	                                push rbp	       168	aerdrv.c	FUNCTION_7
0x4000049	              0x53	                                push rbx	       168	aerdrv.c	FUNCTION_7
0x400004a	          0x4889f5	                            mov rbp, rsi	       168	aerdrv.c	FUNCTION_7
0x400004d	        0x4883ec10	                           sub rsp, 0x10	       168	aerdrv.c	FUNCTION_7
0x4000051	        0x488b5e18	            mov rbx, qword [rsi + 0x18] 	       168	aerdrv.c	FUNCTION_7
0x4000055	    0x65488b042528	                mov rax, qword gs:[0x28]	       168	aerdrv.c	FUNCTION_7
0x400005e	      0x4889442408	                mov qword [rsp + 8], rax	       168	aerdrv.c	FUNCTION_7
0x4000063	              0x31	                                 invalid	       168	aerdrv.c	FUNCTION_7
set_downstream_devices_error_reporting	IF,1:CALL,2:WHILE,0:ELSE,0:FOR,0:functions,0:DO,0:SWITCH,0	15
0x4000340	              0x53	                                push rbx	        81	aerdrv.c	FUNCTION_4
0x4000341	          0x4889fb	                            mov rbx, rdi	        81	aerdrv.c	FUNCTION_4
0x4000344	        0x4883ec08	                              sub rsp, 8	        81	aerdrv.c	FUNCTION_4
0x4000348	      0x4088742404	                 mov byte [rsp + 4], sil	        81	aerdrv.c	FUNCTION_4
0x400034d	      0x488d742404	                      lea rsi, [rsp + 4]	        82	aerdrv.c	FUNCTION_4	CALL_1
0x4000352	      0xe8b9ffffff	     call sym.set_device_error_reporting	        82	aerdrv.c	FUNCTION_4	CALL_1
0x4000357	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	        84	aerdrv.c	FUNCTION_4	IF_1
0x400035b	          0x4885ff	                           test rdi, rdi	        84	aerdrv.c	FUNCTION_4	IF_1
0x400035e	            0x7411	                            je 0x4000371	        84	aerdrv.c	FUNCTION_4	IF_1
0x4000360	      0x488d542404	                      lea rdx, [rsp + 4]	        86	aerdrv.c	FUNCTION_4	CALL_2
0x4000365	    0x48c7c6000000	                              mov rsi, 0	        86	aerdrv.c	FUNCTION_4	CALL_2
0x400036c	      0xe800000000	                          call 0x4000371	        86	aerdrv.c	FUNCTION_4	CALL_2
0x4000371	        0x4883c408	                              add rsp, 8	        87	aerdrv.c	FUNCTION_4
0x4000375	              0x5b	                                 pop rbx	        87	aerdrv.c	FUNCTION_4
0x4000376	              0xc3	                                     ret	        87	aerdrv.c	FUNCTION_4
