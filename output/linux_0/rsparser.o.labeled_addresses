pnpacpi_count_resources	ELSE,0:DO,0:FOR,0:functions,0:CALL,1:WHILE,0:IF,1:SWITCH,0	12
0x4000040	            0x8b0f	                    mov ecx, dword [rdi]	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000042	          0x83f90f	                            cmp ecx, 0xf	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000045	            0x770f	                            ja 0x4000056	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000047	      0xb801000000	                              mov eax, 1	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400004c	          0x48d3e0	                             shl rax, cl	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400004f	      0xa933ff0000	                        test eax, 0xff33	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000054	            0x7503	                           jne 0x4000059	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000056	            0x31c0	                            xor eax, eax	       612	rsparser.c	FUNCTION_21
0x4000058	              0xc3	                                     ret	       612	rsparser.c	FUNCTION_21
0x4000059	          0x830601	                      add dword [rsi], 1	       610	rsparser.c	FUNCTION_21	IF_1
0x400005c	            0x31c0	                            xor eax, eax	       612	rsparser.c	FUNCTION_21
0x400005e	              0xc3	                                     ret	       612	rsparser.c	FUNCTION_21
dma_flags	ELSE,0:DO,0:FOR,0:functions,0:CALL,2:WHILE,0:IF,1:SWITCH,2	58
0x40000a0	              0x55	                                push rbp	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a1	              0x53	                                push rbx	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a2	          0x4889fd	                            mov rbp, rdi	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a5	        0x4883ec08	                              sub rsp, 8	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a9	          0x83fa01	                              cmp edx, 1	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000ac	            0x19db	                            sbb ebx, ebx	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000ae	            0xf7d3	                                 not ebx	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000b0	          0x83e304	                              and ebx, 4	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000b3	          0x83fe01	                              cmp esi, 1	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000b6	            0x7479	                            je 0x4000131	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000b8	            0x7e4c	                           jle 0x4000106	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000ba	          0x83fe02	                              cmp esi, 2	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000bd	            0x7433	                            je 0x40000f2	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000bf	          0x83fe03	                              cmp esi, 3	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000c2	            0x7546	                           jne 0x400010a	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000c4	          0x80cbc0	                             or bl, 0xc0	        80	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000c7	          0x83f901	                              cmp ecx, 1	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000ca	            0x742e	                            je 0x40000fa	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000cc	          0x83f902	                              cmp ecx, 2	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000cf	            0x7454	                            je 0x4000125	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000d1	            0x85c9	                           test ecx, ecx	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000d3	            0x7414	                            je 0x40000e9	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000d5	            0x89ca	                            mov edx, ecx	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000d7	    0x48c7c6000000	                              mov rsi, 0	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000de	          0x4889ef	                            mov rdi, rbp	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000e1	          0x83cb01	                               or ebx, 1	        99	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000e4	      0xe800000000	                          call 0x40000e9	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000e9	        0x4883c408	                              add rsp, 8	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000ed	            0x89d8	                            mov eax, ebx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000ef	              0x5b	                                 pop rbx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000f0	              0x5d	                                 pop rbp	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000f1	              0xc3	                                     ret	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000f2	          0x80cb80	                             or bl, 0x80	        77	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000f5	          0x83f901	                              cmp ecx, 1	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000f8	            0x75d2	                           jne 0x40000cc	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000fa	          0x83cb01	                               or ebx, 1	        92	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000fd	        0x4883c408	                              add rsp, 8	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000101	            0x89d8	                            mov eax, ebx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000103	              0x5b	                                 pop rbx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000104	              0x5d	                                 pop rbp	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000105	              0xc3	                                     ret	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000106	            0x85f6	                           test esi, esi	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x4000108	            0x74bd	                            je 0x40000c7	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x400010a	            0x89f2	                            mov edx, esi	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400010c	          0x4889ef	                            mov rdi, rbp	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400010f	    0x48c7c6000000	                              mov rsi, 0	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x4000116	        0x894c2404	                mov dword [rsp + 4], ecx	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400011a	      0xe800000000	                          call 0x400011f	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400011f	        0x8b4c2404	                mov ecx, dword [rsp + 4]	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x4000123	            0xeba2	                           jmp 0x40000c7	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x4000125	          0x83cb02	                               or ebx, 2	        95	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x4000128	        0x4883c408	                              add rsp, 8	       104	rsparser.c	ELSE_1	FUNCTION_2
0x400012c	            0x89d8	                            mov eax, ebx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x400012e	              0x5b	                                 pop rbx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x400012f	              0x5d	                                 pop rbp	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000130	              0xc3	                                     ret	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000131	          0x83cb40	                            or ebx, 0x40	        74	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x4000134	            0xeb91	                           jmp 0x40000c7	        75	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
pnpacpi_parse_allocated_resource	ELSE,0:DO,0:FOR,0:functions,0:CALL,5:WHILE,0:IF,2:SWITCH,0	37
0x4000460	              0x55	                                push rbp	       280	rsparser.c	FUNCTION_7
0x4000461	              0x53	                                push rbx	       280	rsparser.c	FUNCTION_7
0x4000462	          0x4889fb	                            mov rbx, rdi	       280	rsparser.c	FUNCTION_7
0x4000465	        0x4883ec08	                              sub rsp, 8	       280	rsparser.c	FUNCTION_7
0x4000469	    0x488b87b80300	           mov rax, qword [rdi + 0x3b8] 	       282	rsparser.c	FUNCTION_7
0x4000470	        0x488b6808	                mov rbp, qword [rax + 8]	       282	rsparser.c	FUNCTION_7
0x4000474	    0x8b0500000000	            mov eax, dword [0x0400047a] 	       285	rsparser.c	FUNCTION_7	CALL_1
0x400047a	            0x85c0	                           test eax, eax	       285	rsparser.c	FUNCTION_7	CALL_1
0x400047c	            0x7551	                           jne 0x40004cf	       285	rsparser.c	FUNCTION_7	CALL_1
0x400047e	          0x4889df	                            mov rdi, rbx	       287	rsparser.c	FUNCTION_7	CALL_2
0x4000481	      0xe800000000	                          call 0x4000486	       287	rsparser.c	FUNCTION_7	CALL_2
0x4000486	    0x48c7c2000000	                              mov rdx, 0	       289	rsparser.c	FUNCTION_7	CALL_3
0x400048d	          0x4889d9	                            mov rcx, rbx	       289	rsparser.c	FUNCTION_7	CALL_3
0x4000490	    0x48c7c6000000	                              mov rsi, 0	       289	rsparser.c	FUNCTION_7	CALL_3
0x4000497	          0x4889ef	                            mov rdi, rbp	       289	rsparser.c	FUNCTION_7	CALL_3
0x400049a	      0xe800000000	                          call 0x400049f	       289	rsparser.c	FUNCTION_7	CALL_3
0x400049f	            0x89c2	                            mov edx, eax	       289	rsparser.c	FUNCTION_7	CALL_3
0x40004a1	            0x31c0	                            xor eax, eax	       297	rsparser.c	FUNCTION_7
0x40004a3	            0x85d2	                           test edx, edx	       292	rsparser.c	FUNCTION_7	IF_1	CALL_4
0x40004a5	            0x7421	                            je 0x40004c8	       292	rsparser.c	FUNCTION_7	IF_1	CALL_4
0x40004a7	          0x83fa05	                              cmp edx, 5	       293	rsparser.c	FUNCTION_7	IF_1	IF_2
0x40004aa	      0xb8ffffffff	                     mov eax, 0xffffffff	       295	rsparser.c	FUNCTION_7	IF_1
0x40004af	            0x7417	                            je 0x40004c8	       293	rsparser.c	FUNCTION_7	IF_1	IF_2
0x40004b1	    0x48c7c6000000	                              mov rsi, 0	       294	rsparser.c	FUNCTION_7	IF_1	CALL_5
0x40004b8	          0x4889df	                            mov rdi, rbx	       294	rsparser.c	FUNCTION_7	IF_1	CALL_5
0x40004bb	        0x89442404	                mov dword [rsp + 4], eax	       294	rsparser.c	FUNCTION_7	IF_1	CALL_5
0x40004bf	      0xe800000000	                          call 0x40004c4	       294	rsparser.c	FUNCTION_7	IF_1	CALL_5
0x40004c4	        0x8b442404	                mov eax, dword [rsp + 4]	       294	rsparser.c	FUNCTION_7	IF_1	CALL_5
0x40004c8	        0x4883c408	                              add rsp, 8	       298	rsparser.c	FUNCTION_7
0x40004cc	              0x5b	                                 pop rbx	       298	rsparser.c	FUNCTION_7
0x40004cd	              0x5d	                                 pop rbp	       298	rsparser.c	FUNCTION_7
0x40004ce	              0xc3	                                     ret	       298	rsparser.c	FUNCTION_7
0x40004cf	          0x4889fe	                            mov rsi, rdi	       285	rsparser.c	FUNCTION_7	CALL_1
0x40004d2	    0x48c7c2000000	                              mov rdx, 0	       285	rsparser.c	FUNCTION_7	CALL_1
0x40004d9	    0x48c7c7000000	                              mov rdi, 0	       285	rsparser.c	FUNCTION_7	CALL_1
0x40004e0	      0xe800000000	                          call 0x40004e5	       285	rsparser.c	FUNCTION_7	CALL_1
0x40004e5	            0xeb97	                           jmp 0x400047e	       285	rsparser.c	FUNCTION_7	CALL_1
decode_irq_flags	ELSE,1:DO,0:FOR,0:functions,0:CALL,1:WHILE,0:IF,1:SWITCH,1	63
0x4000140	              0x55	                                push rbp	        29	rsparser.c	FUNCTION_1
0x4000141	            0x89f0	                            mov eax, esi	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000143	              0x53	                                push rbx	        29	rsparser.c	FUNCTION_1
0x4000144	          0x83e00f	                            and eax, 0xf	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000147	            0x89f3	                            mov ebx, esi	        29	rsparser.c	FUNCTION_1
0x4000149	          0x4889d5	                            mov rbp, rdx	        29	rsparser.c	FUNCTION_1
0x400014c	        0x4883ec10	                           sub rsp, 0x10	        29	rsparser.c	FUNCTION_1
0x4000150	          0x83f802	                              cmp eax, 2	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000153	     0xf8482000000	                            je 0x40001db	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000159	            0x7e32	                           jle 0x400018d	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x400015b	          0x83f804	                              cmp eax, 4	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x400015e	            0x7419	                            je 0x4000179	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000160	          0x83f808	                              cmp eax, 8	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000163	            0x7541	                           jne 0x40001a6	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000165	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x4000168	          0xc60200	                       mov byte [rdx], 0	        33	rsparser.c	FUNCTION_1	SWITCH_1
0x400016b	          0xc60101	                       mov byte [rcx], 1	        34	rsparser.c	FUNCTION_1	SWITCH_1
0x400016e	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x4000172	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000176	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000177	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000178	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000179	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x400017c	          0xc60200	                       mov byte [rdx], 0	        37	rsparser.c	FUNCTION_1	SWITCH_1
0x400017f	          0xc60100	                       mov byte [rcx], 0	        38	rsparser.c	FUNCTION_1	SWITCH_1
0x4000182	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x4000186	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018a	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018b	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018c	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018d	          0x83f801	                              cmp eax, 1	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000190	            0x7514	                           jne 0x40001a6	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000192	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x4000195	          0xc60201	                       mov byte [rdx], 1	        45	rsparser.c	FUNCTION_1	SWITCH_1
0x4000198	          0xc60100	                       mov byte [rcx], 0	        46	rsparser.c	FUNCTION_1	SWITCH_1
0x400019b	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x400019f	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a3	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a4	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a5	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a6	            0x89da	                            mov edx, ebx	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001a8	    0x48c7c6000000	                              mov rsi, 0	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001af	      0x4c89442408	                 mov qword [rsp + 8], r8	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001b4	        0x48890c24	                    mov qword [rsp], rcx	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001b8	      0xe800000000	                          call 0x40001bd	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001bd	        0x488b0c24	                    mov rcx, qword [rsp]	        52	rsparser.c	FUNCTION_1	SWITCH_1
0x40001c1	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        52	rsparser.c	FUNCTION_1	SWITCH_1
0x40001c6	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x40001c9	        0xc6450001	                       mov byte [rbp], 1	        51	rsparser.c	FUNCTION_1	SWITCH_1
0x40001cd	          0xc60100	                       mov byte [rcx], 0	        52	rsparser.c	FUNCTION_1	SWITCH_1
0x40001d0	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x40001d4	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001d8	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001d9	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001da	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001db	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x40001de	          0xc60201	                       mov byte [rdx], 1	        41	rsparser.c	FUNCTION_1	SWITCH_1
0x40001e1	          0xc60101	                       mov byte [rcx], 1	        42	rsparser.c	FUNCTION_1	SWITCH_1
0x40001e4	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x40001e8	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001ec	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001ed	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001ee	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
pnpacpi_option_resource	ELSE,0:DO,0:FOR,0:functions,0:CALL,12:WHILE,0:IF,0:SWITCH,2	287
0x4000040	            0x8b0f	                    mov ecx, dword [rdi]	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000042	          0x83f90f	                            cmp ecx, 0xf	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000045	            0x770f	                            ja 0x4000056	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000047	      0xb801000000	                              mov eax, 1	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400004c	          0x48d3e0	                             shl rax, cl	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400004f	      0xa933ff0000	                        test eax, 0xff33	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000054	            0x7503	                           jne 0x4000059	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000056	            0x31c0	                            xor eax, eax	       612	rsparser.c	FUNCTION_21
0x4000058	              0xc3	                                     ret	       612	rsparser.c	FUNCTION_21
0x4000059	          0x830601	                      add dword [rsi], 1	       610	rsparser.c	FUNCTION_21	IF_1
0x400005c	            0x31c0	                            xor eax, eax	       612	rsparser.c	FUNCTION_21
0x400005e	              0xc3	                                     ret	       612	rsparser.c	FUNCTION_21
0x400005f	              0x90	                                     nop	       612	rsparser.c	FUNCTION_21
0x4000060	            0x8b0f	                    mov ecx, dword [rdi]	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000062	          0x83f90f	                            cmp ecx, 0xf	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000065	            0x770f	                            ja 0x4000076	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000067	      0xb801000000	                              mov eax, 1	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400006c	          0x48d3e0	                             shl rax, cl	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400006f	      0xa933ff0000	                        test eax, 0xff33	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000074	            0x7503	                           jne 0x4000079	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000076	            0x31c0	                            xor eax, eax	       628	rsparser.c	FUNCTION_22
0x4000078	              0xc3	                                     ret	       628	rsparser.c	FUNCTION_22
0x4000079	          0x488b06	                    mov rax, qword [rsi]	       619	rsparser.c	FUNCTION_22	IF_1
0x400007c	            0x8908	                    mov dword [rax], ecx	       619	rsparser.c	FUNCTION_22	IF_1
0x400007e	          0x488b06	                    mov rax, qword [rsi]	       620	rsparser.c	FUNCTION_22	IF_1
0x4000081	    0xc74004440000	               mov dword [rax + 4], 0x44	       620	rsparser.c	FUNCTION_22	IF_1
0x4000088	            0x8b07	                    mov eax, dword [rdi]	       621	rsparser.c	FUNCTION_22	IF_1	IF_2
0x400008a	            0x85c0	                           test eax, eax	       621	rsparser.c	FUNCTION_22	IF_1	IF_2
0x400008c	            0x750a	                           jne 0x4000098	       621	rsparser.c	FUNCTION_22	IF_1	IF_2
0x400008e	         0xfb65708	               movzx edx, byte [rdi + 8]	       623	rsparser.c	FUNCTION_22	IF_1	IF_2
0x4000092	          0x488b06	                    mov rax, qword [rsi]	       622	rsparser.c	FUNCTION_22	IF_1	IF_2
0x4000095	          0x885008	                  mov byte [rax + 8], dl	       622	rsparser.c	FUNCTION_22	IF_1	IF_2
0x4000098	        0x48830644	                   add qword [rsi], 0x44	       624	rsparser.c	FUNCTION_22	IF_1
0x400009c	            0x31c0	                            xor eax, eax	       628	rsparser.c	FUNCTION_22
0x400009e	              0xc3	                                     ret	       628	rsparser.c	FUNCTION_22
0x400009f	              0x90	                                     nop	       628	rsparser.c	FUNCTION_22
0x40000a0	              0x55	                                push rbp	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a1	              0x53	                                push rbx	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a2	          0x4889fd	                            mov rbp, rdi	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a5	        0x4883ec08	                              sub rsp, 8	        64	rsparser.c	ELSE_1	FUNCTION_2
0x40000a9	          0x83fa01	                              cmp edx, 1	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000ac	            0x19db	                            sbb ebx, ebx	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000ae	            0xf7d3	                                 not ebx	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000b0	          0x83e304	                              and ebx, 4	        68	rsparser.c	ELSE_1	FUNCTION_2	IF_1
0x40000b3	          0x83fe01	                              cmp esi, 1	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000b6	            0x7479	                            je 0x4000131	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000b8	            0x7e4c	                           jle 0x4000106	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000ba	          0x83fe02	                              cmp esi, 2	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000bd	            0x7433	                            je 0x40000f2	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000bf	          0x83fe03	                              cmp esi, 3	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000c2	            0x7546	                           jne 0x400010a	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000c4	          0x80cbc0	                             or bl, 0xc0	        80	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000c7	          0x83f901	                              cmp ecx, 1	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000ca	            0x742e	                            je 0x40000fa	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000cc	          0x83f902	                              cmp ecx, 2	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000cf	            0x7454	                            je 0x4000125	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000d1	            0x85c9	                           test ecx, ecx	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000d3	            0x7414	                            je 0x40000e9	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000d5	            0x89ca	                            mov edx, ecx	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000d7	    0x48c7c6000000	                              mov rsi, 0	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000de	          0x4889ef	                            mov rdi, rbp	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000e1	          0x83cb01	                               or ebx, 1	        99	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000e4	      0xe800000000	                          call 0x40000e9	       100	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2	CALL_2
0x40000e9	        0x4883c408	                              add rsp, 8	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000ed	            0x89d8	                            mov eax, ebx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000ef	              0x5b	                                 pop rbx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000f0	              0x5d	                                 pop rbp	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000f1	              0xc3	                                     ret	       104	rsparser.c	ELSE_1	FUNCTION_2
0x40000f2	          0x80cb80	                             or bl, 0x80	        77	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x40000f5	          0x83f901	                              cmp ecx, 1	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000f8	            0x75d2	                           jne 0x40000cc	        87	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000fa	          0x83cb01	                               or ebx, 1	        92	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x40000fd	        0x4883c408	                              add rsp, 8	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000101	            0x89d8	                            mov eax, ebx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000103	              0x5b	                                 pop rbx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000104	              0x5d	                                 pop rbp	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000105	              0xc3	                                     ret	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000106	            0x85f6	                           test esi, esi	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x4000108	            0x74bd	                            je 0x40000c7	        69	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x400010a	            0x89f2	                            mov edx, esi	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400010c	          0x4889ef	                            mov rdi, rbp	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400010f	    0x48c7c6000000	                              mov rsi, 0	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x4000116	        0x894c2404	                mov dword [rsp + 4], ecx	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400011a	      0xe800000000	                          call 0x400011f	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x400011f	        0x8b4c2404	                mov ecx, dword [rsp + 4]	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x4000123	            0xeba2	                           jmp 0x40000c7	        85	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1	CALL_1
0x4000125	          0x83cb02	                               or ebx, 2	        95	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_2
0x4000128	        0x4883c408	                              add rsp, 8	       104	rsparser.c	ELSE_1	FUNCTION_2
0x400012c	            0x89d8	                            mov eax, ebx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x400012e	              0x5b	                                 pop rbx	       104	rsparser.c	ELSE_1	FUNCTION_2
0x400012f	              0x5d	                                 pop rbp	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000130	              0xc3	                                     ret	       104	rsparser.c	ELSE_1	FUNCTION_2
0x4000131	          0x83cb40	                            or ebx, 0x40	        74	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x4000134	            0xeb91	                           jmp 0x40000c7	        75	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x4000136	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        75	rsparser.c	ELSE_1	FUNCTION_2	SWITCH_1
0x4000140	              0x55	                                push rbp	        29	rsparser.c	FUNCTION_1
0x4000141	            0x89f0	                            mov eax, esi	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000143	              0x53	                                push rbx	        29	rsparser.c	FUNCTION_1
0x4000144	          0x83e00f	                            and eax, 0xf	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000147	            0x89f3	                            mov ebx, esi	        29	rsparser.c	FUNCTION_1
0x4000149	          0x4889d5	                            mov rbp, rdx	        29	rsparser.c	FUNCTION_1
0x400014c	        0x4883ec10	                           sub rsp, 0x10	        29	rsparser.c	FUNCTION_1
0x4000150	          0x83f802	                              cmp eax, 2	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000153	     0xf8482000000	                            je 0x40001db	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000159	            0x7e32	                           jle 0x400018d	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x400015b	          0x83f804	                              cmp eax, 4	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x400015e	            0x7419	                            je 0x4000179	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000160	          0x83f808	                              cmp eax, 8	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000163	            0x7541	                           jne 0x40001a6	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000165	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x4000168	          0xc60200	                       mov byte [rdx], 0	        33	rsparser.c	FUNCTION_1	SWITCH_1
0x400016b	          0xc60101	                       mov byte [rcx], 1	        34	rsparser.c	FUNCTION_1	SWITCH_1
0x400016e	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x4000172	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000176	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000177	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000178	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x4000179	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x400017c	          0xc60200	                       mov byte [rdx], 0	        37	rsparser.c	FUNCTION_1	SWITCH_1
0x400017f	          0xc60100	                       mov byte [rcx], 0	        38	rsparser.c	FUNCTION_1	SWITCH_1
0x4000182	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x4000186	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018a	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018b	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018c	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x400018d	          0x83f801	                              cmp eax, 1	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000190	            0x7514	                           jne 0x40001a6	        30	rsparser.c	FUNCTION_1	SWITCH_1
0x4000192	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x4000195	          0xc60201	                       mov byte [rdx], 1	        45	rsparser.c	FUNCTION_1	SWITCH_1
0x4000198	          0xc60100	                       mov byte [rcx], 0	        46	rsparser.c	FUNCTION_1	SWITCH_1
0x400019b	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x400019f	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a3	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a4	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a5	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001a6	            0x89da	                            mov edx, ebx	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001a8	    0x48c7c6000000	                              mov rsi, 0	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001af	      0x4c89442408	                 mov qword [rsp + 8], r8	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001b4	        0x48890c24	                    mov qword [rsp], rcx	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001b8	      0xe800000000	                          call 0x40001bd	        49	rsparser.c	FUNCTION_1	SWITCH_1	CALL_1
0x40001bd	        0x488b0c24	                    mov rcx, qword [rsp]	        52	rsparser.c	FUNCTION_1	SWITCH_1
0x40001c1	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        52	rsparser.c	FUNCTION_1	SWITCH_1
0x40001c6	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x40001c9	        0xc6450001	                       mov byte [rbp], 1	        51	rsparser.c	FUNCTION_1	SWITCH_1
0x40001cd	          0xc60100	                       mov byte [rcx], 0	        52	rsparser.c	FUNCTION_1	SWITCH_1
0x40001d0	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x40001d4	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001d8	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001d9	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001da	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001db	          0x83e310	                           and ebx, 0x10	        57	rsparser.c	FUNCTION_1	IF_1
0x40001de	          0xc60201	                       mov byte [rdx], 1	        41	rsparser.c	FUNCTION_1	SWITCH_1
0x40001e1	          0xc60101	                       mov byte [rcx], 1	        42	rsparser.c	FUNCTION_1	SWITCH_1
0x40001e4	        0x410f9500	                         setne byte [r8]	        57	rsparser.c	FUNCTION_1	IF_1
0x40001e8	        0x4883c410	                           add rsp, 0x10	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001ec	              0x5b	                                 pop rbx	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001ed	              0x5d	                                 pop rbp	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001ee	              0xc3	                                     ret	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001ef	              0x90	                                     nop	        60	rsparser.c	FUNCTION_1	ELSE_1
0x40001f0	            0x4154	                                push r12	       175	rsparser.c	FUNCTION_6
0x40001f2	              0x55	                                push rbp	       175	rsparser.c	FUNCTION_6
0x40001f3	      0xb909000000	                              mov ecx, 9	       180	rsparser.c	FUNCTION_6
0x40001f8	              0x53	                                push rbx	       175	rsparser.c	FUNCTION_6
0x40001f9	          0x4889fb	                            mov rbx, rdi	       175	rsparser.c	FUNCTION_6
0x40001fc	          0x4889f5	                            mov rbp, rsi	       175	rsparser.c	FUNCTION_6
0x40001ff	        0x4883ec50	                           sub rsp, 0x50	       175	rsparser.c	FUNCTION_6
0x4000203	    0x65488b042528	                mov rax, qword gs:[0x28]	       175	rsparser.c	FUNCTION_6
0x400020c	      0x4889442448	             mov qword [rsp + 0x48], rax	       175	rsparser.c	FUNCTION_6
0x4000211	            0x31c0	                            xor eax, eax	       175	rsparser.c	FUNCTION_6
0x4000213	          0x4889e7	                            mov rdi, rsp	       180	rsparser.c	FUNCTION_6
0x4000216	          0x4889e6	                            mov rsi, rsp	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000219	          0xf348ab	              rep stosq qword [rdi], rax	       180	rsparser.c	FUNCTION_6
0x400021c	          0x4889df	                            mov rdi, rbx	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x400021f	      0xe800000000	                          call 0x4000224	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000224	            0x84c0	                             test al, al	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000226	            0x750f	                           jne 0x4000237	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000228	          0x4889e6	                            mov rsi, rsp	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x400022b	          0x4889df	                            mov rdi, rbx	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x400022e	      0xe800000000	                          call 0x4000233	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x4000233	            0x84c0	                             test al, al	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x4000235	            0x742a	                            je 0x4000261	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x4000237	          0x4889e6	                            mov rsi, rsp	       186	rsparser.c	FUNCTION_6	IF_1	CALL_3
0x400023a	          0x4889ef	                            mov rdi, rbp	       186	rsparser.c	FUNCTION_6	IF_1	CALL_3
0x400023d	      0xe800000000	                          call 0x4000242	       186	rsparser.c	FUNCTION_6	IF_1	CALL_3
0x4000242	            0x31c0	                            xor eax, eax	       187	rsparser.c	FUNCTION_6	IF_1
0x4000244	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       277	rsparser.c	FUNCTION_6
0x4000249	    0x654833142528	                xor rdx, qword gs:[0x28]	       277	rsparser.c	FUNCTION_6
0x4000252	     0xf85fc010000	                           jne 0x4000454	       277	rsparser.c	FUNCTION_6
0x4000258	        0x4883c450	                           add rsp, 0x50	       277	rsparser.c	FUNCTION_6
0x400025c	              0x5b	                                 pop rbx	       277	rsparser.c	FUNCTION_6
0x400025d	              0x5d	                                 pop rbp	       277	rsparser.c	FUNCTION_6
0x400025e	            0x415c	                                 pop r12	       277	rsparser.c	FUNCTION_6
0x4000260	              0xc3	                                     ret	       277	rsparser.c	FUNCTION_6
0x4000261	            0x31f6	                            xor esi, esi	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000263	          0x4889e2	                            mov rdx, rsp	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000266	          0x4889df	                            mov rdi, rbx	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000269	    0x48c744241800	               mov qword [rsp + 0x18], 0	       190	rsparser.c	FUNCTION_6
0x4000272	      0xe800000000	                          call 0x4000277	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000277	            0x84c0	                             test al, al	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000279	            0x7525	                           jne 0x40002a0	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x400027b	      0xf644241b10	           test byte [rsp + 0x1b], 0x10 	       224	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000280	     0xf859d010000	                           jne 0x4000423	       224	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000286	            0x8b13	                    mov edx, dword [rbx]	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x4000288	          0x83fa13	                           cmp edx, 0x13	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x400028b	     0xf8779010000	                            ja 0x400040a	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x4000291	            0x89d0	                            mov eax, edx	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x4000293	    0x488b04c50000	                  mov rax, qword [rax*8]	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x400029b	      0xe900000000	                           jmp 0x40002a0	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x40002a0	      0xf644241b10	           test byte [rsp + 0x1b], 0x10 	       112	rsparser.c	FUNCTION_3	IF_1
0x40002a5	            0x7470	                            je 0x4000317	       112	rsparser.c	FUNCTION_3	IF_1
0x40002a7	          0x4889e6	                            mov rsi, rsp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002aa	          0x4889ef	                            mov rdi, rbp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002ad	    0x41bc01000000	                             mov r12d, 1	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002b3	      0xe800000000	                          call 0x40002b8	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002b8	            0xeb23	                           jmp 0x40002dd	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002ba	      0xf644241b10	           test byte [rsp + 0x1b], 0x10 	       112	rsparser.c	FUNCTION_3	IF_1
0x40002bf	            0x750d	                           jne 0x40002ce	       112	rsparser.c	FUNCTION_3	IF_1
0x40002c1	          0x8b3c24	                    mov edi, dword [rsp]	       113	rsparser.c	FUNCTION_3	CALL_1
0x40002c4	      0xbe01000000	                              mov esi, 1	       113	rsparser.c	FUNCTION_3	CALL_1
0x40002c9	      0xe800000000	                          call 0x40002ce	       113	rsparser.c	FUNCTION_3	CALL_1
0x40002ce	          0x4889e6	                            mov rsi, rsp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002d1	          0x4889ef	                            mov rdi, rbp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002d4	        0x4183c401	                             add r12d, 1	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002d8	      0xe800000000	                          call 0x40002dd	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002dd	          0x4889e2	                            mov rdx, rsp	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002e0	          0x4489e6	                           mov esi, r12d	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002e3	          0x4889df	                            mov rdi, rbx	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002e6	      0xe800000000	                          call 0x40002eb	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002eb	            0x84c0	                             test al, al	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002ed	            0x75cb	                           jne 0x40002ba	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002ef	        0x4183fc01	                             cmp r12d, 1	       196	rsparser.c	FUNCTION_6	IF_2	IF_3
0x40002f3	            0x7e1b	                           jle 0x4000310	       196	rsparser.c	FUNCTION_6	IF_2	IF_3
0x40002f5	    0x488b85200300	           mov rax, qword [rbp + 0x320] 	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x40002fc	      0x4883782000	               cmp qword [rax + 0x20], 0	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x4000301	            0x740d	                            je 0x4000310	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x4000303	    0xf6854c030000	              test byte [rbp + 0x34c], 2	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x400030a	     0xf85dd000000	                           jne 0x40003ed	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x4000310	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x4000312	      0xe92dffffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000317	          0x8b3c24	                    mov edi, dword [rsp]	       113	rsparser.c	FUNCTION_3	CALL_1
0x400031a	      0xbe01000000	                              mov esi, 1	       113	rsparser.c	FUNCTION_3	CALL_1
0x400031f	      0xe800000000	                          call 0x4000324	       113	rsparser.c	FUNCTION_3	CALL_1
0x4000324	            0xeb81	                           jmp 0x40002a7	       113	rsparser.c	FUNCTION_3	CALL_1
0x4000326	          0x4889e6	                            mov rsi, rsp	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000329	          0x4889df	                            mov rdi, rbx	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x400032c	      0xe800000000	                          call 0x4000331	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000331	            0x84c0	                             test al, al	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000333	     0xf85fefeffff	                           jne 0x4000237	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000339	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x400033b	      0xe904ffffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000340	     0xfb605000000	           movzx eax, byte [0x04000347] 	       144	rsparser.c	FUNCTION_4	IF_1
0x4000347	          0x38430a	                cmp byte [rbx + 0xa], al	       144	rsparser.c	FUNCTION_4	IF_1
0x400034a	            0x75c4	                           jne 0x4000310	       144	rsparser.c	FUNCTION_4	IF_1
0x400034c	        0x488d7b0b	                    lea rdi, [rbx + 0xb]	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x4000350	      0xba10000000	                           mov edx, 0x10	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x4000355	    0x48c7c6000000	                              mov rsi, 0	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x400035c	      0xe800000000	                          call 0x4000361	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x4000361	            0x85c0	                           test eax, eax	       145	rsparser.c	FUNCTION_4	IF_1
0x4000363	            0x75ab	                           jne 0x4000310	       145	rsparser.c	FUNCTION_4	IF_1
0x4000365	         0xfb74b08	               movzx ecx, word [rbx + 8]	       142	rsparser.c	FUNCTION_4
0x4000369	          0x83e911	                           sub ecx, 0x11	       142	rsparser.c	FUNCTION_4
0x400036c	          0x83f910	                           cmp ecx, 0x10	       147	rsparser.c	FUNCTION_4	IF_1	IF_2
0x400036f	     0xf85c4000000	                           jne 0x4000439	       147	rsparser.c	FUNCTION_4	IF_1	IF_2
0x4000375	        0x488b731b	            mov rsi, qword [rbx + 0x1b] 	       166	rsparser.c	FUNCTION_5	IF_1	CALL_2
0x4000379	            0x31c9	                            xor ecx, ecx	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x400037b	          0x4889ef	                            mov rdi, rbp	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x400037e	          0x4889f2	                            mov rdx, rsi	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x4000381	        0x48035323	             add rdx, qword [rbx + 0x23]	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x4000385	        0x4883ea01	                              sub rdx, 1	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x4000389	      0xe800000000	                          call 0x400038e	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x400038e	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x4000390	      0xe9affeffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000395	          0x4889e6	                            mov rsi, rsp	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x4000398	          0x4889df	                            mov rdi, rbx	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x400039b	      0xe800000000	                          call 0x40003a0	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x40003a0	            0x84c0	                             test al, al	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x40003a2	     0xf858ffeffff	                           jne 0x4000237	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x40003a8	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x40003aa	      0xe995feffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x40003af	        0x807b0b00	                 cmp byte [rbx + 0xb], 0	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003b3	         0xfb6730c	            movzx esi, byte [rbx + 0xc] 	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003b7	      0xba00000010	                     mov edx, 0x10000000	       247	rsparser.c	FUNCTION_6	SWITCH_1	ELSE_4
0x40003bc	            0x7420	                            je 0x40003de	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003be	        0x4080feff	                           cmp sil, 0xff	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003c2	            0x741a	                            je 0x40003de	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003c4	               0xf	                                 invalid	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003c5	              0xb6	                                 invalid	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
pnpacpi_allocated_resource	ELSE,4:DO,0:FOR,1:functions,0:CALL,22:WHILE,0:IF,10:SWITCH,1	161
0x40001f0	            0x4154	                                push r12	       175	rsparser.c	FUNCTION_6
0x40001f2	              0x55	                                push rbp	       175	rsparser.c	FUNCTION_6
0x40001f3	      0xb909000000	                              mov ecx, 9	       180	rsparser.c	FUNCTION_6
0x40001f8	              0x53	                                push rbx	       175	rsparser.c	FUNCTION_6
0x40001f9	          0x4889fb	                            mov rbx, rdi	       175	rsparser.c	FUNCTION_6
0x40001fc	          0x4889f5	                            mov rbp, rsi	       175	rsparser.c	FUNCTION_6
0x40001ff	        0x4883ec50	                           sub rsp, 0x50	       175	rsparser.c	FUNCTION_6
0x4000203	    0x65488b042528	                mov rax, qword gs:[0x28]	       175	rsparser.c	FUNCTION_6
0x400020c	      0x4889442448	             mov qword [rsp + 0x48], rax	       175	rsparser.c	FUNCTION_6
0x4000211	            0x31c0	                            xor eax, eax	       175	rsparser.c	FUNCTION_6
0x4000213	          0x4889e7	                            mov rdi, rsp	       180	rsparser.c	FUNCTION_6
0x4000216	          0x4889e6	                            mov rsi, rsp	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000219	          0xf348ab	              rep stosq qword [rdi], rax	       180	rsparser.c	FUNCTION_6
0x400021c	          0x4889df	                            mov rdi, rbx	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x400021f	      0xe800000000	                          call 0x4000224	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000224	            0x84c0	                             test al, al	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000226	            0x750f	                           jne 0x4000237	       184	rsparser.c	FUNCTION_6	IF_1	CALL_1
0x4000228	          0x4889e6	                            mov rsi, rsp	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x400022b	          0x4889df	                            mov rdi, rbx	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x400022e	      0xe800000000	                          call 0x4000233	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x4000233	            0x84c0	                             test al, al	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x4000235	            0x742a	                            je 0x4000261	       185	rsparser.c	FUNCTION_6	IF_1	CALL_2
0x4000237	          0x4889e6	                            mov rsi, rsp	       186	rsparser.c	FUNCTION_6	IF_1	CALL_3
0x400023a	          0x4889ef	                            mov rdi, rbp	       186	rsparser.c	FUNCTION_6	IF_1	CALL_3
0x400023d	      0xe800000000	                          call 0x4000242	       186	rsparser.c	FUNCTION_6	IF_1	CALL_3
0x4000242	            0x31c0	                            xor eax, eax	       187	rsparser.c	FUNCTION_6	IF_1
0x4000244	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       277	rsparser.c	FUNCTION_6
0x4000249	    0x654833142528	                xor rdx, qword gs:[0x28]	       277	rsparser.c	FUNCTION_6
0x4000252	     0xf85fc010000	                           jne 0x4000454	       277	rsparser.c	FUNCTION_6
0x4000258	        0x4883c450	                           add rsp, 0x50	       277	rsparser.c	FUNCTION_6
0x400025c	              0x5b	                                 pop rbx	       277	rsparser.c	FUNCTION_6
0x400025d	              0x5d	                                 pop rbp	       277	rsparser.c	FUNCTION_6
0x400025e	            0x415c	                                 pop r12	       277	rsparser.c	FUNCTION_6
0x4000260	              0xc3	                                     ret	       277	rsparser.c	FUNCTION_6
0x4000261	            0x31f6	                            xor esi, esi	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000263	          0x4889e2	                            mov rdx, rsp	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000266	          0x4889df	                            mov rdi, rbx	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000269	    0x48c744241800	               mov qword [rsp + 0x18], 0	       190	rsparser.c	FUNCTION_6
0x4000272	      0xe800000000	                          call 0x4000277	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000277	            0x84c0	                             test al, al	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x4000279	            0x7525	                           jne 0x40002a0	       191	rsparser.c	FUNCTION_6	IF_2	CALL_4
0x400027b	      0xf644241b10	           test byte [rsp + 0x1b], 0x10 	       224	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000280	     0xf859d010000	                           jne 0x4000423	       224	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000286	            0x8b13	                    mov edx, dword [rbx]	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x4000288	          0x83fa13	                           cmp edx, 0x13	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x400028b	     0xf8779010000	                            ja 0x400040a	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x4000291	            0x89d0	                            mov eax, edx	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x4000293	    0x488b04c50000	                  mov rax, qword [rax*8]	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x400029b	      0xe900000000	                           jmp 0x40002a0	       229	rsparser.c	FUNCTION_6	SWITCH_1
0x40002a0	      0xf644241b10	           test byte [rsp + 0x1b], 0x10 	       112	rsparser.c	FUNCTION_3	IF_1
0x40002a5	            0x7470	                            je 0x4000317	       112	rsparser.c	FUNCTION_3	IF_1
0x40002a7	          0x4889e6	                            mov rsi, rsp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002aa	          0x4889ef	                            mov rdi, rbp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002ad	    0x41bc01000000	                             mov r12d, 1	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002b3	      0xe800000000	                          call 0x40002b8	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002b8	            0xeb23	                           jmp 0x40002dd	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002ba	      0xf644241b10	           test byte [rsp + 0x1b], 0x10 	       112	rsparser.c	FUNCTION_3	IF_1
0x40002bf	            0x750d	                           jne 0x40002ce	       112	rsparser.c	FUNCTION_3	IF_1
0x40002c1	          0x8b3c24	                    mov edi, dword [rsp]	       113	rsparser.c	FUNCTION_3	CALL_1
0x40002c4	      0xbe01000000	                              mov esi, 1	       113	rsparser.c	FUNCTION_3	CALL_1
0x40002c9	      0xe800000000	                          call 0x40002ce	       113	rsparser.c	FUNCTION_3	CALL_1
0x40002ce	          0x4889e6	                            mov rsi, rsp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002d1	          0x4889ef	                            mov rdi, rbp	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002d4	        0x4183c401	                             add r12d, 1	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002d8	      0xe800000000	                          call 0x40002dd	       115	rsparser.c	FUNCTION_3	CALL_2
0x40002dd	          0x4889e2	                            mov rdx, rsp	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002e0	          0x4489e6	                           mov esi, r12d	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002e3	          0x4889df	                            mov rdi, rbx	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002e6	      0xe800000000	                          call 0x40002eb	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002eb	            0x84c0	                             test al, al	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002ed	            0x75cb	                           jne 0x40002ba	       193	rsparser.c	FUNCTION_6	IF_2	FOR_1	CALL_6
0x40002ef	        0x4183fc01	                             cmp r12d, 1	       196	rsparser.c	FUNCTION_6	IF_2	IF_3
0x40002f3	            0x7e1b	                           jle 0x4000310	       196	rsparser.c	FUNCTION_6	IF_2	IF_3
0x40002f5	    0x488b85200300	           mov rax, qword [rbp + 0x320] 	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x40002fc	      0x4883782000	               cmp qword [rax + 0x20], 0	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x4000301	            0x740d	                            je 0x4000310	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x4000303	    0xf6854c030000	              test byte [rbp + 0x34c], 2	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x400030a	     0xf85dd000000	                           jne 0x40003ed	       202	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_8
0x4000310	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x4000312	      0xe92dffffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000317	          0x8b3c24	                    mov edi, dword [rsp]	       113	rsparser.c	FUNCTION_3	CALL_1
0x400031a	      0xbe01000000	                              mov esi, 1	       113	rsparser.c	FUNCTION_3	CALL_1
0x400031f	      0xe800000000	                          call 0x4000324	       113	rsparser.c	FUNCTION_3	CALL_1
0x4000324	            0xeb81	                           jmp 0x40002a7	       113	rsparser.c	FUNCTION_3	CALL_1
0x4000326	          0x4889e6	                            mov rsi, rsp	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000329	          0x4889df	                            mov rdi, rbx	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x400032c	      0xe800000000	                          call 0x4000331	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000331	            0x84c0	                             test al, al	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000333	     0xf85fefeffff	                           jne 0x4000237	       233	rsparser.c	FUNCTION_6	SWITCH_1	IF_8	CALL_15
0x4000339	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x400033b	      0xe904ffffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000340	     0xfb605000000	           movzx eax, byte [0x04000347] 	       144	rsparser.c	FUNCTION_4	IF_1
0x4000347	          0x38430a	                cmp byte [rbx + 0xa], al	       144	rsparser.c	FUNCTION_4	IF_1
0x400034a	            0x75c4	                           jne 0x4000310	       144	rsparser.c	FUNCTION_4	IF_1
0x400034c	        0x488d7b0b	                    lea rdi, [rbx + 0xb]	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x4000350	      0xba10000000	                           mov edx, 0x10	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x4000355	    0x48c7c6000000	                              mov rsi, 0	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x400035c	      0xe800000000	                          call 0x4000361	       146	rsparser.c	FUNCTION_4	IF_1	CALL_1
0x4000361	            0x85c0	                           test eax, eax	       145	rsparser.c	FUNCTION_4	IF_1
0x4000363	            0x75ab	                           jne 0x4000310	       145	rsparser.c	FUNCTION_4	IF_1
0x4000365	         0xfb74b08	               movzx ecx, word [rbx + 8]	       142	rsparser.c	FUNCTION_4
0x4000369	          0x83e911	                           sub ecx, 0x11	       142	rsparser.c	FUNCTION_4
0x400036c	          0x83f910	                           cmp ecx, 0x10	       147	rsparser.c	FUNCTION_4	IF_1	IF_2
0x400036f	     0xf85c4000000	                           jne 0x4000439	       147	rsparser.c	FUNCTION_4	IF_1	IF_2
0x4000375	        0x488b731b	            mov rsi, qword [rbx + 0x1b] 	       166	rsparser.c	FUNCTION_5	IF_1	CALL_2
0x4000379	            0x31c9	                            xor ecx, ecx	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x400037b	          0x4889ef	                            mov rdi, rbp	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x400037e	          0x4889f2	                            mov rdx, rsi	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x4000381	        0x48035323	             add rdx, qword [rbx + 0x23]	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x4000385	        0x4883ea01	                              sub rdx, 1	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x4000389	      0xe800000000	                          call 0x400038e	       169	rsparser.c	FUNCTION_5	IF_1	CALL_4
0x400038e	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x4000390	      0xe9affeffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000395	          0x4889e6	                            mov rsi, rsp	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x4000398	          0x4889df	                            mov rdi, rbx	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x400039b	      0xe800000000	                          call 0x40003a0	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x40003a0	            0x84c0	                             test al, al	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x40003a2	     0xf858ffeffff	                           jne 0x4000237	       238	rsparser.c	FUNCTION_6	SWITCH_1	IF_9	CALL_17
0x40003a8	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x40003aa	      0xe995feffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x40003af	        0x807b0b00	                 cmp byte [rbx + 0xb], 0	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003b3	         0xfb6730c	            movzx esi, byte [rbx + 0xc] 	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003b7	      0xba00000010	                     mov edx, 0x10000000	       247	rsparser.c	FUNCTION_6	SWITCH_1	ELSE_4
0x40003bc	            0x7420	                            je 0x40003de	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003be	        0x4080feff	                           cmp sil, 0xff	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003c2	            0x741a	                            je 0x40003de	       243	rsparser.c	FUNCTION_6	SWITCH_1	IF_10
0x40003c4	         0xfb65309	               movzx edx, byte [rbx + 9]	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003c8	         0xfb67308	               movzx esi, byte [rbx + 8]	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003cc	          0x4889ef	                            mov rdi, rbp	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003cf	         0xfb64b0a	            movzx ecx, byte [rbx + 0xa] 	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003d3	      0xe8c8fcffff	                      call sym.dma_flags	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003d8	         0xfb6730c	            movzx esi, byte [rbx + 0xc] 	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003dc	            0x89c2	                            mov edx, eax	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003de	          0x4889ef	                            mov rdi, rbp	       248	rsparser.c	FUNCTION_6	SWITCH_1	CALL_20
0x40003e1	      0xe800000000	                          call 0x40003e6	       248	rsparser.c	FUNCTION_6	SWITCH_1	CALL_20
0x40003e6	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x40003e8	      0xe957feffff	                           jmp 0x4000244	       249	rsparser.c	FUNCTION_6	SWITCH_1
0x40003ed	    0x48c7c6000000	                              mov rsi, 0	       203	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_9
0x40003f4	          0x4889ef	                            mov rdi, rbp	       203	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_9
0x40003f7	      0xe800000000	                          call 0x40003fc	       203	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_9
0x40003fc	    0x83a54c030000	     and dword [rbp + 0x34c], 0xfffffffd	       205	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4
0x4000403	            0x31c0	                            xor eax, eax	       208	rsparser.c	FUNCTION_6	IF_2
0x4000405	      0xe93afeffff	                           jmp 0x4000244	       208	rsparser.c	FUNCTION_6	IF_2
0x400040a	    0x48c7c6000000	                              mov rsi, 0	       271	rsparser.c	FUNCTION_6	SWITCH_1	CALL_22
0x4000411	          0x4889ef	                            mov rdi, rbp	       271	rsparser.c	FUNCTION_6	SWITCH_1	CALL_22
0x4000414	      0xe800000000	                          call 0x4000419	       271	rsparser.c	FUNCTION_6	SWITCH_1	CALL_22
0x4000419	      0xb801000000	                              mov eax, 1	       273	rsparser.c	FUNCTION_6	SWITCH_1
0x400041e	      0xe921feffff	                           jmp 0x4000244	       273	rsparser.c	FUNCTION_6	SWITCH_1
0x4000423	      0xba00000010	                     mov edx, 0x10000000	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x4000428	            0x31f6	                            xor esi, esi	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x400042a	          0x4889ef	                            mov rdi, rbp	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x400042d	      0xe800000000	                          call 0x4000432	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x4000432	            0x31c0	                            xor eax, eax	       226	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000434	      0xe90bfeffff	                           jmp 0x4000244	       226	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000439	      0xba10000000	                           mov edx, 0x10	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x400043e	    0x48c7c6000000	                              mov rsi, 0	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4000445	          0x4889ef	                            mov rdi, rbp	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4000448	      0xe800000000	                          call 0x400044d	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x400044d	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x400044f	      0xe9f0fdffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000454	      0xe800000000	                          call 0x4000459	       277	rsparser.c	FUNCTION_6
pnpacpi_type_resources	ELSE,0:DO,0:FOR,0:functions,0:CALL,1:WHILE,0:IF,2:SWITCH,0	22
0x4000060	            0x8b0f	                    mov ecx, dword [rdi]	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000062	          0x83f90f	                            cmp ecx, 0xf	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000065	            0x770f	                            ja 0x4000076	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000067	      0xb801000000	                              mov eax, 1	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400006c	          0x48d3e0	                             shl rax, cl	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x400006f	      0xa933ff0000	                        test eax, 0xff33	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000074	            0x7503	                           jne 0x4000079	       583	rsparser.c	FUNCTION_20	SWITCH_1
0x4000076	            0x31c0	                            xor eax, eax	       628	rsparser.c	FUNCTION_22
0x4000078	              0xc3	                                     ret	       628	rsparser.c	FUNCTION_22
0x4000079	          0x488b06	                    mov rax, qword [rsi]	       619	rsparser.c	FUNCTION_22	IF_1
0x400007c	            0x8908	                    mov dword [rax], ecx	       619	rsparser.c	FUNCTION_22	IF_1
0x400007e	          0x488b06	                    mov rax, qword [rsi]	       620	rsparser.c	FUNCTION_22	IF_1
0x4000081	    0xc74004440000	               mov dword [rax + 4], 0x44	       620	rsparser.c	FUNCTION_22	IF_1
0x4000088	            0x8b07	                    mov eax, dword [rdi]	       621	rsparser.c	FUNCTION_22	IF_1	IF_2
0x400008a	            0x85c0	                           test eax, eax	       621	rsparser.c	FUNCTION_22	IF_1	IF_2
0x400008c	            0x750a	                           jne 0x4000098	       621	rsparser.c	FUNCTION_22	IF_1	IF_2
0x400008e	         0xfb65708	               movzx edx, byte [rdi + 8]	       623	rsparser.c	FUNCTION_22	IF_1	IF_2
0x4000092	          0x488b06	                    mov rax, qword [rsi]	       622	rsparser.c	FUNCTION_22	IF_1	IF_2
0x4000095	          0x885008	                  mov byte [rax + 8], dl	       622	rsparser.c	FUNCTION_22	IF_1	IF_2
0x4000098	        0x48830644	                   add qword [rsi], 0x44	       624	rsparser.c	FUNCTION_22	IF_1
0x400009c	            0x31c0	                            xor eax, eax	       628	rsparser.c	FUNCTION_22
0x400009e	              0xc3	                                     ret	       628	rsparser.c	FUNCTION_22
pnpacpi_parse_resource_option_data	ELSE,0:DO,0:FOR,0:functions,0:CALL,4:WHILE,0:IF,2:SWITCH,0	44
0x40003c6	              0x53	                                push rbx	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003c7	             0x90f	                     or dword [rdi], ecx	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003c9	            0xb673	                            mov dh, 0x73	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003cb	           0x84889	                or byte [rax - 0x77], cl	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003ce	              0xef	                             out dx, eax	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003cf	         0xfb64b0a	            movzx ecx, byte [rbx + 0xa] 	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003d3	      0xe8c8fcffff	                      call sym.dma_flags	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003d8	         0xfb6730c	            movzx esi, byte [rbx + 0xc] 	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003dc	            0x89c2	                            mov edx, eax	       244	rsparser.c	FUNCTION_6	SWITCH_1	IF_10	CALL_19
0x40003de	          0x4889ef	                            mov rdi, rbp	       248	rsparser.c	FUNCTION_6	SWITCH_1	CALL_20
0x40003e1	      0xe800000000	                          call 0x40003e6	       248	rsparser.c	FUNCTION_6	SWITCH_1	CALL_20
0x40003e6	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x40003e8	      0xe957feffff	                           jmp 0x4000244	       249	rsparser.c	FUNCTION_6	SWITCH_1
0x40003ed	    0x48c7c6000000	                              mov rsi, 0	       203	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_9
0x40003f4	          0x4889ef	                            mov rdi, rbp	       203	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_9
0x40003f7	      0xe800000000	                          call 0x40003fc	       203	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4	CALL_9
0x40003fc	    0x83a54c030000	     and dword [rbp + 0x34c], 0xfffffffd	       205	rsparser.c	FUNCTION_6	IF_2	IF_3	IF_4
0x4000403	            0x31c0	                            xor eax, eax	       208	rsparser.c	FUNCTION_6	IF_2
0x4000405	      0xe93afeffff	                           jmp 0x4000244	       208	rsparser.c	FUNCTION_6	IF_2
0x400040a	    0x48c7c6000000	                              mov rsi, 0	       271	rsparser.c	FUNCTION_6	SWITCH_1	CALL_22
0x4000411	          0x4889ef	                            mov rdi, rbp	       271	rsparser.c	FUNCTION_6	SWITCH_1	CALL_22
0x4000414	      0xe800000000	                          call 0x4000419	       271	rsparser.c	FUNCTION_6	SWITCH_1	CALL_22
0x4000419	      0xb801000000	                              mov eax, 1	       273	rsparser.c	FUNCTION_6	SWITCH_1
0x400041e	      0xe921feffff	                           jmp 0x4000244	       273	rsparser.c	FUNCTION_6	SWITCH_1
0x4000423	      0xba00000010	                     mov edx, 0x10000000	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x4000428	            0x31f6	                            xor esi, esi	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x400042a	          0x4889ef	                            mov rdi, rbp	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x400042d	      0xe800000000	                          call 0x4000432	       225	rsparser.c	FUNCTION_6	ELSE_3	IF_7	CALL_14
0x4000432	            0x31c0	                            xor eax, eax	       226	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000434	      0xe90bfeffff	                           jmp 0x4000244	       226	rsparser.c	FUNCTION_6	ELSE_3	IF_7
0x4000439	      0xba10000000	                           mov edx, 0x10	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x400043e	    0x48c7c6000000	                              mov rsi, 0	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4000445	          0x4889ef	                            mov rdi, rbp	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4000448	      0xe800000000	                          call 0x400044d	       148	rsparser.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x400044d	            0x31c0	                            xor eax, eax	       276	rsparser.c	FUNCTION_6
0x400044f	      0xe9f0fdffff	                           jmp 0x4000244	       276	rsparser.c	FUNCTION_6
0x4000454	      0xe800000000	                          call 0x4000459	       277	rsparser.c	FUNCTION_6
0x4000459	     0xf1f80000000	                         nop dword [rax]	       277	rsparser.c	FUNCTION_6
0x4000460	              0x55	                                push rbp	       280	rsparser.c	FUNCTION_7
0x4000461	              0x53	                                push rbx	       280	rsparser.c	FUNCTION_7
0x4000462	          0x4889fb	                            mov rbx, rdi	       280	rsparser.c	FUNCTION_7
0x4000465	        0x4883ec08	                              sub rsp, 8	       280	rsparser.c	FUNCTION_7
0x4000469	              0x48	                                 invalid	       282	rsparser.c	FUNCTION_7
0x400046a	              0x8b	                                 invalid	       282	rsparser.c	FUNCTION_7
