acpi_rs_encode_bitmask	IF,0:functions,0:CALL,1:FOR,1:SWITCH,0:WHILE,0:ELSE,0:DO,0	13
0x400005f	            0x31d2	                            xor edx, edx	        71	rsutils.c	FUNCTION_2	FOR_1
0x4000061	            0x31c0	                            xor eax, eax	        71	rsutils.c	FUNCTION_2	FOR_1
0x4000063	        0x400fb6f6	                          movzx esi, sil	        71	rsutils.c	FUNCTION_2	FOR_1
0x4000067	    0x41b801000000	                              mov r8d, 1	        72	rsutils.c	FUNCTION_2	FOR_1
0x400006d	            0x39d6	                            cmp esi, edx	        71	rsutils.c	FUNCTION_2	FOR_1
0x400006f	            0x7612	                           jbe 0x4000083	        71	rsutils.c	FUNCTION_2	FOR_1
0x4000071	         0xfb60c17	             movzx ecx, byte [rdi + rdx]	        72	rsutils.c	FUNCTION_2	FOR_1
0x4000075	          0x4589c1	                            mov r9d, r8d	        72	rsutils.c	FUNCTION_2	FOR_1
0x4000078	          0x48ffc2	                                 inc rdx	        72	rsutils.c	FUNCTION_2	FOR_1
0x400007b	          0x41d3e1	                             shl r9d, cl	        72	rsutils.c	FUNCTION_2	FOR_1
0x400007e	          0x4409c8	                             or eax, r9d	        72	rsutils.c	FUNCTION_2	FOR_1
0x4000081	            0xebea	                           jmp 0x400006d	        72	rsutils.c	FUNCTION_2	FOR_1
0x4000083	              0xc3	                                     ret	        76	rsutils.c	FUNCTION_2
acpi_rs_get_crs_method_data	IF,1:functions,0:CALL,7:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	26
0x4000232	              0x53	                                push rbx	       485	rsutils.c	FUNCTION_10
0x4000233	      0xba04000000	                              mov edx, 4	       495	rsutils.c	FUNCTION_10
0x4000238	          0x4889f3	                            mov rbx, rsi	       485	rsutils.c	FUNCTION_10
0x400023b	    0x48c7c6000000	                              mov rsi, 0	       495	rsutils.c	FUNCTION_10
0x4000242	        0x4883ec10	                           sub rsp, 0x10	       485	rsutils.c	FUNCTION_10
0x4000246	          0x4889e1	                            mov rcx, rsp	       495	rsutils.c	FUNCTION_10
0x4000249	    0x65488b042528	                mov rax, qword gs:[0x28]	       485	rsutils.c	FUNCTION_10
0x4000252	      0x4889442408	                mov qword [rsp + 8], rax	       485	rsutils.c	FUNCTION_10
0x4000257	            0x31c0	                            xor eax, eax	       485	rsutils.c	FUNCTION_10
0x4000259	      0xe800000000	                          call 0x400025e	       495	rsutils.c	FUNCTION_10
0x400025e	            0x85c0	                           test eax, eax	       498	rsutils.c	FUNCTION_10	IF_1	CALL_3
0x4000260	            0x7519	                           jne 0x400027b	       498	rsutils.c	FUNCTION_10	IF_1	CALL_3
0x4000262	        0x488b3c24	                    mov rdi, qword [rsp]	       507	rsutils.c	FUNCTION_10	CALL_5
0x4000266	          0x4889de	                            mov rsi, rbx	       507	rsutils.c	FUNCTION_10	CALL_5
0x4000269	      0xe800000000	                          call 0x400026e	       507	rsutils.c	FUNCTION_10	CALL_5
0x400026e	        0x488b3c24	                    mov rdi, qword [rsp]	       511	rsutils.c	FUNCTION_10	CALL_6
0x4000272	            0x89c3	                            mov ebx, eax	       507	rsutils.c	FUNCTION_10	CALL_5
0x4000274	      0xe800000000	                          call 0x4000279	       511	rsutils.c	FUNCTION_10	CALL_6
0x4000279	            0x89d8	                            mov eax, ebx	       512	rsutils.c	FUNCTION_10	CALL_7
0x400027b	      0x488b542408	                mov rdx, qword [rsp + 8]	       513	rsutils.c	FUNCTION_10
0x4000280	    0x654833142528	                xor rdx, qword gs:[0x28]	       513	rsutils.c	FUNCTION_10
0x4000289	            0x7405	                            je 0x4000290	       513	rsutils.c	FUNCTION_10
0x400028b	      0xe800000000	                          call 0x4000290	       513	rsutils.c	FUNCTION_10
0x4000290	        0x4883c410	                           add rsp, 0x10	       513	rsutils.c	FUNCTION_10
0x4000294	              0x5b	                                 pop rbx	       513	rsutils.c	FUNCTION_10
0x4000295	              0xc3	                                     ret	       513	rsutils.c	FUNCTION_10
acpi_rs_get_aei_method_data	IF,1:functions,0:CALL,7:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	26
0x40002fa	              0x53	                                push rbx	       587	rsutils.c	FUNCTION_12
0x40002fb	      0xba04000000	                              mov edx, 4	       597	rsutils.c	FUNCTION_12
0x4000300	          0x4889f3	                            mov rbx, rsi	       587	rsutils.c	FUNCTION_12
0x4000303	    0x48c7c6000000	                              mov rsi, 0	       597	rsutils.c	FUNCTION_12
0x400030a	        0x4883ec10	                           sub rsp, 0x10	       587	rsutils.c	FUNCTION_12
0x400030e	          0x4889e1	                            mov rcx, rsp	       597	rsutils.c	FUNCTION_12
0x4000311	    0x65488b042528	                mov rax, qword gs:[0x28]	       587	rsutils.c	FUNCTION_12
0x400031a	      0x4889442408	                mov qword [rsp + 8], rax	       587	rsutils.c	FUNCTION_12
0x400031f	            0x31c0	                            xor eax, eax	       587	rsutils.c	FUNCTION_12
0x4000321	      0xe800000000	                          call 0x4000326	       597	rsutils.c	FUNCTION_12
0x4000326	            0x85c0	                           test eax, eax	       600	rsutils.c	FUNCTION_12	IF_1	CALL_3
0x4000328	            0x7519	                           jne 0x4000343	       600	rsutils.c	FUNCTION_12	IF_1	CALL_3
0x400032a	        0x488b3c24	                    mov rdi, qword [rsp]	       609	rsutils.c	FUNCTION_12	CALL_5
0x400032e	          0x4889de	                            mov rsi, rbx	       609	rsutils.c	FUNCTION_12	CALL_5
0x4000331	      0xe800000000	                          call 0x4000336	       609	rsutils.c	FUNCTION_12	CALL_5
0x4000336	        0x488b3c24	                    mov rdi, qword [rsp]	       613	rsutils.c	FUNCTION_12	CALL_6
0x400033a	            0x89c3	                            mov ebx, eax	       609	rsutils.c	FUNCTION_12	CALL_5
0x400033c	      0xe800000000	                          call 0x4000341	       613	rsutils.c	FUNCTION_12	CALL_6
0x4000341	            0x89d8	                            mov eax, ebx	       614	rsutils.c	FUNCTION_12	CALL_7
0x4000343	      0x488b542408	                mov rdx, qword [rsp + 8]	       615	rsutils.c	FUNCTION_12
0x4000348	    0x654833142528	                xor rdx, qword gs:[0x28]	       615	rsutils.c	FUNCTION_12
0x4000351	            0x7405	                            je 0x4000358	       615	rsutils.c	FUNCTION_12
0x4000353	      0xe800000000	                          call 0x4000358	       615	rsutils.c	FUNCTION_12
0x4000358	        0x4883c410	                           add rsp, 0x10	       615	rsutils.c	FUNCTION_12
0x400035c	              0x5b	                                 pop rbx	       615	rsutils.c	FUNCTION_12
0x400035d	              0xc3	                                     ret	       615	rsutils.c	FUNCTION_12
acpi_rs_get_resource_source	IF,2:functions,0:CALL,9:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	47
0x4000111	           0xfb7c6	                           movzx eax, si	       288	rsutils.c	FUNCTION_7
0x4000114	           0xfb7ff	                           movzx edi, di	       305	rsutils.c	FUNCTION_7	IF_1
0x4000117	           0xfb7f6	                           movzx esi, si	       305	rsutils.c	FUNCTION_7	IF_1
0x400011a	          0x83c703	                              add edi, 3	       305	rsutils.c	FUNCTION_7	IF_1
0x400011d	            0xffc6	                                 inc esi	       305	rsutils.c	FUNCTION_7	IF_1
0x400011f	            0x39f7	                            cmp edi, esi	       305	rsutils.c	FUNCTION_7	IF_1
0x4000121	            0x7664	                           jbe 0x4000187	       305	rsutils.c	FUNCTION_7	IF_1
0x4000123	          0x4801c1	                            add rcx, rax	       296	rsutils.c	FUNCTION_7	CALL_2
0x4000126	          0x4d85c0	                             test r8, r8	       312	rsutils.c	FUNCTION_7	IF_1	IF_2
0x4000129	            0x8a01	                      mov al, byte [rcx]	       309	rsutils.c	FUNCTION_7	IF_1
0x400012b	            0x8802	                      mov byte [rdx], al	       309	rsutils.c	FUNCTION_7	IF_1
0x400012d	            0x7406	                            je 0x4000135	       312	rsutils.c	FUNCTION_7	IF_1	IF_2
0x400012f	        0x4c894203	                 mov qword [rdx + 3], r8	       311	rsutils.c	FUNCTION_7	IF_1
0x4000133	            0xeb08	                           jmp 0x400013d	       311	rsutils.c	FUNCTION_7	IF_1
0x4000135	        0x488d420b	                    lea rax, [rdx + 0xb]	       317	rsutils.c	FUNCTION_7	IF_1	IF_2
0x4000139	        0x48894203	                mov qword [rdx + 3], rax	       317	rsutils.c	FUNCTION_7	IF_1	IF_2
0x400013d	        0x4c8d4101	                       lea r8, [rcx + 1]	       330	rsutils.c	FUNCTION_7	IF_1	CALL_5
0x4000141	            0x31c0	                            xor eax, eax	       330	rsutils.c	FUNCTION_7	IF_1	CALL_5
0x4000143	        0x4883c9ff	              or rcx, 0xffffffffffffffff	       330	rsutils.c	FUNCTION_7	IF_1	CALL_5
0x4000147	          0x4c89c7	                             mov rdi, r8	       330	rsutils.c	FUNCTION_7	IF_1	CALL_5
0x400014a	            0xf2ae	              repne scasb al, byte [rdi]	       330	rsutils.c	FUNCTION_7	IF_1	CALL_5
0x400014c	        0x488b7a03	                mov rdi, qword [rdx + 3]	       335	rsutils.c	FUNCTION_7	IF_1	CALL_7
0x4000150	          0x4889ce	                            mov rsi, rcx	       330	rsutils.c	FUNCTION_7	IF_1	CALL_5
0x4000153	          0x48f7d6	                                 not rsi	       330	rsutils.c	FUNCTION_7	IF_1	CALL_5
0x4000156	          0x8d7607	                      lea esi, [rsi + 7]	       333	rsutils.c	FUNCTION_7	IF_1	CALL_6
0x4000159	          0x83e6f8	                     and esi, 0xfffffff8	       333	rsutils.c	FUNCTION_7	IF_1	CALL_6
0x400015c	            0x89f1	                            mov ecx, esi	       335	rsutils.c	FUNCTION_7	IF_1	CALL_7
0x400015e	            0xf3aa	                rep stosb byte [rdi], al	       335	rsutils.c	FUNCTION_7	IF_1	CALL_7
0x4000160	            0x31c0	                            xor eax, eax	       252	rsutils.c	FUNCTION_6	FOR_1
0x4000162	        0x488b7a03	                mov rdi, qword [rdx + 3]	       340	rsutils.c	FUNCTION_7	IF_1	CALL_8
0x4000166	           0xfb7c8	                           movzx ecx, ax	       252	rsutils.c	FUNCTION_6	FOR_1
0x4000169	        0x458a0c08	                mov r9b, byte [r8 + rcx]	       252	rsutils.c	FUNCTION_6	FOR_1
0x400016d	          0x4584c9	                           test r9b, r9b	       252	rsutils.c	FUNCTION_6	FOR_1
0x4000170	            0x7408	                            je 0x400017a	       252	rsutils.c	FUNCTION_6	FOR_1
0x4000172	        0x44880c0f	               mov byte [rdi + rcx], r9b	       253	rsutils.c	FUNCTION_6	FOR_1
0x4000176	            0xffc0	                                 inc eax	       252	rsutils.c	FUNCTION_6	FOR_1
0x4000178	            0xebec	                           jmp 0x4000166	       252	rsutils.c	FUNCTION_6	FOR_1
0x400017a	            0xffc0	                                 inc eax	       339	rsutils.c	FUNCTION_7	IF_1
0x400017c	        0xc6040f00	                 mov byte [rdi + rcx], 0	       256	rsutils.c	FUNCTION_6
0x4000180	        0x66894201	                  mov word [rdx + 1], ax	       339	rsutils.c	FUNCTION_7	IF_1
0x4000184	            0x89f0	                            mov eax, esi	       344	rsutils.c	FUNCTION_7	IF_1
0x4000186	              0xc3	                                     ret	       344	rsutils.c	FUNCTION_7	IF_1
0x4000187	          0xc60200	                       mov byte [rdx], 0	       349	rsutils.c	FUNCTION_7
0x400018a	    0x66c742010000	                   mov word [rdx + 1], 0	       350	rsutils.c	FUNCTION_7
0x4000190	            0x31c0	                            xor eax, eax	       352	rsutils.c	FUNCTION_7
0x4000192	    0x48c742030000	                  mov qword [rdx + 3], 0	       351	rsutils.c	FUNCTION_7
0x400019a	              0xc3	                                     ret	       353	rsutils.c	FUNCTION_7
acpi_rs_set_resource_source	IF,1:functions,0:CALL,4:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	19
0x400019b	      0x66837a0100	                   cmp word [rdx + 1], 0	       386	rsutils.c	FUNCTION_8	IF_1
0x40001a0	              0x55	                                push rbp	       376	rsutils.c	FUNCTION_8
0x40001a1	              0x53	                                push rbx	       376	rsutils.c	FUNCTION_8
0x40001a2	           0xfb7de	                           movzx ebx, si	       382	rsutils.c	FUNCTION_8
0x40001a5	            0x7422	                            je 0x40001c9	       386	rsutils.c	FUNCTION_8	IF_1
0x40001a7	           0xfb7c6	                           movzx eax, si	       386	rsutils.c	FUNCTION_8	IF_1
0x40001aa	          0x4889d5	                            mov rbp, rdx	       386	rsutils.c	FUNCTION_8	IF_1
0x40001ad	          0x4801c7	                            add rdi, rax	       390	rsutils.c	FUNCTION_8	IF_1	CALL_2
0x40001b0	            0x8a02	                      mov al, byte [rdx]	       394	rsutils.c	FUNCTION_8	IF_1
0x40001b2	          0x48ffc7	                                 inc rdi	       398	rsutils.c	FUNCTION_8	IF_1	CALL_4
0x40001b5	          0x8847ff	                  mov byte [rdi - 1], al	       394	rsutils.c	FUNCTION_8	IF_1
0x40001b8	        0x488b7203	                mov rsi, qword [rdx + 3]	       398	rsutils.c	FUNCTION_8	IF_1	CALL_4
0x40001bc	      0xe800000000	                          call 0x40001c1	       398	rsutils.c	FUNCTION_8	IF_1	CALL_4
0x40001c1	         0xfb74501	               movzx eax, word [rbp + 1]	       405	rsutils.c	FUNCTION_8	IF_1
0x40001c5	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	       405	rsutils.c	FUNCTION_8	IF_1
0x40001c9	            0x89d8	                            mov eax, ebx	       412	rsutils.c	FUNCTION_8
0x40001cb	              0x5b	                                 pop rbx	       412	rsutils.c	FUNCTION_8
0x40001cc	              0x5d	                                 pop rbp	       412	rsutils.c	FUNCTION_8
0x40001cd	              0xc3	                                     ret	       412	rsutils.c	FUNCTION_8
acpi_rs_get_method_data	IF,1:functions,0:CALL,8:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	25
0x400035e	              0x53	                                push rbx	       639	rsutils.c	FUNCTION_13
0x400035f	          0x4889d3	                            mov rbx, rdx	       639	rsutils.c	FUNCTION_13
0x4000362	      0xba04000000	                              mov edx, 4	       649	rsutils.c	FUNCTION_13
0x4000367	        0x4883ec10	                           sub rsp, 0x10	       639	rsutils.c	FUNCTION_13
0x400036b	          0x4889e1	                            mov rcx, rsp	       649	rsutils.c	FUNCTION_13
0x400036e	    0x65488b042528	                mov rax, qword gs:[0x28]	       639	rsutils.c	FUNCTION_13
0x4000377	      0x4889442408	                mov qword [rsp + 8], rax	       639	rsutils.c	FUNCTION_13
0x400037c	            0x31c0	                            xor eax, eax	       639	rsutils.c	FUNCTION_13
0x400037e	      0xe800000000	                          call 0x4000383	       649	rsutils.c	FUNCTION_13
0x4000383	            0x85c0	                           test eax, eax	       653	rsutils.c	FUNCTION_13	IF_1	CALL_4
0x4000385	            0x7519	                           jne 0x40003a0	       653	rsutils.c	FUNCTION_13	IF_1	CALL_4
0x4000387	        0x488b3c24	                    mov rdi, qword [rsp]	       662	rsutils.c	FUNCTION_13	CALL_6
0x400038b	          0x4889de	                            mov rsi, rbx	       662	rsutils.c	FUNCTION_13	CALL_6
0x400038e	      0xe800000000	                          call 0x4000393	       662	rsutils.c	FUNCTION_13	CALL_6
0x4000393	        0x488b3c24	                    mov rdi, qword [rsp]	       666	rsutils.c	FUNCTION_13	CALL_7
0x4000397	            0x89c3	                            mov ebx, eax	       662	rsutils.c	FUNCTION_13	CALL_6
0x4000399	      0xe800000000	                          call 0x400039e	       666	rsutils.c	FUNCTION_13	CALL_7
0x400039e	            0x89d8	                            mov eax, ebx	       667	rsutils.c	FUNCTION_13	CALL_8
0x40003a0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       668	rsutils.c	FUNCTION_13
0x40003a5	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       668	rsutils.c	FUNCTION_13
0x40003ae	            0x7405	                            je 0x40003b5	       668	rsutils.c	FUNCTION_13
0x40003b0	      0xe800000000	                          call 0x40003b5	       668	rsutils.c	FUNCTION_13
0x40003b5	        0x4883c410	                           add rsp, 0x10	       668	rsutils.c	FUNCTION_13
0x40003b9	              0x5b	                                 pop rbx	       668	rsutils.c	FUNCTION_13
0x40003ba	              0xc3	                                     ret	       668	rsutils.c	FUNCTION_13
acpi_rs_get_prs_method_data	IF,1:functions,0:CALL,7:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	26
0x4000296	              0x53	                                push rbx	       536	rsutils.c	FUNCTION_11
0x4000297	      0xba04000000	                              mov edx, 4	       546	rsutils.c	FUNCTION_11
0x400029c	          0x4889f3	                            mov rbx, rsi	       536	rsutils.c	FUNCTION_11
0x400029f	    0x48c7c6000000	                              mov rsi, 0	       546	rsutils.c	FUNCTION_11
0x40002a6	        0x4883ec10	                           sub rsp, 0x10	       536	rsutils.c	FUNCTION_11
0x40002aa	          0x4889e1	                            mov rcx, rsp	       546	rsutils.c	FUNCTION_11
0x40002ad	    0x65488b042528	                mov rax, qword gs:[0x28]	       536	rsutils.c	FUNCTION_11
0x40002b6	      0x4889442408	                mov qword [rsp + 8], rax	       536	rsutils.c	FUNCTION_11
0x40002bb	            0x31c0	                            xor eax, eax	       536	rsutils.c	FUNCTION_11
0x40002bd	      0xe800000000	                          call 0x40002c2	       546	rsutils.c	FUNCTION_11
0x40002c2	            0x85c0	                           test eax, eax	       549	rsutils.c	FUNCTION_11	IF_1	CALL_3
0x40002c4	            0x7519	                           jne 0x40002df	       549	rsutils.c	FUNCTION_11	IF_1	CALL_3
0x40002c6	        0x488b3c24	                    mov rdi, qword [rsp]	       558	rsutils.c	FUNCTION_11	CALL_5
0x40002ca	          0x4889de	                            mov rsi, rbx	       558	rsutils.c	FUNCTION_11	CALL_5
0x40002cd	      0xe800000000	                          call 0x40002d2	       558	rsutils.c	FUNCTION_11	CALL_5
0x40002d2	        0x488b3c24	                    mov rdi, qword [rsp]	       562	rsutils.c	FUNCTION_11	CALL_6
0x40002d6	            0x89c3	                            mov ebx, eax	       558	rsutils.c	FUNCTION_11	CALL_5
0x40002d8	      0xe800000000	                          call 0x40002dd	       562	rsutils.c	FUNCTION_11	CALL_6
0x40002dd	            0x89d8	                            mov eax, ebx	       563	rsutils.c	FUNCTION_11	CALL_7
0x40002df	      0x488b542408	                mov rdx, qword [rsp + 8]	       564	rsutils.c	FUNCTION_11
0x40002e4	    0x654833142528	                xor rdx, qword gs:[0x28]	       564	rsutils.c	FUNCTION_11
0x40002ed	            0x7405	                            je 0x40002f4	       564	rsutils.c	FUNCTION_11
0x40002ef	      0xe800000000	                          call 0x40002f4	       564	rsutils.c	FUNCTION_11
0x40002f4	        0x4883c410	                           add rsp, 0x10	       564	rsutils.c	FUNCTION_11
0x40002f8	              0x5b	                                 pop rbx	       564	rsutils.c	FUNCTION_11
0x40002f9	              0xc3	                                     ret	       564	rsutils.c	FUNCTION_11
acpi_rs_move_data	IF,0:functions,0:CALL,11:FOR,1:SWITCH,1:WHILE,0:ELSE,0:DO,0	26
0x4000084	          0x83e915	                           sub ecx, 0x15	       105	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000087	          0x4989f8	                             mov r8, rdi	        97	rsutils.c	FUNCTION_3
0x400008a	            0x31c0	                            xor eax, eax	       104	rsutils.c	FUNCTION_3	FOR_1
0x400008c	           0xfb7fa	                           movzx edi, dx	       104	rsutils.c	FUNCTION_3	FOR_1
0x400008f	        0x440fb6c9	                           movzx r9d, cl	       105	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000093	            0x39c7	                            cmp edi, eax	       104	rsutils.c	FUNCTION_3	FOR_1
0x4000095	            0x763e	                           jbe 0x40000d5	       104	rsutils.c	FUNCTION_3	FOR_1
0x4000097	          0x80f907	                               cmp cl, 7	       105	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x400009a	            0x7739	                            ja 0x40000d5	       105	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x400009c	    0x4e8b14cd0000	                   mov r10, qword [r9*8]	       105	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000a4	      0xe900000000	                           jmp 0x40000a9	       105	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000a9	           0xfb7ca	                           movzx ecx, dx	       115	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x40000ac	          0x4c89c7	                             mov rdi, r8	       115	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x40000af	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       115	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x40000b1	              0xc3	                                     ret	       116	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000b2	      0x66448b1446	            mov r10w, word [rsi + rax*2]	       126	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x40000b7	      0x6645891440	             mov word [r8 + rax*2], r10w	       126	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x40000bc	            0xeb12	                           jmp 0x40000d0	       128	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000be	        0x448b1486	           mov r10d, dword [rsi + rax*4]	       132	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40000c2	        0x45891480	            mov dword [r8 + rax*4], r10d	       132	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40000c6	            0xeb08	                           jmp 0x40000d0	       134	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000c8	        0x4c8b14c6	            mov r10, qword [rsi + rax*8]	       138	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_10
0x40000cc	        0x4d8914c0	             mov qword [r8 + rax*8], r10	       138	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_10
0x40000d0	          0x48ffc0	                                 inc rax	       138	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_10
0x40000d3	            0xebbe	                           jmp 0x4000093	       138	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_10
0x40000d5	              0xc3	                                     ret	       138	rsutils.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_10
acpi_rs_set_resource_length	IF,1:functions,0:CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0	20
0x40000d6	              0x55	                                push rbp	       169	rsutils.c	FUNCTION_4
0x40000d7	              0x53	                                push rbx	       169	rsutils.c	FUNCTION_4
0x40000d8	            0x89fb	                            mov ebx, edi	       169	rsutils.c	FUNCTION_4
0x40000da	          0x4889f7	                            mov rdi, rsi	       177	rsutils.c	FUNCTION_4	CALL_2
0x40000dd	          0x4889f5	                            mov rbp, rsi	       169	rsutils.c	FUNCTION_4
0x40000e0	      0xe800000000	                          call 0x40000e5	       177	rsutils.c	FUNCTION_4	CALL_2
0x40000e5	            0x89df	                            mov edi, ebx	       176	rsutils.c	FUNCTION_4
0x40000e7	           0xfb6c0	                           movzx eax, al	       176	rsutils.c	FUNCTION_4
0x40000ea	            0x29c7	                            sub edi, eax	       176	rsutils.c	FUNCTION_4
0x40000ec	          0x8a4500	                      mov al, byte [rbp]	       181	rsutils.c	FUNCTION_4	IF_1
0x40000ef	            0x84c0	                             test al, al	       181	rsutils.c	FUNCTION_4	IF_1
0x40000f1	            0x7906	                           jns 0x40000f9	       181	rsutils.c	FUNCTION_4	IF_1
0x40000f3	        0x66897d01	                  mov word [rbp + 1], di	       185	rsutils.c	FUNCTION_4	IF_1	CALL_3
0x40000f7	            0xeb09	                           jmp 0x4000102	       185	rsutils.c	FUNCTION_4	IF_1	CALL_3
0x40000f9	          0x83e0f8	                     and eax, 0xfffffff8	       192	rsutils.c	FUNCTION_4	ELSE_1
0x40000fc	             0x9c7	                             or edi, eax	       192	rsutils.c	FUNCTION_4	ELSE_1
0x40000fe	        0x40887d00	                     mov byte [rbp], dil	       192	rsutils.c	FUNCTION_4	ELSE_1
0x4000102	              0x5b	                                 pop rbx	       197	rsutils.c	FUNCTION_4
0x4000103	              0x5d	                                 pop rbp	       197	rsutils.c	FUNCTION_4
0x4000104	              0xc3	                                     ret	       197	rsutils.c	FUNCTION_4
acpi_rs_decode_bitmask	IF,1:functions,0:CALL,1:FOR,1:SWITCH,0:WHILE,0:ELSE,0:DO,0	13
0x4000040	            0x31c0	                            xor eax, eax	        37	rsutils.c	FUNCTION_1	FOR_1
0x4000042	            0x31d2	                            xor edx, edx	        37	rsutils.c	FUNCTION_1	FOR_1
0x4000044	          0x6685ff	                             test di, di	        37	rsutils.c	FUNCTION_1	FOR_1
0x4000047	            0x7415	                            je 0x400005e	        37	rsutils.c	FUNCTION_1	FOR_1
0x4000049	        0x40f6c701	                             test dil, 1	        38	rsutils.c	FUNCTION_1	FOR_1	IF_1
0x400004d	            0x7408	                            je 0x4000057	        38	rsutils.c	FUNCTION_1	FOR_1	IF_1
0x400004f	           0xfb6c8	                           movzx ecx, al	        39	rsutils.c	FUNCTION_1	FOR_1	IF_1
0x4000052	            0xffc0	                                 inc eax	        40	rsutils.c	FUNCTION_1	FOR_1	IF_1
0x4000054	          0x88140e	                mov byte [rsi + rcx], dl	        39	rsutils.c	FUNCTION_1	FOR_1	IF_1
0x4000057	          0x66d1ef	                               shr di, 1	        43	rsutils.c	FUNCTION_1	FOR_1
0x400005a	            0xffc2	                                 inc edx	        37	rsutils.c	FUNCTION_1	FOR_1
0x400005c	            0xebe6	                           jmp 0x4000044	        37	rsutils.c	FUNCTION_1	FOR_1
0x400005e	              0xc3	                                     ret	        47	rsutils.c	FUNCTION_1
acpi_rs_get_prt_method_data	IF,1:functions,0:CALL,7:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	26
0x40001ce	              0x53	                                push rbx	       435	rsutils.c	FUNCTION_9
0x40001cf	      0xba08000000	                              mov edx, 8	       445	rsutils.c	FUNCTION_9
0x40001d4	          0x4889f3	                            mov rbx, rsi	       435	rsutils.c	FUNCTION_9
0x40001d7	    0x48c7c6000000	                              mov rsi, 0	       445	rsutils.c	FUNCTION_9
0x40001de	        0x4883ec10	                           sub rsp, 0x10	       435	rsutils.c	FUNCTION_9
0x40001e2	          0x4889e1	                            mov rcx, rsp	       445	rsutils.c	FUNCTION_9
0x40001e5	    0x65488b042528	                mov rax, qword gs:[0x28]	       435	rsutils.c	FUNCTION_9
0x40001ee	      0x4889442408	                mov qword [rsp + 8], rax	       435	rsutils.c	FUNCTION_9
0x40001f3	            0x31c0	                            xor eax, eax	       435	rsutils.c	FUNCTION_9
0x40001f5	      0xe800000000	                          call 0x40001fa	       445	rsutils.c	FUNCTION_9
0x40001fa	            0x85c0	                           test eax, eax	       448	rsutils.c	FUNCTION_9	IF_1	CALL_3
0x40001fc	            0x7519	                           jne 0x4000217	       448	rsutils.c	FUNCTION_9	IF_1	CALL_3
0x40001fe	        0x488b3c24	                    mov rdi, qword [rsp]	       456	rsutils.c	FUNCTION_9	CALL_5
0x4000202	          0x4889de	                            mov rsi, rbx	       456	rsutils.c	FUNCTION_9	CALL_5
0x4000205	      0xe800000000	                          call 0x400020a	       456	rsutils.c	FUNCTION_9	CALL_5
0x400020a	        0x488b3c24	                    mov rdi, qword [rsp]	       460	rsutils.c	FUNCTION_9	CALL_6
0x400020e	            0x89c3	                            mov ebx, eax	       456	rsutils.c	FUNCTION_9	CALL_5
0x4000210	      0xe800000000	                          call 0x4000215	       460	rsutils.c	FUNCTION_9	CALL_6
0x4000215	            0x89d8	                            mov eax, ebx	       461	rsutils.c	FUNCTION_9	CALL_7
0x4000217	      0x488b542408	                mov rdx, qword [rsp + 8]	       462	rsutils.c	FUNCTION_9
0x400021c	    0x654833142528	                xor rdx, qword gs:[0x28]	       462	rsutils.c	FUNCTION_9
0x4000225	            0x7405	                            je 0x400022c	       462	rsutils.c	FUNCTION_9
0x4000227	      0xe800000000	                          call 0x400022c	       462	rsutils.c	FUNCTION_9
0x400022c	        0x4883c410	                           add rsp, 0x10	       462	rsutils.c	FUNCTION_9
0x4000230	              0x5b	                                 pop rbx	       462	rsutils.c	FUNCTION_9
0x4000231	              0xc3	                                     ret	       462	rsutils.c	FUNCTION_9
acpi_rs_set_resource_header	IF,0:functions,0:CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	5
0x4000105	            0x89f0	                            mov eax, esi	       220	rsutils.c	FUNCTION_5
0x4000107	          0x40883a	                     mov byte [rdx], dil	       225	rsutils.c	FUNCTION_5
0x400010a	          0x4889d6	                            mov rsi, rdx	       229	rsutils.c	FUNCTION_5	CALL_2
0x400010d	            0x89c7	                            mov edi, eax	       229	rsutils.c	FUNCTION_5	CALL_2
0x400010f	            0xebc5	     jmp sym.acpi_rs_set_resource_length	       229	rsutils.c	FUNCTION_5	CALL_2
