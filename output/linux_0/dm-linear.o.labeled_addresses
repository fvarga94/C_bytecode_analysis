linear_status	ELSE,0:functions,0:SWITCH,1:WHILE,0:DO,0:CALL,1:IF,0:FOR,0	16
0x4000110	            0x85f6	                           test esi, esi	       121	dm-linear.c	FUNCTION_7	SWITCH_1
0x4000112	          0x4889c8	                            mov rax, rcx	       118	dm-linear.c	FUNCTION_7
0x4000115	            0x7428	                            je 0x400013f	       121	dm-linear.c	FUNCTION_7	SWITCH_1
0x4000117	          0x83fe01	                              cmp esi, 1	       121	dm-linear.c	FUNCTION_7	SWITCH_1
0x400011a	            0x7521	                           jne 0x400013d	       121	dm-linear.c	FUNCTION_7	SWITCH_1
0x400011c	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	       119	dm-linear.c	FUNCTION_7
0x4000120	          0x4489c6	                            mov esi, r8d	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x4000123	          0x4889c7	                            mov rdi, rax	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x4000126	          0x488b0a	                    mov rcx, qword [rdx]	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x4000129	        0x4c8b4208	                 mov r8, qword [rdx + 8]	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x400012d	    0x48c7c2000000	                              mov rdx, 0	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x4000134	        0x4883c114	                           add rcx, 0x14	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x4000138	      0xe900000000	                           jmp 0x400013d	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x400013d	            0xf3c3	                                     ret	       127	dm-linear.c	FUNCTION_7	SWITCH_1	CALL_1
0x400013f	          0xc60100	                       mov byte [rcx], 0	       123	dm-linear.c	FUNCTION_7	SWITCH_1
0x4000142	              0xc3	                                     ret	       124	dm-linear.c	FUNCTION_7	SWITCH_1
linear_map	ELSE,0:functions,0:SWITCH,0:WHILE,0:DO,0:CALL,1:IF,0:FOR,0	30
0x4000040	        0x488b4740	            mov rax, qword [rdi + 0x40] 	        90	dm-linear.c	FUNCTION_4
0x4000044	          0x488b10	                    mov rdx, qword [rax]	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000047	          0x488b12	                    mov rdx, qword [rdx]	        92	dm-linear.c	FUNCTION_4	CALL_1
0x400004a	    0x488b92800000	            mov rdx, qword [rdx + 0x80] 	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000051	        0x48395608	                cmp qword [rsi + 8], rdx	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000055	            0x7413	                            je 0x400006a	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000057	    0x66816614fffd	           and word [rsi + 0x14], 0xfdff	       272	bio.h	FUNCTION_26
0x400005d	          0x488b10	                    mov rdx, qword [rax]	       272	bio.h	FUNCTION_26
0x4000060	          0x488b12	                    mov rdx, qword [rdx]	       272	bio.h	FUNCTION_26
0x4000063	    0x488b92800000	            mov rdx, qword [rdx + 0x80] 	       272	bio.h	FUNCTION_26
0x400006a	        0x48895608	                mov qword [rsi + 8], rdx	        92	dm-linear.c	FUNCTION_4	CALL_1
0x400006e	          0x488b00	                    mov rax, qword [rax]	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000071	          0x488b00	                    mov rax, qword [rax]	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000074	         0xfb6406c	           movzx eax, byte [rax + 0x6c] 	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000078	          0x88461b	               mov byte [rsi + 0x1b], al	        92	dm-linear.c	FUNCTION_4	CALL_1
0x400007b	          0x8b4630	            mov eax, dword [rsi + 0x30] 	        93	dm-linear.c	FUNCTION_4	IF_1	CALL_3
0x400007e	          0xc1e809	                              shr eax, 9	        93	dm-linear.c	FUNCTION_4	IF_1	CALL_3
0x4000081	            0x85c0	                           test eax, eax	        93	dm-linear.c	FUNCTION_4	IF_1	CALL_3
0x4000083	            0x750c	                           jne 0x4000091	        93	dm-linear.c	FUNCTION_4	IF_1	CALL_3
0x4000085	        0x807e1006	                cmp byte [rsi + 0x10], 6	        93	dm-linear.c	FUNCTION_4	IF_1	CALL_3
0x4000089	            0x7406	                            je 0x4000091	        93	dm-linear.c	FUNCTION_4	IF_1	CALL_3
0x400008b	      0xb801000000	                              mov eax, 1	       103	dm-linear.c	FUNCTION_5
0x4000090	              0xc3	                                     ret	       103	dm-linear.c	FUNCTION_5
0x4000091	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	        85	dm-linear.c	FUNCTION_3	CALL_1
0x4000095	        0x488b4628	            mov rax, qword [rsi + 0x28] 	        94	dm-linear.c	FUNCTION_4	IF_1
0x4000099	        0x48034208	                add rax, qword [rdx + 8]	        94	dm-linear.c	FUNCTION_4	IF_1
0x400009d	        0x482b4710	             sub rax, qword [rdi + 0x10]	        94	dm-linear.c	FUNCTION_4	IF_1
0x40000a1	        0x48894628	             mov qword [rsi + 0x28], rax	        94	dm-linear.c	FUNCTION_4	IF_1
0x40000a5	      0xb801000000	                              mov eax, 1	       103	dm-linear.c	FUNCTION_5
0x40000aa	              0xc3	                                     ret	       103	dm-linear.c	FUNCTION_5
linear_iterate_devices	ELSE,0:functions,0:SWITCH,0:WHILE,0:DO,0:CALL,1:IF,0:FOR,0	7
0x40000f0	        0x488b4740	            mov rax, qword [rdi + 0x40] 	       152	dm-linear.c	FUNCTION_9
0x40000f4	          0x4989f1	                             mov r9, rsi	       151	dm-linear.c	FUNCTION_9
0x40000f7	          0x4989d0	                             mov r8, rdx	       151	dm-linear.c	FUNCTION_9
0x40000fa	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	       154	dm-linear.c	FUNCTION_9	CALL_1
0x40000fe	        0x488b5008	                mov rdx, qword [rax + 8]	       154	dm-linear.c	FUNCTION_9	CALL_1
0x4000102	          0x488b30	                    mov rsi, qword [rax]	       154	dm-linear.c	FUNCTION_9	CALL_1
0x4000105	      0xe900000000	                           jmp 0x400010a	       154	dm-linear.c	FUNCTION_9	CALL_1
linear_end_io	ELSE,0:functions,0:SWITCH,0:WHILE,0:DO,0:CALL,2:IF,1:FOR,0	11
0x4000150	          0x803a00	                       cmp byte [rdx], 0	       110	dm-linear.c	FUNCTION_6	IF_1	CALL_1
0x4000153	            0x7506	                           jne 0x400015b	       110	dm-linear.c	FUNCTION_6	IF_1	CALL_1
0x4000155	        0x807e1004	                cmp byte [rsi + 0x10], 4	       110	dm-linear.c	FUNCTION_6	IF_1	CALL_1
0x4000159	            0x7403	                            je 0x400015e	       110	dm-linear.c	FUNCTION_6	IF_1	CALL_1
0x400015b	            0x31c0	                            xor eax, eax	       114	dm-linear.c	FUNCTION_6
0x400015d	              0xc3	                                     ret	       114	dm-linear.c	FUNCTION_6
0x400015e	        0x488b4740	            mov rax, qword [rdi + 0x40] 	       111	dm-linear.c	FUNCTION_6	CALL_2
0x4000162	        0x488b5008	                mov rdx, qword [rax + 8]	       111	dm-linear.c	FUNCTION_6	CALL_2
0x4000166	      0xe800000000	                          call 0x400016b	       111	dm-linear.c	FUNCTION_6	CALL_2
0x400016b	            0x31c0	                            xor eax, eax	       114	dm-linear.c	FUNCTION_6
0x400016d	              0xc3	                                     ret	       114	dm-linear.c	FUNCTION_6
dm_linear_init	ELSE,0:functions,0:SWITCH,0:WHILE,0:DO,0:CALL,2:IF,1:FOR,0	11
0x4000040	        0x488b4740	            mov rax, qword [rdi + 0x40] 	        90	dm-linear.c	FUNCTION_4
0x4000044	          0x488b10	                    mov rdx, qword [rax]	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000047	          0x488b12	                    mov rdx, qword [rdx]	        92	dm-linear.c	FUNCTION_4	CALL_1
0x400004a	    0x488b92800000	            mov rdx, qword [rdx + 0x80] 	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000051	        0x48395608	                cmp qword [rsi + 8], rdx	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000055	            0x7413	                            je 0x400006a	        92	dm-linear.c	FUNCTION_4	CALL_1
0x4000057	    0x66816614fffd	           and word [rsi + 0x14], 0xfdff	       272	bio.h	FUNCTION_26
0x400005d	          0x488b10	                    mov rdx, qword [rax]	       272	bio.h	FUNCTION_26
0x4000060	          0x488b12	                    mov rdx, qword [rdx]	       272	bio.h	FUNCTION_26
0x4000063	              0x48	                                 invalid	       272	bio.h	FUNCTION_26
0x4000064	              0x8b	                                 invalid	       272	bio.h	FUNCTION_26
linear_prepare_ioctl	ELSE,0:functions,0:SWITCH,0:WHILE,0:DO,0:CALL,1:IF,1:FOR,0	15
0x40000b0	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	       135	dm-linear.c	FUNCTION_8
0x40000b4	          0x488b0a	                    mov rcx, qword [rdx]	       136	dm-linear.c	FUNCTION_8
0x40000b7	          0x488b01	                    mov rax, qword [rcx]	       138	dm-linear.c	FUNCTION_8
0x40000ba	          0x488906	                    mov qword [rsi], rax	       138	dm-linear.c	FUNCTION_8
0x40000bd	      0x48837a0800	                  cmp qword [rdx + 8], 0	       143	dm-linear.c	FUNCTION_8	IF_1
0x40000c2	      0xb801000000	                              mov eax, 1	       145	dm-linear.c	FUNCTION_8	IF_1
0x40000c7	            0x7519	                           jne 0x40000e2	       143	dm-linear.c	FUNCTION_8	IF_1
0x40000c9	          0x488b01	                    mov rax, qword [rcx]	       144	dm-linear.c	FUNCTION_8	IF_1	CALL_1
0x40000cc	        0x488b4008	                mov rax, qword [rax + 8]	       144	dm-linear.c	FUNCTION_8	IF_1	CALL_1
0x40000d0	        0x488b4050	            mov rax, qword [rax + 0x50] 	       145	dm-linear.c	FUNCTION_8	IF_1
0x40000d4	        0x48c1f809	                              sar rax, 9	       145	dm-linear.c	FUNCTION_8	IF_1
0x40000d8	        0x483b4718	            cmp rax, qword [rdi + 0x18] 	       145	dm-linear.c	FUNCTION_8	IF_1
0x40000dc	           0xf95c0	                                setne al	       145	dm-linear.c	FUNCTION_8	IF_1
0x40000df	           0xfb6c0	                           movzx eax, al	       145	dm-linear.c	FUNCTION_8	IF_1
0x40000e2	            0xf3c3	                                     ret	       147	dm-linear.c	FUNCTION_8
linear_dtr	ELSE,0:functions,0:SWITCH,0:WHILE,0:DO,0:CALL,2:IF,0:FOR,0	7
0x4000170	              0x53	                                push rbx	        74	dm-linear.c	FUNCTION_2
0x4000171	        0x488b5f40	            mov rbx, qword [rdi + 0x40] 	        75	dm-linear.c	FUNCTION_2
0x4000175	          0x488b33	                    mov rsi, qword [rbx]	        77	dm-linear.c	FUNCTION_2	CALL_1
0x4000178	      0xe800000000	                          call 0x400017d	        77	dm-linear.c	FUNCTION_2	CALL_1
0x400017d	          0x4889df	                            mov rdi, rbx	        78	dm-linear.c	FUNCTION_2	CALL_2
0x4000180	              0x5b	                                 pop rbx	        79	dm-linear.c	FUNCTION_2
0x4000181	      0xe900000000	                           jmp 0x4000186	        78	dm-linear.c	FUNCTION_2	CALL_2
dm_linear_exit	ELSE,0:functions,0:SWITCH,0:WHILE,0:DO,0:CALL,1:IF,0:FOR,0	2
0x40002c0	    0x48c7c7000000	                              mov rdi, 0	       221	dm-linear.c	FUNCTION_13	CALL_1
0x40002c7	      0xe900000000	                   jmp section_end..text	       221	dm-linear.c	FUNCTION_13	CALL_1
