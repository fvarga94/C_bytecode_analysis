acpi_ps_parse_loop	IF,26:FOR,0:SWITCH,1:WHILE,1:ELSE,1:DO,0:CALL,40:functions,0	352
0x4000040	            0x4157	                                push r15	       414	psloop.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	       414	psloop.c	FUNCTION_3
0x4000044	            0x4155	                                push r13	       414	psloop.c	FUNCTION_3
0x4000046	            0x4154	                                push r12	       414	psloop.c	FUNCTION_3
0x4000048	              0x55	                                push rbp	       414	psloop.c	FUNCTION_3
0x4000049	              0x53	                                push rbx	       414	psloop.c	FUNCTION_3
0x400004a	        0x4883ec28	                           sub rsp, 0x28	       414	psloop.c	FUNCTION_3
0x400004e	    0x65488b042528	                mov rax, qword gs:[0x28]	       414	psloop.c	FUNCTION_3
0x4000057	      0x4889442420	             mov qword [rsp + 0x20], rax	       414	psloop.c	FUNCTION_3
0x400005c	            0x31c0	                            xor eax, eax	       414	psloop.c	FUNCTION_3
0x400005e	    0x4883bfc80300	              cmp qword [rdi + 0x3c8], 0	       422	psloop.c	FUNCTION_3	IF_1
0x4000066	    0x48c744241000	               mov qword [rsp + 0x10], 0	       416	psloop.c	FUNCTION_3
0x400006f	      0xb801100000	                         mov eax, 0x1001	       423	psloop.c	FUNCTION_3	IF_1	CALL_2
0x4000074	     0xf8423050000	                            je 0x400059d	       422	psloop.c	FUNCTION_3	IF_1
0x400007a	        0xf6470902	                  test byte [rdi + 9], 2	       431	psloop.c	FUNCTION_3	IF_2
0x400007e	          0x4889fb	                            mov rbx, rdi	       431	psloop.c	FUNCTION_3	IF_2
0x4000081	        0x4c8d6730	                   lea r12, [rdi + 0x30]	       426	psloop.c	FUNCTION_3
0x4000085	    0xc74720000000	               mov dword [rdi + 0x20], 0	       427	psloop.c	FUNCTION_3
0x400008c	     0xf84bd010000	                            je 0x400024f	       431	psloop.c	FUNCTION_3	IF_2
0x4000092	          0x4c89e7	                            mov rdi, r12	       435	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x4000095	      0xe800000000	                          call 0x400009a	       435	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x400009a	            0x84c0	                             test al, al	       435	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x400009c	     0xf84df000000	                            je 0x4000181	       435	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x40000a2	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000a6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000aa	          0x4885c0	                           test rax, rax	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000ad	     0xf84b2000000	                            je 0x4000165	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000b3	        0x668b400a	                mov ax, word [rax + 0xa]	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000b7	          0x83e0fd	                     and eax, 0xfffffffd	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000ba	        0x663da000	                            cmp ax, 0xa0	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000be	     0xf85a1000000	                           jne 0x4000165	       440	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000c4	    0x488b83400300	           mov rax, qword [rbx + 0x340] 	       445	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000cb	            0x31ed	                            xor ebp, ebp	       415	psloop.c	FUNCTION_3
0x40000cd	          0x4885c0	                           test rax, rax	       445	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000d0	     0xf8491000000	                            je 0x4000167	       445	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000d6	    0x6681780cc200	              cmp word [rax + 0xc], 0xc2	       446	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000dc	     0xf8585000000	                           jne 0x4000167	       446	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000e2	    0x48c783780300	              mov qword [rbx + 0x378], 0	       452	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000ed	      0xbe01000000	                              mov esi, 1	       453	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000f2	          0x4889df	                            mov rdi, rbx	       453	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000f5	      0xe800000000	                          call 0x40000fa	       453	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000fa	            0x85c0	                           test eax, eax	       457	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_6
0x40000fc	            0x89c5	                            mov ebp, eax	       453	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x40000fe	            0x7452	                            je 0x4000152	       457	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4000100	      0x2500f00000	                         and eax, 0xf000	       458	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5
0x4000105	      0x3d00400000	                         cmp eax, 0x4000	       458	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5
0x400010a	            0x7446	                            je 0x4000152	       458	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5
0x400010c	    0x81fd12300000	                         cmp ebp, 0x3012	       460	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	IF_6
0x4000112	            0x751d	                           jne 0x4000131	       460	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	IF_6
0x4000114	    0x48c7c1000000	                              mov rcx, 0	       461	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x400011b	      0xba12300000	                         mov edx, 0x3012	       461	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4000120	      0xbece010000	                          mov esi, 0x1ce	       461	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4000125	    0x48c7c7000000	                              mov rdi, 0	       461	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x400012c	      0xe800000000	                          call 0x4000131	       461	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4000131	    0x48c7c1000000	                              mov rcx, 0	       465	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4000138	            0x89ea	                            mov edx, ebp	       465	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_8
0x400013a	      0xbed2010000	                          mov esi, 0x1d2	       465	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_8
0x400013f	    0x48c7c7000000	                              mov rdi, 0	       465	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4000146	      0xe800000000	                          call 0x400014b	       465	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_8
0x400014b	            0x89e8	                            mov eax, ebp	       467	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_9
0x400014d	      0xe94b040000	                           jmp 0x400059d	       467	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4	IF_5	CALL_9
0x4000152	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       470	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000157	            0x89ea	                            mov edx, ebp	       470	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000159	          0x4889df	                            mov rdi, rbx	       470	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x400015c	      0xe800000000	                          call 0x4000161	       470	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000161	            0x89c5	                            mov ebp, eax	       470	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000163	            0xeb02	                           jmp 0x4000167	       470	psloop.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000165	            0x31ed	                            xor ebp, ebp	       415	psloop.c	FUNCTION_3
0x4000167	    0x488d8b840000	                   lea rcx, [rbx + 0x84]	       475	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_11
0x400016e	        0x488d5320	                   lea rdx, [rbx + 0x20]	       475	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_11
0x4000172	      0x488d742410	                   lea rsi, [rsp + 0x10]	       475	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_11
0x4000177	          0x4c89e7	                            mov rdi, r12	       475	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_11
0x400017a	      0xe800000000	                          call 0x400017f	       475	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_11
0x400017f	            0xeb72	                           jmp 0x40001f3	       475	psloop.c	FUNCTION_3	IF_2	IF_3	CALL_11
0x4000181	    0x488b83b00300	           mov rax, qword [rbx + 0x3b0] 	       480	psloop.c	FUNCTION_3	IF_2	ELSE_1	IF_7
0x4000188	          0x4885c0	                           test rax, rax	       480	psloop.c	FUNCTION_3	IF_2	ELSE_1	IF_7
0x400018b	     0xf84be000000	                            je 0x400024f	       480	psloop.c	FUNCTION_3	IF_2	ELSE_1	IF_7
0x4000191	      0x4889442410	             mov qword [rsp + 0x10], rax	       484	psloop.c	FUNCTION_3	IF_2	ELSE_1	IF_7
0x4000196	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	       485	psloop.c	FUNCTION_3	IF_2	ELSE_1	IF_7
0x400019c	          0x894320	             mov dword [rbx + 0x20], eax	       485	psloop.c	FUNCTION_3	IF_2	ELSE_1	IF_7
0x400019f	      0xe9ab000000	                           jmp 0x400024f	       485	psloop.c	FUNCTION_3	IF_2	ELSE_1	IF_7
0x40001a4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       522	psloop.c	FUNCTION_3	WHILE_1	IF_8	CALL_20
0x40001a9	          0x4889de	                            mov rsi, rbx	       522	psloop.c	FUNCTION_3	WHILE_1	IF_8	CALL_20
0x40001ac	      0xe800000000	                          call 0x40001b1	       522	psloop.c	FUNCTION_3	WHILE_1	IF_8	CALL_20
0x40001b1	          0x8b7320	            mov esi, dword [rbx + 0x20] 	       547	psloop.c	FUNCTION_3	WHILE_1	IF_14
0x40001b4	    0xc78384000000	               mov dword [rbx + 0x84], 0	       529	psloop.c	FUNCTION_3	WHILE_1
0x40001be	            0x85f6	                           test esi, esi	       547	psloop.c	FUNCTION_3	WHILE_1	IF_14
0x40001c0	     0xf8591000000	                           jne 0x4000257	       547	psloop.c	FUNCTION_3	WHILE_1	IF_14
0x40001c6	    0x8b8b84000000	            mov ecx, dword [rbx + 0x84] 	       571	psloop.c	FUNCTION_3	WHILE_1	IF_17
0x40001cc	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       571	psloop.c	FUNCTION_3	WHILE_1	IF_17
0x40001d1	            0x85c9	                           test ecx, ecx	       571	psloop.c	FUNCTION_3	WHILE_1	IF_17
0x40001d3	     0xf84fc020000	                            je 0x40004d5	       571	psloop.c	FUNCTION_3	WHILE_1	IF_17
0x40001d9	          0x8b5320	            mov edx, dword [rbx + 0x20] 	       576	psloop.c	FUNCTION_3	WHILE_1	IF_17	CALL_28
0x40001dc	          0x4c89e7	                            mov rdi, r12	       576	psloop.c	FUNCTION_3	WHILE_1	IF_17	CALL_28
0x40001df	      0xe800000000	                          call 0x40001e4	       576	psloop.c	FUNCTION_3	WHILE_1	IF_17	CALL_28
0x40001e4	            0x85c0	                           test eax, eax	       579	psloop.c	FUNCTION_3	WHILE_1	IF_17	IF_18	CALL_29
0x40001e6	            0x89c5	                            mov ebp, eax	       576	psloop.c	FUNCTION_3	WHILE_1	IF_17	CALL_28
0x40001e8	            0x754e	                           jne 0x4000238	       579	psloop.c	FUNCTION_3	WHILE_1	IF_17	IF_18	CALL_29
0x40001ea	    0x48c744241000	               mov qword [rsp + 0x10], 0	       590	psloop.c	FUNCTION_3	WHILE_1	IF_17
0x40001f3	        0x4c8b6b38	            mov r13, qword [rbx + 0x38] 	       492	psloop.c	FUNCTION_3	WHILE_1
0x40001f7	        0x4c3b6b40	            cmp r13, qword [rbx + 0x40] 	       492	psloop.c	FUNCTION_3	WHILE_1
0x40001fb	     0xf837d030000	                           jae 0x400057e	       492	psloop.c	FUNCTION_3	WHILE_1
0x4000201	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       496	psloop.c	FUNCTION_3	WHILE_1	IF_8
0x4000207	            0x75a8	                           jne 0x40001b1	       496	psloop.c	FUNCTION_3	WHILE_1	IF_8
0x4000209	      0x488d542410	                   lea rdx, [rsp + 0x10]	       497	psloop.c	FUNCTION_3	WHILE_1	IF_8
0x400020e	          0x4c89ee	                            mov rsi, r13	       497	psloop.c	FUNCTION_3	WHILE_1	IF_8
0x4000211	          0x4889df	                            mov rdi, rbx	       497	psloop.c	FUNCTION_3	WHILE_1	IF_8
0x4000214	      0xe800000000	                          call 0x4000219	       497	psloop.c	FUNCTION_3	WHILE_1	IF_8
0x4000219	            0x85c0	                           test eax, eax	       499	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	CALL_15
0x400021b	            0x89c5	                            mov ebp, eax	       497	psloop.c	FUNCTION_3	WHILE_1	IF_8
0x400021d	            0x7485	                            je 0x40001a4	       499	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	CALL_15
0x400021f	      0x3d0b400000	                         cmp eax, 0x400b	       500	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_10
0x4000224	            0x74cd	                            je 0x40001f3	       500	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_10
0x4000226	      0x3d0c400000	                         cmp eax, 0x400c	       504	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_11
0x400022b	            0x7426	                            je 0x4000253	       504	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_11
0x400022d	      0x3d03400000	                         cmp eax, 0x4003	       508	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_12
0x4000232	     0xf8460030000	                            je 0x4000598	       508	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_12
0x4000238	            0x89ea	                            mov edx, ebp	       512	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9
0x400023a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       512	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9
0x400023f	          0x4889df	                            mov rdi, rbx	       512	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9
0x4000242	      0xe800000000	                          call 0x4000247	       512	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9
0x4000247	            0x85c0	                           test eax, eax	       515	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_13	CALL_18
0x4000249	     0xf854e030000	                           jne 0x400059d	       515	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_13	CALL_18
0x400024f	            0x31ed	                            xor ebp, ebp	       647	psloop.c	FUNCTION_3	WHILE_1	IF_24	IF_25
0x4000251	            0xeba0	                           jmp 0x40001f3	       647	psloop.c	FUNCTION_3	WHILE_1	IF_24	IF_25
0x4000253	            0x31ed	                            xor ebp, ebp	       505	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_11
0x4000255	            0xebe1	                           jmp 0x4000238	       505	psloop.c	FUNCTION_3	WHILE_1	IF_8	IF_9	IF_11
0x4000257	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       531	psloop.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400025c	    0x48c744241800	               mov qword [rsp + 0x18], 0	        57	psloop.c	FUNCTION_1
0x4000265	        0x668b450a	                mov ax, word [rbp + 0xa]	        66	psloop.c	FUNCTION_1	SWITCH_1
0x4000269	        0x6683f80a	                             cmp ax, 0xa	        66	psloop.c	FUNCTION_1	SWITCH_1
0x400026d	     0xf8287000000	                            jb 0x40002fa	        66	psloop.c	FUNCTION_1	SWITCH_1
0x4000273	        0x6683f80e	                             cmp ax, 0xe	        66	psloop.c	FUNCTION_1	SWITCH_1
0x4000277	            0x7608	                           jbe 0x4000281	        66	psloop.c	FUNCTION_1	SWITCH_1
0x4000279	        0x6683f82d	                            cmp ax, 0x2d	        66	psloop.c	FUNCTION_1	SWITCH_1
0x400027d	            0x7415	                            je 0x4000294	        66	psloop.c	FUNCTION_1	SWITCH_1
0x400027f	            0xeb79	                           jmp 0x40002fa	        66	psloop.c	FUNCTION_1	SWITCH_1
0x4000281	          0x83e61f	                           and esi, 0x1f	        75	psloop.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000284	          0x4889ea	                            mov rdx, rbp	        75	psloop.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000287	          0x4c89e7	                            mov rdi, r12	        75	psloop.c	FUNCTION_1	SWITCH_1	CALL_3
0x400028a	      0xe800000000	                          call 0x400028f	        75	psloop.c	FUNCTION_1	SWITCH_1	CALL_3
0x400028f	      0xe93a020000	                           jmp 0x40004ce	        75	psloop.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000294	      0xb901000000	                              mov ecx, 1	        83	psloop.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000299	          0x4889ea	                            mov rdx, rbp	        83	psloop.c	FUNCTION_1	SWITCH_1	CALL_5
0x400029c	          0x4c89e6	                            mov rsi, r12	        83	psloop.c	FUNCTION_1	SWITCH_1	CALL_5
0x400029f	          0x4889df	                            mov rdi, rbx	        83	psloop.c	FUNCTION_1	SWITCH_1	CALL_5
0x40002a2	      0xe800000000	                          call 0x40002a7	        83	psloop.c	FUNCTION_1	SWITCH_1	CALL_5
0x40002a7	            0x85c0	                           test eax, eax	        87	psloop.c	FUNCTION_1	SWITCH_1	IF_1	CALL_6
0x40002a9	     0xf8515020000	                           jne 0x40004c4	        87	psloop.c	FUNCTION_1	SWITCH_1	IF_1	CALL_6
0x40002af	    0xc74320000000	               mov dword [rbx + 0x20], 0	        91	psloop.c	FUNCTION_1	SWITCH_1
0x40002b6	      0xe913020000	                           jmp 0x40004ce	        91	psloop.c	FUNCTION_1	SWITCH_1
0x40002bb	    0x83bb84000000	               cmp dword [rbx + 0x84], 0	        98	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	CALL_8
0x40002c2	            0x753e	                           jne 0x4000302	        98	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	CALL_8
0x40002c4	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       100	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40002c8	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	       117	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40002cd	          0x4c89e6	                            mov rsi, r12	       117	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40002d0	          0x4889df	                            mov rdi, rbx	       117	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40002d3	        0x48894318	             mov qword [rbx + 0x18], rax	       100	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40002d7	      0xe800000000	                          call 0x40002dc	       117	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40002dc	            0x85c0	                           test eax, eax	       122	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	IF_2	CALL_12
0x40002de	     0xf85e0010000	                           jne 0x40004c4	       122	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	IF_2	CALL_12
0x40002e4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       126	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	IF_3
0x40002e9	          0x4885f6	                           test rsi, rsi	       126	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	IF_3
0x40002ec	            0x7408	                            je 0x40002f6	       126	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	IF_3
0x40002ee	          0x4889ef	                            mov rdi, rbp	       127	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	IF_3	CALL_14
0x40002f1	      0xe800000000	                          call 0x40002f6	       127	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	IF_3	CALL_14
0x40002f6	        0xc16b2005	               shr dword [rbx + 0x20], 5	       130	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	CALL_15
0x40002fa	          0x8b5320	            mov edx, dword [rbx + 0x20] 	        98	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	CALL_8
0x40002fd	          0x83e21f	                           and edx, 0x1f	        98	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	CALL_8
0x4000300	            0x75b9	                           jne 0x40002bb	        98	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1	CALL_8
0x4000302	    0x803d00000000	                cmp byte [0x04000309], 0	       149	psloop.c	FUNCTION_1	SWITCH_1	IF_4
0x4000309	     0xf8439010000	                            je 0x4000448	       149	psloop.c	FUNCTION_1	SWITCH_1	IF_4
0x400030f	          0x8a4314	               mov al, byte [rbx + 0x14]	       150	psloop.c	FUNCTION_1	SWITCH_1	IF_4
0x4000312	            0x3c02	                               cmp al, 2	       149	psloop.c	FUNCTION_1	SWITCH_1	IF_4
0x4000314	     0xf872e010000	                            ja 0x4000448	       149	psloop.c	FUNCTION_1	SWITCH_1	IF_4
0x400031a	        0xf6432d02	               test byte [rbx + 0x2d], 2	       150	psloop.c	FUNCTION_1	SWITCH_1	IF_4
0x400031e	     0xf8524010000	                           jne 0x4000448	       150	psloop.c	FUNCTION_1	SWITCH_1	IF_4
0x4000324	         0xfb77d0a	            movzx edi, word [rbp + 0xa] 	       159	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x4000328	    0x8d9760ffffff	                   lea edx, [rdi - 0xa0]	       159	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x400032e	        0x6683fa02	                               cmp dx, 2	       159	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x4000332	     0xf87c7000000	                            ja 0x40003ff	       159	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x4000338	            0xfec8	                                  dec al	       169	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5
0x400033a	     0xf85ab000000	                           jne 0x40003eb	       169	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5
0x4000340	        0x4c8b7b50	            mov r15, qword [rbx + 0x50] 	       171	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5	CALL_17
0x4000344	    0x488b05000000	            mov rax, qword [0x0400034b] 	       342	psloop.c	FUNCTION_2
0x400034b	          0x4d29ef	                            sub r15, r13	       171	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5	CALL_17
0x400034e	          0x4989c6	                            mov r14, rax	       342	psloop.c	FUNCTION_2
0x4000351	          0x4885c0	                           test rax, rax	       343	psloop.c	FUNCTION_2	WHILE_1
0x4000354	            0x7409	                            je 0x400035f	       343	psloop.c	FUNCTION_2	WHILE_1
0x4000356	          0x4989c6	                            mov r14, rax	       345	psloop.c	FUNCTION_2	WHILE_1
0x4000359	        0x488b4010	            mov rax, qword [rax + 0x10] 	       345	psloop.c	FUNCTION_2	WHILE_1
0x400035d	            0xebf2	                           jmp 0x4000351	       345	psloop.c	FUNCTION_2	WHILE_1
0x400035f	          0x4d85f6	                           test r14, r14	       352	psloop.c	FUNCTION_2	IF_1
0x4000362	            0x7410	                            je 0x4000374	       352	psloop.c	FUNCTION_2	IF_1
0x4000364	        0x418b4630	            mov eax, dword [r14 + 0x30] 	       353	psloop.c	FUNCTION_2	IF_1
0x4000368	          0x4889c2	                            mov rdx, rax	       353	psloop.c	FUNCTION_2	IF_1
0x400036b	        0x49034620	             add rax, qword [r14 + 0x20]	       352	psloop.c	FUNCTION_2	IF_1
0x400036f	          0x4939c5	                            cmp r13, rax	       352	psloop.c	FUNCTION_2	IF_1
0x4000372	            0x7470	                            je 0x40003e4	       352	psloop.c	FUNCTION_2	IF_1
0x4000374	        0x448a430f	               mov r8b, byte [rbx + 0xf]	       179	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5
0x4000378	        0x4c8b4d00	                     mov r9, qword [rbp]	       171	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5	CALL_17
0x400037c	      0xb908000000	                              mov ecx, 8	       357	psloop.c	FUNCTION_2	IF_1	CALL_2
0x4000381	      0xba20000000	                           mov edx, 0x20	       357	psloop.c	FUNCTION_2	IF_1	CALL_2
0x4000386	      0xbe65010000	                          mov esi, 0x165	       357	psloop.c	FUNCTION_2	IF_1	CALL_2
0x400038b	    0x48c7c7000000	                              mov rdi, 0	       357	psloop.c	FUNCTION_2	IF_1	CALL_2
0x4000392	      0x448844240f	               mov byte [rsp + 0xf], r8b	       179	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5
0x4000397	        0x4c890c24	                     mov qword [rsp], r9	       171	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_5	CALL_17
0x400039b	      0xe800000000	                          call 0x40003a0	       357	psloop.c	FUNCTION_2	IF_1	CALL_2
0x40003a0	          0x4885c0	                           test rax, rax	       358	psloop.c	FUNCTION_2	IF_1	IF_2
0x40003a3	            0x7446	                            je 0x40003eb	       358	psloop.c	FUNCTION_2	IF_1	IF_2
0x40003a5	        0x4c8b0c24	                     mov r9, qword [rsp]	       366	psloop.c	FUNCTION_2	IF_1	IF_3
0x40003a9	      0x448a44240f	               mov r8b, byte [rsp + 0xf]	       374	psloop.c	FUNCTION_2	IF_1
0x40003ae	        0x498b5120	              mov rdx, qword [r9 + 0x20]	       366	psloop.c	FUNCTION_2	IF_1	IF_3
0x40003b2	        0x4c896820	             mov qword [rax + 0x20], r13	       372	psloop.c	FUNCTION_2	IF_1
0x40003b6	        0x44897830	            mov dword [rax + 0x30], r15d	       373	psloop.c	FUNCTION_2	IF_1
0x40003ba	        0x44884035	              mov byte [rax + 0x35], r8b	       374	psloop.c	FUNCTION_2	IF_1
0x40003be	          0x4885d2	                           test rdx, rdx	       369	psloop.c	FUNCTION_2	IF_1	ELSE_1
0x40003c1	    0x480f44150000	           cmove rdx, qword [0x040003c9]	       369	psloop.c	FUNCTION_2	IF_1	ELSE_1
0x40003c9	        0x80480d01	                  or byte [rax + 0xd], 1	       375	psloop.c	FUNCTION_2	IF_1
0x40003cd	          0x4d85f6	                           test r14, r14	       384	psloop.c	FUNCTION_2	IF_1	IF_4
0x40003d0	          0x488910	                    mov qword [rax], rdx	       381	psloop.c	FUNCTION_2	IF_1
0x40003d3	            0x7509	                           jne 0x40003de	       384	psloop.c	FUNCTION_2	IF_1	IF_4
0x40003d5	    0x488905000000	            mov qword [0x040003dc], rax 	       385	psloop.c	FUNCTION_2	IF_1	IF_4
0x40003dc	            0xeb0d	                           jmp 0x40003eb	       385	psloop.c	FUNCTION_2	IF_1	IF_4
0x40003de	        0x49894610	             mov qword [r14 + 0x10], rax	       387	psloop.c	FUNCTION_2	IF_1	ELSE_2
0x40003e2	            0xeb07	                           jmp 0x40003eb	       387	psloop.c	FUNCTION_2	IF_1	ELSE_2
0x40003e4	          0x4101d7	                           add r15d, edx	       394	psloop.c	FUNCTION_2	ELSE_3
0x40003e7	        0x45897e30	            mov dword [r14 + 0x30], r15d	       394	psloop.c	FUNCTION_2	ELSE_3
0x40003eb	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       188	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x40003ef	    0xc78384000000	               mov dword [rbx + 0x84], 0	       190	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x40003f9	        0x48894338	             mov qword [rbx + 0x38], rax	       188	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x40003fd	            0xeb49	                           jmp 0x4000448	       188	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3
0x40003ff	            0xfec8	                                  dec al	       200	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6
0x4000401	            0x7545	                           jne 0x4000448	       200	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6
0x4000403	        0x488b4500	                    mov rax, qword [rbp]	       202	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6
0x4000407	      0x6683780a10	              cmp word [rax + 0xa], 0x10	       202	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6
0x400040c	            0x753a	                           jne 0x4000448	       202	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6
0x400040e	      0xe800000000	                          call 0x4000413	       204	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6
0x4000413	        0x80780b00	                 cmp byte [rax + 0xb], 0	       207	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7
0x4000417	            0x752f	                           jne 0x4000448	       207	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7
0x4000419	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       208	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7
0x400041f	            0x7527	                           jne 0x4000448	       208	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7
0x4000421	          0x4c89e8	                            mov rax, r13	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x4000424	        0x482b4330	             sub rax, qword [rbx + 0x30]	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x4000428	         0xfb74d0a	            movzx ecx, word [rbp + 0xa] 	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x400042c	    0x48c7c2000000	                              mov rdx, 0	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x4000433	      0xbedd000000	                           mov esi, 0xdd	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x4000438	    0x48c7c7000000	                              mov rdi, 0	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x400043f	        0x448d4024	                   lea r8d, [rax + 0x24]	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x4000443	      0xe800000000	                          call 0x4000448	       209	psloop.c	FUNCTION_1	SWITCH_1	IF_4	SWITCH_3	IF_6	IF_7	CALL_20
0x4000448	        0x668b450a	                mov ax, word [rbp + 0xa]	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x400044c	        0x6683f814	                            cmp ax, 0x14	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000450	            0x7412	                            je 0x4000464	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000452	            0x7708	                            ja 0x400045c	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000454	        0x6683f811	                            cmp ax, 0x11	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000458	            0x731c	                           jae 0x4000476	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x400045a	            0xeb72	                           jmp 0x40004ce	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x400045c	        0x663da200	                            cmp ax, 0xa2	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000460	            0x744c	                            je 0x40004ae	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000462	            0xeb6a	                           jmp 0x40004ce	       230	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000464	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       238	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000468	        0x48894540	            mov qword [rbp + 0x40], rax 	       238	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x400046c	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       239	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000470	        0x482b4338	             sub rax, qword [rbx + 0x38]	       239	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000474	            0xeb21	                           jmp 0x4000497	       239	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4
0x4000476	        0x488b4500	                    mov rax, qword [rbp]	       254	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x400047a	          0x4885c0	                           test rax, rax	       254	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x400047d	            0x744f	                            je 0x40004ce	       254	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x400047f	      0x6683780a08	                 cmp word [rax + 0xa], 8	       254	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x4000484	            0x7548	                           jne 0x40004ce	       254	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x4000486	        0x807b1402	                cmp byte [rbx + 0x14], 2	       257	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x400048a	            0x7742	                            ja 0x40004ce	       257	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x400048c	        0x4c896d40	            mov qword [rbp + 0x40], r13 	       268	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x4000490	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       269	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x4000494	          0x4c29e8	                            sub rax, r13	       269	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x4000497	          0x894548	            mov dword [rbp + 0x48], eax 	       269	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x400049a	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       275	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x400049e	    0xc78384000000	               mov dword [rbx + 0x84], 0	       277	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x40004a8	        0x48894338	             mov qword [rbx + 0x38], rax	       275	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x40004ac	            0xeb20	                           jmp 0x40004ce	       275	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_8
0x40004ae	    0x488b83400300	           mov rax, qword [rbx + 0x340] 	       283	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_9
0x40004b5	          0x4885c0	                           test rax, rax	       283	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_9
0x40004b8	            0x7414	                            je 0x40004ce	       283	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_9
0x40004ba	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	       285	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_9
0x40004be	        0x48895020	             mov qword [rax + 0x20], rdx	       284	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_9
0x40004c2	            0xeb0a	                           jmp 0x40004ce	       284	psloop.c	FUNCTION_1	SWITCH_1	SWITCH_4	IF_9
0x40004c4	            0x85c0	                           test eax, eax	       553	psloop.c	FUNCTION_3	WHILE_1	IF_14	IF_15	CALL_23
0x40004c6	            0x89c2	                            mov edx, eax	       117	psloop.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40004c8	     0xf856cfdffff	                           jne 0x400023a	       553	psloop.c	FUNCTION_3	WHILE_1	IF_14	IF_15	CALL_23
0x40004ce	            0x31ed	                            xor ebp, ebp	       553	psloop.c	FUNCTION_3	WHILE_1	IF_14	IF_15	CALL_23
0x40004d0	      0xe9f1fcffff	                           jmp 0x40001c6	       553	psloop.c	FUNCTION_3	WHILE_1	IF_14	IF_15	CALL_23
0x40004d5	         0xfb77e0a	            movzx edi, word [rsi + 0xa] 	       599	psloop.c	FUNCTION_3	WHILE_1	CALL_33
0x40004d9	      0xe800000000	                          call 0x40004de	       599	psloop.c	FUNCTION_3	WHILE_1	CALL_33
0x40004de	    0x488983800300	            mov qword [rbx + 0x380], rax	       598	psloop.c	FUNCTION_3	WHILE_1
0x40004e5	        0xf6400840	               test byte [rax + 8], 0x40	       600	psloop.c	FUNCTION_3	WHILE_1	IF_20
0x40004e9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       600	psloop.c	FUNCTION_3	WHILE_1	IF_20
0x40004ee	            0x7419	                            je 0x4000509	       600	psloop.c	FUNCTION_3	WHILE_1	IF_20
0x40004f0	        0x668b500a	                mov dx, word [rax + 0xa]	       601	psloop.c	FUNCTION_3	WHILE_1	IF_20	IF_21
0x40004f4	          0x83e2f7	                     and edx, 0xfffffff7	       601	psloop.c	FUNCTION_3	WHILE_1	IF_20	IF_21
0x40004f7	      0x6681fa805b	                          cmp dx, 0x5b80	       601	psloop.c	FUNCTION_3	WHILE_1	IF_20	IF_21
0x40004fc	            0x750b	                           jne 0x4000509	       601	psloop.c	FUNCTION_3	WHILE_1	IF_20	IF_21
0x40004fe	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       611	psloop.c	FUNCTION_3	WHILE_1	IF_20	IF_21
0x4000502	        0x482b5040	             sub rdx, qword [rax + 0x40]	       611	psloop.c	FUNCTION_3	WHILE_1	IF_20	IF_21
0x4000506	          0x895048	             mov dword [rax + 0x48], edx	       611	psloop.c	FUNCTION_3	WHILE_1	IF_20	IF_21
0x4000509	    0x488b93800300	           mov rdx, qword [rbx + 0x380] 	       616	psloop.c	FUNCTION_3	WHILE_1	IF_22
0x4000510	        0xf6420808	                  test byte [rdx + 8], 8	       616	psloop.c	FUNCTION_3	WHILE_1	IF_22
0x4000514	            0x740b	                            je 0x4000521	       616	psloop.c	FUNCTION_3	WHILE_1	IF_22
0x4000516	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       623	psloop.c	FUNCTION_3	WHILE_1	IF_22
0x400051a	        0x482b5040	             sub rdx, qword [rax + 0x40]	       623	psloop.c	FUNCTION_3	WHILE_1	IF_22
0x400051e	          0x895048	             mov dword [rax + 0x48], edx	       623	psloop.c	FUNCTION_3	WHILE_1	IF_22
0x4000521	    0x6681780a875b	           cmp word [rax + 0xa], 0x5b87 	       627	psloop.c	FUNCTION_3	WHILE_1	IF_23
0x4000527	            0x750b	                           jne 0x4000534	       627	psloop.c	FUNCTION_3	WHILE_1	IF_23
0x4000529	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       633	psloop.c	FUNCTION_3	WHILE_1	IF_23
0x400052d	        0x482b5040	             sub rdx, qword [rax + 0x40]	       633	psloop.c	FUNCTION_3	WHILE_1	IF_23
0x4000531	          0x895048	             mov dword [rax + 0x48], edx	       633	psloop.c	FUNCTION_3	WHILE_1	IF_23
0x4000534	    0x488b93d00300	           mov rdx, qword [rbx + 0x3d0] 	       639	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x400053b	          0x4885d2	                           test rdx, rdx	       639	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x400053e	     0xf84f4fcffff	                            je 0x4000238	       639	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x4000544	    0x488983780300	            mov qword [rbx + 0x378], rax	       640	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x400054b	        0x668b400a	                mov ax, word [rax + 0xa]	       641	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x400054f	          0x4889df	                            mov rdi, rbx	       643	psloop.c	FUNCTION_3	WHILE_1	IF_24	CALL_34
0x4000552	        0x6689430a	                mov word [rbx + 0xa], ax	       641	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x4000556	      0xe800000000	                          call 0x400055b	       643	psloop.c	FUNCTION_3	WHILE_1	IF_24	CALL_34
0x400055b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       644	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x4000560	            0x89c2	                            mov edx, eax	       644	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x4000562	          0x4889df	                            mov rdi, rbx	       644	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x4000565	      0xe800000000	                          call 0x400056a	       644	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x400056a	            0x89c5	                            mov ebp, eax	       644	psloop.c	FUNCTION_3	WHILE_1	IF_24
0x400056c	      0x3d02400000	                         cmp eax, 0x4002	       647	psloop.c	FUNCTION_3	WHILE_1	IF_24	IF_25
0x4000571	      0xb800000000	                              mov eax, 0	       647	psloop.c	FUNCTION_3	WHILE_1	IF_24	IF_25
0x4000576	           0xf44e8	                          cmove ebp, eax	       647	psloop.c	FUNCTION_3	WHILE_1	IF_24	IF_25
0x4000579	      0xe9bafcffff	                           jmp 0x4000238	       647	psloop.c	FUNCTION_3	WHILE_1	IF_24	IF_25
0x400057e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       492	psloop.c	FUNCTION_3	WHILE_1
0x4000584	     0xf8577fcffff	                           jne 0x4000201	       492	psloop.c	FUNCTION_3	WHILE_1
0x400058a	            0x89ea	                            mov edx, ebp	       658	psloop.c	FUNCTION_3	CALL_39
0x400058c	            0x31f6	                            xor esi, esi	       658	psloop.c	FUNCTION_3	CALL_39
0x400058e	          0x4889df	                            mov rdi, rbx	       658	psloop.c	FUNCTION_3	CALL_39
0x4000591	      0xe800000000	                          call 0x4000596	       658	psloop.c	FUNCTION_3	CALL_39
0x4000596	            0xeb05	                           jmp 0x400059d	       659	psloop.c	FUNCTION_3	CALL_40
0x4000598	      0xb803400000	                         mov eax, 0x4003	       659	psloop.c	FUNCTION_3	CALL_40
0x400059d	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       660	psloop.c	FUNCTION_3
0x40005a2	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       660	psloop.c	FUNCTION_3
0x40005ab	            0x7405	                            je 0x40005b2	       660	psloop.c	FUNCTION_3
0x40005ad	      0xe800000000	                          call 0x40005b2	       660	psloop.c	FUNCTION_3
0x40005b2	        0x4883c428	                           add rsp, 0x28	       660	psloop.c	FUNCTION_3
0x40005b6	              0x5b	                                 pop rbx	       660	psloop.c	FUNCTION_3
0x40005b7	              0x5d	                                 pop rbp	       660	psloop.c	FUNCTION_3
0x40005b8	            0x415c	                                 pop r12	       660	psloop.c	FUNCTION_3
0x40005ba	            0x415d	                                 pop r13	       660	psloop.c	FUNCTION_3
0x40005bc	            0x415e	                                 pop r14	       660	psloop.c	FUNCTION_3
0x40005be	            0x415f	                                 pop r15	       660	psloop.c	FUNCTION_3
0x40005c0	              0xc3	                                     ret	       660	psloop.c	FUNCTION_3
