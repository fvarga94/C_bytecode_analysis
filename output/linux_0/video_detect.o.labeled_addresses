video_detect_force_none	SWITCH,0:CALL,0:ELSE,0:DO,0:WHILE,0:IF,0:functions,0:FOR,0	3
0x4000070	    0xc70500000000	               mov dword [0x0400007a], 0	       108	video_detect.c	FUNCTION_6
0x400007a	            0x31c0	                            xor eax, eax	       110	video_detect.c	FUNCTION_6
0x400007c	              0xc3	                                     ret	       110	video_detect.c	FUNCTION_6
video_detect_force_video	SWITCH,0:CALL,0:ELSE,0:DO,0:WHILE,0:IF,0:functions,0:FOR,0	3
0x4000050	    0xc70500000000	               mov dword [0x0400005a], 1	        96	video_detect.c	FUNCTION_4
0x400005a	            0x31c0	                            xor eax, eax	        98	video_detect.c	FUNCTION_4
0x400005c	              0xc3	                                     ret	        98	video_detect.c	FUNCTION_4
acpi_video_set_dmi_backlight_type	SWITCH,0:CALL,2:ELSE,0:DO,0:WHILE,0:IF,1:functions,0:FOR,0	6
0x40002f0	    0x893d00000000	            mov dword [0x040002f6], edi 	       423	video_detect.c	FUNCTION_10
0x40002f6	      0xe800000000	                          call 0x40002fb	       425	video_detect.c	FUNCTION_10	IF_1	CALL_1
0x40002fb	          0x83f801	                              cmp eax, 1	       425	video_detect.c	FUNCTION_10	IF_1	CALL_1
0x40002fe	            0x7405	                            je 0x4000305	       425	video_detect.c	FUNCTION_10	IF_1	CALL_1
0x4000300	      0xe900000000	                           jmp 0x4000305	       426	video_detect.c	FUNCTION_10	CALL_2
0x4000305	            0xf3c3	                                     ret	       426	video_detect.c	FUNCTION_10	CALL_2
video_detect_force_native	SWITCH,0:CALL,0:ELSE,0:DO,0:WHILE,0:IF,0:functions,0:FOR,0	3
0x4000060	    0xc70500000000	               mov dword [0x0400006a], 3	       102	video_detect.c	FUNCTION_5
0x400006a	            0x31c0	                            xor eax, eax	       104	video_detect.c	FUNCTION_5
0x400006c	              0xc3	                                     ret	       104	video_detect.c	FUNCTION_5
acpi_video_backlight_notify_work	SWITCH,0:CALL,2:ELSE,0:DO,0:WHILE,0:IF,1:functions,0:FOR,0	5
0x40002d0	      0xe800000000	                          call 0x40002d5	       345	video_detect.c	FUNCTION_7	IF_1	CALL_1
0x40002d5	          0x83f801	                              cmp eax, 1	       345	video_detect.c	FUNCTION_7	IF_1	CALL_1
0x40002d8	            0x7405	                            je 0x40002df	       345	video_detect.c	FUNCTION_7	IF_1	CALL_1
0x40002da	      0xe900000000	                           jmp 0x40002df	       346	video_detect.c	FUNCTION_7	CALL_2
0x40002df	            0xf3c3	                                     ret	       346	video_detect.c	FUNCTION_7	CALL_2
acpi_video_detect_exit	SWITCH,0:CALL,1:ELSE,0:DO,0:WHILE,0:IF,1:functions,0:FOR,0	6
0x4000040	    0xc70500000000	               mov dword [0x0400004a], 2	        90	video_detect.c	FUNCTION_3
0x400004a	            0x31c0	                            xor eax, eax	        92	video_detect.c	FUNCTION_3
0x400004c	              0xc3	                                     ret	        92	video_detect.c	FUNCTION_3
0x400004d	           0xf1f00	                         nop dword [rax]	        92	video_detect.c	FUNCTION_3
0x4000050	              0xc7	                                 invalid	        96	video_detect.c	FUNCTION_4
0x4000051	       0x500000000	                              add eax, 0	        96	video_detect.c	FUNCTION_4
video_detect_force_vendor	SWITCH,0:CALL,0:ELSE,0:DO,0:WHILE,0:IF,0:functions,0:FOR,0	3
0x4000040	    0xc70500000000	               mov dword [0x0400004a], 2	        90	video_detect.c	FUNCTION_3
0x400004a	            0x31c0	                            xor eax, eax	        92	video_detect.c	FUNCTION_3
0x400004c	              0xc3	                                     ret	        92	video_detect.c	FUNCTION_3
