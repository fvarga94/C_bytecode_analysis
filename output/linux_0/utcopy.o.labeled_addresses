acpi_ut_copy_eobject_to_iobject	DO,0:ELSE,1:FOR,0:functions,0:IF,1:CALL,4:WHILE,0:SWITCH,0	119
0x40004b7	            0x4157	                                push r15	       605	utcopy.c	FUNCTION_18
0x40004b9	            0x4156	                                push r14	       605	utcopy.c	FUNCTION_18
0x40004bb	            0x4155	                                push r13	       605	utcopy.c	FUNCTION_18
0x40004bd	            0x4154	                                push r12	       605	utcopy.c	FUNCTION_18
0x40004bf	          0x4989f4	                            mov r12, rsi	       605	utcopy.c	FUNCTION_18
0x40004c2	              0x55	                                push rbp	       605	utcopy.c	FUNCTION_18
0x40004c3	              0x53	                                push rbx	       605	utcopy.c	FUNCTION_18
0x40004c4	          0x4889fb	                            mov rbx, rdi	       605	utcopy.c	FUNCTION_18
0x40004c7	              0x51	                                push rcx	       605	utcopy.c	FUNCTION_18
0x40004c8	            0x8b0f	                    mov ecx, dword [rdi]	       610	utcopy.c	FUNCTION_18	IF_1
0x40004ca	          0x83f904	                              cmp ecx, 4	       610	utcopy.c	FUNCTION_18	IF_1
0x40004cd	            0x7565	                           jne 0x4000534	       610	utcopy.c	FUNCTION_18	IF_1
0x40004cf	          0x8b7f04	                mov edi, dword [rdi + 4]	       553	utcopy.c	FUNCTION_17
0x40004d2	      0xe800000000	                          call 0x40004d7	       553	utcopy.c	FUNCTION_17
0x40004d7	          0x4885c0	                           test rax, rax	       555	utcopy.c	FUNCTION_17	IF_1
0x40004da	          0x4889c5	                            mov rbp, rax	       553	utcopy.c	FUNCTION_17
0x40004dd	     0xf8445010000	                            je 0x4000628	       555	utcopy.c	FUNCTION_17	IF_1
0x40004e3	        0x4c8b7818	            mov r15, qword [rax + 0x18] 	       559	utcopy.c	FUNCTION_17
0x40004e7	          0x4531ed	                          xor r13d, r13d	       565	utcopy.c	FUNCTION_17	FOR_1
0x40004ea	        0x443b6b04	               cmp r13d, dword [rbx + 4]	       565	utcopy.c	FUNCTION_17	FOR_1
0x40004ee	     0xf8316010000	                           jae 0x400060a	       565	utcopy.c	FUNCTION_17	FOR_1
0x40004f4	          0x4489ef	                           mov edi, r13d	       567	utcopy.c	FUNCTION_17	FOR_1	CALL_4
0x40004f7	        0x4d8d34ff	                  lea r14, [r15 + rdi*8]	       567	utcopy.c	FUNCTION_17	FOR_1	CALL_4
0x40004fb	        0x486bff18	                     imul rdi, rdi, 0x18	       566	utcopy.c	FUNCTION_17	FOR_1
0x40004ff	        0x48037b08	                add rdi, qword [rbx + 8]	       566	utcopy.c	FUNCTION_17	FOR_1
0x4000503	          0x4c89f6	                            mov rsi, r14	       566	utcopy.c	FUNCTION_17	FOR_1
0x4000506	      0xe800000000	                          call 0x400050b	       566	utcopy.c	FUNCTION_17	FOR_1
0x400050b	            0x85c0	                           test eax, eax	       570	utcopy.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x400050d	            0x7420	                            je 0x400052f	       570	utcopy.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x400050f	        0x44896d2c	           mov dword [rbp + 0x2c], r13d 	       574	utcopy.c	FUNCTION_17	FOR_1	IF_2
0x4000513	          0x4889ef	                            mov rdi, rbp	       576	utcopy.c	FUNCTION_17	FOR_1	IF_2	CALL_6
0x4000516	    0x49c706000000	                      mov qword [r14], 0	       575	utcopy.c	FUNCTION_17	FOR_1	IF_2
0x400051d	        0x89442404	                mov dword [rsp + 4], eax	       575	utcopy.c	FUNCTION_17	FOR_1	IF_2
0x4000521	      0xe800000000	                          call 0x4000526	       576	utcopy.c	FUNCTION_17	FOR_1	IF_2	CALL_6
0x4000526	        0x8b442404	                mov eax, dword [rsp + 4]	       576	utcopy.c	FUNCTION_17	FOR_1	IF_2	CALL_6
0x400052a	      0xe9fe000000	                           jmp 0x400062d	       576	utcopy.c	FUNCTION_17	FOR_1	IF_2	CALL_6
0x400052f	          0x41ffc5	                                inc r13d	       565	utcopy.c	FUNCTION_17	FOR_1
0x4000532	            0xebb6	                           jmp 0x40004ea	       565	utcopy.c	FUNCTION_17	FOR_1
0x4000534	          0x83f903	                              cmp ecx, 3	       428	utcopy.c	FUNCTION_16	SWITCH_1
0x4000537	            0x7707	                            ja 0x4000540	       428	utcopy.c	FUNCTION_16	SWITCH_1
0x4000539	          0x83f901	                              cmp ecx, 1	       428	utcopy.c	FUNCTION_16	SWITCH_1
0x400053c	            0x722a	                            jb 0x4000568	       428	utcopy.c	FUNCTION_16	SWITCH_1
0x400053e	            0xeb05	                           jmp 0x4000545	       428	utcopy.c	FUNCTION_16	SWITCH_1
0x4000540	          0x83f914	                           cmp ecx, 0x14	       428	utcopy.c	FUNCTION_16	SWITCH_1
0x4000543	            0x752f	                           jne 0x4000574	       428	utcopy.c	FUNCTION_16	SWITCH_1
0x4000545	      0xba01000000	                              mov edx, 1	       434	utcopy.c	FUNCTION_16	SWITCH_1	CALL_2
0x400054a	      0xbeb4010000	                          mov esi, 0x1b4	       434	utcopy.c	FUNCTION_16	SWITCH_1	CALL_2
0x400054f	    0x48c7c7000000	                              mov rdi, 0	       434	utcopy.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000556	      0xe800000000	                          call 0x400055b	       434	utcopy.c	FUNCTION_16	SWITCH_1	CALL_2
0x400055b	          0x4885c0	                           test rax, rax	       437	utcopy.c	FUNCTION_16	SWITCH_1	IF_1
0x400055e	          0x4889c5	                            mov rbp, rax	       434	utcopy.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000561	            0x753d	                           jne 0x40005a0	       437	utcopy.c	FUNCTION_16	SWITCH_1	IF_1
0x4000563	      0xe9c0000000	                           jmp 0x4000628	       437	utcopy.c	FUNCTION_16	SWITCH_1	IF_1
0x4000568	    0x48c706000000	                      mov qword [rsi], 0	       444	utcopy.c	FUNCTION_16	SWITCH_1
0x400056f	      0xe9a8000000	                           jmp 0x400061c	       444	utcopy.c	FUNCTION_16	SWITCH_1
0x4000574	            0x89cf	                            mov edi, ecx	       451	utcopy.c	FUNCTION_16	SWITCH_1	CALL_5
0x4000576	      0xe800000000	                          call 0x400057b	       451	utcopy.c	FUNCTION_16	SWITCH_1	CALL_5
0x400057b	    0x48c7c2000000	                              mov rdx, 0	       451	utcopy.c	FUNCTION_16	SWITCH_1	CALL_5
0x4000582	          0x4889c1	                            mov rcx, rax	       451	utcopy.c	FUNCTION_16	SWITCH_1	CALL_5
0x4000585	      0xbec5010000	                          mov esi, 0x1c5	       451	utcopy.c	FUNCTION_16	SWITCH_1	CALL_5
0x400058a	    0x48c7c7000000	                              mov rdi, 0	       451	utcopy.c	FUNCTION_16	SWITCH_1	CALL_5
0x4000591	      0xe800000000	                          call 0x4000596	       451	utcopy.c	FUNCTION_16	SWITCH_1	CALL_5
0x4000596	      0xb80f000000	                            mov eax, 0xf	       455	utcopy.c	FUNCTION_16	SWITCH_1	CALL_7
0x400059b	      0xe98d000000	                           jmp 0x400062d	       455	utcopy.c	FUNCTION_16	SWITCH_1	CALL_7
0x40005a0	            0x8b03	                    mov eax, dword [rbx]	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005a2	          0x83f802	                              cmp eax, 2	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005a5	            0x7418	                            je 0x40005bf	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005a7	            0x7706	                            ja 0x40005af	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005a9	            0xffc8	                                 dec eax	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005ab	            0x7463	                            je 0x4000610	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005ad	            0xeb69	                           jmp 0x4000618	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005af	          0x83f803	                              cmp eax, 3	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005b2	            0x7433	                            je 0x40005e7	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005b4	          0x83f814	                           cmp eax, 0x14	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005b7	            0x755f	                           jne 0x4000618	       460	utcopy.c	FUNCTION_16	SWITCH_2
0x40005b9	        0xc6450d02	                 mov byte [rbp + 0xd], 2	       506	utcopy.c	FUNCTION_16	SWITCH_2
0x40005bd	            0xeb51	                           jmp 0x4000610	       506	utcopy.c	FUNCTION_16	SWITCH_2
0x40005bf	          0x8b7b04	                mov edi, dword [rbx + 4]	       464	utcopy.c	FUNCTION_16	SWITCH_2	CALL_8
0x40005c2	          0x48ffc7	                                 inc rdi	       464	utcopy.c	FUNCTION_16	SWITCH_2	CALL_8
0x40005c5	      0xe82ffeffff	        call sym.acpi_os_allocate_zeroed	       464	utcopy.c	FUNCTION_16	SWITCH_2	CALL_8
0x40005ca	          0x4885c0	                           test rax, rax	       467	utcopy.c	FUNCTION_16	SWITCH_2	IF_2
0x40005cd	        0x48894510	            mov qword [rbp + 0x10], rax 	       463	utcopy.c	FUNCTION_16	SWITCH_2
0x40005d1	            0x744d	                            je 0x4000620	       467	utcopy.c	FUNCTION_16	SWITCH_2	IF_2
0x40005d3	          0x8b4b04	                mov ecx, dword [rbx + 4]	       471	utcopy.c	FUNCTION_16	SWITCH_2	CALL_9
0x40005d6	        0x488b7308	                mov rsi, qword [rbx + 8]	       471	utcopy.c	FUNCTION_16	SWITCH_2	CALL_9
0x40005da	          0x4889c7	                            mov rdi, rax	       471	utcopy.c	FUNCTION_16	SWITCH_2	CALL_9
0x40005dd	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       471	utcopy.c	FUNCTION_16	SWITCH_2	CALL_9
0x40005df	          0x8b4304	                mov eax, dword [rbx + 4]	       475	utcopy.c	FUNCTION_16	SWITCH_2
0x40005e2	          0x894518	            mov dword [rbp + 0x18], eax 	       475	utcopy.c	FUNCTION_16	SWITCH_2
0x40005e5	            0xeb31	                           jmp 0x4000618	       475	utcopy.c	FUNCTION_16	SWITCH_2
0x40005e7	          0x8b7b04	                mov edi, dword [rbx + 4]	       481	utcopy.c	FUNCTION_16	SWITCH_2	CALL_10
0x40005ea	      0xe80afeffff	        call sym.acpi_os_allocate_zeroed	       481	utcopy.c	FUNCTION_16	SWITCH_2	CALL_10
0x40005ef	          0x4885c0	                           test rax, rax	       482	utcopy.c	FUNCTION_16	SWITCH_2	IF_3
0x40005f2	        0x48894510	            mov qword [rbp + 0x10], rax 	       480	utcopy.c	FUNCTION_16	SWITCH_2
0x40005f6	            0x7428	                            je 0x4000620	       482	utcopy.c	FUNCTION_16	SWITCH_2	IF_3
0x40005f8	          0x8b4b04	                mov ecx, dword [rbx + 4]	       486	utcopy.c	FUNCTION_16	SWITCH_2	CALL_11
0x40005fb	        0x488b7308	                mov rsi, qword [rbx + 8]	       486	utcopy.c	FUNCTION_16	SWITCH_2	CALL_11
0x40005ff	          0x4889c7	                            mov rdi, rax	       486	utcopy.c	FUNCTION_16	SWITCH_2	CALL_11
0x4000602	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       486	utcopy.c	FUNCTION_16	SWITCH_2	CALL_11
0x4000604	          0x8b4304	                mov eax, dword [rbx + 4]	       490	utcopy.c	FUNCTION_16	SWITCH_2
0x4000607	          0x894518	            mov dword [rbp + 0x18], eax 	       490	utcopy.c	FUNCTION_16	SWITCH_2
0x400060a	        0x804d0c04	                  or byte [rbp + 0xc], 4	       494	utcopy.c	FUNCTION_16	SWITCH_2
0x400060e	            0xeb08	                           jmp 0x4000618	       494	utcopy.c	FUNCTION_16	SWITCH_2
0x4000610	        0x488b4308	                mov rax, qword [rbx + 8]	       508	utcopy.c	FUNCTION_16	SWITCH_2
0x4000614	        0x48894510	            mov qword [rbp + 0x10], rax 	       507	utcopy.c	FUNCTION_16	SWITCH_2
0x4000618	        0x49892c24	                    mov qword [r12], rbp	       518	utcopy.c	FUNCTION_16
0x400061c	            0x31c0	                            xor eax, eax	       519	utcopy.c	FUNCTION_16	CALL_12
0x400061e	            0xeb0d	                           jmp 0x400062d	       519	utcopy.c	FUNCTION_16	CALL_12
0x4000620	          0x4889ef	                            mov rdi, rbp	       522	utcopy.c	FUNCTION_16	CALL_13
0x4000623	      0xe800000000	                          call 0x4000628	       522	utcopy.c	FUNCTION_16	CALL_13
0x4000628	      0xb804000000	                              mov eax, 4	       523	utcopy.c	FUNCTION_16	CALL_14
0x400062d	              0x5a	                                 pop rdx	       623	utcopy.c	FUNCTION_18
0x400062e	              0x5b	                                 pop rbx	       623	utcopy.c	FUNCTION_18
0x400062f	              0x5d	                                 pop rbp	       623	utcopy.c	FUNCTION_18
0x4000630	            0x415c	                                 pop r12	       623	utcopy.c	FUNCTION_18
0x4000632	            0x415d	                                 pop r13	       623	utcopy.c	FUNCTION_18
0x4000634	            0x415e	                                 pop r14	       623	utcopy.c	FUNCTION_18
0x4000636	            0x415f	                                 pop r15	       623	utcopy.c	FUNCTION_18
0x4000638	              0xc3	                                     ret	       623	utcopy.c	FUNCTION_18
acpi_ut_copy_iobject_to_eobject	DO,0:ELSE,1:FOR,0:functions,0:IF,1:CALL,7:WHILE,0:SWITCH,0	37
0x400041d	              0x53	                                push rbx	       361	utcopy.c	FUNCTION_15
0x400041e	          0x4889f3	                            mov rbx, rsi	       361	utcopy.c	FUNCTION_15
0x4000421	        0x4883ec20	                           sub rsp, 0x20	       361	utcopy.c	FUNCTION_15
0x4000425	        0x488b7608	                mov rsi, qword [rsi + 8]	       361	utcopy.c	FUNCTION_15
0x4000429	    0x65488b042528	                mov rax, qword gs:[0x28]	       361	utcopy.c	FUNCTION_15
0x4000432	      0x4889442418	             mov qword [rsp + 0x18], rax	       361	utcopy.c	FUNCTION_15
0x4000437	            0x31c0	                            xor eax, eax	       361	utcopy.c	FUNCTION_15
0x4000439	        0x807f0904	                   cmp byte [rdi + 9], 4	       366	utcopy.c	FUNCTION_15	IF_1
0x400043d	        0x488d5618	                   lea rdx, [rsi + 0x18]	       317	utcopy.c	FUNCTION_14
0x4000441	            0x754d	                           jne 0x4000490	       366	utcopy.c	FUNCTION_15	IF_1
0x4000443	    0xc74424100000	               mov dword [rsp + 0x10], 0	       319	utcopy.c	FUNCTION_14
0x400044b	    0xc74424140100	               mov dword [rsp + 0x14], 1	       320	utcopy.c	FUNCTION_14
0x4000453	    0xc70604000000	                      mov dword [rsi], 4	       322	utcopy.c	FUNCTION_14
0x4000459	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       323	utcopy.c	FUNCTION_14
0x400045c	        0x48895608	                mov qword [rsi + 8], rdx	       324	utcopy.c	FUNCTION_14
0x4000460	          0x894604	                mov dword [rsi + 4], eax	       323	utcopy.c	FUNCTION_14
0x4000463	        0x486bc018	                     imul rax, rax, 0x18	       331	utcopy.c	FUNCTION_14
0x4000467	        0x488d4818	                   lea rcx, [rax + 0x18]	       331	utcopy.c	FUNCTION_14
0x400046b	          0x4801d0	                            add rax, rdx	       333	utcopy.c	FUNCTION_14
0x400046e	    0x48c7c2000000	                              mov rdx, 0	       336	utcopy.c	FUNCTION_14	CALL_8
0x4000475	        0x48890424	                    mov qword [rsp], rax	       333	utcopy.c	FUNCTION_14
0x4000479	      0x48894c2408	                mov qword [rsp + 8], rcx	       331	utcopy.c	FUNCTION_14
0x400047e	          0x4889e1	                            mov rcx, rsp	       336	utcopy.c	FUNCTION_14	CALL_8
0x4000481	      0xe800000000	                          call 0x4000486	       336	utcopy.c	FUNCTION_14	CALL_8
0x4000486	      0x488b542408	                mov rdx, qword [rsp + 8]	       340	utcopy.c	FUNCTION_14
0x400048b	          0x488913	                    mov qword [rbx], rdx	       340	utcopy.c	FUNCTION_14
0x400048e	            0xeb0c	                           jmp 0x400049c	       340	utcopy.c	FUNCTION_14
0x4000490	          0x4889d9	                            mov rcx, rbx	       378	utcopy.c	FUNCTION_15	ELSE_1	CALL_3
0x4000493	      0xe8a8fbffff	call sym.acpi_ut_copy_isimple_to_esimple	       378	utcopy.c	FUNCTION_15	ELSE_1	CALL_3
0x4000498	        0x48830318	                   add qword [rbx], 0x18	       395	utcopy.c	FUNCTION_15	ELSE_1
0x400049c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       399	utcopy.c	FUNCTION_15
0x40004a1	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       399	utcopy.c	FUNCTION_15
0x40004aa	            0x7405	                            je 0x40004b1	       399	utcopy.c	FUNCTION_15
0x40004ac	      0xe800000000	                          call 0x40004b1	       399	utcopy.c	FUNCTION_15
0x40004b1	        0x4883c420	                           add rsp, 0x20	       399	utcopy.c	FUNCTION_15
0x40004b5	              0x5b	                                 pop rbx	       399	utcopy.c	FUNCTION_15
0x40004b6	              0xc3	                                     ret	       399	utcopy.c	FUNCTION_15
acpi_ut_copy_ielement_to_ielement	DO,0:ELSE,1:FOR,0:functions,0:IF,4:CALL,6:WHILE,0:SWITCH,1	55
0x4000350	            0x4154	                                push r12	       795	utcopy.c	FUNCTION_20
0x4000352	              0x55	                                push rbp	       795	utcopy.c	FUNCTION_20
0x4000353	          0x4889d5	                            mov rbp, rdx	       795	utcopy.c	FUNCTION_20
0x4000356	              0x53	                                push rbx	       795	utcopy.c	FUNCTION_20
0x4000357	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       805	utcopy.c	FUNCTION_20
0x400035b	          0x4084ff	                           test dil, dil	       807	utcopy.c	FUNCTION_20	SWITCH_1
0x400035e	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       804	utcopy.c	FUNCTION_20
0x4000361	          0x4889f3	                            mov rbx, rsi	       795	utcopy.c	FUNCTION_20
0x4000364	        0x488b4018	            mov rax, qword [rax + 0x18] 	       804	utcopy.c	FUNCTION_20
0x4000368	        0x4c8d24d0	                  lea r12, [rax + rdx*8]	       804	utcopy.c	FUNCTION_20
0x400036c	            0x7407	                            je 0x4000375	       807	utcopy.c	FUNCTION_20	SWITCH_1
0x400036e	          0x40fecf	                                 dec dil	       807	utcopy.c	FUNCTION_20	SWITCH_1
0x4000371	            0x7451	                            je 0x40003c4	       807	utcopy.c	FUNCTION_20	SWITCH_1
0x4000373	            0xeb7a	                           jmp 0x40003ef	       807	utcopy.c	FUNCTION_20	SWITCH_1
0x4000375	          0x4885f6	                           test rsi, rsi	       812	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x4000378	            0x7440	                            je 0x40003ba	       812	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x400037a	         0xfb64e09	               movzx ecx, byte [rsi + 9]	       816	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x400037e	      0xba01000000	                              mov edx, 1	       816	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x4000383	      0xbe32030000	                          mov esi, 0x332	       816	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x4000388	    0x48c7c7000000	                              mov rdi, 0	       816	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x400038f	      0xe800000000	                          call 0x4000394	       816	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x4000394	          0x4885c0	                           test rax, rax	       819	utcopy.c	FUNCTION_20	SWITCH_1	IF_1	IF_2
0x4000397	          0x4889c5	                            mov rbp, rax	       816	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x400039a	            0x7507	                           jne 0x40003a3	       819	utcopy.c	FUNCTION_20	SWITCH_1	IF_1	IF_2
0x400039c	      0xb804000000	                              mov eax, 4	       820	utcopy.c	FUNCTION_20	SWITCH_1	IF_1	IF_2
0x40003a1	            0xeb51	                           jmp 0x40003f4	       820	utcopy.c	FUNCTION_20	SWITCH_1	IF_1	IF_2
0x40003a3	          0x4889df	                            mov rdi, rbx	       823	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x40003a6	          0x4889c6	                            mov rsi, rax	       823	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x40003a9	      0xe886feffff	     call sym.acpi_ut_copy_simple_object	       823	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x40003ae	            0x85c0	                           test eax, eax	       826	utcopy.c	FUNCTION_20	SWITCH_1	IF_1	IF_3	CALL_4
0x40003b0	            0x89c3	                            mov ebx, eax	       823	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x40003b2	            0x752f	                           jne 0x40003e3	       826	utcopy.c	FUNCTION_20	SWITCH_1	IF_1	IF_3	CALL_4
0x40003b4	        0x49892c24	                    mov qword [r12], rbp	       830	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x40003b8	            0xeb25	                           jmp 0x40003df	       830	utcopy.c	FUNCTION_20	SWITCH_1	IF_1
0x40003ba	    0x49c704240000	                      mov qword [r12], 0	       834	utcopy.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40003c2	            0xeb1b	                           jmp 0x40003df	       834	utcopy.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40003c4	          0x8b7e2c	            mov edi, dword [rsi + 0x2c] 	       843	utcopy.c	FUNCTION_20	SWITCH_1
0x40003c7	      0xe800000000	                          call 0x40003cc	       843	utcopy.c	FUNCTION_20	SWITCH_1
0x40003cc	          0x4885c0	                           test rax, rax	       845	utcopy.c	FUNCTION_20	SWITCH_1	IF_4
0x40003cf	            0x74cb	                            je 0x400039c	       845	utcopy.c	FUNCTION_20	SWITCH_1	IF_4
0x40003d1	          0x8a530c	                mov dl, byte [rbx + 0xc]	       849	utcopy.c	FUNCTION_20	SWITCH_1
0x40003d4	          0x88500c	                mov byte [rax + 0xc], dl	       849	utcopy.c	FUNCTION_20	SWITCH_1
0x40003d7	        0x48894530	            mov qword [rbp + 0x30], rax 	       853	utcopy.c	FUNCTION_20	SWITCH_1
0x40003db	        0x49890424	                    mov qword [r12], rax	       857	utcopy.c	FUNCTION_20	SWITCH_1
0x40003df	            0x31c0	                            xor eax, eax	       796	utcopy.c	FUNCTION_20
0x40003e1	            0xeb11	                           jmp 0x40003f4	       858	utcopy.c	FUNCTION_20	SWITCH_1
0x40003e3	          0x4889ef	                            mov rdi, rbp	       868	utcopy.c	FUNCTION_20	CALL_6
0x40003e6	      0xe800000000	                          call 0x40003eb	       868	utcopy.c	FUNCTION_20	CALL_6
0x40003eb	            0x89d8	                            mov eax, ebx	       869	utcopy.c	FUNCTION_20
0x40003ed	            0xeb05	                           jmp 0x40003f4	       869	utcopy.c	FUNCTION_20
0x40003ef	      0xb801100000	                         mov eax, 0x1001	       862	utcopy.c	FUNCTION_20	SWITCH_1
0x40003f4	              0x5b	                                 pop rbx	       870	utcopy.c	FUNCTION_20
0x40003f5	              0x5d	                                 pop rbp	       870	utcopy.c	FUNCTION_20
0x40003f6	            0x415c	                                 pop r12	       870	utcopy.c	FUNCTION_20
0x40003f8	              0xc3	                                     ret	       870	utcopy.c	FUNCTION_20
acpi_ut_copy_ielement_to_eelement	DO,0:ELSE,0:FOR,0:functions,0:IF,1:CALL,5:WHILE,0:SWITCH,1	44
0x400017d	              0x53	                                push rbx	       216	utcopy.c	FUNCTION_13
0x400017e	          0x4889f0	                            mov rax, rsi	       216	utcopy.c	FUNCTION_13
0x4000181	          0x4889cb	                            mov rbx, rcx	       216	utcopy.c	FUNCTION_13
0x4000184	        0x4883ec10	                           sub rsp, 0x10	       216	utcopy.c	FUNCTION_13
0x4000188	          0x8b7210	            mov esi, dword [rdx + 0x10] 	       226	utcopy.c	FUNCTION_13
0x400018b	    0x65488b0c2528	                mov rcx, qword gs:[0x28]	       216	utcopy.c	FUNCTION_13
0x4000194	      0x48894c2408	                mov qword [rsp + 8], rcx	       216	utcopy.c	FUNCTION_13
0x4000199	            0x31c9	                            xor ecx, ecx	       216	utcopy.c	FUNCTION_13
0x400019b	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	       228	utcopy.c	FUNCTION_13
0x400019f	        0x486bf618	                     imul rsi, rsi, 0x18	       226	utcopy.c	FUNCTION_13
0x40001a3	        0x48037108	                add rsi, qword [rcx + 8]	       226	utcopy.c	FUNCTION_13
0x40001a7	          0x4084ff	                           test dil, dil	       230	utcopy.c	FUNCTION_13	SWITCH_1
0x40001aa	            0x7429	                            je 0x40001d5	       230	utcopy.c	FUNCTION_13	SWITCH_1
0x40001ac	          0x40fecf	                                 dec dil	       230	utcopy.c	FUNCTION_13	SWITCH_1
0x40001af	            0x7545	                           jne 0x40001f6	       230	utcopy.c	FUNCTION_13	SWITCH_1
0x40001b1	    0xc70604000000	                      mov dword [rsi], 4	       248	utcopy.c	FUNCTION_13	SWITCH_1
0x40001b7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       249	utcopy.c	FUNCTION_13	SWITCH_1
0x40001ba	          0x894604	                mov dword [rsi + 4], eax	       249	utcopy.c	FUNCTION_13	SWITCH_1
0x40001bd	          0x488b03	                    mov rax, qword [rbx]	       251	utcopy.c	FUNCTION_13	SWITCH_1	CALL_4
0x40001c0	        0x48894608	                mov qword [rsi + 8], rax	       250	utcopy.c	FUNCTION_13	SWITCH_1
0x40001c4	        0x48897230	             mov qword [rdx + 0x30], rsi	       256	utcopy.c	FUNCTION_13	SWITCH_1
0x40001c8	          0x8b4604	                mov eax, dword [rsi + 4]	       262	utcopy.c	FUNCTION_13	SWITCH_1	CALL_5
0x40001cb	        0x486bc018	                     imul rax, rax, 0x18	       262	utcopy.c	FUNCTION_13	SWITCH_1	CALL_5
0x40001cf	        0x48890424	                    mov qword [rsp], rax	       262	utcopy.c	FUNCTION_13	SWITCH_1	CALL_5
0x40001d3	            0xeb12	                           jmp 0x40001e7	       267	utcopy.c	FUNCTION_13	SWITCH_1
0x40001d5	          0x488b13	                    mov rdx, qword [rbx]	       235	utcopy.c	FUNCTION_13	SWITCH_1	CALL_2
0x40001d8	          0x4889e1	                            mov rcx, rsp	       235	utcopy.c	FUNCTION_13	SWITCH_1	CALL_2
0x40001db	          0x4889c7	                            mov rdi, rax	       235	utcopy.c	FUNCTION_13	SWITCH_1	CALL_2
0x40001de	      0xe85dfeffff	call sym.acpi_ut_copy_isimple_to_esimple	       235	utcopy.c	FUNCTION_13	SWITCH_1	CALL_2
0x40001e3	            0x85c0	                           test eax, eax	       239	utcopy.c	FUNCTION_13	SWITCH_1	IF_1	CALL_3
0x40001e5	            0x7514	                           jne 0x40001fb	       239	utcopy.c	FUNCTION_13	SWITCH_1	IF_1	CALL_3
0x40001e7	        0x488b0424	                    mov rax, qword [rsp]	       274	utcopy.c	FUNCTION_13
0x40001eb	          0x480103	                    add qword [rbx], rax	       274	utcopy.c	FUNCTION_13
0x40001ee	        0x48014308	                add qword [rbx + 8], rax	       275	utcopy.c	FUNCTION_13
0x40001f2	            0x31c0	                            xor eax, eax	       276	utcopy.c	FUNCTION_13
0x40001f4	            0xeb05	                           jmp 0x40001fb	       276	utcopy.c	FUNCTION_13
0x40001f6	      0xb801100000	                         mov eax, 0x1001	       271	utcopy.c	FUNCTION_13	SWITCH_1
0x40001fb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       277	utcopy.c	FUNCTION_13
0x4000200	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       277	utcopy.c	FUNCTION_13
0x4000209	            0x7405	                            je 0x4000210	       277	utcopy.c	FUNCTION_13
0x400020b	      0xe800000000	                          call 0x4000210	       277	utcopy.c	FUNCTION_13
0x4000210	        0x4883c410	                           add rsp, 0x10	       277	utcopy.c	FUNCTION_13
0x4000214	              0x5b	                                 pop rbx	       277	utcopy.c	FUNCTION_13
0x4000215	              0xc3	                                     ret	       277	utcopy.c	FUNCTION_13
acpi_ut_copy_simple_object	DO,0:ELSE,0:FOR,0:functions,0:IF,9:CALL,14:WHILE,0:SWITCH,1	86
0x4000234	            0x4154	                                push r12	       642	utcopy.c	FUNCTION_19
0x4000236	              0x55	                                push rbp	       642	utcopy.c	FUNCTION_19
0x4000237	      0xb848000000	                           mov eax, 0x48	       662	utcopy.c	FUNCTION_19	CALL_3
0x400023c	              0x53	                                push rbx	       642	utcopy.c	FUNCTION_19
0x400023d	        0x807f080f	                 cmp byte [rdi + 8], 0xf	       659	utcopy.c	FUNCTION_19	IF_1
0x4000241	          0x4889fd	                            mov rbp, rdi	       642	utcopy.c	FUNCTION_19
0x4000244	      0xb928000000	                           mov ecx, 0x28	       662	utcopy.c	FUNCTION_19	CALL_3
0x4000249	          0x4889f2	                            mov rdx, rsi	       642	utcopy.c	FUNCTION_19
0x400024c	      0x66448b4e0a	               mov r9w, word [rsi + 0xa]	       650	utcopy.c	FUNCTION_19
0x4000251	          0x4c8b06	                     mov r8, qword [rsi]	       651	utcopy.c	FUNCTION_19
0x4000254	          0x4889f7	                            mov rdi, rsi	       662	utcopy.c	FUNCTION_19	CALL_3
0x4000257	          0x4889ee	                            mov rsi, rbp	       662	utcopy.c	FUNCTION_19	CALL_3
0x400025a	        0x480f45c8	                         cmovne rcx, rax	       662	utcopy.c	FUNCTION_19	CALL_3
0x400025e	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       662	utcopy.c	FUNCTION_19	CALL_3
0x4000260	      0x6644894a0a	               mov word [rdx + 0xa], r9w	       667	utcopy.c	FUNCTION_19
0x4000265	          0x4c8902	                     mov qword [rdx], r8	       668	utcopy.c	FUNCTION_19
0x4000268	          0x8a4209	                  mov al, byte [rdx + 9]	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x400026b	        0x80620cfd	              and byte [rdx + 0xc], 0xfd	       672	utcopy.c	FUNCTION_19
0x400026f	          0x83e802	                              sub eax, 2	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x4000272	            0x3c12	                            cmp al, 0x12	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x4000274	     0xf87cb000000	                            ja 0x4000345	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x400027a	           0xfb6c0	                           movzx eax, al	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x400027d	          0x4889d3	                            mov rbx, rdx	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x4000280	    0x488b04c50000	                  mov rax, qword [rax*8]	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x4000288	      0xe900000000	                           jmp 0x400028d	       676	utcopy.c	FUNCTION_19	SWITCH_1
0x400028d	          0x4531e4	                          xor r12d, r12d	       775	utcopy.c	FUNCTION_19
0x4000290	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       683	utcopy.c	FUNCTION_19	SWITCH_1	IF_2
0x4000295	     0xf84ad000000	                            je 0x4000348	       683	utcopy.c	FUNCTION_19	SWITCH_1	IF_2
0x400029b	        0x448b6518	           mov r12d, dword [rbp + 0x18] 	       684	utcopy.c	FUNCTION_19	SWITCH_1	IF_2
0x400029f	          0x4585e4	                         test r12d, r12d	       683	utcopy.c	FUNCTION_19	SWITCH_1	IF_2
0x40002a2	     0xf84a0000000	                            je 0x4000348	       683	utcopy.c	FUNCTION_19	SWITCH_1	IF_2
0x40002a8	          0x4489e7	                           mov edi, r12d	       686	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	CALL_5
0x40002ab	      0xe866ffffff	               call sym.acpi_os_allocate	       686	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	CALL_5
0x40002b0	          0x4885c0	                           test rax, rax	       687	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	IF_3
0x40002b3	        0x48894310	             mov qword [rbx + 0x10], rax	       685	utcopy.c	FUNCTION_19	SWITCH_1	IF_2
0x40002b7	            0x750b	                           jne 0x40002c4	       687	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	IF_3
0x40002b9	    0x41bc04000000	                             mov r12d, 4	       688	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	IF_3
0x40002bf	      0xe984000000	                           jmp 0x4000348	       688	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	IF_3
0x40002c4	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	       693	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	CALL_6
0x40002c7	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       693	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	CALL_6
0x40002cb	          0x4889c7	                            mov rdi, rax	       693	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	CALL_6
0x40002ce	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       693	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	CALL_6
0x40002d0	            0xeb73	                           jmp 0x4000345	       693	utcopy.c	FUNCTION_19	SWITCH_1	IF_2	CALL_6
0x40002d2	          0x4531e4	                          xor r12d, r12d	       775	utcopy.c	FUNCTION_19
0x40002d5	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       705	utcopy.c	FUNCTION_19	SWITCH_1	IF_4
0x40002da	            0x746c	                            je 0x4000348	       705	utcopy.c	FUNCTION_19	SWITCH_1	IF_4
0x40002dc	          0x8b7d18	            mov edi, dword [rbp + 0x18] 	       707	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_7
0x40002df	          0x48ffc7	                                 inc rdi	       707	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_7
0x40002e2	      0xe82fffffff	               call sym.acpi_os_allocate	       707	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_7
0x40002e7	          0x4885c0	                           test rax, rax	       709	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	IF_5
0x40002ea	        0x48894310	             mov qword [rbx + 0x10], rax	       706	utcopy.c	FUNCTION_19	SWITCH_1	IF_4
0x40002ee	            0x74c9	                            je 0x40002b9	       709	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	IF_5
0x40002f0	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	       715	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_8
0x40002f3	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       715	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_8
0x40002f7	          0x4889c7	                            mov rdi, rax	       715	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_8
0x40002fa	          0x48ffc1	                                 inc rcx	       715	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_8
0x40002fd	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       715	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_8
0x40002ff	            0xeb47	                           jmp 0x4000348	       715	utcopy.c	FUNCTION_19	SWITCH_1	IF_4	CALL_8
0x4000301	          0x4531e4	                          xor r12d, r12d	       775	utcopy.c	FUNCTION_19
0x4000304	        0x807d0d04	                 cmp byte [rbp + 0xd], 4	       730	utcopy.c	FUNCTION_19	SWITCH_1	IF_6
0x4000308	            0x743e	                            je 0x4000348	       730	utcopy.c	FUNCTION_19	SWITCH_1	IF_6
0x400030a	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       734	utcopy.c	FUNCTION_19	SWITCH_1	CALL_9
0x400030e	            0xeb0c	                           jmp 0x400031c	       734	utcopy.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000310	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       741	utcopy.c	FUNCTION_19	SWITCH_1	IF_7
0x4000314	          0x4531e4	                          xor r12d, r12d	       775	utcopy.c	FUNCTION_19
0x4000317	          0x4885ff	                           test rdi, rdi	       741	utcopy.c	FUNCTION_19	SWITCH_1	IF_7
0x400031a	            0x742c	                            je 0x4000348	       741	utcopy.c	FUNCTION_19	SWITCH_1	IF_7
0x400031c	      0xe800000000	                          call 0x4000321	       742	utcopy.c	FUNCTION_19	SWITCH_1	IF_7	CALL_10
0x4000321	            0xeb25	                           jmp 0x4000348	       742	utcopy.c	FUNCTION_19	SWITCH_1	IF_7	CALL_10
0x4000323	        0x488d5210	                   lea rdx, [rdx + 0x10]	       752	utcopy.c	FUNCTION_19	SWITCH_1	CALL_11
0x4000327	      0xbe01000000	                              mov esi, 1	       752	utcopy.c	FUNCTION_19	SWITCH_1	CALL_11
0x400032c	      0xbf01000000	                              mov edi, 1	       752	utcopy.c	FUNCTION_19	SWITCH_1	CALL_11
0x4000331	            0xeb09	                           jmp 0x400033c	       752	utcopy.c	FUNCTION_19	SWITCH_1	CALL_11
0x4000333	        0x488d5210	                   lea rdx, [rdx + 0x10]	       760	utcopy.c	FUNCTION_19	SWITCH_1	CALL_13
0x4000337	            0x31f6	                            xor esi, esi	       760	utcopy.c	FUNCTION_19	SWITCH_1	CALL_13
0x4000339	          0x83cfff	                      or edi, 0xffffffff	       760	utcopy.c	FUNCTION_19	SWITCH_1	CALL_13
0x400033c	              0x5b	                                 pop rbx	       776	utcopy.c	FUNCTION_19
0x400033d	              0x5d	                                 pop rbp	       776	utcopy.c	FUNCTION_19
0x400033e	            0x415c	                                 pop r12	       776	utcopy.c	FUNCTION_19
0x4000340	      0xe900000000	                           jmp 0x4000345	       760	utcopy.c	FUNCTION_19	SWITCH_1	CALL_13
0x4000345	          0x4531e4	                          xor r12d, r12d	       775	utcopy.c	FUNCTION_19
0x4000348	          0x4489e0	                           mov eax, r12d	       776	utcopy.c	FUNCTION_19
0x400034b	              0x5b	                                 pop rbx	       776	utcopy.c	FUNCTION_19
0x400034c	              0x5d	                                 pop rbp	       776	utcopy.c	FUNCTION_19
0x400034d	            0x415c	                                 pop r12	       776	utcopy.c	FUNCTION_19
0x400034f	              0xc3	                                     ret	       776	utcopy.c	FUNCTION_19
acpi_ut_copy_iobject_to_iobject	DO,0:ELSE,1:FOR,0:functions,0:IF,3:CALL,8:WHILE,0:SWITCH,0	63
0x4000639	            0x4155	                                push r13	       947	utcopy.c	FUNCTION_22
0x400063b	            0x4154	                                push r12	       947	utcopy.c	FUNCTION_22
0x400063d	          0x4989d5	                            mov r13, rdx	       947	utcopy.c	FUNCTION_22
0x4000640	              0x55	                                push rbp	       947	utcopy.c	FUNCTION_22
0x4000641	              0x53	                                push rbx	       947	utcopy.c	FUNCTION_22
0x4000642	          0x4989f4	                            mov r12, rsi	       947	utcopy.c	FUNCTION_22
0x4000645	         0xfb64f09	               movzx ecx, byte [rdi + 9]	       954	utcopy.c	FUNCTION_22	CALL_2
0x4000649	          0x4889fb	                            mov rbx, rdi	       947	utcopy.c	FUNCTION_22
0x400064c	      0xba01000000	                              mov edx, 1	       954	utcopy.c	FUNCTION_22	CALL_2
0x4000651	      0xbeba030000	                          mov esi, 0x3ba	       954	utcopy.c	FUNCTION_22	CALL_2
0x4000656	    0x48c7c7000000	                              mov rdi, 0	       954	utcopy.c	FUNCTION_22	CALL_2
0x400065d	      0xe800000000	                          call 0x4000662	       954	utcopy.c	FUNCTION_22	CALL_2
0x4000662	          0x4889c5	                            mov rbp, rax	       954	utcopy.c	FUNCTION_22	CALL_2
0x4000665	        0x49890424	                    mov qword [r12], rax	       954	utcopy.c	FUNCTION_22	CALL_2
0x4000669	      0xb804000000	                              mov eax, 4	       956	utcopy.c	FUNCTION_22	IF_1	CALL_3
0x400066e	          0x4885ed	                           test rbp, rbp	       955	utcopy.c	FUNCTION_22	IF_1
0x4000671	     0xf8493000000	                            je 0x400070a	       955	utcopy.c	FUNCTION_22	IF_1
0x4000677	        0x807b0904	                   cmp byte [rbx + 9], 4	       961	utcopy.c	FUNCTION_22	IF_2
0x400067b	            0x7571	                           jne 0x40006ee	       961	utcopy.c	FUNCTION_22	IF_2
0x400067d	        0xc6450904	                   mov byte [rbp + 9], 4	       896	utcopy.c	FUNCTION_21
0x4000681	          0x8a430c	                mov al, byte [rbx + 0xc]	       897	utcopy.c	FUNCTION_21
0x4000684	          0x88450c	                mov byte [rbp + 0xc], al	       897	utcopy.c	FUNCTION_21
0x4000687	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       898	utcopy.c	FUNCTION_21
0x400068a	          0x89452c	            mov dword [rbp + 0x2c], eax 	       898	utcopy.c	FUNCTION_21
0x400068d	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       903	utcopy.c	FUNCTION_21	CALL_2
0x4000690	    0x488d3cc50800	                    lea rdi, [rax*8 + 8]	       903	utcopy.c	FUNCTION_21	CALL_2
0x4000698	      0xe85cfdffff	        call sym.acpi_os_allocate_zeroed	       903	utcopy.c	FUNCTION_21	CALL_2
0x400069d	          0x4885c0	                           test rax, rax	       907	utcopy.c	FUNCTION_21	IF_1
0x40006a0	        0x48894518	            mov qword [rbp + 0x18], rax 	       903	utcopy.c	FUNCTION_21	CALL_2
0x40006a4	            0x751f	                           jne 0x40006c5	       907	utcopy.c	FUNCTION_21	IF_1
0x40006a6	    0x48c7c2000000	                              mov rdx, 0	       908	utcopy.c	FUNCTION_21	IF_1	CALL_3
0x40006ad	      0xbe8c030000	                          mov esi, 0x38c	       908	utcopy.c	FUNCTION_21	IF_1	CALL_3
0x40006b2	    0x48c7c7000000	                              mov rdi, 0	       908	utcopy.c	FUNCTION_21	IF_1	CALL_3
0x40006b9	      0xe800000000	                          call 0x40006be	       908	utcopy.c	FUNCTION_21	IF_1	CALL_3
0x40006be	      0xbb04000000	                              mov ebx, 4	       909	utcopy.c	FUNCTION_21	IF_1	CALL_4
0x40006c3	            0xeb3a	                           jmp 0x40006ff	       909	utcopy.c	FUNCTION_21	IF_1	CALL_4
0x40006c5	          0x4889df	                            mov rdi, rbx	       916	utcopy.c	FUNCTION_21	CALL_5
0x40006c8	          0x4c89e9	                            mov rcx, r13	       916	utcopy.c	FUNCTION_21	CALL_5
0x40006cb	    0x48c7c2000000	                              mov rdx, 0	       916	utcopy.c	FUNCTION_21	CALL_5
0x40006d2	          0x4889ee	                            mov rsi, rbp	       916	utcopy.c	FUNCTION_21	CALL_5
0x40006d5	      0xe800000000	                          call 0x40006da	       916	utcopy.c	FUNCTION_21	CALL_5
0x40006da	            0x85c0	                           test eax, eax	       919	utcopy.c	FUNCTION_21	IF_2	CALL_6
0x40006dc	            0x89c3	                            mov ebx, eax	       916	utcopy.c	FUNCTION_21	CALL_5
0x40006de	            0x7504	                           jne 0x40006e4	       919	utcopy.c	FUNCTION_21	IF_2	CALL_6
0x40006e0	            0x31c0	                            xor eax, eax	       972	utcopy.c	FUNCTION_22	IF_3	CALL_7
0x40006e2	            0xeb26	                           jmp 0x400070a	       972	utcopy.c	FUNCTION_22	IF_3	CALL_7
0x40006e4	          0x4889ef	                            mov rdi, rbp	       923	utcopy.c	FUNCTION_21	IF_2	CALL_7
0x40006e7	      0xe800000000	                          call 0x40006ec	       923	utcopy.c	FUNCTION_21	IF_2	CALL_7
0x40006ec	            0xeb11	                           jmp 0x40006ff	       923	utcopy.c	FUNCTION_21	IF_2	CALL_7
0x40006ee	          0x4889df	                            mov rdi, rbx	       966	utcopy.c	FUNCTION_22	ELSE_1	CALL_5
0x40006f1	          0x4889ee	                            mov rsi, rbp	       966	utcopy.c	FUNCTION_22	ELSE_1	CALL_5
0x40006f4	      0xe83bfbffff	     call sym.acpi_ut_copy_simple_object	       966	utcopy.c	FUNCTION_22	ELSE_1	CALL_5
0x40006f9	            0x85c0	                           test eax, eax	       971	utcopy.c	FUNCTION_22	IF_3	CALL_6
0x40006fb	            0x89c3	                            mov ebx, eax	       966	utcopy.c	FUNCTION_22	ELSE_1	CALL_5
0x40006fd	            0x74e1	                            je 0x40006e0	       971	utcopy.c	FUNCTION_22	IF_3	CALL_6
0x40006ff	        0x498b3c24	                    mov rdi, qword [r12]	       972	utcopy.c	FUNCTION_22	IF_3	CALL_7
0x4000703	      0xe800000000	                          call 0x4000708	       972	utcopy.c	FUNCTION_22	IF_3	CALL_7
0x4000708	            0x89d8	                            mov eax, ebx	       972	utcopy.c	FUNCTION_22	IF_3	CALL_7
0x400070a	              0x5b	                                 pop rbx	       976	utcopy.c	FUNCTION_22
0x400070b	              0x5d	                                 pop rbp	       976	utcopy.c	FUNCTION_22
0x400070c	            0x415c	                                 pop r12	       976	utcopy.c	FUNCTION_22
0x400070e	            0x415d	                                 pop r13	       976	utcopy.c	FUNCTION_22
0x4000710	              0xc3	                                     ret	       976	utcopy.c	FUNCTION_22
acpi_ut_copy_isimple_to_esimple	DO,0:ELSE,0:FOR,0:functions,0:IF,1:CALL,13:WHILE,0:SWITCH,2	89
0x4000040	            0x31c0	                            xor eax, eax	        93	utcopy.c	FUNCTION_12	IF_1	CALL_2
0x4000042	          0x4885ff	                           test rdi, rdi	        92	utcopy.c	FUNCTION_12	IF_1
0x4000045	    0x48c701000000	                      mov qword [rcx], 0	        86	utcopy.c	FUNCTION_12
0x400004c	     0xf842a010000	                            je 0x400017c	        92	utcopy.c	FUNCTION_12	IF_1
0x4000052	          0x4989f8	                             mov r8, rdi	        92	utcopy.c	FUNCTION_12	IF_1
0x4000055	          0x4989ca	                            mov r10, rcx	        92	utcopy.c	FUNCTION_12	IF_1
0x4000058	          0x4889f7	                            mov rdi, rsi	        98	utcopy.c	FUNCTION_12	CALL_3
0x400005b	      0xb906000000	                              mov ecx, 6	        98	utcopy.c	FUNCTION_12	CALL_3
0x4000060	            0xf3ab	              rep stosd dword [rdi], eax	        98	utcopy.c	FUNCTION_12	CALL_3
0x4000062	      0x410fb64009	                movzx eax, byte [r8 + 9]	       104	utcopy.c	FUNCTION_12
0x4000067	            0x8906	                    mov dword [rsi], eax	       104	utcopy.c	FUNCTION_12
0x4000069	        0x458a4809	                  mov r9b, byte [r8 + 9]	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x400006d	        0x4180f903	                              cmp r9b, 3	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x4000071	            0x746b	                            je 0x40000de	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x4000073	              0x53	                                push rbx	        81	utcopy.c	FUNCTION_12
0x4000074	          0x4889f3	                            mov rbx, rsi	        81	utcopy.c	FUNCTION_12
0x4000077	            0x7743	                            ja 0x40000bc	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x4000079	        0x4180f901	                              cmp r9b, 1	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x400007d	     0xf8485000000	                            je 0x4000108	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x4000083	        0x4180f902	                              cmp r9b, 2	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x4000087	     0xf85be000000	                           jne 0x400014b	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x400008d	        0x48895608	                mov qword [rsi + 8], rdx	       111	utcopy.c	FUNCTION_12	SWITCH_1
0x4000091	        0x418b4818	              mov ecx, dword [r8 + 0x18]	       112	utcopy.c	FUNCTION_12	SWITCH_1
0x4000095	          0x4889d7	                            mov rdi, rdx	       118	utcopy.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000098	          0x894e04	                mov dword [rsi + 4], ecx	       112	utcopy.c	FUNCTION_12	SWITCH_1
0x400009b	        0x418b4818	              mov ecx, dword [r8 + 0x18]	       113	utcopy.c	FUNCTION_12	SWITCH_1	CALL_4
0x400009f	        0x4883c108	                              add rcx, 8	       113	utcopy.c	FUNCTION_12	SWITCH_1	CALL_4
0x40000a3	        0x4883e1f8	             and rcx, 0xfffffffffffffff8	       113	utcopy.c	FUNCTION_12	SWITCH_1	CALL_4
0x40000a7	          0x49890a	                    mov qword [r10], rcx	       113	utcopy.c	FUNCTION_12	SWITCH_1	CALL_4
0x40000aa	        0x418b4818	              mov ecx, dword [r8 + 0x18]	       118	utcopy.c	FUNCTION_12	SWITCH_1	CALL_5
0x40000ae	        0x498b7010	              mov rsi, qword [r8 + 0x10]	       118	utcopy.c	FUNCTION_12	SWITCH_1	CALL_5
0x40000b2	          0x48ffc1	                                 inc rcx	       118	utcopy.c	FUNCTION_12	SWITCH_1	CALL_5
0x40000b5	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       118	utcopy.c	FUNCTION_12	SWITCH_1	CALL_5
0x40000b7	      0xe98b000000	                           jmp 0x4000147	       118	utcopy.c	FUNCTION_12	SWITCH_1	CALL_5
0x40000bc	        0x4180f90c	                            cmp r9b, 0xc	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x40000c0	            0x746d	                            je 0x400012f	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x40000c2	        0x4180f914	                           cmp r9b, 0x14	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x40000c6	            0x744a	                            je 0x4000112	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x40000c8	        0x4180f90b	                            cmp r9b, 0xb	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x40000cc	            0x757d	                           jne 0x400014b	       108	utcopy.c	FUNCTION_12	SWITCH_1
0x40000ce	        0x418b5028	              mov edx, dword [r8 + 0x28]	       178	utcopy.c	FUNCTION_12	SWITCH_1
0x40000d2	          0x895604	                mov dword [rsi + 4], edx	       177	utcopy.c	FUNCTION_12	SWITCH_1
0x40000d5	        0x418b402c	              mov eax, dword [r8 + 0x2c]	       181	utcopy.c	FUNCTION_12	SWITCH_1
0x40000d9	          0x894608	                mov dword [rsi + 8], eax	       180	utcopy.c	FUNCTION_12	SWITCH_1
0x40000dc	            0xeb69	                           jmp 0x4000147	       180	utcopy.c	FUNCTION_12	SWITCH_1
0x40000de	        0x48895608	                mov qword [rsi + 8], rdx	       125	utcopy.c	FUNCTION_12	SWITCH_1
0x40000e2	        0x418b4018	              mov eax, dword [r8 + 0x18]	       126	utcopy.c	FUNCTION_12	SWITCH_1
0x40000e6	          0x4889d7	                            mov rdi, rdx	       131	utcopy.c	FUNCTION_12	SWITCH_1	CALL_7
0x40000e9	          0x894604	                mov dword [rsi + 4], eax	       126	utcopy.c	FUNCTION_12	SWITCH_1
0x40000ec	        0x418b4018	              mov eax, dword [r8 + 0x18]	       127	utcopy.c	FUNCTION_12	SWITCH_1
0x40000f0	        0x4883c007	                              add rax, 7	       127	utcopy.c	FUNCTION_12	SWITCH_1
0x40000f4	        0x4883e0f8	             and rax, 0xfffffffffffffff8	       127	utcopy.c	FUNCTION_12	SWITCH_1
0x40000f8	          0x498902	                    mov qword [r10], rax	       127	utcopy.c	FUNCTION_12	SWITCH_1
0x40000fb	        0x418b4818	              mov ecx, dword [r8 + 0x18]	       131	utcopy.c	FUNCTION_12	SWITCH_1	CALL_7
0x40000ff	            0x31c0	                            xor eax, eax	       196	utcopy.c	FUNCTION_12	CALL_13
0x4000101	        0x498b7010	              mov rsi, qword [r8 + 0x10]	       131	utcopy.c	FUNCTION_12	SWITCH_1	CALL_7
0x4000105	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       131	utcopy.c	FUNCTION_12	SWITCH_1	CALL_7
0x4000107	              0xc3	                                     ret	       197	utcopy.c	FUNCTION_12
0x4000108	        0x498b4010	              mov rax, qword [r8 + 0x10]	       138	utcopy.c	FUNCTION_12	SWITCH_1
0x400010c	        0x48894608	                mov qword [rsi + 8], rax	       138	utcopy.c	FUNCTION_12	SWITCH_1
0x4000110	            0xeb35	                           jmp 0x4000147	       138	utcopy.c	FUNCTION_12	SWITCH_1
0x4000112	      0x4180780d05	                  cmp byte [r8 + 0xd], 5	       145	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2
0x4000117	            0x755d	                           jne 0x4000176	       145	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2
0x4000119	        0x498b5018	              mov rdx, qword [r8 + 0x18]	       152	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2
0x400011d	        0x48895608	                mov qword [rsi + 8], rdx	       151	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2
0x4000121	        0x498b7818	              mov rdi, qword [r8 + 0x18]	       154	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2	CALL_8
0x4000125	      0xe800000000	                          call 0x400012a	       154	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2	CALL_8
0x400012a	          0x894304	                mov dword [rbx + 4], eax	       153	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2
0x400012d	            0xeb18	                           jmp 0x4000147	       153	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2
0x400012f	      0x410fb6500d	              movzx edx, byte [r8 + 0xd]	       167	utcopy.c	FUNCTION_12	SWITCH_1
0x4000134	          0x895604	                mov dword [rsi + 4], edx	       167	utcopy.c	FUNCTION_12	SWITCH_1
0x4000137	        0x498b5028	              mov rdx, qword [r8 + 0x28]	       170	utcopy.c	FUNCTION_12	SWITCH_1
0x400013b	        0x48895608	                mov qword [rsi + 8], rdx	       169	utcopy.c	FUNCTION_12	SWITCH_1
0x400013f	      0x410fb6400e	              movzx eax, byte [r8 + 0xe]	       171	utcopy.c	FUNCTION_12	SWITCH_1
0x4000144	          0x894610	             mov dword [rsi + 0x10], eax	       171	utcopy.c	FUNCTION_12	SWITCH_1
0x4000147	            0x31c0	                            xor eax, eax	       196	utcopy.c	FUNCTION_12	CALL_13
0x4000149	            0xeb30	                           jmp 0x400017b	       182	utcopy.c	FUNCTION_12	SWITCH_1
0x400014b	        0x410fb6f9	                          movzx edi, r9b	       188	utcopy.c	FUNCTION_12	SWITCH_1	CALL_10
0x400014f	      0xe800000000	                          call 0x4000154	       188	utcopy.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000154	    0x48c7c2000000	                              mov rdx, 0	       188	utcopy.c	FUNCTION_12	SWITCH_1	CALL_10
0x400015b	          0x4889c1	                            mov rcx, rax	       188	utcopy.c	FUNCTION_12	SWITCH_1	CALL_10
0x400015e	      0xbebf000000	                           mov esi, 0xbf	       188	utcopy.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000163	    0x48c7c7000000	                              mov rdi, 0	       188	utcopy.c	FUNCTION_12	SWITCH_1	CALL_10
0x400016a	      0xe800000000	                          call 0x400016f	       188	utcopy.c	FUNCTION_12	SWITCH_1	CALL_10
0x400016f	      0xb80f000000	                            mov eax, 0xf	       193	utcopy.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000174	            0xeb05	                           jmp 0x400017b	       193	utcopy.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000176	      0xb808000000	                              mov eax, 8	       161	utcopy.c	FUNCTION_12	SWITCH_1	SWITCH_2	CALL_9
0x400017b	              0x5b	                                 pop rbx	       197	utcopy.c	FUNCTION_12
0x400017c	              0xc3	                                     ret	       197	utcopy.c	FUNCTION_12
