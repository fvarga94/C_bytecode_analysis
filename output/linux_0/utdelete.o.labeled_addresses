acpi_ut_delete_internal_object_list	WHILE,0:IF,0:FOR,1:ELSE,0:SWITCH,0:DO,0:CALL,3:functions,0	14
0x4000068	              0x55	                                push rbp	       322	utdelete.c	FUNCTION_2
0x4000069	          0x4889fd	                            mov rbp, rdi	       322	utdelete.c	FUNCTION_2
0x400006c	              0x53	                                push rbx	       322	utdelete.c	FUNCTION_2
0x400006d	          0x4889fb	                            mov rbx, rdi	       329	utdelete.c	FUNCTION_2	FOR_1
0x4000070	          0x488b3b	                    mov rdi, qword [rbx]	       329	utdelete.c	FUNCTION_2	FOR_1
0x4000073	          0x4885ff	                           test rdi, rdi	       329	utdelete.c	FUNCTION_2	FOR_1
0x4000076	            0x740b	                            je 0x4000083	       329	utdelete.c	FUNCTION_2	FOR_1
0x4000078	      0xe800000000	                          call 0x400007d	       330	utdelete.c	FUNCTION_2	FOR_1	CALL_2
0x400007d	        0x4883c308	                              add rbx, 8	       329	utdelete.c	FUNCTION_2	FOR_1
0x4000081	            0xebed	                           jmp 0x4000070	       329	utdelete.c	FUNCTION_2	FOR_1
0x4000083	          0x4889ef	                            mov rdi, rbp	        62	aclinuxex.h	FUNCTION_9	CALL_1
0x4000086	              0x5b	                                 pop rbx	       337	utdelete.c	FUNCTION_2
0x4000087	              0x5d	                                 pop rbp	       337	utdelete.c	FUNCTION_2
0x4000088	      0xe900000000	        jmp sym.acpi_ut_update_ref_count	        62	aclinuxex.h	FUNCTION_9	CALL_1
acpi_ut_update_ref_count	WHILE,0:IF,6:FOR,0:ELSE,0:SWITCH,1:DO,0:CALL,13:functions,0	189
0x400008d	          0x4885ff	                           test rdi, rdi	       361	utdelete.c	FUNCTION_3	IF_1
0x4000090	     0xf84d9020000	                            je 0x400036f	       361	utdelete.c	FUNCTION_3	IF_1
0x4000096	            0x4154	                                push r12	       354	utdelete.c	FUNCTION_3
0x4000098	              0x55	                                push rbp	       354	utdelete.c	FUNCTION_3
0x4000099	            0x89f5	                            mov ebp, esi	       354	utdelete.c	FUNCTION_3
0x400009b	              0x53	                                push rbx	       354	utdelete.c	FUNCTION_3
0x400009c	          0x4889fb	                            mov rbx, rdi	       354	utdelete.c	FUNCTION_3
0x400009f	    0x488b3d000000	            mov rdi, qword [0x040000a6] 	       369	utdelete.c	FUNCTION_3	CALL_2
0x40000a6	      0xe800000000	                          call 0x40000ab	       369	utdelete.c	FUNCTION_3	CALL_2
0x40000ab	            0x85ed	                           test ebp, ebp	       374	utdelete.c	FUNCTION_3	SWITCH_1
0x40000ad	          0x4889c6	                            mov rsi, rax	       369	utdelete.c	FUNCTION_3	CALL_2
0x40000b0	      0x66448b630a	              mov r12w, word [rbx + 0xa]	       370	utdelete.c	FUNCTION_3
0x40000b5	    0x488b3d000000	            mov rdi, qword [0x040000bc] 	       370	utdelete.c	FUNCTION_3
0x40000bc	            0x7407	                            je 0x40000c5	       374	utdelete.c	FUNCTION_3	SWITCH_1
0x40000be	          0x83fd01	                              cmp ebp, 1	       374	utdelete.c	FUNCTION_3	SWITCH_1
0x40000c1	            0x7439	                            je 0x40000fc	       374	utdelete.c	FUNCTION_3	SWITCH_1
0x40000c3	            0xeb70	                           jmp 0x4000135	       374	utdelete.c	FUNCTION_3	SWITCH_1
0x40000c5	      0x418d6c2401	                      lea ebp, [r12 + 1]	       377	utdelete.c	FUNCTION_3	SWITCH_1
0x40000ca	        0x66896b0a	                mov word [rbx + 0xa], bp	       378	utdelete.c	FUNCTION_3	SWITCH_1
0x40000ce	      0xe800000000	                          call 0x40000d3	       379	utdelete.c	FUNCTION_3	SWITCH_1	CALL_3
0x40000d3	        0x664585e4	                         test r12w, r12w	       383	utdelete.c	FUNCTION_3	SWITCH_1	IF_2
0x40000d7	     0xf8580000000	                           jne 0x400015d	       383	utdelete.c	FUNCTION_3	SWITCH_1	IF_2
0x40000dd	          0x4889d9	                            mov rcx, rbx	       384	utdelete.c	FUNCTION_3	SWITCH_1	IF_2	CALL_4
0x40000e0	    0x48c7c2000000	                              mov rdx, 0	       384	utdelete.c	FUNCTION_3	SWITCH_1	IF_2	CALL_4
0x40000e7	      0xbe82010000	                          mov esi, 0x182	       384	utdelete.c	FUNCTION_3	SWITCH_1	IF_2	CALL_4
0x40000ec	              0x5b	                                 pop rbx	       442	utdelete.c	FUNCTION_3
0x40000ed	              0x5d	                                 pop rbp	       442	utdelete.c	FUNCTION_3
0x40000ee	            0x415c	                                 pop r12	       442	utdelete.c	FUNCTION_3
0x40000f0	    0x48c7c7000000	                              mov rdi, 0	       384	utdelete.c	FUNCTION_3	SWITCH_1	IF_2	CALL_4
0x40000f7	      0xe900000000	                           jmp 0x40000fc	       384	utdelete.c	FUNCTION_3	SWITCH_1	IF_2	CALL_4
0x40000fc	            0x31ed	                            xor ebp, ebp	       356	utdelete.c	FUNCTION_3
0x40000fe	        0x664585e4	                         test r12w, r12w	       400	utdelete.c	FUNCTION_3	SWITCH_1	IF_3
0x4000102	            0x7409	                            je 0x400010d	       400	utdelete.c	FUNCTION_3	SWITCH_1	IF_3
0x4000104	      0x418d6c24ff	                      lea ebp, [r12 - 1]	       401	utdelete.c	FUNCTION_3	SWITCH_1	IF_3
0x4000109	        0x66896b0a	                mov word [rbx + 0xa], bp	       402	utdelete.c	FUNCTION_3	SWITCH_1	IF_3
0x400010d	      0xe800000000	                          call 0x4000112	       405	utdelete.c	FUNCTION_3	SWITCH_1	CALL_7
0x4000112	        0x664585e4	                         test r12w, r12w	       407	utdelete.c	FUNCTION_3	SWITCH_1	IF_4
0x4000116	            0x7540	                           jne 0x4000158	       407	utdelete.c	FUNCTION_3	SWITCH_1	IF_4
0x4000118	          0x4889d9	                            mov rcx, rbx	       408	utdelete.c	FUNCTION_3	SWITCH_1	IF_4	CALL_8
0x400011b	    0x48c7c2000000	                              mov rdx, 0	       408	utdelete.c	FUNCTION_3	SWITCH_1	IF_4	CALL_8
0x4000122	      0xbe9a010000	                          mov esi, 0x19a	       408	utdelete.c	FUNCTION_3	SWITCH_1	IF_4	CALL_8
0x4000127	    0x48c7c7000000	                              mov rdi, 0	       408	utdelete.c	FUNCTION_3	SWITCH_1	IF_4	CALL_8
0x400012e	      0xe800000000	                          call 0x4000133	       408	utdelete.c	FUNCTION_3	SWITCH_1	IF_4	CALL_8
0x4000133	            0xeb23	                           jmp 0x4000158	       408	utdelete.c	FUNCTION_3	SWITCH_1	IF_4	CALL_8
0x4000135	      0xe800000000	                          call 0x400013a	       427	utdelete.c	FUNCTION_3	SWITCH_1	CALL_11
0x400013a	            0x89e9	                            mov ecx, ebp	       428	utdelete.c	FUNCTION_3	SWITCH_1	CALL_12
0x400013c	    0x48c7c2000000	                              mov rdx, 0	       428	utdelete.c	FUNCTION_3	SWITCH_1	CALL_12
0x4000143	      0xbead010000	                          mov esi, 0x1ad	       428	utdelete.c	FUNCTION_3	SWITCH_1	CALL_12
0x4000148	              0x5b	                                 pop rbx	       442	utdelete.c	FUNCTION_3
0x4000149	              0x5d	                                 pop rbp	       442	utdelete.c	FUNCTION_3
0x400014a	            0x415c	                                 pop r12	       442	utdelete.c	FUNCTION_3
0x400014c	    0x48c7c7000000	                              mov rdi, 0	       428	utdelete.c	FUNCTION_3	SWITCH_1	CALL_12
0x4000153	      0xe900000000	                           jmp 0x4000158	       428	utdelete.c	FUNCTION_3	SWITCH_1	CALL_12
0x4000158	          0x6685ed	                             test bp, bp	       420	utdelete.c	FUNCTION_3	SWITCH_1	IF_5
0x400015b	            0x7432	                            je 0x400018f	       420	utdelete.c	FUNCTION_3	SWITCH_1	IF_5
0x400015d	      0x6681fd0010	                          cmp bp, 0x1000	       437	utdelete.c	FUNCTION_3	IF_6
0x4000162	     0xf8603020000	                           jbe 0x400036b	       437	utdelete.c	FUNCTION_3	IF_6
0x4000168	           0xfb7cd	                           movzx ecx, bp	       438	utdelete.c	FUNCTION_3	IF_6	CALL_13
0x400016b	      0x440fb64b09	               movzx r9d, byte [rbx + 9]	       438	utdelete.c	FUNCTION_3	IF_6	CALL_13
0x4000170	          0x4989d8	                             mov r8, rbx	       438	utdelete.c	FUNCTION_3	IF_6	CALL_13
0x4000173	              0x5b	                                 pop rbx	       442	utdelete.c	FUNCTION_3
0x4000174	              0x5d	                                 pop rbp	       442	utdelete.c	FUNCTION_3
0x4000175	            0x415c	                                 pop r12	       442	utdelete.c	FUNCTION_3
0x4000177	    0x48c7c2000000	                              mov rdx, 0	       438	utdelete.c	FUNCTION_3	IF_6	CALL_13
0x400017e	      0xbeb8010000	                          mov esi, 0x1b8	       438	utdelete.c	FUNCTION_3	IF_6	CALL_13
0x4000183	    0x48c7c7000000	                              mov rdi, 0	       438	utdelete.c	FUNCTION_3	IF_6	CALL_13
0x400018a	      0xe900000000	                           jmp 0x400018f	       438	utdelete.c	FUNCTION_3	IF_6	CALL_13
0x400018f	          0x8a4309	                  mov al, byte [rbx + 9]	        55	utdelete.c	FUNCTION_1	SWITCH_1
0x4000192	          0x83e802	                              sub eax, 2	        55	utdelete.c	FUNCTION_1	SWITCH_1
0x4000195	            0x3c10	                            cmp al, 0x10	        55	utdelete.c	FUNCTION_1	SWITCH_1
0x4000197	     0xf87c2010000	                            ja 0x400035f	        55	utdelete.c	FUNCTION_1	SWITCH_1
0x400019d	           0xfb6c0	                           movzx eax, al	        55	utdelete.c	FUNCTION_1	SWITCH_1
0x40001a0	    0x488b04c50000	                  mov rax, qword [rax*8]	        55	utdelete.c	FUNCTION_1	SWITCH_1
0x40001a8	      0xe900000000	                           jmp 0x40001ad	        55	utdelete.c	FUNCTION_1	SWITCH_1
0x40001ad	        0xf6430c02	                test byte [rbx + 0xc], 2	        80	utdelete.c	FUNCTION_1	SWITCH_1	IF_3
0x40001b1	     0xf85a8010000	                           jne 0x400035f	        80	utdelete.c	FUNCTION_1	SWITCH_1	IF_3
0x40001b7	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	        84	utdelete.c	FUNCTION_1	SWITCH_1	IF_3
0x40001bb	      0xe995010000	                           jmp 0x4000355	        84	utdelete.c	FUNCTION_1	SWITCH_1	IF_3
0x40001c0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       101	utdelete.c	FUNCTION_1	SWITCH_1
0x40001c4	      0xe98c010000	                           jmp 0x4000355	       101	utdelete.c	FUNCTION_1	SWITCH_1
0x40001c9	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       110	utdelete.c	FUNCTION_1	SWITCH_1	IF_4
0x40001cd	          0x4885ff	                           test rdi, rdi	       110	utdelete.c	FUNCTION_1	SWITCH_1	IF_4
0x40001d0	            0x7405	                            je 0x40001d7	       110	utdelete.c	FUNCTION_1	SWITCH_1	IF_4
0x40001d2	      0xe800000000	                          call 0x40001d7	       111	utdelete.c	FUNCTION_1	SWITCH_1	IF_4	CALL_5
0x40001d7	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       122	utdelete.c	FUNCTION_1	SWITCH_1
0x40001db	          0x4885ff	                           test rdi, rdi	       123	utdelete.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40001de	     0xf847b010000	                            je 0x400035f	       123	utdelete.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40001e4	        0x488b6f38	            mov rbp, qword [rdi + 0x38] 	       124	utdelete.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40001e8	      0xe800000000	                          call 0x40001ed	       125	utdelete.c	FUNCTION_1	SWITCH_1	WHILE_1	CALL_6
0x40001ed	          0x4889ef	                            mov rdi, rbp	       126	utdelete.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40001f0	            0xebe9	                           jmp 0x40001db	       126	utdelete.c	FUNCTION_1	SWITCH_1	WHILE_1
0x40001f2	    0x483b1d000000	            cmp rbx, qword [0x040001f9] 	       136	utdelete.c	FUNCTION_1	SWITCH_1	IF_5
0x40001f9	            0x7530	                           jne 0x400022b	       136	utdelete.c	FUNCTION_1	SWITCH_1	IF_5
0x40001fb	    0x488b3d000000	            mov rdi, qword [0x04000202] 	       140	utdelete.c	FUNCTION_1	SWITCH_1	IF_5
0x4000202	      0xe800000000	                          call 0x4000207	       140	utdelete.c	FUNCTION_1	SWITCH_1	IF_5
0x4000207	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       145	utdelete.c	FUNCTION_1	SWITCH_1	IF_5	CALL_9
0x400020b	    0x48c705000000	               mov qword [0x04000216], 0	       143	utdelete.c	FUNCTION_1	SWITCH_1	IF_5
0x4000216	      0xe800000000	                          call 0x400021b	       145	utdelete.c	FUNCTION_1	SWITCH_1	IF_5	CALL_9
0x400021b	    0x48c705000000	               mov qword [0x04000226], 0	       146	utdelete.c	FUNCTION_1	SWITCH_1	IF_5
0x4000226	      0xe934010000	                           jmp 0x400035f	       146	utdelete.c	FUNCTION_1	SWITCH_1	IF_5
0x400022b	          0x4889df	                            mov rdi, rbx	       148	utdelete.c	FUNCTION_1	SWITCH_1	ELSE_1	CALL_10
0x400022e	      0xe800000000	                          call 0x4000233	       148	utdelete.c	FUNCTION_1	SWITCH_1	ELSE_1	CALL_10
0x4000233	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       149	utdelete.c	FUNCTION_1	SWITCH_1	ELSE_1	CALL_11
0x4000237	      0xe800000000	                          call 0x400023c	       149	utdelete.c	FUNCTION_1	SWITCH_1	ELSE_1	CALL_11
0x400023c	      0xe91e010000	                           jmp 0x400035f	       149	utdelete.c	FUNCTION_1	SWITCH_1	ELSE_1	CALL_11
0x4000241	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       159	utdelete.c	FUNCTION_1	SWITCH_1	CALL_13
0x4000245	      0xe800000000	                          call 0x400024a	       159	utdelete.c	FUNCTION_1	SWITCH_1	CALL_13
0x400024a	    0x48c743100000	               mov qword [rbx + 0x10], 0	       160	utdelete.c	FUNCTION_1	SWITCH_1
0x4000252	      0xe908010000	                           jmp 0x400035f	       160	utdelete.c	FUNCTION_1	SWITCH_1
0x4000257	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       170	utdelete.c	FUNCTION_1	SWITCH_1	IF_6
0x400025b	          0x4885c0	                           test rax, rax	       170	utdelete.c	FUNCTION_1	SWITCH_1	IF_6
0x400025e	            0x741a	                            je 0x400027a	       170	utdelete.c	FUNCTION_1	SWITCH_1	IF_6
0x4000260	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       171	utdelete.c	FUNCTION_1	SWITCH_1	IF_6	CALL_15
0x4000264	      0xe800000000	                          call 0x4000269	       171	utdelete.c	FUNCTION_1	SWITCH_1	IF_6	CALL_15
0x4000269	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       173	utdelete.c	FUNCTION_1	SWITCH_1	IF_6	CALL_16
0x400026d	      0xe800000000	                          call 0x4000272	       173	utdelete.c	FUNCTION_1	SWITCH_1	IF_6	CALL_16
0x4000272	    0x48c743100000	               mov qword [rbx + 0x10], 0	       174	utdelete.c	FUNCTION_1	SWITCH_1	IF_6
0x400027a	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       177	utdelete.c	FUNCTION_1	SWITCH_1	IF_7
0x400027f	     0xf84da000000	                            je 0x400035f	       177	utdelete.c	FUNCTION_1	SWITCH_1	IF_7
0x4000285	    0x48c743180000	               mov qword [rbx + 0x18], 0	       178	utdelete.c	FUNCTION_1	SWITCH_1	IF_7
0x400028d	      0xe9cd000000	                           jmp 0x400035f	       178	utdelete.c	FUNCTION_1	SWITCH_1	IF_7
0x4000292	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       191	utdelete.c	FUNCTION_1	SWITCH_1	IF_8
0x4000296	        0xf6460a02	                test byte [rsi + 0xa], 2	       191	utdelete.c	FUNCTION_1	SWITCH_1	IF_8
0x400029a	            0x7509	                           jne 0x40002a5	       191	utdelete.c	FUNCTION_1	SWITCH_1	IF_8
0x400029c	         0xfb67b0d	            movzx edi, byte [rbx + 0xd] 	       192	utdelete.c	FUNCTION_1	SWITCH_1	IF_8	CALL_18
0x40002a0	      0xe800000000	                          call 0x40002a5	       192	utdelete.c	FUNCTION_1	SWITCH_1	IF_8	CALL_18
0x40002a5	          0x4889df	                            mov rdi, rbx	       196	utdelete.c	FUNCTION_1	SWITCH_1	CALL_19
0x40002a8	      0xe800000000	                          call 0x40002ad	       196	utdelete.c	FUNCTION_1	SWITCH_1	CALL_19
0x40002ad	          0x4885c0	                           test rax, rax	       197	utdelete.c	FUNCTION_1	SWITCH_1	IF_9
0x40002b0	          0x4989c4	                            mov r12, rax	       196	utdelete.c	FUNCTION_1	SWITCH_1	CALL_19
0x40002b3	     0xf84a6000000	                            je 0x400035f	       197	utdelete.c	FUNCTION_1	SWITCH_1	IF_9
0x40002b9	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       203	utdelete.c	FUNCTION_1	SWITCH_1	IF_9
0x40002bd	          0x4885ed	                           test rbp, rbp	       204	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10
0x40002c0	            0x7477	                            je 0x4000339	       204	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10
0x40002c2	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       205	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10
0x40002c6	        0x488d4d30	                   lea rcx, [rbp + 0x30]	       208	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10
0x40002ca	          0x4889d0	                            mov rax, rdx	       205	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10
0x40002cd	          0x4885c0	                           test rax, rax	       213	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2
0x40002d0	            0x743a	                            je 0x400030c	       213	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2
0x40002d2	          0x4839c3	                            cmp rbx, rax	       214	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_11
0x40002d5	            0x7509	                           jne 0x40002e0	       214	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_11
0x40002d7	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       216	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_11
0x40002db	          0x488901	                    mov qword [rcx], rax	       215	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_11
0x40002de	            0xeb2c	                           jmp 0x400030c	       215	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_11
0x40002e0	        0x488d4820	                   lea rcx, [rax + 0x20]	       222	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2
0x40002e4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       223	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2
0x40002e8	          0x4839c2	                            cmp rdx, rax	       227	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_12
0x40002eb	            0x75e0	                           jne 0x40002cd	       227	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_12
0x40002ed	              0x5b	                                 pop rbx	       442	utdelete.c	FUNCTION_3
0x40002ee	          0x4889e9	                            mov rcx, rbp	       228	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_12	CALL_20
0x40002f1	    0x48c7c2000000	                              mov rdx, 0	       228	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_12	CALL_20
0x40002f8	      0xbee6000000	                           mov esi, 0xe6	       228	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_12	CALL_20
0x40002fd	              0x5d	                                 pop rbp	       442	utdelete.c	FUNCTION_3
0x40002fe	            0x415c	                                 pop r12	       442	utdelete.c	FUNCTION_3
0x4000300	    0x48c7c7000000	                              mov rdi, 0	       228	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_12	CALL_20
0x4000307	      0xe900000000	                           jmp 0x400030c	       228	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	WHILE_2	IF_12	CALL_20
0x400030c	        0xf6450e01	                test byte [rbp + 0xe], 1	       235	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13
0x4000310	            0x741f	                            je 0x4000331	       235	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13
0x4000312	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       240	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x4000316	          0x4885c0	                           test rax, rax	       240	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x4000319	            0x7416	                            je 0x4000331	       240	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x400031b	      0x498d4c2420	                   lea rcx, [r12 + 0x20]	       241	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x4000320	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       241	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x4000324	      0xbe01000000	                              mov esi, 1	       241	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x4000329	          0x4889df	                            mov rdi, rbx	       241	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x400032c	      0xe800000000	                          call 0x4000331	       241	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	IF_13	IF_14
0x4000331	          0x4889ef	                            mov rdi, rbp	       253	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	CALL_22
0x4000334	      0xe800000000	                          call 0x4000339	       253	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	IF_10	CALL_22
0x4000339	          0x4c89e7	                            mov rdi, r12	       258	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	CALL_23
0x400033c	            0xeb10	                           jmp 0x400034e	       258	utdelete.c	FUNCTION_1	SWITCH_1	IF_9	CALL_23
0x400033e	          0x4889df	                            mov rdi, rbx	       278	utdelete.c	FUNCTION_1	SWITCH_1	CALL_28
0x4000341	      0xe800000000	                          call 0x4000346	       278	utdelete.c	FUNCTION_1	SWITCH_1	CALL_28
0x4000346	          0x4885c0	                           test rax, rax	       279	utdelete.c	FUNCTION_1	SWITCH_1	IF_16
0x4000349	            0x7414	                            je 0x400035f	       279	utdelete.c	FUNCTION_1	SWITCH_1	IF_16
0x400034b	          0x4889c7	                            mov rdi, rax	       280	utdelete.c	FUNCTION_1	SWITCH_1	IF_16	CALL_29
0x400034e	      0xe800000000	                          call 0x4000353	       280	utdelete.c	FUNCTION_1	SWITCH_1	IF_16	CALL_29
0x4000353	            0xeb0a	                           jmp 0x400035f	       280	utdelete.c	FUNCTION_1	SWITCH_1	IF_16	CALL_29
0x4000355	          0x4885ff	                           test rdi, rdi	       291	utdelete.c	FUNCTION_1	IF_17
0x4000358	            0x7405	                            je 0x400035f	       291	utdelete.c	FUNCTION_1	IF_17
0x400035a	      0xe800000000	                          call 0x400035f	        62	aclinuxex.h	FUNCTION_9	CALL_1
0x400035f	          0x4889df	                            mov rdi, rbx	       304	utdelete.c	FUNCTION_1	CALL_34
0x4000362	              0x5b	                                 pop rbx	       442	utdelete.c	FUNCTION_3
0x4000363	              0x5d	                                 pop rbp	       442	utdelete.c	FUNCTION_3
0x4000364	            0x415c	                                 pop r12	       442	utdelete.c	FUNCTION_3
0x4000366	      0xe900000000	                           jmp 0x400036b	       304	utdelete.c	FUNCTION_1	CALL_34
0x400036b	              0x5b	                                 pop rbx	       442	utdelete.c	FUNCTION_3
0x400036c	              0x5d	                                 pop rbp	       442	utdelete.c	FUNCTION_3
0x400036d	            0x415c	                                 pop r12	       442	utdelete.c	FUNCTION_3
0x400036f	              0xc3	                                     ret	       442	utdelete.c	FUNCTION_3
acpi_ut_add_reference	WHILE,0:IF,1:FOR,0:ELSE,0:SWITCH,0:DO,0:CALL,4:functions,0	11
0x4000513	              0x53	                                push rbx	       665	utdelete.c	FUNCTION_5
0x4000514	          0x4889fb	                            mov rbx, rdi	       665	utdelete.c	FUNCTION_5
0x4000517	      0xe800000000	                          call 0x400051c	       671	utdelete.c	FUNCTION_5	IF_1	CALL_2
0x400051c	            0x84c0	                             test al, al	       671	utdelete.c	FUNCTION_5	IF_1	CALL_2
0x400051e	            0x740b	                            je 0x400052b	       671	utdelete.c	FUNCTION_5	IF_1	CALL_2
0x4000520	          0x4889df	                            mov rdi, rbx	       681	utdelete.c	FUNCTION_5	CALL_4
0x4000523	            0x31f6	                            xor esi, esi	       681	utdelete.c	FUNCTION_5	CALL_4
0x4000525	              0x5b	                                 pop rbx	       683	utdelete.c	FUNCTION_5
0x4000526	      0xe945feffff	 jmp sym.acpi_ut_update_object_reference	       681	utdelete.c	FUNCTION_5	CALL_4
0x400052b	              0x5b	                                 pop rbx	       683	utdelete.c	FUNCTION_5
0x400052c	              0xc3	                                     ret	       683	utdelete.c	FUNCTION_5
acpi_ut_update_object_reference	WHILE,3:IF,8:FOR,2:ELSE,1:SWITCH,2:DO,0:CALL,17:functions,0	124
0x4000370	            0x4155	                                push r13	       467	utdelete.c	FUNCTION_4
0x4000372	            0x4154	                                push r12	       467	utdelete.c	FUNCTION_4
0x4000374	        0x440fb7ee	                          movzx r13d, si	       585	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000378	              0x55	                                push rbp	       467	utdelete.c	FUNCTION_4
0x4000379	              0x53	                                push rbx	       467	utdelete.c	FUNCTION_4
0x400037a	          0x4889fb	                            mov rbx, rdi	       467	utdelete.c	FUNCTION_4
0x400037d	        0x4883ec10	                           sub rsp, 0x10	       467	utdelete.c	FUNCTION_4
0x4000381	    0x65488b042528	                mov rax, qword gs:[0x28]	       467	utdelete.c	FUNCTION_4
0x400038a	      0x4889442408	                mov qword [rsp + 8], rax	       467	utdelete.c	FUNCTION_4
0x400038f	            0x31c0	                            xor eax, eax	       467	utdelete.c	FUNCTION_4
0x4000391	    0x48c704240000	                      mov qword [rsp], 0	       469	utdelete.c	FUNCTION_4
0x4000399	          0x4885db	                           test rbx, rbx	       477	utdelete.c	FUNCTION_4	WHILE_1
0x400039c	     0xf844f010000	                            je 0x40004f1	       477	utdelete.c	FUNCTION_4	WHILE_1
0x40003a2	        0x807b080f	                 cmp byte [rbx + 8], 0xf	       481	utdelete.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x40003a6	     0xf8445010000	                            je 0x40004f1	       481	utdelete.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x40003ac	          0x8a4309	                  mov al, byte [rbx + 9]	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003af	          0x83e804	                              sub eax, 4	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003b2	            0x3c10	                            cmp al, 0x10	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003b4	     0xf87c9000000	                            ja 0x4000483	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003ba	           0xfb6c0	                           movzx eax, al	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003bd	    0x488b04c50000	                  mov rax, qword [rax*8]	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003c5	      0xe900000000	                           jmp 0x40003ca	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003ca	            0x31ed	                            xor ebp, ebp	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003cc	            0xeb4b	                           jmp 0x4000419	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40003ce	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       501	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1
0x40003d2	            0x31ed	                            xor ebp, ebp	       501	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1
0x40003d4	          0x4885ff	                           test rdi, rdi	       503	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003d7	            0x7411	                            je 0x40003ea	       503	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003d9	        0x488b6f30	            mov rbp, qword [rdi + 0x30] 	       504	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003dd	          0x4489ee	                           mov esi, r13d	       506	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2	CALL_4
0x40003e0	      0xe8a8fcffff	       call sym.acpi_ut_update_ref_count	       506	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2	CALL_4
0x40003e5	          0x4889ef	                            mov rdi, rbp	       504	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003e8	            0xebea	                           jmp 0x40003d4	       504	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003ea	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       501	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1
0x40003ee	          0x4885ff	                           test rdi, rdi	       503	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003f1	     0xf848e000000	                            je 0x4000485	       503	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003f7	        0x488b6f38	            mov rbp, qword [rdi + 0x38] 	       504	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x40003fb	          0x4489ee	                           mov esi, r13d	       506	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2	CALL_4
0x40003fe	      0xe88afcffff	       call sym.acpi_ut_update_ref_count	       506	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2	CALL_4
0x4000403	          0x4889ef	                            mov rdi, rbp	       504	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x4000406	            0xebe6	                           jmp 0x40003ee	       504	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_1	WHILE_2
0x4000408	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       523	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2
0x400040c	            0x89e8	                            mov eax, ebp	       523	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2
0x400040e	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       523	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2
0x4000412	          0x4885ff	                           test rdi, rdi	       524	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	IF_2
0x4000415	            0x7509	                           jne 0x4000420	       524	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	IF_2
0x4000417	            0xffc5	                                 inc ebp	       518	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2
0x4000419	          0x3b6b2c	            cmp ebp, dword [rbx + 0x2c] 	       518	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2
0x400041c	            0x72ea	                            jb 0x4000408	       518	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2
0x400041e	            0xeb63	                           jmp 0x4000483	       518	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2
0x4000420	          0x8a4709	                  mov al, byte [rdi + 9]	       528	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000423	            0xffc8	                                 dec eax	       528	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000425	            0x3c02	                               cmp al, 2	       528	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000427	            0x770a	                            ja 0x4000433	       528	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000429	          0x4489ee	                           mov esi, r13d	       537	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2	CALL_5
0x400042c	      0xe85cfcffff	       call sym.acpi_ut_update_ref_count	       537	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2	CALL_5
0x4000431	            0xebe4	                           jmp 0x4000417	       539	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000433	          0x4889e2	                            mov rdx, rsp	       546	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000436	          0x4489ee	                           mov esi, r13d	       546	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000439	      0xe800000000	                          call 0x400043e	       546	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x400043e	            0x85c0	                           test eax, eax	       549	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2	IF_3	CALL_7
0x4000440	          0x4189c4	                           mov r12d, eax	       546	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2
0x4000443	            0x74d2	                            je 0x4000417	       549	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2	IF_3	CALL_7
0x4000445	            0xeb71	                           jmp 0x40004b8	       549	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	FOR_2	SWITCH_2	IF_3	CALL_7
0x4000447	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	       565	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400044b	            0xeb38	                           jmp 0x4000485	       566	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400044d	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	       570	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000451	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       571	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000455	            0xeb08	                           jmp 0x400045f	       571	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000457	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	       584	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400045b	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       585	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400045f	          0x4889e2	                            mov rdx, rsp	       585	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000462	          0x4489ee	                           mov esi, r13d	       585	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000465	      0xe800000000	                          call 0x400046a	       585	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400046a	            0x85c0	                           test eax, eax	       591	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5	CALL_11
0x400046c	          0x4189c4	                           mov r12d, eax	       585	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400046f	            0x7414	                            je 0x4000485	       591	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5	CALL_11
0x4000471	            0xeb45	                           jmp 0x40004b8	       591	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5	CALL_11
0x4000473	          0x8a430d	                mov al, byte [rbx + 0xd]	       602	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_6
0x4000476	          0x83e803	                              sub eax, 3	       602	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_6
0x4000479	            0xa8fd	                           test al, 0xfd	       602	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_6
0x400047b	            0x7506	                           jne 0x4000483	       602	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_6
0x400047d	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	       604	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_6
0x4000481	            0xeb02	                           jmp 0x4000485	       604	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_6
0x4000483	            0x31ed	                            xor ebp, ebp	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000485	          0x4489ee	                           mov esi, r13d	       619	utdelete.c	FUNCTION_4	WHILE_1	CALL_12
0x4000488	          0x4889df	                            mov rdi, rbx	       619	utdelete.c	FUNCTION_4	WHILE_1	CALL_12
0x400048b	      0xe8fdfbffff	       call sym.acpi_ut_update_ref_count	       619	utdelete.c	FUNCTION_4	WHILE_1	CALL_12
0x4000490	          0x4885ed	                           test rbp, rbp	       624	utdelete.c	FUNCTION_4	WHILE_1	IF_7
0x4000493	            0x751b	                           jne 0x40004b0	       624	utdelete.c	FUNCTION_4	WHILE_1	IF_7
0x4000495	      0x48833c2400	                      cmp qword [rsp], 0	       627	utdelete.c	FUNCTION_4	WHILE_1	ELSE_1	IF_8
0x400049a	            0x7414	                            je 0x40004b0	       627	utdelete.c	FUNCTION_4	WHILE_1	ELSE_1	IF_8
0x400049c	          0x4889e7	                            mov rdi, rsp	       628	utdelete.c	FUNCTION_4	WHILE_1	ELSE_1	IF_8	CALL_13
0x400049f	      0xe800000000	                          call 0x40004a4	       628	utdelete.c	FUNCTION_4	WHILE_1	ELSE_1	IF_8	CALL_13
0x40004a4	          0x4889c7	                            mov rdi, rax	       630	utdelete.c	FUNCTION_4	WHILE_1	ELSE_1	IF_8	CALL_14
0x40004a7	        0x488b6810	            mov rbp, qword [rax + 0x10] 	       629	utdelete.c	FUNCTION_4	WHILE_1	ELSE_1	IF_8
0x40004ab	      0xe800000000	                          call 0x40004b0	       630	utdelete.c	FUNCTION_4	WHILE_1	ELSE_1	IF_8	CALL_14
0x40004b0	          0x4889eb	                            mov rbx, rbp	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40004b3	      0xe9e1feffff	                           jmp 0x4000399	       491	utdelete.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40004b8	    0x48c7c1000000	                              mov rcx, 0	       638	utdelete.c	FUNCTION_4	CALL_15
0x40004bf	          0x4489e2	                           mov edx, r12d	       638	utdelete.c	FUNCTION_4	CALL_15
0x40004c2	      0xbe7f020000	                          mov esi, 0x27f	       638	utdelete.c	FUNCTION_4	CALL_15
0x40004c7	    0x48c7c7000000	                              mov rdi, 0	       638	utdelete.c	FUNCTION_4	CALL_15
0x40004ce	      0xe800000000	                          call 0x40004d3	       638	utdelete.c	FUNCTION_4	CALL_15
0x40004d3	      0x48833c2400	                      cmp qword [rsp], 0	       643	utdelete.c	FUNCTION_4	WHILE_3
0x40004d8	            0x7412	                            je 0x40004ec	       643	utdelete.c	FUNCTION_4	WHILE_3
0x40004da	          0x4889e7	                            mov rdi, rsp	       644	utdelete.c	FUNCTION_4	WHILE_3	CALL_16
0x40004dd	      0xe800000000	                          call 0x40004e2	       644	utdelete.c	FUNCTION_4	WHILE_3	CALL_16
0x40004e2	          0x4889c7	                            mov rdi, rax	       645	utdelete.c	FUNCTION_4	WHILE_3	CALL_17
0x40004e5	      0xe800000000	                          call 0x40004ea	       645	utdelete.c	FUNCTION_4	WHILE_3	CALL_17
0x40004ea	            0xebe7	                           jmp 0x40004d3	       645	utdelete.c	FUNCTION_4	WHILE_3	CALL_17
0x40004ec	          0x4489e0	                           mov eax, r12d	       648	utdelete.c	FUNCTION_4
0x40004ef	            0xeb02	                           jmp 0x40004f3	       648	utdelete.c	FUNCTION_4
0x40004f1	            0x31c0	                            xor eax, eax	       484	utdelete.c	FUNCTION_4	WHILE_1	IF_1
0x40004f3	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       649	utdelete.c	FUNCTION_4
0x40004f8	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       649	utdelete.c	FUNCTION_4
0x4000501	            0x7405	                            je 0x4000508	       649	utdelete.c	FUNCTION_4
0x4000503	      0xe800000000	                          call 0x4000508	       649	utdelete.c	FUNCTION_4
0x4000508	        0x4883c410	                           add rsp, 0x10	       649	utdelete.c	FUNCTION_4
0x400050c	              0x5b	                                 pop rbx	       649	utdelete.c	FUNCTION_4
0x400050d	              0x5d	                                 pop rbp	       649	utdelete.c	FUNCTION_4
0x400050e	            0x415c	                                 pop r12	       649	utdelete.c	FUNCTION_4
0x4000510	            0x415d	                                 pop r13	       649	utdelete.c	FUNCTION_4
0x4000512	              0xc3	                                     ret	       649	utdelete.c	FUNCTION_4
