cmos_pnp_remove	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,1:IF,0	1
0x4000e10	      0xe97bffffff	                  jmp sym.cmos_do_remove	      1211	rtc-cmos.c	FUNCTION_45	CALL_1
cmos_exit	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,2:IF,2	14
0x4000040	            0x31f6	                            xor esi, esi	      1346	rtc-cmos.c	FUNCTION_52
0x4000042	      0xbf04000000	                              mov edi, 4	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
0x4000047	      0xe900000000	                           jmp 0x400004c	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
0x400004c	         0xf1f4000	                         nop dword [rax]	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
0x4000050	      0xbf04000000	                              mov edi, 4	      1351	rtc-cmos.c	FUNCTION_52	IF_1
0x4000055	      0xe800000000	                          call 0x400005a	      1352	rtc-cmos.c	FUNCTION_52	IF_1
0x400005a	            0x31f6	                            xor esi, esi	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x400005c	      0xbf04000000	                              mov edi, 4	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x4000061	      0xe900000000	                           jmp 0x4000066	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x4000066	              0x66	                                 invalid	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000067	              0x2e	                                 invalid	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000068	               0xf	                                 invalid	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000069	              0x1f	                                 invalid	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x400006a	              0x84	                                 invalid	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
cmos_platform_probe	FOR,0:WHILE,0:ELSE,1:functions,0:DO,0:SWITCH,0:CALL,6:IF,2	31
0x40000a7	              0xc5	                                 invalid	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000a8	           0x14983	             add dword [rcx - 0x7d], ecx	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000ab	              0xec	                               in al, dx	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000ac	         0x1741c83	       add dword [rsp + rbx - 0x7d], esi	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000b0	              0xfb	                                     sti	      1288	rtc-cmos.c	FUNCTION_49
0x40000b1	            0x7f77	                            jg 0x400012a	      1293	rtc-cmos.c	FUNCTION_49	CALL_2
0x40000b3	            0xe589	                            in eax, 0x89	      1293	rtc-cmos.c	FUNCTION_49	CALL_2
0x40000b5	          0xdf4883	                fisttp word [rax - 0x7d]	      1288	rtc-cmos.c	FUNCTION_49
0x40000b8	              0xc5	                                 invalid	      1288	rtc-cmos.c	FUNCTION_49
0x40000b9	     0x183c301e800	         add dword [rbx + 0xe801c3], eax	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000bf	               0x0	                      add byte [rax], al	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000c1	      0x8845fe4983	         add byte [rax - 0x7cb601bb], cl	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000c7	              0xec	                               in al, dx	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000c8	           0x175e4	             add dword [rbp - 0x1c], esi	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000cb	          0x4489e8	                           mov eax, r13d	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000ce	    0xc60500000000	                mov byte [0x040000d5], 0	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000d5	              0xfb	                                     sti	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000d6	              0x5b	                                 pop rbx	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000d7	              0x5d	                                 pop rbp	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000d8	            0x415c	                                 pop r12	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000da	            0x415d	                                 pop r13	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000dc	              0xc3	                                     ret	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000dd	            0x31c0	                            xor eax, eax	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000df	            0xebed	                           jmp 0x40000ce	      1303	rtc-cmos.c	FUNCTION_49	CALL_6
0x40000e1	       0xf1f440000	                   nop dword [rax + rax]	      1303	rtc-cmos.c	FUNCTION_49	CALL_6
0x40000e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1301	rtc-cmos.c	FUNCTION_49	IF_2
0x40000f0	            0x4156	                                push r14	      1301	rtc-cmos.c	FUNCTION_49	IF_2
0x40000f2	            0x4155	                                push r13	      1301	rtc-cmos.c	FUNCTION_49	IF_2
0x40000f4	          0x4989fe	                            mov r14, rdi	      1303	rtc-cmos.c	FUNCTION_49	CALL_6
0x40000f7	            0x4154	                                push r12	      1303	rtc-cmos.c	FUNCTION_49	CALL_6
0x40000f9	              0x55	                                push rbp	      1303	rtc-cmos.c	FUNCTION_49	CALL_6
cmos_platform_shutdown	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,4:IF,2	26
0x40014d0	    0x833d00000000	               cmp dword [0x040014d7], 4	      1317	rtc-cmos.c	FUNCTION_51	IF_1
0x40014d7	            0x4154	                                push r12	      1313	rtc-cmos.c	FUNCTION_51
0x40014d9	              0x55	                                push rbp	      1313	rtc-cmos.c	FUNCTION_51
0x40014da	              0x53	                                push rbx	      1313	rtc-cmos.c	FUNCTION_51
0x40014db	    0x488bafa80000	            mov rbp, qword [rdi + 0xa8] 	      1313	rtc-cmos.c	FUNCTION_51
0x40014e2	            0x740c	                            je 0x40014f0	      1317	rtc-cmos.c	FUNCTION_51	IF_1
0x40014e4	              0x5b	                                 pop rbx	      1325	rtc-cmos.c	FUNCTION_51
0x40014e5	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	      1324	rtc-cmos.c	FUNCTION_51	CALL_4
0x40014e8	              0x5d	                                 pop rbp	      1325	rtc-cmos.c	FUNCTION_51
0x40014e9	            0x415c	                                 pop r12	      1325	rtc-cmos.c	FUNCTION_51
0x40014eb	      0xe9c0eeffff	                jmp sym.cmos_do_shutdown	      1324	rtc-cmos.c	FUNCTION_51	CALL_4
0x40014f0	        0x488d5f10	                   lea rbx, [rdi + 0x10]	      1314	rtc-cmos.c	FUNCTION_51
0x40014f4	          0x4889df	                            mov rdi, rbx	       972	rtc-cmos.c	FUNCTION_33	CALL_2
0x40014f7	      0xe8b4f7ffff	                   call sym.cmos_suspend	       972	rtc-cmos.c	FUNCTION_33	CALL_2
0x40014fc	          0x4889df	                            mov rdi, rbx	      1320	rtc-cmos.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x40014ff	          0x4189c4	                           mov r12d, eax	       972	rtc-cmos.c	FUNCTION_33	CALL_2
0x4001502	      0xe8f9feffff	              call sym.cmos_aie_poweroff	      1320	rtc-cmos.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x4001507	          0x4585e4	                         test r12d, r12d	      1320	rtc-cmos.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x400150a	            0x75d8	                           jne 0x40014e4	      1320	rtc-cmos.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x400150c	          0xc1e81f	                           shr eax, 0x1f	      1320	rtc-cmos.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x400150f	            0x84c0	                             test al, al	      1320	rtc-cmos.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x4001511	            0x74d1	                            je 0x40014e4	      1320	rtc-cmos.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x4001513	              0x5b	                                 pop rbx	      1325	rtc-cmos.c	FUNCTION_51
0x4001514	              0x5d	                                 pop rbp	      1325	rtc-cmos.c	FUNCTION_51
0x4001515	            0x415c	                                 pop r12	      1325	rtc-cmos.c	FUNCTION_51
0x4001517	              0xc3	                                     ret	      1325	rtc-cmos.c	FUNCTION_51
cmos_set_time	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,1:IF,0	2
0x4000650	          0x4889f7	                            mov rdi, rsi	       220	rtc-cmos.c	FUNCTION_16	CALL_1
0x4000653	      0xe900000000	                           jmp 0x4000658	       220	rtc-cmos.c	FUNCTION_16	CALL_1
cmos_pnp_shutdown	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,4:IF,2	25
0x4001520	    0x833d00000000	               cmp dword [0x04001527], 4	      1219	rtc-cmos.c	FUNCTION_46	IF_1
0x4001527	            0x4154	                                push r12	      1215	rtc-cmos.c	FUNCTION_46
0x4001529	              0x55	                                push rbp	      1215	rtc-cmos.c	FUNCTION_46
0x400152a	              0x53	                                push rbx	      1215	rtc-cmos.c	FUNCTION_46
0x400152b	    0x488baf980000	            mov rbp, qword [rdi + 0x98] 	      1215	rtc-cmos.c	FUNCTION_46
0x4001532	            0x740c	                            je 0x4001540	      1219	rtc-cmos.c	FUNCTION_46	IF_1
0x4001534	              0x5b	                                 pop rbx	      1227	rtc-cmos.c	FUNCTION_46
0x4001535	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	      1226	rtc-cmos.c	FUNCTION_46	CALL_4
0x4001538	              0x5d	                                 pop rbp	      1227	rtc-cmos.c	FUNCTION_46
0x4001539	            0x415c	                                 pop r12	      1227	rtc-cmos.c	FUNCTION_46
0x400153b	      0xe970eeffff	                jmp sym.cmos_do_shutdown	      1226	rtc-cmos.c	FUNCTION_46	CALL_4
0x4001540	          0x4889fb	                            mov rbx, rdi	      1226	rtc-cmos.c	FUNCTION_46	CALL_4
0x4001543	      0xe868f7ffff	                   call sym.cmos_suspend	       972	rtc-cmos.c	FUNCTION_33	CALL_2
0x4001548	          0x4889df	                            mov rdi, rbx	      1222	rtc-cmos.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400154b	          0x4189c4	                           mov r12d, eax	       972	rtc-cmos.c	FUNCTION_33	CALL_2
0x400154e	      0xe8adfeffff	              call sym.cmos_aie_poweroff	      1222	rtc-cmos.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4001553	          0x4585e4	                         test r12d, r12d	      1222	rtc-cmos.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4001556	            0x75dc	                           jne 0x4001534	      1222	rtc-cmos.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4001558	          0xc1e81f	                           shr eax, 0x1f	      1222	rtc-cmos.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400155b	            0x84c0	                             test al, al	      1222	rtc-cmos.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400155d	            0x74d5	                            je 0x4001534	      1222	rtc-cmos.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400155f	              0x5b	                                 pop rbx	      1227	rtc-cmos.c	FUNCTION_46
0x4001560	              0x5d	                                 pop rbp	      1227	rtc-cmos.c	FUNCTION_46
0x4001561	            0x415c	                                 pop r12	      1227	rtc-cmos.c	FUNCTION_46
0x4001563	              0xc3	                                     ret	      1227	rtc-cmos.c	FUNCTION_46
cmos_do_remove	FOR,0:WHILE,0:ELSE,1:functions,0:DO,0:SWITCH,0:CALL,9:IF,2	23
0x4000d90	              0x53	                                push rbx	       853	rtc-cmos.c	FUNCTION_30
0x4000d91	    0x488b9f980000	            mov rbx, qword [rdi + 0x98] 	       853	rtc-cmos.c	FUNCTION_30
0x4000d98	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       857	rtc-cmos.c	FUNCTION_30	CALL_2
0x4000d9b	      0xe810f6ffff	               call sym.cmos_do_shutdown	       857	rtc-cmos.c	FUNCTION_30	CALL_2
0x4000da0	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       859	rtc-cmos.c	FUNCTION_30	IF_1	CALL_3
0x4000da3	            0x85ff	                           test edi, edi	       859	rtc-cmos.c	FUNCTION_30	IF_1	CALL_3
0x4000da5	            0x7e14	                           jle 0x4000dbb	       859	rtc-cmos.c	FUNCTION_30	IF_1	CALL_3
0x4000da7	          0x488b33	                    mov rsi, qword [rbx]	       860	rtc-cmos.c	FUNCTION_30	IF_1	CALL_4
0x4000daa	      0xe800000000	                          call 0x4000daf	       860	rtc-cmos.c	FUNCTION_30	IF_1	CALL_4
0x4000daf	    0x48c7c7000000	                              mov rdi, 0	       861	rtc-cmos.c	FUNCTION_30	IF_1	CALL_5
0x4000db6	      0xe800000000	                          call 0x4000dbb	       861	rtc-cmos.c	FUNCTION_30	IF_1	CALL_5
0x4000dbb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       866	rtc-cmos.c	FUNCTION_30
0x4000dbf	    0x48c703000000	                      mov qword [rbx], 0	       864	rtc-cmos.c	FUNCTION_30
0x4000dc6	    0x48c7c7000000	                              mov rdi, 0	       868	rtc-cmos.c	FUNCTION_30	CALL_7
0x4000dcd	        0x488b5008	                mov rdx, qword [rax + 8]	       868	rtc-cmos.c	FUNCTION_30	CALL_7
0x4000dd1	          0x488b30	                    mov rsi, qword [rax]	       868	rtc-cmos.c	FUNCTION_30	CALL_7
0x4000dd4	        0x4883c201	                              add rdx, 1	       868	rtc-cmos.c	FUNCTION_30	CALL_7
0x4000dd8	          0x4829f2	                            sub rdx, rsi	       868	rtc-cmos.c	FUNCTION_30	CALL_7
0x4000ddb	      0xe800000000	                          call 0x4000de0	       868	rtc-cmos.c	FUNCTION_30	CALL_7
0x4000de0	    0x48c743180000	               mov qword [rbx + 0x18], 0	       871	rtc-cmos.c	FUNCTION_30
0x4000de8	    0x48c743080000	                  mov qword [rbx + 8], 0	       873	rtc-cmos.c	FUNCTION_30
0x4000df0	              0x5b	                                 pop rbx	       874	rtc-cmos.c	FUNCTION_30
0x4000df1	              0xc3	                                     ret	       874	rtc-cmos.c	FUNCTION_30
cmos_checkintr	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,4:IF,2	29
0x4000240	            0x4154	                                push r12	       293	rtc-cmos.c	FUNCTION_18
0x4000242	              0x55	                                push rbp	       293	rtc-cmos.c	FUNCTION_18
0x4000243	          0x4989fc	                            mov r12, rdi	       293	rtc-cmos.c	FUNCTION_18
0x4000246	              0x53	                                push rbx	       293	rtc-cmos.c	FUNCTION_18
0x4000247	      0xbf0c000000	                            mov edi, 0xc	       299	rtc-cmos.c	FUNCTION_18	CALL_1
0x400024c	            0x89f3	                            mov ebx, esi	       293	rtc-cmos.c	FUNCTION_18
0x400024e	      0xe800000000	                          call 0x4000253	       299	rtc-cmos.c	FUNCTION_18	CALL_1
0x4000253	            0x89c5	                            mov ebp, eax	       299	rtc-cmos.c	FUNCTION_18	CALL_1
0x4000255	      0xe800000000	                          call 0x400025a	       301	rtc-cmos.c	FUNCTION_18	IF_1	CALL_2
0x400025a	            0x85c0	                           test eax, eax	       301	rtc-cmos.c	FUNCTION_18	IF_1	CALL_2
0x400025c	            0x750d	                           jne 0x400026b	       301	rtc-cmos.c	FUNCTION_18	IF_1	CALL_2
0x400025e	            0x89de	                            mov esi, ebx	       304	rtc-cmos.c	FUNCTION_18
0x4000260	          0x83e670	                           and esi, 0x70	       304	rtc-cmos.c	FUNCTION_18
0x4000263	          0x83ce80	                      or esi, 0xffffff80	       304	rtc-cmos.c	FUNCTION_18
0x4000266	          0x4020ee	                            and sil, bpl	        85	rtc-cmos.c	FUNCTION_1	IF_1
0x4000269	            0x7805	                            js 0x4000270	        85	rtc-cmos.c	FUNCTION_1	IF_1
0x400026b	              0x5b	                                 pop rbx	       307	rtc-cmos.c	FUNCTION_18
0x400026c	              0x5d	                                 pop rbp	       307	rtc-cmos.c	FUNCTION_18
0x400026d	            0x415c	                                 pop r12	       307	rtc-cmos.c	FUNCTION_18
0x400026f	              0xc3	                                     ret	       307	rtc-cmos.c	FUNCTION_18
0x4000270	        0x40f6c670	                          test sil, 0x70	       305	rtc-cmos.c	FUNCTION_18	IF_2	CALL_3
0x4000274	            0x74f5	                            je 0x400026b	       305	rtc-cmos.c	FUNCTION_18	IF_2	CALL_3
0x4000276	              0x5b	                                 pop rbx	       307	rtc-cmos.c	FUNCTION_18
0x4000277	        0x498b3c24	                    mov rdi, qword [r12]	       306	rtc-cmos.c	FUNCTION_18	CALL_4
0x400027b	        0x400fb6d6	                          movzx edx, sil	       306	rtc-cmos.c	FUNCTION_18	CALL_4
0x400027f	      0xbe01000000	                              mov esi, 1	       306	rtc-cmos.c	FUNCTION_18	CALL_4
0x4000284	              0x5d	                                 pop rbp	       307	rtc-cmos.c	FUNCTION_18
0x4000285	            0x415c	                                 pop r12	       307	rtc-cmos.c	FUNCTION_18
0x4000287	      0xe900000000	                           jmp 0x400028c	       306	rtc-cmos.c	FUNCTION_18	CALL_4
cmos_validate_alarm	FOR,0:WHILE,0:ELSE,3:functions,0:DO,0:SWITCH,0:CALL,13:IF,8	108
0x4000680	            0x4154	                                push r12	       339	rtc-cmos.c	FUNCTION_21
0x4000682	              0x55	                                push rbp	       339	rtc-cmos.c	FUNCTION_21
0x4000683	          0x4889fd	                            mov rbp, rdi	       339	rtc-cmos.c	FUNCTION_21
0x4000686	              0x53	                                push rbx	       339	rtc-cmos.c	FUNCTION_21
0x4000687	          0x4889f3	                            mov rbx, rsi	       339	rtc-cmos.c	FUNCTION_21
0x400068a	        0x4883ec50	                           sub rsp, 0x50	       339	rtc-cmos.c	FUNCTION_21
0x400068e	    0x4c8ba7980000	            mov r12, qword [rdi + 0x98] 	       339	rtc-cmos.c	FUNCTION_21
0x4000695	    0x65488b042528	                mov rax, qword gs:[0x28]	       339	rtc-cmos.c	FUNCTION_21
0x400069e	      0x4889442448	             mov qword [rsp + 0x48], rax	       339	rtc-cmos.c	FUNCTION_21
0x40006a3	            0x31c0	                            xor eax, eax	       339	rtc-cmos.c	FUNCTION_21
0x40006a5	    0x803d00000000	                cmp byte [0x040006ac], 0	       201	rtc-cmos.c	FUNCTION_15	IF_1	CALL_1
0x40006ac	     0xf84e2000000	                            je 0x4000794	       201	rtc-cmos.c	FUNCTION_15	IF_1	CALL_1
0x40006b2	    0x41807c243a00	                cmp byte [r12 + 0x3a], 0	       345	rtc-cmos.c	FUNCTION_21	IF_1
0x40006b8	     0xf84a0000000	                            je 0x400075e	       345	rtc-cmos.c	FUNCTION_21	IF_1
0x40006be	        0x488b0424	                    mov rax, qword [rsp]	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006c2	    0x41807c243b00	                cmp byte [r12 + 0x3b], 0	       357	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006c8	      0x4889442424	             mov qword [rsp + 0x24], rax	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006cd	      0x488b442408	                mov rax, qword [rsp + 8]	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006d2	      0x488944242c	             mov qword [rsp + 0x2c], rax	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006d7	     0xf85c4000000	                           jne 0x40007a1	       357	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006dd	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006e2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006e7	      0x488954243c	             mov qword [rsp + 0x3c], rdx	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006ec	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006f0	          0x83f80b	                            cmp eax, 0xb	       363	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x40006f3	      0x4889442434	             mov qword [rsp + 0x34], rax	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006f8	        0x89542444	             mov dword [rsp + 0x44], edx	       358	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3
0x40006fc	     0xf8417010000	                            je 0x4000819	       363	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x4000702	          0x8d7801	                      lea edi, [rax + 1]	       367	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	ELSE_2
0x4000705	        0x8b742438	            mov esi, dword [rsp + 0x38] 	       367	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	ELSE_2
0x4000709	        0x897c2434	             mov dword [rsp + 0x34], edi	       367	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	ELSE_2
0x400070d	      0xe800000000	                          call 0x4000712	       369	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	CALL_6
0x4000712	        0x3b442430	            cmp eax, dword [rsp + 0x30] 	       370	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_5
0x4000716	            0x7d04	                           jge 0x400071c	       370	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_5
0x4000718	        0x89442430	             mov dword [rsp + 0x30], eax	       371	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_5
0x400071c	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	       373	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	CALL_7
0x4000721	      0xe800000000	                          call 0x4000726	       373	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	CALL_7
0x4000726	        0x488d7b04	                      lea rdi, [rbx + 4]	       375	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	CALL_8
0x400072a	          0x4989c4	                            mov r12, rax	       373	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	CALL_7
0x400072d	        0x4983ec01	                              sub r12, 1	       376	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6
0x4000731	      0xe800000000	                          call 0x4000736	       375	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	CALL_8
0x4000736	          0x4939c4	                            cmp r12, rax	       376	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6
0x4000739	     0xf8cf4000000	                            jl 0x4000833	       376	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6
0x400073f	            0x31c0	                            xor eax, eax	       402	rtc-cmos.c	FUNCTION_21
0x4000741	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       403	rtc-cmos.c	FUNCTION_21
0x4000746	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       403	rtc-cmos.c	FUNCTION_21
0x400074f	     0xf85f7000000	                           jne 0x400084c	       403	rtc-cmos.c	FUNCTION_21
0x4000755	        0x4883c450	                           add rsp, 0x50	       403	rtc-cmos.c	FUNCTION_21
0x4000759	              0x5b	                                 pop rbx	       403	rtc-cmos.c	FUNCTION_21
0x400075a	              0x5d	                                 pop rbp	       403	rtc-cmos.c	FUNCTION_21
0x400075b	            0x415c	                                 pop r12	       403	rtc-cmos.c	FUNCTION_21
0x400075d	              0xc3	                                     ret	       403	rtc-cmos.c	FUNCTION_21
0x400075e	          0x4889e7	                            mov rdi, rsp	       349	rtc-cmos.c	FUNCTION_21	IF_1	CALL_3
0x4000761	      0xe800000000	                          call 0x4000766	       349	rtc-cmos.c	FUNCTION_21	IF_1	CALL_3
0x4000766	        0x488d7b04	                      lea rdi, [rbx + 4]	       351	rtc-cmos.c	FUNCTION_21	IF_1	CALL_4
0x400076a	          0x4989c4	                            mov r12, rax	       349	rtc-cmos.c	FUNCTION_21	IF_1	CALL_3
0x400076d	    0x4981c47f5101	                        add r12, 0x1517f	       352	rtc-cmos.c	FUNCTION_21	IF_1	IF_2
0x4000774	      0xe800000000	                          call 0x4000779	       351	rtc-cmos.c	FUNCTION_21	IF_1	CALL_4
0x4000779	          0x4939c4	                            cmp r12, rax	       352	rtc-cmos.c	FUNCTION_21	IF_1	IF_2
0x400077c	            0x7dc1	                           jge 0x400073f	       352	rtc-cmos.c	FUNCTION_21	IF_1	IF_2
0x400077e	    0x48c7c6000000	                              mov rsi, 0	       353	rtc-cmos.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000785	          0x4889ef	                            mov rdi, rbp	       353	rtc-cmos.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000788	      0xe800000000	                          call 0x400078d	       353	rtc-cmos.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x400078d	      0xb8eaffffff	                     mov eax, 0xffffffea	       355	rtc-cmos.c	FUNCTION_21	IF_1	IF_2
0x4000792	            0xebad	                           jmp 0x4000741	       355	rtc-cmos.c	FUNCTION_21	IF_1	IF_2
0x4000794	          0x4889e7	                            mov rdi, rsp	       208	rtc-cmos.c	FUNCTION_15	CALL_2
0x4000797	      0xe800000000	                          call 0x400079c	       208	rtc-cmos.c	FUNCTION_15	CALL_2
0x400079c	      0xe911ffffff	                           jmp 0x40006b2	       208	rtc-cmos.c	FUNCTION_15	CALL_2
0x40007a1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       382	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007a6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       382	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007ab	      0x488944243c	             mov qword [rsp + 0x3c], rax	       382	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007b0	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       382	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007b4	      0x48897c2434	             mov qword [rsp + 0x34], rdi	       382	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007b9	        0x89442444	             mov dword [rsp + 0x44], eax	       382	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007bd	          0x4889f8	                            mov rax, rdi	       387	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007c0	        0x48c1e820	                           shr rax, 0x20	       387	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007c4	          0x4889c6	                            mov rsi, rax	       387	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007c7	          0x83c601	                              add esi, 1	       387	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007ca	        0x89742438	             mov dword [rsp + 0x38], esi	       387	rtc-cmos.c	FUNCTION_21	ELSE_3
0x40007ce	      0xe800000000	                          call 0x40007d3	       388	rtc-cmos.c	FUNCTION_21	ELSE_3	CALL_10
0x40007d3	        0x3b442430	            cmp eax, dword [rsp + 0x30] 	       389	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_7
0x40007d7	            0x7d04	                           jge 0x40007dd	       389	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_7
0x40007d9	        0x89442430	             mov dword [rsp + 0x30], eax	       390	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_7
0x40007dd	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	       392	rtc-cmos.c	FUNCTION_21	ELSE_3	CALL_11
0x40007e2	      0xe800000000	                          call 0x40007e7	       392	rtc-cmos.c	FUNCTION_21	ELSE_3	CALL_11
0x40007e7	        0x488d7b04	                      lea rdi, [rbx + 4]	       394	rtc-cmos.c	FUNCTION_21	ELSE_3	CALL_12
0x40007eb	          0x4989c4	                            mov r12, rax	       392	rtc-cmos.c	FUNCTION_21	ELSE_3	CALL_11
0x40007ee	        0x4983ec01	                              sub r12, 1	       395	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8
0x40007f2	      0xe800000000	                          call 0x40007f7	       394	rtc-cmos.c	FUNCTION_21	ELSE_3	CALL_12
0x40007f7	          0x4939c4	                            cmp r12, rax	       395	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8
0x40007fa	     0xf8d3fffffff	                           jge 0x400073f	       395	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8
0x4000800	    0x48c7c6000000	                              mov rsi, 0	       396	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8	CALL_13
0x4000807	          0x4889ef	                            mov rdi, rbp	       396	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8	CALL_13
0x400080a	      0xe800000000	                          call 0x400080f	       396	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8	CALL_13
0x400080f	      0xb8eaffffff	                     mov eax, 0xffffffea	       398	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8
0x4000814	      0xe928ffffff	                           jmp 0x4000741	       398	rtc-cmos.c	FUNCTION_21	ELSE_3	IF_8
0x4000819	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       365	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x400081d	    0xc74424340000	               mov dword [rsp + 0x34], 0	       364	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x4000825	            0x31ff	                            xor edi, edi	       364	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x4000827	          0x8d7001	                      lea esi, [rax + 1]	       365	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x400082a	        0x89742438	             mov dword [rsp + 0x38], esi	       365	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x400082e	      0xe9dafeffff	                           jmp 0x400070d	       365	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_4
0x4000833	    0x48c7c6000000	                              mov rsi, 0	       377	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6	CALL_9
0x400083a	          0x4889ef	                            mov rdi, rbp	       377	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6	CALL_9
0x400083d	      0xe800000000	                          call 0x4000842	       377	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6	CALL_9
0x4000842	      0xb8eaffffff	                     mov eax, 0xffffffea	       379	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6
0x4000847	      0xe9f5feffff	                           jmp 0x4000741	       379	rtc-cmos.c	FUNCTION_21	ELSE_1	IF_3	IF_6
0x400084c	      0xe800000000	                          call 0x4000851	       403	rtc-cmos.c	FUNCTION_21
cmos_nvram_read	FOR,1:WHILE,0:ELSE,2:functions,0:DO,0:SWITCH,0:CALL,4:IF,2	41
0x4000070	            0x4155	                                push r13	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000072	            0x4154	                                push r12	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000074	          0x4989cd	                            mov r13, rcx	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000077	              0x55	                                push rbp	      1358	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000078	              0x53	                                push rbx	      1358	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000079	    0x48c7c7000000	                              mov rdi, 0	      1358	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000080	          0x4889d5	                            mov rbp, rdx	      1359	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000083	          0x8d5e0e	                    lea ebx, [rsi + 0xe]	      1363	rtc-cmos.c	FUNCTION_52	IF_4
0x4000086	      0xe800000000	                          call 0x400008b	      1363	rtc-cmos.c	FUNCTION_52	IF_4
0x400008b	          0x4d85ed	                           test r13, r13	      1362	rtc-cmos.c	FUNCTION_52	IF_4
0x400008e	            0x744d	                            je 0x40000dd	      1366	rtc-cmos.c	FUNCTION_52	IF_5
0x4000090	        0x4883c501	                              add rbp, 1	      1366	rtc-cmos.c	FUNCTION_52	IF_5
0x4000094	          0x4d89ec	                            mov r12, r13	      1366	rtc-cmos.c	FUNCTION_52	IF_5
0x4000097	            0xeb16	                           jmp 0x40000af	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x4000099	            0x89d8	                            mov eax, ebx	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x400009b	            0xe672	                            out 0x72, al	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x400009d	            0xe473	                             in al, 0x73	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x400009f	          0x8845ff	                  mov byte [rbp - 1], al	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x40000a2	          0x83c301	                              add ebx, 1	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x40000a5	        0x4883c501	                              add rbp, 1	      1370	rtc-cmos.c	FUNCTION_52
0x40000a9	        0x4983ec01	                              sub r12, 1	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000ad	            0x741c	                            je 0x40000cb	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000af	          0x83fb7f	                           cmp ebx, 0x7f	      1288	rtc-cmos.c	FUNCTION_49
0x40000b2	            0x77e5	                            ja 0x4000099	      1293	rtc-cmos.c	FUNCTION_49	CALL_2
0x40000b4	            0x89df	                            mov edi, ebx	      1293	rtc-cmos.c	FUNCTION_49	CALL_2
0x40000b6	        0x4883c501	                              add rbp, 1	      1288	rtc-cmos.c	FUNCTION_49
0x40000ba	          0x83c301	                              add ebx, 1	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000bd	      0xe800000000	                          call 0x40000c2	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000c2	          0x8845fe	                  mov byte [rbp - 2], al	      1119	rtc-cmos.c	FUNCTION_40	IF_1
0x40000c5	        0x4983ec01	                              sub r12, 1	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000c9	            0x75e4	                           jne 0x40000af	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000cb	          0x4489e8	                           mov eax, r13d	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000ce	    0xc60500000000	                mov byte [0x040000d5], 0	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000d5	              0xfb	                                     sti	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000d6	              0x5b	                                 pop rbx	      1296	rtc-cmos.c	FUNCTION_49	CALL_3
0x40000d7	              0x5d	                                 pop rbp	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000d8	            0x415c	                                 pop r12	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000da	            0x415d	                                 pop r13	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000dc	              0xc3	                                     ret	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000dd	            0x31c0	                            xor eax, eax	      1299	rtc-cmos.c	FUNCTION_49	CALL_5
0x40000df	            0xebed	                           jmp 0x40000ce	      1303	rtc-cmos.c	FUNCTION_49	CALL_6
rtc_wake_off	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,1:IF,0	3
0x4000040	            0x31f6	                            xor esi, esi	      1346	rtc-cmos.c	FUNCTION_52
0x4000042	      0xbf04000000	                              mov edi, 4	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
0x4000047	      0xe900000000	                           jmp 0x400004c	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
rtc_wake_on	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,2:IF,0	5
0x4000050	      0xbf04000000	                              mov edi, 4	      1351	rtc-cmos.c	FUNCTION_52	IF_1
0x4000055	      0xe800000000	                          call 0x400005a	      1352	rtc-cmos.c	FUNCTION_52	IF_1
0x400005a	            0x31f6	                            xor esi, esi	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x400005c	      0xbf04000000	                              mov edi, 4	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x4000061	      0xe900000000	                           jmp 0x4000066	      1355	rtc-cmos.c	FUNCTION_52	IF_2
cmos_platform_remove	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,1:IF,0	4
0x4000e00	        0x4883c710	                           add rdi, 0x10	      1308	rtc-cmos.c	FUNCTION_50	CALL_1
0x4000e04	      0xe887ffffff	                 call sym.cmos_do_remove	      1308	rtc-cmos.c	FUNCTION_50	CALL_1
0x4000e09	            0x31c0	                            xor eax, eax	      1310	rtc-cmos.c	FUNCTION_50
0x4000e0b	              0xc3	                                     ret	      1310	rtc-cmos.c	FUNCTION_50
cmos_irq_disable	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,4:IF,0	22
0x4000370	            0x4154	                                push r12	       327	rtc-cmos.c	FUNCTION_20
0x4000372	              0x55	                                push rbp	       327	rtc-cmos.c	FUNCTION_20
0x4000373	          0x4989fc	                            mov r12, rdi	       327	rtc-cmos.c	FUNCTION_20
0x4000376	              0x53	                                push rbx	       327	rtc-cmos.c	FUNCTION_20
0x4000377	            0x89f3	                            mov ebx, esi	       327	rtc-cmos.c	FUNCTION_20
0x4000379	      0xbf0b000000	                            mov edi, 0xb	       330	rtc-cmos.c	FUNCTION_20	CALL_1
0x400037e	            0xf7d3	                                 not ebx	       331	rtc-cmos.c	FUNCTION_20
0x4000380	            0x89f5	                            mov ebp, esi	       327	rtc-cmos.c	FUNCTION_20
0x4000382	      0xe800000000	                          call 0x4000387	       330	rtc-cmos.c	FUNCTION_20	CALL_1
0x4000387	            0x21d8	                            and eax, ebx	       331	rtc-cmos.c	FUNCTION_20
0x4000389	      0xbe0b000000	                            mov esi, 0xb	       332	rtc-cmos.c	FUNCTION_20	CALL_2
0x400038e	           0xfb6d8	                           movzx ebx, al	       332	rtc-cmos.c	FUNCTION_20	CALL_2
0x4000391	            0x89df	                            mov edi, ebx	       332	rtc-cmos.c	FUNCTION_20	CALL_2
0x4000393	      0xe800000000	                          call 0x4000398	       332	rtc-cmos.c	FUNCTION_20	CALL_2
0x4000398	        0x400fb6fd	                          movzx edi, bpl	       333	rtc-cmos.c	FUNCTION_20	CALL_3
0x400039c	      0xe800000000	                          call 0x40003a1	       333	rtc-cmos.c	FUNCTION_20	CALL_3
0x40003a1	            0x89de	                            mov esi, ebx	       335	rtc-cmos.c	FUNCTION_20	CALL_4
0x40003a3	          0x4c89e7	                            mov rdi, r12	       335	rtc-cmos.c	FUNCTION_20	CALL_4
0x40003a6	              0x5b	                                 pop rbx	       336	rtc-cmos.c	FUNCTION_20
0x40003a7	              0x5d	                                 pop rbp	       336	rtc-cmos.c	FUNCTION_20
0x40003a8	            0x415c	                                 pop r12	       336	rtc-cmos.c	FUNCTION_20
0x40003aa	      0xe991feffff	                  jmp sym.cmos_checkintr	       335	rtc-cmos.c	FUNCTION_20	CALL_4
cmos_init	FOR,0:WHILE,0:ELSE,0:functions,0:DO,0:SWITCH,0:CALL,3:IF,5	31
0x4000040	            0x31f6	                            xor esi, esi	      1346	rtc-cmos.c	FUNCTION_52
0x4000042	      0xbf04000000	                              mov edi, 4	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
0x4000047	      0xe900000000	                           jmp 0x400004c	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
0x400004c	         0xf1f4000	                         nop dword [rax]	      1350	rtc-cmos.c	FUNCTION_52	CALL_1
0x4000050	      0xbf04000000	                              mov edi, 4	      1351	rtc-cmos.c	FUNCTION_52	IF_1
0x4000055	      0xe800000000	                          call 0x400005a	      1352	rtc-cmos.c	FUNCTION_52	IF_1
0x400005a	            0x31f6	                            xor esi, esi	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x400005c	      0xbf04000000	                              mov edi, 4	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x4000061	      0xe900000000	                           jmp 0x4000066	      1355	rtc-cmos.c	FUNCTION_52	IF_2
0x4000066	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000070	            0x4155	                                push r13	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000072	            0x4154	                                push r12	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000074	          0x4989cd	                            mov r13, rcx	      1356	rtc-cmos.c	FUNCTION_52	IF_2	CALL_2
0x4000077	              0x55	                                push rbp	      1358	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000078	              0x53	                                push rbx	      1358	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000079	    0x48c7c7000000	                              mov rdi, 0	      1358	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000080	          0x4889d5	                            mov rbp, rdx	      1359	rtc-cmos.c	FUNCTION_52	IF_2	IF_3
0x4000083	          0x8d5e0e	                    lea ebx, [rsi + 0xe]	      1363	rtc-cmos.c	FUNCTION_52	IF_4
0x4000086	      0xe800000000	                          call 0x400008b	      1363	rtc-cmos.c	FUNCTION_52	IF_4
0x400008b	          0x4d85ed	                           test r13, r13	      1362	rtc-cmos.c	FUNCTION_52	IF_4
0x400008e	            0x744d	                            je 0x40000dd	      1366	rtc-cmos.c	FUNCTION_52	IF_5
0x4000090	        0x4883c501	                              add rbp, 1	      1366	rtc-cmos.c	FUNCTION_52	IF_5
0x4000094	          0x4d89ec	                            mov r12, r13	      1366	rtc-cmos.c	FUNCTION_52	IF_5
0x4000097	            0xeb16	                           jmp 0x40000af	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x4000099	            0x89d8	                            mov eax, ebx	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x400009b	            0xe672	                            out 0x72, al	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x400009d	            0xe473	                             in al, 0x73	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x400009f	          0x8845ff	                  mov byte [rbp - 1], al	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x40000a2	          0x83c301	                              add ebx, 1	      1367	rtc-cmos.c	FUNCTION_52	CALL_3
0x40000a5	              0x48	                                 invalid	      1370	rtc-cmos.c	FUNCTION_52
0x40000a6	              0x83	                                 invalid	      1370	rtc-cmos.c	FUNCTION_52
