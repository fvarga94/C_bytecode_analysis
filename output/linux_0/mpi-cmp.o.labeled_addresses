mpi_cmp	DO,0:functions,0:WHILE,0:ELSE,0:FOR,0:IF,6:CALL,3:SWITCH,0	49
0x4000040	              0x55	                                push rbp	        45	mpi-cmp.c	FUNCTION_2
0x4000041	              0x53	                                push rbx	        45	mpi-cmp.c	FUNCTION_2
0x4000042	          0x4889f5	                            mov rbp, rsi	        45	mpi-cmp.c	FUNCTION_2
0x4000045	          0x4889fb	                            mov rbx, rdi	        45	mpi-cmp.c	FUNCTION_2
0x4000048	      0xe800000000	                          call 0x400004d	        49	mpi-cmp.c	FUNCTION_2	CALL_1
0x400004d	          0x4889ef	                            mov rdi, rbp	        50	mpi-cmp.c	FUNCTION_2	CALL_2
0x4000050	      0xe800000000	                          call 0x4000055	        50	mpi-cmp.c	FUNCTION_2	CALL_2
0x4000055	        0x448b430c	              mov r8d, dword [rbx + 0xc]	        53	mpi-cmp.c	FUNCTION_2	IF_1
0x4000059	          0x8b5304	                mov edx, dword [rbx + 4]	        51	mpi-cmp.c	FUNCTION_2
0x400005c	          0x8b4d04	                mov ecx, dword [rbp + 4]	        52	mpi-cmp.c	FUNCTION_2
0x400005f	          0x4585c0	                           test r8d, r8d	        53	mpi-cmp.c	FUNCTION_2	IF_1
0x4000062	            0x7412	                            je 0x4000076	        53	mpi-cmp.c	FUNCTION_2	IF_1
0x4000064	          0x8b750c	              mov esi, dword [rbp + 0xc]	        55	mpi-cmp.c	FUNCTION_2	IF_2
0x4000067	            0x85f6	                           test esi, esi	        55	mpi-cmp.c	FUNCTION_2	IF_2
0x4000069	            0x7444	                            je 0x40000af	        55	mpi-cmp.c	FUNCTION_2	IF_2
0x400006b	            0x39ca	                            cmp edx, ecx	        57	mpi-cmp.c	FUNCTION_2	IF_3
0x400006d	            0x741e	                            je 0x400008d	        57	mpi-cmp.c	FUNCTION_2	IF_3
0x400006f	            0x89c8	                            mov eax, ecx	        60	mpi-cmp.c	FUNCTION_2	IF_4
0x4000071	            0x29d0	                            sub eax, edx	        60	mpi-cmp.c	FUNCTION_2	IF_4
0x4000073	              0x5b	                                 pop rbx	        67	mpi-cmp.c	FUNCTION_2
0x4000074	              0x5d	                                 pop rbp	        67	mpi-cmp.c	FUNCTION_2
0x4000075	              0xc3	                                     ret	        67	mpi-cmp.c	FUNCTION_2
0x4000076	          0x8b7d0c	              mov edi, dword [rbp + 0xc]	        53	mpi-cmp.c	FUNCTION_2	IF_1
0x4000079	      0xb801000000	                              mov eax, 1	        54	mpi-cmp.c	FUNCTION_2	IF_1
0x400007e	            0x85ff	                           test edi, edi	        53	mpi-cmp.c	FUNCTION_2	IF_1
0x4000080	            0x75f1	                           jne 0x4000073	        53	mpi-cmp.c	FUNCTION_2	IF_1
0x4000082	            0x39ca	                            cmp edx, ecx	        57	mpi-cmp.c	FUNCTION_2	IF_3
0x4000084	            0x7407	                            je 0x400008d	        57	mpi-cmp.c	FUNCTION_2	IF_3
0x4000086	            0x89d0	                            mov eax, edx	        58	mpi-cmp.c	FUNCTION_2	IF_3
0x4000088	            0x29c8	                            sub eax, ecx	        58	mpi-cmp.c	FUNCTION_2	IF_3
0x400008a	              0x5b	                                 pop rbx	        67	mpi-cmp.c	FUNCTION_2
0x400008b	              0x5d	                                 pop rbp	        67	mpi-cmp.c	FUNCTION_2
0x400008c	              0xc3	                                     ret	        67	mpi-cmp.c	FUNCTION_2
0x400008d	            0x31c0	                            xor eax, eax	        62	mpi-cmp.c	FUNCTION_2	IF_5
0x400008f	            0x85d2	                           test edx, edx	        61	mpi-cmp.c	FUNCTION_2	IF_5
0x4000091	            0x74e0	                            je 0x4000073	        61	mpi-cmp.c	FUNCTION_2	IF_5
0x4000093	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	        63	mpi-cmp.c	FUNCTION_2	CALL_3
0x4000097	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	        63	mpi-cmp.c	FUNCTION_2	CALL_3
0x400009b	      0xe800000000	                          call 0x40000a0	        63	mpi-cmp.c	FUNCTION_2	CALL_3
0x40000a0	          0x8b4b0c	              mov ecx, dword [rbx + 0xc]	        65	mpi-cmp.c	FUNCTION_2	IF_6
0x40000a3	            0x89c2	                            mov edx, eax	        65	mpi-cmp.c	FUNCTION_2	IF_6
0x40000a5	            0xf7da	                                 neg edx	        65	mpi-cmp.c	FUNCTION_2	IF_6
0x40000a7	              0x5b	                                 pop rbx	        67	mpi-cmp.c	FUNCTION_2
0x40000a8	            0x85c9	                           test ecx, ecx	        65	mpi-cmp.c	FUNCTION_2	IF_6
0x40000aa	           0xf45c2	                         cmovne eax, edx	        65	mpi-cmp.c	FUNCTION_2	IF_6
0x40000ad	              0x5d	                                 pop rbp	        67	mpi-cmp.c	FUNCTION_2
0x40000ae	              0xc3	                                     ret	        67	mpi-cmp.c	FUNCTION_2
0x40000af	      0xb8ffffffff	                     mov eax, 0xffffffff	        56	mpi-cmp.c	FUNCTION_2	IF_2
0x40000b4	            0xebbd	                           jmp 0x4000073	        56	mpi-cmp.c	FUNCTION_2	IF_2
